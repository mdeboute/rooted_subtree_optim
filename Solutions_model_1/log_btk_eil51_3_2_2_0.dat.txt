Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 7.31189e-05 - average 8.03504e-07, 5 fixed columns
Coin0506I Presolve 77 (-14) rows, 44 (-7) columns and 235 (-41) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 38.393466
Clp0000I Optimal - objective value 38.393466
Coin0511I After Postsolve, objective 38.393466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.393466
Clp0000I Optimal - objective value 38.393466
Clp0000I Optimal - objective value 38.393466
Coin0511I After Postsolve, objective 38.393466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.39346602 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.84981
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.66731 iterations 46
Cbc0038I Solution found of 2.66731
Cbc0038I Relaxing continuous gives 2.66731
Cbc0038I Rounding solution of 0.99996 is better than previous of 2.66731

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 0.99996 to -8.16898 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.1915
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.30389 (6) obj. -11.1915 iterations 9
Cbc0038I Pass   3: suminf.    1.00856 (11) obj. -11.1915 iterations 2
Cbc0038I Pass   4: suminf.    1.43851 (7) obj. -11.1915 iterations 10
Cbc0038I Pass   5: suminf.    1.43851 (7) obj. -11.1915 iterations 0
Cbc0038I Pass   6: suminf.    1.69845 (6) obj. -11.1915 iterations 11
Cbc0038I Pass   7: suminf.    1.45734 (7) obj. -11.1915 iterations 4
Cbc0038I Pass   8: suminf.    2.47815 (7) obj. -11.1915 iterations 8
Cbc0038I Pass   9: suminf.    2.42123 (7) obj. -11.1915 iterations 2
Cbc0038I Pass  10: suminf.    2.34335 (8) obj. -11.1915 iterations 1
Cbc0038I Pass  11: suminf.    2.88663 (8) obj. -11.1915 iterations 9
Cbc0038I Pass  12: suminf.    1.81293 (6) obj. -11.1915 iterations 6
Cbc0038I Pass  13: suminf.    1.00856 (11) obj. -11.1915 iterations 9
Cbc0038I Pass  14: suminf.    1.43851 (7) obj. -11.1915 iterations 10
Cbc0038I Pass  15: suminf.    1.43851 (7) obj. -11.1915 iterations 0
Cbc0038I Pass  16: suminf.    1.69845 (6) obj. -11.1915 iterations 11
Cbc0038I Pass  17: suminf.    1.45734 (7) obj. -11.1915 iterations 4
Cbc0038I Pass  18: suminf.    2.47815 (7) obj. -11.1915 iterations 8
Cbc0038I Pass  19: suminf.    2.42123 (7) obj. -11.1915 iterations 2
Cbc0038I Pass  20: suminf.    2.34335 (8) obj. -11.1915 iterations 1
Cbc0038I Pass  21: suminf.    2.88663 (8) obj. -11.1915 iterations 9
Cbc0038I Pass  22: suminf.    1.81293 (6) obj. -11.1915 iterations 6
Cbc0038I Pass  23: suminf.    1.00856 (11) obj. -11.1915 iterations 9
Cbc0038I Pass  24: suminf.    1.43851 (7) obj. -11.1915 iterations 10
Cbc0038I Pass  25: suminf.    1.43851 (7) obj. -11.1915 iterations 0
Cbc0038I Pass  26: suminf.    1.69845 (6) obj. -11.1915 iterations 11
Cbc0038I Pass  27: suminf.    1.45734 (7) obj. -11.1915 iterations 4
Cbc0038I Pass  28: suminf.    2.47815 (7) obj. -11.1915 iterations 8
Cbc0038I Pass  29: suminf.    2.42123 (7) obj. -11.1915 iterations 2
Cbc0038I Pass  30: suminf.    2.34335 (8) obj. -11.1915 iterations 1
Cbc0038I Pass  31: suminf.    2.88663 (8) obj. -11.1915 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -8.16898 to -8.36742 (0.11 seconds)
Cbc0038I Round again with cutoff of -16.6319
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.33499 (13) obj. -16.6319 iterations 4
Cbc0038I Pass  32: suminf.    2.05289 (13) obj. -16.6319 iterations 4
Cbc0038I Pass  33: suminf.    2.90770 (9) obj. -16.6319 iterations 16
Cbc0038I Pass  34: suminf.    2.23888 (7) obj. -16.6319 iterations 3
Cbc0038I Pass  35: suminf.    1.90268 (8) obj. -16.6319 iterations 5
Cbc0038I Pass  36: suminf.    1.81243 (7) obj. -16.6319 iterations 11
Cbc0038I Pass  37: suminf.    1.81243 (7) obj. -16.6319 iterations 0
Cbc0038I Pass  38: suminf.    2.28974 (10) obj. -16.6319 iterations 12
Cbc0038I Pass  39: suminf.    2.28974 (10) obj. -16.6319 iterations 1
Cbc0038I Pass  40: suminf.    3.07064 (8) obj. -16.6319 iterations 10
Cbc0038I Pass  41: suminf.    2.80813 (8) obj. -16.6319 iterations 5
Cbc0038I Pass  42: suminf.    2.85286 (8) obj. -16.6319 iterations 9
Cbc0038I Pass  43: suminf.    2.28974 (10) obj. -16.6319 iterations 7
Cbc0038I Pass  44: suminf.    2.28974 (10) obj. -16.6319 iterations 1
Cbc0038I Pass  45: suminf.    3.07064 (8) obj. -16.6319 iterations 10
Cbc0038I Pass  46: suminf.    2.80813 (8) obj. -16.6319 iterations 5
Cbc0038I Pass  47: suminf.    2.85286 (8) obj. -16.6319 iterations 9
Cbc0038I Pass  48: suminf.    2.28974 (10) obj. -16.6319 iterations 7
Cbc0038I Pass  49: suminf.    2.28974 (10) obj. -16.6319 iterations 1
Cbc0038I Pass  50: suminf.    3.07064 (8) obj. -16.6319 iterations 10
Cbc0038I Pass  51: suminf.    2.80813 (8) obj. -16.6319 iterations 5
Cbc0038I Pass  52: suminf.    2.85286 (8) obj. -16.6319 iterations 9
Cbc0038I Pass  53: suminf.    2.28974 (10) obj. -16.6319 iterations 7
Cbc0038I Pass  54: suminf.    2.28974 (10) obj. -16.6319 iterations 1
Cbc0038I Pass  55: suminf.    3.07064 (8) obj. -16.6319 iterations 10
Cbc0038I Pass  56: suminf.    2.80813 (8) obj. -16.6319 iterations 5
Cbc0038I Pass  57: suminf.    2.85286 (8) obj. -16.6319 iterations 9
Cbc0038I Pass  58: suminf.    2.28974 (10) obj. -16.6319 iterations 7
Cbc0038I Pass  59: suminf.    2.28974 (10) obj. -16.6319 iterations 1
Cbc0038I Pass  60: suminf.    3.07064 (8) obj. -16.6319 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 70 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -8.36742 - took 0.15 seconds
Cbc0012I Integer solution of -8.36742 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 27 added rows had average density of 39.148148
Cbc0013I At root node, 27 cuts changed objective from -38.393466 to -28.010875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8854 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1761 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -8.36742 best solution, best possible -28.010875 (0.69 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 7 rows 11 columns
Cbc0001I Search completed - best objective -8.367419999999996, took 7604 iterations and 74 nodes (0.87 seconds)
Cbc0032I Strong branching done 696 times (11588 iterations), fathomed 9 nodes and fixed 22 variables
Cbc0035I Maximum depth 18, 89 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.88

