Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 8.49375e-05 - average 9.23233e-07, 5 fixed columns
Coin0506I Presolve 83 (-9) rows, 46 (-5) columns and 250 (-28) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Coin0511I After Postsolve, objective 52.394439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Coin0511I After Postsolve, objective 52.394439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.3944393 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.37677
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.49767 iterations 34
Cbc0038I Solution found of -0.49767
Cbc0038I Relaxing continuous gives -0.49767
Cbc0038I Rounding solution of -11.1429 is better than previous of -0.49767

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -11.1429 to -20.9683 (0.04 seconds)
Cbc0038I Round again with cutoff of -24.111
Cbc0038I Pass   2: suminf.    2.22437 (9) obj. -24.111 iterations 10
Cbc0038I Pass   3: suminf.    0.99505 (5) obj. -24.111 iterations 8
Cbc0038I Pass   4: suminf.    0.99505 (5) obj. -24.111 iterations 0
Cbc0038I Pass   5: suminf.    2.77506 (7) obj. -24.111 iterations 9
Cbc0038I Pass   6: suminf.    1.46915 (6) obj. -24.111 iterations 6
Cbc0038I Pass   7: suminf.    1.39509 (6) obj. -24.111 iterations 1
Cbc0038I Pass   8: suminf.    1.33597 (5) obj. -24.111 iterations 7
Cbc0038I Pass   9: suminf.    0.99280 (5) obj. -24.111 iterations 1
Cbc0038I Pass  10: suminf.    1.96700 (5) obj. -24.111 iterations 7
Cbc0038I Pass  11: suminf.    1.96700 (5) obj. -24.111 iterations 0
Cbc0038I Pass  12: suminf.    1.43664 (5) obj. -24.111 iterations 3
Cbc0038I Pass  13: suminf.    1.31566 (6) obj. -24.111 iterations 2
Cbc0038I Pass  14: suminf.    2.73567 (10) obj. -24.111 iterations 10
Cbc0038I Pass  15: suminf.    1.18745 (5) obj. -24.111 iterations 10
Cbc0038I Pass  16: suminf.    1.18745 (5) obj. -24.111 iterations 0
Cbc0038I Pass  17: suminf.    2.86983 (10) obj. -24.111 iterations 8
Cbc0038I Pass  18: suminf.    1.43912 (6) obj. -24.111 iterations 9
Cbc0038I Pass  19: suminf.    1.26945 (5) obj. -24.111 iterations 1
Cbc0038I Pass  20: suminf.    2.14311 (8) obj. -24.111 iterations 9
Cbc0038I Pass  21: suminf.    1.06842 (5) obj. -24.111 iterations 4
Cbc0038I Pass  22: suminf.    1.07137 (5) obj. -24.111 iterations 1
Cbc0038I Pass  23: suminf.    2.22437 (9) obj. -24.111 iterations 6
Cbc0038I Pass  24: suminf.    0.99505 (5) obj. -24.111 iterations 8
Cbc0038I Pass  25: suminf.    0.99505 (5) obj. -24.111 iterations 0
Cbc0038I Pass  26: suminf.    2.77506 (7) obj. -24.111 iterations 9
Cbc0038I Pass  27: suminf.    1.46915 (6) obj. -24.111 iterations 6
Cbc0038I Pass  28: suminf.    1.39509 (6) obj. -24.111 iterations 1
Cbc0038I Pass  29: suminf.    1.33597 (5) obj. -24.111 iterations 7
Cbc0038I Pass  30: suminf.    0.99280 (5) obj. -24.111 iterations 1
Cbc0038I Pass  31: suminf.    1.96700 (5) obj. -24.111 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -20.9683 - took 0.05 seconds
Cbc0012I Integer solution of -20.96833 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0031I 23 added rows had average density of 31.086957
Cbc0013I At root node, 23 cuts changed objective from -52.394439 to -42.2534 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6089 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1125 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.96832999999999, took 6127 iterations and 32 nodes (0.54 seconds)
Cbc0032I Strong branching done 480 times (8931 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 15, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.54

