Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 23 (-6) rows, 13 (-2) columns and 65 (-10) elements
Clp1000I sum of infeasibilities 2.00252e-09 - average 8.70659e-11, 0 fixed columns
Coin0506I Presolve 23 (0) rows, 13 (0) columns and 65 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 52.953861
Clp0000I Optimal - objective value 52.953861
Coin0511I After Postsolve, objective 52.953861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.953861
Clp0000I Optimal - objective value 52.953861
Clp0000I Optimal - objective value 52.953861
Coin0511I After Postsolve, objective 52.953861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.95386064 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 64 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 12.251%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.89695
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.92 iterations 5
Cbc0038I Solution found of -19.92
Cbc0038I Relaxing continuous gives -19.92
Cbc0038I Rounding solution of -31 is better than previous of -19.92

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.7726
Cbc0038I Pass   2: suminf.    0.57938 (2) obj. -32.7726 iterations 1
Cbc0038I Pass   3: suminf.    0.21001 (2) obj. -32.7726 iterations 2
Cbc0038I Pass   4: suminf.    0.21001 (2) obj. -32.7726 iterations 0
Cbc0038I Pass   5: suminf.    0.79070 (2) obj. -32.7726 iterations 1
Cbc0038I Pass   6: suminf.    1.08909 (3) obj. -32.7726 iterations 2
Cbc0038I Pass   7: suminf.    0.90183 (3) obj. -32.7726 iterations 1
Cbc0038I Pass   8: suminf.    0.57938 (2) obj. -32.7726 iterations 1
Cbc0038I Pass   9: suminf.    0.21001 (2) obj. -32.7726 iterations 2
Cbc0038I Pass  10: suminf.    0.21001 (2) obj. -32.7726 iterations 0
Cbc0038I Pass  11: suminf.    0.79070 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  12: suminf.    0.79070 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  13: suminf.    0.87364 (3) obj. -32.7726 iterations 4
Cbc0038I Pass  14: suminf.    0.22193 (3) obj. -32.7726 iterations 3
Cbc0038I Pass  15: suminf.    0.06828 (1) obj. -32.7726 iterations 3
Cbc0038I Pass  16: suminf.    0.77692 (2) obj. -32.7726 iterations 2
Cbc0038I Pass  17: suminf.    0.57938 (2) obj. -32.7726 iterations 3
Cbc0038I Pass  18: suminf.    0.21001 (2) obj. -32.7726 iterations 2
Cbc0038I Pass  19: suminf.    0.21001 (2) obj. -32.7726 iterations 0
Cbc0038I Pass  20: suminf.    0.79070 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  21: suminf.    0.21001 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  22: suminf.    0.79070 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  23: suminf.    0.57938 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  24: suminf.    0.21001 (2) obj. -32.7726 iterations 2
Cbc0038I Pass  25: suminf.    0.21001 (2) obj. -32.7726 iterations 0
Cbc0038I Pass  26: suminf.    0.87364 (3) obj. -32.7726 iterations 4
Cbc0038I Pass  27: suminf.    0.21001 (2) obj. -32.7726 iterations 3
Cbc0038I Pass  28: suminf.    0.79070 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  29: suminf.    0.57938 (2) obj. -32.7726 iterations 1
Cbc0038I Pass  30: suminf.    0.21001 (2) obj. -32.7726 iterations 2
Cbc0038I Pass  31: suminf.    1.36710 (4) obj. -32.7726 iterations 5
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -35.963
Cbc0038I Pass  31: suminf.    0.72320 (2) obj. -35.963 iterations 0
Cbc0038I Pass  32: suminf.    0.39490 (3) obj. -35.963 iterations 3
Cbc0038I Pass  33: suminf.    0.39490 (3) obj. -35.963 iterations 0
Cbc0038I Pass  34: suminf.    1.18777 (4) obj. -35.963 iterations 5
Cbc0038I Pass  35: suminf.    1.03781 (5) obj. -35.963 iterations 1
Cbc0038I Pass  36: suminf.    0.83314 (4) obj. -35.963 iterations 6
Cbc0038I Pass  37: suminf.    0.83314 (4) obj. -35.963 iterations 0
Cbc0038I Pass  38: suminf.    1.53178 (4) obj. -35.963 iterations 3
Cbc0038I Pass  39: suminf.    1.02148 (4) obj. -35.963 iterations 1
Cbc0038I Pass  40: suminf.    1.02148 (4) obj. -35.963 iterations 0
Cbc0038I Pass  41: suminf.    0.90366 (4) obj. -35.963 iterations 3
Cbc0038I Pass  42: suminf.    0.90366 (4) obj. -35.963 iterations 0
Cbc0038I Pass  43: suminf.    1.02148 (4) obj. -35.963 iterations 3
Cbc0038I Pass  44: suminf.    1.29287 (5) obj. -35.963 iterations 2
Cbc0038I Pass  45: suminf.    1.98927 (7) obj. -35.963 iterations 4
Cbc0038I Pass  46: suminf.    1.00199 (4) obj. -35.963 iterations 3
Cbc0038I Pass  47: suminf.    2.11234 (6) obj. -35.963 iterations 4
Cbc0038I Pass  48: suminf.    1.46240 (7) obj. -35.963 iterations 2
Cbc0038I Pass  49: suminf.    1.23333 (3) obj. -35.963 iterations 7
Cbc0038I Pass  50: suminf.    0.72320 (2) obj. -35.963 iterations 5
Cbc0038I Pass  51: suminf.    0.39490 (3) obj. -35.963 iterations 3
Cbc0038I Pass  52: suminf.    0.39490 (3) obj. -35.963 iterations 0
Cbc0038I Pass  53: suminf.    1.18777 (4) obj. -35.963 iterations 5
Cbc0038I Pass  54: suminf.    1.03781 (5) obj. -35.963 iterations 1
Cbc0038I Pass  55: suminf.    0.83314 (4) obj. -35.963 iterations 6
Cbc0038I Pass  56: suminf.    0.83314 (4) obj. -35.963 iterations 0
Cbc0038I Pass  57: suminf.    1.53178 (4) obj. -35.963 iterations 3
Cbc0038I Pass  58: suminf.    1.02148 (4) obj. -35.963 iterations 1
Cbc0038I Pass  59: suminf.    1.02148 (4) obj. -35.963 iterations 0
Cbc0038I Pass  60: suminf.    0.90366 (4) obj. -35.963 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -31 - took 0.02 seconds
Cbc0012I Integer solution of -31 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 8 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -48.724729 to -48.724729 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

