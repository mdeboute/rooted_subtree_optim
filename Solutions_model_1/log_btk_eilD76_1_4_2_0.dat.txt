Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 74 (-4) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 7.64077e-05 - average 5.96935e-07, 9 fixed columns
Coin0506I Presolve 113 (-15) rows, 65 (-9) columns and 348 (-48) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 0.33427539 - largest nonzero change 0 ( 0%) - largest zero change 2.8202342e-05
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Coin0511I After Postsolve, objective 39.011157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Coin0511I After Postsolve, objective 39.011157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.01115675 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 74 columns (73 integer (73 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 12.4034
Cbc0038I Solution found of 4.29018
Cbc0038I Relaxing continuous gives -7.56314
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -7.56314 to -7.98871 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.091
Cbc0038I Pass   1: suminf.    1.20723 (40) obj. -11.091 iterations 23
Cbc0038I Pass   2: suminf.    1.18947 (7) obj. -11.091 iterations 35
Cbc0038I Pass   3: suminf.    0.80625 (6) obj. -11.091 iterations 3
Cbc0038I Pass   4: suminf.    1.82079 (5) obj. -11.091 iterations 15
Cbc0038I Pass   5: suminf.    1.47819 (6) obj. -11.091 iterations 2
Cbc0038I Pass   6: suminf.    1.37942 (5) obj. -11.091 iterations 1
Cbc0038I Pass   7: suminf.    1.42812 (4) obj. -11.091 iterations 7
Cbc0038I Pass   8: suminf.    1.42812 (4) obj. -11.091 iterations 0
Cbc0038I Pass   9: suminf.    1.60891 (4) obj. -11.091 iterations 3
Cbc0038I Pass  10: suminf.    1.60891 (4) obj. -11.091 iterations 0
Cbc0038I Pass  11: suminf.    1.71370 (4) obj. -11.091 iterations 2
Cbc0038I Pass  12: suminf.    1.71370 (4) obj. -11.091 iterations 0
Cbc0038I Pass  13: suminf.    2.33551 (9) obj. -11.091 iterations 16
Cbc0038I Pass  14: suminf.    1.36199 (5) obj. -11.091 iterations 17
Cbc0038I Pass  15: suminf.    1.25906 (5) obj. -11.091 iterations 8
Cbc0038I Pass  16: suminf.    1.12583 (4) obj. -11.091 iterations 1
Cbc0038I Pass  17: suminf.    1.37082 (4) obj. -11.091 iterations 3
Cbc0038I Pass  18: suminf.    1.00468 (3) obj. -11.091 iterations 1
Cbc0038I Pass  19: suminf.    0.94724 (3) obj. -11.091 iterations 1
Cbc0038I Pass  20: suminf.    1.46296 (5) obj. -11.091 iterations 4
Cbc0038I Pass  21: suminf.    1.27181 (4) obj. -11.091 iterations 1
Cbc0038I Pass  22: suminf.    1.27181 (4) obj. -11.091 iterations 0
Cbc0038I Pass  23: suminf.    1.73200 (6) obj. -11.091 iterations 3
Cbc0038I Pass  24: suminf.    1.73200 (6) obj. -11.091 iterations 0
Cbc0038I Pass  25: suminf.    2.06269 (5) obj. -11.091 iterations 4
Cbc0038I Pass  26: suminf.    1.86610 (6) obj. -11.091 iterations 2
Cbc0038I Pass  27: suminf.    1.86610 (6) obj. -11.091 iterations 0
Cbc0038I Pass  28: suminf.    2.06670 (5) obj. -11.091 iterations 4
Cbc0038I Pass  29: suminf.    1.73200 (6) obj. -11.091 iterations 2
Cbc0038I Pass  30: suminf.    1.73200 (6) obj. -11.091 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 95 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.98871 - took 0.10 seconds
Cbc0012I Integer solution of -7.988714 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 76 rows 44 columns
Cbc0031I 22 added rows had average density of 61.181818
Cbc0013I At root node, 22 cuts changed objective from -39.011157 to -30.806131 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1903 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.988714 best solution, best possible -30.806131 (0.93 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 24 rows 22 columns
Cbc0016I Integer solution of -8.004582 found by strong branching after 8348 iterations and 49 nodes (1.17 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 69 rows 42 columns
Cbc0038I Full problem 128 rows 74 columns, reduced to 29 rows 23 columns
Cbc0001I Search completed - best objective -8.004581999999992, took 11828 iterations and 314 nodes (1.50 seconds)
Cbc0032I Strong branching done 1612 times (21450 iterations), fathomed 38 nodes and fixed 66 variables
Cbc0035I Maximum depth 44, 895 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.51

