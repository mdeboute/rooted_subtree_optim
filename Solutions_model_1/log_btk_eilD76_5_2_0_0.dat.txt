Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 5.36567e-05 - average 4.00423e-07, 11 fixed columns
Coin0506I Presolve 114 (-20) rows, 64 (-11) columns and 349 (-61) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Coin0511I After Postsolve, objective 65.835577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Coin0511I After Postsolve, objective 65.835577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.83557695 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.1513
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.24618 iterations 59
Cbc0038I Solution found of -7.24618
Cbc0038I Relaxing continuous gives -7.24618
Cbc0038I Rounding solution of -16.1088 is better than previous of -7.24618

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -16.1088 to -37.0829 (0.04 seconds)
Cbc0038I Round again with cutoff of -39.9583
Cbc0038I Pass   2: suminf.    3.56790 (17) obj. -39.9583 iterations 27
Cbc0038I Pass   3: suminf.    3.26256 (11) obj. -39.9583 iterations 6
Cbc0038I Pass   4: suminf.    2.18480 (8) obj. -39.9583 iterations 18
Cbc0038I Pass   5: suminf.    2.18480 (8) obj. -39.9583 iterations 0
Cbc0038I Pass   6: suminf.    3.21294 (9) obj. -39.9583 iterations 17
Cbc0038I Pass   7: suminf.    2.58264 (11) obj. -39.9583 iterations 8
Cbc0038I Pass   8: suminf.    2.46679 (8) obj. -39.9583 iterations 2
Cbc0038I Pass   9: suminf.    2.58578 (8) obj. -39.9583 iterations 12
Cbc0038I Pass  10: suminf.    1.73738 (6) obj. -39.9583 iterations 4
Cbc0038I Pass  11: suminf.    2.48103 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  12: suminf.    1.78351 (5) obj. -39.9583 iterations 21
Cbc0038I Pass  13: suminf.    1.04666 (4) obj. -39.9583 iterations 23
Cbc0038I Pass  14: suminf.    1.84190 (5) obj. -39.9583 iterations 5
Cbc0038I Pass  15: suminf.    1.35009 (8) obj. -39.9583 iterations 3
Cbc0038I Pass  16: suminf.    1.67274 (5) obj. -39.9583 iterations 12
Cbc0038I Pass  17: suminf.    1.30459 (5) obj. -39.9583 iterations 3
Cbc0038I Pass  18: suminf.    2.45550 (7) obj. -39.9583 iterations 11
Cbc0038I Pass  19: suminf.    2.22890 (9) obj. -39.9583 iterations 5
Cbc0038I Pass  20: suminf.    2.07218 (8) obj. -39.9583 iterations 1
Cbc0038I Pass  21: suminf.    1.73738 (6) obj. -39.9583 iterations 12
Cbc0038I Pass  22: suminf.    1.73738 (6) obj. -39.9583 iterations 0
Cbc0038I Pass  23: suminf.    2.48103 (8) obj. -39.9583 iterations 9
Cbc0038I Pass  24: suminf.    2.46679 (8) obj. -39.9583 iterations 3
Cbc0038I Pass  25: suminf.    2.58578 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  26: suminf.    2.87936 (8) obj. -39.9583 iterations 15
Cbc0038I Pass  27: suminf.    2.23657 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  28: suminf.    1.85952 (8) obj. -39.9583 iterations 13
Cbc0038I Pass  29: suminf.    1.66918 (6) obj. -39.9583 iterations 1
Cbc0038I Pass  30: suminf.    1.42827 (5) obj. -39.9583 iterations 9
Cbc0038I Pass  31: suminf.    1.42078 (5) obj. -39.9583 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -37.0829 to -38.3774 (0.10 seconds)
Cbc0038I Round again with cutoff of -45.1337
Cbc0038I Pass  31: suminf.    4.32720 (17) obj. -45.1337 iterations 0
Cbc0038I Pass  32: suminf.    3.99240 (15) obj. -45.1337 iterations 2
Cbc0038I Pass  33: suminf.    2.97405 (9) obj. -45.1337 iterations 17
Cbc0038I Pass  34: suminf.    2.68450 (8) obj. -45.1337 iterations 7
Cbc0038I Pass  35: suminf.    3.02565 (7) obj. -45.1337 iterations 10
Cbc0038I Pass  36: suminf.    2.52339 (9) obj. -45.1337 iterations 4
Cbc0038I Pass  37: suminf.    2.52339 (9) obj. -45.1337 iterations 0
Cbc0038I Pass  38: suminf.    2.80562 (8) obj. -45.1337 iterations 11
Cbc0038I Pass  39: suminf.    2.77936 (8) obj. -45.1337 iterations 4
Cbc0038I Pass  40: suminf.    2.67487 (8) obj. -45.1337 iterations 9
Cbc0038I Pass  41: suminf.    4.44635 (14) obj. -45.1337 iterations 30
Cbc0038I Pass  42: suminf.    4.05137 (15) obj. -45.1337 iterations 9
Cbc0038I Pass  43: suminf.    3.75223 (9) obj. -45.1337 iterations 20
Cbc0038I Pass  44: suminf.    2.83539 (9) obj. -45.1337 iterations 6
Cbc0038I Pass  45: suminf.    2.36147 (9) obj. -45.1337 iterations 15
Cbc0038I Pass  46: suminf.    2.36147 (9) obj. -45.1337 iterations 1
Cbc0038I Pass  47: suminf.    3.55736 (10) obj. -45.1337 iterations 11
Cbc0038I Pass  48: suminf.    3.14975 (10) obj. -45.1337 iterations 5
Cbc0038I Pass  49: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  50: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I Pass  51: suminf.    2.11938 (7) obj. -45.1337 iterations 5
Cbc0038I Pass  52: suminf.    3.27767 (10) obj. -45.1337 iterations 9
Cbc0038I Pass  53: suminf.    3.14975 (10) obj. -45.1337 iterations 2
Cbc0038I Pass  54: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  55: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I Pass  56: suminf.    2.11938 (7) obj. -45.1337 iterations 5
Cbc0038I Pass  57: suminf.    3.27767 (10) obj. -45.1337 iterations 9
Cbc0038I Pass  58: suminf.    3.14975 (10) obj. -45.1337 iterations 2
Cbc0038I Pass  59: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  60: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 84 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -38.3774 - took 0.14 seconds
Cbc0012I Integer solution of -38.37738 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 76 rows 44 columns
Cbc0031I 31 added rows had average density of 52.387097
Cbc0013I At root node, 31 cuts changed objective from -65.835577 to -53.817229 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12944 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2501 row cuts average 74.3 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 189 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 68.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.37738 best solution, best possible -53.817229 (1.07 seconds)
Cbc0012I Integer solution of -38.73125 found by rounding after 9871 iterations and 55 nodes (1.28 seconds)
Cbc0001I Search completed - best objective -38.73125, took 9993 iterations and 60 nodes (1.29 seconds)
Cbc0032I Strong branching done 716 times (14033 iterations), fathomed 7 nodes and fixed 42 variables
Cbc0035I Maximum depth 16, 144 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.31

