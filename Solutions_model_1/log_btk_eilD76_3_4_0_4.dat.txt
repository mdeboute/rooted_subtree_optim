Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 64 (-14) columns and 352 (-101) elements
Clp1000I sum of infeasibilities 1.56406e-05 - average 1.36005e-07, 15 fixed columns
Coin0506I Presolve 57 (-58) rows, 44 (-20) columns and 196 (-156) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 2.808309 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Coin0511I After Postsolve, objective 433.87421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Clp0000I Optimal - objective value 433.87421
Coin0511I After Postsolve, objective 433.87421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 433.8742132 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 64 columns (63 integer (63 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.30321
Cbc0038I Pass   1: suminf.    0.20833 (1) obj. -387.151 iterations 21
Cbc0038I Pass   2: suminf.    0.20833 (1) obj. -387.151 iterations 0
Cbc0038I Solution found of -345.153
Cbc0038I Relaxing continuous gives -345.153
Cbc0038I Rounding solution of -358.516 is better than previous of -345.153

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -358.516 to -394.014 (0.01 seconds)
Cbc0038I Round again with cutoff of -398
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73546 (2) obj. -398 iterations 1
Cbc0038I Pass   4: suminf.    0.36944 (1) obj. -398 iterations 2
Cbc0038I Pass   5: suminf.    0.29630 (1) obj. -398 iterations 1
Cbc0038I Pass   6: suminf.    1.01388 (4) obj. -398 iterations 12
Cbc0038I Pass   7: suminf.    0.91971 (3) obj. -398 iterations 6
Cbc0038I Pass   8: suminf.    1.17923 (3) obj. -398 iterations 5
Cbc0038I Pass   9: suminf.    0.42857 (1) obj. -398 iterations 5
Cbc0038I Pass  10: suminf.    0.33389 (1) obj. -398 iterations 6
Cbc0038I Pass  11: suminf.    0.45435 (2) obj. -398 iterations 5
Cbc0038I Pass  12: suminf.    0.33389 (1) obj. -398 iterations 6
Cbc0038I Pass  13: suminf.    0.43589 (3) obj. -398 iterations 13
Cbc0038I Pass  14: suminf.    0.10564 (3) obj. -398 iterations 5
Cbc0038I Pass  15: suminf.    0.31670 (2) obj. -398 iterations 10
Cbc0038I Pass  16: suminf.    0.31670 (2) obj. -398 iterations 0
Cbc0038I Pass  17: suminf.    0.03571 (1) obj. -398 iterations 5
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -398 iterations 1
Cbc0038I Solution found of -398
Cbc0038I Relaxing continuous gives -406.513
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -406.513 to -410.565 (0.02 seconds)
Cbc0038I Round again with cutoff of -415.227
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass  19: suminf.    1.27259 (3) obj. -415.227 iterations 2
Cbc0038I Pass  20: suminf.    0.39250 (3) obj. -415.227 iterations 4
Cbc0038I Pass  21: suminf.    0.85150 (2) obj. -415.227 iterations 12
Cbc0038I Pass  22: suminf.    0.61241 (5) obj. -415.227 iterations 4
Cbc0038I Pass  23: suminf.    1.79094 (5) obj. -415.227 iterations 10
Cbc0038I Pass  24: suminf.    0.50000 (1) obj. -415.227 iterations 11
Cbc0038I Pass  25: suminf.    0.44315 (1) obj. -415.227 iterations 4
Cbc0038I Pass  26: suminf.    0.88987 (4) obj. -415.227 iterations 12
Cbc0038I Pass  27: suminf.    0.68623 (6) obj. -415.227 iterations 6
Cbc0038I Pass  28: suminf.    0.28977 (1) obj. -415.227 iterations 21
Cbc0038I Pass  29: suminf.    0.28977 (1) obj. -415.227 iterations 0
Cbc0038I Pass  30: suminf.    0.46429 (1) obj. -415.227 iterations 7
Cbc0038I Pass  31: suminf.    0.49411 (1) obj. -415.227 iterations 3
Cbc0038I Pass  32: suminf.    3.63617 (15) obj. -415.227 iterations 22
Cbc0038I Pass  33: suminf.    0.56761 (2) obj. -415.227 iterations 18
Cbc0038I Pass  34: suminf.    0.85150 (2) obj. -415.227 iterations 7
Cbc0038I Pass  35: suminf.    0.61241 (5) obj. -415.227 iterations 6
Cbc0038I Pass  36: suminf.    1.79094 (5) obj. -415.227 iterations 11
Cbc0038I Pass  37: suminf.    0.50000 (1) obj. -415.227 iterations 9
Cbc0038I Pass  38: suminf.    0.44315 (1) obj. -415.227 iterations 3
Cbc0038I Pass  39: suminf.    0.88987 (4) obj. -415.227 iterations 11
Cbc0038I Pass  40: suminf.    0.68623 (6) obj. -415.227 iterations 4
Cbc0038I Pass  41: suminf.    0.28977 (1) obj. -415.227 iterations 18
Cbc0038I Pass  42: suminf.    0.28977 (1) obj. -415.227 iterations 0
Cbc0038I Pass  43: suminf.    0.46429 (1) obj. -415.227 iterations 6
Cbc0038I Pass  44: suminf.    0.49411 (1) obj. -415.227 iterations 3
Cbc0038I Pass  45: suminf.    1.41575 (6) obj. -415.227 iterations 14
Cbc0038I Pass  46: suminf.    0.56761 (2) obj. -415.227 iterations 16
Cbc0038I Pass  47: suminf.    0.85150 (2) obj. -415.227 iterations 7
Cbc0038I Pass  48: suminf.    0.61241 (5) obj. -415.227 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 25 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -410.565 - took 0.03 seconds
Cbc0012I Integer solution of -410.5652 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 115 rows 64 columns, reduced to 15 rows 11 columns
Cbc0031I 5 added rows had average density of 17.8
Cbc0013I At root node, 5 cuts changed objective from -433.87421 to -421.34547 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -411.4502 found by strong branching after 242 iterations and 10 nodes (0.08 seconds)
Cbc0001I Search completed - best objective -411.4502, took 242 iterations and 10 nodes (0.08 seconds)
Cbc0032I Strong branching done 82 times (315 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

