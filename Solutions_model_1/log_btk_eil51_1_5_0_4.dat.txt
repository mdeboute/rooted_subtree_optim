Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-37) rows, 39 (-14) columns and 208 (-95) elements
Clp1000I sum of infeasibilities 6.70296e-06 - average 9.85729e-08, 9 fixed columns
Coin0506I Presolve 41 (-27) rows, 30 (-9) columns and 136 (-72) elements
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 1.1948011 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 117.83665
Clp0000I Optimal - objective value 117.83665
Coin0511I After Postsolve, objective 117.83665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.83665
Clp0000I Optimal - objective value 117.83665
Clp0000I Optimal - objective value 117.83665
Coin0511I After Postsolve, objective 117.83665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.8366548 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 68 rows, 39 columns (38 integer (38 of which binary)) and 208 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 5.20633
Cbc0038I Pass   1: suminf.    0.42857 (1) obj. -86.5238 iterations 16
Cbc0038I Pass   2: suminf.    0.42857 (1) obj. -86.5238 iterations 0
Cbc0038I Solution found of -67.6666
Cbc0038I Relaxing continuous gives -67.6666
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 39 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -67.6666 to -83.3333 (0.01 seconds)
Cbc0038I Round again with cutoff of -86.7838
Cbc0038I Pass   3: suminf.    0.42985 (3) obj. -86.7838 iterations 1
Cbc0038I Pass   4: suminf.    0.42985 (3) obj. -86.7838 iterations 0
Cbc0038I Pass   5: suminf.    0.51216 (2) obj. -86.7838 iterations 7
Cbc0038I Pass   6: suminf.    0.22475 (2) obj. -86.7838 iterations 12
Cbc0038I Pass   7: suminf.    0.20181 (2) obj. -86.7838 iterations 5
Cbc0038I Pass   8: suminf.    0.51216 (2) obj. -86.7838 iterations 4
Cbc0038I Pass   9: suminf.    1.32191 (9) obj. -86.7838 iterations 12
Cbc0038I Pass  10: suminf.    0.86521 (7) obj. -86.7838 iterations 7
Cbc0038I Pass  11: suminf.    0.91861 (6) obj. -86.7838 iterations 15
Cbc0038I Pass  12: suminf.    0.65365 (3) obj. -86.7838 iterations 7
Cbc0038I Pass  13: suminf.    1.13295 (4) obj. -86.7838 iterations 4
Cbc0038I Pass  14: suminf.    0.78992 (5) obj. -86.7838 iterations 2
Cbc0038I Pass  15: suminf.    0.76088 (3) obj. -86.7838 iterations 7
Cbc0038I Pass  16: suminf.    1.06902 (4) obj. -86.7838 iterations 5
Cbc0038I Pass  17: suminf.    2.23273 (7) obj. -86.7838 iterations 15
Cbc0038I Pass  18: suminf.    1.90467 (7) obj. -86.7838 iterations 5
Cbc0038I Pass  19: suminf.    0.69902 (3) obj. -86.7838 iterations 12
Cbc0038I Pass  20: suminf.    0.31374 (2) obj. -86.7838 iterations 5
Cbc0038I Pass  21: suminf.    0.27375 (2) obj. -86.7838 iterations 1
Cbc0038I Pass  22: suminf.    0.63892 (2) obj. -86.7838 iterations 3
Cbc0038I Pass  23: suminf.    0.43993 (2) obj. -86.7838 iterations 2
Cbc0038I Pass  24: suminf.    1.72972 (9) obj. -86.7838 iterations 10
Cbc0038I Pass  25: suminf.    1.10858 (7) obj. -86.7838 iterations 5
Cbc0038I Pass  26: suminf.    0.85133 (4) obj. -86.7838 iterations 9
Cbc0038I Pass  27: suminf.    0.72456 (4) obj. -86.7838 iterations 2
Cbc0038I Pass  28: suminf.    1.35443 (7) obj. -86.7838 iterations 9
Cbc0038I Pass  29: suminf.    0.56102 (3) obj. -86.7838 iterations 5
Cbc0038I Pass  30: suminf.    1.06902 (4) obj. -86.7838 iterations 3
Cbc0038I Pass  31: suminf.    0.89040 (3) obj. -86.7838 iterations 1
Cbc0038I Pass  32: suminf.    2.74011 (10) obj. -86.7838 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 39 columns, reduced to 33 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -83.3333 to -86 (0.03 seconds)
Cbc0038I Round again with cutoff of -92.9943
Cbc0038I Pass  32: suminf.    0.46050 (3) obj. -92.9943 iterations 0
Cbc0038I Pass  33: suminf.    0.46050 (3) obj. -92.9943 iterations 0
Cbc0038I Pass  34: suminf.    0.79188 (5) obj. -92.9943 iterations 6
Cbc0038I Pass  35: suminf.    0.66669 (3) obj. -92.9943 iterations 2
Cbc0038I Pass  36: suminf.    0.38809 (2) obj. -92.9943 iterations 8
Cbc0038I Pass  37: suminf.    0.38809 (2) obj. -92.9943 iterations 0
Cbc0038I Pass  38: suminf.    0.79451 (2) obj. -92.9943 iterations 3
Cbc0038I Pass  39: suminf.    0.50000 (1) obj. -92.9943 iterations 2
Cbc0038I Pass  40: suminf.    2.28252 (9) obj. -92.9943 iterations 15
Cbc0038I Pass  41: suminf.    0.71477 (2) obj. -92.9943 iterations 13
Cbc0038I Pass  42: suminf.    0.91163 (3) obj. -92.9943 iterations 6
Cbc0038I Pass  43: suminf.    0.70828 (2) obj. -92.9943 iterations 1
Cbc0038I Pass  44: suminf.    0.38809 (2) obj. -92.9943 iterations 5
Cbc0038I Pass  45: suminf.    0.79451 (2) obj. -92.9943 iterations 3
Cbc0038I Pass  46: suminf.    0.50000 (1) obj. -92.9943 iterations 2
Cbc0038I Pass  47: suminf.    3.63568 (13) obj. -92.9943 iterations 18
Cbc0038I Pass  48: suminf.    3.22263 (12) obj. -92.9943 iterations 4
Cbc0038I Pass  49: suminf.    2.99527 (10) obj. -92.9943 iterations 1
Cbc0038I Pass  50: suminf.    2.32371 (8) obj. -92.9943 iterations 2
Cbc0038I Pass  51: suminf.    1.70290 (6) obj. -92.9943 iterations 11
Cbc0038I Pass  52: suminf.    1.51873 (6) obj. -92.9943 iterations 3
Cbc0038I Pass  53: suminf.    1.61839 (6) obj. -92.9943 iterations 4
Cbc0038I Pass  54: suminf.    1.60616 (7) obj. -92.9943 iterations 2
Cbc0038I Pass  55: suminf.    2.03651 (6) obj. -92.9943 iterations 14
Cbc0038I Pass  56: suminf.    0.54470 (5) obj. -92.9943 iterations 5
Cbc0038I Pass  57: suminf.    2.19937 (8) obj. -92.9943 iterations 8
Cbc0038I Pass  58: suminf.    0.87813 (4) obj. -92.9943 iterations 7
Cbc0038I Pass  59: suminf.    1.27129 (3) obj. -92.9943 iterations 5
Cbc0038I Pass  60: suminf.    1.27129 (3) obj. -92.9943 iterations 0
Cbc0038I Pass  61: suminf.    0.36314 (2) obj. -92.9943 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 39 columns, reduced to 28 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -86 - took 0.03 seconds
Cbc0012I Integer solution of -86.00004 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 68 rows 39 columns, reduced to 18 rows 15 columns
Cbc0031I 6 added rows had average density of 38
Cbc0013I At root node, 6 cuts changed objective from -117.83665 to -97.846623 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 848 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 734 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -87 found by DiveCoefficient after 1540 iterations and 4 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -87, took 1653 iterations and 20 nodes (0.19 seconds)
Cbc0032I Strong branching done 134 times (735 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 55 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

