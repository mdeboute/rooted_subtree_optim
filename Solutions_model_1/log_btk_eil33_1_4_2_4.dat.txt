Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 33 (-2) columns and 170 (-25) elements
Clp1000I sum of infeasibilities 0.000384757 - average 6.87065e-06, 1 fixed columns
Coin0506I Presolve 55 (-1) rows, 32 (-1) columns and 166 (-4) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 92.878425
Clp0000I Optimal - objective value 92.878425
Coin0511I After Postsolve, objective 92.878425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.878425
Clp0000I Optimal - objective value 92.878425
Clp0000I Optimal - objective value 92.878425
Coin0511I After Postsolve, objective 92.878425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.87842465 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.42946
Cbc0038I Solution found of 19.3415
Cbc0038I Relaxing continuous gives -0.19306
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -0.19306 to -39.4274 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.7207
Cbc0038I Pass   1: suminf.    3.01620 (11) obj. -44.7207 iterations 16
Cbc0038I Pass   2: suminf.    0.95479 (4) obj. -44.7207 iterations 12
Cbc0038I Pass   3: suminf.    0.76699 (4) obj. -44.7207 iterations 2
Cbc0038I Pass   4: suminf.    0.48709 (3) obj. -44.7207 iterations 1
Cbc0038I Pass   5: suminf.    0.51131 (3) obj. -45.475 iterations 1
Cbc0038I Pass   6: suminf.    2.17769 (6) obj. -44.7207 iterations 16
Cbc0038I Pass   7: suminf.    1.91232 (8) obj. -44.7207 iterations 5
Cbc0038I Pass   8: suminf.    1.93637 (5) obj. -44.7207 iterations 13
Cbc0038I Pass   9: suminf.    1.22708 (4) obj. -44.7207 iterations 2
Cbc0038I Pass  10: suminf.    0.87117 (3) obj. -44.7207 iterations 6
Cbc0038I Pass  11: suminf.    0.87117 (3) obj. -44.7207 iterations 0
Cbc0038I Pass  12: suminf.    0.58875 (3) obj. -44.7207 iterations 5
Cbc0038I Pass  13: suminf.    0.58875 (3) obj. -44.7207 iterations 0
Cbc0038I Pass  14: suminf.    0.71899 (3) obj. -44.7207 iterations 5
Cbc0038I Pass  15: suminf.    0.36094 (2) obj. -44.7207 iterations 2
Cbc0038I Pass  16: suminf.    0.73886 (2) obj. -44.7207 iterations 2
Cbc0038I Pass  17: suminf.    0.73886 (2) obj. -44.7207 iterations 0
Cbc0038I Pass  18: suminf.    0.75648 (2) obj. -44.7207 iterations 3
Cbc0038I Pass  19: suminf.    2.27371 (9) obj. -44.7207 iterations 17
Cbc0038I Pass  20: suminf.    1.59181 (7) obj. -44.7207 iterations 4
Cbc0038I Pass  21: suminf.    1.41158 (6) obj. -44.7207 iterations 10
Cbc0038I Pass  22: suminf.    1.15766 (5) obj. -44.7207 iterations 1
Cbc0038I Pass  23: suminf.    0.83076 (3) obj. -44.7207 iterations 7
Cbc0038I Pass  24: suminf.    0.83076 (3) obj. -44.7207 iterations 0
Cbc0038I Pass  25: suminf.    0.54447 (3) obj. -44.7207 iterations 5
Cbc0038I Pass  26: suminf.    0.54447 (3) obj. -44.7207 iterations 0
Cbc0038I Pass  27: suminf.    0.73212 (2) obj. -44.7207 iterations 3
Cbc0038I Pass  28: suminf.    2.32121 (7) obj. -44.7207 iterations 8
Cbc0038I Pass  29: suminf.    1.56759 (6) obj. -44.7207 iterations 6
Cbc0038I Pass  30: suminf.    0.93379 (3) obj. -44.7207 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 47 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.4274 - took 0.04 seconds
Cbc0012I Integer solution of -39.42744 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0031I 15 added rows had average density of 21.8
Cbc0013I At root node, 15 cuts changed objective from -92.359175 to -69.178525 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2829 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 909 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.752 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -39.42744 best solution, best possible -69.178525 (1.65 seconds)
Cbc0012I Integer solution of -40.22532 found by rounding after 4130 iterations and 14 nodes (1.73 seconds)
Cbc0012I Integer solution of -42.4482 found by DiveCoefficient after 4139 iterations and 15 nodes (1.73 seconds)
Cbc0001I Search completed - best objective -42.4482, took 4159 iterations and 16 nodes (1.73 seconds)
Cbc0032I Strong branching done 252 times (3377 iterations), fathomed 2 nodes and fixed 14 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.74

