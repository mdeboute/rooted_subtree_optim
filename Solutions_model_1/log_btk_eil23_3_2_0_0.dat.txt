Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.16093e-06 - average 6.17409e-08, 18 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-21) columns and 0 (-104) elements
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Coin0511I After Postsolve, objective 12091.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.7775665 - largest nonzero change 1.270881e-05 ( 0.001270881%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Coin0511I After Postsolve, objective 12091.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12091.51014 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.651%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.118049
Cbc0038I Pass   1: suminf.    0.11805 (1) obj. -12091.5 iterations 3
Cbc0038I Solution found of -5728.73
Cbc0038I Relaxing continuous gives -5728.73
Cbc0038I Rounding solution of -6429.11 is better than previous of -5728.73

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -6995.35
Cbc0038I Pass   2: suminf.    0.11805 (1) obj. -12091.5 iterations 0
Cbc0038I Pass   3: suminf.    0.17557 (1) obj. -6995.35 iterations 1
Cbc0038I Pass   4: suminf.    0.13330 (1) obj. -6995.35 iterations 4
Cbc0038I Pass   5: suminf.    0.25463 (1) obj. -11411 iterations 1
Cbc0038I Pass   6: suminf.    0.13330 (1) obj. -6995.35 iterations 1
Cbc0038I Pass   7: suminf.    0.69500 (2) obj. -6995.35 iterations 5
Cbc0038I Pass   8: suminf.    0.05571 (1) obj. -6995.35 iterations 2
Cbc0038I Pass   9: suminf.    0.29415 (1) obj. -8715.54 iterations 1
Cbc0038I Pass  10: suminf.    0.27659 (1) obj. -11359.9 iterations 4
Cbc0038I Pass  11: suminf.    0.27659 (1) obj. -11359.9 iterations 1
Cbc0038I Pass  12: suminf.    0.11845 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  13: suminf.    0.18604 (2) obj. -6995.35 iterations 3
Cbc0038I Pass  14: suminf.    0.18604 (2) obj. -6995.35 iterations 0
Cbc0038I Pass  15: suminf.    0.13308 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  16: suminf.    0.24000 (1) obj. -11518.2 iterations 1
Cbc0038I Pass  17: suminf.    0.19604 (2) obj. -6995.35 iterations 6
Cbc0038I Pass  18: suminf.    0.19604 (2) obj. -6995.35 iterations 0
Cbc0038I Pass  19: suminf.    0.24000 (1) obj. -11571.7 iterations 2
Cbc0038I Pass  20: suminf.    0.12567 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  21: suminf.    0.12816 (1) obj. -6995.35 iterations 4
Cbc0038I Pass  22: suminf.    0.12816 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  23: suminf.    0.22780 (1) obj. -11641.7 iterations 1
Cbc0038I Pass  24: suminf.    0.30098 (1) obj. -11285.1 iterations 2
Cbc0038I Pass  25: suminf.    0.30098 (1) obj. -11285.1 iterations 1
Cbc0038I Pass  26: suminf.    0.10442 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  27: suminf.    0.11260 (1) obj. -6995.35 iterations 2
Cbc0038I Pass  28: suminf.    0.27049 (1) obj. -11446 iterations 1
Cbc0038I Pass  29: suminf.    0.11260 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  30: suminf.    0.66592 (2) obj. -6995.35 iterations 8
Cbc0038I Pass  31: suminf.    0.04383 (1) obj. -6995.35 iterations 3
Cbc0038I Rounding solution of -7265.54 is better than previous of -6429.11

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -7265.54 to -7350.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -8299.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.11805 (1) obj. -12091.5 iterations 0
Cbc0038I Pass  32: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  33: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  34: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  35: suminf.    0.32123 (1) obj. -8299.02 iterations 5
Cbc0038I Pass  36: suminf.    0.32123 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  37: suminf.    0.49854 (1) obj. -9599.28 iterations 1
Cbc0038I Pass  38: suminf.    0.59527 (2) obj. -8299.02 iterations 12
Cbc0038I Pass  39: suminf.    0.59527 (2) obj. -8299.02 iterations 2
Cbc0038I Pass  40: suminf.    0.25829 (1) obj. -11347.4 iterations 2
Cbc0038I Pass  41: suminf.    0.31916 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  42: suminf.    0.65068 (3) obj. -8299.02 iterations 10
Cbc0038I Pass  43: suminf.    0.26209 (1) obj. -8299.02 iterations 4
Cbc0038I Pass  44: suminf.    0.26976 (1) obj. -8354.29 iterations 1
Cbc0038I Pass  45: suminf.    1.39643 (6) obj. -8299.02 iterations 7
Cbc0038I Pass  46: suminf.    1.18061 (5) obj. -8299.02 iterations 2
Cbc0038I Pass  47: suminf.    0.44244 (1) obj. -10531.4 iterations 3
Cbc0038I Pass  48: suminf.    0.24813 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  49: suminf.    0.64161 (3) obj. -8299.02 iterations 4
Cbc0038I Pass  50: suminf.    0.26445 (1) obj. -8299.02 iterations 2
Cbc0038I Pass  51: suminf.    0.39976 (1) obj. -10721.6 iterations 1
Cbc0038I Pass  52: suminf.    0.34854 (1) obj. -10942.7 iterations 2
Cbc0038I Pass  53: suminf.    0.28502 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  54: suminf.    0.34854 (1) obj. -10942.7 iterations 1
Cbc0038I Pass  55: suminf.    0.26317 (1) obj. -11332.6 iterations 2
Cbc0038I Pass  56: suminf.    0.26317 (1) obj. -11332.6 iterations 0
Cbc0038I Pass  57: suminf.    0.31634 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  58: suminf.    0.29097 (1) obj. -8299.02 iterations 6
Cbc0038I Pass  59: suminf.    0.30707 (1) obj. -11198.9 iterations 1
Cbc0038I Pass  60: suminf.    0.29097 (1) obj. -8299.02 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7350.9 - took 0.03 seconds
Cbc0012I Integer solution of -7350.898 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -7361.3423 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 5 rows 6 columns
Cbc0031I 7 added rows had average density of 9.1428571
Cbc0013I At root node, 7 cuts changed objective from -12091.51 to -7369.1091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 350 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -7362.0911 found by rounding after 911 iterations and 2 nodes (0.08 seconds)
Cbc0004I Integer solution of -7364.3981 found after 930 iterations and 3 nodes (0.08 seconds)
Cbc0001I Search completed - best objective -7364.39813, took 948 iterations and 4 nodes (0.08 seconds)
Cbc0032I Strong branching done 22 times (91 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.09

