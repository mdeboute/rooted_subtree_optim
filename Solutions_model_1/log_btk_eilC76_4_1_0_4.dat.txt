Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 59 (-19) columns and 324 (-129) elements
Clp1000I sum of infeasibilities 0.000175597 - average 1.65658e-06, 32 fixed columns
Coin0506I Presolve 22 (-84) rows, 17 (-42) columns and 72 (-252) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 466.50158
Clp0000I Optimal - objective value 466.50158
Coin0511I After Postsolve, objective 466.50158, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 466.50158
Clp0000I Optimal - objective value 466.50158
Clp0000I Optimal - objective value 466.50158
Coin0511I After Postsolve, objective 466.50158, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 466.5015842 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 106 rows, 59 columns (58 integer (58 of which binary)) and 324 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.13665
Cbc0038I Pass   1: suminf.    0.56915 (2) obj. -435.984 iterations 13
Cbc0038I Pass   2: suminf.    0.05405 (1) obj. -411.716 iterations 1
Cbc0038I Solution found of -341.845
Cbc0038I Relaxing continuous gives -341.845
Cbc0038I Rounding solution of -351.397 is better than previous of -341.845

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -351.397 to -448.836 (0.01 seconds)
Cbc0038I Round again with cutoff of -450.603
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.97078 (5) obj. -450.603 iterations 3
Cbc0038I Pass   4: suminf.    1.15607 (4) obj. -450.603 iterations 8
Cbc0038I Pass   5: suminf.    1.16727 (5) obj. -450.603 iterations 12
Cbc0038I Pass   6: suminf.    1.48418 (5) obj. -450.603 iterations 7
Cbc0038I Pass   7: suminf.    1.32572 (6) obj. -450.603 iterations 5
Cbc0038I Pass   8: suminf.    0.04344 (1) obj. -450.603 iterations 14
Cbc0038I Pass   9: suminf.    0.04344 (1) obj. -450.603 iterations 1
Cbc0038I Pass  10: suminf.    0.52953 (3) obj. -450.603 iterations 14
Cbc0038I Pass  11: suminf.    0.52953 (3) obj. -450.603 iterations 3
Cbc0038I Pass  12: suminf.    0.97078 (5) obj. -450.603 iterations 14
Cbc0038I Pass  13: suminf.    0.97078 (5) obj. -450.603 iterations 0
Cbc0038I Pass  14: suminf.    1.15607 (4) obj. -450.603 iterations 8
Cbc0038I Pass  15: suminf.    1.19195 (5) obj. -450.603 iterations 3
Cbc0038I Pass  16: suminf.    1.19728 (5) obj. -450.603 iterations 6
Cbc0038I Pass  17: suminf.    1.39680 (6) obj. -450.603 iterations 8
Cbc0038I Pass  18: suminf.    0.59130 (2) obj. -450.603 iterations 9
Cbc0038I Pass  19: suminf.    0.71538 (7) obj. -450.603 iterations 6
Cbc0038I Pass  20: suminf.    0.59130 (2) obj. -450.603 iterations 6
Cbc0038I Pass  21: suminf.    0.65985 (6) obj. -450.603 iterations 6
Cbc0038I Pass  22: suminf.    1.69009 (6) obj. -450.603 iterations 11
Cbc0038I Pass  23: suminf.    0.66641 (3) obj. -450.603 iterations 7
Cbc0038I Pass  24: suminf.    0.54065 (3) obj. -450.603 iterations 9
Cbc0038I Pass  25: suminf.    0.54065 (3) obj. -450.603 iterations 0
Cbc0038I Pass  26: suminf.    1.29652 (3) obj. -450.603 iterations 4
Cbc0038I Pass  27: suminf.    0.97078 (5) obj. -450.603 iterations 5
Cbc0038I Pass  28: suminf.    1.15607 (4) obj. -450.603 iterations 8
Cbc0038I Pass  29: suminf.    0.87670 (4) obj. -450.603 iterations 12
Cbc0038I Pass  30: suminf.    0.72122 (3) obj. -450.603 iterations 1
Cbc0038I Pass  31: suminf.    1.18671 (3) obj. -450.603 iterations 4
Cbc0038I Pass  32: suminf.    0.04344 (1) obj. -450.603 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -448.836 - took 0.01 seconds
Cbc0012I Integer solution of -448.8363 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 106 rows 59 columns, reduced to 9 rows 8 columns
Cbc0031I 7 added rows had average density of 20.428571
Cbc0013I At root node, 7 cuts changed objective from -466.50158 to -459.69895 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.8 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 58.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -448.8363, took 47 iterations and 2 nodes (0.10 seconds)
Cbc0032I Strong branching done 6 times (34 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

