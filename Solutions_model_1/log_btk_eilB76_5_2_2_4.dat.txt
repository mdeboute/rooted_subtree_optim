Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 71 (-7) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 2.20441e-05 - average 1.6957e-07, 16 fixed columns
Coin0506I Presolve 96 (-34) rows, 53 (-18) columns and 290 (-104) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.9838191 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Coin0511I After Postsolve, objective 49.198665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Clp0000I Optimal - objective value 49.198665
Coin0511I After Postsolve, objective 49.198665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.19866504 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 71 columns (70 integer (70 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.177%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.7166
Cbc0038I Solution found of 2.32694
Cbc0038I Relaxing continuous gives -4.59681
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -4.59681 to -29.5892 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.5099
Cbc0038I Pass   1: suminf.    1.69502 (8) obj. -31.5099 iterations 32
Cbc0038I Pass   2: suminf.    1.00679 (3) obj. -31.5099 iterations 6
Cbc0038I Pass   3: suminf.    0.42602 (1) obj. -31.5099 iterations 6
Cbc0038I Pass   4: suminf.    0.32992 (2) obj. -31.5099 iterations 3
Cbc0038I Pass   5: suminf.    3.25855 (9) obj. -31.5099 iterations 11
Cbc0038I Pass   6: suminf.    1.47769 (4) obj. -31.5099 iterations 12
Cbc0038I Pass   7: suminf.    0.78702 (3) obj. -31.5099 iterations 6
Cbc0038I Pass   8: suminf.    0.78702 (3) obj. -31.5099 iterations 0
Cbc0038I Pass   9: suminf.    0.63480 (3) obj. -31.5099 iterations 4
Cbc0038I Pass  10: suminf.    0.62781 (6) obj. -31.5099 iterations 5
Cbc0038I Pass  11: suminf.    2.21190 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  12: suminf.    1.73418 (7) obj. -31.5099 iterations 10
Cbc0038I Pass  13: suminf.    1.06210 (4) obj. -31.5099 iterations 11
Cbc0038I Pass  14: suminf.    1.75519 (4) obj. -31.5099 iterations 5
Cbc0038I Pass  15: suminf.    0.78702 (3) obj. -31.5099 iterations 7
Cbc0038I Pass  16: suminf.    0.63480 (3) obj. -31.5099 iterations 4
Cbc0038I Pass  17: suminf.    0.62781 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  18: suminf.    2.21190 (6) obj. -31.5099 iterations 6
Cbc0038I Pass  19: suminf.    1.64191 (6) obj. -31.5099 iterations 17
Cbc0038I Pass  20: suminf.    1.64168 (7) obj. -31.5099 iterations 7
Cbc0038I Pass  21: suminf.    1.42264 (4) obj. -31.5099 iterations 13
Cbc0038I Pass  22: suminf.    0.62941 (2) obj. -31.5099 iterations 2
Cbc0038I Pass  23: suminf.    0.69255 (2) obj. -31.5099 iterations 6
Cbc0038I Pass  24: suminf.    0.68858 (2) obj. -31.5099 iterations 3
Cbc0038I Pass  25: suminf.    3.16744 (9) obj. -31.5099 iterations 15
Cbc0038I Pass  26: suminf.    1.56734 (4) obj. -31.5099 iterations 7
Cbc0038I Pass  27: suminf.    0.72627 (3) obj. -31.5099 iterations 5
Cbc0038I Pass  28: suminf.    0.17323 (3) obj. -31.5099 iterations 7
Cbc0038I Pass  29: suminf.    0.00809 (2) obj. -31.5099 iterations 1
Cbc0038I Pass  30: suminf.    0.65044 (2) obj. -31.5099 iterations 8
Cbc0038I Rounding solution of -31.371 is better than previous of -29.5892

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 67 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -34.967
Cbc0038I Pass  30: suminf.    1.71352 (8) obj. -34.967 iterations 0
Cbc0038I Pass  31: suminf.    0.42898 (1) obj. -34.967 iterations 11
Cbc0038I Pass  32: suminf.    0.32313 (2) obj. -34.967 iterations 3
Cbc0038I Pass  33: suminf.    0.93587 (5) obj. -34.967 iterations 7
Cbc0038I Pass  34: suminf.    1.77918 (8) obj. -34.967 iterations 12
Cbc0038I Pass  35: suminf.    1.03376 (3) obj. -34.967 iterations 8
Cbc0038I Pass  36: suminf.    0.96779 (3) obj. -34.967 iterations 5
Cbc0038I Pass  37: suminf.    0.93537 (6) obj. -34.967 iterations 7
Cbc0038I Pass  38: suminf.    1.94147 (6) obj. -34.967 iterations 8
Cbc0038I Pass  39: suminf.    2.11371 (10) obj. -34.967 iterations 7
Cbc0038I Pass  40: suminf.    2.24547 (13) obj. -34.967 iterations 14
Cbc0038I Pass  41: suminf.    1.57500 (7) obj. -34.967 iterations 21
Cbc0038I Pass  42: suminf.    2.22862 (6) obj. -34.967 iterations 9
Cbc0038I Pass  43: suminf.    1.58638 (4) obj. -34.967 iterations 4
Cbc0038I Pass  44: suminf.    1.19035 (4) obj. -34.967 iterations 4
Cbc0038I Pass  45: suminf.    1.36058 (4) obj. -34.967 iterations 1
Cbc0038I Pass  46: suminf.    1.62611 (9) obj. -34.967 iterations 15
Cbc0038I Pass  47: suminf.    1.03376 (3) obj. -34.967 iterations 12
Cbc0038I Pass  48: suminf.    0.96779 (3) obj. -34.967 iterations 4
Cbc0038I Pass  49: suminf.    0.93537 (6) obj. -34.967 iterations 5
Cbc0038I Pass  50: suminf.    1.94147 (6) obj. -34.967 iterations 7
Cbc0038I Pass  51: suminf.    3.17364 (12) obj. -34.967 iterations 14
Cbc0038I Pass  52: suminf.    1.38625 (6) obj. -34.967 iterations 13
Cbc0038I Pass  53: suminf.    0.89910 (5) obj. -34.967 iterations 1
Cbc0038I Pass  54: suminf.    0.80111 (3) obj. -34.967 iterations 8
Cbc0038I Pass  55: suminf.    0.56808 (3) obj. -34.967 iterations 6
Cbc0038I Pass  56: suminf.    0.52147 (2) obj. -34.967 iterations 2
Cbc0038I Pass  57: suminf.    0.93537 (6) obj. -34.967 iterations 8
Cbc0038I Pass  58: suminf.    1.94147 (6) obj. -34.967 iterations 7
Cbc0038I Pass  59: suminf.    1.03376 (3) obj. -34.967 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -31.371 - took 0.05 seconds
Cbc0012I Integer solution of -31.37101 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 125 rows 71 columns, reduced to 55 rows 31 columns
Cbc0031I 13 added rows had average density of 45.923077
Cbc0013I At root node, 13 cuts changed objective from -48.795411 to -40.25834 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3550 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1010 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 49.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0001I Search completed - best objective -31.37101, took 4072 iterations and 18 nodes (0.51 seconds)
Cbc0032I Strong branching done 320 times (5428 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 8, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.52

