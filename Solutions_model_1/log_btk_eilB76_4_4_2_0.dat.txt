Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 72 (-6) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 0.000216773 - average 1.62987e-06, 10 fixed columns
Coin0506I Presolve 113 (-20) rows, 61 (-11) columns and 340 (-62) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.23581929 - largest nonzero change 0 ( 0%) - largest zero change 2.6629616e-05
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Coin0511I After Postsolve, objective 65.820097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Clp0000I Optimal - objective value 65.820097
Coin0511I After Postsolve, objective 65.820097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.82009679 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 72 columns (71 integer (71 of which binary)) and 466 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.01554
Cbc0038I Solution found of -9.3233
Cbc0038I Relaxing continuous gives -17.2592
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 79 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.2592 to -29.2565 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.8711
Cbc0038I Pass   1: suminf.    1.40565 (18) obj. -32.8711 iterations 44
Cbc0038I Pass   2: suminf.    1.22603 (4) obj. -32.8711 iterations 22
Cbc0038I Pass   3: suminf.    0.89262 (4) obj. -32.8711 iterations 6
Cbc0038I Pass   4: suminf.    1.16575 (3) obj. -32.8711 iterations 8
Cbc0038I Pass   5: suminf.    0.55559 (3) obj. -32.8711 iterations 2
Cbc0038I Pass   6: suminf.    2.31319 (6) obj. -32.8711 iterations 11
Cbc0038I Pass   7: suminf.    1.61620 (5) obj. -32.8711 iterations 8
Cbc0038I Pass   8: suminf.    1.48709 (6) obj. -32.8711 iterations 2
Cbc0038I Pass   9: suminf.    2.03333 (7) obj. -32.8711 iterations 8
Cbc0038I Pass  10: suminf.    1.44839 (6) obj. -32.8711 iterations 8
Cbc0038I Pass  11: suminf.    0.98468 (5) obj. -32.8711 iterations 4
Cbc0038I Pass  12: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  13: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  14: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  15: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  16: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  17: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  18: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  19: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  20: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  21: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  22: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  23: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  24: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  25: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I Pass  26: suminf.    0.98468 (5) obj. -32.8711 iterations 3
Cbc0038I Pass  27: suminf.    1.28008 (4) obj. -32.8711 iterations 7
Cbc0038I Pass  28: suminf.    1.22924 (5) obj. -32.8711 iterations 7
Cbc0038I Pass  29: suminf.    1.56223 (5) obj. -32.8711 iterations 10
Cbc0038I Pass  30: suminf.    1.04017 (5) obj. -32.8711 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 85 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -29.2565 - took 0.05 seconds
Cbc0012I Integer solution of -29.2565 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 129 rows 72 columns, reduced to 79 rows 43 columns
Cbc0031I 17 added rows had average density of 48.470588
Cbc0013I At root node, 17 cuts changed objective from -65.401904 to -56.013812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9304 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1965 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.2565 best solution, best possible -56.013812 (0.77 seconds)
Cbc0001I Search completed - best objective -29.2565, took 7771 iterations and 40 nodes (0.97 seconds)
Cbc0032I Strong branching done 552 times (10502 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 16, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.99

