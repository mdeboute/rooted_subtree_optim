Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 375 (-78) elements
Clp1000I sum of infeasibilities 1.85748e-05 - average 1.51015e-07, 54 fixed columns
Coin0506I Presolve 6 (-117) rows, 8 (-60) columns and 24 (-351) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Coin0511I After Postsolve, objective 14717.017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.827586 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Clp0000I Optimal - objective value 14717.017
Coin0511I After Postsolve, objective 14717.017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14717.01657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 68 columns (67 integer (67 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.846%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.72857
Cbc0038I Solution found of -9166.76
Cbc0038I Relaxing continuous gives -9166.76
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -9166.76 to -11034.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -11402.7
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.45193 (1) obj. -11402.7 iterations 18
Cbc0038I Pass   2: suminf.    0.12121 (1) obj. -13514.6 iterations 1
Cbc0038I Pass   3: suminf.    1.72410 (5) obj. -11402.7 iterations 15
Cbc0038I Pass   4: suminf.    0.24702 (1) obj. -11402.7 iterations 11
Cbc0038I Pass   5: suminf.    0.23333 (1) obj. -11470.4 iterations 1
Cbc0038I Pass   6: suminf.    0.89474 (2) obj. -12143.7 iterations 12
Cbc0038I Pass   7: suminf.    0.30146 (1) obj. -11402.7 iterations 7
Cbc0038I Pass   8: suminf.    0.38710 (2) obj. -12355.9 iterations 6
Cbc0038I Pass   9: suminf.    0.30146 (1) obj. -11402.7 iterations 6
Cbc0038I Pass  10: suminf.    0.57760 (6) obj. -11402.7 iterations 17
Cbc0038I Pass  11: suminf.    0.08386 (5) obj. -11402.7 iterations 16
Cbc0038I Pass  12: suminf.    1.07684 (3) obj. -12869 iterations 13
Cbc0038I Pass  13: suminf.    0.93878 (2) obj. -12543.5 iterations 1
Cbc0038I Pass  14: suminf.    0.35943 (1) obj. -11402.7 iterations 2
Cbc0038I Pass  15: suminf.    0.21212 (1) obj. -13522.5 iterations 1
Cbc0038I Pass  16: suminf.    0.35723 (5) obj. -11402.7 iterations 23
Cbc0038I Pass  17: suminf.    0.12460 (1) obj. -11402.7 iterations 8
Cbc0038I Pass  18: suminf.    0.23333 (1) obj. -11940.7 iterations 1
Cbc0038I Pass  19: suminf.    1.24294 (4) obj. -11402.7 iterations 7
Cbc0038I Pass  20: suminf.    1.24294 (4) obj. -11402.7 iterations 1
Cbc0038I Pass  21: suminf.    0.29606 (1) obj. -11402.7 iterations 8
Cbc0038I Pass  22: suminf.    0.29606 (1) obj. -11402.7 iterations 0
Cbc0038I Pass  23: suminf.    0.42857 (2) obj. -12211.3 iterations 4
Cbc0038I Pass  24: suminf.    0.30543 (2) obj. -11402.7 iterations 14
Cbc0038I Pass  25: suminf.    0.30329 (2) obj. -11402.7 iterations 12
Cbc0038I Pass  26: suminf.    0.19875 (1) obj. -11402.7 iterations 7
Cbc0038I Pass  27: suminf.    0.46667 (1) obj. -12728.2 iterations 1
Cbc0038I Pass  28: suminf.    0.50000 (2) obj. -11402.7 iterations 7
Cbc0038I Pass  29: suminf.    1.45406 (4) obj. -11402.7 iterations 18
Cbc0038I Pass  30: suminf.    0.97320 (3) obj. -11402.7 iterations 4
Cbc0038I Rounding solution of -12261.6 is better than previous of -11034.5

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12261.6 to -13343.4 (0.03 seconds)
Cbc0038I Round again with cutoff of -13618.1
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.34069 (5) obj. -13618.1 iterations 5
Cbc0038I Pass  31: suminf.    0.20164 (7) obj. -13618.1 iterations 3
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -13674.8 iterations 11
Cbc0038I Pass  33: suminf.    0.15522 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  34: suminf.    1.51314 (4) obj. -13618.1 iterations 8
Cbc0038I Pass  35: suminf.    0.11973 (1) obj. -13618.1 iterations 6
Cbc0038I Pass  36: suminf.    0.10000 (1) obj. -13715.7 iterations 1
Cbc0038I Pass  37: suminf.    0.43333 (1) obj. -13908.8 iterations 6
Cbc0038I Pass  38: suminf.    0.43333 (1) obj. -13908.8 iterations 5
Cbc0038I Pass  39: suminf.    0.49208 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  40: suminf.    0.65747 (2) obj. -13734.7 iterations 9
Cbc0038I Pass  41: suminf.    0.65747 (2) obj. -13734.7 iterations 2
Cbc0038I Pass  42: suminf.    0.76590 (2) obj. -13618.1 iterations 10
Cbc0038I Pass  43: suminf.    0.37681 (2) obj. -13618.1 iterations 3
Cbc0038I Pass  44: suminf.    0.90374 (2) obj. -13618.1 iterations 10
Cbc0038I Pass  45: suminf.    0.49208 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  46: suminf.    0.43333 (1) obj. -13908.8 iterations 1
Cbc0038I Pass  47: suminf.    0.10000 (1) obj. -13715.7 iterations 2
Cbc0038I Pass  48: suminf.    0.10000 (1) obj. -13715.7 iterations 1
Cbc0038I Pass  49: suminf.    0.11973 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  50: suminf.    0.51806 (3) obj. -13618.1 iterations 20
Cbc0038I Pass  51: suminf.    0.24327 (4) obj. -13618.1 iterations 5
Cbc0038I Pass  52: suminf.    1.25000 (4) obj. -14170.5 iterations 11
Cbc0038I Pass  53: suminf.    1.05634 (3) obj. -13747.8 iterations 1
Cbc0038I Pass  54: suminf.    0.83333 (2) obj. -13618.1 iterations 17
Cbc0038I Pass  55: suminf.    0.16667 (1) obj. -13674.8 iterations 2
Cbc0038I Pass  56: suminf.    0.15522 (1) obj. -13618.1 iterations 1
Cbc0038I Pass  57: suminf.    0.28714 (3) obj. -13618.1 iterations 10
Cbc0038I Pass  58: suminf.    0.15522 (1) obj. -13618.1 iterations 9
Cbc0038I Pass  59: suminf.    0.33672 (2) obj. -13618.1 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -13343.4 - took 0.03 seconds
Cbc0012I Integer solution of -13343.43 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 122 rows 68 columns, reduced to 18 rows 11 columns
Cbc0031I 8 added rows had average density of 19.125
Cbc0013I At root node, 8 cuts changed objective from -14717.017 to -14102.944 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 66.4 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0010I After 4 nodes, 3 on tree, -13343.43 best solution, best possible -13713.129 (0.69 seconds)
Cbc0001I Search completed - best objective -13343.43, took 381 iterations and 8 nodes (0.90 seconds)
Cbc0032I Strong branching done 92 times (466 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.90

