Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 100 (-3) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 3.94345e-05 - average 2.15489e-07, 35 fixed columns
Coin0506I Presolve 107 (-76) rows, 61 (-39) columns and 328 (-230) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0976785 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Coin0511I After Postsolve, objective 83.525376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Coin0511I After Postsolve, objective 83.525376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.52537598 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 183 rows, 100 columns (99 integer (99 of which binary)) and 566 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.965%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.76075
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.5 iterations 57
Cbc0038I Solution found of -8.5
Cbc0038I Relaxing continuous gives -8.5
Cbc0038I Rounding solution of -13.5122 is better than previous of -8.5

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 57 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -13.5122 to -56.4944 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.1976
Cbc0038I Pass   2: suminf.    3.52011 (17) obj. -59.1976 iterations 36
Cbc0038I Pass   3: suminf.    2.30091 (8) obj. -59.1976 iterations 31
Cbc0038I Pass   4: suminf.    1.59034 (6) obj. -59.1976 iterations 9
Cbc0038I Pass   5: suminf.    1.49794 (6) obj. -59.1976 iterations 3
Cbc0038I Pass   6: suminf.    1.79355 (6) obj. -59.1976 iterations 12
Cbc0038I Pass   7: suminf.    1.76657 (5) obj. -59.1976 iterations 1
Cbc0038I Pass   8: suminf.    2.35550 (6) obj. -59.1976 iterations 13
Cbc0038I Pass   9: suminf.    2.35550 (6) obj. -59.1976 iterations 1
Cbc0038I Pass  10: suminf.    2.33166 (6) obj. -59.1976 iterations 11
Cbc0038I Pass  11: suminf.    2.02590 (6) obj. -59.1976 iterations 4
Cbc0038I Pass  12: suminf.    2.11541 (7) obj. -59.1976 iterations 15
Cbc0038I Pass  13: suminf.    2.09645 (8) obj. -59.1976 iterations 4
Cbc0038I Pass  14: suminf.    2.04213 (7) obj. -59.1976 iterations 3
Cbc0038I Pass  15: suminf.    2.54599 (8) obj. -59.1976 iterations 13
Cbc0038I Pass  16: suminf.    2.54598 (8) obj. -59.1976 iterations 3
Cbc0038I Pass  17: suminf.    2.18508 (6) obj. -59.1976 iterations 14
Cbc0038I Pass  18: suminf.    2.12432 (5) obj. -59.1976 iterations 4
Cbc0038I Pass  19: suminf.    1.54690 (6) obj. -59.1976 iterations 13
Cbc0038I Pass  20: suminf.    1.50950 (5) obj. -59.1976 iterations 7
Cbc0038I Pass  21: suminf.    1.79355 (6) obj. -59.1976 iterations 10
Cbc0038I Pass  22: suminf.    1.76657 (5) obj. -59.1976 iterations 1
Cbc0038I Pass  23: suminf.    2.35550 (6) obj. -59.1976 iterations 14
Cbc0038I Pass  24: suminf.    2.35550 (6) obj. -59.1976 iterations 1
Cbc0038I Pass  25: suminf.    2.33166 (6) obj. -59.1976 iterations 10
Cbc0038I Pass  26: suminf.    2.02590 (6) obj. -59.1976 iterations 3
Cbc0038I Pass  27: suminf.    2.11541 (7) obj. -59.1976 iterations 16
Cbc0038I Pass  28: suminf.    2.09645 (8) obj. -59.1976 iterations 4
Cbc0038I Pass  29: suminf.    2.04213 (7) obj. -59.1976 iterations 3
Cbc0038I Pass  30: suminf.    2.54599 (8) obj. -59.1976 iterations 12
Cbc0038I Pass  31: suminf.    2.54598 (8) obj. -59.1976 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -56.4944 - took 0.04 seconds
Cbc0012I Integer solution of -56.49444 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 57 rows 34 columns
Cbc0031I 21 added rows had average density of 54.571429
Cbc0013I At root node, 21 cuts changed objective from -83.525376 to -75.107865 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8724 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2000 row cuts average 99.9 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -56.49444 best solution, best possible -75.107865 (0.91 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 38 rows 28 columns
Cbc0001I Search completed - best objective -56.49444, took 7723 iterations and 60 nodes (1.22 seconds)
Cbc0032I Strong branching done 750 times (15142 iterations), fathomed 4 nodes and fixed 36 variables
Cbc0035I Maximum depth 21, 220 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.24

