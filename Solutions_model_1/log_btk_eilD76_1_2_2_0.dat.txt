Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 76 (-2) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 6.56968e-05 - average 5.13257e-07, 10 fixed columns
Coin0506I Presolve 110 (-18) rows, 66 (-10) columns and 344 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.33998987 - largest nonzero change 0 ( 0%) - largest zero change 2.9375698e-05
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Coin0511I After Postsolve, objective 37.551041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Coin0511I After Postsolve, objective 37.551041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.55104094 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 76 columns (75 integer (75 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.084%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.3417
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.401 iterations 59
Cbc0038I Solution found of 13.401
Cbc0038I Relaxing continuous gives 13.401
Cbc0038I Rounding solution of -5.96876 is better than previous of 13.401

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.96876 to -7.98318 (0.08 seconds)
Cbc0038I Round again with cutoff of -10.9401
Cbc0038I Pass   2: suminf.    3.56059 (14) obj. -10.9401 iterations 19
Cbc0038I Pass   3: suminf.    1.32453 (7) obj. -10.9401 iterations 18
Cbc0038I Pass   4: suminf.    2.94251 (8) obj. -10.9401 iterations 17
Cbc0038I Pass   5: suminf.    2.72630 (7) obj. -10.9401 iterations 1
Cbc0038I Pass   6: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass   7: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass   8: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass   9: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  10: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  11: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  12: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  13: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  14: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  15: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  16: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  17: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  18: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  19: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  20: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  21: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  22: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  23: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  24: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  25: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  26: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  27: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  28: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  29: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  30: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  31: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -7.98318 - took 0.13 seconds
Cbc0012I Integer solution of -7.98318 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0031I 25 added rows had average density of 53.16
Cbc0013I At root node, 25 cuts changed objective from -37.551041 to -28.08918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13943 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2005 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 98 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.98318 best solution, best possible -28.08918 (1.49 seconds)
Cbc0012I Integer solution of -8.92782 found by rounding after 8005 iterations and 6 nodes (1.55 seconds)
Cbc0012I Integer solution of -9.07578 found by rounding after 8012 iterations and 7 nodes (1.55 seconds)
Cbc0012I Integer solution of -9.69696 found by rounding after 8016 iterations and 8 nodes (1.55 seconds)
Cbc0012I Integer solution of -9.9102 found by DiveCoefficient after 8110 iterations and 12 nodes (1.56 seconds)
Cbc0016I Integer solution of -9.92622 found by strong branching after 8155 iterations and 19 nodes (1.57 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 77 rows 47 columns
Cbc0012I Integer solution of -10.59874 found by RINS after 9064 iterations and 42 nodes (1.93 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 9 rows 10 columns
Cbc0010I After 115 nodes, 4 on tree, -10.59874 best solution, best possible -28.088117 (2.19 seconds)
Cbc0001I Search completed - best objective -10.59874000000001, took 12292 iterations and 156 nodes (2.31 seconds)
Cbc0032I Strong branching done 1744 times (26991 iterations), fathomed 8 nodes and fixed 100 variables
Cbc0035I Maximum depth 36, 388 variables fixed on reduced cost
Total time (CPU seconds):       2.06   (Wallclock seconds):       2.36

