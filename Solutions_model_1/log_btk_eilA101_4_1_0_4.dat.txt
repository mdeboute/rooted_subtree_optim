Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-65) rows, 77 (-26) columns and 427 (-176) elements
Clp1000I sum of infeasibilities 1.63142e-05 - average 1.1653e-07, 64 fixed columns
Coin0506I Presolve 11 (-129) rows, 11 (-66) columns and 38 (-389) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 24507.618
Clp0000I Optimal - objective value 24507.618
Coin0511I After Postsolve, objective 24507.618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1861397 - largest nonzero change 1.6089302e-05 ( 0.00078666749%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 24507.618
Clp0000I Optimal - objective value 24507.618
Clp0000I Optimal - objective value 24507.618
Coin0511I After Postsolve, objective 24507.618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24507.61763 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 77 columns (76 integer (76 of which binary)) and 427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.156%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.58418
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21467.8 iterations 36
Cbc0038I Solution found of -21467.8
Cbc0038I Relaxing continuous gives -21467.8
Cbc0038I Rounding solution of -21695.5 is better than previous of -21467.8

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 77 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -21695.5 to -22873.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -23036.6
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24540 (1) obj. -23036.6 iterations 13
Cbc0038I Solution found of -23546.8
Cbc0038I Relaxing continuous gives -23546.8
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 77 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23739
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass   3: suminf.    0.09813 (1) obj. -23739 iterations 1
Cbc0038I Pass   4: suminf.    0.09813 (1) obj. -23739 iterations 0
Cbc0038I Pass   5: suminf.    0.46154 (1) obj. -24111.9 iterations 18
Cbc0038I Pass   6: suminf.    0.31738 (1) obj. -23739 iterations 7
Cbc0038I Pass   7: suminf.    0.50149 (3) obj. -23739 iterations 23
Cbc0038I Pass   8: suminf.    0.13961 (2) obj. -23739 iterations 11
Cbc0038I Pass   9: suminf.    0.67425 (7) obj. -23739 iterations 11
Cbc0038I Pass  10: suminf.    0.13961 (2) obj. -23739 iterations 22
Cbc0038I Pass  11: suminf.    1.02326 (6) obj. -23739 iterations 13
Cbc0038I Pass  12: suminf.    0.72309 (6) obj. -23739 iterations 16
Cbc0038I Pass  13: suminf.    0.67425 (7) obj. -23739 iterations 4
Cbc0038I Pass  14: suminf.    0.67425 (7) obj. -23739 iterations 2
Cbc0038I Pass  15: suminf.    2.59044 (7) obj. -23739 iterations 16
Cbc0038I Pass  16: suminf.    2.17398 (8) obj. -23739 iterations 8
Cbc0038I Pass  17: suminf.    2.69334 (9) obj. -23739 iterations 17
Cbc0038I Pass  18: suminf.    0.43947 (5) obj. -23739 iterations 16
Cbc0038I Pass  19: suminf.    0.17391 (1) obj. -23772 iterations 13
Cbc0038I Pass  20: suminf.    0.18873 (1) obj. -23739 iterations 7
Cbc0038I Pass  21: suminf.    1.33303 (3) obj. -23739 iterations 14
Cbc0038I Pass  22: suminf.    1.01389 (5) obj. -23739 iterations 11
Cbc0038I Pass  23: suminf.    0.59332 (2) obj. -23739 iterations 16
Cbc0038I Pass  24: suminf.    0.46154 (1) obj. -23827.5 iterations 5
Cbc0038I Pass  25: suminf.    0.42732 (1) obj. -23739 iterations 6
Cbc0038I Pass  26: suminf.    1.10662 (4) obj. -23739 iterations 17
Cbc0038I Pass  27: suminf.    0.42732 (1) obj. -23739 iterations 16
Cbc0038I Pass  28: suminf.    0.60743 (3) obj. -23739 iterations 13
Cbc0038I Pass  29: suminf.    0.29630 (1) obj. -24096.5 iterations 9
Cbc0038I Pass  30: suminf.    0.55948 (3) obj. -23739 iterations 12
Cbc0038I Pass  31: suminf.    0.29630 (1) obj. -24096.5 iterations 11
Cbc0038I Pass  32: suminf.    1.15372 (4) obj. -23739 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 77 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -23546.8 to -23845.6 (0.03 seconds)
Cbc0038I Round again with cutoff of -24044.2
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 4
Cbc0038I Pass  32: suminf.    0.25401 (1) obj. -24044.2 iterations 0
Cbc0038I Pass  33: suminf.    0.25401 (1) obj. -24044.2 iterations 0
Cbc0038I Pass  34: suminf.    0.46154 (1) obj. -24111.9 iterations 16
Cbc0038I Pass  35: suminf.    0.43536 (1) obj. -24044.2 iterations 7
Cbc0038I Pass  36: suminf.    0.99901 (6) obj. -24044.2 iterations 15
Cbc0038I Pass  37: suminf.    0.43536 (1) obj. -24044.2 iterations 13
Cbc0038I Pass  38: suminf.    0.94615 (9) obj. -24044.2 iterations 17
Cbc0038I Pass  39: suminf.    0.94615 (9) obj. -24044.2 iterations 3
Cbc0038I Pass  40: suminf.    0.90411 (3) obj. -24044.2 iterations 26
Cbc0038I Pass  41: suminf.    0.52270 (3) obj. -24044.2 iterations 18
Cbc0038I Pass  42: suminf.    0.66097 (2) obj. -24044.2 iterations 12
Cbc0038I Pass  43: suminf.    1.74205 (7) obj. -24044.2 iterations 12
Cbc0038I Pass  44: suminf.    1.52566 (8) obj. -24044.2 iterations 14
Cbc0038I Pass  45: suminf.    2.46813 (9) obj. -24044.2 iterations 24
Cbc0038I Pass  46: suminf.    1.26979 (5) obj. -24044.2 iterations 15
Cbc0038I Pass  47: suminf.    0.15359 (3) obj. -24044.2 iterations 4
Cbc0038I Pass  48: suminf.    0.58070 (3) obj. -24044.2 iterations 11
Cbc0038I Pass  49: suminf.    0.75717 (3) obj. -24044.2 iterations 20
Cbc0038I Pass  50: suminf.    0.75717 (3) obj. -24044.2 iterations 5
Cbc0038I Pass  51: suminf.    0.15359 (3) obj. -24044.2 iterations 18
Cbc0038I Pass  52: suminf.    0.15774 (2) obj. -24044.2 iterations 8
Cbc0038I Pass  53: suminf.    0.62116 (4) obj. -24044.2 iterations 18
Cbc0038I Pass  54: suminf.    1.54749 (6) obj. -24044.2 iterations 15
Cbc0038I Pass  55: suminf.    0.25401 (1) obj. -24044.2 iterations 16
Cbc0038I Pass  56: suminf.    0.46154 (1) obj. -24111.9 iterations 11
Cbc0038I Pass  57: suminf.    0.43536 (1) obj. -24044.2 iterations 4
Cbc0038I Pass  58: suminf.    1.17198 (3) obj. -24044.2 iterations 21
Cbc0038I Pass  59: suminf.    0.63029 (2) obj. -24044.2 iterations 15
Cbc0038I Pass  60: suminf.    0.15623 (2) obj. -24044.2 iterations 10
Cbc0038I Pass  61: suminf.    0.15359 (3) obj. -24044.2 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 77 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23845.6 - took 0.03 seconds
Cbc0012I Integer solution of -23845.63 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 140 rows 77 columns, reduced to 10 rows 9 columns
Cbc0031I 5 added rows had average density of 18.4
Cbc0013I At root node, 5 cuts changed objective from -24507.618 to -24180.438 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 2.7 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23845.63, took 266 iterations and 8 nodes (0.08 seconds)
Cbc0032I Strong branching done 70 times (430 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 62 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

