Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 372 (-155) rows, 191 (-73) columns and 1109 (-436) elements
Clp1000I sum of infeasibilities 3.56132e-06 - average 9.57345e-09, 176 fixed columns
Coin0506I Presolve 14 (-358) rows, 14 (-177) columns and 51 (-1058) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Coin0511I After Postsolve, objective 219110.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14619844 - largest nonzero change 0 ( 0%) - largest zero change 2.9997876e-05
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Coin0511I After Postsolve, objective 219110.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 219110.7639 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 372 rows, 191 columns (190 integer (190 of which binary)) and 1109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.506%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.21922
Cbc0038I Solution found of -168337
Cbc0038I Relaxing continuous gives -168337
Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -168337 to -185318 (0.02 seconds)
Cbc0038I Round again with cutoff of -188698
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.78788 (4) obj. -188698 iterations 70
Cbc0038I Pass   2: suminf.    0.25985 (2) obj. -212268 iterations 17
Cbc0038I Pass   3: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass   4: suminf.    0.15709 (1) obj. -188698 iterations 4
Cbc0038I Pass   5: suminf.    0.71130 (2) obj. -188698 iterations 5
Cbc0038I Pass   6: suminf.    0.15709 (1) obj. -188698 iterations 4
Cbc0038I Pass   7: suminf.    2.38656 (13) obj. -188698 iterations 30
Cbc0038I Pass   8: suminf.    0.01461 (1) obj. -188698 iterations 23
Cbc0038I Solution found of -189460
Cbc0038I Relaxing continuous gives -189460
Cbc0038I Rounding solution of -206441 is better than previous of -189460

Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -208975
Cbc0038I Reduced cost fixing fixed 75 variables on major pass 3
Cbc0038I Pass   9: suminf.    1.57257 (4) obj. -208975 iterations 0
Cbc0038I Pass  10: suminf.    0.18145 (2) obj. -213322 iterations 20
Cbc0038I Pass  11: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  12: suminf.    0.50845 (2) obj. -208975 iterations 5
Cbc0038I Pass  13: suminf.    1.24270 (4) obj. -208975 iterations 28
Cbc0038I Pass  14: suminf.    0.81231 (2) obj. -208975 iterations 23
Cbc0038I Pass  15: suminf.    0.70779 (2) obj. -215315 iterations 12
Cbc0038I Pass  16: suminf.    0.41374 (4) obj. -208975 iterations 24
Cbc0038I Pass  17: suminf.    0.41374 (4) obj. -208975 iterations 7
Cbc0038I Pass  18: suminf.    1.18717 (3) obj. -213795 iterations 18
Cbc0038I Pass  19: suminf.    2.36640 (9) obj. -208975 iterations 14
Cbc0038I Pass  20: suminf.    1.57257 (4) obj. -208975 iterations 20
Cbc0038I Pass  21: suminf.    0.18145 (2) obj. -213322 iterations 18
Cbc0038I Pass  22: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  23: suminf.    0.50845 (2) obj. -208975 iterations 5
Cbc0038I Pass  24: suminf.    1.46826 (7) obj. -208975 iterations 16
Cbc0038I Pass  25: suminf.    3.73407 (13) obj. -208975 iterations 37
Cbc0038I Pass  26: suminf.    1.51066 (5) obj. -208975 iterations 17
Cbc0038I Pass  27: suminf.    1.57257 (4) obj. -208975 iterations 15
Cbc0038I Pass  28: suminf.    0.18145 (2) obj. -213322 iterations 16
Cbc0038I Pass  29: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  30: suminf.    0.50845 (2) obj. -208975 iterations 4
Cbc0038I Pass  31: suminf.    1.27999 (4) obj. -208975 iterations 16
Cbc0038I Pass  32: suminf.    1.16135 (4) obj. -208975 iterations 11
Cbc0038I Pass  33: suminf.    1.19973 (4) obj. -208975 iterations 13
Cbc0038I Pass  34: suminf.    1.18717 (3) obj. -213795 iterations 12
Cbc0038I Pass  35: suminf.    0.70779 (2) obj. -215315 iterations 2
Cbc0038I Pass  36: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  37: suminf.    0.50845 (2) obj. -208975 iterations 4
Cbc0038I Pass  38: suminf.    2.76010 (7) obj. -208975 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 162 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -206441 - took 0.03 seconds
Cbc0012I Integer solution of -206441.41 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 372 rows 191 columns, reduced to 11 rows 12 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 10.5
Cbc0013I At root node, 3 cuts changed objective from -219110.76 to -206441.41 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.4 elements, 42 column cuts (42 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 185.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -206441.41, took 61 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.11

