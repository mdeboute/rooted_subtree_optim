Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.53268e-05 - average 3.28455e-07, 15 fixed columns
Coin0506I Presolve 108 (-30) rows, 60 (-16) columns and 328 (-92) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Coin0511I After Postsolve, objective 49.5978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Coin0511I After Postsolve, objective 49.5978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.59780048 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 428 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.88307
Cbc0038I Solution found of 1.40211
Cbc0038I Relaxing continuous gives -5.9031
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -5.9031 to -23.4219 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.0182
Cbc0038I Pass   1: suminf.    2.61903 (21) obj. -26.0182 iterations 36
Cbc0038I Pass   2: suminf.    1.69934 (5) obj. -26.0182 iterations 22
Cbc0038I Pass   3: suminf.    1.38102 (5) obj. -26.0182 iterations 6
Cbc0038I Pass   4: suminf.    1.22796 (3) obj. -26.0182 iterations 6
Cbc0038I Pass   5: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass   6: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass   7: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass   8: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass   9: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  10: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  11: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  12: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  13: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  14: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  15: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  16: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  17: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  18: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  19: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  20: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  21: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  22: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  23: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  24: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  25: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  26: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  27: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  28: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  29: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  30: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Rounding solution of -24.1035 is better than previous of -23.4219

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -24.1035 to -24.2264 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.6914
Cbc0038I Pass  30: suminf.    3.22748 (21) obj. -30.6914 iterations 0
Cbc0038I Pass  31: suminf.    1.59555 (5) obj. -30.6914 iterations 15
Cbc0038I Pass  32: suminf.    1.18407 (5) obj. -30.6914 iterations 3
Cbc0038I Pass  33: suminf.    1.27135 (4) obj. -30.6914 iterations 11
Cbc0038I Pass  34: suminf.    1.27135 (4) obj. -30.6914 iterations 0
Cbc0038I Pass  35: suminf.    1.59201 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  36: suminf.    1.37999 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  37: suminf.    1.34158 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  38: suminf.    1.63011 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  39: suminf.    1.37129 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  40: suminf.    4.63304 (13) obj. -30.6914 iterations 18
Cbc0038I Pass  41: suminf.    1.75729 (9) obj. -30.6914 iterations 24
Cbc0038I Pass  42: suminf.    1.36700 (4) obj. -30.6914 iterations 13
Cbc0038I Pass  43: suminf.    1.00857 (4) obj. -30.6914 iterations 4
Cbc0038I Pass  44: suminf.    1.00831 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  45: suminf.    1.26752 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  46: suminf.    1.09648 (3) obj. -30.6914 iterations 3
Cbc0038I Pass  47: suminf.    3.65482 (13) obj. -30.6914 iterations 16
Cbc0038I Pass  48: suminf.    1.97986 (7) obj. -30.6914 iterations 18
Cbc0038I Pass  49: suminf.    1.88758 (5) obj. -30.6914 iterations 4
Cbc0038I Pass  50: suminf.    1.61417 (5) obj. -30.6914 iterations 3
Cbc0038I Pass  51: suminf.    1.50820 (5) obj. -30.6914 iterations 2
Cbc0038I Pass  52: suminf.    1.50820 (5) obj. -30.6914 iterations 1
Cbc0038I Pass  53: suminf.    1.88758 (5) obj. -30.6914 iterations 4
Cbc0038I Pass  54: suminf.    2.06424 (8) obj. -30.6914 iterations 17
Cbc0038I Pass  55: suminf.    1.42059 (6) obj. -30.6914 iterations 11
Cbc0038I Pass  56: suminf.    2.17230 (6) obj. -30.6914 iterations 10
Cbc0038I Pass  57: suminf.    1.49497 (7) obj. -30.6914 iterations 4
Cbc0038I Pass  58: suminf.    1.48616 (7) obj. -30.6914 iterations 1
Cbc0038I Pass  59: suminf.    1.45812 (5) obj. -30.6914 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -24.2264 - took 0.09 seconds
Cbc0012I Integer solution of -24.22644 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 67 rows 38 columns
Cbc0031I 24 added rows had average density of 52.458333
Cbc0013I At root node, 24 cuts changed objective from -49.383952 to -42.227817 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7788 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1772 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.22644 best solution, best possible -42.227817 (0.70 seconds)
Cbc0016I Integer solution of -24.68062 found by strong branching after 6646 iterations and 41 nodes (0.88 seconds)
Cbc0001I Search completed - best objective -24.68062, took 7174 iterations and 54 nodes (0.88 seconds)
Cbc0032I Strong branching done 616 times (12939 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 24, 87 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.89

