Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 9.29514e-07 - average 4.97066e-09, 18 fixed columns
Coin0506I Presolve 144 (-43) rows, 83 (-18) columns and 447 (-121) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 2.2734744 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Coin0511I After Postsolve, objective 35.154566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Coin0511I After Postsolve, objective 35.154566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.15456576 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 13.6601
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.62538 iterations 81
Cbc0038I Solution found of 8.62538
Cbc0038I Relaxing continuous gives 8.62538
Cbc0038I Rounding solution of 5.4436 is better than previous of 8.62538

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 5.4436 to -3.27315 (0.08 seconds)
Cbc0038I Round again with cutoff of -6.46138
Cbc0038I Pass   2: suminf.    2.37288 (14) obj. -6.46138 iterations 15
Cbc0038I Pass   3: suminf.    1.83949 (18) obj. -6.46138 iterations 9
Cbc0038I Pass   4: suminf.    2.51702 (10) obj. -6.46138 iterations 25
Cbc0038I Pass   5: suminf.    2.21909 (9) obj. -6.46138 iterations 2
Cbc0038I Pass   6: suminf.    2.36853 (7) obj. -6.46138 iterations 17
Cbc0038I Pass   7: suminf.    1.71901 (6) obj. -6.46138 iterations 1
Cbc0038I Pass   8: suminf.    1.11192 (5) obj. -6.46138 iterations 6
Cbc0038I Pass   9: suminf.    1.10031 (7) obj. -6.46138 iterations 3
Cbc0038I Pass  10: suminf.    1.85173 (6) obj. -6.46138 iterations 12
Cbc0038I Pass  11: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  12: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  13: suminf.    1.90394 (6) obj. -6.46138 iterations 9
Cbc0038I Pass  14: suminf.    1.69463 (8) obj. -6.46138 iterations 7
Cbc0038I Pass  15: suminf.    2.62330 (8) obj. -6.46138 iterations 12
Cbc0038I Pass  16: suminf.    2.62330 (8) obj. -6.46138 iterations 0
Cbc0038I Pass  17: suminf.    2.76737 (7) obj. -6.46138 iterations 10
Cbc0038I Pass  18: suminf.    1.76588 (6) obj. -6.46138 iterations 6
Cbc0038I Pass  19: suminf.    1.85173 (6) obj. -6.46138 iterations 11
Cbc0038I Pass  20: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  21: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  22: suminf.    1.90394 (6) obj. -6.46138 iterations 8
Cbc0038I Pass  23: suminf.    1.69463 (8) obj. -6.46138 iterations 6
Cbc0038I Pass  24: suminf.    2.62330 (8) obj. -6.46138 iterations 12
Cbc0038I Pass  25: suminf.    2.62330 (8) obj. -6.46138 iterations 0
Cbc0038I Pass  26: suminf.    2.76737 (7) obj. -6.46138 iterations 10
Cbc0038I Pass  27: suminf.    1.76588 (6) obj. -6.46138 iterations 6
Cbc0038I Pass  28: suminf.    1.85173 (6) obj. -6.46138 iterations 11
Cbc0038I Pass  29: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  30: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  31: suminf.    1.90394 (6) obj. -6.46138 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 104 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -3.27315 to -4.40497 (0.16 seconds)
Cbc0038I Round again with cutoff of -12.2
Cbc0038I Pass  31: suminf.    3.97564 (15) obj. -12.2 iterations 1
Cbc0038I Pass  32: suminf.    3.97564 (15) obj. -12.2 iterations 0
Cbc0038I Pass  33: suminf.    3.21792 (9) obj. -12.2 iterations 16
Cbc0038I Pass  34: suminf.    2.73720 (9) obj. -12.2 iterations 5
Cbc0038I Pass  35: suminf.    2.74390 (10) obj. -12.2 iterations 2
Cbc0038I Pass  36: suminf.    3.12527 (11) obj. -12.2 iterations 12
Cbc0038I Pass  37: suminf.    2.40966 (8) obj. -12.2 iterations 3
Cbc0038I Pass  38: suminf.    2.40966 (8) obj. -12.2 iterations 0
Cbc0038I Pass  39: suminf.    2.72897 (10) obj. -12.2 iterations 9
Cbc0038I Pass  40: suminf.    2.66241 (10) obj. -12.2 iterations 1
Cbc0038I Pass  41: suminf.    2.66241 (10) obj. -12.2 iterations 2
Cbc0038I Pass  42: suminf.    3.14072 (9) obj. -12.2 iterations 16
Cbc0038I Pass  43: suminf.    2.96237 (10) obj. -12.2 iterations 5
Cbc0038I Pass  44: suminf.    3.80208 (10) obj. -12.2 iterations 9
Cbc0038I Pass  45: suminf.    2.27322 (7) obj. -12.2 iterations 4
Cbc0038I Pass  46: suminf.    2.06393 (8) obj. -12.2 iterations 2
Cbc0038I Pass  47: suminf.    1.96764 (7) obj. -12.2 iterations 2
Cbc0038I Pass  48: suminf.    2.44798 (8) obj. -12.2 iterations 8
Cbc0038I Pass  49: suminf.    2.40966 (8) obj. -12.2 iterations 1
Cbc0038I Pass  50: suminf.    2.72897 (10) obj. -12.2 iterations 9
Cbc0038I Pass  51: suminf.    2.66241 (10) obj. -12.2 iterations 1
Cbc0038I Pass  52: suminf.    2.66241 (10) obj. -12.2 iterations 2
Cbc0038I Pass  53: suminf.    3.14072 (9) obj. -12.2 iterations 14
Cbc0038I Pass  54: suminf.    2.96237 (10) obj. -12.2 iterations 5
Cbc0038I Pass  55: suminf.    3.80208 (10) obj. -12.2 iterations 9
Cbc0038I Pass  56: suminf.    2.27322 (7) obj. -12.2 iterations 4
Cbc0038I Pass  57: suminf.    2.06393 (8) obj. -12.2 iterations 2
Cbc0038I Pass  58: suminf.    1.96764 (7) obj. -12.2 iterations 2
Cbc0038I Pass  59: suminf.    2.44798 (8) obj. -12.2 iterations 8
Cbc0038I Pass  60: suminf.    2.40966 (8) obj. -12.2 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 104 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -4.40497 - took 0.21 seconds
Cbc0012I Integer solution of -4.40497 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 62 columns
Cbc0012I Integer solution of -4.61368 found by RINS after 0 iterations and 0 nodes (0.32 seconds)
Cbc0031I 30 added rows had average density of 88.033333
Cbc0013I At root node, 30 cuts changed objective from -35.154566 to -26.663369 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18601 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2704 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.192 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.61368 best solution, best possible -26.663369 (1.86 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 57 columns
Cbc0012I Integer solution of -4.835008 found by RINS after 11495 iterations and 41 nodes (2.35 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 67 rows 41 columns
Cbc0010I After 108 nodes, 9 on tree, -4.835008 best solution, best possible -26.663369 (2.56 seconds)
Cbc0001I Search completed - best objective -4.835008000000009, took 14274 iterations and 122 nodes (2.60 seconds)
Cbc0032I Strong branching done 1356 times (27709 iterations), fathomed 14 nodes and fixed 68 variables
Cbc0035I Maximum depth 36, 383 variables fixed on reduced cost
Total time (CPU seconds):       2.49   (Wallclock seconds):       2.62

