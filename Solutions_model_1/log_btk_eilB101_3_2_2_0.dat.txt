Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 177 (-28) rows, 101 (-2) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 1.57551e-05 - average 8.90118e-08, 25 fixed columns
Coin0506I Presolve 129 (-48) rows, 75 (-26) columns and 400 (-148) elements
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 1.9524379 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 49.445942
Clp0000I Optimal - objective value 49.445942
Coin0511I After Postsolve, objective 49.445942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.445942
Clp0000I Optimal - objective value 49.445942
Clp0000I Optimal - objective value 49.445942
Coin0511I After Postsolve, objective 49.445942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.44594159 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 176 rows, 101 columns (100 integer (100 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.23585
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.02303 iterations 44
Cbc0038I Solution found of 0.02303
Cbc0038I Relaxing continuous gives 0.02303
Cbc0038I Rounding solution of -7.54864 is better than previous of 0.02303

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 101 columns, reduced to 60 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -7.54864 to -20.4938 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.3891
Cbc0038I Pass   2: suminf.    1.79357 (8) obj. -23.3891 iterations 11
Cbc0038I Pass   3: suminf.    1.20973 (5) obj. -23.3891 iterations 7
Cbc0038I Pass   4: suminf.    0.80987 (5) obj. -23.3891 iterations 1
Cbc0038I Pass   5: suminf.    2.06453 (5) obj. -23.3891 iterations 7
Cbc0038I Pass   6: suminf.    0.84961 (7) obj. -23.3891 iterations 5
Cbc0038I Pass   7: suminf.    0.78104 (5) obj. -23.3891 iterations 3
Cbc0038I Pass   8: suminf.    1.51155 (4) obj. -23.3891 iterations 14
Cbc0038I Pass   9: suminf.    0.67418 (5) obj. -23.3891 iterations 2
Cbc0038I Pass  10: suminf.    0.78104 (5) obj. -23.3891 iterations 11
Cbc0038I Pass  11: suminf.    2.71268 (8) obj. -23.3891 iterations 28
Cbc0038I Pass  12: suminf.    1.39373 (6) obj. -23.3891 iterations 10
Cbc0038I Pass  13: suminf.    1.28791 (5) obj. -23.3891 iterations 18
Cbc0038I Pass  14: suminf.    1.19216 (4) obj. -23.3891 iterations 1
Cbc0038I Pass  15: suminf.    0.88641 (4) obj. -23.3891 iterations 6
Cbc0038I Pass  16: suminf.    0.88641 (4) obj. -23.3891 iterations 0
Cbc0038I Pass  17: suminf.    1.26313 (4) obj. -23.3891 iterations 5
Cbc0038I Pass  18: suminf.    2.52393 (10) obj. -23.3891 iterations 23
Cbc0038I Pass  19: suminf.    2.35644 (10) obj. -23.3891 iterations 9
Cbc0038I Pass  20: suminf.    0.97641 (4) obj. -23.3891 iterations 20
Cbc0038I Pass  21: suminf.    0.80923 (6) obj. -23.3891 iterations 4
Cbc0038I Pass  22: suminf.    1.57693 (5) obj. -23.3891 iterations 12
Cbc0038I Pass  23: suminf.    1.57690 (5) obj. -23.3891 iterations 1
Cbc0038I Pass  24: suminf.    1.80722 (6) obj. -23.3891 iterations 4
Cbc0038I Pass  25: suminf.    0.97641 (4) obj. -23.3891 iterations 8
Cbc0038I Pass  26: suminf.    0.80923 (6) obj. -23.3891 iterations 4
Cbc0038I Pass  27: suminf.    1.57693 (5) obj. -23.3891 iterations 11
Cbc0038I Pass  28: suminf.    1.57690 (5) obj. -23.3891 iterations 1
Cbc0038I Pass  29: suminf.    1.80722 (6) obj. -23.3891 iterations 4
Cbc0038I Pass  30: suminf.    0.97641 (4) obj. -23.3891 iterations 8
Cbc0038I Pass  31: suminf.    0.80923 (6) obj. -23.3891 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 101 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -20.4938 - took 0.08 seconds
Cbc0012I Integer solution of -20.49379 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 176 rows 101 columns, reduced to 60 rows 37 columns
Cbc0031I 24 added rows had average density of 68.708333
Cbc0013I At root node, 24 cuts changed objective from -49.445942 to -41.141851 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10838 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1939 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.49379 best solution, best possible -41.141851 (0.99 seconds)
Cbc0038I Full problem 176 rows 101 columns, reduced to 47 rows 32 columns
Cbc0001I Search completed - best objective -20.49379, took 9789 iterations and 94 nodes (1.48 seconds)
Cbc0032I Strong branching done 1114 times (18583 iterations), fathomed 5 nodes and fixed 50 variables
Cbc0035I Maximum depth 27, 330 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.50

