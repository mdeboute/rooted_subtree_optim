Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 0.000121723 - average 6.47465e-07, 11 fixed columns
Coin0506I Presolve 155 (-33) rows, 89 (-12) columns and 480 (-90) elements
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.2734366 - largest nonzero change 0 ( 0%) - largest zero change 2.1620094e-05
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Coin0511I After Postsolve, objective 44.039392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Coin0511I After Postsolve, objective 44.039392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.03939174 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 13.8619
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.1351 iterations 101
Cbc0038I Solution found of 10.1351
Cbc0038I Relaxing continuous gives 10.1351
Cbc0038I Rounding solution of 4.67302 is better than previous of 10.1351

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 102 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 4.67302 to -13.8725 (0.08 seconds)
Cbc0038I Round again with cutoff of -16.8893
Cbc0038I Pass   2: suminf.    3.86741 (31) obj. -16.8893 iterations 39
Cbc0038I Pass   3: suminf.    3.86047 (33) obj. -16.8893 iterations 2
Cbc0038I Pass   4: suminf.    2.33719 (9) obj. -16.8893 iterations 33
Cbc0038I Pass   5: suminf.    2.33719 (9) obj. -16.8893 iterations 0
Cbc0038I Pass   6: suminf.    3.18954 (10) obj. -16.8893 iterations 21
Cbc0038I Pass   7: suminf.    3.18954 (10) obj. -16.8893 iterations 0
Cbc0038I Pass   8: suminf.    2.78078 (9) obj. -16.8893 iterations 10
Cbc0038I Pass   9: suminf.    2.78078 (9) obj. -16.8893 iterations 1
Cbc0038I Pass  10: suminf.    3.53543 (13) obj. -16.8893 iterations 18
Cbc0038I Pass  11: suminf.    3.46141 (12) obj. -16.8893 iterations 1
Cbc0038I Pass  12: suminf.    3.46141 (12) obj. -16.8893 iterations 0
Cbc0038I Pass  13: suminf.    3.44329 (11) obj. -16.8893 iterations 13
Cbc0038I Pass  14: suminf.    3.19303 (9) obj. -16.8893 iterations 2
Cbc0038I Pass  15: suminf.    3.58934 (11) obj. -16.8893 iterations 11
Cbc0038I Pass  16: suminf.    3.58367 (12) obj. -16.8893 iterations 1
Cbc0038I Pass  17: suminf.    3.06648 (9) obj. -16.8893 iterations 9
Cbc0038I Pass  18: suminf.    2.42792 (8) obj. -16.8893 iterations 4
Cbc0038I Pass  19: suminf.    3.65930 (11) obj. -16.8893 iterations 11
Cbc0038I Pass  20: suminf.    3.65930 (11) obj. -16.8893 iterations 0
Cbc0038I Pass  21: suminf.    3.83514 (11) obj. -16.8893 iterations 6
Cbc0038I Pass  22: suminf.    2.96413 (13) obj. -16.8893 iterations 8
Cbc0038I Pass  23: suminf.    3.11118 (8) obj. -16.8893 iterations 15
Cbc0038I Pass  24: suminf.    3.00813 (9) obj. -16.8893 iterations 2
Cbc0038I Pass  25: suminf.    2.07688 (7) obj. -16.8893 iterations 4
Cbc0038I Pass  26: suminf.    2.07688 (7) obj. -16.8893 iterations 0
Cbc0038I Pass  27: suminf.    2.92529 (9) obj. -16.8893 iterations 7
Cbc0038I Pass  28: suminf.    2.33661 (8) obj. -16.8893 iterations 4
Cbc0038I Pass  29: suminf.    2.32764 (7) obj. -16.8893 iterations 1
Cbc0038I Pass  30: suminf.    3.00813 (9) obj. -16.8893 iterations 9
Cbc0038I Pass  31: suminf.    2.07688 (7) obj. -16.8893 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 110 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -13.8725 to -15.1397 (0.16 seconds)
Cbc0038I Round again with cutoff of -22.3193
Cbc0038I Pass  31: suminf.    5.60847 (31) obj. -22.3193 iterations 0
Cbc0038I Pass  32: suminf.    5.38569 (39) obj. -22.3193 iterations 16
Cbc0038I Pass  33: suminf.    3.62308 (11) obj. -22.3193 iterations 41
Cbc0038I Pass  34: suminf.    3.11290 (10) obj. -22.3193 iterations 3
Cbc0038I Pass  35: suminf.    3.93508 (13) obj. -22.3193 iterations 15
Cbc0038I Pass  36: suminf.    3.74406 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  37: suminf.    4.82147 (14) obj. -22.3193 iterations 15
Cbc0038I Pass  38: suminf.    4.35305 (15) obj. -22.3193 iterations 2
Cbc0038I Pass  39: suminf.    3.76936 (11) obj. -22.3193 iterations 15
Cbc0038I Pass  40: suminf.    3.51783 (11) obj. -22.3193 iterations 3
Cbc0038I Pass  41: suminf.    4.76734 (12) obj. -22.3193 iterations 8
Cbc0038I Pass  42: suminf.    3.75505 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  43: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  44: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  45: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  46: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  47: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  48: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  49: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  50: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  51: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  52: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  53: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  54: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  55: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  56: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  57: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  58: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  59: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  60: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 118 rows 70 columns - 1 fixed gives 113, 69 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 113 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -15.1397 - took 0.24 seconds
Cbc0012I Integer solution of -15.13971 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 102 rows 62 columns
Cbc0031I 41 added rows had average density of 56.243902
Cbc0013I At root node, 41 cuts changed objective from -44.039392 to -35.682108 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19378 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3444 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.13971 best solution, best possible -35.682108 (1.81 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 77 rows 48 columns
Cbc0012I Integer solution of -15.24346 found by rounding after 12873 iterations and 79 nodes (2.28 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -15.24346, took 14205 iterations and 184 nodes (2.39 seconds)
Cbc0032I Strong branching done 1466 times (23753 iterations), fathomed 39 nodes and fixed 89 variables
Cbc0035I Maximum depth 29, 460 variables fixed on reduced cost
Total time (CPU seconds):       2.34   (Wallclock seconds):       2.41

