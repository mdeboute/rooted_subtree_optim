Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 9.79607e-06 - average 1.81409e-07, 3 fixed columns
Coin0506I Presolve 48 (-6) rows, 27 (-3) columns and 143 (-18) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Coin0511I After Postsolve, objective 82.048814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Coin0511I After Postsolve, objective 82.048814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.04881436 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.8738
Cbc0038I Solution found of 2.9822
Cbc0038I Relaxing continuous gives -3
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3 to -48.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.3569
Cbc0038I Pass   1: suminf.    0.35248 (3) obj. -51.3569 iterations 19
Cbc0038I Pass   2: suminf.    0.33531 (4) obj. -51.3569 iterations 1
Cbc0038I Pass   3: suminf.    0.65436 (2) obj. -64.2121 iterations 10
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -57.4668 iterations 1
Cbc0038I Pass   5: suminf.    0.46795 (1) obj. -51.3569 iterations 1
Cbc0038I Pass   6: suminf.    0.66547 (3) obj. -51.3569 iterations 6
Cbc0038I Pass   7: suminf.    0.66547 (3) obj. -51.3569 iterations 0
Cbc0038I Pass   8: suminf.    0.65011 (2) obj. -51.3569 iterations 1
Cbc0038I Pass   9: suminf.    0.46795 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  10: suminf.    0.49593 (1) obj. -53.1145 iterations 1
Cbc0038I Pass  11: suminf.    0.95431 (3) obj. -51.3569 iterations 3
Cbc0038I Pass  12: suminf.    0.85645 (5) obj. -51.3569 iterations 4
Cbc0038I Pass  13: suminf.    0.62814 (4) obj. -51.3569 iterations 4
Cbc0038I Pass  14: suminf.    1.59522 (4) obj. -51.3569 iterations 8
Cbc0038I Pass  15: suminf.    0.91322 (3) obj. -51.3569 iterations 4
Cbc0038I Pass  16: suminf.    0.32315 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  17: suminf.    0.27642 (1) obj. -53.6308 iterations 1
Cbc0038I Pass  18: suminf.    2.12421 (7) obj. -51.3569 iterations 7
Cbc0038I Pass  19: suminf.    0.89689 (4) obj. -51.3569 iterations 6
Cbc0038I Pass  20: suminf.    0.41219 (1) obj. -51.3569 iterations 5
Cbc0038I Pass  21: suminf.    0.35772 (1) obj. -54.0075 iterations 2
Cbc0038I Pass  22: suminf.    0.41219 (1) obj. -51.3569 iterations 1
Cbc0038I Pass  23: suminf.    1.31847 (6) obj. -51.3569 iterations 8
Cbc0038I Pass  24: suminf.    0.37576 (3) obj. -51.3569 iterations 7
Cbc0038I Pass  25: suminf.    0.52068 (2) obj. -60.7903 iterations 5
Cbc0038I Pass  26: suminf.    0.24877 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  27: suminf.    0.31707 (1) obj. -54.6809 iterations 1
Cbc0038I Pass  28: suminf.    0.92453 (3) obj. -51.3569 iterations 4
Cbc0038I Pass  29: suminf.    0.49192 (1) obj. -51.3569 iterations 6
Cbc0038I Pass  30: suminf.    0.31707 (1) obj. -60.6525 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -48.6667 - took 0.01 seconds
Cbc0012I Integer solution of -48.6667 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 20 rows 13 columns
Cbc0031I 7 added rows had average density of 20.714286
Cbc0013I At root node, 7 cuts changed objective from -75.568161 to -62.859263 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 764 row cuts average 3.8 elements, 4 column cuts (4 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 561 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -48.66669999999999, took 1880 iterations and 16 nodes (0.19 seconds)
Cbc0032I Strong branching done 150 times (1235 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

