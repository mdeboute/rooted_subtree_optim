Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 60 (-39) rows, 34 (-16) columns and 151 (-134) elements
Clp0000I Optimal - objective value 12128.454
Coin0511I After Postsolve, objective 12128.454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12128.4535 - 26 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 60 rows, 34 columns (33 integer (33 of which binary)) and 151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9246.66 iterations 20
Cbc0038I Solution found of -9246.66
Cbc0038I Relaxing continuous gives -9246.66
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -9246.66 to -10933.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -11053.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.20117 (6) obj. -11053.3 iterations 7
Cbc0038I Pass   3: suminf.    1.00000 (7) obj. -11053.3 iterations 2
Cbc0038I Pass   4: suminf.    1.41866 (6) obj. -11053.3 iterations 8
Cbc0038I Pass   5: suminf.    0.15704 (1) obj. -11053.3 iterations 9
Cbc0038I Pass   6: suminf.    0.66078 (2) obj. -11053.3 iterations 2
Cbc0038I Pass   7: suminf.    0.75273 (2) obj. -11053.3 iterations 4
Cbc0038I Pass   8: suminf.    1.55393 (4) obj. -11053.3 iterations 10
Cbc0038I Pass   9: suminf.    0.47156 (3) obj. -11053.3 iterations 5
Cbc0038I Pass  10: suminf.    0.65259 (2) obj. -11053.3 iterations 6
Cbc0038I Pass  11: suminf.    0.04234 (1) obj. -11053.3 iterations 1
Cbc0038I Pass  12: suminf.    0.25870 (2) obj. -11053.3 iterations 5
Cbc0038I Pass  13: suminf.    1.78704 (5) obj. -11053.3 iterations 7
Cbc0038I Pass  14: suminf.    0.59703 (4) obj. -11053.3 iterations 4
Cbc0038I Pass  15: suminf.    0.55599 (4) obj. -11053.3 iterations 1
Cbc0038I Pass  16: suminf.    0.24791 (3) obj. -11053.3 iterations 8
Cbc0038I Pass  17: suminf.    1.00060 (3) obj. -11053.3 iterations 3
Cbc0038I Pass  18: suminf.    0.62999 (2) obj. -11053.3 iterations 1
Cbc0038I Pass  19: suminf.    1.67327 (6) obj. -11053.3 iterations 8
Cbc0038I Pass  20: suminf.    1.20816 (4) obj. -11053.3 iterations 3
Cbc0038I Pass  21: suminf.    0.86353 (3) obj. -11053.3 iterations 3
Cbc0038I Pass  22: suminf.    0.39902 (1) obj. -11053.3 iterations 3
Cbc0038I Pass  23: suminf.    0.32745 (1) obj. -11053.3 iterations 1
Cbc0038I Pass  24: suminf.    0.46380 (2) obj. -11053.3 iterations 5
Cbc0038I Pass  25: suminf.    0.32745 (1) obj. -11053.3 iterations 4
Cbc0038I Pass  26: suminf.    1.00000 (7) obj. -11053.3 iterations 6
Cbc0038I Pass  27: suminf.    0.88603 (3) obj. -11053.3 iterations 5
Cbc0038I Pass  28: suminf.    0.83288 (5) obj. -11053.3 iterations 6
Cbc0038I Pass  29: suminf.    0.56072 (2) obj. -11053.3 iterations 5
Cbc0038I Pass  30: suminf.    0.24791 (3) obj. -11053.3 iterations 4
Cbc0038I Pass  31: suminf.    1.00060 (3) obj. -11053.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -10933.8 - took 0.01 seconds
Cbc0012I Integer solution of -10933.799 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -11133.487 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 60 rows 34 columns, reduced to 12 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 18
Cbc0013I At root node, 2 cuts changed objective from -12128.454 to -11133.487 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 109 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -11133.487, took 65 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.07

