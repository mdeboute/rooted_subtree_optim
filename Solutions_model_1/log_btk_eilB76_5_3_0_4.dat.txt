Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 60 (-18) columns and 321 (-132) elements
Clp1000I sum of infeasibilities 1.54554e-06 - average 1.4861e-08, 54 fixed columns
Coin0506I Presolve 5 (-99) rows, 5 (-55) columns and 16 (-305) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 16103.245
Clp0000I Optimal - objective value 16103.245
Coin0511I After Postsolve, objective 16103.245, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8427575 - largest nonzero change 1.6729689e-05 ( 0.0016729689%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 16103.245
Clp0000I Optimal - objective value 16103.245
Clp0000I Optimal - objective value 16103.245
Coin0511I After Postsolve, objective 16103.245, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16103.24498 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 60 columns (59 integer (59 of which binary)) and 374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.603%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.17978
Cbc0038I Solution found of -12245.8
Cbc0038I Relaxing continuous gives -12245.8
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 60 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -12597.9
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.09760 (1) obj. -12597.9 iterations 9
Cbc0038I Pass   2: suminf.    0.27273 (1) obj. -14869.2 iterations 4
Cbc0038I Pass   3: suminf.    0.17721 (2) obj. -12597.9 iterations 9
Cbc0038I Pass   4: suminf.    0.05709 (1) obj. -12597.9 iterations 8
Cbc0038I Pass   5: suminf.    0.15152 (1) obj. -12938.5 iterations 4
Cbc0038I Pass   6: suminf.    0.75692 (3) obj. -12597.9 iterations 10
Cbc0038I Pass   7: suminf.    0.75692 (3) obj. -12597.9 iterations 3
Cbc0038I Pass   8: suminf.    0.09760 (1) obj. -12597.9 iterations 11
Cbc0038I Pass   9: suminf.    0.09760 (1) obj. -12597.9 iterations 0
Cbc0038I Pass  10: suminf.    0.27273 (1) obj. -14869.2 iterations 4
Cbc0038I Pass  11: suminf.    0.52351 (3) obj. -12597.9 iterations 8
Cbc0038I Pass  12: suminf.    0.52351 (3) obj. -12597.9 iterations 4
Cbc0038I Pass  13: suminf.    0.61795 (4) obj. -12597.9 iterations 19
Cbc0038I Pass  14: suminf.    0.33871 (2) obj. -12723.5 iterations 9
Cbc0038I Pass  15: suminf.    0.42098 (2) obj. -12597.9 iterations 5
Cbc0038I Pass  16: suminf.    1.27887 (6) obj. -12597.9 iterations 14
Cbc0038I Pass  17: suminf.    1.27244 (6) obj. -12597.9 iterations 4
Cbc0038I Pass  18: suminf.    0.36852 (2) obj. -12597.9 iterations 12
Cbc0038I Pass  19: suminf.    0.09760 (1) obj. -12597.9 iterations 6
Cbc0038I Pass  20: suminf.    0.27273 (1) obj. -14869.2 iterations 4
Cbc0038I Pass  21: suminf.    1.05195 (3) obj. -13836.5 iterations 10
Cbc0038I Pass  22: suminf.    0.31706 (1) obj. -12597.9 iterations 8
Cbc0038I Pass  23: suminf.    0.25719 (3) obj. -12597.9 iterations 7
Cbc0038I Pass  24: suminf.    0.06579 (2) obj. -12745.4 iterations 2
Cbc0038I Pass  25: suminf.    0.09760 (1) obj. -12597.9 iterations 10
Cbc0038I Pass  26: suminf.    0.09760 (1) obj. -12597.9 iterations 0
Cbc0038I Pass  27: suminf.    0.27273 (1) obj. -14869.2 iterations 3
Cbc0038I Pass  28: suminf.    0.21536 (3) obj. -13637.8 iterations 8
Cbc0038I Pass  29: suminf.    0.03704 (1) obj. -13969.6 iterations 3
Cbc0038I Pass  30: suminf.    0.32432 (1) obj. -12597.9 iterations 3
Cbc0038I Rounding solution of -12615.8 is better than previous of -12245.8

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 60 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -12615.8 to -14140.5 (0.03 seconds)
Cbc0038I Round again with cutoff of -14465.7
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.38458 (1) obj. -14465.7 iterations 0
Cbc0038I Pass  31: suminf.    0.27273 (1) obj. -14869.2 iterations 4
Cbc0038I Pass  32: suminf.    0.27273 (1) obj. -14869.2 iterations 5
Cbc0038I Pass  33: suminf.    0.27273 (1) obj. -14869.2 iterations 4
Cbc0038I Pass  34: suminf.    0.27273 (1) obj. -14869.2 iterations 3
Cbc0038I Pass  35: suminf.    1.06440 (4) obj. -14465.7 iterations 4
Cbc0038I Pass  36: suminf.    0.59176 (4) obj. -14465.7 iterations 7
Cbc0038I Pass  37: suminf.    0.14286 (1) obj. -14823.1 iterations 5
Cbc0038I Pass  38: suminf.    0.14286 (1) obj. -14823.1 iterations 1
Cbc0038I Pass  39: suminf.    0.14286 (1) obj. -14823.1 iterations 1
Cbc0038I Pass  40: suminf.    0.38458 (1) obj. -14465.7 iterations 6
Cbc0038I Pass  41: suminf.    1.09910 (6) obj. -14465.7 iterations 8
Cbc0038I Pass  42: suminf.    0.38458 (1) obj. -14465.7 iterations 6
Cbc0038I Pass  43: suminf.    0.27273 (1) obj. -14869.2 iterations 3
Cbc0038I Pass  44: suminf.    0.43231 (2) obj. -14571 iterations 9
Cbc0038I Pass  45: suminf.    0.16771 (3) obj. -14465.7 iterations 4
Cbc0038I Pass  46: suminf.    0.31911 (2) obj. -14717.1 iterations 3
Cbc0038I Pass  47: suminf.    0.79431 (2) obj. -14465.7 iterations 8
Cbc0038I Pass  48: suminf.    0.60578 (3) obj. -14465.7 iterations 3
Cbc0038I Pass  49: suminf.    0.27273 (1) obj. -14869.2 iterations 5
Cbc0038I Pass  50: suminf.    0.27273 (1) obj. -14869.2 iterations 1
Cbc0038I Pass  51: suminf.    0.38458 (1) obj. -14465.7 iterations 3
Cbc0038I Pass  52: suminf.    1.06656 (4) obj. -14465.7 iterations 7
Cbc0038I Pass  53: suminf.    0.38458 (1) obj. -14465.7 iterations 7
Cbc0038I Pass  54: suminf.    0.47462 (2) obj. -14465.7 iterations 7
Cbc0038I Pass  55: suminf.    0.14286 (1) obj. -14823.1 iterations 3
Cbc0038I Pass  56: suminf.    0.68311 (6) obj. -14465.7 iterations 9
Cbc0038I Pass  57: suminf.    0.60930 (5) obj. -14465.7 iterations 2
Cbc0038I Pass  58: suminf.    0.82891 (4) obj. -14465.7 iterations 5
Cbc0038I Pass  59: suminf.    0.69957 (3) obj. -14465.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 60 columns, reduced to 20 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -14140.5 to -14169.1 (0.04 seconds)
Cbc0038I Round again with cutoff of -14855.9
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.27639 (1) obj. -14855.9 iterations 0
Cbc0038I Pass  60: suminf.    0.27273 (1) obj. -14869.2 iterations 4
Cbc0038I Pass  61: suminf.    1.04191 (5) obj. -14855.9 iterations 7
Cbc0038I Pass  62: suminf.    1.02406 (4) obj. -14855.9 iterations 9
Cbc0038I Pass  63: suminf.    1.05060 (3) obj. -14855.9 iterations 5
Cbc0038I Pass  64: suminf.    1.21571 (5) obj. -14855.9 iterations 4
Cbc0038I Pass  65: suminf.    1.05882 (4) obj. -14855.9 iterations 6
Cbc0038I Pass  66: suminf.    1.17031 (3) obj. -14855.9 iterations 7
Cbc0038I Pass  67: suminf.    0.40530 (4) obj. -14855.9 iterations 7
Cbc0038I Pass  68: suminf.    0.40530 (4) obj. -14855.9 iterations 5
Cbc0038I Pass  69: suminf.    1.05161 (3) obj. -14855.9 iterations 6
Cbc0038I Pass  70: suminf.    0.21886 (3) obj. -14855.9 iterations 3
Cbc0038I Pass  71: suminf.    1.23687 (4) obj. -14855.9 iterations 6
Cbc0038I Pass  72: suminf.    1.23687 (4) obj. -14855.9 iterations 2
Cbc0038I Pass  73: suminf.    0.28717 (2) obj. -14855.9 iterations 6
Cbc0038I Pass  74: suminf.    0.39706 (3) obj. -15438.4 iterations 4
Cbc0038I Pass  75: suminf.    0.27273 (1) obj. -14869.2 iterations 9
Cbc0038I Pass  76: suminf.    0.27273 (1) obj. -14869.2 iterations 5
Cbc0038I Pass  77: suminf.    0.27639 (1) obj. -14855.9 iterations 3
Cbc0038I Pass  78: suminf.    0.27273 (1) obj. -14869.2 iterations 7
Cbc0038I Pass  79: suminf.    0.27273 (1) obj. -14869.2 iterations 5
Cbc0038I Pass  80: suminf.    2.52076 (6) obj. -14855.9 iterations 11
Cbc0038I Pass  81: suminf.    1.11562 (4) obj. -14855.9 iterations 5
Cbc0038I Pass  82: suminf.    0.21886 (3) obj. -14855.9 iterations 1
Cbc0038I Pass  83: suminf.    1.23687 (4) obj. -14855.9 iterations 5
Cbc0038I Pass  84: suminf.    1.23687 (4) obj. -14855.9 iterations 1
Cbc0038I Pass  85: suminf.    0.28717 (2) obj. -14855.9 iterations 5
Cbc0038I Pass  86: suminf.    0.27273 (1) obj. -14869.2 iterations 6
Cbc0038I Pass  87: suminf.    0.27273 (1) obj. -14869.2 iterations 3
Cbc0038I Pass  88: suminf.    0.27639 (1) obj. -14855.9 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 60 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -14169.1 - took 0.03 seconds
Cbc0012I Integer solution of -14169.059 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 104 rows 60 columns, reduced to 10 rows 10 columns
Cbc0031I 8 added rows had average density of 9.375
Cbc0013I At root node, 8 cuts changed objective from -15766.465 to -14718.399 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 2.4 elements, 16 column cuts (16 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 43 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 58.7 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14169.059, took 112 iterations and 2 nodes (0.27 seconds)
Cbc0032I Strong branching done 14 times (56 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.28

