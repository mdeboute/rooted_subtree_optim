Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 2.34163e-07 - average 1.3009e-08, 0 fixed columns
Coin0506I Presolve 18 (0) rows, 12 (0) columns and 52 (0) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Coin0511I After Postsolve, objective 42.58754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Coin0511I After Postsolve, objective 42.58754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.58754007 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.67724
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.8503 iterations 9
Cbc0038I Solution found of -15.8503
Cbc0038I Relaxing continuous gives -15.8503
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -18.3866
Cbc0038I Pass   2: suminf.    0.12637 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   3: suminf.    0.48610 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   4: suminf.    0.39171 (3) obj. -18.3866 iterations 4
Cbc0038I Pass   5: suminf.    0.36315 (3) obj. -18.3866 iterations 2
Cbc0038I Pass   6: suminf.    0.55418 (2) obj. -18.3866 iterations 6
Cbc0038I Pass   7: suminf.    0.42528 (1) obj. -18.3866 iterations 2
Cbc0038I Pass   8: suminf.    0.46590 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   9: suminf.    0.21053 (1) obj. -18.3866 iterations 2
Cbc0038I Pass  10: suminf.    0.21053 (1) obj. -18.3866 iterations 0
Cbc0038I Pass  11: suminf.    0.85187 (4) obj. -18.3866 iterations 9
Cbc0038I Pass  12: suminf.    0.85187 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  13: suminf.    0.48845 (8) obj. -18.3866 iterations 9
Cbc0038I Pass  14: suminf.    0.91427 (4) obj. -18.3866 iterations 11
Cbc0038I Pass  15: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  16: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  17: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  18: suminf.    0.33751 (2) obj. -18.3866 iterations 4
Cbc0038I Pass  19: suminf.    0.33751 (2) obj. -18.3866 iterations 0
Cbc0038I Pass  20: suminf.    0.31602 (1) obj. -18.3866 iterations 3
Cbc0038I Pass  21: suminf.    0.34155 (1) obj. -18.3866 iterations 1
Cbc0038I Pass  22: suminf.    0.34155 (1) obj. -18.3866 iterations 0
Cbc0038I Pass  23: suminf.    0.66898 (3) obj. -18.3866 iterations 3
Cbc0038I Pass  24: suminf.    0.71250 (2) obj. -18.3866 iterations 4
Cbc0038I Pass  25: suminf.    0.70593 (2) obj. -18.3866 iterations 2
Cbc0038I Pass  26: suminf.    0.66898 (3) obj. -18.3866 iterations 3
Cbc0038I Pass  27: suminf.    1.00295 (4) obj. -18.3866 iterations 2
Cbc0038I Pass  28: suminf.    0.94917 (4) obj. -18.3866 iterations 1
Cbc0038I Pass  29: suminf.    0.48845 (8) obj. -18.3866 iterations 7
Cbc0038I Pass  30: suminf.    0.91427 (4) obj. -18.3866 iterations 11
Cbc0038I Pass  31: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 16 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.9518
Cbc0038I Pass  31: suminf.    0.35382 (1) obj. -22.9518 iterations 0
Cbc0038I Pass  32: suminf.    0.38683 (1) obj. -22.9518 iterations 1
Cbc0038I Pass  33: suminf.    1.88459 (4) obj. -22.9518 iterations 9
Cbc0038I Pass  34: suminf.    1.29760 (3) obj. -22.9518 iterations 4
Cbc0038I Pass  35: suminf.    1.00513 (3) obj. -22.9518 iterations 3
Cbc0038I Pass  36: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  37: suminf.    0.98303 (8) obj. -22.9518 iterations 5
Cbc0038I Pass  38: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  39: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  40: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  41: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  42: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  43: suminf.    1.00045 (5) obj. -22.9518 iterations 5
Cbc0038I Pass  44: suminf.    0.31817 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  45: suminf.    1.02891 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  46: suminf.    1.00513 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  47: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  48: suminf.    0.98303 (8) obj. -22.9518 iterations 6
Cbc0038I Pass  49: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  50: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  51: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  52: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  53: suminf.    1.00045 (5) obj. -22.9518 iterations 5
Cbc0038I Pass  54: suminf.    0.31817 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  55: suminf.    1.02891 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  56: suminf.    1.00513 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  57: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  58: suminf.    0.98303 (8) obj. -22.9518 iterations 6
Cbc0038I Pass  59: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  60: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15.8503 - took 0.01 seconds
Cbc0012I Integer solution of -15.85027 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 7 added rows had average density of 6.7142857
Cbc0013I At root node, 7 cuts changed objective from -41.212788 to -17.200974 in 71 passes
Cbc0014I Cut generator 0 (Probing) - 128 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15.85027, took 469 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 8 times (27 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

