Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 9.16862e-05 - average 9.85873e-07, 7 fixed columns
Coin0506I Presolve 80 (-13) rows, 44 (-7) columns and 240 (-40) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 52.733749
Clp0000I Optimal - objective value 52.733749
Coin0511I After Postsolve, objective 52.733749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.733749
Clp0000I Optimal - objective value 52.733749
Clp0000I Optimal - objective value 52.733749
Coin0511I After Postsolve, objective 52.733749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.73374892 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.21434
Cbc0038I Solution found of 3.62524
Cbc0038I Relaxing continuous gives 2.19261
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 61 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 2.19261 to -18.4664 (0.07 seconds)
Cbc0038I Round again with cutoff of -21.8932
Cbc0038I Pass   1: suminf.    2.35979 (9) obj. -21.8932 iterations 48
Cbc0038I Pass   2: suminf.    1.04547 (6) obj. -21.8932 iterations 11
Cbc0038I Pass   3: suminf.    0.82391 (5) obj. -21.8932 iterations 2
Cbc0038I Pass   4: suminf.    0.62407 (4) obj. -21.8932 iterations 8
Cbc0038I Pass   5: suminf.    0.62407 (4) obj. -21.8932 iterations 0
Cbc0038I Pass   6: suminf.    0.85723 (3) obj. -21.8932 iterations 3
Cbc0038I Pass   7: suminf.    0.70820 (3) obj. -21.8932 iterations 2
Cbc0038I Pass   8: suminf.    2.21247 (9) obj. -21.8932 iterations 8
Cbc0038I Pass   9: suminf.    1.92734 (6) obj. -21.8932 iterations 5
Cbc0038I Pass  10: suminf.    1.37600 (8) obj. -21.8932 iterations 12
Cbc0038I Pass  11: suminf.    0.98512 (6) obj. -21.8932 iterations 2
Cbc0038I Pass  12: suminf.    1.08945 (4) obj. -21.8932 iterations 9
Cbc0038I Pass  13: suminf.    4.67251 (12) obj. -21.8932 iterations 11
Cbc0038I Pass  14: suminf.    3.44244 (10) obj. -21.8932 iterations 9
Cbc0038I Pass  15: suminf.    2.62243 (7) obj. -21.8932 iterations 3
Cbc0038I Pass  16: suminf.    1.33704 (5) obj. -21.8932 iterations 8
Cbc0038I Pass  17: suminf.    1.07459 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  18: suminf.    1.47583 (5) obj. -21.8932 iterations 4
Cbc0038I Pass  19: suminf.    1.20269 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  20: suminf.    1.95745 (5) obj. -21.8932 iterations 3
Cbc0038I Pass  21: suminf.    1.33704 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  22: suminf.    1.07459 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  23: suminf.    1.47583 (5) obj. -21.8932 iterations 4
Cbc0038I Pass  24: suminf.    1.20269 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  25: suminf.    1.95745 (5) obj. -21.8932 iterations 3
Cbc0038I Pass  26: suminf.    1.33704 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  27: suminf.    1.07459 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  28: suminf.    1.47583 (5) obj. -21.8932 iterations 4
Cbc0038I Pass  29: suminf.    1.20269 (5) obj. -21.8932 iterations 1
Cbc0038I Pass  30: suminf.    1.95745 (5) obj. -21.8932 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -18.4664 to -18.9946 (0.10 seconds)
Cbc0038I Round again with cutoff of -28.0613
Cbc0038I Pass  30: suminf.    3.28704 (14) obj. -28.0613 iterations 6
Cbc0038I Pass  31: suminf.    2.96782 (8) obj. -28.0613 iterations 21
Cbc0038I Pass  32: suminf.    1.10252 (4) obj. -28.0613 iterations 6
Cbc0038I Pass  33: suminf.    1.10252 (4) obj. -28.0613 iterations 0
Cbc0038I Pass  34: suminf.    1.44513 (7) obj. -28.0613 iterations 6
Cbc0038I Pass  35: suminf.    1.30009 (7) obj. -28.0613 iterations 1
Cbc0038I Pass  36: suminf.    1.31091 (4) obj. -28.0613 iterations 9
Cbc0038I Pass  37: suminf.    1.16696 (4) obj. -28.0613 iterations 1
Cbc0038I Pass  38: suminf.    1.63926 (5) obj. -28.0613 iterations 7
Cbc0038I Pass  39: suminf.    0.80599 (4) obj. -28.0613 iterations 3
Cbc0038I Pass  40: suminf.    0.80599 (4) obj. -28.0613 iterations 0
Cbc0038I Pass  41: suminf.    1.60799 (5) obj. -28.0613 iterations 6
Cbc0038I Pass  42: suminf.    1.45590 (5) obj. -28.0613 iterations 5
Cbc0038I Pass  43: suminf.    1.59841 (5) obj. -28.0613 iterations 3
Cbc0038I Pass  44: suminf.    1.59841 (5) obj. -28.0613 iterations 1
Cbc0038I Pass  45: suminf.    1.31860 (5) obj. -28.0613 iterations 5
Cbc0038I Pass  46: suminf.    1.07105 (5) obj. -28.0613 iterations 2
Cbc0038I Pass  47: suminf.    1.45743 (5) obj. -28.0613 iterations 5
Cbc0038I Pass  48: suminf.    1.19557 (5) obj. -28.0613 iterations 2
Cbc0038I Pass  49: suminf.    1.94429 (5) obj. -28.0613 iterations 4
Cbc0038I Pass  50: suminf.    1.31860 (5) obj. -28.0613 iterations 1
Cbc0038I Pass  51: suminf.    1.07105 (5) obj. -28.0613 iterations 2
Cbc0038I Pass  52: suminf.    1.45743 (5) obj. -28.0613 iterations 5
Cbc0038I Pass  53: suminf.    1.19557 (5) obj. -28.0613 iterations 2
Cbc0038I Pass  54: suminf.    1.94429 (5) obj. -28.0613 iterations 4
Cbc0038I Pass  55: suminf.    1.31860 (5) obj. -28.0613 iterations 1
Cbc0038I Pass  56: suminf.    1.07105 (5) obj. -28.0613 iterations 2
Cbc0038I Pass  57: suminf.    1.45743 (5) obj. -28.0613 iterations 5
Cbc0038I Pass  58: suminf.    1.19557 (5) obj. -28.0613 iterations 2
Cbc0038I Pass  59: suminf.    1.94429 (5) obj. -28.0613 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -18.9946 - took 0.12 seconds
Cbc0012I Integer solution of -18.99461 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 61 rows 36 columns
Cbc0031I 17 added rows had average density of 39.764706
Cbc0013I At root node, 17 cuts changed objective from -52.733749 to -38.572449 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7622 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1440 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0001I Search completed - best objective -18.99460999999999, took 6348 iterations and 22 nodes (0.63 seconds)
Cbc0032I Strong branching done 360 times (5600 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 10, 77 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.64

