Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 401 (-52) elements
Clp1000I sum of infeasibilities 5.65948e-05 - average 4.3872e-07, 6 fixed columns
Coin0506I Presolve 117 (-12) rows, 69 (-6) columns and 365 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 0.26472261 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Coin0511I After Postsolve, objective 39.477188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Clp0000I Optimal - objective value 39.477188
Coin0511I After Postsolve, objective 39.477188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.47718767 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.139%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.04568
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.1979 iterations 52
Cbc0038I Solution found of 17.1979
Cbc0038I Relaxing continuous gives 17.1979
Cbc0038I Rounding solution of -5.37063 is better than previous of 17.1979

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 52 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -5.37063 to -13.251 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.8737
Cbc0038I Pass   2: suminf.    2.99457 (18) obj. -15.8737 iterations 29
Cbc0038I Pass   3: suminf.    2.85021 (30) obj. -15.8737 iterations 10
Cbc0038I Pass   4: suminf.    1.48791 (6) obj. -15.8737 iterations 27
Cbc0038I Pass   5: suminf.    1.33048 (5) obj. -15.8737 iterations 2
Cbc0038I Pass   6: suminf.    1.79888 (6) obj. -15.8737 iterations 10
Cbc0038I Pass   7: suminf.    1.66820 (4) obj. -15.8737 iterations 6
Cbc0038I Pass   8: suminf.    1.62720 (4) obj. -15.8737 iterations 2
Cbc0038I Pass   9: suminf.    1.72370 (4) obj. -15.8737 iterations 2
Cbc0038I Pass  10: suminf.    1.62868 (6) obj. -15.8737 iterations 4
Cbc0038I Pass  11: suminf.    2.47272 (6) obj. -15.8737 iterations 5
Cbc0038I Pass  12: suminf.    1.99098 (6) obj. -15.8737 iterations 2
Cbc0038I Pass  13: suminf.    1.74064 (6) obj. -15.8737 iterations 3
Cbc0038I Pass  14: suminf.    2.05540 (8) obj. -15.8737 iterations 13
Cbc0038I Pass  15: suminf.    1.85185 (5) obj. -15.8737 iterations 7
Cbc0038I Pass  16: suminf.    1.85185 (5) obj. -15.8737 iterations 1
Cbc0038I Pass  17: suminf.    2.07475 (7) obj. -15.8737 iterations 7
Cbc0038I Pass  18: suminf.    2.07475 (7) obj. -15.8737 iterations 0
Cbc0038I Pass  19: suminf.    1.26904 (6) obj. -15.8737 iterations 8
Cbc0038I Pass  20: suminf.    0.88276 (6) obj. -15.8737 iterations 3
Cbc0038I Pass  21: suminf.    1.23243 (3) obj. -15.8737 iterations 7
Cbc0038I Pass  22: suminf.    1.23243 (3) obj. -15.8737 iterations 0
Cbc0038I Pass  23: suminf.    1.31801 (3) obj. -15.8737 iterations 1
Cbc0038I Pass  24: suminf.    3.01764 (11) obj. -15.8737 iterations 17
Cbc0038I Pass  25: suminf.    2.06602 (8) obj. -15.8737 iterations 13
Cbc0038I Pass  26: suminf.    2.00699 (6) obj. -15.8737 iterations 1
Cbc0038I Pass  27: suminf.    2.00699 (6) obj. -15.8737 iterations 1
Cbc0038I Pass  28: suminf.    2.03899 (6) obj. -15.8737 iterations 13
Cbc0038I Pass  29: suminf.    1.94576 (6) obj. -15.8737 iterations 2
Cbc0038I Pass  30: suminf.    2.18503 (5) obj. -15.8737 iterations 4
Cbc0038I Pass  31: suminf.    1.34530 (4) obj. -15.8737 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 82 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -13.251 to -13.6897 (0.08 seconds)
Cbc0038I Round again with cutoff of -20.5944
Cbc0038I Pass  31: suminf.    3.88513 (18) obj. -20.5944 iterations 0
Cbc0038I Pass  32: suminf.    3.69784 (30) obj. -20.5944 iterations 10
Cbc0038I Pass  33: suminf.    2.27084 (6) obj. -20.5944 iterations 29
Cbc0038I Pass  34: suminf.    1.78788 (5) obj. -20.5944 iterations 5
Cbc0038I Pass  35: suminf.    1.12786 (5) obj. -20.5944 iterations 6
Cbc0038I Pass  36: suminf.    1.12786 (5) obj. -20.5944 iterations 0
Cbc0038I Pass  37: suminf.    1.82425 (6) obj. -20.5944 iterations 3
Cbc0038I Pass  38: suminf.    1.76165 (6) obj. -20.5944 iterations 3
Cbc0038I Pass  39: suminf.    2.71756 (7) obj. -20.5944 iterations 4
Cbc0038I Pass  40: suminf.    2.62738 (7) obj. -20.5944 iterations 2
Cbc0038I Pass  41: suminf.    2.47017 (7) obj. -20.5944 iterations 3
Cbc0038I Pass  42: suminf.    2.40656 (9) obj. -20.5944 iterations 3
Cbc0038I Pass  43: suminf.    2.21055 (6) obj. -20.5944 iterations 8
Cbc0038I Pass  44: suminf.    2.21055 (6) obj. -20.5944 iterations 0
Cbc0038I Pass  45: suminf.    1.57147 (5) obj. -20.5944 iterations 7
Cbc0038I Pass  46: suminf.    1.48420 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  47: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  48: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  49: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  50: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  51: suminf.    1.48420 (5) obj. -20.5944 iterations 1
Cbc0038I Pass  52: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  53: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  54: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  55: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I Pass  56: suminf.    1.48420 (5) obj. -20.5944 iterations 1
Cbc0038I Pass  57: suminf.    2.24153 (6) obj. -20.5944 iterations 5
Cbc0038I Pass  58: suminf.    2.09486 (5) obj. -20.5944 iterations 9
Cbc0038I Pass  59: suminf.    1.42355 (5) obj. -20.5944 iterations 2
Cbc0038I Pass  60: suminf.    1.92595 (5) obj. -20.5944 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -13.6897 - took 0.09 seconds
Cbc0012I Integer solution of -13.6897 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 54 rows 34 columns
Cbc0031I 27 added rows had average density of 56.555556
Cbc0013I At root node, 27 cuts changed objective from -39.477188 to -32.146778 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9289 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1529 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.6897 best solution, best possible -32.146778 (0.71 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 6 rows 11 columns
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 40 columns
Cbc0001I Search completed - best objective -13.6897, took 10039 iterations and 166 nodes (1.16 seconds)
Cbc0032I Strong branching done 1430 times (21750 iterations), fathomed 18 nodes and fixed 66 variables
Cbc0035I Maximum depth 27, 241 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.16

