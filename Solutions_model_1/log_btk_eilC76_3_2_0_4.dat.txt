Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 60 (-18) columns and 334 (-119) elements
Clp1000I sum of infeasibilities 3.23512e-05 - average 2.94101e-07, 25 fixed columns
Coin0506I Presolve 51 (-59) rows, 29 (-31) columns and 154 (-180) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 0.59468128 - largest nonzero change 0 ( 0%) - largest zero change 2.0546364e-05
Clp0000I Optimal - objective value 491.97644
Clp0000I Optimal - objective value 491.97644
Coin0511I After Postsolve, objective 491.97644, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 491.97644
Clp0000I Optimal - objective value 491.97644
Clp0000I Optimal - objective value 491.97644
Coin0511I After Postsolve, objective 491.97644, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 491.9764423 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 110 rows, 60 columns (59 integer (59 of which binary)) and 334 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.58683
Cbc0038I Pass   1: suminf.    0.61111 (2) obj. -461.223 iterations 18
Cbc0038I Pass   2: suminf.    0.11538 (1) obj. -462.89 iterations 1
Cbc0038I Solution found of -370.589
Cbc0038I Relaxing continuous gives -370.589
Cbc0038I Rounding solution of -406.247 is better than previous of -370.589

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -406.247 to -477.707 (0.01 seconds)
Cbc0038I Round again with cutoff of -479.134
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.04355 (8) obj. -479.134 iterations 7
Cbc0038I Pass   4: suminf.    0.58963 (2) obj. -479.134 iterations 13
Cbc0038I Pass   5: suminf.    0.29420 (2) obj. -479.134 iterations 8
Cbc0038I Pass   6: suminf.    0.22841 (1) obj. -479.134 iterations 8
Cbc0038I Pass   7: suminf.    0.28571 (1) obj. -482.504 iterations 6
Cbc0038I Pass   8: suminf.    0.58963 (2) obj. -479.134 iterations 12
Cbc0038I Pass   9: suminf.    0.52367 (5) obj. -479.134 iterations 17
Cbc0038I Pass  10: suminf.    0.39026 (3) obj. -479.134 iterations 12
Cbc0038I Pass  11: suminf.    1.33539 (6) obj. -479.134 iterations 16
Cbc0038I Pass  12: suminf.    0.32143 (1) obj. -481.983 iterations 16
Cbc0038I Pass  13: suminf.    0.61302 (4) obj. -479.134 iterations 17
Cbc0038I Pass  14: suminf.    0.45161 (2) obj. -479.134 iterations 16
Cbc0038I Pass  15: suminf.    0.56802 (3) obj. -479.134 iterations 6
Cbc0038I Pass  16: suminf.    1.38321 (8) obj. -479.134 iterations 13
Cbc0038I Pass  17: suminf.    1.32130 (5) obj. -479.134 iterations 5
Cbc0038I Pass  18: suminf.    1.06004 (4) obj. -479.134 iterations 14
Cbc0038I Pass  19: suminf.    1.45850 (5) obj. -479.134 iterations 10
Cbc0038I Pass  20: suminf.    0.94765 (6) obj. -479.134 iterations 7
Cbc0038I Pass  21: suminf.    0.09737 (2) obj. -479.134 iterations 18
Cbc0038I Pass  22: suminf.    1.23556 (5) obj. -479.134 iterations 12
Cbc0038I Pass  23: suminf.    0.50830 (2) obj. -479.134 iterations 7
Cbc0038I Pass  24: suminf.    0.38672 (5) obj. -479.134 iterations 15
Cbc0038I Pass  25: suminf.    0.24040 (4) obj. -479.134 iterations 7
Cbc0038I Pass  26: suminf.    0.52821 (4) obj. -479.134 iterations 12
Cbc0038I Pass  27: suminf.    0.22841 (1) obj. -479.134 iterations 9
Cbc0038I Pass  28: suminf.    0.25000 (1) obj. -480.404 iterations 6
Cbc0038I Pass  29: suminf.    0.28916 (3) obj. -479.134 iterations 8
Cbc0038I Pass  30: suminf.    2.56889 (8) obj. -479.134 iterations 14
Cbc0038I Pass  31: suminf.    1.01992 (5) obj. -479.134 iterations 7
Cbc0038I Pass  32: suminf.    0.73282 (5) obj. -479.134 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 20 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -477.707 - took 0.01 seconds
Cbc0012I Integer solution of -477.70735 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 110 rows 60 columns, reduced to 12 rows 9 columns
Cbc0031I 5 added rows had average density of 10.2
Cbc0013I At root node, 26 cuts changed objective from -491.97644 to -477.70735 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 2.6 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -477.70735, took 26 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

