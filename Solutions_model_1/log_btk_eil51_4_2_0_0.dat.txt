Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-11) rows, 51 (-2) columns and 282 (-21) elements
Clp1000I sum of infeasibilities 4.04338e-05 - average 4.30146e-07, 1 fixed columns
Coin0506I Presolve 92 (-2) rows, 50 (-1) columns and 276 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Coin0511I After Postsolve, objective 50.892504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Coin0511I After Postsolve, objective 50.892504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.89250397 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 51 columns (50 integer (50 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.06213
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.89327 iterations 40
Cbc0038I Solution found of -0.89327
Cbc0038I Relaxing continuous gives -0.89327
Cbc0038I Rounding solution of -5.4862 is better than previous of -0.89327

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 64 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -5.4862 to -22.5888 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.4193
Cbc0038I Pass   2: suminf.    2.65626 (9) obj. -25.4193 iterations 8
Cbc0038I Pass   3: suminf.    1.29022 (4) obj. -25.4193 iterations 8
Cbc0038I Pass   4: suminf.    1.29022 (4) obj. -25.4193 iterations 0
Cbc0038I Pass   5: suminf.    1.14382 (4) obj. -25.4193 iterations 4
Cbc0038I Pass   6: suminf.    1.97028 (6) obj. -25.4193 iterations 7
Cbc0038I Pass   7: suminf.    1.86909 (5) obj. -25.4193 iterations 2
Cbc0038I Pass   8: suminf.    1.43404 (5) obj. -25.4193 iterations 2
Cbc0038I Pass   9: suminf.    2.13312 (9) obj. -25.4193 iterations 14
Cbc0038I Pass  10: suminf.    1.60144 (6) obj. -25.4193 iterations 3
Cbc0038I Pass  11: suminf.    1.68981 (6) obj. -25.4193 iterations 12
Cbc0038I Pass  12: suminf.    1.68981 (6) obj. -25.4193 iterations 0
Cbc0038I Pass  13: suminf.    1.86909 (5) obj. -25.4193 iterations 3
Cbc0038I Pass  14: suminf.    1.43404 (5) obj. -25.4193 iterations 2
Cbc0038I Pass  15: suminf.    1.88341 (8) obj. -25.4193 iterations 18
Cbc0038I Pass  16: suminf.    1.03411 (4) obj. -25.4193 iterations 5
Cbc0038I Pass  17: suminf.    0.97331 (4) obj. -25.4193 iterations 1
Cbc0038I Pass  18: suminf.    1.01830 (3) obj. -25.4193 iterations 5
Cbc0038I Pass  19: suminf.    0.87700 (4) obj. -25.4193 iterations 2
Cbc0038I Pass  20: suminf.    0.84180 (3) obj. -25.4193 iterations 2
Cbc0038I Pass  21: suminf.    0.91513 (4) obj. -25.4193 iterations 4
Cbc0038I Pass  22: suminf.    0.91513 (4) obj. -25.4193 iterations 0
Cbc0038I Pass  23: suminf.    1.19532 (3) obj. -25.4193 iterations 2
Cbc0038I Pass  24: suminf.    1.03311 (4) obj. -25.4193 iterations 2
Cbc0038I Pass  25: suminf.    1.02252 (3) obj. -25.4193 iterations 1
Cbc0038I Pass  26: suminf.    3.35250 (9) obj. -25.4193 iterations 10
Cbc0038I Pass  27: suminf.    1.46345 (5) obj. -25.4193 iterations 15
Cbc0038I Pass  28: suminf.    1.27641 (3) obj. -25.4193 iterations 4
Cbc0038I Pass  29: suminf.    1.02387 (3) obj. -25.4193 iterations 1
Cbc0038I Pass  30: suminf.    1.33839 (4) obj. -25.4193 iterations 3
Cbc0038I Pass  31: suminf.    1.25537 (3) obj. -25.4193 iterations 1
Cbc0038I Rounding solution of -23.5813 is better than previous of -22.5888

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -23.5813 to -24.3088 (0.10 seconds)
Cbc0038I Round again with cutoff of -30.5139
Cbc0038I Pass  31: suminf.    3.11003 (12) obj. -30.5139 iterations 4
Cbc0038I Pass  32: suminf.    3.11003 (12) obj. -30.5139 iterations 0
Cbc0038I Pass  33: suminf.    2.12172 (6) obj. -30.5139 iterations 16
Cbc0038I Pass  34: suminf.    1.62384 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  35: suminf.    2.02462 (7) obj. -30.5139 iterations 6
Cbc0038I Pass  36: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  37: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  38: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  39: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  40: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  41: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  42: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  43: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  44: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  45: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  46: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  47: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  48: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  49: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  50: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  51: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  52: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  53: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  54: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  55: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  56: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  57: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  58: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  59: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  60: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 67 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -24.3088 - took 0.14 seconds
Cbc0012I Integer solution of -24.308791 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 67 rows 38 columns
Cbc0031I 20 added rows had average density of 36.6
Cbc0013I At root node, 20 cuts changed objective from -50.892504 to -40.305836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8193 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1697 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 41.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -24.308791 best solution, best possible -40.305836 (0.69 seconds)
Cbc0001I Search completed - best objective -24.308791, took 6664 iterations and 38 nodes (0.76 seconds)
Cbc0032I Strong branching done 526 times (10135 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 16, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.76

