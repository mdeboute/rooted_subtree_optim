Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 50 (-3) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 0.000770254 - average 8.95644e-06, 2 fixed columns
Coin0506I Presolve 82 (-4) rows, 48 (-2) columns and 252 (-12) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Coin0511I After Postsolve, objective 43.359718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Clp0000I Optimal - objective value 43.359718
Coin0511I After Postsolve, objective 43.359718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.35971761 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 50 columns (49 integer (49 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.663%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.0826
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.01156 iterations 27
Cbc0038I Solution found of 4.01156
Cbc0038I Relaxing continuous gives 4.01156
Cbc0038I Rounding solution of -8.92085 is better than previous of 4.01156

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 50 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -8.92085 to -14.3437 (0.03 seconds)
Cbc0038I Round again with cutoff of -17.2454
Cbc0038I Pass   2: suminf.    1.37795 (10) obj. -17.2454 iterations 11
Cbc0038I Pass   3: suminf.    1.37795 (10) obj. -17.2454 iterations 0
Cbc0038I Pass   4: suminf.    1.52919 (5) obj. -17.2454 iterations 16
Cbc0038I Pass   5: suminf.    0.85704 (4) obj. -17.2454 iterations 5
Cbc0038I Pass   6: suminf.    0.82050 (4) obj. -17.2454 iterations 2
Cbc0038I Pass   7: suminf.    1.38984 (4) obj. -17.2454 iterations 5
Cbc0038I Pass   8: suminf.    1.01142 (4) obj. -17.2454 iterations 1
Cbc0038I Pass   9: suminf.    0.94862 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  10: suminf.    1.20089 (4) obj. -17.2454 iterations 6
Cbc0038I Pass  11: suminf.    1.20089 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  12: suminf.    1.09390 (3) obj. -17.2454 iterations 4
Cbc0038I Pass  13: suminf.    0.87231 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  14: suminf.    1.25787 (4) obj. -17.2454 iterations 3
Cbc0038I Pass  15: suminf.    1.25787 (4) obj. -17.2454 iterations 0
Cbc0038I Pass  16: suminf.    1.03170 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  17: suminf.    0.94493 (4) obj. -17.2454 iterations 8
Cbc0038I Pass  18: suminf.    0.94493 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  19: suminf.    1.13636 (4) obj. -17.2454 iterations 7
Cbc0038I Pass  20: suminf.    1.13636 (4) obj. -17.2454 iterations 0
Cbc0038I Pass  21: suminf.    1.25838 (3) obj. -17.2454 iterations 4
Cbc0038I Pass  22: suminf.    0.82000 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  23: suminf.    1.20430 (5) obj. -17.2454 iterations 4
Cbc0038I Pass  24: suminf.    1.20111 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  25: suminf.    1.20247 (4) obj. -17.2454 iterations 2
Cbc0038I Pass  26: suminf.    3.18978 (9) obj. -17.2454 iterations 15
Cbc0038I Pass  27: suminf.    2.01353 (6) obj. -17.2454 iterations 8
Cbc0038I Pass  28: suminf.    1.56891 (5) obj. -17.2454 iterations 2
Cbc0038I Pass  29: suminf.    1.00086 (4) obj. -17.2454 iterations 1
Cbc0038I Pass  30: suminf.    1.25787 (4) obj. -17.2454 iterations 5
Cbc0038I Pass  31: suminf.    1.25787 (4) obj. -17.2454 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 50 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -14.3437 - took 0.06 seconds
Cbc0012I Integer solution of -14.34374 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 50 columns, reduced to 53 rows 31 columns
Cbc0031I 14 added rows had average density of 40.214286
Cbc0013I At root node, 14 cuts changed objective from -43.359718 to -33.584289 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9849 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1798 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 137 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -14.34374 best solution, best possible -33.584176 (0.67 seconds)
Cbc0038I Full problem 86 rows 50 columns, reduced to 19 rows 16 columns
Cbc0001I Search completed - best objective -14.34374, took 8082 iterations and 90 nodes (0.81 seconds)
Cbc0032I Strong branching done 604 times (8282 iterations), fathomed 9 nodes and fixed 27 variables
Cbc0035I Maximum depth 12, 194 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.82

