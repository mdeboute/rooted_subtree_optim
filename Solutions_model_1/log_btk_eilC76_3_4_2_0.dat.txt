Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.86708e-05 - average 1.37285e-07, 12 fixed columns
Coin0506I Presolve 113 (-23) rows, 64 (-12) columns and 346 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.29406143 - largest nonzero change 0 ( 0%) - largest zero change 2.829984e-05
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Coin0511I After Postsolve, objective 32.699702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Coin0511I After Postsolve, objective 32.699702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.69970215 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 8.55884
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.9483 iterations 33
Cbc0038I Solution found of 15.9483
Cbc0038I Relaxing continuous gives 15.9483
Cbc0038I Rounding solution of 0.932294 is better than previous of 15.9483

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 0.932294 to -8.37765 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.8099
Cbc0038I Pass   2: suminf.    1.51444 (7) obj. -10.8099 iterations 12
Cbc0038I Pass   3: suminf.    1.09376 (5) obj. -10.8099 iterations 2
Cbc0038I Pass   4: suminf.    1.07617 (4) obj. -10.8099 iterations 1
Cbc0038I Pass   5: suminf.    0.61615 (2) obj. -10.8099 iterations 8
Cbc0038I Pass   6: suminf.    0.58876 (3) obj. -10.8099 iterations 6
Cbc0038I Pass   7: suminf.    0.54390 (2) obj. -10.8099 iterations 1
Cbc0038I Pass   8: suminf.    0.69118 (2) obj. -10.8099 iterations 1
Cbc0038I Pass   9: suminf.    1.36265 (5) obj. -10.8099 iterations 11
Cbc0038I Pass  10: suminf.    1.35393 (4) obj. -10.8099 iterations 10
Cbc0038I Pass  11: suminf.    1.09376 (5) obj. -10.8099 iterations 6
Cbc0038I Pass  12: suminf.    1.07617 (4) obj. -10.8099 iterations 1
Cbc0038I Pass  13: suminf.    0.61615 (2) obj. -10.8099 iterations 8
Cbc0038I Pass  14: suminf.    0.58876 (3) obj. -10.8099 iterations 6
Cbc0038I Pass  15: suminf.    0.54390 (2) obj. -10.8099 iterations 1
Cbc0038I Pass  16: suminf.    0.69118 (2) obj. -10.8099 iterations 1
Cbc0038I Pass  17: suminf.    1.26965 (5) obj. -10.8099 iterations 15
Cbc0038I Pass  18: suminf.    0.96889 (3) obj. -10.8099 iterations 7
Cbc0038I Pass  19: suminf.    0.88812 (3) obj. -10.8099 iterations 5
Cbc0038I Pass  20: suminf.    0.88812 (3) obj. -10.8099 iterations 0
Cbc0038I Pass  21: suminf.    1.26907 (4) obj. -10.8099 iterations 6
Cbc0038I Pass  22: suminf.    1.26907 (4) obj. -10.8099 iterations 0
Cbc0038I Pass  23: suminf.    0.68089 (2) obj. -10.8099 iterations 8
Cbc0038I Pass  24: suminf.    0.69207 (3) obj. -10.8099 iterations 6
Cbc0038I Pass  25: suminf.    1.24968 (3) obj. -10.8099 iterations 1
Cbc0038I Pass  26: suminf.    3.02517 (9) obj. -10.8099 iterations 32
Cbc0038I Pass  27: suminf.    1.92891 (6) obj. -10.8099 iterations 10
Cbc0038I Pass  28: suminf.    1.91354 (7) obj. -10.8099 iterations 1
Cbc0038I Pass  29: suminf.    1.67133 (6) obj. -10.8099 iterations 18
Cbc0038I Pass  30: suminf.    0.88644 (4) obj. -10.8099 iterations 2
Cbc0038I Pass  31: suminf.    0.87904 (3) obj. -10.8099 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -8.37765 to -8.5369 (0.06 seconds)
Cbc0038I Round again with cutoff of -15.1879
Cbc0038I Pass  31: suminf.    2.23870 (7) obj. -15.1879 iterations 0
Cbc0038I Pass  32: suminf.    1.81802 (5) obj. -15.1879 iterations 2
Cbc0038I Pass  33: suminf.    1.80043 (4) obj. -15.1879 iterations 1
Cbc0038I Pass  34: suminf.    0.88563 (3) obj. -15.1879 iterations 8
Cbc0038I Pass  35: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  36: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  37: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  38: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  39: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  40: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  41: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  42: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  43: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  44: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  45: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  46: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  47: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  48: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  49: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  50: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  51: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  52: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  53: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  54: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  55: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  56: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  57: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  58: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  59: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  60: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -8.5369 - took 0.06 seconds
Cbc0012I Integer solution of -8.536896 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 49 rows 29 columns
Cbc0031I 13 added rows had average density of 53.769231
Cbc0013I At root node, 13 cuts changed objective from -32.699702 to -24.686817 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11249 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1784 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 64.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.536896 best solution, best possible -24.686817 (0.85 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 52 rows 34 columns
Cbc0012I Integer solution of -8.880646 found by RINS after 9079 iterations and 41 nodes (1.25 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 10 rows 13 columns
Cbc0001I Search completed - best objective -8.880645999999999, took 11592 iterations and 156 nodes (1.51 seconds)
Cbc0032I Strong branching done 1062 times (17885 iterations), fathomed 10 nodes and fixed 21 variables
Cbc0035I Maximum depth 34, 355 variables fixed on reduced cost
Total time (CPU seconds):       1.45   (Wallclock seconds):       1.53

