Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 65 (-13) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 7.04764e-05 - average 5.8245e-07, 59 fixed columns
Coin0506I Presolve 7 (-114) rows, 6 (-59) columns and 20 (-346) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 17291.639
Clp0000I Optimal - objective value 17291.639
Coin0511I After Postsolve, objective 17291.639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26629832 - largest nonzero change 0 ( 0%) - largest zero change 2.9889479e-05
Clp0000I Optimal - objective value 17291.639
Clp0000I Optimal - objective value 17291.639
Clp0000I Optimal - objective value 17291.639
Coin0511I After Postsolve, objective 17291.639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17291.63898 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 65 columns (64 integer (64 of which binary)) and 377 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.562%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.86646
Cbc0038I Pass   1: suminf.    0.13636 (1) obj. -15375 iterations 13
Cbc0038I Pass   2: suminf.    0.13636 (1) obj. -15375 iterations 0
Cbc0038I Solution found of -12904.6
Cbc0038I Relaxing continuous gives -12904.6
Cbc0038I Rounding solution of -14612.7 is better than previous of -12904.6

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14880.6
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.13636 (1) obj. -15375 iterations 0
Cbc0038I Pass   4: suminf.    0.13636 (1) obj. -15375 iterations 0
Cbc0038I Pass   5: suminf.    0.46584 (1) obj. -14880.6 iterations 3
Cbc0038I Pass   6: suminf.    0.26923 (1) obj. -16004.4 iterations 1
Cbc0038I Pass   7: suminf.    1.95387 (6) obj. -14880.6 iterations 7
Cbc0038I Pass   8: suminf.    1.95387 (6) obj. -14880.6 iterations 1
Cbc0038I Pass   9: suminf.    1.81523 (5) obj. -14880.6 iterations 11
Cbc0038I Pass  10: suminf.    1.81523 (5) obj. -14880.6 iterations 0
Cbc0038I Pass  11: suminf.    0.79541 (2) obj. -15473.4 iterations 8
Cbc0038I Pass  12: suminf.    0.37519 (2) obj. -14880.6 iterations 7
Cbc0038I Pass  13: suminf.    0.26923 (1) obj. -16004.4 iterations 4
Cbc0038I Pass  14: suminf.    0.46584 (1) obj. -14880.6 iterations 2
Cbc0038I Pass  15: suminf.    0.24984 (2) obj. -14880.6 iterations 12
Cbc0038I Pass  16: suminf.    0.19568 (1) obj. -14880.6 iterations 8
Cbc0038I Pass  17: suminf.    0.23077 (1) obj. -15029.4 iterations 1
Cbc0038I Pass  18: suminf.    1.17036 (5) obj. -14880.6 iterations 14
Cbc0038I Pass  19: suminf.    0.42630 (5) obj. -14880.6 iterations 9
Cbc0038I Pass  20: suminf.    1.69888 (6) obj. -14880.6 iterations 6
Cbc0038I Pass  21: suminf.    1.10863 (7) obj. -14880.6 iterations 13
Cbc0038I Pass  22: suminf.    1.10863 (7) obj. -14880.6 iterations 3
Cbc0038I Pass  23: suminf.    0.31972 (2) obj. -14880.6 iterations 12
Cbc0038I Pass  24: suminf.    0.31972 (2) obj. -14880.6 iterations 2
Cbc0038I Pass  25: suminf.    0.38554 (4) obj. -15426.3 iterations 9
Cbc0038I Pass  26: suminf.    0.38554 (4) obj. -15426.3 iterations 0
Cbc0038I Pass  27: suminf.    1.76485 (5) obj. -14880.6 iterations 4
Cbc0038I Pass  28: suminf.    1.23359 (8) obj. -14880.6 iterations 7
Cbc0038I Pass  29: suminf.    0.52411 (2) obj. -14880.6 iterations 8
Cbc0038I Pass  30: suminf.    0.36093 (2) obj. -14880.6 iterations 10
Cbc0038I Pass  31: suminf.    0.27915 (5) obj. -14880.6 iterations 5
Cbc0038I Pass  32: suminf.    1.92833 (5) obj. -14946.8 iterations 7
Cbc0038I Rounding solution of -15308.8 is better than previous of -14612.7

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -15308.8 to -15935.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -16206.5
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.25903 (5) obj. -16206.5 iterations 5
Cbc0038I Pass  33: suminf.    2.35858 (5) obj. -16206.5 iterations 5
Cbc0038I Pass  34: suminf.    2.35858 (5) obj. -16206.5 iterations 0
Cbc0038I Pass  35: suminf.    1.86250 (6) obj. -16206.5 iterations 5
Cbc0038I Pass  36: suminf.    1.32263 (6) obj. -16206.5 iterations 2
Cbc0038I Pass  37: suminf.    0.57672 (2) obj. -16475.1 iterations 8
Cbc0038I Pass  38: suminf.    0.29326 (1) obj. -16206.5 iterations 7
Cbc0038I Pass  39: suminf.    0.29326 (1) obj. -16206.5 iterations 0
Cbc0038I Pass  40: suminf.    0.38622 (2) obj. -16206.5 iterations 9
Cbc0038I Pass  41: suminf.    0.29326 (1) obj. -16206.5 iterations 7
Cbc0038I Pass  42: suminf.    0.31175 (2) obj. -16206.5 iterations 12
Cbc0038I Pass  43: suminf.    0.30166 (2) obj. -16206.5 iterations 6
Cbc0038I Pass  44: suminf.    0.42906 (3) obj. -16206.5 iterations 6
Cbc0038I Pass  45: suminf.    2.31345 (6) obj. -16206.5 iterations 9
Cbc0038I Pass  46: suminf.    0.07895 (2) obj. -16514.5 iterations 11
Cbc0038I Pass  47: suminf.    0.07895 (2) obj. -16514.5 iterations 0
Cbc0038I Pass  48: suminf.    0.57880 (2) obj. -16206.5 iterations 6
Cbc0038I Pass  49: suminf.    0.57880 (2) obj. -16206.5 iterations 0
Cbc0038I Pass  50: suminf.    0.40071 (5) obj. -16206.5 iterations 8
Cbc0038I Pass  51: suminf.    0.30166 (2) obj. -16206.5 iterations 3
Cbc0038I Pass  52: suminf.    0.42906 (3) obj. -16206.5 iterations 9
Cbc0038I Pass  53: suminf.    0.88852 (6) obj. -16206.5 iterations 10
Cbc0038I Pass  54: suminf.    0.65229 (4) obj. -16206.5 iterations 7
Cbc0038I Pass  55: suminf.    1.33951 (6) obj. -16206.5 iterations 16
Cbc0038I Pass  56: suminf.    0.89874 (5) obj. -16206.5 iterations 9
Cbc0038I Pass  57: suminf.    0.32082 (4) obj. -16206.5 iterations 3
Cbc0038I Pass  58: suminf.    0.92147 (5) obj. -16206.5 iterations 7
Cbc0038I Pass  59: suminf.    0.37200 (7) obj. -16206.5 iterations 10
Cbc0038I Pass  60: suminf.    1.50012 (10) obj. -16206.5 iterations 5
Cbc0038I Pass  61: suminf.    0.13636 (1) obj. -16343.1 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15935.2 - took 0.02 seconds
Cbc0012I Integer solution of -15935.16 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 121 rows 65 columns, reduced to 10 rows 10 columns
Cbc0031I 5 added rows had average density of 18.2
Cbc0013I At root node, 5 cuts changed objective from -17291.639 to -16541.358 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 8.2 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0012I Integer solution of -16024.972 found by rounding after 230 iterations and 6 nodes (0.07 seconds)
Cbc0001I Search completed - best objective -16024.972, took 231 iterations and 6 nodes (0.07 seconds)
Cbc0032I Strong branching done 62 times (314 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

