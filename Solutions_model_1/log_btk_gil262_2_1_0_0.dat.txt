Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 501 (-26) rows, 258 (-6) columns and 1488 (-57) elements
Clp1000I sum of infeasibilities 5.34436e-05 - average 1.06674e-07, 175 fixed columns
Coin0506I Presolve 153 (-348) rows, 81 (-177) columns and 449 (-1039) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 2.7453531 - largest nonzero change 0 ( 0%) - largest zero change 2.3661176e-05
Clp0000I Optimal - objective value 327.4915
Clp0000I Optimal - objective value 327.4915
Coin0511I After Postsolve, objective 327.4915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13552162 - largest nonzero change 0 ( 0%) - largest zero change 2.9801497e-05
Clp0000I Optimal - objective value 327.4915
Clp0000I Optimal - objective value 327.4915
Clp0000I Optimal - objective value 327.4915
Coin0511I After Postsolve, objective 327.4915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 327.4915003 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 501 rows, 258 columns (257 integer (257 of which binary)) and 1488 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 8.49571
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -72.5949 iterations 163
Cbc0038I Solution found of -72.5949
Cbc0038I Relaxing continuous gives -72.5949
Cbc0038I Rounding solution of -105.987 is better than previous of -72.5949

Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 258 columns, reduced to 102 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -105.987 to -232.432 (0.05 seconds)
Cbc0038I Round again with cutoff of -241.938
Cbc0038I Pass   2: suminf.    3.99147 (32) obj. -241.938 iterations 69
Cbc0038I Pass   3: suminf.    2.44985 (8) obj. -241.938 iterations 51
Cbc0038I Pass   4: suminf.    1.82635 (8) obj. -241.938 iterations 18
Cbc0038I Pass   5: suminf.    1.82635 (8) obj. -241.938 iterations 2
Cbc0038I Pass   6: suminf.    2.64591 (7) obj. -241.938 iterations 34
Cbc0038I Pass   7: suminf.    2.34235 (7) obj. -241.938 iterations 18
Cbc0038I Pass   8: suminf.    2.39011 (8) obj. -241.938 iterations 26
Cbc0038I Pass   9: suminf.    2.11602 (7) obj. -241.938 iterations 22
Cbc0038I Pass  10: suminf.    2.69171 (7) obj. -241.938 iterations 45
Cbc0038I Pass  11: suminf.    1.92341 (8) obj. -241.938 iterations 19
Cbc0038I Pass  12: suminf.    1.88595 (6) obj. -241.938 iterations 7
Cbc0038I Pass  13: suminf.    2.57257 (8) obj. -241.938 iterations 20
Cbc0038I Pass  14: suminf.    2.11602 (7) obj. -241.938 iterations 22
Cbc0038I Pass  15: suminf.    2.69171 (7) obj. -241.938 iterations 45
Cbc0038I Pass  16: suminf.    1.92341 (8) obj. -241.938 iterations 19
Cbc0038I Pass  17: suminf.    1.88595 (6) obj. -241.938 iterations 7
Cbc0038I Pass  18: suminf.    2.57257 (8) obj. -241.938 iterations 20
Cbc0038I Pass  19: suminf.    2.11602 (7) obj. -241.938 iterations 22
Cbc0038I Pass  20: suminf.    2.69171 (7) obj. -241.938 iterations 45
Cbc0038I Pass  21: suminf.    1.92341 (8) obj. -241.938 iterations 19
Cbc0038I Pass  22: suminf.    1.88595 (6) obj. -241.938 iterations 7
Cbc0038I Pass  23: suminf.    2.57257 (8) obj. -241.938 iterations 20
Cbc0038I Pass  24: suminf.    2.11602 (7) obj. -241.938 iterations 22
Cbc0038I Pass  25: suminf.    2.69171 (7) obj. -241.938 iterations 45
Cbc0038I Pass  26: suminf.    1.92341 (8) obj. -241.938 iterations 19
Cbc0038I Pass  27: suminf.    1.88595 (6) obj. -241.938 iterations 7
Cbc0038I Pass  28: suminf.    2.57257 (8) obj. -241.938 iterations 20
Cbc0038I Pass  29: suminf.    2.11602 (7) obj. -241.938 iterations 22
Cbc0038I Pass  30: suminf.    2.69171 (7) obj. -241.938 iterations 45
Cbc0038I Pass  31: suminf.    1.92341 (8) obj. -241.938 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 258 columns, reduced to 124 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -232.432 - took 0.10 seconds
Cbc0012I Integer solution of -232.43234 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 501 rows 258 columns, reduced to 102 rows 55 columns
Cbc0031I 22 added rows had average density of 162.54545
Cbc0013I At root node, 22 cuts changed objective from -327.4915 to -296.29017 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12596 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.377 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1230 row cuts average 253.7 elements, 0 column cuts (0 active)  in 0.275 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 66 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.246 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 206 row cuts average 249.2 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -232.43234 best solution, best possible -296.29017 (2.41 seconds)
Cbc0038I Full problem 501 rows 258 columns, reduced to 8 rows 11 columns
Cbc0012I Integer solution of -237.9933 found by rounding after 9562 iterations and 46 nodes (2.97 seconds)
Cbc0010I After 89 nodes, 9 on tree, -237.9933 best solution, best possible -296.29017 (3.11 seconds)
Cbc0038I Full problem 501 rows 258 columns, reduced to 15 rows 15 columns
Cbc0012I Integer solution of -238.12224 found by rounding after 14558 iterations and 161 nodes (3.59 seconds)
Cbc0012I Integer solution of -239.02884 found by rounding after 14892 iterations and 174 nodes (3.62 seconds)
Cbc0001I Search completed - best objective -239.02884, took 15426 iterations and 188 nodes (3.65 seconds)
Cbc0032I Strong branching done 1688 times (38501 iterations), fathomed 32 nodes and fixed 87 variables
Cbc0035I Maximum depth 36, 1424 variables fixed on reduced cost
Total time (CPU seconds):       3.56   (Wallclock seconds):       3.68

