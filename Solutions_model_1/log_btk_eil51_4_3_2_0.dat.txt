Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 281 (-22) elements
Clp1000I sum of infeasibilities 3.31054e-05 - average 3.55972e-07, 1 fixed columns
Coin0506I Presolve 90 (-3) rows, 49 (-2) columns and 271 (-10) elements
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 5.3637125 - largest nonzero change 0 ( 0%) - largest zero change 2.2470649e-05
Clp0000I Optimal - objective value 34.92065
Clp0000I Optimal - objective value 34.92065
Coin0511I After Postsolve, objective 34.92065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.92065
Clp0000I Optimal - objective value 34.92065
Clp0000I Optimal - objective value 34.92065
Coin0511I After Postsolve, objective 34.92065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.92065034 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 10.1693
Cbc0038I Solution found of 7.5774
Cbc0038I Relaxing continuous gives -3.015
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -6.20566
Cbc0038I Pass   1: suminf.    0.78690 (25) obj. -6.20566 iterations 32
Cbc0038I Pass   2: suminf.    1.59559 (6) obj. -6.20566 iterations 36
Cbc0038I Pass   3: suminf.    0.63356 (4) obj. -6.20566 iterations 3
Cbc0038I Pass   4: suminf.    1.63408 (6) obj. -6.20566 iterations 8
Cbc0038I Pass   5: suminf.    1.33292 (5) obj. -6.20566 iterations 2
Cbc0038I Pass   6: suminf.    0.82604 (3) obj. -6.20566 iterations 7
Cbc0038I Pass   7: suminf.    0.83656 (3) obj. -6.20566 iterations 3
Cbc0038I Pass   8: suminf.    0.83656 (3) obj. -6.20566 iterations 1
Cbc0038I Pass   9: suminf.    1.13113 (3) obj. -6.20566 iterations 2
Cbc0038I Pass  10: suminf.    1.13113 (3) obj. -6.20566 iterations 1
Cbc0038I Pass  11: suminf.    0.83656 (3) obj. -6.20566 iterations 2
Cbc0038I Pass  12: suminf.    1.58050 (6) obj. -6.20566 iterations 16
Cbc0038I Pass  13: suminf.    0.96727 (5) obj. -6.20566 iterations 8
Cbc0038I Pass  14: suminf.    0.68159 (3) obj. -6.20566 iterations 2
Cbc0038I Pass  15: suminf.    0.59285 (4) obj. -6.20566 iterations 3
Cbc0038I Pass  16: suminf.    0.73631 (4) obj. -6.20566 iterations 6
Cbc0038I Pass  17: suminf.    0.56414 (6) obj. -6.20566 iterations 4
Cbc0038I Pass  18: suminf.    0.96668 (3) obj. -6.20566 iterations 8
Cbc0038I Pass  19: suminf.    0.89267 (3) obj. -6.20566 iterations 2
Cbc0038I Pass  20: suminf.    0.71395 (2) obj. -6.20566 iterations 4
Cbc0038I Pass  21: suminf.    0.54900 (4) obj. -6.20566 iterations 2
Cbc0038I Pass  22: suminf.    0.73631 (4) obj. -6.20566 iterations 7
Cbc0038I Pass  23: suminf.    0.56414 (6) obj. -6.20566 iterations 4
Cbc0038I Pass  24: suminf.    0.96668 (3) obj. -6.20566 iterations 8
Cbc0038I Pass  25: suminf.    0.89267 (3) obj. -6.20566 iterations 2
Cbc0038I Pass  26: suminf.    0.71395 (2) obj. -6.20566 iterations 4
Cbc0038I Pass  27: suminf.    0.54900 (4) obj. -6.20566 iterations 2
Cbc0038I Pass  28: suminf.    0.73631 (4) obj. -6.20566 iterations 7
Cbc0038I Pass  29: suminf.    0.56414 (6) obj. -6.20566 iterations 4
Cbc0038I Pass  30: suminf.    0.96668 (3) obj. -6.20566 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 82 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -3.015 - took 0.14 seconds
Cbc0012I Integer solution of -3.015 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0031I 18 added rows had average density of 45.722222
Cbc0013I At root node, 18 cuts changed objective from -34.92065 to -27.053368 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7751 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1471 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0038I Full problem 93 rows 51 columns, reduced to 25 rows 15 columns
Cbc0001I Search completed - best objective -3.015, took 6250 iterations and 52 nodes (0.67 seconds)
Cbc0032I Strong branching done 724 times (8479 iterations), fathomed 7 nodes and fixed 59 variables
Cbc0035I Maximum depth 11, 83 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.67

