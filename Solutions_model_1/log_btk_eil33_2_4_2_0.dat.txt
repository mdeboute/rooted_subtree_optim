Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 1.39604e-05 - average 2.40697e-07, 6 fixed columns
Coin0506I Presolve 46 (-12) rows, 27 (-6) columns and 139 (-35) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 3.7569694 - largest nonzero change 0 ( 0%) - largest zero change 1.7295226e-05
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Coin0511I After Postsolve, objective 99.563994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Coin0511I After Postsolve, objective 99.563994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.56399443 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.43699
Cbc0038I Pass   1: suminf.    0.44500 (1) obj. -33.7116 iterations 20
Cbc0038I Solution found of -14.6662
Cbc0038I Relaxing continuous gives -14.6662
Cbc0038I Rounding solution of -25.7107 is better than previous of -14.6662

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.7107 to -41.1818 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.4918
Cbc0038I Pass   2: suminf.    0.70736 (3) obj. -46.4918 iterations 2
Cbc0038I Pass   3: suminf.    0.97756 (4) obj. -46.4918 iterations 8
Cbc0038I Pass   4: suminf.    0.55164 (2) obj. -46.4918 iterations 5
Cbc0038I Pass   5: suminf.    0.76679 (2) obj. -46.4918 iterations 3
Cbc0038I Pass   6: suminf.    1.72625 (7) obj. -46.4918 iterations 11
Cbc0038I Pass   7: suminf.    0.93255 (5) obj. -46.4918 iterations 4
Cbc0038I Pass   8: suminf.    0.80368 (2) obj. -46.4918 iterations 5
Cbc0038I Pass   9: suminf.    0.75829 (3) obj. -46.4918 iterations 2
Cbc0038I Pass  10: suminf.    1.11883 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  11: suminf.    0.99844 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  12: suminf.    0.99844 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  13: suminf.    0.98263 (3) obj. -46.4918 iterations 5
Cbc0038I Pass  14: suminf.    0.97433 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  15: suminf.    1.25256 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  16: suminf.    1.13052 (6) obj. -46.4918 iterations 1
Cbc0038I Pass  17: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  18: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  19: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  20: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  21: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I Pass  22: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  23: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  24: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  25: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  26: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I Pass  27: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  28: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  29: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  30: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  31: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -41.1818 - took 0.03 seconds
Cbc0012I Integer solution of -41.18183 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 30 rows 18 columns
Cbc0031I 12 added rows had average density of 25.166667
Cbc0013I At root node, 12 cuts changed objective from -94.280842 to -69.399586 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1139 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 862 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -41.21276 found by rounding after 2618 iterations and 8 nodes (0.25 seconds)
Cbc0004I Integer solution of -43.025331 found after 2639 iterations and 11 nodes (0.25 seconds)
Cbc0012I Integer solution of -43.52116 found by DiveCoefficient after 2718 iterations and 16 nodes (0.26 seconds)
Cbc0012I Integer solution of -44.52116 found by rounding after 2799 iterations and 19 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -44.52115999999999, took 2856 iterations and 20 nodes (0.26 seconds)
Cbc0032I Strong branching done 208 times (1847 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.27

