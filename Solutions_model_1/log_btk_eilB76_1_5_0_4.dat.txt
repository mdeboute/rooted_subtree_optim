Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 371 (-82) elements
Clp1000I sum of infeasibilities 0 - average 0, 58 fixed columns
Coin0506I Presolve 11 (-112) rows, 8 (-58) columns and 32 (-339) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 12876.32
Clp0000I Optimal - objective value 12876.32
Coin0511I After Postsolve, objective 12876.32, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35047245 - largest nonzero change 0 ( 0%) - largest zero change 2.7347813e-05
Clp0000I Optimal - objective value 12876.32
Clp0000I Optimal - objective value 12876.32
Clp0000I Optimal - objective value 12876.32
Coin0511I After Postsolve, objective 12876.32, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12876.32019 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 119 rows, 66 columns (65 integer (65 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.415%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.69018
Cbc0038I Pass   1: suminf.    0.67568 (2) obj. -12035 iterations 9
Cbc0038I Solution found of -7356.78
Cbc0038I Relaxing continuous gives -7368.27
Cbc0038I Rounding solution of -9360.82 is better than previous of -7368.27

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 11 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -9360.82 to -10776.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -10985.6
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.67568 (2) obj. -12035 iterations 0
Cbc0038I Pass   3: suminf.    0.97442 (2) obj. -10985.6 iterations 2
Cbc0038I Pass   4: suminf.    1.51291 (4) obj. -10985.6 iterations 13
Cbc0038I Pass   5: suminf.    0.22391 (2) obj. -10985.6 iterations 8
Cbc0038I Pass   6: suminf.    0.40697 (1) obj. -10985.6 iterations 10
Cbc0038I Pass   7: suminf.    0.33326 (2) obj. -10985.6 iterations 8
Cbc0038I Pass   8: suminf.    0.72870 (2) obj. -10985.6 iterations 6
Cbc0038I Pass   9: suminf.    0.40697 (1) obj. -10985.6 iterations 7
Cbc0038I Pass  10: suminf.    0.96268 (4) obj. -10985.6 iterations 11
Cbc0038I Pass  11: suminf.    0.19666 (1) obj. -10985.6 iterations 12
Cbc0038I Pass  12: suminf.    0.48457 (2) obj. -10985.6 iterations 6
Cbc0038I Pass  13: suminf.    1.82221 (6) obj. -10985.6 iterations 13
Cbc0038I Pass  14: suminf.    0.51730 (3) obj. -10985.6 iterations 9
Cbc0038I Pass  15: suminf.    0.97442 (2) obj. -10985.6 iterations 4
Cbc0038I Pass  16: suminf.    0.67568 (2) obj. -12035 iterations 1
Cbc0038I Pass  17: suminf.    1.40168 (7) obj. -10985.6 iterations 12
Cbc0038I Pass  18: suminf.    0.63181 (3) obj. -10985.6 iterations 8
Cbc0038I Pass  19: suminf.    0.75039 (3) obj. -10985.6 iterations 8
Cbc0038I Pass  20: suminf.    0.75039 (3) obj. -10985.6 iterations 0
Cbc0038I Pass  21: suminf.    0.63768 (3) obj. -11264.6 iterations 5
Cbc0038I Pass  22: suminf.    0.59459 (2) obj. -11225.5 iterations 1
Cbc0038I Pass  23: suminf.    1.17698 (3) obj. -10985.6 iterations 4
Cbc0038I Pass  24: suminf.    0.99605 (7) obj. -10985.6 iterations 6
Cbc0038I Pass  25: suminf.    0.96491 (4) obj. -10985.6 iterations 17
Cbc0038I Pass  26: suminf.    0.59979 (5) obj. -10985.6 iterations 5
Cbc0038I Pass  27: suminf.    1.68188 (4) obj. -10985.6 iterations 7
Cbc0038I Pass  28: suminf.    0.40697 (1) obj. -10985.6 iterations 9
Cbc0038I Pass  29: suminf.    0.33326 (2) obj. -10985.6 iterations 5
Cbc0038I Pass  30: suminf.    0.40697 (1) obj. -10985.6 iterations 4
Cbc0038I Pass  31: suminf.    2.23852 (8) obj. -10985.6 iterations 9
Cbc0038I Rounding solution of -11112.6 is better than previous of -10776.6

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 43 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -11112.6 to -11124.2 (0.03 seconds)
Cbc0038I Round again with cutoff of -11472.7
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.67568 (2) obj. -12035 iterations 0
Cbc0038I Pass  32: suminf.    0.83574 (2) obj. -11472.7 iterations 2
Cbc0038I Pass  33: suminf.    2.29382 (7) obj. -11472.7 iterations 12
Cbc0038I Pass  34: suminf.    0.69250 (6) obj. -11472.7 iterations 9
Cbc0038I Pass  35: suminf.    0.69250 (6) obj. -11472.7 iterations 0
Cbc0038I Pass  36: suminf.    2.59617 (6) obj. -11472.7 iterations 10
Cbc0038I Pass  37: suminf.    1.39437 (4) obj. -11472.7 iterations 7
Cbc0038I Pass  38: suminf.    0.26689 (3) obj. -11472.7 iterations 9
Cbc0038I Pass  39: suminf.    0.26689 (3) obj. -11472.7 iterations 2
Cbc0038I Pass  40: suminf.    0.83574 (2) obj. -11472.7 iterations 5
Cbc0038I Pass  41: suminf.    0.67568 (2) obj. -12035 iterations 2
Cbc0038I Pass  42: suminf.    0.83574 (2) obj. -11472.7 iterations 2
Cbc0038I Pass  43: suminf.    0.76343 (5) obj. -11472.7 iterations 18
Cbc0038I Pass  44: suminf.    0.76343 (5) obj. -11472.7 iterations 6
Cbc0038I Pass  45: suminf.    1.41168 (4) obj. -11990 iterations 7
Cbc0038I Pass  46: suminf.    1.41168 (4) obj. -11990 iterations 0
Cbc0038I Pass  47: suminf.    0.79043 (4) obj. -11472.7 iterations 5
Cbc0038I Pass  48: suminf.    0.79043 (4) obj. -11472.7 iterations 0
Cbc0038I Pass  49: suminf.    1.05707 (7) obj. -11472.7 iterations 19
Cbc0038I Pass  50: suminf.    0.55729 (5) obj. -11472.7 iterations 12
Cbc0038I Pass  51: suminf.    1.41168 (4) obj. -11990 iterations 8
Cbc0038I Pass  52: suminf.    1.41168 (4) obj. -11990 iterations 0
Cbc0038I Pass  53: suminf.    0.79043 (4) obj. -11472.7 iterations 5
Cbc0038I Pass  54: suminf.    0.79043 (4) obj. -11472.7 iterations 0
Cbc0038I Pass  55: suminf.    1.07578 (4) obj. -11472.7 iterations 17
Cbc0038I Pass  56: suminf.    0.25893 (3) obj. -11472.7 iterations 6
Cbc0038I Pass  57: suminf.    0.43485 (3) obj. -11472.7 iterations 12
Cbc0038I Pass  58: suminf.    0.39191 (4) obj. -11472.7 iterations 14
Cbc0038I Pass  59: suminf.    0.72697 (4) obj. -11472.7 iterations 8
Cbc0038I Pass  60: suminf.    1.08785 (5) obj. -11472.7 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 66 columns, reduced to 43 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -11124.2 - took 0.03 seconds
Cbc0012I Integer solution of -11124.22 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 119 rows 66 columns, reduced to 15 rows 9 columns
Cbc0031I 9 added rows had average density of 20.222222
Cbc0013I At root node, 9 cuts changed objective from -12866.739 to -11816.503 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.9 elements, 16 column cuts (16 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0001I Search completed - best objective -11124.22, took 307 iterations and 6 nodes (0.52 seconds)
Cbc0032I Strong branching done 44 times (319 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.52

