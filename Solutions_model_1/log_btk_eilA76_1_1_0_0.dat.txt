Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 74 (-4) columns and 415 (-38) elements
Clp1000I sum of infeasibilities 0.000116249 - average 8.48533e-07, 16 fixed columns
Coin0506I Presolve 107 (-30) rows, 58 (-16) columns and 323 (-92) elements
Clp0000I Optimal - objective value 45.911366
Clp0000I Optimal - objective value 45.911366
Coin0511I After Postsolve, objective 45.911366, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.911366
Clp0000I Optimal - objective value 45.911366
Clp0000I Optimal - objective value 45.911366
Coin0511I After Postsolve, objective 45.911366, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.91136552 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 74 columns (73 integer (73 of which binary)) and 417 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.252%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.89875
Cbc0038I Solution found of 3.08107
Cbc0038I Relaxing continuous gives -6.2989
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 74 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -6.2989 to -17.1987 (0.04 seconds)
Cbc0038I Round again with cutoff of -20.0671
Cbc0038I Pass   1: suminf.    2.07242 (24) obj. -20.0671 iterations 45
Cbc0038I Pass   2: suminf.    0.95921 (5) obj. -20.0671 iterations 32
Cbc0038I Pass   3: suminf.    0.61041 (5) obj. -20.0671 iterations 3
Cbc0038I Pass   4: suminf.    0.56757 (2) obj. -20.0671 iterations 4
Cbc0038I Pass   5: suminf.    0.78474 (2) obj. -20.0671 iterations 1
Cbc0038I Pass   6: suminf.    3.37132 (10) obj. -20.0671 iterations 17
Cbc0038I Pass   7: suminf.    1.70544 (5) obj. -20.0671 iterations 10
Cbc0038I Pass   8: suminf.    1.06914 (5) obj. -20.0671 iterations 16
Cbc0038I Pass   9: suminf.    1.52760 (5) obj. -20.0671 iterations 5
Cbc0038I Pass  10: suminf.    1.40356 (5) obj. -20.0671 iterations 3
Cbc0038I Pass  11: suminf.    0.81081 (2) obj. -20.0671 iterations 5
Cbc0038I Pass  12: suminf.    0.81081 (2) obj. -20.0671 iterations 0
Cbc0038I Pass  13: suminf.    0.90249 (2) obj. -20.0671 iterations 1
Cbc0038I Pass  14: suminf.    2.40635 (6) obj. -20.0671 iterations 21
Cbc0038I Pass  15: suminf.    1.20634 (3) obj. -20.0671 iterations 9
Cbc0038I Pass  16: suminf.    0.92735 (5) obj. -20.0671 iterations 7
Cbc0038I Pass  17: suminf.    0.90181 (3) obj. -20.0671 iterations 2
Cbc0038I Pass  18: suminf.    0.91342 (3) obj. -20.0671 iterations 5
Cbc0038I Pass  19: suminf.    0.91385 (3) obj. -20.0671 iterations 2
Cbc0038I Pass  20: suminf.    4.19246 (13) obj. -20.0671 iterations 30
Cbc0038I Pass  21: suminf.    1.74262 (5) obj. -20.0671 iterations 14
Cbc0038I Pass  22: suminf.    0.77948 (2) obj. -20.0671 iterations 4
Cbc0038I Pass  23: suminf.    0.65190 (2) obj. -20.0671 iterations 1
Cbc0038I Pass  24: suminf.    0.74717 (2) obj. -20.0671 iterations 2
Cbc0038I Pass  25: suminf.    0.74717 (2) obj. -20.0671 iterations 0
Cbc0038I Pass  26: suminf.    2.64343 (13) obj. -20.0671 iterations 17
Cbc0038I Pass  27: suminf.    1.06112 (3) obj. -20.0671 iterations 18
Cbc0038I Pass  28: suminf.    0.75932 (5) obj. -20.0671 iterations 9
Cbc0038I Pass  29: suminf.    1.76698 (5) obj. -20.0671 iterations 4
Cbc0038I Pass  30: suminf.    1.76698 (5) obj. -20.0671 iterations 0
Cbc0038I Rounding solution of -17.7213 is better than previous of -17.1987

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 74 columns, reduced to 95 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -17.7213 to -19.2211 (0.08 seconds)
Cbc0038I Round again with cutoff of -25.2299
Cbc0038I Pass  30: suminf.    2.84955 (24) obj. -25.2299 iterations 0
Cbc0038I Pass  31: suminf.    2.45000 (10) obj. -25.2299 iterations 29
Cbc0038I Pass  32: suminf.    1.46635 (7) obj. -25.2299 iterations 5
Cbc0038I Pass  33: suminf.    1.28990 (6) obj. -25.2299 iterations 7
Cbc0038I Pass  34: suminf.    1.28990 (6) obj. -25.2299 iterations 0
Cbc0038I Pass  35: suminf.    2.02522 (5) obj. -25.2299 iterations 6
Cbc0038I Pass  36: suminf.    1.24187 (5) obj. -25.2299 iterations 4
Cbc0038I Pass  37: suminf.    1.04572 (4) obj. -25.2299 iterations 2
Cbc0038I Pass  38: suminf.    1.04572 (4) obj. -25.2299 iterations 0
Cbc0038I Pass  39: suminf.    1.31089 (4) obj. -25.2299 iterations 4
Cbc0038I Pass  40: suminf.    1.19503 (3) obj. -25.2299 iterations 1
Cbc0038I Pass  41: suminf.    0.91203 (4) obj. -25.2299 iterations 3
Cbc0038I Pass  42: suminf.    1.28461 (6) obj. -25.2299 iterations 10
Cbc0038I Pass  43: suminf.    1.04486 (4) obj. -25.2299 iterations 4
Cbc0038I Pass  44: suminf.    1.59194 (4) obj. -25.2299 iterations 2
Cbc0038I Pass  45: suminf.    1.21013 (4) obj. -25.2299 iterations 2
Cbc0038I Pass  46: suminf.    2.25393 (11) obj. -25.2299 iterations 15
Cbc0038I Pass  47: suminf.    1.34053 (6) obj. -25.2299 iterations 6
Cbc0038I Pass  48: suminf.    2.22115 (7) obj. -25.2299 iterations 8
Cbc0038I Pass  49: suminf.    1.40505 (6) obj. -25.2299 iterations 1
Cbc0038I Pass  50: suminf.    1.19265 (3) obj. -25.2299 iterations 3
Cbc0038I Pass  51: suminf.    0.96830 (3) obj. -25.2299 iterations 3
Cbc0038I Pass  52: suminf.    1.19265 (3) obj. -25.2299 iterations 3
Cbc0038I Pass  53: suminf.    2.23997 (7) obj. -25.2299 iterations 15
Cbc0038I Pass  54: suminf.    1.52016 (5) obj. -25.2299 iterations 11
Cbc0038I Pass  55: suminf.    1.48468 (4) obj. -25.2299 iterations 2
Cbc0038I Pass  56: suminf.    1.49868 (7) obj. -25.2299 iterations 3
Cbc0038I Pass  57: suminf.    1.49868 (7) obj. -25.2299 iterations 0
Cbc0038I Pass  58: suminf.    1.92091 (7) obj. -25.2299 iterations 4
Cbc0038I Pass  59: suminf.    1.54536 (5) obj. -25.2299 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 74 columns, reduced to 76 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -19.2211 - took 0.10 seconds
Cbc0012I Integer solution of -19.22112 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 74 columns, reduced to 64 rows 35 columns
Cbc0031I 25 added rows had average density of 51.72
Cbc0013I At root node, 25 cuts changed objective from -45.881372 to -38.050302 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7352 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1163 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 7 nodes, 4 on tree, -19.22112 best solution, best possible -38.045769 (0.68 seconds)
Cbc0038I Full problem 137 rows 74 columns, reduced to 39 rows 27 columns
Cbc0004I Integer solution of -21.83273 found after 6982 iterations and 56 nodes (0.81 seconds)
Cbc0001I Search completed - best objective -21.83273, took 7221 iterations and 62 nodes (0.82 seconds)
Cbc0032I Strong branching done 736 times (9455 iterations), fathomed 4 nodes and fixed 25 variables
Cbc0035I Maximum depth 24, 162 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.83

