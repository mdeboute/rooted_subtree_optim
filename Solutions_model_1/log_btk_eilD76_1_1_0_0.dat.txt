Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 3.91584e-05 - average 2.79703e-07, 8 fixed columns
Coin0506I Presolve 125 (-15) rows, 68 (-8) columns and 378 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Coin0511I After Postsolve, objective 39.343214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31000733 - largest nonzero change 0 ( 0%) - largest zero change 2.8648561e-05
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Clp0000I Optimal - objective value 39.343214
Coin0511I After Postsolve, objective 39.343214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.34321364 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 10.5653
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.37652 iterations 63
Cbc0038I Solution found of 5.37652
Cbc0038I Relaxing continuous gives 5.37652
Cbc0038I Rounding solution of 2.09835 is better than previous of 5.37652

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 92 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 2.09835 to -11.5246 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.3066
Cbc0038I Pass   2: suminf.    3.00839 (24) obj. -14.3066 iterations 30
Cbc0038I Pass   3: suminf.    2.73611 (23) obj. -14.3066 iterations 3
Cbc0038I Pass   4: suminf.    1.71876 (7) obj. -14.3066 iterations 25
Cbc0038I Pass   5: suminf.    1.71876 (7) obj. -14.3066 iterations 1
Cbc0038I Pass   6: suminf.    2.25737 (10) obj. -14.3066 iterations 13
Cbc0038I Pass   7: suminf.    2.19168 (7) obj. -14.3066 iterations 2
Cbc0038I Pass   8: suminf.    2.26151 (6) obj. -14.3066 iterations 13
Cbc0038I Pass   9: suminf.    2.20512 (6) obj. -14.3066 iterations 1
Cbc0038I Pass  10: suminf.    2.20512 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  11: suminf.    2.44068 (8) obj. -14.3066 iterations 7
Cbc0038I Pass  12: suminf.    2.44068 (8) obj. -14.3066 iterations 0
Cbc0038I Pass  13: suminf.    2.63033 (7) obj. -14.3066 iterations 7
Cbc0038I Pass  14: suminf.    2.63033 (7) obj. -14.3066 iterations 0
Cbc0038I Pass  15: suminf.    1.48110 (5) obj. -14.3066 iterations 9
Cbc0038I Pass  16: suminf.    1.48110 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  17: suminf.    1.76414 (5) obj. -14.3066 iterations 4
Cbc0038I Pass  18: suminf.    1.76414 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  19: suminf.    1.65153 (5) obj. -14.3066 iterations 7
Cbc0038I Pass  20: suminf.    2.84271 (10) obj. -14.3066 iterations 19
Cbc0038I Pass  21: suminf.    2.15774 (9) obj. -14.3066 iterations 6
Cbc0038I Pass  22: suminf.    1.69032 (6) obj. -14.3066 iterations 14
Cbc0038I Pass  23: suminf.    1.69032 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  24: suminf.    2.23304 (6) obj. -14.3066 iterations 6
Cbc0038I Pass  25: suminf.    1.91173 (5) obj. -14.3066 iterations 1
Cbc0038I Pass  26: suminf.    1.91173 (5) obj. -14.3066 iterations 0
Cbc0038I Pass  27: suminf.    1.69032 (6) obj. -14.3066 iterations 8
Cbc0038I Pass  28: suminf.    1.69032 (6) obj. -14.3066 iterations 0
Cbc0038I Pass  29: suminf.    2.23304 (6) obj. -14.3066 iterations 6
Cbc0038I Pass  30: suminf.    1.91173 (5) obj. -14.3066 iterations 1
Cbc0038I Pass  31: suminf.    1.91173 (5) obj. -14.3066 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 101 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -11.5246 to -12.8301 (0.12 seconds)
Cbc0038I Round again with cutoff of -19.3139
Cbc0038I Pass  31: suminf.    4.20056 (32) obj. -19.3139 iterations 7
Cbc0038I Pass  32: suminf.    3.95629 (33) obj. -19.3139 iterations 6
Cbc0038I Pass  33: suminf.    2.49546 (7) obj. -19.3139 iterations 33
Cbc0038I Pass  34: suminf.    1.88292 (8) obj. -19.3139 iterations 2
Cbc0038I Pass  35: suminf.    1.14479 (5) obj. -19.3139 iterations 8
Cbc0038I Pass  36: suminf.    1.08731 (5) obj. -19.3139 iterations 1
Cbc0038I Pass  37: suminf.    1.67428 (6) obj. -19.3139 iterations 4
Cbc0038I Pass  38: suminf.    1.64339 (6) obj. -19.3139 iterations 1
Cbc0038I Pass  39: suminf.    1.12889 (4) obj. -19.3139 iterations 3
Cbc0038I Pass  40: suminf.    6.29717 (16) obj. -19.3139 iterations 20
Cbc0038I Pass  41: suminf.    1.79681 (7) obj. -19.3139 iterations 14
Cbc0038I Pass  42: suminf.    2.38169 (9) obj. -19.3139 iterations 16
Cbc0038I Pass  43: suminf.    2.37937 (8) obj. -19.3139 iterations 1
Cbc0038I Pass  44: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  45: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  46: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  47: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  48: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  49: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  50: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  51: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  52: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  53: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  54: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  55: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I Pass  56: suminf.    2.71512 (8) obj. -19.3139 iterations 8
Cbc0038I Pass  57: suminf.    2.37937 (8) obj. -19.3139 iterations 4
Cbc0038I Pass  58: suminf.    2.37937 (8) obj. -19.3139 iterations 0
Cbc0038I Pass  59: suminf.    2.85570 (8) obj. -19.3139 iterations 6
Cbc0038I Pass  60: suminf.    2.74344 (7) obj. -19.3139 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 110 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -12.8301 - took 0.15 seconds
Cbc0012I Integer solution of -12.83015 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 96 rows 57 columns
Cbc0012I Integer solution of -14.03339 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 31 added rows had average density of 38.612903
Cbc0013I At root node, 31 cuts changed objective from -39.343214 to -32.362967 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18167 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3027 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 302 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.03339 best solution, best possible -32.362967 (1.40 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 34 rows 22 columns
Cbc0012I Integer solution of -14.32851 found by RINS after 10875 iterations and 43 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -14.32850999999999, took 12270 iterations and 80 nodes (1.78 seconds)
Cbc0032I Strong branching done 940 times (19042 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 28, 67 variables fixed on reduced cost
Total time (CPU seconds):       1.72   (Wallclock seconds):       1.80

