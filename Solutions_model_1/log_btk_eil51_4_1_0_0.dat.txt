Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 50 (-3) columns and 275 (-28) elements
Clp1000I sum of infeasibilities 9.0121e-06 - average 9.9034e-08, 9 fixed columns
Coin0506I Presolve 74 (-17) rows, 41 (-9) columns and 223 (-52) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 42.690141
Clp0000I Optimal - objective value 42.690141
Coin0511I After Postsolve, objective 42.690141, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.690141
Clp0000I Optimal - objective value 42.690141
Clp0000I Optimal - objective value 42.690141
Coin0511I After Postsolve, objective 42.690141, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.69014145 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 50 columns (49 integer (49 of which binary)) and 275 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 8.92064
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.2843 iterations 27
Cbc0038I Solution found of 10.2843
Cbc0038I Relaxing continuous gives 10.2843
Cbc0038I Rounding solution of -2.56017 is better than previous of 10.2843

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 50 columns, reduced to 49 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -2.56017 to -15.3249 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.0615
Cbc0038I Pass   2: suminf.    1.47410 (7) obj. -18.0615 iterations 8
Cbc0038I Pass   3: suminf.    0.99516 (4) obj. -18.0615 iterations 2
Cbc0038I Pass   4: suminf.    0.83799 (3) obj. -18.0615 iterations 8
Cbc0038I Pass   5: suminf.    0.49816 (5) obj. -18.0615 iterations 4
Cbc0038I Pass   6: suminf.    1.53408 (5) obj. -18.0615 iterations 9
Cbc0038I Pass   7: suminf.    1.18728 (4) obj. -18.0615 iterations 1
Cbc0038I Pass   8: suminf.    1.12702 (3) obj. -18.0615 iterations 1
Cbc0038I Pass   9: suminf.    1.12702 (3) obj. -18.0615 iterations 0
Cbc0038I Pass  10: suminf.    0.54543 (2) obj. -18.0615 iterations 5
Cbc0038I Pass  11: suminf.    0.74199 (2) obj. -18.0615 iterations 1
Cbc0038I Pass  12: suminf.    0.35668 (2) obj. -18.0615 iterations 2
Cbc0038I Pass  13: suminf.    1.30871 (4) obj. -18.0615 iterations 3
Cbc0038I Pass  14: suminf.    1.22071 (3) obj. -18.0615 iterations 1
Cbc0038I Pass  15: suminf.    1.22071 (3) obj. -18.0615 iterations 0
Cbc0038I Pass  16: suminf.    0.54543 (2) obj. -18.0615 iterations 4
Cbc0038I Pass  17: suminf.    0.74199 (2) obj. -18.0615 iterations 1
Cbc0038I Pass  18: suminf.    0.35668 (2) obj. -18.0615 iterations 2
Cbc0038I Pass  19: suminf.    1.30871 (4) obj. -18.0615 iterations 3
Cbc0038I Pass  20: suminf.    1.22071 (3) obj. -18.0615 iterations 1
Cbc0038I Pass  21: suminf.    1.22071 (3) obj. -18.0615 iterations 0
Cbc0038I Pass  22: suminf.    0.54543 (2) obj. -18.0615 iterations 4
Cbc0038I Pass  23: suminf.    0.74199 (2) obj. -18.0615 iterations 1
Cbc0038I Pass  24: suminf.    0.35668 (2) obj. -18.0615 iterations 2
Cbc0038I Pass  25: suminf.    1.30871 (4) obj. -18.0615 iterations 3
Cbc0038I Pass  26: suminf.    1.22071 (3) obj. -18.0615 iterations 1
Cbc0038I Pass  27: suminf.    1.22071 (3) obj. -18.0615 iterations 0
Cbc0038I Pass  28: suminf.    0.54543 (2) obj. -18.0615 iterations 4
Cbc0038I Pass  29: suminf.    0.74199 (2) obj. -18.0615 iterations 1
Cbc0038I Pass  30: suminf.    0.35668 (2) obj. -18.0615 iterations 2
Cbc0038I Pass  31: suminf.    1.30871 (4) obj. -18.0615 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 50 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -15.3249 - took 0.06 seconds
Cbc0012I Integer solution of -15.324893 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 91 rows 50 columns, reduced to 49 rows 28 columns
Cbc0031I 12 added rows had average density of 43.833333
Cbc0013I At root node, 12 cuts changed objective from -42.690141 to -30.701471 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4362 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 940 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 137 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15.324893, took 6143 iterations and 26 nodes (0.58 seconds)
Cbc0032I Strong branching done 430 times (6521 iterations), fathomed 3 nodes and fixed 16 variables
Cbc0035I Maximum depth 9, 168 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.58

