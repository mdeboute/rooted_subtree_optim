Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 274 (-29) elements
Clp1000I sum of infeasibilities 1.01108e-05 - average 1.12343e-07, 1 fixed columns
Coin0506I Presolve 88 (-2) rows, 50 (-1) columns and 268 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 37.432483
Clp0000I Optimal - objective value 37.432483
Coin0511I After Postsolve, objective 37.432483, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.432483
Clp0000I Optimal - objective value 37.432483
Clp0000I Optimal - objective value 37.432483
Coin0511I After Postsolve, objective 37.432483, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.43248349 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.3716
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.43092 iterations 29
Cbc0038I Solution found of 7.43092
Cbc0038I Relaxing continuous gives 7.43092
Cbc0038I Rounding solution of 3.05539 is better than previous of 7.43092

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 58 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 3.05539 to -4.87988 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.13523
Cbc0038I Pass   2: suminf.    1.16237 (11) obj. -8.13523 iterations 8
Cbc0038I Pass   3: suminf.    0.92802 (8) obj. -8.13523 iterations 2
Cbc0038I Pass   4: suminf.    2.81541 (8) obj. -8.13523 iterations 3
Cbc0038I Pass   5: suminf.    2.84265 (8) obj. -8.13523 iterations 5
Cbc0038I Pass   6: suminf.    2.61177 (7) obj. -8.13523 iterations 4
Cbc0038I Pass   7: suminf.    1.31184 (10) obj. -8.13523 iterations 8
Cbc0038I Pass   8: suminf.    2.10678 (9) obj. -8.13523 iterations 30
Cbc0038I Pass   9: suminf.    1.85609 (7) obj. -8.13523 iterations 4
Cbc0038I Pass  10: suminf.    1.91014 (6) obj. -8.13523 iterations 14
Cbc0038I Pass  11: suminf.    1.98053 (11) obj. -8.13523 iterations 12
Cbc0038I Pass  12: suminf.    2.26740 (7) obj. -8.13523 iterations 9
Cbc0038I Pass  13: suminf.    1.92564 (7) obj. -8.13523 iterations 10
Cbc0038I Pass  14: suminf.    1.36616 (4) obj. -8.13523 iterations 7
Cbc0038I Pass  15: suminf.    0.98902 (4) obj. -8.13523 iterations 2
Cbc0038I Pass  16: suminf.    1.92898 (6) obj. -8.13523 iterations 6
Cbc0038I Pass  17: suminf.    1.45754 (5) obj. -8.13523 iterations 4
Cbc0038I Pass  18: suminf.    1.78429 (5) obj. -8.13523 iterations 12
Cbc0038I Pass  19: suminf.    1.19076 (6) obj. -8.13523 iterations 3
Cbc0038I Pass  20: suminf.    1.55572 (5) obj. -8.13523 iterations 9
Cbc0038I Pass  21: suminf.    1.55572 (5) obj. -8.13523 iterations 0
Cbc0038I Pass  22: suminf.    1.92495 (5) obj. -8.13523 iterations 3
Cbc0038I Pass  23: suminf.    1.67313 (6) obj. -8.13523 iterations 5
Cbc0038I Pass  24: suminf.    1.67313 (6) obj. -8.13523 iterations 0
Cbc0038I Pass  25: suminf.    1.98053 (11) obj. -8.13523 iterations 7
Cbc0038I Pass  26: suminf.    2.26740 (7) obj. -8.13523 iterations 9
Cbc0038I Pass  27: suminf.    1.92564 (7) obj. -8.13523 iterations 10
Cbc0038I Pass  28: suminf.    1.36616 (4) obj. -8.13523 iterations 7
Cbc0038I Pass  29: suminf.    0.98902 (4) obj. -8.13523 iterations 2
Cbc0038I Pass  30: suminf.    1.92898 (6) obj. -8.13523 iterations 6
Cbc0038I Pass  31: suminf.    1.45754 (5) obj. -8.13523 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.87988 to -5.93091 (0.08 seconds)
Cbc0038I Round again with cutoff of -13.9947
Cbc0038I Pass  31: suminf.    2.12430 (14) obj. -13.9947 iterations 4
Cbc0038I Pass  32: suminf.    1.96708 (18) obj. -13.9947 iterations 6
Cbc0038I Pass  33: suminf.    4.11399 (9) obj. -13.9947 iterations 19
Cbc0038I Pass  34: suminf.    1.85546 (6) obj. -13.9947 iterations 6
Cbc0038I Pass  35: suminf.    1.29318 (5) obj. -13.9947 iterations 6
Cbc0038I Pass  36: suminf.    2.01497 (6) obj. -13.9947 iterations 7
Cbc0038I Pass  37: suminf.    1.34837 (5) obj. -13.9947 iterations 3
Cbc0038I Pass  38: suminf.    1.69251 (5) obj. -13.9947 iterations 3
Cbc0038I Pass  39: suminf.    1.48108 (5) obj. -13.9947 iterations 4
Cbc0038I Pass  40: suminf.    1.89150 (5) obj. -13.9947 iterations 3
Cbc0038I Pass  41: suminf.    1.89150 (5) obj. -13.9947 iterations 0
Cbc0038I Pass  42: suminf.    1.95193 (5) obj. -13.9947 iterations 1
Cbc0038I Pass  43: suminf.    1.95193 (5) obj. -13.9947 iterations 0
Cbc0038I Pass  44: suminf.    2.99725 (10) obj. -13.9947 iterations 19
Cbc0038I Pass  45: suminf.    1.69319 (5) obj. -13.9947 iterations 9
Cbc0038I Pass  46: suminf.    1.98066 (6) obj. -13.9947 iterations 7
Cbc0038I Pass  47: suminf.    1.75050 (6) obj. -13.9947 iterations 3
Cbc0038I Pass  48: suminf.    1.73307 (6) obj. -13.9947 iterations 1
Cbc0038I Pass  49: suminf.    1.89150 (5) obj. -13.9947 iterations 5
Cbc0038I Pass  50: suminf.    1.89150 (5) obj. -13.9947 iterations 0
Cbc0038I Pass  51: suminf.    1.95193 (5) obj. -13.9947 iterations 1
Cbc0038I Pass  52: suminf.    1.95193 (5) obj. -13.9947 iterations 0
Cbc0038I Pass  53: suminf.    2.11150 (9) obj. -13.9947 iterations 22
Cbc0038I Pass  54: suminf.    1.66195 (7) obj. -13.9947 iterations 9
Cbc0038I Pass  55: suminf.    2.40576 (9) obj. -13.9947 iterations 10
Cbc0038I Pass  56: suminf.    2.39928 (8) obj. -13.9947 iterations 1
Cbc0038I Pass  57: suminf.    2.25854 (9) obj. -13.9947 iterations 9
Cbc0038I Pass  58: suminf.    1.78321 (8) obj. -13.9947 iterations 7
Cbc0038I Pass  59: suminf.    2.78155 (8) obj. -13.9947 iterations 10
Cbc0038I Pass  60: suminf.    2.78155 (8) obj. -13.9947 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 63 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -5.93091 - took 0.10 seconds
Cbc0012I Integer solution of -5.93091 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 59 rows 37 columns
Cbc0031I 21 added rows had average density of 37.571429
Cbc0013I At root node, 21 cuts changed objective from -37.432483 to -27.94623 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8745 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1842 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 49.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.93091 best solution, best possible -27.94623 (0.69 seconds)
Cbc0016I Integer solution of -6.55094 found by strong branching after 6757 iterations and 30 nodes (0.87 seconds)
Cbc0001I Search completed - best objective -6.550940000000004, took 7226 iterations and 40 nodes (0.89 seconds)
Cbc0032I Strong branching done 544 times (10737 iterations), fathomed 1 nodes and fixed 24 variables
Cbc0035I Maximum depth 15, 107 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.89

