Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 8.29941e-05 - average 4.56012e-07, 10 fixed columns
Coin0506I Presolve 159 (-23) rows, 88 (-12) columns and 486 (-70) elements
Clp0029I End of values pass after 88 iterations
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Coin0511I After Postsolve, objective 37.022659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Clp0000I Optimal - objective value 37.022659
Coin0511I After Postsolve, objective 37.022659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.02265894 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 100 columns (99 integer (99 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.935%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 8.41297
Cbc0038I Solution found of 0.834963
Cbc0038I Relaxing continuous gives -5.53288
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -5.53288 to -11.0157 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.6164
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.79480 (35) obj. -13.6164 iterations 72
Cbc0038I Pass   2: suminf.    1.32084 (7) obj. -13.6164 iterations 33
Cbc0038I Pass   3: suminf.    1.32084 (7) obj. -13.6164 iterations 0
Cbc0038I Pass   4: suminf.    2.17313 (19) obj. -13.6164 iterations 24
Cbc0038I Pass   5: suminf.    3.37634 (9) obj. -13.6164 iterations 37
Cbc0038I Pass   6: suminf.    1.96748 (8) obj. -13.6164 iterations 10
Cbc0038I Pass   7: suminf.    0.95868 (5) obj. -13.6164 iterations 9
Cbc0038I Pass   8: suminf.    0.87213 (4) obj. -13.6164 iterations 3
Cbc0038I Pass   9: suminf.    1.14655 (5) obj. -13.6164 iterations 5
Cbc0038I Pass  10: suminf.    1.07884 (5) obj. -13.6164 iterations 2
Cbc0038I Pass  11: suminf.    1.54862 (6) obj. -13.6164 iterations 9
Cbc0038I Pass  12: suminf.    1.17660 (4) obj. -13.6164 iterations 5
Cbc0038I Pass  13: suminf.    1.17660 (4) obj. -13.6164 iterations 0
Cbc0038I Pass  14: suminf.    0.92842 (3) obj. -13.6164 iterations 8
Cbc0038I Pass  15: suminf.    0.77398 (4) obj. -13.6164 iterations 3
Cbc0038I Pass  16: suminf.    1.17660 (4) obj. -13.6164 iterations 5
Cbc0038I Pass  17: suminf.    2.64967 (10) obj. -13.6164 iterations 35
Cbc0038I Pass  18: suminf.    1.75287 (7) obj. -13.6164 iterations 21
Cbc0038I Pass  19: suminf.    2.06550 (6) obj. -13.6164 iterations 10
Cbc0038I Pass  20: suminf.    1.56166 (5) obj. -13.6164 iterations 2
Cbc0038I Pass  21: suminf.    1.65652 (13) obj. -13.6164 iterations 21
Cbc0038I Pass  22: suminf.    1.41190 (15) obj. -13.6164 iterations 8
Cbc0038I Pass  23: suminf.    1.55066 (7) obj. -13.6164 iterations 22
Cbc0038I Pass  24: suminf.    1.16053 (5) obj. -13.6164 iterations 9
Cbc0038I Pass  25: suminf.    1.48037 (7) obj. -13.6164 iterations 8
Cbc0038I Pass  26: suminf.    1.17492 (6) obj. -13.6164 iterations 8
Cbc0038I Pass  27: suminf.    0.88346 (7) obj. -13.6164 iterations 8
Cbc0038I Pass  28: suminf.    1.02903 (5) obj. -13.6164 iterations 14
Cbc0038I Pass  29: suminf.    0.60540 (3) obj. -13.6164 iterations 4
Cbc0038I Pass  30: suminf.    0.69176 (3) obj. -13.6164 iterations 13
Cbc0038I Rounding solution of -11.0325 is better than previous of -11.0157

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 125 rows 71 columns - 2 fixed gives 114, 69 - ok now
Cbc0038I Full problem 181 rows 100 columns, reduced to 114 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of -18.2977
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.83418 (35) obj. -18.2977 iterations 0
Cbc0038I Pass  31: suminf.    2.80558 (9) obj. -18.2977 iterations 45
Cbc0038I Pass  32: suminf.    2.01097 (8) obj. -18.2977 iterations 8
Cbc0038I Pass  33: suminf.    3.10023 (15) obj. -18.2977 iterations 23
Cbc0038I Pass  34: suminf.    3.06560 (15) obj. -18.2977 iterations 2
Cbc0038I Pass  35: suminf.    1.80898 (7) obj. -18.2977 iterations 23
Cbc0038I Pass  36: suminf.    1.38941 (8) obj. -18.2977 iterations 6
Cbc0038I Pass  37: suminf.    1.76893 (6) obj. -18.2977 iterations 11
Cbc0038I Pass  38: suminf.    1.33942 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  39: suminf.    1.14629 (6) obj. -18.2977 iterations 7
Cbc0038I Pass  40: suminf.    1.11974 (7) obj. -18.2977 iterations 6
Cbc0038I Pass  41: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  42: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  43: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  44: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  45: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  46: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  47: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  48: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  49: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  50: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  51: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  52: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  53: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  54: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I Pass  55: suminf.    1.11974 (7) obj. -18.2977 iterations 3
Cbc0038I Pass  56: suminf.    1.78403 (6) obj. -18.2977 iterations 10
Cbc0038I Pass  57: suminf.    1.40027 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  58: suminf.    1.49516 (7) obj. -18.2977 iterations 5
Cbc0038I Pass  59: suminf.    1.35986 (6) obj. -18.2977 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 116 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -11.0325 - took 0.20 seconds
Cbc0012I Integer solution of -11.03247 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -11.646426 found by RINS after 0 iterations and 0 nodes (0.30 seconds)
Cbc0031I 34 added rows had average density of 63.529412
Cbc0013I At root node, 34 cuts changed objective from -37.022659 to -31.896276 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18523 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2029 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 95.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.646426 best solution, best possible -31.896276 (1.58 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 82 rows 48 columns
Cbc0038I Full problem 181 rows 100 columns, reduced to 50 rows 31 columns
Cbc0010I After 152 nodes, 1 on tree, -11.646426 best solution, best possible -31.896055 (2.32 seconds)
Cbc0004I Integer solution of -11.664206 found after 16969 iterations and 212 nodes (2.61 seconds)
Cbc0001I Search completed - best objective -11.664206, took 18000 iterations and 256 nodes (2.69 seconds)
Cbc0032I Strong branching done 2678 times (39610 iterations), fathomed 14 nodes and fixed 95 variables
Cbc0035I Maximum depth 41, 480 variables fixed on reduced cost
Total time (CPU seconds):       2.54   (Wallclock seconds):       2.72

