Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-62) rows, 77 (-26) columns and 433 (-170) elements
Clp1000I sum of infeasibilities 0 - average 0, 69 fixed columns
Coin0506I Presolve 7 (-136) rows, 7 (-70) columns and 24 (-409) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 26004.467
Clp0000I Optimal - objective value 26004.467
Coin0511I After Postsolve, objective 26004.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.27505989 - largest nonzero change 0 ( 0%) - largest zero change 2.6542311e-05
Clp0000I Optimal - objective value 26004.467
Clp0000I Optimal - objective value 26004.467
Clp0000I Optimal - objective value 26004.467
Coin0511I After Postsolve, objective 26004.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26004.46678 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 143 rows, 77 columns (76 integer (76 of which binary)) and 433 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.181%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.90615
Cbc0038I Pass   1: suminf.    0.55219 (2) obj. -25550.4 iterations 21
Cbc0038I Pass   2: suminf.    0.55219 (2) obj. -25550.4 iterations 0
Cbc0038I Solution found of -21211.5
Cbc0038I Relaxing continuous gives -21212
Cbc0038I Rounding solution of -23072 is better than previous of -21212

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 77 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -23072 to -24390.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -24551.8
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.55219 (2) obj. -25550.4 iterations 0
Cbc0038I Pass   4: suminf.    0.55219 (2) obj. -25550.4 iterations 0
Cbc0038I Pass   5: suminf.    0.05972 (1) obj. -24551.8 iterations 11
Cbc0038I Pass   6: suminf.    0.05972 (1) obj. -24551.8 iterations 0
Cbc0038I Pass   7: suminf.    0.75491 (3) obj. -24551.8 iterations 10
Cbc0038I Pass   8: suminf.    0.50000 (1) obj. -24755.3 iterations 10
Cbc0038I Pass   9: suminf.    0.98771 (3) obj. -24551.8 iterations 14
Cbc0038I Pass  10: suminf.    0.56971 (2) obj. -24551.8 iterations 10
Cbc0038I Pass  11: suminf.    0.88889 (2) obj. -24876.1 iterations 2
Cbc0038I Pass  12: suminf.    0.49209 (1) obj. -24551.8 iterations 3
Cbc0038I Pass  13: suminf.    0.27273 (1) obj. -25172.7 iterations 4
Cbc0038I Pass  14: suminf.    0.44722 (2) obj. -24551.8 iterations 5
Cbc0038I Pass  15: suminf.    0.27273 (1) obj. -25172.7 iterations 4
Cbc0038I Pass  16: suminf.    2.63655 (12) obj. -24551.8 iterations 19
Cbc0038I Pass  17: suminf.    0.59694 (2) obj. -24551.8 iterations 13
Cbc0038I Pass  18: suminf.    0.40909 (1) obj. -24818.1 iterations 5
Cbc0038I Pass  19: suminf.    0.47079 (2) obj. -24551.8 iterations 4
Cbc0038I Pass  20: suminf.    0.40909 (1) obj. -24818.1 iterations 3
Cbc0038I Pass  21: suminf.    1.08404 (7) obj. -24551.8 iterations 22
Cbc0038I Pass  22: suminf.    0.61588 (7) obj. -24551.8 iterations 7
Cbc0038I Pass  23: suminf.    0.44828 (1) obj. -24740.4 iterations 12
Cbc0038I Pass  24: suminf.    0.72961 (8) obj. -24551.8 iterations 14
Cbc0038I Pass  25: suminf.    0.36364 (1) obj. -24572 iterations 12
Cbc0038I Pass  26: suminf.    0.35451 (2) obj. -24551.8 iterations 4
Cbc0038I Pass  27: suminf.    0.36364 (1) obj. -24572 iterations 3
Cbc0038I Pass  28: suminf.    1.28209 (9) obj. -24551.8 iterations 9
Cbc0038I Pass  29: suminf.    1.35400 (7) obj. -24551.8 iterations 14
Cbc0038I Pass  30: suminf.    0.71439 (3) obj. -24551.8 iterations 7
Cbc0038I Pass  31: suminf.    0.38032 (1) obj. -24551.8 iterations 12
Cbc0038I Pass  32: suminf.    0.50000 (1) obj. -24926.6 iterations 3
Cbc0038I Rounding solution of -24735.2 is better than previous of -24390.3

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 77 columns, reduced to 24 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -24735.2 to -25228.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -25383.9
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.55219 (2) obj. -25550.4 iterations 0
Cbc0038I Pass  33: suminf.    0.55219 (2) obj. -25550.4 iterations 0
Cbc0038I Pass  34: suminf.    0.36758 (1) obj. -25383.9 iterations 6
Cbc0038I Pass  35: suminf.    0.36758 (1) obj. -25383.9 iterations 0
Cbc0038I Pass  36: suminf.    0.37802 (4) obj. -25383.9 iterations 6
Cbc0038I Pass  37: suminf.    0.36758 (1) obj. -25383.9 iterations 6
Cbc0038I Pass  38: suminf.    0.95489 (6) obj. -25383.9 iterations 17
Cbc0038I Pass  39: suminf.    0.94994 (4) obj. -25383.9 iterations 7
Cbc0038I Pass  40: suminf.    0.55219 (2) obj. -25550.4 iterations 11
Cbc0038I Pass  41: suminf.    0.55219 (2) obj. -25550.4 iterations 0
Cbc0038I Pass  42: suminf.    0.36758 (1) obj. -25383.9 iterations 6
Cbc0038I Pass  43: suminf.    0.36758 (1) obj. -25383.9 iterations 0
Cbc0038I Pass  44: suminf.    0.90753 (5) obj. -25383.9 iterations 10
Cbc0038I Pass  45: suminf.    0.36758 (1) obj. -25383.9 iterations 13
Cbc0038I Pass  46: suminf.    0.87333 (6) obj. -25383.9 iterations 13
Cbc0038I Pass  47: suminf.    0.87333 (6) obj. -25383.9 iterations 9
Cbc0038I Pass  48: suminf.    0.87333 (6) obj. -25383.9 iterations 7
Cbc0038I Pass  49: suminf.    1.06626 (4) obj. -25383.9 iterations 7
Cbc0038I Pass  50: suminf.    2.58734 (8) obj. -25383.9 iterations 15
Cbc0038I Pass  51: suminf.    0.46397 (1) obj. -25383.9 iterations 16
Cbc0038I Pass  52: suminf.    0.34483 (1) obj. -25698.9 iterations 5
Cbc0038I Pass  53: suminf.    0.46397 (1) obj. -25383.9 iterations 5
Cbc0038I Pass  54: suminf.    2.97374 (9) obj. -25383.9 iterations 19
Cbc0038I Pass  55: suminf.    1.44389 (7) obj. -25383.9 iterations 17
Cbc0038I Pass  56: suminf.    0.75842 (6) obj. -25383.9 iterations 9
Cbc0038I Pass  57: suminf.    0.24670 (6) obj. -25383.9 iterations 14
Cbc0038I Pass  58: suminf.    0.24670 (6) obj. -25383.9 iterations 0
Cbc0038I Pass  59: suminf.    0.37984 (6) obj. -25383.9 iterations 16
Cbc0038I Pass  60: suminf.    0.31588 (5) obj. -25383.9 iterations 10
Cbc0038I Pass  61: suminf.    0.39905 (5) obj. -25383.9 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 77 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25228.8 - took 0.02 seconds
Cbc0012I Integer solution of -25228.761 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 143 rows 77 columns, reduced to 7 rows 9 columns
Cbc0031I 8 added rows had average density of 34.375
Cbc0013I At root node, 8 cuts changed objective from -26004.467 to -25706.155 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 29 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 31.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0012I Integer solution of -25370.854 found by DiveCoefficient after 253 iterations and 5 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -25370.854, took 351 iterations and 6 nodes (0.63 seconds)
Cbc0032I Strong branching done 58 times (371 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 55 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.63

