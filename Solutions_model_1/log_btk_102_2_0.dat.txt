Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 150 (-56) rows, 78 (-26) columns and 375 (-134) elements
Clp0000I Optimal - objective value 4895.5565
Coin0511I After Postsolve, objective 4895.5565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4895.556543 - 85 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 150 rows, 78 columns (77 integer (77 of which binary)) and 375 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.217%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 11.739
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -971.669 iterations 67
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -971.669 iterations 0
Cbc0038I Solution found of -814.169
Cbc0038I Relaxing continuous gives -814.169
Cbc0038I Rounding solution of -821.669 is better than previous of -814.169

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 78 columns, reduced to 83 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -821.669 to -3280.83 (0.03 seconds)
Cbc0038I Round again with cutoff of -3441.98
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.05325 (18) obj. -3441.98 iterations 19
Cbc0038I Pass   4: suminf.    0.74646 (10) obj. -3441.98 iterations 26
Cbc0038I Pass   5: suminf.    2.12041 (13) obj. -3441.98 iterations 25
Cbc0038I Pass   6: suminf.    2.12041 (13) obj. -3441.98 iterations 1
Cbc0038I Pass   7: suminf.    2.47701 (17) obj. -3441.98 iterations 16
Cbc0038I Pass   8: suminf.    1.80166 (13) obj. -3441.98 iterations 4
Cbc0038I Pass   9: suminf.    1.41949 (12) obj. -3441.98 iterations 5
Cbc0038I Pass  10: suminf.    4.01641 (20) obj. -3441.98 iterations 16
Cbc0038I Pass  11: suminf.    4.51466 (22) obj. -3441.98 iterations 19
Cbc0038I Pass  12: suminf.    1.50807 (11) obj. -3441.98 iterations 19
Cbc0038I Pass  13: suminf.    1.05912 (8) obj. -3441.98 iterations 5
Cbc0038I Pass  14: suminf.    3.03696 (17) obj. -3441.98 iterations 15
Cbc0038I Pass  15: suminf.    1.51432 (11) obj. -3441.98 iterations 8
Cbc0038I Pass  16: suminf.    2.41113 (22) obj. -3441.98 iterations 17
Cbc0038I Pass  17: suminf.    1.44738 (10) obj. -3441.98 iterations 15
Cbc0038I Pass  18: suminf.    2.52029 (15) obj. -3441.98 iterations 16
Cbc0038I Pass  19: suminf.    1.00855 (10) obj. -3441.98 iterations 7
Cbc0038I Pass  20: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I Pass  21: suminf.    3.06047 (16) obj. -3441.98 iterations 13
Cbc0038I Pass  22: suminf.    1.79153 (11) obj. -3441.98 iterations 7
Cbc0038I Pass  23: suminf.    0.89661 (8) obj. -3441.98 iterations 7
Cbc0038I Pass  24: suminf.    2.55436 (15) obj. -3441.98 iterations 15
Cbc0038I Pass  25: suminf.    1.00855 (10) obj. -3441.98 iterations 8
Cbc0038I Pass  26: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I Pass  27: suminf.    3.06047 (16) obj. -3441.98 iterations 13
Cbc0038I Pass  28: suminf.    1.79153 (11) obj. -3441.98 iterations 7
Cbc0038I Pass  29: suminf.    0.89661 (8) obj. -3441.98 iterations 7
Cbc0038I Pass  30: suminf.    2.55436 (15) obj. -3441.98 iterations 15
Cbc0038I Pass  31: suminf.    1.00855 (10) obj. -3441.98 iterations 8
Cbc0038I Pass  32: suminf.    0.95201 (10) obj. -3441.98 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 78 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -3280.83 - took 0.04 seconds
Cbc0012I Integer solution of -3280.8321 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 150 rows 78 columns, reduced to 82 rows 52 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 15.666667
Cbc0013I At root node, 9 cuts changed objective from -4892.3065 to -3280.8321 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1944 row cuts average 3.2 elements, 25 column cuts (29 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 69 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3280.832099999998, took 324 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

