Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000154737 - average 1.1462e-06, 17 fixed columns
Coin0506I Presolve 99 (-36) rows, 57 (-18) columns and 304 (-108) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 0.26916981 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Coin0511I After Postsolve, objective 39.461775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Coin0511I After Postsolve, objective 39.461775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.46177456 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.10599
Cbc0038I Solution found of 4.76277
Cbc0038I Relaxing continuous gives -5.59728
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 63 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -8.98382
Cbc0038I Pass   1: suminf.    0.61871 (38) obj. -8.98382 iterations 44
Cbc0038I Pass   2: suminf.    2.14761 (7) obj. -8.98382 iterations 43
Cbc0038I Pass   3: suminf.    1.40390 (6) obj. -8.98382 iterations 7
Cbc0038I Pass   4: suminf.    1.34894 (5) obj. -8.98382 iterations 14
Cbc0038I Pass   5: suminf.    1.34894 (5) obj. -8.98382 iterations 0
Cbc0038I Pass   6: suminf.    1.77044 (4) obj. -8.98382 iterations 8
Cbc0038I Pass   7: suminf.    0.91693 (3) obj. -8.98382 iterations 4
Cbc0038I Pass   8: suminf.    0.81374 (4) obj. -8.98382 iterations 3
Cbc0038I Pass   9: suminf.    1.75624 (4) obj. -8.98382 iterations 16
Cbc0038I Pass  10: suminf.    0.98461 (4) obj. -8.98382 iterations 7
Cbc0038I Pass  11: suminf.    0.60197 (2) obj. -8.98382 iterations 7
Cbc0038I Pass  12: suminf.    0.57483 (3) obj. -8.98382 iterations 1
Cbc0038I Pass  13: suminf.    1.36940 (3) obj. -8.98382 iterations 3
Cbc0038I Pass  14: suminf.    0.63898 (3) obj. -8.98382 iterations 4
Cbc0038I Pass  15: suminf.    1.15901 (4) obj. -8.98382 iterations 3
Cbc0038I Pass  16: suminf.    1.12453 (5) obj. -8.98382 iterations 1
Cbc0038I Pass  17: suminf.    1.90042 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  18: suminf.    2.02743 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  19: suminf.    2.02743 (6) obj. -8.98382 iterations 0
Cbc0038I Pass  20: suminf.    1.41875 (5) obj. -8.98382 iterations 12
Cbc0038I Pass  21: suminf.    0.96052 (6) obj. -8.98382 iterations 1
Cbc0038I Pass  22: suminf.    0.80238 (7) obj. -8.98382 iterations 4
Cbc0038I Pass  23: suminf.    1.95517 (5) obj. -8.98382 iterations 13
Cbc0038I Pass  24: suminf.    1.60956 (4) obj. -8.98382 iterations 4
Cbc0038I Pass  25: suminf.    1.20224 (5) obj. -8.98382 iterations 1
Cbc0038I Pass  26: suminf.    1.20224 (5) obj. -8.98382 iterations 0
Cbc0038I Pass  27: suminf.    1.90042 (6) obj. -8.98382 iterations 7
Cbc0038I Pass  28: suminf.    2.02743 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  29: suminf.    2.02743 (6) obj. -8.98382 iterations 0
Cbc0038I Pass  30: suminf.    1.41875 (5) obj. -8.98382 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 83 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.59728 - took 0.07 seconds
Cbc0012I Integer solution of -5.59728 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 63 rows 38 columns
Cbc0031I 22 added rows had average density of 55.545455
Cbc0013I At root node, 22 cuts changed objective from -39.461775 to -32.008188 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9887 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1535 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.59728 best solution, best possible -32.008188 (0.83 seconds)
Cbc0012I Integer solution of -5.63534 found by rounding after 7348 iterations and 31 nodes (1.02 seconds)
Cbc0016I Integer solution of -6.02272 found by strong branching after 7355 iterations and 32 nodes (1.02 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 57 rows 35 columns
Cbc0038I Full problem 134 rows 75 columns, reduced to 13 rows 14 columns
Cbc0001I Search completed - best objective -6.022720000000007, took 9146 iterations and 96 nodes (1.20 seconds)
Cbc0032I Strong branching done 1040 times (18422 iterations), fathomed 5 nodes and fixed 17 variables
Cbc0035I Maximum depth 41, 360 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.21

