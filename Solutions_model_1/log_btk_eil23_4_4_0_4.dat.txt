Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 18 (-31) rows, 11 (-14) columns and 44 (-91) elements
Clp0000I Optimal - objective value 9378.1
Coin0511I After Postsolve, objective 9378.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9378.1 - 6 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 11 columns (10 integer (10 of which binary)) and 44 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.881%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.427019
Cbc0038I Solution found of -5956
Cbc0038I Relaxing continuous gives -5956
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6222.59
Cbc0038I Pass   1: suminf.    0.04285 (1) obj. -6222.59 iterations 3
Cbc0038I Pass   2: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass   3: suminf.    0.34918 (1) obj. -6222.59 iterations 6
Cbc0038I Pass   4: suminf.    0.34918 (1) obj. -6222.59 iterations 1
Cbc0038I Pass   5: suminf.    0.44099 (1) obj. -7528.14 iterations 1
Cbc0038I Pass   6: suminf.    0.44099 (1) obj. -7528.14 iterations 0
Cbc0038I Pass   7: suminf.    0.49534 (1) obj. -7290.98 iterations 3
Cbc0038I Pass   8: suminf.    0.49534 (1) obj. -7290.98 iterations 1
Cbc0038I Pass   9: suminf.    0.33295 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  10: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  11: suminf.    0.30901 (1) obj. -6356.36 iterations 1
Cbc0038I Pass  12: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  13: suminf.    0.75687 (2) obj. -6222.59 iterations 3
Cbc0038I Pass  14: suminf.    0.75687 (2) obj. -6222.59 iterations 0
Cbc0038I Pass  15: suminf.    0.44099 (1) obj. -7458.14 iterations 1
Cbc0038I Pass  16: suminf.    0.36043 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  17: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  18: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  19: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  20: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  21: suminf.    0.75687 (2) obj. -6222.59 iterations 2
Cbc0038I Pass  22: suminf.    0.00797 (1) obj. -6222.59 iterations 4
Cbc0038I Pass  23: suminf.    0.00797 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  24: suminf.    0.34161 (1) obj. -8298.53 iterations 1
Cbc0038I Pass  25: suminf.    0.33051 (1) obj. -6222.59 iterations 5
Cbc0038I Pass  26: suminf.    0.21584 (1) obj. -6936.05 iterations 2
Cbc0038I Pass  27: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  28: suminf.    0.16149 (1) obj. -7148.92 iterations 3
Cbc0038I Pass  29: suminf.    0.31491 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  30: suminf.    0.16149 (1) obj. -7148.92 iterations 1
Cbc0038I Rounding solution of -6173 is better than previous of -5956

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6700.65
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.11968 (1) obj. -6700.65 iterations 0
Cbc0038I Pass  31: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass  32: suminf.    0.42702 (1) obj. -8612.91 iterations 2
Cbc0038I Pass  33: suminf.    0.11968 (1) obj. -6700.65 iterations 2
Cbc0038I Pass  34: suminf.    0.42601 (1) obj. -6700.65 iterations 5
Cbc0038I Pass  35: suminf.    0.44099 (1) obj. -7528.14 iterations 1
Cbc0038I Pass  36: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  37: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  38: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  39: suminf.    0.11968 (1) obj. -6700.65 iterations 4
Cbc0038I Pass  40: suminf.    0.11968 (1) obj. -6700.65 iterations 0
Cbc0038I Pass  41: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass  42: suminf.    1.79775 (5) obj. -6700.65 iterations 5
Cbc0038I Pass  43: suminf.    0.49121 (2) obj. -6700.65 iterations 1
Cbc0038I Pass  44: suminf.    0.16149 (1) obj. -7148.92 iterations 2
Cbc0038I Pass  45: suminf.    0.23573 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  46: suminf.    0.19255 (1) obj. -7060.4 iterations 2
Cbc0038I Pass  47: suminf.    0.25213 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  48: suminf.    0.19255 (1) obj. -7060.4 iterations 1
Cbc0038I Pass  49: suminf.    0.54033 (3) obj. -6700.65 iterations 4
Cbc0038I Pass  50: suminf.    0.24689 (1) obj. -6841.82 iterations 3
Cbc0038I Pass  51: suminf.    0.26958 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  52: suminf.    0.43323 (1) obj. -7776.44 iterations 2
Cbc0038I Pass  53: suminf.    0.43323 (1) obj. -7776.44 iterations 0
Cbc0038I Pass  54: suminf.    0.39387 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  55: suminf.    2.05372 (6) obj. -6700.65 iterations 8
Cbc0038I Pass  56: suminf.    1.00645 (4) obj. -6700.65 iterations 2
Cbc0038I Pass  57: suminf.    0.41010 (1) obj. -6700.65 iterations 4
Cbc0038I Pass  58: suminf.    0.37888 (1) obj. -8013.6 iterations 1
Cbc0038I Pass  59: suminf.    0.24689 (1) obj. -6841.82 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6173 - took 0.01 seconds
Cbc0012I Integer solution of -6173 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -6221 found by DiveCoefficient after 1 iterations and 0 nodes (0.01 seconds)
Cbc0013I At root node, 0 cuts changed objective from -8612.9099 to -6221 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6221, took 1 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

