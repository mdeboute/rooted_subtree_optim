Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 65 (-40) rows, 37 (-16) columns and 198 (-105) elements
Clp1000I sum of infeasibilities 2.41463e-05 - average 3.71482e-07, 4 fixed columns
Coin0506I Presolve 56 (-9) rows, 32 (-5) columns and 170 (-28) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Coin0511I After Postsolve, objective 101.45453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Clp0000I Optimal - objective value 101.45453
Coin0511I After Postsolve, objective 101.45453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.4545251 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 37 columns (36 integer (36 of which binary)) and 198 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.270%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.33151
Cbc0038I Pass   1: suminf.    0.12685 (2) obj. -84.4648 iterations 17
Cbc0038I Pass   2: suminf.    0.08696 (1) obj. -84.2695 iterations 3
Cbc0038I Solution found of -70.5278
Cbc0038I Relaxing continuous gives -70.5278
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -70.5278 to -85.5782 (0.01 seconds)
Cbc0038I Round again with cutoff of -87.166
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.22165 (4) obj. -87.166 iterations 1
Cbc0038I Pass   4: suminf.    0.13078 (2) obj. -87.166 iterations 5
Cbc0038I Pass   5: suminf.    0.55003 (3) obj. -87.166 iterations 5
Cbc0038I Pass   6: suminf.    1.82756 (10) obj. -87.166 iterations 11
Cbc0038I Pass   7: suminf.    1.45225 (5) obj. -87.166 iterations 4
Cbc0038I Pass   8: suminf.    0.91235 (3) obj. -87.166 iterations 7
Cbc0038I Pass   9: suminf.    0.67544 (2) obj. -87.166 iterations 4
Cbc0038I Pass  10: suminf.    0.05819 (1) obj. -87.166 iterations 4
Cbc0038I Pass  11: suminf.    0.26355 (1) obj. -87.166 iterations 1
Cbc0038I Pass  12: suminf.    1.69028 (8) obj. -87.166 iterations 11
Cbc0038I Pass  13: suminf.    0.77682 (4) obj. -87.166 iterations 4
Cbc0038I Pass  14: suminf.    0.42465 (4) obj. -87.166 iterations 5
Cbc0038I Pass  15: suminf.    0.49304 (2) obj. -87.166 iterations 8
Cbc0038I Pass  16: suminf.    0.05819 (1) obj. -87.166 iterations 3
Cbc0038I Pass  17: suminf.    0.26355 (1) obj. -87.166 iterations 1
Cbc0038I Pass  18: suminf.    0.95374 (8) obj. -87.166 iterations 12
Cbc0038I Pass  19: suminf.    0.38106 (4) obj. -87.166 iterations 9
Cbc0038I Pass  20: suminf.    0.62154 (4) obj. -87.166 iterations 5
Cbc0038I Pass  21: suminf.    0.36324 (2) obj. -87.166 iterations 3
Cbc0038I Pass  22: suminf.    0.45309 (2) obj. -87.166 iterations 1
Cbc0038I Pass  23: suminf.    0.64312 (4) obj. -87.166 iterations 5
Cbc0038I Pass  24: suminf.    0.42690 (4) obj. -87.166 iterations 4
Cbc0038I Pass  25: suminf.    0.53041 (3) obj. -87.166 iterations 4
Cbc0038I Pass  26: suminf.    3.05119 (11) obj. -87.166 iterations 12
Cbc0038I Pass  27: suminf.    0.79098 (4) obj. -87.166 iterations 9
Cbc0038I Pass  28: suminf.    0.64903 (3) obj. -87.166 iterations 3
Cbc0038I Pass  29: suminf.    0.64903 (3) obj. -87.166 iterations 2
Cbc0038I Pass  30: suminf.    0.97134 (4) obj. -87.166 iterations 6
Cbc0038I Pass  31: suminf.    0.34216 (3) obj. -87.166 iterations 5
Cbc0038I Pass  32: suminf.    0.64903 (3) obj. -87.166 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -85.5782 to -88.0424 (0.02 seconds)
Cbc0038I Round again with cutoff of -90.7249
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.41297 (4) obj. -90.7249 iterations 1
Cbc0038I Pass  33: suminf.    0.22845 (3) obj. -90.7249 iterations 7
Cbc0038I Pass  34: suminf.    0.51336 (3) obj. -90.7249 iterations 4
Cbc0038I Pass  35: suminf.    2.53719 (11) obj. -90.7249 iterations 13
Cbc0038I Pass  36: suminf.    0.76255 (6) obj. -90.7249 iterations 10
Cbc0038I Pass  37: suminf.    2.02889 (9) obj. -90.7249 iterations 14
Cbc0038I Pass  38: suminf.    0.73642 (6) obj. -90.7249 iterations 2
Cbc0038I Pass  39: suminf.    0.64038 (5) obj. -90.7249 iterations 1
Cbc0038I Pass  40: suminf.    0.48180 (3) obj. -90.7249 iterations 16
Cbc0038I Pass  41: suminf.    0.28224 (2) obj. -90.7249 iterations 2
Cbc0038I Pass  42: suminf.    0.34587 (2) obj. -90.7249 iterations 3
Cbc0038I Pass  43: suminf.    2.59641 (10) obj. -90.7249 iterations 18
Cbc0038I Pass  44: suminf.    0.89525 (4) obj. -90.7249 iterations 10
Cbc0038I Pass  45: suminf.    1.59299 (7) obj. -90.7249 iterations 11
Cbc0038I Pass  46: suminf.    1.17943 (6) obj. -90.7249 iterations 1
Cbc0038I Pass  47: suminf.    0.94495 (6) obj. -90.7249 iterations 3
Cbc0038I Pass  48: suminf.    2.81256 (8) obj. -90.7249 iterations 13
Cbc0038I Pass  49: suminf.    2.16018 (8) obj. -90.7249 iterations 7
Cbc0038I Pass  50: suminf.    1.00481 (6) obj. -90.7249 iterations 7
Cbc0038I Pass  51: suminf.    1.00481 (6) obj. -90.7249 iterations 0
Cbc0038I Pass  52: suminf.    0.97408 (6) obj. -90.7249 iterations 9
Cbc0038I Pass  53: suminf.    0.67982 (6) obj. -90.7249 iterations 3
Cbc0038I Pass  54: suminf.    1.10892 (5) obj. -90.7249 iterations 9
Cbc0038I Pass  55: suminf.    0.90547 (4) obj. -90.7249 iterations 4
Cbc0038I Pass  56: suminf.    0.50429 (3) obj. -90.7249 iterations 6
Cbc0038I Pass  57: suminf.    1.08282 (3) obj. -90.7249 iterations 6
Cbc0038I Pass  58: suminf.    0.75848 (4) obj. -90.7249 iterations 5
Cbc0038I Pass  59: suminf.    2.75751 (10) obj. -90.7249 iterations 11
Cbc0038I Pass  60: suminf.    0.60715 (4) obj. -90.7249 iterations 11
Cbc0038I Pass  61: suminf.    0.42168 (3) obj. -90.7249 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 37 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -88.0424 - took 0.02 seconds
Cbc0012I Integer solution of -88.04243 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 65 rows 37 columns, reduced to 29 rows 18 columns
Cbc0031I 9 added rows had average density of 22.444444
Cbc0013I At root node, 9 cuts changed objective from -101.45453 to -89.723418 in 73 passes
Cbc0014I Cut generator 0 (Probing) - 217 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 172 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -88.04243, took 619 iterations and 6 nodes (0.10 seconds)
Cbc0032I Strong branching done 44 times (267 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

