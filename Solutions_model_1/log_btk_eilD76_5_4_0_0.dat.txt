Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 1.80743e-06 - average 1.30031e-08, 7 fixed columns
Coin0506I Presolve 127 (-12) rows, 69 (-7) columns and 384 (-38) elements
Clp0029I End of values pass after 69 iterations
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.6978201 - largest nonzero change 0 ( 0%) - largest zero change 1.4771173e-05
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Coin0511I After Postsolve, objective 70.14613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Coin0511I After Postsolve, objective 70.14613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.14613035 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 11.3242
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -12.2359 iterations 71
Cbc0038I Solution found of -12.2359
Cbc0038I Relaxing continuous gives -12.2359
Cbc0038I Rounding solution of -19.2346 is better than previous of -12.2359

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -19.2346 to -34.0615 (0.06 seconds)
Cbc0038I Round again with cutoff of -37.6701
Cbc0038I Pass   2: suminf.    2.84987 (37) obj. -37.6701 iterations 41
Cbc0038I Pass   3: suminf.    2.71065 (47) obj. -37.6701 iterations 16
Cbc0038I Pass   4: suminf.    0.74639 (5) obj. -37.6701 iterations 57
Cbc0038I Pass   5: suminf.    0.53381 (4) obj. -37.6701 iterations 6
Cbc0038I Pass   6: suminf.    1.41032 (6) obj. -37.6701 iterations 11
Cbc0038I Pass   7: suminf.    1.35560 (8) obj. -37.6701 iterations 3
Cbc0038I Pass   8: suminf.    2.15531 (7) obj. -37.6701 iterations 14
Cbc0038I Pass   9: suminf.    2.01082 (6) obj. -37.6701 iterations 4
Cbc0038I Pass  10: suminf.    0.97225 (5) obj. -37.6701 iterations 11
Cbc0038I Pass  11: suminf.    0.95563 (5) obj. -37.6701 iterations 2
Cbc0038I Pass  12: suminf.    2.52471 (8) obj. -37.6701 iterations 9
Cbc0038I Pass  13: suminf.    3.35563 (9) obj. -37.6701 iterations 25
Cbc0038I Pass  14: suminf.    2.18343 (7) obj. -37.6701 iterations 8
Cbc0038I Pass  15: suminf.    2.05550 (8) obj. -37.6701 iterations 3
Cbc0038I Pass  16: suminf.    2.08644 (7) obj. -37.6701 iterations 13
Cbc0038I Pass  17: suminf.    1.96515 (6) obj. -37.6701 iterations 5
Cbc0038I Pass  18: suminf.    1.87621 (7) obj. -37.6701 iterations 13
Cbc0038I Pass  19: suminf.    2.33089 (8) obj. -37.6701 iterations 10
Cbc0038I Pass  20: suminf.    1.98955 (7) obj. -37.6701 iterations 6
Cbc0038I Pass  21: suminf.    1.68605 (8) obj. -37.6701 iterations 6
Cbc0038I Pass  22: suminf.    1.19247 (6) obj. -37.6701 iterations 6
Cbc0038I Pass  23: suminf.    1.09459 (5) obj. -37.6701 iterations 1
Cbc0038I Pass  24: suminf.    1.98955 (7) obj. -37.6701 iterations 11
Cbc0038I Pass  25: suminf.    3.21142 (10) obj. -37.6701 iterations 22
Cbc0038I Pass  26: suminf.    2.57555 (11) obj. -37.6701 iterations 7
Cbc0038I Pass  27: suminf.    2.79864 (8) obj. -37.6701 iterations 13
Cbc0038I Pass  28: suminf.    2.54221 (8) obj. -37.6701 iterations 6
Cbc0038I Pass  29: suminf.    1.62518 (9) obj. -37.6701 iterations 12
Cbc0038I Pass  30: suminf.    1.62518 (9) obj. -37.6701 iterations 0
Cbc0038I Pass  31: suminf.    2.76081 (10) obj. -37.6701 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 126 rows 69 columns - 1 fixed gives 116, 68 - ok now
Cbc0038I Full problem 139 rows 76 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -34.0615 to -35.0532 (0.13 seconds)
Cbc0038I Round again with cutoff of -44.1653
Cbc0038I Pass  31: suminf.    4.36943 (37) obj. -44.1653 iterations 0
Cbc0038I Pass  32: suminf.    4.15598 (47) obj. -44.1653 iterations 16
Cbc0038I Pass  33: suminf.    2.16981 (9) obj. -44.1653 iterations 52
Cbc0038I Pass  34: suminf.    2.00825 (10) obj. -44.1653 iterations 4
Cbc0038I Pass  35: suminf.    2.98313 (8) obj. -44.1653 iterations 17
Cbc0038I Pass  36: suminf.    2.13436 (9) obj. -44.1653 iterations 5
Cbc0038I Pass  37: suminf.    2.08814 (8) obj. -44.1653 iterations 3
Cbc0038I Pass  38: suminf.    3.24479 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  39: suminf.    2.74794 (9) obj. -44.1653 iterations 4
Cbc0038I Pass  40: suminf.    2.91804 (8) obj. -44.1653 iterations 13
Cbc0038I Pass  41: suminf.    2.32543 (8) obj. -44.1653 iterations 5
Cbc0038I Pass  42: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  43: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  44: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  45: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  46: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  47: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  48: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  49: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  50: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  51: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  52: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  53: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  54: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  55: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  56: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  57: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  58: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  59: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  60: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 118 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -35.0532 - took 0.16 seconds
Cbc0012I Integer solution of -35.053226 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 56 columns
Cbc0031I 29 added rows had average density of 68.724138
Cbc0013I At root node, 29 cuts changed objective from -70.14613 to -60.723619 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14058 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1529 row cuts average 74.6 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.053226 best solution, best possible -60.723619 (1.19 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 3 rows 5 columns
Cbc0016I Integer solution of -35.157226 found by strong branching after 11151 iterations and 49 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -35.15722599999999, took 12343 iterations and 82 nodes (1.58 seconds)
Cbc0032I Strong branching done 880 times (18088 iterations), fathomed 7 nodes and fixed 49 variables
Cbc0035I Maximum depth 22, 167 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       1.59

