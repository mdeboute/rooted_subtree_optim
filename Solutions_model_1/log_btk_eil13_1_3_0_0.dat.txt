Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 12 (-3) columns and 48 (-27) elements
Clp1000I sum of infeasibilities 4.52249e-07 - average 2.82656e-08, 1 fixed columns
Coin0506I Presolve 15 (-1) rows, 11 (-1) columns and 44 (-4) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 41.260734
Clp0000I Optimal - objective value 41.260734
Coin0511I After Postsolve, objective 41.260734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.260734
Clp0000I Optimal - objective value 41.260734
Clp0000I Optimal - objective value 41.260734
Coin0511I After Postsolve, objective 41.260734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.26073434 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 12 columns (11 integer (11 of which binary)) and 47 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.65643
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -22.3583 iterations 6
Cbc0038I Solution found of -22.3583
Cbc0038I Relaxing continuous gives -22.3583
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 12 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.2486
Cbc0038I Pass   2: suminf.    0.08795 (1) obj. -24.2486 iterations 1
Cbc0038I Pass   3: suminf.    0.45069 (2) obj. -24.2486 iterations 2
Cbc0038I Pass   4: suminf.    0.08795 (1) obj. -24.2486 iterations 2
Cbc0038I Pass   5: suminf.    0.58540 (3) obj. -24.2486 iterations 3
Cbc0038I Pass   6: suminf.    0.42915 (2) obj. -24.2486 iterations 2
Cbc0038I Pass   7: suminf.    1.37329 (5) obj. -24.2486 iterations 7
Cbc0038I Pass   8: suminf.    1.18770 (4) obj. -24.2486 iterations 2
Cbc0038I Pass   9: suminf.    1.10635 (4) obj. -24.2486 iterations 2
Cbc0038I Pass  10: suminf.    0.35113 (3) obj. -24.2486 iterations 2
Cbc0038I Pass  11: suminf.    0.08795 (1) obj. -24.2486 iterations 4
Cbc0038I Pass  12: suminf.    0.45069 (2) obj. -24.2486 iterations 2
Cbc0038I Pass  13: suminf.    0.08795 (1) obj. -24.2486 iterations 2
Cbc0038I Pass  14: suminf.    1.42105 (4) obj. -24.2486 iterations 3
Cbc0038I Pass  15: suminf.    0.39236 (1) obj. -24.2486 iterations 2
Cbc0038I Pass  16: suminf.    0.22383 (2) obj. -24.2486 iterations 3
Cbc0038I Pass  17: suminf.    0.08795 (1) obj. -24.2486 iterations 3
Cbc0038I Pass  18: suminf.    0.35113 (3) obj. -24.2486 iterations 4
Cbc0038I Pass  19: suminf.    0.35113 (3) obj. -24.2486 iterations 0
Cbc0038I Pass  20: suminf.    0.08795 (1) obj. -24.2486 iterations 4
Cbc0038I Pass  21: suminf.    0.45069 (2) obj. -24.2486 iterations 2
Cbc0038I Pass  22: suminf.    1.19092 (4) obj. -24.2486 iterations 2
Cbc0038I Pass  23: suminf.    0.97016 (3) obj. -24.2486 iterations 1
Cbc0038I Pass  24: suminf.    2.07148 (6) obj. -24.2486 iterations 4
Cbc0038I Pass  25: suminf.    0.37806 (3) obj. -24.2486 iterations 3
Cbc0038I Pass  26: suminf.    0.37806 (3) obj. -24.2486 iterations 0
Cbc0038I Pass  27: suminf.    0.50139 (2) obj. -24.2486 iterations 4
Cbc0038I Pass  28: suminf.    0.50139 (2) obj. -24.2486 iterations 0
Cbc0038I Pass  29: suminf.    0.27778 (1) obj. -24.2486 iterations 4
Cbc0038I Pass  30: suminf.    0.31325 (1) obj. -24.2486 iterations 1
Cbc0038I Pass  31: suminf.    0.42389 (3) obj. -24.2486 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 12 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -22.3583 to -23.3853 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.6511
Cbc0038I Pass  31: suminf.    0.24626 (1) obj. -27.6511 iterations 0
Cbc0038I Pass  32: suminf.    0.45652 (2) obj. -27.6511 iterations 2
Cbc0038I Pass  33: suminf.    0.24626 (1) obj. -27.6511 iterations 2
Cbc0038I Pass  34: suminf.    0.37573 (2) obj. -27.6511 iterations 1
Cbc0038I Pass  35: suminf.    0.71348 (3) obj. -27.6511 iterations 6
Cbc0038I Pass  36: suminf.    0.43407 (2) obj. -27.6511 iterations 2
Cbc0038I Pass  37: suminf.    0.43407 (2) obj. -27.6511 iterations 0
Cbc0038I Pass  38: suminf.    0.17213 (2) obj. -27.6511 iterations 2
Cbc0038I Pass  39: suminf.    0.17213 (2) obj. -27.6511 iterations 0
Cbc0038I Pass  40: suminf.    1.66691 (5) obj. -27.6511 iterations 3
Cbc0038I Pass  41: suminf.    1.06331 (4) obj. -27.6511 iterations 1
Cbc0038I Pass  42: suminf.    0.72254 (2) obj. -27.6511 iterations 7
Cbc0038I Pass  43: suminf.    0.72254 (2) obj. -27.6511 iterations 0
Cbc0038I Pass  44: suminf.    0.31207 (3) obj. -27.6511 iterations 3
Cbc0038I Pass  45: suminf.    0.31207 (3) obj. -27.6511 iterations 0
Cbc0038I Pass  46: suminf.    0.31207 (3) obj. -27.6511 iterations 0
Cbc0038I Pass  47: suminf.    0.31207 (3) obj. -27.6511 iterations 0
Cbc0038I Pass  48: suminf.    1.40276 (5) obj. -27.6511 iterations 2
Cbc0038I Pass  49: suminf.    0.76059 (4) obj. -27.6511 iterations 1
Cbc0038I Pass  50: suminf.    0.72254 (2) obj. -27.6511 iterations 3
Cbc0038I Pass  51: suminf.    0.72254 (2) obj. -27.6511 iterations 0
Cbc0038I Pass  52: suminf.    1.61395 (5) obj. -27.6511 iterations 7
Cbc0038I Pass  53: suminf.    0.43407 (2) obj. -27.6511 iterations 4
Cbc0038I Pass  54: suminf.    0.24626 (1) obj. -27.6511 iterations 2
Cbc0038I Pass  55: suminf.    0.24626 (1) obj. -27.6511 iterations 0
Cbc0038I Pass  56: suminf.    0.45652 (2) obj. -27.6511 iterations 2
Cbc0038I Pass  57: suminf.    1.02661 (4) obj. -27.6511 iterations 2
Cbc0038I Pass  58: suminf.    0.72369 (3) obj. -27.6511 iterations 1
Cbc0038I Pass  59: suminf.    1.54112 (6) obj. -27.6511 iterations 3
Cbc0038I Pass  60: suminf.    0.72369 (3) obj. -27.6511 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 12 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -23.3853 - took 0.01 seconds
Cbc0012I Integer solution of -23.3853 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 15 rows 12 columns, reduced to 10 rows 8 columns
Cbc0031I 5 added rows had average density of 7.4
Cbc0013I At root node, 5 cuts changed objective from -41.260734 to -23.716766 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 171 row cuts average 3.5 elements, 4 column cuts (4 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 319 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23.3853, took 807 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 6 times (16 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

