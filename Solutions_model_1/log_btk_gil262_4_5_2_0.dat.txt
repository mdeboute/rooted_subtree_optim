Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 1.2766e-05 - average 2.52791e-08, 80 fixed columns
Coin0506I Presolve 348 (-157) rows, 182 (-80) columns and 1033 (-469) elements
Clp0029I End of values pass after 182 iterations
Clp0014I Perturbing problem by 0.001% of 2.0721526 - largest nonzero change 0 ( 0%) - largest zero change 2.9278563e-05
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Coin0511I After Postsolve, objective 154.14662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Clp0000I Optimal - objective value 154.14662
Coin0511I After Postsolve, objective 154.14662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.1466205 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 77 integers unsatisfied sum - 12.9343
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.18408 iterations 176
Cbc0038I Solution found of 3.18408
Cbc0038I Relaxing continuous gives 3.18408
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 145 rows 78 columns
Cbc0038I Mini branch and bound improved solution from 3.18408 to -67.7341 (0.15 seconds)
Cbc0038I Round again with cutoff of -76.3755
Cbc0038I Pass   2: suminf.    2.24555 (13) obj. -76.3755 iterations 34
Cbc0038I Pass   3: suminf.    2.00788 (7) obj. -76.3755 iterations 30
Cbc0038I Pass   4: suminf.    1.72590 (8) obj. -76.3755 iterations 10
Cbc0038I Pass   5: suminf.    1.31791 (6) obj. -76.3755 iterations 5
Cbc0038I Pass   6: suminf.    1.97240 (5) obj. -76.3755 iterations 10
Cbc0038I Pass   7: suminf.    1.47491 (5) obj. -76.3755 iterations 2
Cbc0038I Pass   8: suminf.    1.42650 (6) obj. -76.3755 iterations 2
Cbc0038I Pass   9: suminf.    2.68561 (6) obj. -76.3755 iterations 6
Cbc0038I Pass  10: suminf.    1.86029 (5) obj. -76.3755 iterations 5
Cbc0038I Pass  11: suminf.    1.46081 (5) obj. -76.3755 iterations 8
Cbc0038I Pass  12: suminf.    6.16875 (16) obj. -76.3755 iterations 57
Cbc0038I Pass  13: suminf.    3.58438 (15) obj. -76.3755 iterations 24
Cbc0038I Pass  14: suminf.    1.05793 (3) obj. -76.3755 iterations 29
Cbc0038I Pass  15: suminf.    0.96655 (4) obj. -76.3755 iterations 5
Cbc0038I Pass  16: suminf.    1.21702 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  17: suminf.    1.14802 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  18: suminf.    1.97864 (5) obj. -76.3755 iterations 20
Cbc0038I Pass  19: suminf.    1.62779 (5) obj. -76.3755 iterations 4
Cbc0038I Pass  20: suminf.    1.57844 (6) obj. -76.3755 iterations 2
Cbc0038I Pass  21: suminf.    2.43356 (6) obj. -76.3755 iterations 22
Cbc0038I Pass  22: suminf.    2.38851 (6) obj. -76.3755 iterations 12
Cbc0038I Pass  23: suminf.    1.03448 (4) obj. -76.3755 iterations 11
Cbc0038I Pass  24: suminf.    0.99422 (4) obj. -76.3755 iterations 2
Cbc0038I Pass  25: suminf.    2.21553 (6) obj. -76.3755 iterations 16
Cbc0038I Pass  26: suminf.    1.06543 (3) obj. -76.3755 iterations 7
Cbc0038I Pass  27: suminf.    4.59266 (15) obj. -76.3755 iterations 50
Cbc0038I Pass  28: suminf.    1.60029 (7) obj. -76.3755 iterations 29
Cbc0038I Pass  29: suminf.    1.40918 (7) obj. -76.3755 iterations 8
Cbc0038I Pass  30: suminf.    1.88414 (6) obj. -76.3755 iterations 31
Cbc0038I Pass  31: suminf.    1.32590 (5) obj. -76.3755 iterations 5
Cbc0038I Rounding solution of -78.1641 is better than previous of -67.7341

Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 187 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -78.1641 to -82.2779 (0.33 seconds)
Cbc0038I Round again with cutoff of -96.6517
Cbc0038I Pass  31: suminf.    3.25184 (15) obj. -96.6517 iterations 6
Cbc0038I Pass  32: suminf.    2.83452 (11) obj. -96.6517 iterations 28
Cbc0038I Pass  33: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  34: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  35: suminf.    1.38652 (9) obj. -96.6517 iterations 14
Cbc0038I Pass  36: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  37: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  38: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  39: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  40: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  41: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  42: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  43: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  44: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  45: suminf.    3.28324 (12) obj. -96.6517 iterations 55
Cbc0038I Pass  46: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  47: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  48: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  49: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  50: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  51: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  52: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  53: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I Pass  54: suminf.    2.83452 (11) obj. -96.6517 iterations 0
Cbc0038I Pass  55: suminf.    2.80686 (11) obj. -96.6517 iterations 26
Cbc0038I Pass  56: suminf.    1.38652 (9) obj. -96.6517 iterations 15
Cbc0038I Pass  57: suminf.    3.01466 (9) obj. -96.6517 iterations 26
Cbc0038I Pass  58: suminf.    2.52668 (9) obj. -96.6517 iterations 18
Cbc0038I Pass  59: suminf.    3.28324 (12) obj. -96.6517 iterations 54
Cbc0038I Pass  60: suminf.    2.83452 (11) obj. -96.6517 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 176 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 158 rows 86 columns
Cbc0038I Mini branch and bound did not improve solution (0.52 seconds)
Cbc0038I After 0.52 seconds - Feasibility pump exiting with objective of -82.2779 - took 0.48 seconds
Cbc0012I Integer solution of -82.2779 found by feasibility pump after 0 iterations and 0 nodes (0.52 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 149 rows 81 columns
Cbc0031I 38 added rows had average density of 210.60526
Cbc0013I At root node, 38 cuts changed objective from -154.14662 to -138.60292 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35709 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3531 row cuts average 257.4 elements, 0 column cuts (0 active)  in 1.170 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 6.2 elements, 0 column cuts (0 active)  in 1.339 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 255.1 elements, 0 column cuts (0 active)  in 0.466 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -82.2779 best solution, best possible -138.60292 (13.35 seconds)
Cbc0010I After 3 nodes, 4 on tree, -82.2779 best solution, best possible -138.60292 (14.09 seconds)
Cbc0010I After 7 nodes, 8 on tree, -82.2779 best solution, best possible -138.60292 (14.84 seconds)
Cbc0010I After 17 nodes, 10 on tree, -82.2779 best solution, best possible -138.60292 (15.56 seconds)
Cbc0010I After 30 nodes, 17 on tree, -82.2779 best solution, best possible -138.60292 (16.29 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 145 rows 83 columns
Cbc0012I Integer solution of -86.03649 found by RINS after 21308 iterations and 41 nodes (16.81 seconds)
Cbc0010I After 48 nodes, 13 on tree, -86.03649 best solution, best possible -138.60292 (16.99 seconds)
Cbc0010I After 78 nodes, 13 on tree, -86.03649 best solution, best possible -138.60292 (17.72 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 192 rows 103 columns
Cbc0010I After 104 nodes, 14 on tree, -86.03649 best solution, best possible -138.60292 (18.43 seconds)
Cbc0010I After 130 nodes, 20 on tree, -86.03649 best solution, best possible -138.60292 (19.14 seconds)
Cbc0010I After 171 nodes, 17 on tree, -86.03649 best solution, best possible -138.60292 (19.87 seconds)
Cbc0010I After 222 nodes, 16 on tree, -86.03649 best solution, best possible -138.60292 (20.59 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 19 rows 18 columns
Cbc0010I After 294 nodes, 16 on tree, -86.03649 best solution, best possible -138.60292 (21.29 seconds)
Cbc0012I Integer solution of -86.57338 found by rounding after 35652 iterations and 310 nodes (21.45 seconds)
Cbc0004I Integer solution of -86.57357 found after 36400 iterations and 333 nodes (21.57 seconds)
Cbc0010I After 385 nodes, 17 on tree, -86.57357 best solution, best possible -138.60292 (21.99 seconds)
Cbc0010I After 489 nodes, 15 on tree, -86.57357 best solution, best possible -138.60292 (22.73 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 144 rows 77 columns
Cbc0010I After 534 nodes, 26 on tree, -86.57357 best solution, best possible -138.60292 (23.44 seconds)
Cbc0012I Integer solution of -86.97554 found by rounding after 43473 iterations and 599 nodes (23.80 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 1 rows 2 columns
Cbc0004I Integer solution of -87.29056 found after 44402 iterations and 627 nodes (24.01 seconds)
Cbc0001I Search completed - best objective -87.29056000000003, took 45530 iterations and 636 nodes (24.10 seconds)
Cbc0032I Strong branching done 5468 times (133432 iterations), fathomed 19 nodes and fixed 124 variables
Cbc0035I Maximum depth 112, 2382 variables fixed on reduced cost
Total time (CPU seconds):       22.63   (Wallclock seconds):       24.22

