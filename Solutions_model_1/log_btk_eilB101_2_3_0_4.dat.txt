Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-62) rows, 79 (-24) columns and 438 (-165) elements
Clp1000I sum of infeasibilities 4.10346e-05 - average 2.86955e-07, 73 fixed columns
Coin0506I Presolve 5 (-138) rows, 6 (-73) columns and 16 (-422) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Coin0511I After Postsolve, objective 22010.757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2129414 - largest nonzero change 2.7285729e-05 ( 0.0023600025%) - largest zero change 2.9750873e-05
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Clp0000I Optimal - objective value 22010.757
Coin0511I After Postsolve, objective 22010.757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22010.75702 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 143 rows, 79 columns (78 integer (78 of which binary)) and 444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.51074
Cbc0038I Solution found of -20309.1
Cbc0038I Relaxing continuous gives -20309.1
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20479.3
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04319 (1) obj. -20479.3 iterations 14
Cbc0038I Pass   2: suminf.    0.34483 (1) obj. -21667.7 iterations 5
Cbc0038I Pass   3: suminf.    1.00529 (4) obj. -20479.3 iterations 10
Cbc0038I Pass   4: suminf.    0.79874 (2) obj. -21167.9 iterations 4
Cbc0038I Pass   5: suminf.    0.16288 (1) obj. -20479.3 iterations 6
Cbc0038I Pass   6: suminf.    0.06897 (1) obj. -20849.3 iterations 5
Cbc0038I Pass   7: suminf.    0.54502 (3) obj. -20479.3 iterations 6
Cbc0038I Pass   8: suminf.    0.43434 (2) obj. -20586 iterations 3
Cbc0038I Pass   9: suminf.    0.30480 (2) obj. -20479.3 iterations 10
Cbc0038I Pass  10: suminf.    0.30480 (2) obj. -20479.3 iterations 1
Cbc0038I Pass  11: suminf.    0.57006 (2) obj. -20733.3 iterations 6
Cbc0038I Pass  12: suminf.    0.93125 (4) obj. -20479.3 iterations 17
Cbc0038I Pass  13: suminf.    0.80130 (3) obj. -20479.3 iterations 14
Cbc0038I Pass  14: suminf.    0.46328 (2) obj. -21264.8 iterations 11
Cbc0038I Pass  15: suminf.    0.03448 (1) obj. -20691.2 iterations 2
Cbc0038I Pass  16: suminf.    0.08827 (1) obj. -20479.3 iterations 5
Cbc0038I Pass  17: suminf.    0.45860 (2) obj. -21459.6 iterations 9
Cbc0038I Pass  18: suminf.    0.45860 (2) obj. -21459.6 iterations 3
Cbc0038I Pass  19: suminf.    0.14756 (1) obj. -20479.3 iterations 8
Cbc0038I Pass  20: suminf.    0.14756 (1) obj. -20479.3 iterations 1
Cbc0038I Pass  21: suminf.    0.84746 (2) obj. -20586.5 iterations 5
Cbc0038I Pass  22: suminf.    0.39857 (2) obj. -21243.9 iterations 10
Cbc0038I Pass  23: suminf.    0.39857 (2) obj. -21243.9 iterations 3
Cbc0038I Pass  24: suminf.    0.24817 (2) obj. -20479.3 iterations 11
Cbc0038I Pass  25: suminf.    0.24817 (2) obj. -20479.3 iterations 6
Cbc0038I Pass  26: suminf.    0.58289 (2) obj. -20479.3 iterations 3
Cbc0038I Pass  27: suminf.    0.27208 (3) obj. -20479.3 iterations 10
Cbc0038I Pass  28: suminf.    0.25034 (2) obj. -20479.3 iterations 10
Cbc0038I Pass  29: suminf.    0.48460 (2) obj. -20962.5 iterations 7
Cbc0038I Pass  30: suminf.    0.36993 (2) obj. -21418.3 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -20309.1 to -20901 (0.02 seconds)
Cbc0038I Round again with cutoff of -21122.9
Cbc0038I Reduced cost fixing fixed 46 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.20655 (1) obj. -21122.9 iterations 0
Cbc0038I Pass  31: suminf.    0.34483 (1) obj. -21667.7 iterations 8
Cbc0038I Pass  32: suminf.    1.36803 (4) obj. -21122.9 iterations 13
Cbc0038I Pass  33: suminf.    0.87216 (3) obj. -21122.9 iterations 5
Cbc0038I Pass  34: suminf.    0.42106 (3) obj. -21122.9 iterations 11
Cbc0038I Pass  35: suminf.    0.42106 (3) obj. -21122.9 iterations 0
Cbc0038I Pass  36: suminf.    0.64906 (3) obj. -21122.9 iterations 14
Cbc0038I Pass  37: suminf.    0.38930 (2) obj. -21122.9 iterations 3
Cbc0038I Pass  38: suminf.    0.89457 (3) obj. -21122.9 iterations 7
Cbc0038I Pass  39: suminf.    0.59250 (2) obj. -21122.9 iterations 6
Cbc0038I Pass  40: suminf.    1.33705 (5) obj. -21122.9 iterations 10
Cbc0038I Pass  41: suminf.    0.40840 (4) obj. -21122.9 iterations 7
Cbc0038I Pass  42: suminf.    0.21361 (2) obj. -21122.9 iterations 12
Cbc0038I Pass  43: suminf.    0.95430 (3) obj. -21122.9 iterations 10
Cbc0038I Pass  44: suminf.    0.36842 (1) obj. -21463.3 iterations 4
Cbc0038I Pass  45: suminf.    0.05634 (1) obj. -21122.9 iterations 15
Cbc0038I Pass  46: suminf.    0.05634 (1) obj. -21122.9 iterations 5
Cbc0038I Pass  47: suminf.    0.13793 (1) obj. -21444.4 iterations 6
Cbc0038I Pass  48: suminf.    0.13793 (1) obj. -21444.4 iterations 2
Cbc0038I Pass  49: suminf.    0.37037 (2) obj. -21450.2 iterations 9
Cbc0038I Pass  50: suminf.    0.21361 (2) obj. -21122.9 iterations 14
Cbc0038I Pass  51: suminf.    0.95430 (3) obj. -21122.9 iterations 9
Cbc0038I Pass  52: suminf.    0.36842 (1) obj. -21463.3 iterations 4
Cbc0038I Pass  53: suminf.    0.90105 (2) obj. -21122.9 iterations 10
Cbc0038I Pass  54: suminf.    0.81818 (2) obj. -21480.6 iterations 8
Cbc0038I Pass  55: suminf.    0.26635 (2) obj. -21122.9 iterations 10
Cbc0038I Pass  56: suminf.    0.26635 (2) obj. -21122.9 iterations 7
Cbc0038I Pass  57: suminf.    0.71447 (2) obj. -21122.9 iterations 3
Cbc0038I Pass  58: suminf.    1.04057 (3) obj. -21122.9 iterations 9
Cbc0038I Pass  59: suminf.    1.04057 (3) obj. -21122.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 79 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20901 - took 0.02 seconds
Cbc0012I Integer solution of -20900.966 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 143 rows 79 columns, reduced to 3 rows 3 columns
Cbc0031I 6 added rows had average density of 12.166667
Cbc0013I At root node, 6 cuts changed objective from -22010.757 to -21674.69 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 46 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20900.966, took 257 iterations and 8 nodes (0.08 seconds)
Cbc0032I Strong branching done 72 times (298 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 60 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

