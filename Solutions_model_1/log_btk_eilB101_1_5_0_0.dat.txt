Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 155 (-50) rows, 84 (-19) columns and 470 (-133) elements
Clp1000I sum of infeasibilities 5.36096e-06 - average 3.45869e-08, 78 fixed columns
Coin0506I Presolve 8 (-147) rows, 5 (-79) columns and 20 (-450) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 7723.523
Clp0000I Optimal - objective value 7723.523
Coin0511I After Postsolve, objective 7723.523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20786452 - largest nonzero change 0 ( 0%) - largest zero change 2.9895837e-05
Clp0000I Optimal - objective value 7723.523
Clp0000I Optimal - objective value 7723.523
Clp0000I Optimal - objective value 7723.523
Coin0511I After Postsolve, objective 7723.523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7723.522989 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 155 rows, 84 columns (83 integer (83 of which binary)) and 476 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.162%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.23944
Cbc0038I Pass   1: suminf.    0.69841 (2) obj. -7548.67 iterations 3
Cbc0038I Solution found of -4584.61
Cbc0038I Relaxing continuous gives -4588.11
Cbc0038I Rounding solution of -4635.27 is better than previous of -4588.11

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 155 rows 84 columns, reduced to 9 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -4635.27 to -4670.95 (0.02 seconds)
Cbc0038I Round again with cutoff of -4976.21
Cbc0038I Pass   2: suminf.    0.69841 (2) obj. -7548.67 iterations 0
Cbc0038I Pass   3: suminf.    0.17042 (2) obj. -4976.21 iterations 3
Cbc0038I Pass   4: suminf.    0.51686 (3) obj. -4976.21 iterations 12
Cbc0038I Pass   5: suminf.    0.15973 (2) obj. -4976.21 iterations 9
Cbc0038I Pass   6: suminf.    0.34921 (2) obj. -5407.7 iterations 1
Cbc0038I Pass   7: suminf.    0.40958 (3) obj. -4976.21 iterations 15
Cbc0038I Pass   8: suminf.    1.33449 (6) obj. -4976.21 iterations 29
Cbc0038I Pass   9: suminf.    0.15156 (2) obj. -4976.21 iterations 16
Cbc0038I Pass  10: suminf.    0.66667 (2) obj. -6149.23 iterations 1
Cbc0038I Pass  11: suminf.    1.11893 (4) obj. -4976.21 iterations 13
Cbc0038I Pass  12: suminf.    1.65034 (7) obj. -4976.21 iterations 11
Cbc0038I Pass  13: suminf.    0.22471 (3) obj. -4976.21 iterations 17
Cbc0038I Pass  14: suminf.    0.77092 (5) obj. -4976.21 iterations 6
Cbc0038I Pass  15: suminf.    0.77092 (5) obj. -4976.21 iterations 3
Cbc0038I Pass  16: suminf.    0.85053 (5) obj. -4976.21 iterations 5
Cbc0038I Pass  17: suminf.    0.20536 (3) obj. -4976.21 iterations 5
Cbc0038I Pass  18: suminf.    0.22222 (2) obj. -5170.5 iterations 2
Cbc0038I Pass  19: suminf.    0.13690 (2) obj. -4976.21 iterations 1
Cbc0038I Pass  20: suminf.    0.50027 (4) obj. -4976.21 iterations 6
Cbc0038I Pass  21: suminf.    0.33847 (3) obj. -4976.21 iterations 6
Cbc0038I Pass  22: suminf.    0.19048 (2) obj. -5098.2 iterations 3
Cbc0038I Pass  23: suminf.    0.13690 (2) obj. -4976.21 iterations 1
Cbc0038I Pass  24: suminf.    0.56971 (3) obj. -4976.21 iterations 18
Cbc0038I Pass  25: suminf.    0.16189 (2) obj. -4976.21 iterations 7
Cbc0038I Pass  26: suminf.    0.59574 (2) obj. -5964.2 iterations 2
Cbc0038I Pass  27: suminf.    1.43794 (5) obj. -4976.21 iterations 11
Cbc0038I Pass  28: suminf.    0.56710 (3) obj. -4976.21 iterations 6
Cbc0038I Pass  29: suminf.    0.20268 (2) obj. -4976.21 iterations 3
Cbc0038I Pass  30: suminf.    0.72340 (2) obj. -6235.49 iterations 6
Cbc0038I Pass  31: suminf.    0.17042 (2) obj. -4976.21 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 155 rows 84 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -4670.95 to -4695.27 (0.04 seconds)
Cbc0038I Round again with cutoff of -5525.67
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.69841 (2) obj. -7548.67 iterations 0
Cbc0038I Pass  32: suminf.    0.41171 (2) obj. -5525.67 iterations 2
Cbc0038I Pass  33: suminf.    1.09293 (4) obj. -5525.67 iterations 14
Cbc0038I Pass  34: suminf.    0.54174 (3) obj. -5525.67 iterations 13
Cbc0038I Pass  35: suminf.    0.85106 (2) obj. -6545.63 iterations 7
Cbc0038I Pass  36: suminf.    0.40318 (2) obj. -5525.67 iterations 2
Cbc0038I Pass  37: suminf.    1.49528 (5) obj. -5525.67 iterations 16
Cbc0038I Pass  38: suminf.    1.49528 (5) obj. -5525.67 iterations 3
Cbc0038I Pass  39: suminf.    0.69841 (2) obj. -7548.67 iterations 18
Cbc0038I Pass  40: suminf.    0.41171 (2) obj. -5525.67 iterations 2
Cbc0038I Pass  41: suminf.    0.75914 (4) obj. -5525.67 iterations 16
Cbc0038I Pass  42: suminf.    0.39620 (2) obj. -5525.67 iterations 7
Cbc0038I Pass  43: suminf.    0.44444 (2) obj. -5635.53 iterations 1
Cbc0038I Pass  44: suminf.    0.82220 (4) obj. -5525.67 iterations 12
Cbc0038I Pass  45: suminf.    0.39620 (2) obj. -5525.67 iterations 16
Cbc0038I Pass  46: suminf.    0.55319 (2) obj. -5883.17 iterations 2
Cbc0038I Pass  47: suminf.    0.92858 (7) obj. -5525.67 iterations 18
Cbc0038I Pass  48: suminf.    0.40318 (2) obj. -5525.67 iterations 10
Cbc0038I Pass  49: suminf.    0.44444 (2) obj. -5619.65 iterations 1
Cbc0038I Pass  50: suminf.    1.17506 (5) obj. -5525.67 iterations 7
Cbc0038I Pass  51: suminf.    0.40318 (2) obj. -5525.67 iterations 10
Cbc0038I Pass  52: suminf.    0.66667 (2) obj. -6125.71 iterations 1
Cbc0038I Pass  53: suminf.    1.09377 (4) obj. -5525.67 iterations 3
Cbc0038I Pass  54: suminf.    0.69131 (3) obj. -5525.67 iterations 2
Cbc0038I Pass  55: suminf.    0.90656 (5) obj. -5525.67 iterations 5
Cbc0038I Pass  56: suminf.    0.40318 (2) obj. -5525.67 iterations 9
Cbc0038I Pass  57: suminf.    0.59574 (2) obj. -5964.2 iterations 2
Cbc0038I Pass  58: suminf.    0.75695 (3) obj. -5525.67 iterations 3
Cbc0038I Pass  59: suminf.    0.84820 (5) obj. -5525.67 iterations 9
Cbc0038I Pass  60: suminf.    0.69907 (4) obj. -5525.67 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 155 rows 84 columns, reduced to 37 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -4695.27 - took 0.03 seconds
Cbc0012I Integer solution of -4695.2721 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 155 rows 84 columns, reduced to 17 rows 10 columns
Cbc0031I 14 added rows had average density of 19.214286
Cbc0013I At root node, 14 cuts changed objective from -7723.523 to -4714.3877 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 406 row cuts average 7.5 elements, 28 column cuts (28 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 80.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4695.27215, took 719 iterations and 12 nodes (0.37 seconds)
Cbc0032I Strong branching done 154 times (1695 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.37

