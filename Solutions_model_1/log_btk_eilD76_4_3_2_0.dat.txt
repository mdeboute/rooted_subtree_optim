Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 5.70276e-05 - average 4.13244e-07, 9 fixed columns
Coin0506I Presolve 120 (-18) rows, 67 (-9) columns and 366 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Coin0511I After Postsolve, objective 35.064976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Clp0000I Optimal - objective value 35.064976
Coin0511I After Postsolve, objective 35.064976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.0649763 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.0198
Cbc0038I Solution found of 6.02205
Cbc0038I Relaxing continuous gives 5.09053
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 5.09053 to -4.79345 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.82069
Cbc0038I Pass   1: suminf.    2.23480 (16) obj. -7.82069 iterations 49
Cbc0038I Pass   2: suminf.    1.83290 (6) obj. -7.82069 iterations 22
Cbc0038I Pass   3: suminf.    1.59346 (6) obj. -7.82069 iterations 2
Cbc0038I Pass   4: suminf.    2.07674 (7) obj. -7.82069 iterations 9
Cbc0038I Pass   5: suminf.    1.70568 (6) obj. -7.82069 iterations 3
Cbc0038I Pass   6: suminf.    1.32584 (5) obj. -7.82069 iterations 1
Cbc0038I Pass   7: suminf.    1.32584 (5) obj. -7.82069 iterations 0
Cbc0038I Pass   8: suminf.    2.22746 (6) obj. -7.82069 iterations 5
Cbc0038I Pass   9: suminf.    1.88428 (6) obj. -7.82069 iterations 3
Cbc0038I Pass  10: suminf.    1.88428 (6) obj. -7.82069 iterations 0
Cbc0038I Pass  11: suminf.    2.54914 (6) obj. -7.82069 iterations 2
Cbc0038I Pass  12: suminf.    2.21322 (7) obj. -7.82069 iterations 2
Cbc0038I Pass  13: suminf.    2.21322 (7) obj. -7.82069 iterations 0
Cbc0038I Pass  14: suminf.    2.71162 (7) obj. -7.82069 iterations 3
Cbc0038I Pass  15: suminf.    2.31194 (7) obj. -7.82069 iterations 2
Cbc0038I Pass  16: suminf.    2.31194 (7) obj. -7.82069 iterations 0
Cbc0038I Pass  17: suminf.    1.87228 (5) obj. -7.82069 iterations 4
Cbc0038I Pass  18: suminf.    1.37363 (4) obj. -7.82069 iterations 4
Cbc0038I Pass  19: suminf.    1.16981 (5) obj. -7.82069 iterations 3
Cbc0038I Pass  20: suminf.    1.16981 (5) obj. -7.82069 iterations 0
Cbc0038I Pass  21: suminf.    1.21484 (4) obj. -7.82069 iterations 5
Cbc0038I Pass  22: suminf.    1.20385 (3) obj. -7.82069 iterations 1
Cbc0038I Pass  23: suminf.    1.02845 (4) obj. -7.82069 iterations 3
Cbc0038I Pass  24: suminf.    1.00811 (3) obj. -7.82069 iterations 1
Cbc0038I Pass  25: suminf.    1.21484 (4) obj. -7.82069 iterations 2
Cbc0038I Pass  26: suminf.    1.21037 (7) obj. -7.82069 iterations 21
Cbc0038I Pass  27: suminf.    0.72719 (4) obj. -7.82069 iterations 12
Cbc0038I Pass  28: suminf.    1.70569 (5) obj. -7.82069 iterations 4
Cbc0038I Pass  29: suminf.    1.13736 (4) obj. -7.82069 iterations 2
Cbc0038I Pass  30: suminf.    0.52410 (3) obj. -7.82069 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 88 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -4.79345 to -7.29379 (0.12 seconds)
Cbc0038I Round again with cutoff of -13.2695
Cbc0038I Pass  30: suminf.    3.55343 (22) obj. -13.2695 iterations 6
Cbc0038I Pass  31: suminf.    2.87063 (10) obj. -13.2695 iterations 22
Cbc0038I Pass  32: suminf.    2.67650 (9) obj. -13.2695 iterations 4
Cbc0038I Pass  33: suminf.    1.97436 (6) obj. -13.2695 iterations 11
Cbc0038I Pass  34: suminf.    1.34244 (4) obj. -13.2695 iterations 3
Cbc0038I Pass  35: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  36: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  37: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  38: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  39: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  40: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  41: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  42: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  43: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  44: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  45: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  46: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  47: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  48: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  49: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  50: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  51: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  52: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  53: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  54: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  55: suminf.    1.34244 (4) obj. -13.2695 iterations 0
Cbc0038I Pass  56: suminf.    1.60033 (5) obj. -13.2695 iterations 2
Cbc0038I Pass  57: suminf.    1.19788 (4) obj. -13.2695 iterations 2
Cbc0038I Pass  58: suminf.    1.97436 (6) obj. -13.2695 iterations 3
Cbc0038I Pass  59: suminf.    1.34244 (4) obj. -13.2695 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -7.29379 - took 0.17 seconds
Cbc0012I Integer solution of -7.29379 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 82 rows 47 columns
Cbc0031I 33 added rows had average density of 50.060606
Cbc0013I At root node, 33 cuts changed objective from -35.064976 to -26.598558 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16127 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2410 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.29379 best solution, best possible -26.598558 (1.39 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -7.49216 found by rounding after 12693 iterations and 62 nodes (1.66 seconds)
Cbc0012I Integer solution of -7.50024 found by rounding after 13637 iterations and 82 nodes (1.72 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 3 rows 5 columns
Cbc0001I Search completed - best objective -7.500240000000005, took 13954 iterations and 102 nodes (1.74 seconds)
Cbc0032I Strong branching done 868 times (16800 iterations), fathomed 10 nodes and fixed 54 variables
Cbc0035I Maximum depth 18, 219 variables fixed on reduced cost
Total time (CPU seconds):       1.70   (Wallclock seconds):       1.76

