Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 176 (-29) rows, 101 (-2) columns and 546 (-57) elements
Clp1000I sum of infeasibilities 0.000363077 - average 2.06294e-06, 21 fixed columns
Coin0506I Presolve 133 (-43) rows, 79 (-22) columns and 416 (-130) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 0.2743828 - largest nonzero change 0 ( 0%) - largest zero change 2.6737739e-05
Clp0000I Optimal - objective value 44.900454
Clp0000I Optimal - objective value 44.900454
Coin0511I After Postsolve, objective 44.900454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.900454
Clp0000I Optimal - objective value 44.900454
Clp0000I Optimal - objective value 44.900454
Coin0511I After Postsolve, objective 44.900454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.90045436 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 176 rows, 101 columns (100 integer (100 of which binary)) and 546 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.849%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 12.9674
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.4288 iterations 70
Cbc0038I Solution found of 11.4288
Cbc0038I Relaxing continuous gives 11.4288
Cbc0038I Rounding solution of 4.05099 is better than previous of 11.4288

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 101 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 4.05099 to -12.654 (0.06 seconds)
Cbc0038I Round again with cutoff of -15.8787
Cbc0038I Pass   2: suminf.    3.96560 (14) obj. -15.8787 iterations 19
Cbc0038I Pass   3: suminf.    1.47457 (6) obj. -15.8787 iterations 20
Cbc0038I Pass   4: suminf.    1.21718 (6) obj. -15.8787 iterations 2
Cbc0038I Pass   5: suminf.    2.25550 (8) obj. -15.8787 iterations 9
Cbc0038I Pass   6: suminf.    1.88436 (6) obj. -15.8787 iterations 3
Cbc0038I Pass   7: suminf.    1.39406 (4) obj. -15.8787 iterations 6
Cbc0038I Pass   8: suminf.    1.15339 (5) obj. -15.8787 iterations 3
Cbc0038I Pass   9: suminf.    1.54768 (6) obj. -15.8787 iterations 6
Cbc0038I Pass  10: suminf.    1.54768 (6) obj. -15.8787 iterations 0
Cbc0038I Pass  11: suminf.    2.45882 (7) obj. -15.8787 iterations 7
Cbc0038I Pass  12: suminf.    2.45169 (8) obj. -15.8787 iterations 1
Cbc0038I Pass  13: suminf.    1.66285 (7) obj. -15.8787 iterations 10
Cbc0038I Pass  14: suminf.    1.32714 (5) obj. -15.8787 iterations 6
Cbc0038I Pass  15: suminf.    2.45836 (7) obj. -15.8787 iterations 4
Cbc0038I Pass  16: suminf.    1.58241 (7) obj. -15.8787 iterations 7
Cbc0038I Pass  17: suminf.    2.39249 (9) obj. -15.8787 iterations 26
Cbc0038I Pass  18: suminf.    2.39249 (9) obj. -15.8787 iterations 6
Cbc0038I Pass  19: suminf.    3.52226 (11) obj. -15.8787 iterations 27
Cbc0038I Pass  20: suminf.    3.09897 (10) obj. -15.8787 iterations 1
Cbc0038I Pass  21: suminf.    3.01980 (9) obj. -15.8787 iterations 3
Cbc0038I Pass  22: suminf.    2.33319 (9) obj. -15.8787 iterations 11
Cbc0038I Pass  23: suminf.    1.85112 (7) obj. -15.8787 iterations 2
Cbc0038I Pass  24: suminf.    1.81559 (7) obj. -15.8787 iterations 1
Cbc0038I Pass  25: suminf.    2.61345 (8) obj. -15.8787 iterations 12
Cbc0038I Pass  26: suminf.    1.62645 (6) obj. -15.8787 iterations 15
Cbc0038I Pass  27: suminf.    2.45836 (7) obj. -15.8787 iterations 9
Cbc0038I Pass  28: suminf.    1.58241 (7) obj. -15.8787 iterations 6
Cbc0038I Pass  29: suminf.    1.32714 (5) obj. -15.8787 iterations 5
Cbc0038I Pass  30: suminf.    2.95434 (9) obj. -15.8787 iterations 30
Cbc0038I Pass  31: suminf.    2.12982 (9) obj. -15.8787 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 101 columns, reduced to 92 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -12.654 to -13.3272 (0.13 seconds)
Cbc0038I Round again with cutoff of -21.6831
Cbc0038I Pass  31: suminf.    5.30236 (17) obj. -21.6831 iterations 6
Cbc0038I Pass  32: suminf.    2.95005 (9) obj. -21.6831 iterations 17
Cbc0038I Pass  33: suminf.    2.92131 (9) obj. -21.6831 iterations 1
Cbc0038I Pass  34: suminf.    4.50099 (15) obj. -21.6831 iterations 19
Cbc0038I Pass  35: suminf.    2.23603 (10) obj. -21.6831 iterations 15
Cbc0038I Pass  36: suminf.    2.22985 (9) obj. -21.6831 iterations 8
Cbc0038I Pass  37: suminf.    4.07822 (10) obj. -21.6831 iterations 27
Cbc0038I Pass  38: suminf.    3.07245 (8) obj. -21.6831 iterations 10
Cbc0038I Pass  39: suminf.    2.59336 (8) obj. -21.6831 iterations 4
Cbc0038I Pass  40: suminf.    2.46722 (6) obj. -21.6831 iterations 9
Cbc0038I Pass  41: suminf.    1.80969 (6) obj. -21.6831 iterations 4
Cbc0038I Pass  42: suminf.    3.35989 (9) obj. -21.6831 iterations 18
Cbc0038I Pass  43: suminf.    1.83454 (7) obj. -21.6831 iterations 16
Cbc0038I Pass  44: suminf.    1.74854 (6) obj. -21.6831 iterations 7
Cbc0038I Pass  45: suminf.    3.19290 (9) obj. -21.6831 iterations 20
Cbc0038I Pass  46: suminf.    2.11645 (6) obj. -21.6831 iterations 9
Cbc0038I Pass  47: suminf.    1.84985 (6) obj. -21.6831 iterations 2
Cbc0038I Pass  48: suminf.    1.80969 (6) obj. -21.6831 iterations 1
Cbc0038I Pass  49: suminf.    3.35989 (9) obj. -21.6831 iterations 18
Cbc0038I Pass  50: suminf.    1.83454 (7) obj. -21.6831 iterations 16
Cbc0038I Pass  51: suminf.    1.74854 (6) obj. -21.6831 iterations 7
Cbc0038I Pass  52: suminf.    3.19290 (9) obj. -21.6831 iterations 20
Cbc0038I Pass  53: suminf.    2.11645 (6) obj. -21.6831 iterations 9
Cbc0038I Pass  54: suminf.    1.84985 (6) obj. -21.6831 iterations 2
Cbc0038I Pass  55: suminf.    1.80969 (6) obj. -21.6831 iterations 1
Cbc0038I Pass  56: suminf.    3.35989 (9) obj. -21.6831 iterations 18
Cbc0038I Pass  57: suminf.    1.83454 (7) obj. -21.6831 iterations 16
Cbc0038I Pass  58: suminf.    1.74854 (6) obj. -21.6831 iterations 7
Cbc0038I Pass  59: suminf.    3.19290 (9) obj. -21.6831 iterations 20
Cbc0038I Pass  60: suminf.    2.11645 (6) obj. -21.6831 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 101 columns, reduced to 80 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -13.3272 - took 0.16 seconds
Cbc0012I Integer solution of -13.32718 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 176 rows 101 columns, reduced to 77 rows 48 columns
Cbc0031I 35 added rows had average density of 59.171429
Cbc0013I At root node, 35 cuts changed objective from -44.900454 to -35.296917 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18198 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2208 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.32718 best solution, best possible -35.296917 (1.62 seconds)
Cbc0038I Full problem 176 rows 101 columns, reduced to 7 rows 11 columns
Cbc0012I Integer solution of -14.03896 found by RINS after 11014 iterations and 41 nodes (1.99 seconds)
Cbc0016I Integer solution of -14.62833 found by strong branching after 11554 iterations and 53 nodes (2.03 seconds)
Cbc0038I Full problem 176 rows 101 columns, reduced to 4 rows 8 columns
Cbc0001I Search completed - best objective -14.62833, took 13353 iterations and 110 nodes (2.19 seconds)
Cbc0032I Strong branching done 1210 times (25001 iterations), fathomed 8 nodes and fixed 31 variables
Cbc0035I Maximum depth 43, 477 variables fixed on reduced cost
Total time (CPU seconds):       2.11   (Wallclock seconds):       2.21

