Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 100 (-3) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 0.000426545 - average 2.31818e-06, 17 fixed columns
Coin0506I Presolve 150 (-34) rows, 83 (-17) columns and 458 (-102) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 0.21120605 - largest nonzero change 0 ( 0%) - largest zero change 2.9533151e-05
Clp0000I Optimal - objective value 49.15209
Clp0000I Optimal - objective value 49.15209
Coin0511I After Postsolve, objective 49.15209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.15209
Clp0000I Optimal - objective value 49.15209
Clp0000I Optimal - objective value 49.15209
Coin0511I After Postsolve, objective 49.15209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.15209029 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 184 rows, 100 columns (99 integer (99 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.980%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 7.95542
Cbc0038I Solution found of -2.49488
Cbc0038I Relaxing continuous gives -8.44717
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 100 columns, reduced to 89 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -8.44717 to -23.5715 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.1296
Cbc0038I Pass   1: suminf.    2.44537 (38) obj. -26.1296 iterations 86
Cbc0038I Pass   2: suminf.    2.01523 (6) obj. -26.1296 iterations 38
Cbc0038I Pass   3: suminf.    2.01523 (6) obj. -26.1296 iterations 1
Cbc0038I Pass   4: suminf.    2.65911 (8) obj. -26.1296 iterations 27
Cbc0038I Pass   5: suminf.    2.11866 (5) obj. -26.1296 iterations 15
Cbc0038I Pass   6: suminf.    1.92771 (8) obj. -26.1296 iterations 9
Cbc0038I Pass   7: suminf.    2.63528 (7) obj. -26.1296 iterations 15
Cbc0038I Pass   8: suminf.    1.93132 (6) obj. -26.1296 iterations 4
Cbc0038I Pass   9: suminf.    2.24666 (8) obj. -26.1296 iterations 14
Cbc0038I Pass  10: suminf.    1.97985 (6) obj. -26.1296 iterations 8
Cbc0038I Pass  11: suminf.    1.42073 (5) obj. -26.1296 iterations 12
Cbc0038I Pass  12: suminf.    1.07634 (4) obj. -26.1296 iterations 8
Cbc0038I Pass  13: suminf.    2.15350 (5) obj. -26.1296 iterations 9
Cbc0038I Pass  14: suminf.    1.06653 (3) obj. -26.1296 iterations 6
Cbc0038I Pass  15: suminf.    1.07634 (4) obj. -26.1296 iterations 10
Cbc0038I Pass  16: suminf.    2.67731 (9) obj. -26.1296 iterations 26
Cbc0038I Pass  17: suminf.    1.34746 (4) obj. -26.1296 iterations 23
Cbc0038I Pass  18: suminf.    0.80263 (3) obj. -26.1296 iterations 9
Cbc0038I Pass  19: suminf.    0.78386 (3) obj. -26.1296 iterations 4
Cbc0038I Pass  20: suminf.    1.23296 (5) obj. -26.1296 iterations 3
Cbc0038I Pass  21: suminf.    1.23296 (5) obj. -26.1296 iterations 3
Cbc0038I Pass  22: suminf.    1.19218 (4) obj. -26.1296 iterations 13
Cbc0038I Pass  23: suminf.    1.06653 (3) obj. -26.1296 iterations 6
Cbc0038I Pass  24: suminf.    1.07634 (4) obj. -26.1296 iterations 10
Cbc0038I Pass  25: suminf.    1.07634 (4) obj. -26.1296 iterations 0
Cbc0038I Pass  26: suminf.    2.15350 (5) obj. -26.1296 iterations 9
Cbc0038I Pass  27: suminf.    3.95875 (12) obj. -26.1296 iterations 30
Cbc0038I Pass  28: suminf.    2.47635 (8) obj. -26.1296 iterations 30
Cbc0038I Pass  29: suminf.    2.08203 (5) obj. -26.1296 iterations 10
Cbc0038I Pass  30: suminf.    1.97069 (5) obj. -26.1296 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 100 columns, reduced to 134 rows 74 columns - 2 fixed gives 120, 72 - still too large
Cbc0038I Full problem 184 rows 100 columns, reduced to 120 rows 72 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.5715 - took 0.06 seconds
Cbc0012I Integer solution of -23.5715 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 184 rows 100 columns, reduced to 89 rows 50 columns
Cbc0031I 33 added rows had average density of 85.424242
Cbc0013I At root node, 33 cuts changed objective from -49.15209 to -43.120255 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17887 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2649 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 99.6 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.5715 best solution, best possible -43.120255 (1.57 seconds)
Cbc0038I Full problem 184 rows 100 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -23.71868 found by rounding after 12987 iterations and 46 nodes (1.93 seconds)
Cbc0012I Integer solution of -24.19218 found by rounding after 13050 iterations and 48 nodes (1.94 seconds)
Cbc0004I Integer solution of -25.54238 found after 13148 iterations and 52 nodes (1.95 seconds)
Cbc0038I Full problem 184 rows 100 columns, reduced to 20 rows 16 columns
Cbc0001I Search completed - best objective -25.54237999999999, took 14870 iterations and 104 nodes (2.06 seconds)
Cbc0032I Strong branching done 1084 times (23194 iterations), fathomed 0 nodes and fixed 41 variables
Cbc0035I Maximum depth 41, 314 variables fixed on reduced cost
Total time (CPU seconds):       2.00   (Wallclock seconds):       2.08

