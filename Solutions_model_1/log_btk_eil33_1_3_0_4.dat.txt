Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 28 (-7) columns and 157 (-38) elements
Clp1000I sum of infeasibilities 3.01073e-05 - average 5.57542e-07, 4 fixed columns
Coin0506I Presolve 46 (-8) rows, 24 (-4) columns and 133 (-24) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 122.34566
Clp0000I Optimal - objective value 122.34566
Coin0511I After Postsolve, objective 122.34566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 122.34566
Clp0000I Optimal - objective value 122.34566
Clp0000I Optimal - objective value 122.34566
Coin0511I After Postsolve, objective 122.34566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.3456589 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 28 columns (27 integer (27 of which binary)) and 169 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.91045
Cbc0038I Pass   1: suminf.    0.92500 (3) obj. 28.5521 iterations 10
Cbc0038I Pass   2: suminf.    0.92500 (3) obj. 28.5521 iterations 0
Cbc0038I Solution found of 103.851
Cbc0038I Relaxing continuous gives 103.851
Cbc0038I Rounding solution of 61.9362 is better than previous of 103.851

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 28 columns, reduced to 17 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 48.1451
Cbc0038I Pass   3: suminf.    0.92500 (3) obj. 28.5521 iterations 0
Cbc0038I Pass   4: suminf.    0.92500 (3) obj. 28.5521 iterations 0
Cbc0038I Pass   5: suminf.    0.58985 (2) obj. 48.1451 iterations 7
Cbc0038I Pass   6: suminf.    0.22000 (1) obj. 37.0698 iterations 2
Cbc0038I Pass   7: suminf.    0.82181 (4) obj. 48.1451 iterations 7
Cbc0038I Pass   8: suminf.    0.60254 (3) obj. 48.1451 iterations 4
Cbc0038I Pass   9: suminf.    0.60254 (3) obj. 48.1451 iterations 1
Cbc0038I Pass  10: suminf.    0.62389 (2) obj. 48.1451 iterations 6
Cbc0038I Pass  11: suminf.    0.14000 (1) obj. 41.5822 iterations 2
Cbc0038I Pass  12: suminf.    0.61966 (4) obj. 48.1451 iterations 5
Cbc0038I Pass  13: suminf.    0.58794 (4) obj. 48.1451 iterations 1
Cbc0038I Pass  14: suminf.    0.10587 (1) obj. 48.1451 iterations 8
Cbc0038I Pass  15: suminf.    0.36138 (1) obj. 48.1451 iterations 2
Cbc0038I Pass  16: suminf.    0.38000 (1) obj. 26.0026 iterations 1
Cbc0038I Pass  17: suminf.    0.64654 (2) obj. 48.1451 iterations 3
Cbc0038I Pass  18: suminf.    0.59659 (2) obj. 48.1451 iterations 2
Cbc0038I Pass  19: suminf.    1.17705 (8) obj. 48.1451 iterations 11
Cbc0038I Pass  20: suminf.    1.17705 (8) obj. 48.1451 iterations 0
Cbc0038I Pass  21: suminf.    0.88041 (3) obj. 48.1451 iterations 17
Cbc0038I Pass  22: suminf.    0.56340 (2) obj. 48.1451 iterations 2
Cbc0038I Pass  23: suminf.    0.12869 (1) obj. 48.1451 iterations 3
Cbc0038I Pass  24: suminf.    0.48750 (1) obj. 19.6008 iterations 1
Cbc0038I Pass  25: suminf.    0.25738 (2) obj. 48.1451 iterations 4
Cbc0038I Pass  26: suminf.    0.17536 (1) obj. 48.1451 iterations 3
Cbc0038I Pass  27: suminf.    0.42606 (1) obj. 48.1451 iterations 2
Cbc0038I Solution found of 48.1451
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 28 columns, reduced to 28 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15.1948
Cbc0038I Pass  28: suminf.    1.33797 (7) obj. -15.1948 iterations 7
Cbc0038I Pass  29: suminf.    1.26613 (8) obj. -15.1948 iterations 4
Cbc0038I Pass  30: suminf.    1.05630 (4) obj. -15.1948 iterations 18
Cbc0038I Pass  31: suminf.    0.86185 (4) obj. -15.1948 iterations 4
Cbc0038I Pass  32: suminf.    0.86198 (4) obj. -15.1948 iterations 5
Cbc0038I Pass  33: suminf.    0.47898 (7) obj. -15.1948 iterations 10
Cbc0038I Pass  34: suminf.    0.92151 (4) obj. -15.1948 iterations 12
Cbc0038I Pass  35: suminf.    0.68989 (3) obj. -15.1948 iterations 1
Cbc0038I Pass  36: suminf.    0.62208 (5) obj. -15.1948 iterations 7
Cbc0038I Pass  37: suminf.    0.97650 (10) obj. -15.1948 iterations 8
Cbc0038I Pass  38: suminf.    0.91050 (11) obj. -15.1948 iterations 4
Cbc0038I Pass  39: suminf.    1.33797 (7) obj. -15.1948 iterations 12
Cbc0038I Pass  40: suminf.    1.26613 (8) obj. -15.1948 iterations 4
Cbc0038I Pass  41: suminf.    1.05630 (4) obj. -15.1948 iterations 18
Cbc0038I Pass  42: suminf.    0.86185 (4) obj. -15.1948 iterations 4
Cbc0038I Pass  43: suminf.    0.86198 (4) obj. -15.1948 iterations 5
Cbc0038I Pass  44: suminf.    0.47898 (7) obj. -15.1948 iterations 10
Cbc0038I Pass  45: suminf.    0.92151 (4) obj. -15.1948 iterations 12
Cbc0038I Pass  46: suminf.    0.68989 (3) obj. -15.1948 iterations 1
Cbc0038I Pass  47: suminf.    0.62208 (5) obj. -15.1948 iterations 7
Cbc0038I Pass  48: suminf.    0.97650 (10) obj. -15.1948 iterations 9
Cbc0038I Pass  49: suminf.    0.91050 (11) obj. -15.1948 iterations 3
Cbc0038I Pass  50: suminf.    1.33797 (7) obj. -15.1948 iterations 12
Cbc0038I Pass  51: suminf.    1.26613 (8) obj. -15.1948 iterations 4
Cbc0038I Pass  52: suminf.    1.05630 (4) obj. -15.1948 iterations 18
Cbc0038I Pass  53: suminf.    0.86185 (4) obj. -15.1948 iterations 4
Cbc0038I Pass  54: suminf.    0.86198 (4) obj. -15.1948 iterations 5
Cbc0038I Pass  55: suminf.    0.47898 (7) obj. -15.1948 iterations 10
Cbc0038I Pass  56: suminf.    0.92151 (4) obj. -15.1948 iterations 12
Cbc0038I Pass  57: suminf.    0.68989 (3) obj. -15.1948 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 28 columns, reduced to 22 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 0 - took 0.02 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -11.2553 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 54 rows 28 columns, reduced to 17 rows 10 columns
Cbc0031I 7 added rows had average density of 11.142857
Cbc0013I At root node, 7 cuts changed objective from -75.973826 to -12.108954 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 70 row cuts average 4.0 elements, 11 column cuts (11 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 58 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -11.25529999999998, took 216 iterations and 0 nodes (0.04 seconds)
Cbc0032I Strong branching done 10 times (65 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

