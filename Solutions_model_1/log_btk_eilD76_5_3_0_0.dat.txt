Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 3.43826e-06 - average 2.52813e-08, 10 fixed columns
Coin0506I Presolve 117 (-19) rows, 66 (-10) columns and 358 (-58) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.7411268 - largest nonzero change 0 ( 0%) - largest zero change 1.8429708e-05
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Coin0511I After Postsolve, objective 43.843772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Coin0511I After Postsolve, objective 43.843772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.84377199 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.0701
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.37568 iterations 51
Cbc0038I Solution found of -2.37568
Cbc0038I Relaxing continuous gives -2.37568
Cbc0038I Rounding solution of -9.07922 is better than previous of -2.37568

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -9.07922 to -22.5793 (0.06 seconds)
Cbc0038I Round again with cutoff of -24.7059
Cbc0038I Pass   2: suminf.    2.79206 (9) obj. -24.7059 iterations 12
Cbc0038I Pass   3: suminf.    2.79206 (9) obj. -24.7059 iterations 0
Cbc0038I Pass   4: suminf.    2.17555 (6) obj. -24.7059 iterations 9
Cbc0038I Pass   5: suminf.    1.45497 (6) obj. -24.7059 iterations 6
Cbc0038I Pass   6: suminf.    1.73094 (5) obj. -24.7059 iterations 11
Cbc0038I Pass   7: suminf.    1.25034 (4) obj. -24.7059 iterations 5
Cbc0038I Pass   8: suminf.    1.15908 (3) obj. -24.7059 iterations 2
Cbc0038I Pass   9: suminf.    1.38224 (4) obj. -24.7059 iterations 4
Cbc0038I Pass  10: suminf.    1.38634 (4) obj. -24.7059 iterations 4
Cbc0038I Pass  11: suminf.    1.67639 (5) obj. -24.7059 iterations 19
Cbc0038I Pass  12: suminf.    1.00795 (3) obj. -24.7059 iterations 10
Cbc0038I Pass  13: suminf.    0.85848 (3) obj. -24.7059 iterations 2
Cbc0038I Pass  14: suminf.    0.64816 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  15: suminf.    0.40880 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  16: suminf.    1.13657 (4) obj. -24.7059 iterations 3
Cbc0038I Pass  17: suminf.    0.71069 (3) obj. -24.7059 iterations 6
Cbc0038I Pass  18: suminf.    0.71069 (3) obj. -24.7059 iterations 0
Cbc0038I Pass  19: suminf.    1.45095 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  20: suminf.    1.64021 (7) obj. -24.7059 iterations 21
Cbc0038I Pass  21: suminf.    1.36967 (5) obj. -24.7059 iterations 6
Cbc0038I Pass  22: suminf.    1.15018 (3) obj. -24.7059 iterations 11
Cbc0038I Pass  23: suminf.    0.37989 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  24: suminf.    0.92694 (2) obj. -24.7059 iterations 1
Cbc0038I Pass  25: suminf.    4.39991 (12) obj. -24.7059 iterations 22
Cbc0038I Pass  26: suminf.    1.75588 (7) obj. -24.7059 iterations 15
Cbc0038I Pass  27: suminf.    1.51459 (4) obj. -24.7059 iterations 8
Cbc0038I Pass  28: suminf.    1.12376 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  29: suminf.    0.74869 (3) obj. -24.7059 iterations 3
Cbc0038I Pass  30: suminf.    1.42954 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  31: suminf.    2.36726 (8) obj. -24.7059 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 84 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -22.5793 to -22.6967 (0.12 seconds)
Cbc0038I Round again with cutoff of -28.5334
Cbc0038I Pass  31: suminf.    3.51887 (16) obj. -28.5334 iterations 7
Cbc0038I Pass  32: suminf.    3.51887 (16) obj. -28.5334 iterations 0
Cbc0038I Pass  33: suminf.    2.38471 (7) obj. -28.5334 iterations 19
Cbc0038I Pass  34: suminf.    2.07406 (7) obj. -28.5334 iterations 3
Cbc0038I Pass  35: suminf.    1.98241 (6) obj. -28.5334 iterations 7
Cbc0038I Pass  36: suminf.    1.44004 (5) obj. -28.5334 iterations 3
Cbc0038I Pass  37: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  38: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  39: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  40: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  41: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  42: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  43: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  44: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  45: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  46: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  47: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  48: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  49: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  50: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  51: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  52: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  53: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  54: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  55: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  56: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  57: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  58: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  59: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  60: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -22.6967 - took 0.15 seconds
Cbc0012I Integer solution of -22.696745 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 75 rows 45 columns
Cbc0031I 26 added rows had average density of 39
Cbc0013I At root node, 26 cuts changed objective from -43.843772 to -35.801596 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13303 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2314 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.696745 best solution, best possible -35.801596 (0.93 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 58 rows 36 columns
Cbc0001I Search completed - best objective -22.696745, took 9427 iterations and 58 nodes (1.34 seconds)
Cbc0032I Strong branching done 832 times (13402 iterations), fathomed 5 nodes and fixed 5 variables
Cbc0035I Maximum depth 22, 123 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       1.35

