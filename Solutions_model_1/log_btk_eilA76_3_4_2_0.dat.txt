Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 66 (-12) columns and 357 (-96) elements
Clp1000I sum of infeasibilities 3.5383e-05 - average 3.05026e-07, 20 fixed columns
Coin0506I Presolve 74 (-42) rows, 44 (-22) columns and 229 (-128) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Coin0511I After Postsolve, objective 72.810273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2554995 - largest nonzero change 0 ( 0%) - largest zero change 2.9646431e-05
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Clp0000I Optimal - objective value 72.810273
Coin0511I After Postsolve, objective 72.810273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.81027286 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 116 rows, 66 columns (65 integer (65 of which binary)) and 357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.44745
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.38991 iterations 38
Cbc0038I Solution found of 3.38991
Cbc0038I Relaxing continuous gives 3.38991
Cbc0038I Rounding solution of -38.7037 is better than previous of 3.38991

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -38.7037 to -43.1933 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.1551
Cbc0038I Pass   2: suminf.    2.81884 (8) obj. -46.1551 iterations 10
Cbc0038I Pass   3: suminf.    1.85217 (6) obj. -46.1551 iterations 7
Cbc0038I Pass   4: suminf.    1.52726 (4) obj. -46.1551 iterations 6
Cbc0038I Pass   5: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass   6: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass   7: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass   8: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass   9: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  10: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  11: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  12: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  13: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  14: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  15: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  16: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  17: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  18: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  19: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  20: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  21: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  22: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  23: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  24: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  25: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I Pass  26: suminf.    2.04836 (5) obj. -46.1551 iterations 3
Cbc0038I Pass  27: suminf.    1.12575 (4) obj. -46.1551 iterations 2
Cbc0038I Pass  28: suminf.    1.52726 (4) obj. -46.1551 iterations 7
Cbc0038I Pass  29: suminf.    1.49230 (4) obj. -46.1551 iterations 4
Cbc0038I Pass  30: suminf.    1.18656 (4) obj. -46.1551 iterations 8
Cbc0038I Pass  31: suminf.    1.16486 (4) obj. -46.1551 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -43.1933 - took 0.03 seconds
Cbc0012I Integer solution of -43.19332 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 116 rows 66 columns, reduced to 44 rows 28 columns
Cbc0031I 22 added rows had average density of 43.409091
Cbc0013I At root node, 22 cuts changed objective from -72.810273 to -64.003185 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6195 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1356 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0012I Integer solution of -43.74517 found by rounding after 4867 iterations and 13 nodes (0.48 seconds)
Cbc0012I Integer solution of -43.94186 found by DiveCoefficient after 5120 iterations and 24 nodes (0.50 seconds)
Cbc0001I Search completed - best objective -43.94185999999999, took 5376 iterations and 42 nodes (0.52 seconds)
Cbc0032I Strong branching done 390 times (5737 iterations), fathomed 4 nodes and fixed 32 variables
Cbc0035I Maximum depth 7, 150 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.53

