Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 23 (-24) rows, 14 (-10) columns and 67 (-62) elements
Clp0000I Optimal - objective value 123.83438
Coin0511I After Postsolve, objective 123.83438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.8343839 - 12 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 14 columns (13 integer (13 of which binary)) and 67 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.172%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.87783
Cbc0038I Pass   1: suminf.    0.22222 (1) obj. -91.4444 iterations 6
Cbc0038I Solution found of -74
Cbc0038I Relaxing continuous gives -74
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -79.1663
Cbc0038I Pass   2: suminf.    0.22222 (1) obj. -91.4444 iterations 0
Cbc0038I Pass   3: suminf.    0.06581 (1) obj. -79.1663 iterations 1
Cbc0038I Pass   4: suminf.    0.56447 (3) obj. -79.1663 iterations 3
Cbc0038I Pass   5: suminf.    0.06581 (1) obj. -79.1663 iterations 4
Cbc0038I Pass   6: suminf.    0.54312 (2) obj. -79.1663 iterations 5
Cbc0038I Pass   7: suminf.    0.85820 (3) obj. -79.1663 iterations 3
Cbc0038I Pass   8: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass   9: suminf.    0.45834 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  10: suminf.    0.80231 (4) obj. -79.1663 iterations 2
Cbc0038I Pass  11: suminf.    3.39280 (8) obj. -79.1663 iterations 8
Cbc0038I Pass  12: suminf.    2.95634 (9) obj. -79.1663 iterations 1
Cbc0038I Pass  13: suminf.    2.93002 (9) obj. -79.1663 iterations 2
Cbc0038I Pass  14: suminf.    0.28252 (2) obj. -79.1663 iterations 10
Cbc0038I Pass  15: suminf.    0.21431 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -79.1663 iterations 3
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -79.1663 iterations 0
Cbc0038I Pass  18: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass  19: suminf.    0.32440 (2) obj. -79.1663 iterations 0
Cbc0038I Pass  20: suminf.    1.06668 (4) obj. -79.1663 iterations 2
Cbc0038I Pass  21: suminf.    0.32440 (2) obj. -79.1663 iterations 3
Cbc0038I Pass  22: suminf.    1.25705 (5) obj. -79.1663 iterations 5
Cbc0038I Pass  23: suminf.    0.85820 (3) obj. -79.1663 iterations 2
Cbc0038I Pass  24: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass  25: suminf.    0.45834 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  26: suminf.    3.09040 (8) obj. -79.1663 iterations 9
Cbc0038I Pass  27: suminf.    2.81634 (8) obj. -79.1663 iterations 2
Cbc0038I Pass  28: suminf.    0.22222 (2) obj. -79.1663 iterations 11
Cbc0038I Pass  29: suminf.    0.22222 (2) obj. -79.1663 iterations 0
Cbc0038I Pass  30: suminf.    0.69047 (2) obj. -79.1663 iterations 3
Cbc0038I Pass  31: suminf.    0.22222 (1) obj. -91.4444 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -74 - took 0.01 seconds
Cbc0012I Integer solution of -74 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 5 cuts changed objective from -121.16423 to -84.912734 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -74, took 17 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.06

