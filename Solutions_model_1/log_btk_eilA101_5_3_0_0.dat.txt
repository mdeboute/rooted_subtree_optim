Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 100 (-3) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 1.66955e-05 - average 9.02458e-08, 15 fixed columns
Coin0506I Presolve 153 (-32) rows, 84 (-16) columns and 466 (-96) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 0.2638744 - largest nonzero change 0 ( 0%) - largest zero change 2.916819e-05
Clp0000I Optimal - objective value 48.997165
Clp0000I Optimal - objective value 48.997165
Coin0511I After Postsolve, objective 48.997165, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.997165
Clp0000I Optimal - objective value 48.997165
Clp0000I Optimal - objective value 48.997165
Coin0511I After Postsolve, objective 48.997165, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.99716506 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 100 columns (99 integer (99 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.910%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 12.9567
Cbc0038I Solution found of 3.74119
Cbc0038I Relaxing continuous gives -4.58752
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 111 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -4.58752 to -21.5876 (0.07 seconds)
Cbc0038I Round again with cutoff of -24.3286
Cbc0038I Pass   1: suminf.    4.66497 (32) obj. -24.3286 iterations 71
Cbc0038I Pass   2: suminf.    4.06625 (19) obj. -24.3286 iterations 16
Cbc0038I Pass   3: suminf.    4.06625 (19) obj. -24.3286 iterations 0
Cbc0038I Pass   4: suminf.    3.50620 (13) obj. -24.3286 iterations 20
Cbc0038I Pass   5: suminf.    3.39141 (11) obj. -24.3286 iterations 2
Cbc0038I Pass   6: suminf.    3.12016 (11) obj. -24.3286 iterations 18
Cbc0038I Pass   7: suminf.    2.81738 (9) obj. -24.3286 iterations 6
Cbc0038I Pass   8: suminf.    3.18287 (8) obj. -24.3286 iterations 9
Cbc0038I Pass   9: suminf.    3.18287 (8) obj. -24.3286 iterations 0
Cbc0038I Pass  10: suminf.    2.02057 (6) obj. -24.3286 iterations 8
Cbc0038I Pass  11: suminf.    1.50162 (5) obj. -24.3286 iterations 5
Cbc0038I Pass  12: suminf.    1.28683 (5) obj. -24.3286 iterations 1
Cbc0038I Pass  13: suminf.    1.28683 (5) obj. -24.3286 iterations 0
Cbc0038I Pass  14: suminf.    2.00852 (6) obj. -24.3286 iterations 4
Cbc0038I Pass  15: suminf.    1.75499 (5) obj. -24.3286 iterations 1
Cbc0038I Pass  16: suminf.    1.96258 (5) obj. -24.3286 iterations 2
Cbc0038I Pass  17: suminf.    1.96258 (5) obj. -24.3286 iterations 0
Cbc0038I Pass  18: suminf.    1.75499 (5) obj. -24.3286 iterations 2
Cbc0038I Pass  19: suminf.    4.17932 (12) obj. -24.3286 iterations 21
Cbc0038I Pass  20: suminf.    2.94074 (10) obj. -24.3286 iterations 16
Cbc0038I Pass  21: suminf.    2.74343 (8) obj. -24.3286 iterations 21
Cbc0038I Pass  22: suminf.    2.74343 (8) obj. -24.3286 iterations 0
Cbc0038I Pass  23: suminf.    1.77517 (6) obj. -24.3286 iterations 8
Cbc0038I Pass  24: suminf.    1.45107 (4) obj. -24.3286 iterations 4
Cbc0038I Pass  25: suminf.    1.69125 (4) obj. -24.3286 iterations 4
Cbc0038I Pass  26: suminf.    1.32952 (4) obj. -24.3286 iterations 2
Cbc0038I Pass  27: suminf.    1.69125 (4) obj. -24.3286 iterations 2
Cbc0038I Pass  28: suminf.    2.97267 (11) obj. -24.3286 iterations 27
Cbc0038I Pass  29: suminf.    2.97267 (11) obj. -24.3286 iterations 7
Cbc0038I Pass  30: suminf.    1.90724 (7) obj. -24.3286 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 125 rows 70 columns - 2 fixed gives 108, 67 - ok now
Cbc0038I Full problem 185 rows 100 columns, reduced to 108 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -21.5876 to -21.8915 (0.14 seconds)
Cbc0038I Round again with cutoff of -29.2623
Cbc0038I Pass  30: suminf.    5.58092 (32) obj. -29.2623 iterations 0
Cbc0038I Pass  31: suminf.    5.10883 (26) obj. -29.2623 iterations 15
Cbc0038I Pass  32: suminf.    5.10883 (26) obj. -29.2623 iterations 0
Cbc0038I Pass  33: suminf.    5.53124 (14) obj. -29.2623 iterations 24
Cbc0038I Pass  34: suminf.    4.09539 (12) obj. -29.2623 iterations 13
Cbc0038I Pass  35: suminf.    2.85446 (9) obj. -29.2623 iterations 16
Cbc0038I Pass  36: suminf.    2.49706 (8) obj. -29.2623 iterations 5
Cbc0038I Pass  37: suminf.    3.73150 (11) obj. -29.2623 iterations 11
Cbc0038I Pass  38: suminf.    2.33235 (7) obj. -29.2623 iterations 5
Cbc0038I Pass  39: suminf.    2.24096 (6) obj. -29.2623 iterations 3
Cbc0038I Pass  40: suminf.    2.24096 (6) obj. -29.2623 iterations 1
Cbc0038I Pass  41: suminf.    2.33815 (6) obj. -29.2623 iterations 4
Cbc0038I Pass  42: suminf.    2.32825 (6) obj. -29.2623 iterations 1
Cbc0038I Pass  43: suminf.    2.42633 (6) obj. -29.2623 iterations 3
Cbc0038I Pass  44: suminf.    4.45359 (14) obj. -29.2623 iterations 20
Cbc0038I Pass  45: suminf.    2.30789 (10) obj. -29.2623 iterations 13
Cbc0038I Pass  46: suminf.    2.30789 (10) obj. -29.2623 iterations 2
Cbc0038I Pass  47: suminf.    2.41164 (7) obj. -29.2623 iterations 19
Cbc0038I Pass  48: suminf.    2.24374 (7) obj. -29.2623 iterations 2
Cbc0038I Pass  49: suminf.    2.24374 (7) obj. -29.2623 iterations 1
Cbc0038I Pass  50: suminf.    3.61951 (9) obj. -29.2623 iterations 8
Cbc0038I Pass  51: suminf.    3.61951 (9) obj. -29.2623 iterations 0
Cbc0038I Pass  52: suminf.    2.31501 (8) obj. -29.2623 iterations 9
Cbc0038I Pass  53: suminf.    2.18517 (6) obj. -29.2623 iterations 4
Cbc0038I Pass  54: suminf.    2.09896 (6) obj. -29.2623 iterations 1
Cbc0038I Pass  55: suminf.    2.53976 (6) obj. -29.2623 iterations 4
Cbc0038I Pass  56: suminf.    4.63849 (14) obj. -29.2623 iterations 25
Cbc0038I Pass  57: suminf.    2.88529 (10) obj. -29.2623 iterations 11
Cbc0038I Pass  58: suminf.    2.88529 (10) obj. -29.2623 iterations 2
Cbc0038I Pass  59: suminf.    1.89933 (7) obj. -29.2623 iterations 9
Cbc0038I Rounding solution of -22.0183 is better than previous of -21.8915

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 119 rows 67 columns - 10 fixed gives 87, 57 - ok now
Cbc0038I Full problem 185 rows 100 columns, reduced to 74 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of -35.1828
Cbc0038I Pass  59: suminf.    6.68006 (32) obj. -35.1828 iterations 0
Cbc0038I Pass  60: suminf.    6.46150 (30) obj. -35.1828 iterations 5
Cbc0038I Pass  61: suminf.    6.43117 (26) obj. -35.1828 iterations 6
Cbc0038I Pass  62: suminf.    6.60956 (17) obj. -35.1828 iterations 16
Cbc0038I Pass  63: suminf.    4.06252 (13) obj. -35.1828 iterations 8
Cbc0038I Pass  64: suminf.    3.95576 (12) obj. -35.1828 iterations 3
Cbc0038I Pass  65: suminf.    5.09755 (12) obj. -35.1828 iterations 6
Cbc0038I Pass  66: suminf.    4.53474 (12) obj. -35.1828 iterations 8
Cbc0038I Pass  67: suminf.    4.27276 (12) obj. -35.1828 iterations 2
Cbc0038I Pass  68: suminf.    4.27276 (12) obj. -35.1828 iterations 1
Cbc0038I Pass  69: suminf.    4.91064 (12) obj. -35.1828 iterations 8
Cbc0038I Pass  70: suminf.    4.44696 (14) obj. -35.1828 iterations 8
Cbc0038I Pass  71: suminf.    4.87267 (13) obj. -35.1828 iterations 16
Cbc0038I Pass  72: suminf.    4.08760 (13) obj. -35.1828 iterations 7
Cbc0038I Pass  73: suminf.    4.08760 (13) obj. -35.1828 iterations 1
Cbc0038I Pass  74: suminf.    5.09278 (14) obj. -35.1828 iterations 11
Cbc0038I Pass  75: suminf.    3.96588 (14) obj. -35.1828 iterations 7
Cbc0038I Pass  76: suminf.    3.96588 (14) obj. -35.1828 iterations 1
Cbc0038I Pass  77: suminf.    5.50794 (13) obj. -35.1828 iterations 14
Cbc0038I Pass  78: suminf.    4.27276 (12) obj. -35.1828 iterations 7
Cbc0038I Pass  79: suminf.    4.27276 (12) obj. -35.1828 iterations 1
Cbc0038I Pass  80: suminf.    4.91064 (12) obj. -35.1828 iterations 8
Cbc0038I Pass  81: suminf.    4.44696 (14) obj. -35.1828 iterations 8
Cbc0038I Pass  82: suminf.    4.87267 (13) obj. -35.1828 iterations 16
Cbc0038I Pass  83: suminf.    4.08760 (13) obj. -35.1828 iterations 7
Cbc0038I Pass  84: suminf.    4.08760 (13) obj. -35.1828 iterations 1
Cbc0038I Pass  85: suminf.    5.63418 (13) obj. -35.1828 iterations 13
Cbc0038I Pass  86: suminf.    4.44810 (14) obj. -35.1828 iterations 11
Cbc0038I Pass  87: suminf.    4.44696 (14) obj. -35.1828 iterations 3
Cbc0038I Pass  88: suminf.    4.87267 (13) obj. -35.1828 iterations 16
Cbc0038I Rounding solution of -22.7438 is better than previous of -22.0183

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 113 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I Round again with cutoff of -39.3271
Cbc0038I Pass  88: suminf.    7.44497 (32) obj. -39.3271 iterations 1
Cbc0038I Pass  89: suminf.    7.30013 (26) obj. -39.3271 iterations 9
Cbc0038I Pass  90: suminf.    6.99881 (22) obj. -39.3271 iterations 6
Cbc0038I Pass  91: suminf.    6.95406 (20) obj. -39.3271 iterations 4
Cbc0038I Pass  92: suminf.    6.95406 (20) obj. -39.3271 iterations 1
Cbc0038I Pass  93: suminf.    6.22932 (20) obj. -39.3271 iterations 19
Cbc0038I Pass  94: suminf.    5.04589 (15) obj. -39.3271 iterations 9
Cbc0038I Pass  95: suminf.    4.89462 (14) obj. -39.3271 iterations 6
Cbc0038I Pass  96: suminf.    5.75580 (15) obj. -39.3271 iterations 10
Cbc0038I Pass  97: suminf.    5.05597 (17) obj. -39.3271 iterations 10
Cbc0038I Pass  98: suminf.    5.05142 (15) obj. -39.3271 iterations 2
Cbc0038I Pass  99: suminf.    5.05414 (17) obj. -39.3271 iterations 12
Cbc0038I Pass 100: suminf.    4.89462 (14) obj. -39.3271 iterations 9
Cbc0038I Pass 101: suminf.    5.75580 (15) obj. -39.3271 iterations 10
Cbc0038I Pass 102: suminf.    5.05597 (17) obj. -39.3271 iterations 10
Cbc0038I Pass 103: suminf.    5.05142 (15) obj. -39.3271 iterations 2
Cbc0038I Pass 104: suminf.    4.89938 (15) obj. -39.3271 iterations 11
Cbc0038I Pass 105: suminf.    4.89462 (14) obj. -39.3271 iterations 3
Cbc0038I Pass 106: suminf.    5.75580 (15) obj. -39.3271 iterations 10
Cbc0038I Pass 107: suminf.    5.05597 (17) obj. -39.3271 iterations 10
Cbc0038I Pass 108: suminf.    5.05142 (15) obj. -39.3271 iterations 2
Cbc0038I Pass 109: suminf.    5.05414 (17) obj. -39.3271 iterations 12
Cbc0038I Pass 110: suminf.    4.89462 (14) obj. -39.3271 iterations 9
Cbc0038I Pass 111: suminf.    5.75580 (15) obj. -39.3271 iterations 10
Cbc0038I Pass 112: suminf.    5.05597 (17) obj. -39.3271 iterations 10
Cbc0038I Pass 113: suminf.    5.05142 (15) obj. -39.3271 iterations 2
Cbc0038I Pass 114: suminf.    5.05414 (17) obj. -39.3271 iterations 12
Cbc0038I Pass 115: suminf.    4.89462 (14) obj. -39.3271 iterations 9
Cbc0038I Pass 116: suminf.    5.75580 (15) obj. -39.3271 iterations 10
Cbc0038I Pass 117: suminf.    5.05597 (17) obj. -39.3271 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 100 columns, reduced to 115 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -22.7438 - took 0.28 seconds
Cbc0012I Integer solution of -22.86775 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 113 rows 64 columns
Cbc0012I Integer solution of -23.04843 found by RINS after 0 iterations and 0 nodes (0.37 seconds)
Cbc0031I 34 added rows had average density of 69.176471
Cbc0013I At root node, 34 cuts changed objective from -48.997165 to -42.064294 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23676 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3538 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.04843 best solution, best possible -42.064294 (1.92 seconds)
Cbc0038I Full problem 185 rows 100 columns, reduced to 60 rows 38 columns
Cbc0012I Integer solution of -23.43784 found by RINS after 13185 iterations and 41 nodes (2.24 seconds)
Cbc0001I Search completed - best objective -23.43784000000001, took 14959 iterations and 94 nodes (2.36 seconds)
Cbc0032I Strong branching done 1078 times (23670 iterations), fathomed 4 nodes and fixed 29 variables
Cbc0035I Maximum depth 39, 103 variables fixed on reduced cost
Total time (CPU seconds):       2.31   (Wallclock seconds):       2.38

