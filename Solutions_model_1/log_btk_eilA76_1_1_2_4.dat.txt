Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 72 (-6) columns and 397 (-56) elements
Clp1000I sum of infeasibilities 3.17378e-05 - average 2.44137e-07, 13 fixed columns
Coin0506I Presolve 104 (-26) rows, 58 (-14) columns and 317 (-80) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 0.29449888 - largest nonzero change 0 ( 0%) - largest zero change 2.8791164e-05
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Coin0511I After Postsolve, objective 42.387424, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Coin0511I After Postsolve, objective 42.387424, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.38742412 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 72 columns (71 integer (71 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.226%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.2103
Cbc0038I Solution found of 9.75966
Cbc0038I Relaxing continuous gives -1.01161
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -1.01161 to -11.1922 (0.05 seconds)
Cbc0038I Round again with cutoff of -14.3118
Cbc0038I Pass   1: suminf.    2.43320 (38) obj. -14.3118 iterations 41
Cbc0038I Pass   2: suminf.    1.46956 (5) obj. -14.3118 iterations 42
Cbc0038I Pass   3: suminf.    1.06352 (4) obj. -14.3118 iterations 5
Cbc0038I Pass   4: suminf.    1.03393 (5) obj. -14.3118 iterations 18
Cbc0038I Pass   5: suminf.    1.03393 (5) obj. -14.3118 iterations 0
Cbc0038I Pass   6: suminf.    1.45957 (4) obj. -14.3118 iterations 7
Cbc0038I Pass   7: suminf.    0.88752 (4) obj. -14.3118 iterations 5
Cbc0038I Pass   8: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass   9: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  10: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  11: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  12: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  13: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  14: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  15: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  16: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  17: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  18: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  19: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  20: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  21: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  22: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  23: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  24: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  25: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  26: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  27: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  28: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  29: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  30: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.1922 - took 0.08 seconds
Cbc0012I Integer solution of -11.19216 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 130 rows 72 columns, reduced to 63 rows 36 columns
Cbc0012I Integer solution of -11.204414 found by RINS after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 20 added rows had average density of 41.45
Cbc0013I At root node, 20 cuts changed objective from -42.387424 to -32.869981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7663 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1087 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 11 nodes, 4 on tree, -11.204414 best solution, best possible -32.869981 (0.68 seconds)
Cbc0012I Integer solution of -11.2997 found by rounding after 6448 iterations and 23 nodes (0.72 seconds)
Cbc0016I Integer solution of -11.57281 found by strong branching after 6546 iterations and 27 nodes (0.73 seconds)
Cbc0038I Full problem 130 rows 72 columns, reduced to 26 rows 16 columns
Cbc0012I Integer solution of -11.61665 found by rounding after 7310 iterations and 51 nodes (0.78 seconds)
Cbc0004I Integer solution of -12.34517 found after 7447 iterations and 62 nodes (0.80 seconds)
Cbc0012I Integer solution of -12.47289 found by rounding after 7471 iterations and 64 nodes (0.80 seconds)
Cbc0016I Integer solution of -12.51796 found by strong branching after 7549 iterations and 67 nodes (0.81 seconds)
Cbc0001I Search completed - best objective -12.51796, took 8376 iterations and 92 nodes (0.89 seconds)
Cbc0032I Strong branching done 922 times (11173 iterations), fathomed 9 nodes and fixed 69 variables
Cbc0035I Maximum depth 12, 419 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.90

