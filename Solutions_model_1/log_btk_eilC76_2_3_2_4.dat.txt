Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 5.71855e-06 - average 4.17412e-08, 14 fixed columns
Coin0506I Presolve 106 (-31) rows, 62 (-14) columns and 329 (-89) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.6315351 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 29.450102
Clp0000I Optimal - objective value 29.450102
Coin0511I After Postsolve, objective 29.450102, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 29.450102
Clp0000I Optimal - objective value 29.450102
Clp0000I Optimal - objective value 29.450102
Coin0511I After Postsolve, objective 29.450102, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 29.45010192 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.93457
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.30018 iterations 50
Cbc0038I Solution found of 4.30018
Cbc0038I Relaxing continuous gives 4.30018
Cbc0038I Rounding solution of -1.58096 is better than previous of 4.30018

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 64 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -1.58096 to -4.78414 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.25082
Cbc0038I Pass   2: suminf.    1.40360 (14) obj. -7.25082 iterations 22
Cbc0038I Pass   3: suminf.    1.39327 (17) obj. -7.25082 iterations 4
Cbc0038I Pass   4: suminf.    0.83717 (5) obj. -7.25082 iterations 20
Cbc0038I Pass   5: suminf.    0.61406 (4) obj. -7.25082 iterations 1
Cbc0038I Pass   6: suminf.    1.32111 (5) obj. -7.25082 iterations 9
Cbc0038I Pass   7: suminf.    1.32111 (5) obj. -7.25082 iterations 1
Cbc0038I Pass   8: suminf.    1.67089 (5) obj. -7.25082 iterations 11
Cbc0038I Pass   9: suminf.    1.67089 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  10: suminf.    2.06168 (5) obj. -7.25082 iterations 8
Cbc0038I Pass  11: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  12: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  13: suminf.    1.67089 (5) obj. -7.25082 iterations 9
Cbc0038I Pass  14: suminf.    1.67089 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  15: suminf.    2.06168 (5) obj. -7.25082 iterations 8
Cbc0038I Pass  16: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  17: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  18: suminf.    1.67089 (5) obj. -7.25082 iterations 9
Cbc0038I Pass  19: suminf.    1.67089 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  20: suminf.    2.06168 (5) obj. -7.25082 iterations 8
Cbc0038I Pass  21: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  22: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  23: suminf.    1.67089 (5) obj. -7.25082 iterations 9
Cbc0038I Pass  24: suminf.    1.67089 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  25: suminf.    2.06168 (5) obj. -7.25082 iterations 8
Cbc0038I Pass  26: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  27: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  28: suminf.    1.67089 (5) obj. -7.25082 iterations 9
Cbc0038I Pass  29: suminf.    1.67089 (5) obj. -7.25082 iterations 1
Cbc0038I Pass  30: suminf.    2.06168 (5) obj. -7.25082 iterations 8
Cbc0038I Pass  31: suminf.    1.72155 (5) obj. -7.25082 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -4.78414 - took 0.08 seconds
Cbc0012I Integer solution of -4.7841372 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 64 rows 39 columns
Cbc0031I 28 added rows had average density of 48.071429
Cbc0013I At root node, 28 cuts changed objective from -29.450102 to -22.284385 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11832 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1998 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.7841372 best solution, best possible -22.284385 (0.86 seconds)
Cbc0004I Integer solution of -4.78518 found after 7644 iterations and 32 nodes (1.05 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 3 rows 7 columns
Cbc0012I Integer solution of -5.4467672 found by RINS after 7748 iterations and 41 nodes (1.06 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 2 rows 5 columns
Cbc0001I Search completed - best objective -5.446767199999996, took 9480 iterations and 122 nodes (1.18 seconds)
Cbc0032I Strong branching done 884 times (14861 iterations), fathomed 19 nodes and fixed 64 variables
Cbc0035I Maximum depth 17, 512 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.19

