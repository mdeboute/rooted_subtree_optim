Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 503 (-24) rows, 261 (-3) columns and 1497 (-48) elements
Clp1000I sum of infeasibilities 7.54917e-05 - average 1.50083e-07, 136 fixed columns
Coin0506I Presolve 221 (-282) rows, 118 (-143) columns and 656 (-841) elements
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 0.17319412 - largest nonzero change 0 ( 0%) - largest zero change 2.9365872e-05
Clp0000I Optimal - objective value 172.59475
Clp0000I Optimal - objective value 172.59475
Coin0511I After Postsolve, objective 172.59475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13324466 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 172.59475
Clp0000I Optimal - objective value 172.59475
Clp0000I Optimal - objective value 172.59475
Coin0511I After Postsolve, objective 172.59475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 172.5947479 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 503 rows, 261 columns (260 integer (260 of which binary)) and 1497 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 11.4908
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.41514 iterations 207
Cbc0038I Solution found of -2.41514
Cbc0038I Relaxing continuous gives -2.41514
Cbc0038I Rounding solution of -30.4643 is better than previous of -2.41514

Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 261 columns, reduced to 119 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -30.4643 to -104.718 (0.15 seconds)
Cbc0038I Round again with cutoff of -111.505
Cbc0038I Pass   2: suminf.    4.61477 (23) obj. -111.505 iterations 56
Cbc0038I Pass   3: suminf.    1.57553 (7) obj. -111.505 iterations 48
Cbc0038I Pass   4: suminf.    1.23814 (6) obj. -111.505 iterations 21
Cbc0038I Pass   5: suminf.    2.19336 (7) obj. -111.505 iterations 23
Cbc0038I Pass   6: suminf.    2.15996 (6) obj. -111.505 iterations 1
Cbc0038I Pass   7: suminf.    1.85375 (6) obj. -111.505 iterations 22
Cbc0038I Pass   8: suminf.    1.74376 (6) obj. -111.505 iterations 7
Cbc0038I Pass   9: suminf.    1.49058 (5) obj. -111.505 iterations 15
Cbc0038I Pass  10: suminf.    1.36721 (5) obj. -111.505 iterations 2
Cbc0038I Pass  11: suminf.    2.49753 (6) obj. -111.505 iterations 27
Cbc0038I Pass  12: suminf.    2.22689 (7) obj. -111.505 iterations 9
Cbc0038I Pass  13: suminf.    2.18101 (6) obj. -111.505 iterations 1
Cbc0038I Pass  14: suminf.    1.77435 (5) obj. -111.505 iterations 13
Cbc0038I Pass  15: suminf.    1.20560 (6) obj. -111.505 iterations 4
Cbc0038I Pass  16: suminf.    2.19336 (7) obj. -111.505 iterations 23
Cbc0038I Pass  17: suminf.    2.15996 (6) obj. -111.505 iterations 1
Cbc0038I Pass  18: suminf.    1.85375 (6) obj. -111.505 iterations 22
Cbc0038I Pass  19: suminf.    1.74376 (6) obj. -111.505 iterations 7
Cbc0038I Pass  20: suminf.    1.49058 (5) obj. -111.505 iterations 15
Cbc0038I Pass  21: suminf.    1.36721 (5) obj. -111.505 iterations 2
Cbc0038I Pass  22: suminf.    2.49753 (6) obj. -111.505 iterations 27
Cbc0038I Pass  23: suminf.    2.22689 (7) obj. -111.505 iterations 9
Cbc0038I Pass  24: suminf.    2.18101 (6) obj. -111.505 iterations 1
Cbc0038I Pass  25: suminf.    1.77435 (5) obj. -111.505 iterations 13
Cbc0038I Pass  26: suminf.    1.20560 (6) obj. -111.505 iterations 4
Cbc0038I Pass  27: suminf.    2.19336 (7) obj. -111.505 iterations 23
Cbc0038I Pass  28: suminf.    2.15996 (6) obj. -111.505 iterations 1
Cbc0038I Pass  29: suminf.    1.85375 (6) obj. -111.505 iterations 22
Cbc0038I Pass  30: suminf.    1.74376 (6) obj. -111.505 iterations 7
Cbc0038I Pass  31: suminf.    1.49058 (5) obj. -111.505 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 261 columns, reduced to 141 rows 77 columns
Cbc0038I Mini branch and bound improved solution from -104.718 to -106.023 (0.30 seconds)
Cbc0038I Round again with cutoff of -123.723
Cbc0038I Pass  31: suminf.    5.20963 (27) obj. -123.723 iterations 3
Cbc0038I Pass  32: suminf.    3.82197 (11) obj. -123.723 iterations 45
Cbc0038I Pass  33: suminf.    2.45803 (8) obj. -123.723 iterations 18
Cbc0038I Pass  34: suminf.    2.18421 (8) obj. -123.723 iterations 15
Cbc0038I Pass  35: suminf.    2.72887 (8) obj. -123.723 iterations 27
Cbc0038I Pass  36: suminf.    2.29085 (9) obj. -123.723 iterations 21
Cbc0038I Pass  37: suminf.    3.93263 (10) obj. -123.723 iterations 28
Cbc0038I Pass  38: suminf.    2.96997 (10) obj. -123.723 iterations 12
Cbc0038I Pass  39: suminf.    2.69105 (8) obj. -123.723 iterations 13
Cbc0038I Pass  40: suminf.    2.46355 (9) obj. -123.723 iterations 25
Cbc0038I Pass  41: suminf.    2.29085 (9) obj. -123.723 iterations 6
Cbc0038I Pass  42: suminf.    3.93263 (10) obj. -123.723 iterations 28
Cbc0038I Pass  43: suminf.    2.96997 (10) obj. -123.723 iterations 12
Cbc0038I Pass  44: suminf.    2.69105 (8) obj. -123.723 iterations 13
Cbc0038I Pass  45: suminf.    2.46355 (9) obj. -123.723 iterations 35
Cbc0038I Pass  46: suminf.    2.29085 (9) obj. -123.723 iterations 6
Cbc0038I Pass  47: suminf.    3.93263 (10) obj. -123.723 iterations 28
Cbc0038I Pass  48: suminf.    2.96997 (10) obj. -123.723 iterations 12
Cbc0038I Pass  49: suminf.    2.69105 (8) obj. -123.723 iterations 13
Cbc0038I Pass  50: suminf.    2.46355 (9) obj. -123.723 iterations 35
Cbc0038I Pass  51: suminf.    2.29085 (9) obj. -123.723 iterations 6
Cbc0038I Pass  52: suminf.    3.93263 (10) obj. -123.723 iterations 28
Cbc0038I Pass  53: suminf.    2.96997 (10) obj. -123.723 iterations 12
Cbc0038I Pass  54: suminf.    2.69105 (8) obj. -123.723 iterations 13
Cbc0038I Pass  55: suminf.    2.46355 (9) obj. -123.723 iterations 36
Cbc0038I Pass  56: suminf.    2.29085 (9) obj. -123.723 iterations 6
Cbc0038I Pass  57: suminf.    3.93263 (10) obj. -123.723 iterations 29
Cbc0038I Pass  58: suminf.    2.96997 (10) obj. -123.723 iterations 12
Cbc0038I Pass  59: suminf.    2.69105 (8) obj. -123.723 iterations 13
Cbc0038I Pass  60: suminf.    2.46355 (9) obj. -123.723 iterations 35
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 261 columns, reduced to 143 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of -106.023 - took 0.40 seconds
Cbc0012I Integer solution of -106.0232 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 503 rows 261 columns, reduced to 121 rows 67 columns
Cbc0031I 36 added rows had average density of 158.13889
Cbc0013I At root node, 36 cuts changed objective from -172.59475 to -157.575 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34839 row cuts average 3.4 elements, 1 column cuts (1 active)  in 1.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3236 row cuts average 256.9 elements, 0 column cuts (0 active)  in 1.041 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.116 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 252.4 elements, 0 column cuts (0 active)  in 0.493 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -106.0232 best solution, best possible -157.575 (11.70 seconds)
Cbc0010I After 4 nodes, 5 on tree, -106.0232 best solution, best possible -157.575 (12.59 seconds)
Cbc0010I After 11 nodes, 10 on tree, -106.0232 best solution, best possible -157.575 (13.32 seconds)
Cbc0038I Full problem 503 rows 261 columns, reduced to 3 rows 7 columns
Cbc0012I Integer solution of -107.38402 found by RINS after 21094 iterations and 41 nodes (13.93 seconds)
Cbc0012I Integer solution of -108.03514 found by rounding after 21216 iterations and 44 nodes (13.96 seconds)
Cbc0010I After 53 nodes, 10 on tree, -108.03514 best solution, best possible -157.575 (14.02 seconds)
Cbc0038I Full problem 503 rows 261 columns, reduced to 16 rows 14 columns
Cbc0010I After 105 nodes, 10 on tree, -108.03514 best solution, best possible -157.575 (14.73 seconds)
Cbc0010I After 142 nodes, 15 on tree, -108.03514 best solution, best possible -157.575 (15.43 seconds)
Cbc0038I Full problem 503 rows 261 columns, reduced to 25 rows 21 columns
Cbc0010I After 212 nodes, 10 on tree, -108.03514 best solution, best possible -157.575 (16.15 seconds)
Cbc0012I Integer solution of -108.5557 found by rounding after 31357 iterations and 243 nodes (16.64 seconds)
Cbc0010I After 263 nodes, 7 on tree, -108.5557 best solution, best possible -157.575 (16.86 seconds)
Cbc0001I Search completed - best objective -108.555699, took 33564 iterations and 298 nodes (17.25 seconds)
Cbc0032I Strong branching done 2504 times (61807 iterations), fathomed 51 nodes and fixed 170 variables
Cbc0035I Maximum depth 59, 1782 variables fixed on reduced cost
Total time (CPU seconds):       16.43   (Wallclock seconds):       17.36

