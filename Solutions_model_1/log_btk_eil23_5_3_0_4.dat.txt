Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 19 (-30) rows, 12 (-13) columns and 38 (-97) elements
Clp0000I Optimal - objective value 104.23365
Coin0511I After Postsolve, objective 104.23365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.2336461 - 7 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 19 rows, 12 columns (11 integer (11 of which binary)) and 38 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.429073
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44 iterations 6
Cbc0038I Solution found of -44
Cbc0038I Relaxing continuous gives -44
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 12 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -50.0235
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.03916 (1) obj. -50.0235 iterations 1
Cbc0038I Pass   3: suminf.    0.33003 (1) obj. -50.0235 iterations 1
Cbc0038I Pass   4: suminf.    0.52323 (2) obj. -50.0235 iterations 2
Cbc0038I Pass   5: suminf.    0.45289 (3) obj. -50.0235 iterations 1
Cbc0038I Pass   6: suminf.    0.44143 (1) obj. -50.0235 iterations 4
Cbc0038I Pass   7: suminf.    0.20059 (1) obj. -50.0235 iterations 1
Cbc0038I Pass   8: suminf.    0.18108 (1) obj. -50.0235 iterations 3
Cbc0038I Pass   9: suminf.    0.18108 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  10: suminf.    0.46550 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  11: suminf.    0.54835 (2) obj. -50.0235 iterations 3
Cbc0038I Pass  12: suminf.    0.47801 (3) obj. -50.0235 iterations 2
Cbc0038I Pass  13: suminf.    0.43626 (1) obj. -50.0235 iterations 4
Cbc0038I Pass  14: suminf.    0.20600 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  15: suminf.    0.20600 (1) obj. -50.0235 iterations 4
Cbc0038I Pass  16: suminf.    0.20600 (1) obj. -50.0235 iterations 3
Cbc0038I Pass  17: suminf.    1.00162 (6) obj. -50.0235 iterations 4
Cbc0038I Pass  18: suminf.    0.46004 (1) obj. -50.0235 iterations 9
Cbc0038I Pass  19: suminf.    0.18108 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  20: suminf.    0.18108 (1) obj. -50.0235 iterations 0
Cbc0038I Pass  21: suminf.    0.06407 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  22: suminf.    0.06407 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  23: suminf.    0.42827 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  24: suminf.    0.42827 (1) obj. -50.0235 iterations 0
Cbc0038I Pass  25: suminf.    0.42827 (1) obj. -50.0235 iterations 0
Cbc0038I Pass  26: suminf.    0.43626 (1) obj. -50.0235 iterations 2
Cbc0038I Pass  27: suminf.    0.20600 (1) obj. -50.0235 iterations 2
Cbc0038I Pass  28: suminf.    0.43626 (1) obj. -50.0235 iterations 1
Cbc0038I Pass  29: suminf.    0.98621 (4) obj. -50.0235 iterations 3
Cbc0038I Pass  30: suminf.    0.73916 (3) obj. -50.0235 iterations 2
Cbc0038I Pass  31: suminf.    0.32457 (1) obj. -50.0235 iterations 4
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 12 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -60.8655
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.10964 (1) obj. -60.8655 iterations 0
Cbc0038I Pass  32: suminf.    0.39731 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  33: suminf.    0.39690 (1) obj. -60.8655 iterations 3
Cbc0038I Pass  34: suminf.    0.32524 (1) obj. -60.8655 iterations 2
Cbc0038I Pass  35: suminf.    0.39690 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  36: suminf.    0.39690 (1) obj. -60.8655 iterations 0
Cbc0038I Pass  37: suminf.    0.39173 (1) obj. -60.8655 iterations 2
Cbc0038I Pass  38: suminf.    0.33065 (1) obj. -60.8655 iterations 2
Cbc0038I Pass  39: suminf.    0.39173 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  40: suminf.    0.39173 (1) obj. -60.8655 iterations 0
Cbc0038I Pass  41: suminf.    0.33065 (1) obj. -60.8655 iterations 4
Cbc0038I Pass  42: suminf.    0.62485 (3) obj. -60.8655 iterations 5
Cbc0038I Pass  43: suminf.    0.62485 (3) obj. -60.8655 iterations 2
Cbc0038I Pass  44: suminf.    0.39277 (1) obj. -60.8655 iterations 4
Cbc0038I Pass  45: suminf.    0.25156 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  46: suminf.    0.23206 (1) obj. -60.8655 iterations 2
Cbc0038I Pass  47: suminf.    0.48584 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  48: suminf.    0.23206 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  49: suminf.    0.24615 (1) obj. -60.8655 iterations 5
Cbc0038I Pass  50: suminf.    0.39794 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  51: suminf.    0.24615 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  52: suminf.    0.27107 (1) obj. -60.8655 iterations 2
Cbc0038I Pass  53: suminf.    0.37415 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  54: suminf.    0.27107 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  55: suminf.    1.00753 (4) obj. -60.8655 iterations 11
Cbc0038I Pass  56: suminf.    0.64377 (2) obj. -60.8655 iterations 5
Cbc0038I Pass  57: suminf.    0.35657 (1) obj. -60.8655 iterations 3
Cbc0038I Pass  58: suminf.    0.28948 (1) obj. -60.8655 iterations 1
Cbc0038I Pass  59: suminf.    0.23206 (1) obj. -60.8655 iterations 4
Cbc0038I Pass  60: suminf.    0.48584 (1) obj. -60.8655 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 12 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -44 - took 0.01 seconds
Cbc0012I Integer solution of -44.000003 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 12 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -104.23365 to -104.23365 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -44.00000299999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

