Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-21) rows, 21 (-4) columns and 90 (-45) elements
Clp1000I sum of infeasibilities 0 - average 0, 17 fixed columns
Coin0506I Presolve 3 (-25) rows, 3 (-18) columns and 6 (-84) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 5582.3844
Clp0000I Optimal - objective value 5582.3844
Coin0511I After Postsolve, objective 5582.3844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 5582.3844
Clp0000I Optimal - objective value 5582.3844
Clp0000I Optimal - objective value 5582.3844
Coin0511I After Postsolve, objective 5582.3844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5582.384432 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 21 columns (20 integer (20 of which binary)) and 90 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.431374
Cbc0038I Pass   1: suminf.    0.12048 (1) obj. -5507.25 iterations 1
Cbc0038I Solution found of -67.868
Cbc0038I Relaxing continuous gives -81.88
Cbc0038I Rounding solution of -358.822 is better than previous of -81.88

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -874.637
Cbc0038I Pass   2: suminf.    0.12048 (1) obj. -5507.25 iterations 0
Cbc0038I Pass   3: suminf.    0.12818 (1) obj. -874.637 iterations 2
Cbc0038I Pass   4: suminf.    0.04734 (1) obj. -874.637 iterations 8
Cbc0038I Pass   5: suminf.    0.04734 (1) obj. -874.637 iterations 2
Cbc0038I Pass   6: suminf.    0.29398 (1) obj. -4948.24 iterations 1
Cbc0038I Pass   7: suminf.    0.47325 (1) obj. -3820.18 iterations 6
Cbc0038I Pass   8: suminf.    0.47325 (1) obj. -3820.18 iterations 1
Cbc0038I Pass   9: suminf.    0.05047 (1) obj. -874.637 iterations 1
Cbc0038I Pass  10: suminf.    0.06931 (1) obj. -874.637 iterations 4
Cbc0038I Pass  11: suminf.    0.06931 (1) obj. -874.637 iterations 1
Cbc0038I Pass  12: suminf.    0.45518 (1) obj. -3815.4 iterations 1
Cbc0038I Pass  13: suminf.    0.47855 (1) obj. -3758.62 iterations 4
Cbc0038I Pass  14: suminf.    0.01223 (1) obj. -874.637 iterations 1
Cbc0038I Pass  15: suminf.    0.47855 (1) obj. -3758.62 iterations 1
Cbc0038I Pass  16: suminf.    0.46892 (1) obj. -3680.08 iterations 8
Cbc0038I Pass  17: suminf.    0.01529 (1) obj. -874.637 iterations 1
Cbc0038I Pass  18: suminf.    0.46892 (1) obj. -3680.08 iterations 1
Cbc0038I Pass  19: suminf.    0.36627 (1) obj. -4479.95 iterations 3
Cbc0038I Pass  20: suminf.    0.05078 (1) obj. -874.637 iterations 1
Cbc0038I Pass  21: suminf.    0.36627 (1) obj. -4479.95 iterations 1
Cbc0038I Pass  22: suminf.    0.47108 (1) obj. -3575.18 iterations 2
Cbc0038I Pass  23: suminf.    0.03442 (1) obj. -874.637 iterations 1
Cbc0038I Pass  24: suminf.    0.47108 (1) obj. -3575.18 iterations 1
Cbc0038I Pass  25: suminf.    0.71396 (2) obj. -3334.07 iterations 3
Cbc0038I Pass  26: suminf.    0.27727 (1) obj. -917.404 iterations 1
Cbc0038I Pass  27: suminf.    0.01519 (1) obj. -874.637 iterations 2
Cbc0038I Pass  28: suminf.    0.42072 (1) obj. -3382.65 iterations 1
Cbc0038I Pass  29: suminf.    0.39301 (1) obj. -3422.65 iterations 9
Cbc0038I Solution found of -992.063
Cbc0038I Relaxing continuous gives -992.063
Cbc0038I Rounding solution of -1578.08 is better than previous of -992.063

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2365.86
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.12048 (1) obj. -5507.25 iterations 0
Cbc0038I Pass  31: suminf.    0.36931 (1) obj. -2365.86 iterations 2
Cbc0038I Pass  32: suminf.    0.36077 (1) obj. -2365.86 iterations 2
Cbc0038I Pass  33: suminf.    0.17470 (1) obj. -5238.75 iterations 1
Cbc0038I Pass  34: suminf.    0.36077 (1) obj. -2365.86 iterations 1
Cbc0038I Pass  35: suminf.    0.31343 (1) obj. -2365.86 iterations 5
Cbc0038I Pass  36: suminf.    0.31343 (1) obj. -2365.86 iterations 1
Cbc0038I Pass  37: suminf.    0.30337 (1) obj. -4735.76 iterations 1
Cbc0038I Pass  38: suminf.    0.38554 (1) obj. -4634.17 iterations 8
Cbc0038I Pass  39: suminf.    0.24768 (1) obj. -2365.86 iterations 1
Cbc0038I Pass  40: suminf.    0.38554 (1) obj. -4634.17 iterations 1
Cbc0038I Pass  41: suminf.    0.32128 (2) obj. -2365.86 iterations 7
Cbc0038I Pass  42: suminf.    0.32128 (2) obj. -2365.86 iterations 1
Cbc0038I Pass  43: suminf.    0.45783 (1) obj. -3685.45 iterations 1
Cbc0038I Pass  44: suminf.    0.24446 (1) obj. -2365.86 iterations 1
Cbc0038I Pass  45: suminf.    0.47226 (2) obj. -2365.86 iterations 7
Cbc0038I Pass  46: suminf.    0.34241 (1) obj. -3137.62 iterations 2
Cbc0038I Pass  47: suminf.    0.21762 (1) obj. -2365.86 iterations 1
Cbc0038I Pass  48: suminf.    0.17999 (1) obj. -2365.86 iterations 5
Cbc0038I Pass  49: suminf.    0.17999 (1) obj. -2365.86 iterations 2
Cbc0038I Pass  50: suminf.    0.36048 (1) obj. -3482.08 iterations 1
Cbc0038I Pass  51: suminf.    0.23614 (1) obj. -2930.79 iterations 2
Cbc0038I Pass  52: suminf.    0.14480 (1) obj. -2365.86 iterations 1
Cbc0038I Pass  53: suminf.    0.23614 (1) obj. -2930.79 iterations 1
Cbc0038I Pass  54: suminf.    0.38072 (1) obj. -3348.81 iterations 4
Cbc0038I Pass  55: suminf.    0.22178 (1) obj. -2365.86 iterations 3
Cbc0038I Pass  56: suminf.    0.38072 (1) obj. -3348.81 iterations 1
Cbc0038I Pass  57: suminf.    0.25633 (1) obj. -2365.86 iterations 5
Cbc0038I Pass  58: suminf.    0.40482 (1) obj. -3284.21 iterations 1
Cbc0038I Pass  59: suminf.    0.25633 (1) obj. -2365.86 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 21 columns, reduced to 23 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -992.063 to -1616.64 (0.02 seconds)
Cbc0038I Round again with cutoff of -3311.19
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.12048 (1) obj. -5507.25 iterations 0
Cbc0038I Pass  60: suminf.    0.47784 (1) obj. -3311.19 iterations 2
Cbc0038I Pass  61: suminf.    0.56808 (2) obj. -3311.19 iterations 8
Cbc0038I Pass  62: suminf.    0.56808 (2) obj. -3311.19 iterations 3
Cbc0038I Pass  63: suminf.    0.45841 (1) obj. -3311.19 iterations 2
Cbc0038I Pass  64: suminf.    0.24096 (1) obj. -4655.97 iterations 1
Cbc0038I Pass  65: suminf.    0.81803 (2) obj. -3311.19 iterations 4
Cbc0038I Pass  66: suminf.    0.81803 (2) obj. -3311.19 iterations 0
Cbc0038I Pass  67: suminf.    0.32627 (1) obj. -4304.71 iterations 1
Cbc0038I Pass  68: suminf.    0.48691 (1) obj. -3311.19 iterations 1
Cbc0038I Pass  69: suminf.    0.48691 (1) obj. -3311.19 iterations 1
Cbc0038I Pass  70: suminf.    0.32627 (1) obj. -4304.71 iterations 1
Cbc0038I Pass  71: suminf.    0.48691 (1) obj. -3311.19 iterations 1
Cbc0038I Pass  72: suminf.    0.44979 (1) obj. -3311.19 iterations 3
Cbc0038I Pass  73: suminf.    0.46482 (1) obj. -3839.3 iterations 1
Cbc0038I Pass  74: suminf.    0.44979 (1) obj. -3311.19 iterations 1
Cbc0038I Pass  75: suminf.    0.49797 (1) obj. -3311.19 iterations 5
Cbc0038I Pass  76: suminf.    0.31928 (1) obj. -4441.41 iterations 1
Cbc0038I Pass  77: suminf.    0.49797 (1) obj. -3311.19 iterations 1
Cbc0038I Pass  78: suminf.    0.66251 (2) obj. -3311.19 iterations 3
Cbc0038I Pass  79: suminf.    0.44749 (1) obj. -3311.19 iterations 2
Cbc0038I Pass  80: suminf.    0.50000 (1) obj. -3635.97 iterations 1
Cbc0038I Pass  81: suminf.    0.70093 (2) obj. -3311.19 iterations 6
Cbc0038I Pass  82: suminf.    0.49614 (1) obj. -3840.96 iterations 1
Cbc0038I Pass  83: suminf.    0.41820 (1) obj. -3311.19 iterations 1
Cbc0038I Pass  84: suminf.    0.68447 (2) obj. -3311.19 iterations 4
Cbc0038I Pass  85: suminf.    0.41772 (1) obj. -3311.19 iterations 3
Cbc0038I Pass  86: suminf.    0.44964 (1) obj. -3508.59 iterations 1
Cbc0038I Pass  87: suminf.    0.44842 (1) obj. -3311.19 iterations 5
Cbc0038I Pass  88: suminf.    0.44842 (1) obj. -3311.19 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1616.64 - took 0.02 seconds
Cbc0012I Integer solution of -1616.6431 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 28 rows 21 columns, reduced to 1 rows 2 columns
Cbc0031I 8 added rows had average density of 12.125
Cbc0013I At root node, 8 cuts changed objective from -1784.0916 to -1649.1783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 173 row cuts average 3.3 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 394 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 246 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 170 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1616.6431 best solution, best possible -1649.1783 (1.41 seconds)
Cbc0001I Search completed - best objective -1616.6431, took 1088 iterations and 8 nodes (1.43 seconds)
Cbc0032I Strong branching done 52 times (246 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       1.43

