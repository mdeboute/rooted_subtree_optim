Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 101 (-2) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 0.000108493 - average 5.92858e-07, 19 fixed columns
Coin0506I Presolve 140 (-43) rows, 82 (-19) columns and 436 (-124) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 0.25056049 - largest nonzero change 0 ( 0%) - largest zero change 2.8612782e-05
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Coin0511I After Postsolve, objective 37.212872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Clp0000I Optimal - objective value 37.212872
Coin0511I After Postsolve, objective 37.212872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.21287151 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 101 columns (100 integer (100 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 11.7813
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.66583 iterations 44
Cbc0038I Solution found of 6.66583
Cbc0038I Relaxing continuous gives 6.66583
Cbc0038I Rounding solution of -6.38098 is better than previous of 6.66583

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -6.38098 to -6.55481 (0.11 seconds)
Cbc0038I Round again with cutoff of -9.62071
Cbc0038I Pass   2: suminf.    2.82402 (10) obj. -9.62071 iterations 15
Cbc0038I Pass   3: suminf.    0.81553 (6) obj. -9.62071 iterations 14
Cbc0038I Pass   4: suminf.    0.19927 (5) obj. -9.62071 iterations 6
Cbc0038I Pass   5: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass   6: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass   7: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass   8: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass   9: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  10: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  11: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  12: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  13: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  14: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  15: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  16: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  17: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  18: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  19: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  20: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  21: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  22: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  23: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  24: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  25: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I Pass  26: suminf.    2.71024 (9) obj. -9.62071 iterations 2
Cbc0038I Pass  27: suminf.    0.81553 (6) obj. -9.62071 iterations 12
Cbc0038I Pass  28: suminf.    0.19927 (5) obj. -9.62071 iterations 5
Cbc0038I Pass  29: suminf.    2.89371 (7) obj. -9.62071 iterations 8
Cbc0038I Pass  30: suminf.    2.74837 (7) obj. -9.62071 iterations 5
Cbc0038I Pass  31: suminf.    3.29587 (8) obj. -9.62071 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -6.55481 - took 0.15 seconds
Cbc0012I Integer solution of -6.554814 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 62 rows 39 columns
Cbc0012I Integer solution of -7.505031 found by RINS after 0 iterations and 0 nodes (0.26 seconds)
Cbc0031I 28 added rows had average density of 70.035714
Cbc0013I At root node, 28 cuts changed objective from -37.212872 to -27.866706 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14961 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3120 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.505031 best solution, best possible -27.866706 (1.83 seconds)
Cbc0012I Integer solution of -7.731188 found by rounding after 10667 iterations and 37 nodes (2.15 seconds)
Cbc0012I Integer solution of -7.764014 found by rounding after 10670 iterations and 38 nodes (2.15 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 2 rows 4 columns
Cbc0012I Integer solution of -7.893464 found by rounding after 10768 iterations and 44 nodes (2.16 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 2 rows 5 columns
Cbc0012I Integer solution of -7.954694 found by rounding after 11452 iterations and 114 nodes (2.23 seconds)
Cbc0012I Integer solution of -7.955248 found by rounding after 11538 iterations and 122 nodes (2.23 seconds)
Cbc0004I Integer solution of -7.960814 found after 11554 iterations and 123 nodes (2.24 seconds)
Cbc0012I Integer solution of -7.991364 found by rounding after 11619 iterations and 129 nodes (2.24 seconds)
Cbc0012I Integer solution of -8.746918 found by rounding after 12604 iterations and 157 nodes (2.35 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 51 rows 35 columns
Cbc0012I Integer solution of -8.848298 found by rounding after 14108 iterations and 221 nodes (2.50 seconds)
Cbc0016I Integer solution of -9.095944 found by strong branching after 14301 iterations and 241 nodes (2.52 seconds)
Cbc0010I After 246 nodes, 9 on tree, -9.095944 best solution, best possible -27.866706 (2.53 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 30 rows 22 columns
Cbc0012I Integer solution of -9.248851 found by DiveCoefficient after 17086 iterations and 341 nodes (2.78 seconds)
Cbc0001I Search completed - best objective -9.248851000000002, took 17150 iterations and 348 nodes (2.80 seconds)
Cbc0032I Strong branching done 2642 times (35118 iterations), fathomed 28 nodes and fixed 179 variables
Cbc0035I Maximum depth 35, 1367 variables fixed on reduced cost
Total time (CPU seconds):       2.58   (Wallclock seconds):       2.83

