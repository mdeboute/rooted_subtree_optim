Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 1.06222e-09 - average 3.03493e-11, 1 fixed columns
Coin0506I Presolve 32 (-3) rows, 20 (-1) columns and 96 (-8) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Coin0511I After Postsolve, objective 126.00552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Coin0511I After Postsolve, objective 126.00552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.0055241 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.654%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.67932
Cbc0038I Pass   1: suminf.    0.68128 (3) obj. -46.9823 iterations 17
Cbc0038I Pass   2: suminf.    0.25800 (2) obj. -43.0558 iterations 2
Cbc0038I Solution found of -21.3041
Cbc0038I Relaxing continuous gives -21.3041
Cbc0038I Rounding solution of -40.1221 is better than previous of -21.3041

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 24 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -40.1221 to -47.3478 (0.02 seconds)
Cbc0038I Round again with cutoff of -55.2067
Cbc0038I Pass   3: suminf.    0.77272 (5) obj. -55.2067 iterations 1
Cbc0038I Pass   4: suminf.    0.31232 (3) obj. -55.2067 iterations 2
Cbc0038I Pass   5: suminf.    0.89426 (5) obj. -55.2067 iterations 8
Cbc0038I Pass   6: suminf.    0.86979 (3) obj. -55.2067 iterations 1
Cbc0038I Pass   7: suminf.    0.59509 (4) obj. -55.2067 iterations 3
Cbc0038I Pass   8: suminf.    0.59332 (3) obj. -55.2067 iterations 1
Cbc0038I Pass   9: suminf.    0.53285 (4) obj. -55.2067 iterations 4
Cbc0038I Pass  10: suminf.    0.51171 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  11: suminf.    0.59438 (3) obj. -55.2067 iterations 4
Cbc0038I Pass  12: suminf.    1.27764 (4) obj. -55.2067 iterations 5
Cbc0038I Pass  13: suminf.    0.89790 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  14: suminf.    0.89790 (4) obj. -55.2067 iterations 0
Cbc0038I Pass  15: suminf.    1.15168 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  16: suminf.    1.11745 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  17: suminf.    1.11766 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  18: suminf.    1.42196 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  19: suminf.    1.00550 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  20: suminf.    1.11766 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  21: suminf.    0.50175 (4) obj. -55.2067 iterations 5
Cbc0038I Pass  22: suminf.    0.33185 (2) obj. -55.2067 iterations 2
Cbc0038I Pass  23: suminf.    0.52625 (3) obj. -55.2067 iterations 3
Cbc0038I Pass  24: suminf.    0.52625 (3) obj. -55.2067 iterations 0
Cbc0038I Pass  25: suminf.    0.75554 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  26: suminf.    0.75575 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  27: suminf.    1.39692 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  28: suminf.    1.39692 (4) obj. -55.2067 iterations 0
Cbc0038I Pass  29: suminf.    0.75575 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  30: suminf.    1.23736 (5) obj. -55.2067 iterations 7
Cbc0038I Pass  31: suminf.    1.12135 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  32: suminf.    1.12135 (4) obj. -55.2067 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 24 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.3478 - took 0.03 seconds
Cbc0012I Integer solution of -47.34776 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 12 added rows had average density of 12.666667
Cbc0013I At root node, 12 cuts changed objective from -125.9366 to -65.475155 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1277 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 872 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -47.78703 found by DiveCoefficient after 2928 iterations and 13 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -47.78703000000002, took 3135 iterations and 18 nodes (0.20 seconds)
Cbc0032I Strong branching done 156 times (1083 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

