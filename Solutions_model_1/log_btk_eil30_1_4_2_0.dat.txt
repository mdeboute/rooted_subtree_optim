Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 153 (-24) elements
Clp1000I sum of infeasibilities 5.32292e-05 - average 1.04371e-06, 3 fixed columns
Coin0506I Presolve 44 (-7) rows, 26 (-3) columns and 133 (-20) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Coin0511I After Postsolve, objective 64.233559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Clp0000I Optimal - objective value 64.233559
Coin0511I After Postsolve, objective 64.233559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.23355879 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.04754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.95256 iterations 25
Cbc0038I Solution found of 6.95256
Cbc0038I Relaxing continuous gives 6.95256
Cbc0038I Rounding solution of 3.43944 is better than previous of 6.95256

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 3.43944 to -20.3614 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.7487
Cbc0038I Pass   2: suminf.    0.96324 (5) obj. -24.7487 iterations 6
Cbc0038I Pass   3: suminf.    0.83430 (6) obj. -24.7487 iterations 3
Cbc0038I Pass   4: suminf.    1.67329 (5) obj. -24.7487 iterations 10
Cbc0038I Pass   5: suminf.    1.65489 (4) obj. -24.7487 iterations 1
Cbc0038I Pass   6: suminf.    1.40259 (5) obj. -24.7487 iterations 8
Cbc0038I Pass   7: suminf.    1.19431 (5) obj. -24.7487 iterations 2
Cbc0038I Pass   8: suminf.    1.19534 (6) obj. -24.7487 iterations 1
Cbc0038I Pass   9: suminf.    1.65070 (4) obj. -24.7487 iterations 9
Cbc0038I Pass  10: suminf.    1.52622 (4) obj. -24.7487 iterations 1
Cbc0038I Pass  11: suminf.    1.67772 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  12: suminf.    1.62079 (5) obj. -24.7487 iterations 2
Cbc0038I Pass  13: suminf.    1.75033 (8) obj. -24.7487 iterations 7
Cbc0038I Pass  14: suminf.    1.61968 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  15: suminf.    1.61968 (5) obj. -24.7487 iterations 0
Cbc0038I Pass  16: suminf.    2.15579 (8) obj. -24.7487 iterations 7
Cbc0038I Pass  17: suminf.    2.15579 (8) obj. -24.7487 iterations 0
Cbc0038I Pass  18: suminf.    1.19394 (7) obj. -24.7487 iterations 9
Cbc0038I Pass  19: suminf.    1.17889 (7) obj. -24.7487 iterations 3
Cbc0038I Pass  20: suminf.    1.64315 (6) obj. -24.7487 iterations 8
Cbc0038I Pass  21: suminf.    1.64315 (6) obj. -24.7487 iterations 0
Cbc0038I Pass  22: suminf.    2.25483 (6) obj. -24.7487 iterations 6
Cbc0038I Pass  23: suminf.    1.85877 (5) obj. -24.7487 iterations 1
Cbc0038I Pass  24: suminf.    2.06117 (7) obj. -24.7487 iterations 7
Cbc0038I Pass  25: suminf.    1.30515 (7) obj. -24.7487 iterations 5
Cbc0038I Pass  26: suminf.    1.30515 (7) obj. -24.7487 iterations 0
Cbc0038I Pass  27: suminf.    1.03508 (4) obj. -24.7487 iterations 6
Cbc0038I Pass  28: suminf.    1.03508 (4) obj. -24.7487 iterations 0
Cbc0038I Pass  29: suminf.    1.36948 (5) obj. -24.7487 iterations 4
Cbc0038I Pass  30: suminf.    1.36948 (5) obj. -24.7487 iterations 0
Cbc0038I Pass  31: suminf.    1.75011 (6) obj. -24.7487 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.3614 - took 0.04 seconds
Cbc0012I Integer solution of -20.36138 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 18 added rows had average density of 19.333333
Cbc0013I At root node, 18 cuts changed objective from -64.233559 to -33.114761 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2453 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1032 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 312 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -21.0266 found by rounding after 3278 iterations and 6 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -21.0266, took 3311 iterations and 8 nodes (0.28 seconds)
Cbc0032I Strong branching done 114 times (1427 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

