Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 6.90711e-05 - average 5.11638e-07, 12 fixed columns
Coin0506I Presolve 111 (-24) rows, 64 (-12) columns and 342 (-72) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Coin0511I After Postsolve, objective 56.809845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Clp0000I Optimal - objective value 56.809845
Coin0511I After Postsolve, objective 56.809845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.80984529 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.4981
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.24893 iterations 55
Cbc0038I Solution found of 2.24893
Cbc0038I Relaxing continuous gives 2.24893
Cbc0038I Rounding solution of -3.00893 is better than previous of 2.24893

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 78 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.00893 to -27.5054 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.4359
Cbc0038I Pass   2: suminf.    4.09932 (14) obj. -30.4359 iterations 21
Cbc0038I Pass   3: suminf.    3.57386 (13) obj. -30.4359 iterations 2
Cbc0038I Pass   4: suminf.    2.77440 (7) obj. -30.4359 iterations 11
Cbc0038I Pass   5: suminf.    1.61885 (9) obj. -30.4359 iterations 9
Cbc0038I Pass   6: suminf.    1.55234 (7) obj. -30.4359 iterations 3
Cbc0038I Pass   7: suminf.    2.27718 (6) obj. -30.4359 iterations 17
Cbc0038I Pass   8: suminf.    1.75927 (6) obj. -30.4359 iterations 4
Cbc0038I Pass   9: suminf.    2.29831 (6) obj. -30.4359 iterations 14
Cbc0038I Pass  10: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  11: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  12: suminf.    2.40337 (6) obj. -30.4359 iterations 8
Cbc0038I Pass  13: suminf.    1.64096 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  14: suminf.    1.29989 (6) obj. -30.4359 iterations 6
Cbc0038I Pass  15: suminf.    3.18069 (8) obj. -30.4359 iterations 12
Cbc0038I Pass  16: suminf.    3.18069 (8) obj. -30.4359 iterations 0
Cbc0038I Pass  17: suminf.    2.50973 (7) obj. -30.4359 iterations 8
Cbc0038I Pass  18: suminf.    2.28236 (7) obj. -30.4359 iterations 1
Cbc0038I Pass  19: suminf.    2.29831 (6) obj. -30.4359 iterations 10
Cbc0038I Pass  20: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  21: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  22: suminf.    2.40337 (6) obj. -30.4359 iterations 8
Cbc0038I Pass  23: suminf.    1.64096 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  24: suminf.    1.29989 (6) obj. -30.4359 iterations 6
Cbc0038I Pass  25: suminf.    3.18069 (8) obj. -30.4359 iterations 12
Cbc0038I Pass  26: suminf.    3.18069 (8) obj. -30.4359 iterations 0
Cbc0038I Pass  27: suminf.    2.50973 (7) obj. -30.4359 iterations 8
Cbc0038I Pass  28: suminf.    2.28236 (7) obj. -30.4359 iterations 1
Cbc0038I Pass  29: suminf.    2.29831 (6) obj. -30.4359 iterations 10
Cbc0038I Pass  30: suminf.    1.30023 (5) obj. -30.4359 iterations 2
Cbc0038I Pass  31: suminf.    1.28581 (5) obj. -30.4359 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -27.5054 to -27.736 (0.13 seconds)
Cbc0038I Round again with cutoff of -35.7107
Cbc0038I Pass  31: suminf.    5.00574 (16) obj. -35.7107 iterations 4
Cbc0038I Pass  32: suminf.    4.46183 (13) obj. -35.7107 iterations 6
Cbc0038I Pass  33: suminf.    3.60496 (12) obj. -35.7107 iterations 1
Cbc0038I Pass  34: suminf.    3.23323 (9) obj. -35.7107 iterations 7
Cbc0038I Pass  35: suminf.    3.23323 (9) obj. -35.7107 iterations 1
Cbc0038I Pass  36: suminf.    3.46194 (9) obj. -35.7107 iterations 16
Cbc0038I Pass  37: suminf.    2.53977 (7) obj. -35.7107 iterations 9
Cbc0038I Pass  38: suminf.    2.51172 (7) obj. -35.7107 iterations 1
Cbc0038I Pass  39: suminf.    2.32264 (7) obj. -35.7107 iterations 10
Cbc0038I Pass  40: suminf.    1.96794 (6) obj. -35.7107 iterations 3
Cbc0038I Pass  41: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  42: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  43: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  44: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  45: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  46: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  47: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  48: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  49: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  50: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  51: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  52: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  53: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  54: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  55: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I Pass  56: suminf.    2.50276 (6) obj. -35.7107 iterations 6
Cbc0038I Pass  57: suminf.    2.33096 (6) obj. -35.7107 iterations 1
Cbc0038I Pass  58: suminf.    2.00003 (6) obj. -35.7107 iterations 4
Cbc0038I Pass  59: suminf.    2.21441 (6) obj. -35.7107 iterations 9
Cbc0038I Pass  60: suminf.    1.96794 (6) obj. -35.7107 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -27.736 - took 0.15 seconds
Cbc0012I Integer solution of -27.73595 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 80 rows 48 columns
Cbc0031I 29 added rows had average density of 51.034483
Cbc0013I At root node, 29 cuts changed objective from -56.809845 to -48.229192 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2408 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 186 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.73595 best solution, best possible -48.229192 (1.29 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -27.95636 found by RINS after 9746 iterations and 45 nodes (1.70 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 28 rows 23 columns
Cbc0001I Search completed - best objective -27.95636, took 11607 iterations and 96 nodes (1.84 seconds)
Cbc0032I Strong branching done 1116 times (20188 iterations), fathomed 12 nodes and fixed 63 variables
Cbc0035I Maximum depth 28, 367 variables fixed on reduced cost
Total time (CPU seconds):       1.70   (Wallclock seconds):       1.86

