Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-25) rows, 15 (-9) columns and 68 (-61) elements
Clp1000I sum of infeasibilities 3.85526e-05 - average 1.75239e-06, 2 fixed columns
Coin0506I Presolve 15 (-7) rows, 11 (-4) columns and 46 (-22) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Coin0511I After Postsolve, objective 161.24967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Clp0000I Optimal - objective value 161.24967
Coin0511I After Postsolve, objective 161.24967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.2496691 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 15 columns (14 integer (14 of which binary)) and 67 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.807832
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -135.357 iterations 7
Cbc0038I Solution found of -135.357
Cbc0038I Relaxing continuous gives -135.357
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -137.701
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04906 (1) obj. -137.701 iterations 1
Cbc0038I Pass   3: suminf.    0.32320 (1) obj. -137.701 iterations 3
Cbc0038I Pass   4: suminf.    0.55242 (2) obj. -137.701 iterations 1
Cbc0038I Pass   5: suminf.    0.32320 (1) obj. -137.701 iterations 1
Cbc0038I Pass   6: suminf.    0.33257 (2) obj. -137.701 iterations 2
Cbc0038I Pass   7: suminf.    0.51794 (2) obj. -137.701 iterations 2
Cbc0038I Pass   8: suminf.    0.51794 (2) obj. -137.701 iterations 0
Cbc0038I Pass   9: suminf.    0.33257 (2) obj. -137.701 iterations 2
Cbc0038I Pass  10: suminf.    0.33257 (2) obj. -137.701 iterations 0
Cbc0038I Pass  11: suminf.    0.06962 (1) obj. -137.701 iterations 6
Cbc0038I Solution found of -140.928
Cbc0038I Relaxing continuous gives -140.928
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -144.502
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.19138 (1) obj. -144.502 iterations 0
Cbc0038I Pass  13: suminf.    0.54522 (3) obj. -144.502 iterations 5
Cbc0038I Pass  14: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  15: suminf.    1.05604 (4) obj. -144.502 iterations 1
Cbc0038I Pass  16: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  17: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  18: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  19: suminf.    0.68421 (2) obj. -144.502 iterations 3
Cbc0038I Pass  20: suminf.    0.54522 (3) obj. -144.502 iterations 3
Cbc0038I Pass  21: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  22: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  23: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  24: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  25: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  26: suminf.    0.54522 (3) obj. -144.502 iterations 3
Cbc0038I Pass  27: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  28: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  29: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  30: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  31: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  32: suminf.    0.58203 (3) obj. -144.502 iterations 1
Cbc0038I Pass  33: suminf.    1.24708 (4) obj. -144.502 iterations 4
Cbc0038I Pass  34: suminf.    0.19138 (1) obj. -144.502 iterations 3
Cbc0038I Pass  35: suminf.    0.54522 (3) obj. -144.502 iterations 5
Cbc0038I Pass  36: suminf.    1.33916 (4) obj. -144.502 iterations 4
Cbc0038I Pass  37: suminf.    1.05604 (4) obj. -144.502 iterations 2
Cbc0038I Pass  38: suminf.    0.54303 (2) obj. -144.502 iterations 3
Cbc0038I Pass  39: suminf.    0.52015 (2) obj. -144.502 iterations 1
Cbc0038I Pass  40: suminf.    0.54303 (2) obj. -144.502 iterations 1
Cbc0038I Pass  41: suminf.    0.19138 (1) obj. -144.502 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -140.928 - took 0.01 seconds
Cbc0012I Integer solution of -140.92847 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 21 rows 15 columns, reduced to 6 rows 8 columns
Cbc0031I 5 added rows had average density of 7.2
Cbc0013I At root node, 14 cuts changed objective from -158.79789 to -140.92847 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0001I Search completed - best objective -140.92847, took 23 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.09

