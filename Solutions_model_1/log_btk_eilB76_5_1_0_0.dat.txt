Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-31) rows, 70 (-8) columns and 380 (-73) elements
Clp1000I sum of infeasibilities 1.74765e-05 - average 1.4094e-07, 16 fixed columns
Coin0506I Presolve 92 (-32) rows, 54 (-16) columns and 284 (-96) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Coin0511I After Postsolve, objective 58.639112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Coin0511I After Postsolve, objective 58.639112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.63911222 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 70 columns (69 integer (69 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.54087
Cbc0038I Solution found of -8.90055
Cbc0038I Relaxing continuous gives -14.4663
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 70 columns, reduced to 66 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -14.4663 to -31.3141 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.0186
Cbc0038I Pass   1: suminf.    1.60682 (18) obj. -34.0186 iterations 34
Cbc0038I Pass   2: suminf.    1.41567 (8) obj. -34.0186 iterations 22
Cbc0038I Pass   3: suminf.    1.37642 (4) obj. -34.0186 iterations 3
Cbc0038I Pass   4: suminf.    0.86880 (5) obj. -34.0186 iterations 5
Cbc0038I Pass   5: suminf.    1.26642 (3) obj. -34.0186 iterations 6
Cbc0038I Pass   6: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass   7: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass   8: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass   9: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  10: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  11: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  12: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  13: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  14: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  15: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  16: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  17: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  18: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  19: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  20: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  21: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  22: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  23: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  24: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  25: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  26: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  27: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  28: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  29: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  30: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 70 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -31.3141 - took 0.04 seconds
Cbc0012I Integer solution of -31.31414 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 115 rows 70 columns, reduced to 66 rows 38 columns
Cbc0031I 22 added rows had average density of 46.181818
Cbc0013I At root node, 22 cuts changed objective from -58.357849 to -49.460249 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7866 row cuts average 6.0 elements, 1 column cuts (1 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1802 row cuts average 69.8 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 69.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.31414 best solution, best possible -49.460249 (0.72 seconds)
Cbc0001I Search completed - best objective -31.31414, took 6493 iterations and 38 nodes (0.89 seconds)
Cbc0032I Strong branching done 476 times (8426 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 10, 130 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.91

