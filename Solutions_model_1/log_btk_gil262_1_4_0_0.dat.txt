Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 489 (-38) rows, 255 (-9) columns and 1462 (-83) elements
Clp1000I sum of infeasibilities 1.4446e-05 - average 2.95419e-08, 205 fixed columns
Coin0506I Presolve 89 (-400) rows, 49 (-206) columns and 263 (-1199) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Coin0511I After Postsolve, objective 912.23826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13640664 - largest nonzero change 0 ( 0%) - largest zero change 2.9824724e-05
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Coin0511I After Postsolve, objective 912.23826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 912.2382593 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 489 rows, 255 columns (254 integer (254 of which binary)) and 1462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.48836
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -262.277 iterations 118
Cbc0038I Solution found of -262.277
Cbc0038I Relaxing continuous gives -262.277
Cbc0038I Rounding solution of -452.251 is better than previous of -262.277

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -452.251 to -751.933 (0.05 seconds)
Cbc0038I Round again with cutoff of -767.964
Cbc0038I Pass   2: suminf.    3.00917 (14) obj. -767.964 iterations 59
Cbc0038I Pass   3: suminf.    2.97005 (13) obj. -767.964 iterations 1
Cbc0038I Pass   4: suminf.    1.90639 (5) obj. -788.504 iterations 40
Cbc0038I Pass   5: suminf.    1.31013 (3) obj. -767.964 iterations 27
Cbc0038I Pass   6: suminf.    0.44398 (4) obj. -767.964 iterations 33
Cbc0038I Pass   7: suminf.    1.66822 (4) obj. -767.964 iterations 20
Cbc0038I Pass   8: suminf.    0.52628 (3) obj. -767.964 iterations 23
Cbc0038I Pass   9: suminf.    1.01965 (4) obj. -767.964 iterations 22
Cbc0038I Pass  10: suminf.    0.46413 (2) obj. -767.964 iterations 32
Cbc0038I Pass  11: suminf.    0.44398 (4) obj. -767.964 iterations 11
Cbc0038I Pass  12: suminf.    1.66822 (4) obj. -767.964 iterations 20
Cbc0038I Pass  13: suminf.    0.52628 (3) obj. -767.964 iterations 23
Cbc0038I Pass  14: suminf.    1.01965 (4) obj. -767.964 iterations 22
Cbc0038I Pass  15: suminf.    0.46413 (2) obj. -767.964 iterations 32
Cbc0038I Pass  16: suminf.    0.44398 (4) obj. -767.964 iterations 11
Cbc0038I Pass  17: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  18: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  19: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  20: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  21: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I Pass  22: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  23: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  24: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  25: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  26: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I Pass  27: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  28: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  29: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  30: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  31: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -751.933 to -760.05 (0.12 seconds)
Cbc0038I Round again with cutoff of -796.819
Cbc0038I Pass  31: suminf.    3.21395 (14) obj. -796.819 iterations 0
Cbc0038I Pass  32: suminf.    1.38871 (10) obj. -796.819 iterations 93
Cbc0038I Pass  33: suminf.    1.04985 (5) obj. -796.819 iterations 24
Cbc0038I Pass  34: suminf.    2.76938 (7) obj. -796.819 iterations 23
Cbc0038I Pass  35: suminf.    2.10308 (6) obj. -796.819 iterations 6
Cbc0038I Pass  36: suminf.    1.54300 (4) obj. -796.819 iterations 8
Cbc0038I Pass  37: suminf.    2.10283 (9) obj. -796.819 iterations 35
Cbc0038I Pass  38: suminf.    1.54748 (5) obj. -796.819 iterations 19
Cbc0038I Pass  39: suminf.    3.43318 (20) obj. -796.819 iterations 87
Cbc0038I Pass  40: suminf.    1.51018 (10) obj. -796.819 iterations 52
Cbc0038I Pass  41: suminf.    1.41656 (10) obj. -796.819 iterations 13
Cbc0038I Pass  42: suminf.    1.95812 (8) obj. -796.819 iterations 60
Cbc0038I Pass  43: suminf.    1.74459 (10) obj. -796.819 iterations 18
Cbc0038I Pass  44: suminf.    3.64171 (9) obj. -796.819 iterations 33
Cbc0038I Pass  45: suminf.    2.78211 (11) obj. -796.819 iterations 34
Cbc0038I Pass  46: suminf.    1.88552 (7) obj. -796.819 iterations 6
Cbc0038I Pass  47: suminf.    1.77544 (6) obj. -796.819 iterations 16
Cbc0038I Pass  48: suminf.    2.80001 (6) obj. -796.819 iterations 18
Cbc0038I Pass  49: suminf.    2.38165 (7) obj. -796.819 iterations 30
Cbc0038I Pass  50: suminf.    2.36247 (7) obj. -796.819 iterations 13
Cbc0038I Pass  51: suminf.    1.12239 (8) obj. -796.819 iterations 27
Cbc0038I Pass  52: suminf.    0.85013 (7) obj. -796.819 iterations 30
Cbc0038I Pass  53: suminf.    2.09432 (7) obj. -796.819 iterations 38
Cbc0038I Pass  54: suminf.    2.02030 (19) obj. -796.819 iterations 38
Cbc0038I Pass  55: suminf.    2.23333 (9) obj. -796.819 iterations 48
Cbc0038I Pass  56: suminf.    1.59253 (7) obj. -796.819 iterations 22
Cbc0038I Pass  57: suminf.    2.28370 (9) obj. -796.819 iterations 33
Cbc0038I Pass  58: suminf.    2.24439 (9) obj. -796.819 iterations 1
Cbc0038I Pass  59: suminf.    1.56430 (10) obj. -796.819 iterations 47
Cbc0038I Pass  60: suminf.    1.46761 (8) obj. -796.819 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 118 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -760.05 to -783.044 (0.21 seconds)
Cbc0038I Round again with cutoff of -831.444
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    3.83915 (17) obj. -831.444 iterations 12
Cbc0038I Pass  61: suminf.    2.36855 (12) obj. -831.444 iterations 49
Cbc0038I Pass  62: suminf.    2.11500 (20) obj. -831.444 iterations 13
Cbc0038I Pass  63: suminf.    2.11500 (20) obj. -831.444 iterations 2
Cbc0038I Pass  64: suminf.    4.87124 (18) obj. -831.444 iterations 51
Cbc0038I Pass  65: suminf.    4.86257 (16) obj. -831.444 iterations 18
Cbc0038I Pass  66: suminf.    4.90401 (18) obj. -831.444 iterations 46
Cbc0038I Pass  67: suminf.    3.83915 (17) obj. -831.444 iterations 20
Cbc0038I Pass  68: suminf.    2.36855 (12) obj. -831.444 iterations 47
Cbc0038I Pass  69: suminf.    2.11500 (20) obj. -831.444 iterations 13
Cbc0038I Pass  70: suminf.    2.11500 (20) obj. -831.444 iterations 2
Cbc0038I Pass  71: suminf.    3.87191 (16) obj. -831.444 iterations 62
Cbc0038I Pass  72: suminf.    3.66337 (19) obj. -831.444 iterations 20
Cbc0038I Pass  73: suminf.    4.13427 (10) obj. -831.444 iterations 62
Cbc0038I Pass  74: suminf.    3.62068 (13) obj. -831.444 iterations 44
Cbc0038I Pass  75: suminf.    3.61536 (13) obj. -831.444 iterations 2
Cbc0038I Pass  76: suminf.    3.63408 (12) obj. -831.444 iterations 35
Cbc0038I Pass  77: suminf.    3.43930 (12) obj. -831.444 iterations 20
Cbc0038I Pass  78: suminf.    4.17844 (11) obj. -831.444 iterations 38
Cbc0038I Pass  79: suminf.    3.02022 (13) obj. -831.444 iterations 26
Cbc0038I Pass  80: suminf.    2.94719 (13) obj. -831.444 iterations 6
Cbc0038I Pass  81: suminf.    5.12464 (14) obj. -831.444 iterations 27
Cbc0038I Pass  82: suminf.    3.11269 (13) obj. -831.444 iterations 47
Cbc0038I Pass  83: suminf.    4.34155 (13) obj. -831.444 iterations 42
Cbc0038I Pass  84: suminf.    3.17749 (11) obj. -831.444 iterations 71
Cbc0038I Pass  85: suminf.    0.97775 (6) obj. -831.444 iterations 28
Cbc0038I Pass  86: suminf.    1.60672 (6) obj. -831.444 iterations 94
Cbc0038I Pass  87: suminf.    1.43597 (6) obj. -831.444 iterations 6
Cbc0038I Pass  88: suminf.    1.03883 (6) obj. -831.444 iterations 30
Cbc0038I Pass  89: suminf.    0.73767 (4) obj. -831.444 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 111 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -783.044 to -807.924 (0.28 seconds)
Cbc0038I Round again with cutoff of -855.683
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 5
Cbc0038I Pass  89: suminf.    5.04133 (21) obj. -855.683 iterations 14
Cbc0038I Pass  90: suminf.    4.33595 (16) obj. -855.683 iterations 14
Cbc0038I Pass  91: suminf.    3.88437 (16) obj. -855.683 iterations 26
Cbc0038I Pass  92: suminf.    4.61161 (13) obj. -855.683 iterations 43
Cbc0038I Pass  93: suminf.    4.57517 (16) obj. -855.683 iterations 26
Cbc0038I Pass  94: suminf.    6.04121 (14) obj. -855.683 iterations 15
Cbc0038I Pass  95: suminf.    5.84647 (15) obj. -855.683 iterations 14
Cbc0038I Pass  96: suminf.    5.71964 (14) obj. -855.683 iterations 41
Cbc0038I Pass  97: suminf.    5.02180 (17) obj. -855.683 iterations 37
Cbc0038I Pass  98: suminf.    4.78991 (14) obj. -855.683 iterations 7
Cbc0038I Pass  99: suminf.    5.89351 (14) obj. -855.683 iterations 103
Cbc0038I Pass 100: suminf.    5.53637 (15) obj. -855.683 iterations 25
Cbc0038I Pass 101: suminf.    5.53637 (15) obj. -855.683 iterations 0
Cbc0038I Pass 102: suminf.    5.02224 (14) obj. -855.683 iterations 36
Cbc0038I Pass 103: suminf.    4.66872 (14) obj. -855.683 iterations 18
Cbc0038I Pass 104: suminf.    5.49080 (14) obj. -855.683 iterations 52
Cbc0038I Pass 105: suminf.    5.32177 (14) obj. -855.683 iterations 22
Cbc0038I Pass 106: suminf.    5.01962 (14) obj. -855.683 iterations 8
Cbc0038I Pass 107: suminf.    6.04121 (14) obj. -855.683 iterations 33
Cbc0038I Pass 108: suminf.    5.84647 (15) obj. -855.683 iterations 16
Cbc0038I Pass 109: suminf.    5.71964 (14) obj. -855.683 iterations 42
Cbc0038I Pass 110: suminf.    5.02180 (17) obj. -855.683 iterations 38
Cbc0038I Pass 111: suminf.    4.78991 (14) obj. -855.683 iterations 7
Cbc0038I Pass 112: suminf.    5.89351 (14) obj. -855.683 iterations 101
Cbc0038I Pass 113: suminf.    5.53637 (15) obj. -855.683 iterations 25
Cbc0038I Pass 114: suminf.    5.53637 (15) obj. -855.683 iterations 0
Cbc0038I Pass 115: suminf.    5.02224 (14) obj. -855.683 iterations 36
Cbc0038I Pass 116: suminf.    4.66872 (14) obj. -855.683 iterations 18
Cbc0038I Pass 117: suminf.    4.79453 (14) obj. -855.683 iterations 31
Cbc0038I Pass 118: suminf.    4.78991 (14) obj. -855.683 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 97 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of -807.924 - took 0.36 seconds
Cbc0012I Integer solution of -807.9244 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0038I Full problem 489 rows 255 columns, reduced to 86 rows 47 columns
Cbc0031I 16 added rows had average density of 119.5
Cbc0013I At root node, 16 cuts changed objective from -912.23826 to -872.25468 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 912 row cuts average 3.2 elements, 48 column cuts (48 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 153.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -807.9244 best solution, best possible -871.81503 (0.75 seconds)
Cbc0001I Search completed - best objective -807.9244000000001, took 1791 iterations and 32 nodes (0.91 seconds)
Cbc0032I Strong branching done 366 times (6469 iterations), fathomed 5 nodes and fixed 32 variables
Cbc0035I Maximum depth 10, 316 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.91

