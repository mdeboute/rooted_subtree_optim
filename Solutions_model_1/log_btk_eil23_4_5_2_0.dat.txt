Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 1.11692e-07 - average 3.28506e-09, 1 fixed columns
Coin0506I Presolve 29 (-5) rows, 20 (-1) columns and 90 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 191.81249
Clp0000I Optimal - objective value 191.81249
Coin0511I After Postsolve, objective 191.81249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 191.81249
Clp0000I Optimal - objective value 191.81249
Clp0000I Optimal - objective value 191.81249
Coin0511I After Postsolve, objective 191.81249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.8124864 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.73113
Cbc0038I Pass   1: suminf.    0.27122 (4) obj. -117.653 iterations 16
Cbc0038I Pass   2: suminf.    0.27122 (4) obj. -117.653 iterations 0
Cbc0038I Solution found of -44.1382
Cbc0038I Relaxing continuous gives -44.1382
Cbc0038I Rounding solution of -111.306 is better than previous of -44.1382

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -119.08
Cbc0038I Pass   3: suminf.    0.27150 (5) obj. -119.08 iterations 1
Cbc0038I Pass   4: suminf.    0.27150 (5) obj. -119.08 iterations 0
Cbc0038I Pass   5: suminf.    1.57933 (5) obj. -119.08 iterations 9
Cbc0038I Pass   6: suminf.    1.05149 (5) obj. -119.08 iterations 4
Cbc0038I Pass   7: suminf.    1.18454 (3) obj. -119.08 iterations 5
Cbc0038I Pass   8: suminf.    1.18454 (3) obj. -119.08 iterations 0
Cbc0038I Pass   9: suminf.    1.22923 (4) obj. -119.08 iterations 2
Cbc0038I Pass  10: suminf.    1.22923 (4) obj. -119.08 iterations 0
Cbc0038I Pass  11: suminf.    1.79107 (5) obj. -119.08 iterations 2
Cbc0038I Pass  12: suminf.    1.77452 (4) obj. -119.08 iterations 1
Cbc0038I Pass  13: suminf.    1.77452 (4) obj. -119.08 iterations 0
Cbc0038I Pass  14: suminf.    1.22923 (4) obj. -119.08 iterations 1
Cbc0038I Pass  15: suminf.    1.22923 (4) obj. -119.08 iterations 0
Cbc0038I Pass  16: suminf.    1.79107 (5) obj. -119.08 iterations 2
Cbc0038I Pass  17: suminf.    1.77452 (4) obj. -119.08 iterations 1
Cbc0038I Pass  18: suminf.    1.77452 (4) obj. -119.08 iterations 0
Cbc0038I Pass  19: suminf.    1.22923 (4) obj. -119.08 iterations 1
Cbc0038I Pass  20: suminf.    1.22923 (4) obj. -119.08 iterations 0
Cbc0038I Pass  21: suminf.    1.79107 (5) obj. -119.08 iterations 2
Cbc0038I Pass  22: suminf.    1.77452 (4) obj. -119.08 iterations 1
Cbc0038I Pass  23: suminf.    1.77452 (4) obj. -119.08 iterations 0
Cbc0038I Pass  24: suminf.    1.22923 (4) obj. -119.08 iterations 1
Cbc0038I Pass  25: suminf.    1.22923 (4) obj. -119.08 iterations 0
Cbc0038I Pass  26: suminf.    1.79107 (5) obj. -119.08 iterations 2
Cbc0038I Pass  27: suminf.    1.77452 (4) obj. -119.08 iterations 1
Cbc0038I Pass  28: suminf.    1.77452 (4) obj. -119.08 iterations 0
Cbc0038I Pass  29: suminf.    1.22923 (4) obj. -119.08 iterations 1
Cbc0038I Pass  30: suminf.    1.22923 (4) obj. -119.08 iterations 0
Cbc0038I Pass  31: suminf.    1.79107 (5) obj. -119.08 iterations 2
Cbc0038I Pass  32: suminf.    1.77452 (4) obj. -119.08 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -111.306 - took 0.02 seconds
Cbc0012I Integer solution of -111.30554 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 21 rows 16 columns
Cbc0031I 9 added rows had average density of 18.111111
Cbc0013I At root node, 9 cuts changed objective from -189.05107 to -134.68001 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 630 row cuts average 4.2 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 503 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -111.32404 found by rounding after 1361 iterations and 2 nodes (0.14 seconds)
Cbc0004I Integer solution of -111.36343 found after 1525 iterations and 9 nodes (0.15 seconds)
Cbc0012I Integer solution of -111.37284 found by DiveCoefficient after 1567 iterations and 14 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -111.372835, took 2412 iterations and 36 nodes (0.23 seconds)
Cbc0032I Strong branching done 272 times (1269 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 7, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

