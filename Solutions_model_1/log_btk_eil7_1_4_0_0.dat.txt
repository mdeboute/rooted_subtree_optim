Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 8 (-9) rows, 7 (-2) columns and 23 (-16) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 8 (0) rows, 7 (0) columns and 23 (0) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 8.399861
Clp0000I Optimal - objective value 8.399861
Coin0511I After Postsolve, objective 8.399861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 8.399861
Clp0000I Optimal - objective value 8.399861
Clp0000I Optimal - objective value 8.399861
Coin0511I After Postsolve, objective 8.399861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8.399860957 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 8 rows, 7 columns (6 integer (6 of which binary)) and 23 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.714%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.29885
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.4 iterations 4
Cbc0038I Solution found of 4.4
Cbc0038I Relaxing continuous gives 4.4
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8 rows 7 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 4.4 to 0 (0.00 seconds)
Cbc0038I Round again with cutoff of -0.9
Cbc0038I Pass   2: suminf.    0.23661 (1) obj. -0.9 iterations 1
Cbc0038I Pass   3: suminf.    0.07143 (1) obj. -0.9 iterations 2
Cbc0038I Pass   4: suminf.    0.50000 (1) obj. -0.9 iterations 2
Cbc0038I Pass   5: suminf.    0.47768 (1) obj. -0.9 iterations 1
Cbc0038I Pass   6: suminf.    1.00000 (3) obj. -0.9 iterations 2
Cbc0038I Pass   7: suminf.    1.00000 (3) obj. -0.9 iterations 0
Cbc0038I Pass   8: suminf.    1.00000 (3) obj. -0.9 iterations 0
Cbc0038I Pass   9: suminf.    1.00000 (3) obj. -0.9 iterations 0
Cbc0038I Pass  10: suminf.    1.20474 (4) obj. -0.9 iterations 1
Cbc0038I Pass  11: suminf.    1.18798 (3) obj. -0.9 iterations 1
Cbc0038I Pass  12: suminf.    1.20474 (4) obj. -0.9 iterations 1
Cbc0038I Pass  13: suminf.    1.18798 (3) obj. -0.9 iterations 1
Cbc0038I Pass  14: suminf.    1.00000 (3) obj. -0.9 iterations 2
Cbc0038I Pass  15: suminf.    1.00000 (3) obj. -0.9 iterations 0
Cbc0038I Pass  16: suminf.    0.50000 (1) obj. -0.9 iterations 3
Cbc0038I Pass  17: suminf.    0.47768 (1) obj. -0.9 iterations 1
Cbc0038I Pass  18: suminf.    0.23661 (1) obj. -0.9 iterations 1
Cbc0038I Pass  19: suminf.    0.07143 (1) obj. -0.9 iterations 2
Cbc0038I Pass  20: suminf.    0.33203 (1) obj. -0.9 iterations 2
Cbc0038I Pass  21: suminf.    0.07143 (1) obj. -0.9 iterations 2
Cbc0038I Pass  22: suminf.    0.07143 (1) obj. -0.9 iterations 0
Cbc0038I Pass  23: suminf.    0.07143 (1) obj. -0.9 iterations 0
Cbc0038I Pass  24: suminf.    0.35104 (1) obj. -0.9 iterations 2
Cbc0038I Pass  25: suminf.    0.35104 (1) obj. -0.9 iterations 0
Cbc0038I Pass  26: suminf.    0.37338 (2) obj. -0.9 iterations 1
Cbc0038I Pass  27: suminf.    0.35104 (1) obj. -0.9 iterations 1
Cbc0038I Pass  28: suminf.    1.00000 (3) obj. -0.9 iterations 5
Cbc0038I Pass  29: suminf.    1.00000 (3) obj. -0.9 iterations 0
Cbc0038I Pass  30: suminf.    0.50000 (1) obj. -0.9 iterations 3
Cbc0038I Pass  31: suminf.    0.47768 (1) obj. -0.9 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8 rows 7 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 0 to -2.7 (0.00 seconds)
Cbc0038I Round again with cutoff of -3.9
Cbc0038I Pass  31: suminf.    0.37054 (1) obj. -3.9 iterations 0
Cbc0038I Pass  32: suminf.    0.43939 (2) obj. -3.9 iterations 2
Cbc0038I Pass  33: suminf.    1.01724 (3) obj. -3.9 iterations 2
Cbc0038I Pass  34: suminf.    0.53519 (2) obj. -3.9 iterations 3
Cbc0038I Pass  35: suminf.    1.17037 (4) obj. -3.9 iterations 4
Cbc0038I Pass  36: suminf.    1.15241 (4) obj. -3.9 iterations 1
Cbc0038I Pass  37: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  38: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  39: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  40: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  41: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  42: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  43: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  44: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  45: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  46: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  47: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  48: suminf.    1.15241 (4) obj. -3.9 iterations 0
Cbc0038I Pass  49: suminf.    0.62678 (4) obj. -3.9 iterations 5
Cbc0038I Pass  50: suminf.    0.62678 (4) obj. -3.9 iterations 0
Cbc0038I Pass  51: suminf.    0.59712 (2) obj. -3.9 iterations 3
Cbc0038I Pass  52: suminf.    0.37054 (1) obj. -3.9 iterations 1
Cbc0038I Pass  53: suminf.    0.43939 (2) obj. -3.9 iterations 2
Cbc0038I Pass  54: suminf.    1.01724 (3) obj. -3.9 iterations 2
Cbc0038I Pass  55: suminf.    0.53519 (2) obj. -3.9 iterations 3
Cbc0038I Pass  56: suminf.    0.53519 (2) obj. -3.9 iterations 0
Cbc0038I Pass  57: suminf.    1.01724 (3) obj. -3.9 iterations 3
Cbc0038I Pass  58: suminf.    1.01724 (3) obj. -3.9 iterations 0
Cbc0038I Pass  59: suminf.    0.53519 (2) obj. -3.9 iterations 3
Cbc0038I Pass  60: suminf.    0.37054 (1) obj. -3.9 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8 rows 7 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -2.7 - took 0.01 seconds
Cbc0012I Integer solution of -2.7 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -8.399861 to -8.399861 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2.7, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

