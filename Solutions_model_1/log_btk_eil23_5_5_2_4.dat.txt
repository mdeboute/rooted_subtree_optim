Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 22 (-3) columns and 109 (-26) elements
Clp1000I sum of infeasibilities 1.19058e-05 - average 3.30718e-07, 1 fixed columns
Coin0506I Presolve 28 (-8) rows, 21 (-1) columns and 91 (-18) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Coin0511I After Postsolve, objective 89.606337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Coin0511I After Postsolve, objective 89.606337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.60633697 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.12469
Cbc0038I Pass   1: suminf.    0.58819 (2) obj. -7.88487 iterations 12
Cbc0038I Solution found of 2.8659
Cbc0038I Relaxing continuous gives 2.8659
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2.8659 to -14.5316 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.0392
Cbc0038I Pass   2: suminf.    0.77255 (3) obj. -22.0392 iterations 1
Cbc0038I Pass   3: suminf.    0.37645 (2) obj. -22.0392 iterations 4
Cbc0038I Pass   4: suminf.    0.71782 (4) obj. -22.0392 iterations 3
Cbc0038I Pass   5: suminf.    1.02831 (5) obj. -22.0392 iterations 9
Cbc0038I Pass   6: suminf.    0.99212 (4) obj. -22.0392 iterations 1
Cbc0038I Pass   7: suminf.    1.02324 (4) obj. -22.0392 iterations 5
Cbc0038I Pass   8: suminf.    0.76505 (4) obj. -22.0392 iterations 2
Cbc0038I Pass   9: suminf.    0.70774 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  10: suminf.    1.14087 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  11: suminf.    1.03353 (4) obj. -22.0392 iterations 4
Cbc0038I Pass  12: suminf.    1.25970 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  13: suminf.    1.11408 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  14: suminf.    1.01641 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  15: suminf.    1.26092 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  16: suminf.    1.24605 (4) obj. -22.0392 iterations 3
Cbc0038I Pass  17: suminf.    1.21211 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  18: suminf.    1.18159 (5) obj. -22.0392 iterations 1
Cbc0038I Pass  19: suminf.    1.36996 (7) obj. -22.0392 iterations 3
Cbc0038I Pass  20: suminf.    1.27675 (4) obj. -22.0392 iterations 4
Cbc0038I Pass  21: suminf.    1.60013 (8) obj. -22.0392 iterations 4
Cbc0038I Pass  22: suminf.    2.61182 (7) obj. -22.0392 iterations 9
Cbc0038I Pass  23: suminf.    1.48442 (5) obj. -22.0392 iterations 6
Cbc0038I Pass  24: suminf.    0.68792 (3) obj. -22.0392 iterations 2
Cbc0038I Pass  25: suminf.    0.19625 (2) obj. -22.0392 iterations 1
Cbc0038I Pass  26: suminf.    0.70184 (4) obj. -22.0392 iterations 3
Cbc0038I Pass  27: suminf.    0.62794 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  28: suminf.    0.73038 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  29: suminf.    0.55726 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  30: suminf.    0.70184 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  31: suminf.    0.73626 (5) obj. -22.0392 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -14.5316 to -15.291 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.5526
Cbc0038I Pass  31: suminf.    1.01140 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  32: suminf.    0.92320 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  33: suminf.    1.37749 (4) obj. -35.5526 iterations 7
Cbc0038I Pass  34: suminf.    1.06475 (3) obj. -35.5526 iterations 3
Cbc0038I Pass  35: suminf.    1.02106 (5) obj. -35.5526 iterations 7
Cbc0038I Pass  36: suminf.    0.98360 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  37: suminf.    1.02921 (4) obj. -35.5526 iterations 5
Cbc0038I Pass  38: suminf.    1.00407 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  39: suminf.    1.56267 (5) obj. -35.5526 iterations 5
Cbc0038I Pass  40: suminf.    1.35936 (4) obj. -35.5526 iterations 2
Cbc0038I Pass  41: suminf.    1.25993 (6) obj. -35.5526 iterations 2
Cbc0038I Pass  42: suminf.    1.23418 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  43: suminf.    1.88865 (6) obj. -35.5526 iterations 6
Cbc0038I Pass  44: suminf.    1.50817 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  45: suminf.    1.15068 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  46: suminf.    1.09275 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  47: suminf.    1.51970 (4) obj. -35.5526 iterations 6
Cbc0038I Pass  48: suminf.    1.22878 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  49: suminf.    1.14683 (4) obj. -35.5526 iterations 6
Cbc0038I Pass  50: suminf.    0.49740 (6) obj. -35.5526 iterations 9
Cbc0038I Pass  51: suminf.    0.35804 (3) obj. -35.5526 iterations 4
Cbc0038I Pass  52: suminf.    1.16448 (5) obj. -35.5526 iterations 7
Cbc0038I Pass  53: suminf.    1.07881 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  54: suminf.    1.19813 (5) obj. -35.5526 iterations 5
Cbc0038I Pass  55: suminf.    1.13087 (5) obj. -35.5526 iterations 3
Cbc0038I Pass  56: suminf.    1.29325 (4) obj. -35.5526 iterations 3
Cbc0038I Pass  57: suminf.    1.26802 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  58: suminf.    1.68171 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  59: suminf.    1.16779 (6) obj. -35.5526 iterations 2
Cbc0038I Pass  60: suminf.    1.13087 (5) obj. -35.5526 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -15.291 - took 0.03 seconds
Cbc0012I Integer solution of -15.291023 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 18 rows 15 columns
Cbc0031I 14 added rows had average density of 14.214286
Cbc0013I At root node, 14 cuts changed objective from -89.606337 to -29.186812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 976 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 906 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -16.07651 found by DiveCoefficient after 2049 iterations and 2 nodes (0.18 seconds)
Cbc0004I Integer solution of -16.333013 found after 2205 iterations and 3 nodes (0.19 seconds)
Cbc0012I Integer solution of -16.683113 found by rounding after 2219 iterations and 4 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -16.68311299999999, took 2453 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 84 times (680 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

