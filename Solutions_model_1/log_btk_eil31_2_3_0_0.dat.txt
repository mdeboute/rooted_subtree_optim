Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 21 (-12) columns and 112 (-71) elements
Clp1000I sum of infeasibilities 4.4723e-07 - average 1.17692e-08, 11 fixed columns
Coin0506I Presolve 17 (-21) rows, 10 (-11) columns and 48 (-64) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Coin0511I After Postsolve, objective 201.99265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Clp0000I Optimal - objective value 201.99265
Coin0511I After Postsolve, objective 201.99265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 201.992653 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.527%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.2374
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.6511 iterations 16
Cbc0038I Solution found of -43.6511
Cbc0038I Relaxing continuous gives -43.6511
Cbc0038I Rounding solution of -60.6511 is better than previous of -43.6511

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -60.6511 to -108.923 (0.01 seconds)
Cbc0038I Round again with cutoff of -112.087
Cbc0038I Pass   2: suminf.    0.38727 (2) obj. -112.087 iterations 3
Cbc0038I Pass   3: suminf.    0.38727 (2) obj. -112.087 iterations 1
Cbc0038I Pass   4: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass   5: suminf.    0.22764 (1) obj. -124.21 iterations 1
Cbc0038I Pass   6: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass   7: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass   8: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass   9: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass  10: suminf.    0.64122 (2) obj. -112.615 iterations 7
Cbc0038I Pass  11: suminf.    0.64122 (2) obj. -112.615 iterations 4
Cbc0038I Pass  12: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass  13: suminf.    0.65433 (3) obj. -112.087 iterations 2
Cbc0038I Pass  14: suminf.    0.65433 (3) obj. -112.087 iterations 1
Cbc0038I Pass  15: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass  16: suminf.    0.22764 (1) obj. -124.21 iterations 2
Cbc0038I Pass  17: suminf.    1.19244 (7) obj. -112.087 iterations 8
Cbc0038I Pass  18: suminf.    1.13127 (5) obj. -112.087 iterations 1
Cbc0038I Pass  19: suminf.    1.23657 (6) obj. -112.087 iterations 11
Cbc0038I Pass  20: suminf.    1.23657 (6) obj. -112.087 iterations 0
Cbc0038I Pass  21: suminf.    1.18496 (3) obj. -112.087 iterations 8
Cbc0038I Pass  22: suminf.    0.38727 (2) obj. -112.087 iterations 4
Cbc0038I Pass  23: suminf.    0.38727 (2) obj. -112.087 iterations 1
Cbc0038I Pass  24: suminf.    0.33657 (1) obj. -112.087 iterations 4
Cbc0038I Pass  25: suminf.    0.22764 (1) obj. -124.21 iterations 1
Cbc0038I Pass  26: suminf.    0.44738 (2) obj. -112.087 iterations 4
Cbc0038I Pass  27: suminf.    0.44738 (2) obj. -112.087 iterations 1
Cbc0038I Pass  28: suminf.    0.63709 (2) obj. -112.087 iterations 3
Cbc0038I Pass  29: suminf.    0.63709 (2) obj. -112.087 iterations 1
Cbc0038I Pass  30: suminf.    0.44738 (2) obj. -112.087 iterations 5
Cbc0038I Pass  31: suminf.    0.86148 (2) obj. -112.087 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 23 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -108.923 - took 0.01 seconds
Cbc0012I Integer solution of -108.9234 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 21 columns, reduced to 19 rows 10 columns
Cbc0012I Integer solution of -118.1566 found by DiveCoefficient after 124 iterations and 0 nodes (0.03 seconds)
Cbc0031I 7 added rows had average density of 10.285714
Cbc0013I At root node, 7 cuts changed objective from -140.55888 to -118.1566 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 135 row cuts average 5.2 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 51 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -118.1566, took 124 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

