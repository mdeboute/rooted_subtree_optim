Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 74 (-29) columns and 404 (-199) elements
Clp1000I sum of infeasibilities 0 - average 0, 70 fixed columns
Coin0506I Presolve 3 (-128) rows, 4 (-70) columns and 8 (-396) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 29033.021
Clp0000I Optimal - objective value 29033.021
Coin0511I After Postsolve, objective 29033.021, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6768395 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 29033.021
Clp0000I Optimal - objective value 29033.021
Clp0000I Optimal - objective value 29033.021
Coin0511I After Postsolve, objective 29033.021, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 29033.02069 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.482759
Cbc0038I Solution found of -27665.9
Cbc0038I Relaxing continuous gives -27665.9
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -27802.6
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03355 (1) obj. -27802.6 iterations 17
Cbc0038I Pass   2: suminf.    0.22222 (1) obj. -28571.5 iterations 8
Cbc0038I Pass   3: suminf.    0.67426 (3) obj. -27802.6 iterations 6
Cbc0038I Pass   4: suminf.    0.26667 (2) obj. -28790.6 iterations 9
Cbc0038I Pass   5: suminf.    0.66616 (2) obj. -27802.6 iterations 13
Cbc0038I Pass   6: suminf.    0.42269 (4) obj. -27802.6 iterations 9
Cbc0038I Pass   7: suminf.    0.63017 (3) obj. -27802.6 iterations 13
Cbc0038I Pass   8: suminf.    0.51890 (2) obj. -27802.6 iterations 5
Cbc0038I Pass   9: suminf.    0.30769 (1) obj. -28621.7 iterations 8
Cbc0038I Pass  10: suminf.    0.80728 (4) obj. -27802.6 iterations 12
Cbc0038I Pass  11: suminf.    0.50758 (2) obj. -27802.6 iterations 13
Cbc0038I Pass  12: suminf.    0.75816 (2) obj. -28994.8 iterations 8
Cbc0038I Pass  13: suminf.    0.51422 (5) obj. -27802.6 iterations 13
Cbc0038I Pass  14: suminf.    0.42269 (4) obj. -27802.6 iterations 10
Cbc0038I Pass  15: suminf.    0.63017 (3) obj. -27802.6 iterations 13
Cbc0038I Pass  16: suminf.    0.51890 (2) obj. -27802.6 iterations 5
Cbc0038I Pass  17: suminf.    0.30769 (1) obj. -28621.7 iterations 8
Cbc0038I Pass  18: suminf.    0.75816 (2) obj. -28994.8 iterations 4
Cbc0038I Pass  19: suminf.    0.30769 (1) obj. -28621.7 iterations 4
Cbc0038I Pass  20: suminf.    0.42269 (4) obj. -27802.6 iterations 10
Cbc0038I Pass  21: suminf.    0.63017 (3) obj. -27802.6 iterations 13
Cbc0038I Pass  22: suminf.    0.51890 (2) obj. -27802.6 iterations 5
Cbc0038I Pass  23: suminf.    0.69650 (2) obj. -27802.6 iterations 4
Cbc0038I Pass  24: suminf.    0.03355 (1) obj. -27802.6 iterations 17
Cbc0038I Pass  25: suminf.    0.22222 (1) obj. -28571.5 iterations 6
Cbc0038I Pass  26: suminf.    0.22222 (1) obj. -28571.5 iterations 2
Cbc0038I Pass  27: suminf.    0.03355 (1) obj. -27802.6 iterations 9
Cbc0038I Pass  28: suminf.    0.22222 (1) obj. -28571.5 iterations 8
Cbc0038I Pass  29: suminf.    0.62341 (4) obj. -27802.6 iterations 10
Cbc0038I Pass  30: suminf.    0.42857 (3) obj. -28413.3 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -27665.9 - took 0.01 seconds
Cbc0012I Integer solution of -27665.93 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 15.285714
Cbc0013I At root node, 7 cuts changed objective from -29033.021 to -28179.225 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 3.9 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -27665.93, took 141 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 18 times (139 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

