Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-21) rows, 28 (-7) columns and 144 (-51) elements
Clp1000I sum of infeasibilities 5.17325e-05 - average 1.07776e-06, 6 fixed columns
Coin0506I Presolve 33 (-15) rows, 19 (-9) columns and 96 (-48) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 6.2200919 - largest nonzero change 1.3137578e-05 ( 0.00029665403%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 237.49843
Clp0000I Optimal - objective value 237.49843
Coin0511I After Postsolve, objective 237.49843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 237.49843
Clp0000I Optimal - objective value 237.49843
Clp0000I Optimal - objective value 237.49843
Coin0511I After Postsolve, objective 237.49843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 237.4984327 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.882%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.43067
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -174.958 iterations 18
Cbc0038I Solution found of -174.958
Cbc0038I Relaxing continuous gives -174.958
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -181.212
Cbc0038I Pass   2: suminf.    0.05532 (1) obj. -181.212 iterations 1
Cbc0038I Pass   3: suminf.    0.25500 (1) obj. -181.212 iterations 1
Cbc0038I Pass   4: suminf.    1.93853 (6) obj. -181.212 iterations 8
Cbc0038I Pass   5: suminf.    1.18114 (4) obj. -181.212 iterations 3
Cbc0038I Pass   6: suminf.    0.75856 (2) obj. -181.212 iterations 2
Cbc0038I Pass   7: suminf.    0.26099 (1) obj. -181.212 iterations 2
Cbc0038I Pass   8: suminf.    0.35500 (1) obj. -181.212 iterations 1
Cbc0038I Pass   9: suminf.    1.24965 (6) obj. -181.212 iterations 5
Cbc0038I Pass  10: suminf.    1.02716 (3) obj. -181.212 iterations 7
Cbc0038I Pass  11: suminf.    0.79366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  12: suminf.    0.76366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  13: suminf.    0.76366 (3) obj. -181.212 iterations 0
Cbc0038I Pass  14: suminf.    1.02716 (3) obj. -181.212 iterations 2
Cbc0038I Pass  15: suminf.    1.02716 (3) obj. -181.212 iterations 0
Cbc0038I Pass  16: suminf.    0.79366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  17: suminf.    0.76366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  18: suminf.    0.76366 (3) obj. -181.212 iterations 0
Cbc0038I Pass  19: suminf.    1.02716 (3) obj. -181.212 iterations 2
Cbc0038I Pass  20: suminf.    1.02716 (3) obj. -181.212 iterations 0
Cbc0038I Pass  21: suminf.    0.79366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  22: suminf.    0.76366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  23: suminf.    0.76366 (3) obj. -181.212 iterations 0
Cbc0038I Pass  24: suminf.    1.02716 (3) obj. -181.212 iterations 2
Cbc0038I Pass  25: suminf.    1.02716 (3) obj. -181.212 iterations 0
Cbc0038I Pass  26: suminf.    0.79366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  27: suminf.    0.76366 (3) obj. -181.212 iterations 1
Cbc0038I Pass  28: suminf.    0.76366 (3) obj. -181.212 iterations 0
Cbc0038I Pass  29: suminf.    1.02716 (3) obj. -181.212 iterations 2
Cbc0038I Pass  30: suminf.    1.02716 (3) obj. -181.212 iterations 0
Cbc0038I Pass  31: suminf.    0.79366 (3) obj. -181.212 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -174.958 to -183.458 (0.01 seconds)
Cbc0038I Round again with cutoff of -194.266
Cbc0038I Pass  31: suminf.    0.17080 (1) obj. -194.266 iterations 0
Cbc0038I Pass  32: suminf.    0.25500 (1) obj. -194.266 iterations 1
Cbc0038I Pass  33: suminf.    2.45555 (11) obj. -194.266 iterations 19
Cbc0038I Pass  34: suminf.    0.80538 (2) obj. -194.266 iterations 7
Cbc0038I Pass  35: suminf.    0.35471 (1) obj. -194.266 iterations 2
Cbc0038I Pass  36: suminf.    0.41250 (1) obj. -194.266 iterations 1
Cbc0038I Pass  37: suminf.    0.53775 (2) obj. -194.266 iterations 9
Cbc0038I Pass  38: suminf.    0.37947 (4) obj. -194.266 iterations 7
Cbc0038I Pass  39: suminf.    1.26549 (5) obj. -194.266 iterations 4
Cbc0038I Pass  40: suminf.    1.63883 (5) obj. -194.266 iterations 7
Cbc0038I Pass  41: suminf.    1.04806 (4) obj. -194.266 iterations 2
Cbc0038I Pass  42: suminf.    1.51288 (4) obj. -194.266 iterations 7
Cbc0038I Pass  43: suminf.    1.39619 (4) obj. -194.266 iterations 2
Cbc0038I Pass  44: suminf.    1.18872 (4) obj. -194.266 iterations 2
Cbc0038I Pass  45: suminf.    3.01123 (11) obj. -194.266 iterations 12
Cbc0038I Pass  46: suminf.    2.13993 (8) obj. -194.266 iterations 8
Cbc0038I Pass  47: suminf.    0.21562 (4) obj. -194.266 iterations 11
Cbc0038I Pass  48: suminf.    0.18370 (4) obj. -194.266 iterations 2
Cbc0038I Pass  49: suminf.    1.27612 (4) obj. -194.266 iterations 4
Cbc0038I Pass  50: suminf.    1.27612 (4) obj. -194.266 iterations 0
Cbc0038I Pass  51: suminf.    0.20424 (6) obj. -194.266 iterations 6
Cbc0038I Pass  52: suminf.    1.51817 (4) obj. -194.266 iterations 10
Cbc0038I Pass  53: suminf.    1.07545 (4) obj. -194.266 iterations 5
Cbc0038I Pass  54: suminf.    0.90637 (3) obj. -194.266 iterations 4
Cbc0038I Pass  55: suminf.    0.45696 (4) obj. -194.266 iterations 3
Cbc0038I Pass  56: suminf.    1.51817 (4) obj. -194.266 iterations 6
Cbc0038I Pass  57: suminf.    3.01587 (14) obj. -194.266 iterations 16
Cbc0038I Pass  58: suminf.    1.43638 (10) obj. -194.266 iterations 6
Cbc0038I Pass  59: suminf.    1.43121 (7) obj. -194.266 iterations 2
Cbc0038I Pass  60: suminf.    1.25706 (6) obj. -194.266 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -183.458 to -188.54 (0.03 seconds)
Cbc0038I Round again with cutoff of -207.236
Cbc0038I Pass  60: suminf.    0.35218 (2) obj. -207.236 iterations 1
Cbc0038I Pass  61: suminf.    0.78946 (2) obj. -207.236 iterations 1
Cbc0038I Pass  62: suminf.    2.92789 (10) obj. -207.236 iterations 12
Cbc0038I Pass  63: suminf.    2.54896 (9) obj. -207.236 iterations 5
Cbc0038I Pass  64: suminf.    1.65690 (5) obj. -207.236 iterations 14
Cbc0038I Pass  65: suminf.    1.65690 (5) obj. -207.236 iterations 0
Cbc0038I Pass  66: suminf.    0.84131 (3) obj. -207.236 iterations 5
Cbc0038I Pass  67: suminf.    0.78946 (2) obj. -207.236 iterations 1
Cbc0038I Pass  68: suminf.    0.35218 (2) obj. -207.236 iterations 1
Cbc0038I Pass  69: suminf.    0.78946 (2) obj. -207.236 iterations 1
Cbc0038I Pass  70: suminf.    2.20340 (8) obj. -207.236 iterations 9
Cbc0038I Pass  71: suminf.    1.18303 (5) obj. -207.236 iterations 6
Cbc0038I Pass  72: suminf.    0.84406 (5) obj. -207.236 iterations 10
Cbc0038I Pass  73: suminf.    1.38117 (7) obj. -207.236 iterations 4
Cbc0038I Pass  74: suminf.    0.84406 (5) obj. -207.236 iterations 7
Cbc0038I Pass  75: suminf.    1.45278 (8) obj. -207.236 iterations 6
Cbc0038I Pass  76: suminf.    1.21756 (8) obj. -207.236 iterations 6
Cbc0038I Pass  77: suminf.    1.21593 (7) obj. -207.236 iterations 3
Cbc0038I Pass  78: suminf.    1.79756 (5) obj. -207.236 iterations 12
Cbc0038I Pass  79: suminf.    0.35218 (2) obj. -207.236 iterations 2
Cbc0038I Pass  80: suminf.    0.78946 (2) obj. -207.236 iterations 1
Cbc0038I Pass  81: suminf.    0.72847 (4) obj. -207.236 iterations 6
Cbc0038I Pass  82: suminf.    0.72847 (4) obj. -207.236 iterations 1
Cbc0038I Pass  83: suminf.    1.10005 (6) obj. -207.236 iterations 9
Cbc0038I Pass  84: suminf.    1.08932 (4) obj. -207.236 iterations 2
Cbc0038I Pass  85: suminf.    0.82534 (3) obj. -207.236 iterations 3
Cbc0038I Pass  86: suminf.    0.35218 (2) obj. -207.236 iterations 1
Cbc0038I Pass  87: suminf.    0.78946 (2) obj. -207.236 iterations 1
Cbc0038I Pass  88: suminf.    1.21756 (8) obj. -207.236 iterations 10
Cbc0038I Pass  89: suminf.    1.21593 (7) obj. -207.236 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 23 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -188.54 - took 0.03 seconds
Cbc0012I Integer solution of -188.5396 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 25 rows 15 columns
Cbc0031I 7 added rows had average density of 22
Cbc0013I At root node, 7 cuts changed objective from -237.49843 to -202.72256 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 304 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 402 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -188.5396, took 1409 iterations and 6 nodes (0.17 seconds)
Cbc0032I Strong branching done 64 times (428 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.17

