Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-37) rows, 67 (-11) columns and 363 (-90) elements
Clp1000I sum of infeasibilities 4.62579e-05 - average 3.92016e-07, 12 fixed columns
Coin0506I Presolve 88 (-30) rows, 52 (-15) columns and 273 (-90) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.1109009 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Coin0511I After Postsolve, objective 63.251879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Coin0511I After Postsolve, objective 63.251879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.25187879 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 67 columns (66 integer (66 of which binary)) and 391 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.935%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.69739
Cbc0038I Solution found of -9.57801
Cbc0038I Relaxing continuous gives -16.8197
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 52 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -16.8197 to -35.0942 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.8498
Cbc0038I Pass   1: suminf.    1.70738 (13) obj. -37.8498 iterations 54
Cbc0038I Pass   2: suminf.    0.67156 (4) obj. -37.8498 iterations 21
Cbc0038I Pass   3: suminf.    0.64116 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   4: suminf.    0.71351 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   5: suminf.    0.42566 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   6: suminf.    1.19369 (4) obj. -37.8498 iterations 7
Cbc0038I Pass   7: suminf.    0.65849 (2) obj. -37.8498 iterations 5
Cbc0038I Pass   8: suminf.    0.65703 (2) obj. -37.8498 iterations 1
Cbc0038I Pass   9: suminf.    0.47581 (2) obj. -37.8498 iterations 4
Cbc0038I Pass  10: suminf.    1.18741 (6) obj. -37.8498 iterations 11
Cbc0038I Pass  11: suminf.    0.61132 (5) obj. -37.8498 iterations 9
Cbc0038I Pass  12: suminf.    0.76573 (3) obj. -37.8498 iterations 9
Cbc0038I Pass  13: suminf.    0.58720 (2) obj. -37.8498 iterations 3
Cbc0038I Pass  14: suminf.    0.67254 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  15: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  16: suminf.    0.61952 (3) obj. -37.8498 iterations 5
Cbc0038I Pass  17: suminf.    0.46213 (3) obj. -37.8498 iterations 5
Cbc0038I Pass  18: suminf.    0.67557 (2) obj. -37.8498 iterations 5
Cbc0038I Pass  19: suminf.    0.58523 (2) obj. -37.8498 iterations 3
Cbc0038I Pass  20: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  21: suminf.    0.67254 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  22: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  23: suminf.    1.28372 (5) obj. -37.8498 iterations 14
Cbc0038I Pass  24: suminf.    0.65177 (3) obj. -37.8498 iterations 8
Cbc0038I Pass  25: suminf.    0.61115 (2) obj. -37.8498 iterations 4
Cbc0038I Pass  26: suminf.    0.57752 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  27: suminf.    0.63086 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  28: suminf.    0.57752 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  29: suminf.    2.70226 (8) obj. -37.8498 iterations 17
Cbc0038I Pass  30: suminf.    1.31709 (4) obj. -37.8498 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.0942 to -35.1631 (0.06 seconds)
Cbc0038I Round again with cutoff of -42.8097
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.11006 (13) obj. -42.8097 iterations 0
Cbc0038I Pass  31: suminf.    1.27185 (5) obj. -42.8097 iterations 19
Cbc0038I Pass  32: suminf.    1.27185 (5) obj. -42.8097 iterations 0
Cbc0038I Pass  33: suminf.    1.29809 (5) obj. -42.8097 iterations 8
Cbc0038I Pass  34: suminf.    1.15113 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  35: suminf.    1.15047 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  36: suminf.    1.29942 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  37: suminf.    2.19403 (7) obj. -42.8097 iterations 13
Cbc0038I Pass  38: suminf.    1.04555 (3) obj. -42.8097 iterations 11
Cbc0038I Pass  39: suminf.    1.03720 (4) obj. -42.8097 iterations 7
Cbc0038I Pass  40: suminf.    0.97931 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  41: suminf.    1.57347 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  42: suminf.    1.48977 (5) obj. -42.8097 iterations 2
Cbc0038I Pass  43: suminf.    1.03720 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  44: suminf.    1.62878 (6) obj. -42.8097 iterations 12
Cbc0038I Pass  45: suminf.    1.23634 (5) obj. -42.8097 iterations 7
Cbc0038I Pass  46: suminf.    1.29942 (5) obj. -42.8097 iterations 14
Cbc0038I Pass  47: suminf.    1.29809 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  48: suminf.    1.15113 (5) obj. -42.8097 iterations 7
Cbc0038I Pass  49: suminf.    1.15047 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  50: suminf.    1.43362 (7) obj. -42.8097 iterations 9
Cbc0038I Pass  51: suminf.    0.76972 (4) obj. -42.8097 iterations 9
Cbc0038I Pass  52: suminf.    1.30610 (4) obj. -42.8097 iterations 13
Cbc0038I Pass  53: suminf.    0.97931 (4) obj. -42.8097 iterations 2
Cbc0038I Pass  54: suminf.    1.57347 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  55: suminf.    1.48977 (5) obj. -42.8097 iterations 2
Cbc0038I Pass  56: suminf.    1.03720 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  57: suminf.    1.16933 (4) obj. -42.8097 iterations 8
Cbc0038I Pass  58: suminf.    0.62442 (4) obj. -42.8097 iterations 7
Cbc0038I Pass  59: suminf.    1.75129 (6) obj. -42.8097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 65 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -35.1631 - took 0.07 seconds
Cbc0012I Integer solution of -35.163116 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 113 rows 67 columns, reduced to 53 rows 31 columns
Cbc0031I 23 added rows had average density of 41.565217
Cbc0013I At root node, 23 cuts changed objective from -62.649081 to -54.342545 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5959 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1294 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0038I Full problem 113 rows 67 columns, reduced to 5 rows 9 columns
Cbc0010I After 45 nodes, 1 on tree, -35.163116 best solution, best possible -38.592138 (0.68 seconds)
Cbc0001I Search completed - best objective -35.1631158, took 6339 iterations and 46 nodes (0.68 seconds)
Cbc0032I Strong branching done 536 times (8854 iterations), fathomed 6 nodes and fixed 33 variables
Cbc0035I Maximum depth 13, 118 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.69

