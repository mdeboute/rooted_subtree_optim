Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-30) rows, 21 (-12) columns and 106 (-77) elements
Clp1000I sum of infeasibilities 1.32915e-06 - average 3.79757e-08, 13 fixed columns
Coin0506I Presolve 13 (-22) rows, 8 (-13) columns and 36 (-70) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Coin0511I After Postsolve, objective 3161.2375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.6702414 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Coin0511I After Postsolve, objective 3161.2375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3161.237485 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.74843
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2702.88 iterations 9
Cbc0038I Solution found of -2702.88
Cbc0038I Relaxing continuous gives -2702.88
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -2702.88 to -2727.88 (0.01 seconds)
Cbc0038I Round again with cutoff of -2761.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04766 (1) obj. -2761.1 iterations 1
Cbc0038I Pass   3: suminf.    0.22222 (1) obj. -2974.33 iterations 1
Cbc0038I Pass   4: suminf.    0.79382 (3) obj. -2761.1 iterations 3
Cbc0038I Pass   5: suminf.    0.46617 (2) obj. -2761.1 iterations 2
Cbc0038I Pass   6: suminf.    0.17500 (1) obj. -2863.23 iterations 3
Cbc0038I Pass   7: suminf.    0.25951 (1) obj. -2761.1 iterations 1
Cbc0038I Pass   8: suminf.    1.08821 (4) obj. -2761.1 iterations 4
Cbc0038I Pass   9: suminf.    0.91222 (2) obj. -2761.1 iterations 2
Cbc0038I Pass  10: suminf.    1.15227 (4) obj. -2761.1 iterations 2
Cbc0038I Pass  11: suminf.    0.91222 (2) obj. -2761.1 iterations 2
Cbc0038I Pass  12: suminf.    1.08821 (4) obj. -2761.1 iterations 2
Cbc0038I Pass  13: suminf.    0.84714 (3) obj. -2761.1 iterations 7
Cbc0038I Pass  14: suminf.    0.81487 (3) obj. -2761.1 iterations 2
Cbc0038I Pass  15: suminf.    0.02749 (1) obj. -2761.1 iterations 6
Cbc0038I Pass  16: suminf.    0.02749 (1) obj. -2761.1 iterations 0
Cbc0038I Pass  17: suminf.    0.28421 (1) obj. -2788.14 iterations 3
Cbc0038I Pass  18: suminf.    0.26747 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  19: suminf.    0.43269 (2) obj. -2761.1 iterations 4
Cbc0038I Pass  20: suminf.    0.26747 (1) obj. -2761.1 iterations 4
Cbc0038I Pass  21: suminf.    0.77492 (3) obj. -2761.1 iterations 3
Cbc0038I Pass  22: suminf.    0.36433 (2) obj. -2761.1 iterations 7
Cbc0038I Pass  23: suminf.    0.25509 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  24: suminf.    0.27368 (1) obj. -2791.14 iterations 1
Cbc0038I Pass  25: suminf.    1.01188 (3) obj. -2761.1 iterations 10
Cbc0038I Pass  26: suminf.    0.37778 (1) obj. -2815.5 iterations 7
Cbc0038I Pass  27: suminf.    0.33324 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  28: suminf.    0.34961 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  29: suminf.    0.34961 (1) obj. -2761.1 iterations 0
Cbc0038I Pass  30: suminf.    0.38889 (1) obj. -2809.08 iterations 1
Cbc0038I Pass  31: suminf.    0.30303 (1) obj. -2833.59 iterations 7
Cbc0038I Rounding solution of -2747.88 is better than previous of -2727.88

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2747.88 to -2782.88 (0.02 seconds)
Cbc0038I Round again with cutoff of -2838.28
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.16764 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  32: suminf.    0.12632 (1) obj. -2901.93 iterations 4
Cbc0038I Pass  33: suminf.    0.08692 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  34: suminf.    1.71129 (6) obj. -2838.28 iterations 11
Cbc0038I Pass  35: suminf.    0.09168 (2) obj. -2838.28 iterations 7
Cbc0038I Pass  36: suminf.    0.52790 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  37: suminf.    1.09772 (4) obj. -2838.28 iterations 9
Cbc0038I Pass  38: suminf.    0.13684 (1) obj. -2877.67 iterations 6
Cbc0038I Pass  39: suminf.    0.16123 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  40: suminf.    0.52560 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  41: suminf.    0.49398 (2) obj. -2881.84 iterations 3
Cbc0038I Pass  42: suminf.    0.18126 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  43: suminf.    0.18126 (2) obj. -2838.28 iterations 0
Cbc0038I Pass  44: suminf.    0.61490 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  45: suminf.    0.13684 (1) obj. -2877.67 iterations 2
Cbc0038I Pass  46: suminf.    0.16123 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  47: suminf.    0.84302 (3) obj. -2838.28 iterations 4
Cbc0038I Pass  48: suminf.    1.30397 (4) obj. -2838.28 iterations 6
Cbc0038I Pass  49: suminf.    0.52790 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  50: suminf.    0.09168 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  51: suminf.    0.52790 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  52: suminf.    0.35198 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  53: suminf.    0.09168 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  54: suminf.    0.80963 (4) obj. -2838.28 iterations 6
Cbc0038I Pass  55: suminf.    1.18403 (5) obj. -2838.28 iterations 1
Cbc0038I Pass  56: suminf.    0.08608 (2) obj. -2838.28 iterations 6
Cbc0038I Pass  57: suminf.    0.07480 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  58: suminf.    0.77536 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  59: suminf.    0.07480 (1) obj. -2838.28 iterations 2
Cbc0038I Pass  60: suminf.    0.08764 (3) obj. -2838.28 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2782.88 - took 0.02 seconds
Cbc0012I Integer solution of -2782.88 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 21 columns, reduced to 17 rows 11 columns
Cbc0031I 4 added rows had average density of 9.5
Cbc0013I At root node, 4 cuts changed objective from -3059.7221 to -2791.6702 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 143 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 287 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 152 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.831 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2782.88 best solution, best possible -2791.6702 (1.58 seconds)
Cbc0001I Search completed - best objective -2782.88, took 884 iterations and 2 nodes (1.61 seconds)
Cbc0032I Strong branching done 12 times (29 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.62

