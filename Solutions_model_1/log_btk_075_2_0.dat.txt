Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 142 (-10) rows, 74 (-3) columns and 355 (-19) elements
Clp1000I sum of infeasibilities 0.00199532 - average 1.40516e-05, 19 fixed columns
Coin0506I Presolve 94 (-48) rows, 55 (-19) columns and 240 (-115) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 3196.2213
Clp0000I Optimal - objective value 3196.2213
Coin0511I After Postsolve, objective 3196.2213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3175689 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3196.2213
Clp0000I Optimal - objective value 3196.2213
Clp0000I Optimal - objective value 3196.2213
Coin0511I After Postsolve, objective 3196.2213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3196.221315 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 142 rows, 74 columns (73 integer (73 of which binary)) and 354 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.279%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 16.1049
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -783.269 iterations 89
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -783.269 iterations 0
Cbc0038I Solution found of -664.102
Cbc0038I Relaxing continuous gives -664.102
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 74 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -664.102 to -1554.32 (0.04 seconds)
Cbc0038I Round again with cutoff of -1716.64
Cbc0038I Pass   3: suminf.    0.59037 (12) obj. -1716.64 iterations 24
Cbc0038I Pass   4: suminf.    0.59037 (12) obj. -1716.64 iterations 0
Cbc0038I Pass   5: suminf.    1.72342 (12) obj. -1716.64 iterations 36
Cbc0038I Pass   6: suminf.    1.15081 (11) obj. -1716.64 iterations 3
Cbc0038I Pass   7: suminf.    2.98218 (18) obj. -1716.64 iterations 19
Cbc0038I Pass   8: suminf.    2.10035 (15) obj. -1716.64 iterations 8
Cbc0038I Pass   9: suminf.    2.10035 (15) obj. -1716.64 iterations 0
Cbc0038I Pass  10: suminf.    3.63516 (19) obj. -1716.64 iterations 15
Cbc0038I Pass  11: suminf.    2.70967 (17) obj. -1716.64 iterations 9
Cbc0038I Pass  12: suminf.    2.69296 (14) obj. -1716.64 iterations 1
Cbc0038I Pass  13: suminf.    4.42423 (21) obj. -1716.64 iterations 19
Cbc0038I Pass  14: suminf.    2.94039 (17) obj. -1716.64 iterations 7
Cbc0038I Pass  15: suminf.    2.94039 (17) obj. -1716.64 iterations 1
Cbc0038I Pass  16: suminf.    5.38424 (22) obj. -1716.64 iterations 20
Cbc0038I Pass  17: suminf.    3.79427 (19) obj. -1716.64 iterations 6
Cbc0038I Pass  18: suminf.    2.69296 (14) obj. -1716.64 iterations 8
Cbc0038I Pass  19: suminf.    4.42423 (21) obj. -1716.64 iterations 19
Cbc0038I Pass  20: suminf.    2.94039 (17) obj. -1716.64 iterations 7
Cbc0038I Pass  21: suminf.    2.94039 (17) obj. -1716.64 iterations 1
Cbc0038I Pass  22: suminf.    2.94501 (18) obj. -1716.64 iterations 9
Cbc0038I Pass  23: suminf.    1.98030 (13) obj. -1716.64 iterations 4
Cbc0038I Pass  24: suminf.    1.43791 (11) obj. -1716.64 iterations 6
Cbc0038I Pass  25: suminf.    4.42423 (21) obj. -1716.64 iterations 19
Cbc0038I Pass  26: suminf.    2.94039 (17) obj. -1716.64 iterations 7
Cbc0038I Pass  27: suminf.    2.94039 (17) obj. -1716.64 iterations 1
Cbc0038I Pass  28: suminf.    2.94501 (18) obj. -1716.64 iterations 10
Cbc0038I Pass  29: suminf.    1.98030 (13) obj. -1716.64 iterations 5
Cbc0038I Pass  30: suminf.    1.43791 (11) obj. -1716.64 iterations 6
Cbc0038I Pass  31: suminf.    4.42423 (21) obj. -1716.64 iterations 19
Cbc0038I Pass  32: suminf.    2.94039 (17) obj. -1716.64 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 74 columns, reduced to 87 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -1554.32 to -1592.47 (0.08 seconds)
Cbc0038I Round again with cutoff of -2008.8
Cbc0038I Pass  32: suminf.    1.67286 (19) obj. -2008.8 iterations 8
Cbc0038I Pass  33: suminf.    0.76142 (11) obj. -2008.8 iterations 22
Cbc0038I Pass  34: suminf.    1.73696 (16) obj. -2008.8 iterations 23
Cbc0038I Pass  35: suminf.    1.65944 (13) obj. -2008.8 iterations 8
Cbc0038I Pass  36: suminf.    3.94916 (22) obj. -2008.8 iterations 18
Cbc0038I Pass  37: suminf.    1.81910 (12) obj. -2008.8 iterations 8
Cbc0038I Pass  38: suminf.    1.61861 (11) obj. -2008.8 iterations 5
Cbc0038I Pass  39: suminf.    4.22157 (23) obj. -2008.8 iterations 18
Cbc0038I Pass  40: suminf.    3.64451 (21) obj. -2008.8 iterations 16
Cbc0038I Pass  41: suminf.    2.62837 (22) obj. -2008.8 iterations 9
Cbc0038I Pass  42: suminf.    6.18901 (28) obj. -2008.8 iterations 32
Cbc0038I Pass  43: suminf.    3.61892 (18) obj. -2008.8 iterations 16
Cbc0038I Pass  44: suminf.    4.93225 (22) obj. -2008.8 iterations 24
Cbc0038I Pass  45: suminf.    3.08052 (16) obj. -2008.8 iterations 14
Cbc0038I Pass  46: suminf.    5.54034 (27) obj. -2008.8 iterations 23
Cbc0038I Pass  47: suminf.    3.23942 (16) obj. -2008.8 iterations 11
Cbc0038I Pass  48: suminf.    1.52236 (13) obj. -2008.8 iterations 9
Cbc0038I Pass  49: suminf.    3.74887 (21) obj. -2008.8 iterations 16
Cbc0038I Pass  50: suminf.    2.17265 (15) obj. -2008.8 iterations 6
Cbc0038I Pass  51: suminf.    1.72113 (13) obj. -2008.8 iterations 6
Cbc0038I Pass  52: suminf.    5.39110 (27) obj. -2008.8 iterations 22
Cbc0038I Pass  53: suminf.    3.23942 (16) obj. -2008.8 iterations 9
Cbc0038I Pass  54: suminf.    1.52236 (13) obj. -2008.8 iterations 9
Cbc0038I Pass  55: suminf.    4.27867 (24) obj. -2008.8 iterations 21
Cbc0038I Pass  56: suminf.    5.70968 (25) obj. -2008.8 iterations 21
Cbc0038I Pass  57: suminf.    3.21190 (18) obj. -2008.8 iterations 25
Cbc0038I Pass  58: suminf.    4.03035 (22) obj. -2008.8 iterations 21
Cbc0038I Pass  59: suminf.    3.23942 (16) obj. -2008.8 iterations 5
Cbc0038I Pass  60: suminf.    1.52236 (13) obj. -2008.8 iterations 9
Cbc0038I Pass  61: suminf.    4.27867 (24) obj. -2008.8 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 74 columns, reduced to 91 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -1592.47 - took 0.10 seconds
Cbc0012I Integer solution of -1592.4714 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 142 rows 74 columns, reduced to 87 rows 53 columns
Cbc0031I 25 added rows had average density of 37.68
Cbc0013I At root node, 25 cuts changed objective from -3177.4673 to -1776.5253 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8860 row cuts average 5.5 elements, 1 column cuts (1 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1691 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 369 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1592.4714 best solution, best possible -1776.5253 (0.91 seconds)
Cbc0001I Search completed - best objective -1592.471417, took 5639 iterations and 6 nodes (0.95 seconds)
Cbc0032I Strong branching done 170 times (3879 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.96

