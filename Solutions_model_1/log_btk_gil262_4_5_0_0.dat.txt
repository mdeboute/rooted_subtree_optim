Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 259 (-5) columns and 1486 (-59) elements
Clp1000I sum of infeasibilities 1.72727e-05 - average 3.46146e-08, 75 fixed columns
Coin0506I Presolve 351 (-148) rows, 184 (-75) columns and 1047 (-439) elements
Clp0029I End of values pass after 184 iterations
Clp0014I Perturbing problem by 0.001% of 2.2551913 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Coin0511I After Postsolve, objective 175.71925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Coin0511I After Postsolve, objective 175.71925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 175.7192496 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 259 columns (258 integer (258 of which binary)) and 1486 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 11.5396
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.6475 iterations 129
Cbc0038I Solution found of -25.6475
Cbc0038I Relaxing continuous gives -25.6475
Cbc0038I Rounding solution of -60.002 is better than previous of -25.6475

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 121 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -60.002 to -96.7782 (0.14 seconds)
Cbc0038I Round again with cutoff of -104.672
Cbc0038I Pass   2: suminf.    2.31461 (10) obj. -104.672 iterations 30
Cbc0038I Pass   3: suminf.    2.31461 (10) obj. -104.672 iterations 0
Cbc0038I Pass   4: suminf.    2.04259 (6) obj. -104.672 iterations 27
Cbc0038I Pass   5: suminf.    2.00602 (7) obj. -104.672 iterations 9
Cbc0038I Pass   6: suminf.    2.59339 (7) obj. -104.672 iterations 8
Cbc0038I Pass   7: suminf.    2.03957 (7) obj. -104.672 iterations 10
Cbc0038I Pass   8: suminf.    2.03957 (7) obj. -104.672 iterations 2
Cbc0038I Pass   9: suminf.    2.65068 (7) obj. -104.672 iterations 21
Cbc0038I Pass  10: suminf.    2.05160 (8) obj. -104.672 iterations 8
Cbc0038I Pass  11: suminf.    2.50581 (9) obj. -104.672 iterations 19
Cbc0038I Pass  12: suminf.    2.26145 (9) obj. -104.672 iterations 32
Cbc0038I Pass  13: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I Pass  14: suminf.    2.55778 (8) obj. -104.672 iterations 23
Cbc0038I Pass  15: suminf.    2.43508 (6) obj. -104.672 iterations 7
Cbc0038I Pass  16: suminf.    2.28060 (8) obj. -104.672 iterations 19
Cbc0038I Pass  17: suminf.    2.28060 (8) obj. -104.672 iterations 1
Cbc0038I Pass  18: suminf.    2.74800 (8) obj. -104.672 iterations 29
Cbc0038I Pass  19: suminf.    2.05160 (8) obj. -104.672 iterations 16
Cbc0038I Pass  20: suminf.    2.50581 (9) obj. -104.672 iterations 21
Cbc0038I Pass  21: suminf.    2.26145 (9) obj. -104.672 iterations 34
Cbc0038I Pass  22: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I Pass  23: suminf.    2.55778 (8) obj. -104.672 iterations 23
Cbc0038I Pass  24: suminf.    2.43508 (6) obj. -104.672 iterations 7
Cbc0038I Pass  25: suminf.    2.28060 (8) obj. -104.672 iterations 19
Cbc0038I Pass  26: suminf.    2.28060 (8) obj. -104.672 iterations 1
Cbc0038I Pass  27: suminf.    2.74800 (8) obj. -104.672 iterations 27
Cbc0038I Pass  28: suminf.    2.05160 (8) obj. -104.672 iterations 14
Cbc0038I Pass  29: suminf.    2.50581 (9) obj. -104.672 iterations 19
Cbc0038I Pass  30: suminf.    2.26145 (9) obj. -104.672 iterations 32
Cbc0038I Pass  31: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 127 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -96.7782 - took 0.23 seconds
Cbc0012I Integer solution of -96.7782 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 121 rows 66 columns
Cbc0031I 30 added rows had average density of 145.83333
Cbc0013I At root node, 30 cuts changed objective from -175.71925 to -155.45121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27931 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2359 row cuts average 255.1 elements, 0 column cuts (0 active)  in 0.963 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.979 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 248.6 elements, 0 column cuts (0 active)  in 0.424 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -96.7782 best solution, best possible -155.45121 (8.50 seconds)
Cbc0010I After 5 nodes, 6 on tree, -96.7782 best solution, best possible -155.45121 (9.23 seconds)
Cbc0010I After 34 nodes, 9 on tree, -96.7782 best solution, best possible -155.45121 (9.95 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 109 rows 60 columns
Cbc0010I After 85 nodes, 8 on tree, -96.7782 best solution, best possible -155.45121 (10.65 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 64 rows 40 columns
Cbc0010I After 118 nodes, 3 on tree, -96.7782 best solution, best possible -155.45007 (11.40 seconds)
Cbc0001I Search completed - best objective -96.77820000000003, took 20282 iterations and 156 nodes (12.00 seconds)
Cbc0032I Strong branching done 1818 times (38872 iterations), fathomed 6 nodes and fixed 66 variables
Cbc0035I Maximum depth 54, 1118 variables fixed on reduced cost
Total time (CPU seconds):       11.27   (Wallclock seconds):       12.07

