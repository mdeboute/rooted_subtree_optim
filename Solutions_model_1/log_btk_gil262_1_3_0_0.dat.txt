Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 485 (-42) rows, 250 (-14) columns and 1443 (-102) elements
Clp1000I sum of infeasibilities 4.46582e-05 - average 9.20788e-08, 166 fixed columns
Coin0506I Presolve 154 (-331) rows, 82 (-168) columns and 458 (-985) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 0.2090503 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 295.1434
Clp0000I Optimal - objective value 295.1434
Coin0511I After Postsolve, objective 295.1434, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13486096 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 295.1434
Clp0000I Optimal - objective value 295.1434
Clp0000I Optimal - objective value 295.1434
Coin0511I After Postsolve, objective 295.1434, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.1433977 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 485 rows, 250 columns (249 integer (249 of which binary)) and 1443 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 9.68096
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -61.0119 iterations 130
Cbc0038I Solution found of -61.0119
Cbc0038I Relaxing continuous gives -61.0119
Cbc0038I Rounding solution of -116.243 is better than previous of -61.0119

Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 485 rows 250 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -116.243 to -208.088 (0.06 seconds)
Cbc0038I Round again with cutoff of -216.794
Cbc0038I Pass   2: suminf.    3.78874 (17) obj. -216.794 iterations 62
Cbc0038I Pass   3: suminf.    3.28009 (14) obj. -216.794 iterations 14
Cbc0038I Pass   4: suminf.    3.28009 (14) obj. -216.794 iterations 0
Cbc0038I Pass   5: suminf.    2.61509 (9) obj. -216.794 iterations 38
Cbc0038I Pass   6: suminf.    1.58157 (6) obj. -216.794 iterations 27
Cbc0038I Pass   7: suminf.    2.13111 (6) obj. -216.794 iterations 17
Cbc0038I Pass   8: suminf.    1.63455 (6) obj. -216.794 iterations 3
Cbc0038I Pass   9: suminf.    2.21798 (7) obj. -216.794 iterations 21
Cbc0038I Pass  10: suminf.    0.99504 (7) obj. -216.794 iterations 9
Cbc0038I Pass  11: suminf.    0.95374 (5) obj. -216.794 iterations 15
Cbc0038I Pass  12: suminf.    0.81243 (4) obj. -216.794 iterations 22
Cbc0038I Pass  13: suminf.    0.74861 (4) obj. -216.794 iterations 2
Cbc0038I Pass  14: suminf.    0.82993 (3) obj. -216.794 iterations 7
Cbc0038I Pass  15: suminf.    0.83579 (4) obj. -216.794 iterations 10
Cbc0038I Pass  16: suminf.    0.83579 (4) obj. -216.794 iterations 0
Cbc0038I Pass  17: suminf.    0.80427 (2) obj. -216.794 iterations 9
Cbc0038I Pass  18: suminf.    0.75965 (2) obj. -216.794 iterations 2
Cbc0038I Pass  19: suminf.    0.40581 (2) obj. -216.794 iterations 5
Cbc0038I Pass  20: suminf.    0.40581 (2) obj. -216.794 iterations 0
Cbc0038I Pass  21: suminf.    0.92866 (4) obj. -216.794 iterations 9
Cbc0038I Pass  22: suminf.    0.83579 (4) obj. -216.794 iterations 9
Cbc0038I Pass  23: suminf.    0.83579 (4) obj. -216.794 iterations 0
Cbc0038I Pass  24: suminf.    0.80427 (2) obj. -216.794 iterations 9
Cbc0038I Pass  25: suminf.    0.75965 (2) obj. -216.794 iterations 2
Cbc0038I Pass  26: suminf.    0.40581 (2) obj. -216.794 iterations 5
Cbc0038I Pass  27: suminf.    0.40581 (2) obj. -216.794 iterations 0
Cbc0038I Pass  28: suminf.    0.92866 (4) obj. -216.794 iterations 9
Cbc0038I Pass  29: suminf.    0.83579 (4) obj. -216.794 iterations 9
Cbc0038I Pass  30: suminf.    0.83579 (4) obj. -216.794 iterations 0
Cbc0038I Pass  31: suminf.    0.80427 (2) obj. -216.794 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 485 rows 250 columns, reduced to 108 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -208.088 - took 0.11 seconds
Cbc0012I Integer solution of -208.08802 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 485 rows 250 columns, reduced to 94 rows 51 columns
Cbc0031I 18 added rows had average density of 177.61111
Cbc0013I At root node, 18 cuts changed objective from -295.1434 to -269.05895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12596 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.403 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1577 row cuts average 243.1 elements, 0 column cuts (0 active)  in 0.277 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.226 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 239.1 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -208.08802 best solution, best possible -269.05894 (2.54 seconds)
Cbc0038I Full problem 485 rows 250 columns, reduced to 9 rows 13 columns
Cbc0038I Full problem 485 rows 250 columns, reduced to 14 rows 15 columns
Cbc0010I After 147 nodes, 14 on tree, -208.08802 best solution, best possible -269.05894 (3.24 seconds)
Cbc0012I Integer solution of -208.94562 found by rounding after 14754 iterations and 242 nodes (3.51 seconds)
Cbc0001I Search completed - best objective -208.9456200000001, took 15186 iterations and 252 nodes (3.54 seconds)
Cbc0032I Strong branching done 1758 times (30243 iterations), fathomed 76 nodes and fixed 138 variables
Cbc0035I Maximum depth 24, 2464 variables fixed on reduced cost
Total time (CPU seconds):       3.38   (Wallclock seconds):       3.57

