Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 142 (-63) rows, 77 (-26) columns and 431 (-172) elements
Clp1000I sum of infeasibilities 2.45999e-05 - average 1.73239e-07, 64 fixed columns
Coin0506I Presolve 7 (-135) rows, 6 (-71) columns and 20 (-411) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 25400.119
Clp0000I Optimal - objective value 25400.119
Coin0511I After Postsolve, objective 25400.119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7349017 - largest nonzero change 0 ( 0%) - largest zero change 2.8787094e-05
Clp0000I Optimal - objective value 25400.119
Clp0000I Optimal - objective value 25400.119
Clp0000I Optimal - objective value 25400.119
Coin0511I After Postsolve, objective 25400.119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25400.11948 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 141 rows, 77 columns (76 integer (76 of which binary)) and 489 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.103%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.311547
Cbc0038I Pass   1: suminf.    0.27967 (2) obj. -25288.2 iterations 15
Cbc0038I Solution found of -16613.5
Cbc0038I Relaxing continuous gives -16613.5
Cbc0038I Rounding solution of -19522.4 is better than previous of -16613.5

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 77 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -19522.4 to -22245.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -22560.9
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27967 (2) obj. -25288.2 iterations 0
Cbc0038I Pass   3: suminf.    0.83448 (2) obj. -22560.9 iterations 4
Cbc0038I Pass   4: suminf.    1.07444 (3) obj. -22560.9 iterations 10
Cbc0038I Pass   5: suminf.    1.07444 (3) obj. -22560.9 iterations 8
Cbc0038I Pass   6: suminf.    1.06794 (5) obj. -22560.9 iterations 24
Cbc0038I Pass   7: suminf.    1.06794 (5) obj. -22560.9 iterations 4
Cbc0038I Pass   8: suminf.    0.55685 (2) obj. -24160.1 iterations 10
Cbc0038I Pass   9: suminf.    0.97955 (2) obj. -22560.9 iterations 4
Cbc0038I Pass  10: suminf.    2.17397 (11) obj. -22560.9 iterations 18
Cbc0038I Pass  11: suminf.    2.00036 (8) obj. -22560.9 iterations 8
Cbc0038I Pass  12: suminf.    1.78679 (6) obj. -22560.9 iterations 18
Cbc0038I Pass  13: suminf.    0.27967 (2) obj. -25288.2 iterations 13
Cbc0038I Pass  14: suminf.    0.83448 (2) obj. -22560.9 iterations 2
Cbc0038I Pass  15: suminf.    1.04356 (6) obj. -22560.9 iterations 13
Cbc0038I Pass  16: suminf.    0.34193 (3) obj. -22560.9 iterations 9
Cbc0038I Pass  17: suminf.    0.91404 (2) obj. -22560.9 iterations 4
Cbc0038I Pass  18: suminf.    0.57676 (2) obj. -23599.2 iterations 2
Cbc0038I Pass  19: suminf.    0.91404 (2) obj. -22560.9 iterations 2
Cbc0038I Pass  20: suminf.    2.10579 (7) obj. -22560.9 iterations 13
Cbc0038I Pass  21: suminf.    0.83448 (2) obj. -22560.9 iterations 9
Cbc0038I Pass  22: suminf.    0.27967 (2) obj. -25288.2 iterations 2
Cbc0038I Pass  23: suminf.    0.27967 (2) obj. -25288.2 iterations 6
Cbc0038I Pass  24: suminf.    0.27967 (2) obj. -25288.2 iterations 5
Cbc0038I Pass  25: suminf.    1.68276 (7) obj. -22560.9 iterations 12
Cbc0038I Pass  26: suminf.    1.67001 (5) obj. -22560.9 iterations 5
Cbc0038I Pass  27: suminf.    0.55685 (2) obj. -24160.1 iterations 10
Cbc0038I Pass  28: suminf.    0.97955 (2) obj. -22560.9 iterations 3
Cbc0038I Pass  29: suminf.    1.48263 (8) obj. -22560.9 iterations 8
Cbc0038I Pass  30: suminf.    0.91348 (3) obj. -22560.9 iterations 11
Cbc0038I Pass  31: suminf.    1.62402 (4) obj. -22560.9 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 77 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -22245.4 to -23194.3 (0.05 seconds)
Cbc0038I Round again with cutoff of -23635.5
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27967 (2) obj. -25288.2 iterations 0
Cbc0038I Pass  32: suminf.    0.62388 (2) obj. -23635.5 iterations 4
Cbc0038I Pass  33: suminf.    0.39788 (3) obj. -23635.5 iterations 8
Cbc0038I Pass  34: suminf.    0.39788 (3) obj. -23635.5 iterations 2
Cbc0038I Pass  35: suminf.    0.80985 (2) obj. -23635.5 iterations 5
Cbc0038I Pass  36: suminf.    0.55685 (2) obj. -24160.1 iterations 4
Cbc0038I Pass  37: suminf.    2.18795 (5) obj. -23635.5 iterations 17
Cbc0038I Pass  38: suminf.    1.59637 (6) obj. -23635.5 iterations 10
Cbc0038I Pass  39: suminf.    1.24196 (4) obj. -23635.5 iterations 13
Cbc0038I Pass  40: suminf.    0.09646 (1) obj. -23635.5 iterations 8
Cbc0038I Pass  41: suminf.    0.09646 (1) obj. -23635.5 iterations 0
Cbc0038I Pass  42: suminf.    0.55685 (2) obj. -24160.1 iterations 6
Cbc0038I Pass  43: suminf.    0.80985 (2) obj. -23635.5 iterations 4
Cbc0038I Pass  44: suminf.    0.39788 (3) obj. -23635.5 iterations 11
Cbc0038I Pass  45: suminf.    0.39788 (3) obj. -23635.5 iterations 5
Cbc0038I Pass  46: suminf.    1.39623 (4) obj. -23635.5 iterations 6
Cbc0038I Pass  47: suminf.    1.39623 (4) obj. -23635.5 iterations 4
Cbc0038I Pass  48: suminf.    1.69849 (4) obj. -23635.5 iterations 9
Cbc0038I Pass  49: suminf.    0.83320 (2) obj. -25154.2 iterations 11
Cbc0038I Pass  50: suminf.    0.83921 (2) obj. -23635.5 iterations 3
Cbc0038I Pass  51: suminf.    1.04450 (4) obj. -23635.5 iterations 13
Cbc0038I Pass  52: suminf.    0.82303 (4) obj. -23635.5 iterations 10
Cbc0038I Pass  53: suminf.    0.90387 (4) obj. -23635.5 iterations 2
Cbc0038I Pass  54: suminf.    1.81999 (5) obj. -23635.5 iterations 10
Cbc0038I Pass  55: suminf.    1.07842 (4) obj. -23635.5 iterations 7
Cbc0038I Pass  56: suminf.    0.99690 (5) obj. -23635.5 iterations 5
Cbc0038I Pass  57: suminf.    1.46939 (3) obj. -24485.6 iterations 6
Cbc0038I Pass  58: suminf.    1.46939 (3) obj. -24485.6 iterations 0
Cbc0038I Pass  59: suminf.    0.83921 (2) obj. -23635.5 iterations 4
Cbc0038I Pass  60: suminf.    0.83320 (2) obj. -25154.2 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 77 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23194.3 - took 0.04 seconds
Cbc0012I Integer solution of -23194.344 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 141 rows 77 columns, reduced to 7 rows 7 columns
Cbc0031I 6 added rows had average density of 18.333333
Cbc0013I At root node, 6 cuts changed objective from -25400.119 to -23987.38 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 3.3 elements, 9 column cuts (9 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0012I Integer solution of -23841.064 found by DiveCoefficient after 154 iterations and 2 nodes (0.39 seconds)
Cbc0001I Search completed - best objective -23841.064, took 178 iterations and 2 nodes (0.41 seconds)
Cbc0032I Strong branching done 16 times (132 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.41

