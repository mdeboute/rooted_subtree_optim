Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 2.3899e-05 - average 1.82435e-07, 7 fixed columns
Coin0506I Presolve 117 (-14) rows, 67 (-7) columns and 360 (-42) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 55.946254
Clp0000I Optimal - objective value 55.946254
Coin0511I After Postsolve, objective 55.946254, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.946254
Clp0000I Optimal - objective value 55.946254
Clp0000I Optimal - objective value 55.946254
Coin0511I After Postsolve, objective 55.946254, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.94625406 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.27967
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.25962 iterations 69
Cbc0038I Solution found of 2.25962
Cbc0038I Relaxing continuous gives 2.25962
Cbc0038I Rounding solution of -14.9723 is better than previous of 2.25962

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -14.9723 to -26.796 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.7111
Cbc0038I Pass   2: suminf.    3.63253 (13) obj. -29.7111 iterations 25
Cbc0038I Pass   3: suminf.    1.95822 (6) obj. -29.7111 iterations 24
Cbc0038I Pass   4: suminf.    1.95822 (6) obj. -29.7111 iterations 1
Cbc0038I Pass   5: suminf.    1.16761 (3) obj. -29.7111 iterations 10
Cbc0038I Pass   6: suminf.    1.08227 (4) obj. -29.7111 iterations 5
Cbc0038I Pass   7: suminf.    1.19280 (4) obj. -29.7111 iterations 7
Cbc0038I Pass   8: suminf.    1.19280 (4) obj. -29.7111 iterations 0
Cbc0038I Pass   9: suminf.    1.12986 (3) obj. -29.7111 iterations 6
Cbc0038I Pass  10: suminf.    4.66614 (12) obj. -29.7111 iterations 20
Cbc0038I Pass  11: suminf.    1.56296 (7) obj. -29.7111 iterations 16
Cbc0038I Pass  12: suminf.    1.14787 (4) obj. -29.7111 iterations 14
Cbc0038I Pass  13: suminf.    1.14787 (4) obj. -29.7111 iterations 0
Cbc0038I Pass  14: suminf.    1.03986 (3) obj. -29.7111 iterations 3
Cbc0038I Pass  15: suminf.    1.03986 (3) obj. -29.7111 iterations 0
Cbc0038I Pass  16: suminf.    0.77639 (3) obj. -29.7111 iterations 3
Cbc0038I Pass  17: suminf.    1.02675 (3) obj. -29.7111 iterations 4
Cbc0038I Pass  18: suminf.    1.02675 (3) obj. -29.7111 iterations 0
Cbc0038I Pass  19: suminf.    1.05804 (3) obj. -29.7111 iterations 1
Cbc0038I Pass  20: suminf.    1.45850 (6) obj. -29.7111 iterations 15
Cbc0038I Pass  21: suminf.    1.45850 (6) obj. -29.7111 iterations 1
Cbc0038I Pass  22: suminf.    1.90421 (7) obj. -29.7111 iterations 16
Cbc0038I Pass  23: suminf.    1.69268 (7) obj. -29.7111 iterations 5
Cbc0038I Pass  24: suminf.    1.15000 (5) obj. -29.7111 iterations 10
Cbc0038I Pass  25: suminf.    1.07001 (4) obj. -29.7111 iterations 1
Cbc0038I Pass  26: suminf.    1.69268 (7) obj. -29.7111 iterations 7
Cbc0038I Pass  27: suminf.    2.79310 (8) obj. -29.7111 iterations 31
Cbc0038I Pass  28: suminf.    2.12519 (6) obj. -29.7111 iterations 10
Cbc0038I Pass  29: suminf.    1.35338 (5) obj. -29.7111 iterations 4
Cbc0038I Pass  30: suminf.    0.81953 (3) obj. -29.7111 iterations 4
Cbc0038I Pass  31: suminf.    0.81953 (3) obj. -29.7111 iterations 0
Cbc0038I Rounding solution of -28.4439 is better than previous of -26.796

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 87 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -28.4439 to -31.3606 (0.09 seconds)
Cbc0038I Round again with cutoff of -36.2778
Cbc0038I Pass  31: suminf.    4.57482 (16) obj. -36.2778 iterations 3
Cbc0038I Pass  32: suminf.    3.34045 (10) obj. -36.2778 iterations 24
Cbc0038I Pass  33: suminf.    1.79624 (6) obj. -36.2778 iterations 11
Cbc0038I Pass  34: suminf.    1.79624 (6) obj. -36.2778 iterations 0
Cbc0038I Pass  35: suminf.    2.04072 (6) obj. -36.2778 iterations 11
Cbc0038I Pass  36: suminf.    1.78752 (6) obj. -36.2778 iterations 6
Cbc0038I Pass  37: suminf.    1.89974 (6) obj. -36.2778 iterations 9
Cbc0038I Pass  38: suminf.    1.86786 (7) obj. -36.2778 iterations 6
Cbc0038I Pass  39: suminf.    1.53154 (5) obj. -36.2778 iterations 13
Cbc0038I Pass  40: suminf.    1.51112 (5) obj. -36.2778 iterations 1
Cbc0038I Pass  41: suminf.    1.49315 (7) obj. -36.2778 iterations 7
Cbc0038I Pass  42: suminf.    1.49315 (7) obj. -36.2778 iterations 2
Cbc0038I Pass  43: suminf.    2.45663 (7) obj. -36.2778 iterations 6
Cbc0038I Pass  44: suminf.    1.85212 (5) obj. -36.2778 iterations 4
Cbc0038I Pass  45: suminf.    1.62374 (5) obj. -36.2778 iterations 1
Cbc0038I Pass  46: suminf.    1.72630 (5) obj. -36.2778 iterations 6
Cbc0038I Pass  47: suminf.    1.49315 (7) obj. -36.2778 iterations 3
Cbc0038I Pass  48: suminf.    1.49315 (7) obj. -36.2778 iterations 2
Cbc0038I Pass  49: suminf.    2.45663 (7) obj. -36.2778 iterations 6
Cbc0038I Pass  50: suminf.    1.85212 (5) obj. -36.2778 iterations 4
Cbc0038I Pass  51: suminf.    1.62374 (5) obj. -36.2778 iterations 1
Cbc0038I Pass  52: suminf.    1.72630 (5) obj. -36.2778 iterations 6
Cbc0038I Pass  53: suminf.    1.49315 (7) obj. -36.2778 iterations 3
Cbc0038I Pass  54: suminf.    1.49315 (7) obj. -36.2778 iterations 2
Cbc0038I Pass  55: suminf.    2.45663 (7) obj. -36.2778 iterations 6
Cbc0038I Pass  56: suminf.    1.85212 (5) obj. -36.2778 iterations 4
Cbc0038I Pass  57: suminf.    1.62374 (5) obj. -36.2778 iterations 1
Cbc0038I Pass  58: suminf.    1.72630 (5) obj. -36.2778 iterations 6
Cbc0038I Pass  59: suminf.    1.49315 (7) obj. -36.2778 iterations 3
Cbc0038I Pass  60: suminf.    1.49315 (7) obj. -36.2778 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 74 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -31.3606 to -31.4529 (0.13 seconds)
Cbc0038I Round again with cutoff of -42.1783
Cbc0038I Pass  60: suminf.    5.48397 (20) obj. -42.1783 iterations 4
Cbc0038I Pass  61: suminf.    3.59272 (11) obj. -42.1783 iterations 28
Cbc0038I Pass  62: suminf.    2.21385 (6) obj. -42.1783 iterations 13
Cbc0038I Pass  63: suminf.    2.13220 (9) obj. -42.1783 iterations 5
Cbc0038I Pass  64: suminf.    3.37430 (10) obj. -42.1783 iterations 9
Cbc0038I Pass  65: suminf.    2.52977 (7) obj. -42.1783 iterations 13
Cbc0038I Pass  66: suminf.    2.41167 (8) obj. -42.1783 iterations 8
Cbc0038I Pass  67: suminf.    2.36999 (8) obj. -42.1783 iterations 11
Cbc0038I Pass  68: suminf.    2.23868 (10) obj. -42.1783 iterations 6
Cbc0038I Pass  69: suminf.    3.92615 (10) obj. -42.1783 iterations 11
Cbc0038I Pass  70: suminf.    3.40494 (11) obj. -42.1783 iterations 11
Cbc0038I Pass  71: suminf.    3.35795 (9) obj. -42.1783 iterations 3
Cbc0038I Pass  72: suminf.    2.70124 (8) obj. -42.1783 iterations 10
Cbc0038I Pass  73: suminf.    2.37320 (7) obj. -42.1783 iterations 8
Cbc0038I Pass  74: suminf.    2.27880 (9) obj. -42.1783 iterations 5
Cbc0038I Pass  75: suminf.    3.37430 (10) obj. -42.1783 iterations 8
Cbc0038I Pass  76: suminf.    2.52977 (7) obj. -42.1783 iterations 13
Cbc0038I Pass  77: suminf.    2.41167 (8) obj. -42.1783 iterations 7
Cbc0038I Pass  78: suminf.    2.36999 (8) obj. -42.1783 iterations 10
Cbc0038I Pass  79: suminf.    2.23868 (10) obj. -42.1783 iterations 5
Cbc0038I Pass  80: suminf.    3.92615 (10) obj. -42.1783 iterations 10
Cbc0038I Pass  81: suminf.    3.40494 (11) obj. -42.1783 iterations 10
Cbc0038I Pass  82: suminf.    3.35795 (9) obj. -42.1783 iterations 3
Cbc0038I Pass  83: suminf.    2.70124 (8) obj. -42.1783 iterations 10
Cbc0038I Pass  84: suminf.    2.37320 (7) obj. -42.1783 iterations 8
Cbc0038I Pass  85: suminf.    2.27880 (9) obj. -42.1783 iterations 5
Cbc0038I Pass  86: suminf.    3.37430 (10) obj. -42.1783 iterations 8
Cbc0038I Pass  87: suminf.    2.52977 (7) obj. -42.1783 iterations 13
Cbc0038I Pass  88: suminf.    2.41167 (8) obj. -42.1783 iterations 7
Cbc0038I Pass  89: suminf.    2.36999 (8) obj. -42.1783 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 76 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -31.4529 - took 0.15 seconds
Cbc0012I Integer solution of -31.45285 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 69 rows 42 columns
Cbc0031I 29 added rows had average density of 22.724138
Cbc0013I At root node, 29 cuts changed objective from -55.946254 to -49.121419 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15382 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2870 row cuts average 73.1 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 73.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.45285 best solution, best possible -49.121419 (1.08 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 5 rows 7 columns
Cbc0038I Full problem 131 rows 74 columns, reduced to 3 rows 7 columns
Cbc0001I Search completed - best objective -31.45285, took 11558 iterations and 130 nodes (1.37 seconds)
Cbc0032I Strong branching done 976 times (15608 iterations), fathomed 13 nodes and fixed 25 variables
Cbc0035I Maximum depth 30, 306 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.38

