Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 13 (-2) columns and 56 (-19) elements
Clp1000I sum of infeasibilities 1.20367e-09 - average 6.33512e-11, 0 fixed columns
Coin0506I Presolve 19 (0) rows, 13 (0) columns and 56 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 40.12703
Clp0000I Optimal - objective value 40.12703
Coin0511I After Postsolve, objective 40.12703, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.12703
Clp0000I Optimal - objective value 40.12703
Clp0000I Optimal - objective value 40.12703
Coin0511I After Postsolve, objective 40.12703, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.1270299 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.983%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.24807
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.5 iterations 10
Cbc0038I Solution found of -6.5
Cbc0038I Relaxing continuous gives -6.5
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -6.5 to -16.235 (0.01 seconds)
Cbc0038I Round again with cutoff of -18.5239
Cbc0038I Pass   2: suminf.    0.71960 (2) obj. -18.5239 iterations 2
Cbc0038I Pass   3: suminf.    0.86849 (2) obj. -18.5239 iterations 1
Cbc0038I Pass   4: suminf.    0.72562 (2) obj. -18.5239 iterations 1
Cbc0038I Pass   5: suminf.    1.10876 (4) obj. -18.5239 iterations 4
Cbc0038I Pass   6: suminf.    0.90137 (4) obj. -18.5239 iterations 2
Cbc0038I Pass   7: suminf.    1.76399 (6) obj. -18.5239 iterations 6
Cbc0038I Pass   8: suminf.    1.08919 (4) obj. -18.5239 iterations 1
Cbc0038I Pass   9: suminf.    0.41622 (3) obj. -18.5239 iterations 1
Cbc0038I Pass  10: suminf.    0.71960 (2) obj. -18.5239 iterations 4
Cbc0038I Pass  11: suminf.    0.71960 (2) obj. -18.5239 iterations 0
Cbc0038I Pass  12: suminf.    0.86849 (2) obj. -18.5239 iterations 1
Cbc0038I Pass  13: suminf.    0.72562 (2) obj. -18.5239 iterations 1
Cbc0038I Pass  14: suminf.    0.66058 (3) obj. -18.5239 iterations 4
Cbc0038I Pass  15: suminf.    0.51837 (2) obj. -18.5239 iterations 2
Cbc0038I Pass  16: suminf.    0.71960 (2) obj. -18.5239 iterations 2
Cbc0038I Pass  17: suminf.    0.71960 (2) obj. -18.5239 iterations 0
Cbc0038I Pass  18: suminf.    0.86849 (2) obj. -18.5239 iterations 1
Cbc0038I Pass  19: suminf.    0.72562 (2) obj. -18.5239 iterations 1
Cbc0038I Pass  20: suminf.    0.59583 (2) obj. -18.5239 iterations 5
Cbc0038I Pass  21: suminf.    0.35495 (2) obj. -18.5239 iterations 4
Cbc0038I Pass  22: suminf.    0.71960 (2) obj. -18.5239 iterations 2
Cbc0038I Pass  23: suminf.    0.71960 (2) obj. -18.5239 iterations 0
Cbc0038I Pass  24: suminf.    0.86849 (2) obj. -18.5239 iterations 1
Cbc0038I Pass  25: suminf.    0.72562 (2) obj. -18.5239 iterations 1
Cbc0038I Pass  26: suminf.    0.71960 (2) obj. -18.5239 iterations 1
Cbc0038I Pass  27: suminf.    0.79751 (3) obj. -18.5239 iterations 5
Cbc0038I Pass  28: suminf.    0.51837 (2) obj. -18.5239 iterations 3
Cbc0038I Pass  29: suminf.    0.71960 (2) obj. -18.5239 iterations 2
Cbc0038I Pass  30: suminf.    0.71960 (2) obj. -18.5239 iterations 0
Cbc0038I Pass  31: suminf.    0.86849 (2) obj. -18.5239 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -16.235 - took 0.01 seconds
Cbc0012I Integer solution of -16.235 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 7 added rows had average density of 9.4285714
Cbc0013I At root node, 7 cuts changed objective from -39.079328 to -19.438193 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 415 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 306 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16.235, took 932 iterations and 4 nodes (0.07 seconds)
Cbc0032I Strong branching done 18 times (102 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

