Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.07933e-05 - average 8.23917e-08, 13 fixed columns
Coin0506I Presolve 107 (-24) rows, 62 (-13) columns and 330 (-74) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Coin0511I After Postsolve, objective 47.886519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Coin0511I After Postsolve, objective 47.886519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.88651938 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.01685
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.16554 iterations 52
Cbc0038I Solution found of -0.16554
Cbc0038I Relaxing continuous gives -0.16554
Cbc0038I Rounding solution of -13.7698 is better than previous of -0.16554

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -13.7698 to -22.78 (0.03 seconds)
Cbc0038I Round again with cutoff of -25.2908
Cbc0038I Pass   2: suminf.    2.08543 (7) obj. -25.2908 iterations 13
Cbc0038I Pass   3: suminf.    2.08543 (7) obj. -25.2908 iterations 0
Cbc0038I Pass   4: suminf.    1.39662 (4) obj. -25.2908 iterations 10
Cbc0038I Pass   5: suminf.    0.92678 (2) obj. -25.2908 iterations 5
Cbc0038I Pass   6: suminf.    0.43560 (1) obj. -25.2908 iterations 7
Cbc0038I Pass   7: suminf.    0.43243 (1) obj. -25.2908 iterations 2
Cbc0038I Pass   8: suminf.    1.82875 (6) obj. -25.2908 iterations 11
Cbc0038I Pass   9: suminf.    1.04404 (4) obj. -25.2908 iterations 9
Cbc0038I Pass  10: suminf.    1.15598 (3) obj. -25.2908 iterations 11
Cbc0038I Pass  11: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  12: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  13: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  14: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  15: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  16: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  17: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  18: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  19: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  20: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  21: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  22: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  23: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  24: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  25: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  26: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  27: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  28: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  29: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  30: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  31: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 82 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -22.78 to -24.5499 (0.06 seconds)
Cbc0038I Round again with cutoff of -29.8099
Cbc0038I Pass  31: suminf.    2.60487 (11) obj. -29.8099 iterations 1
Cbc0038I Pass  32: suminf.    2.60487 (11) obj. -29.8099 iterations 0
Cbc0038I Pass  33: suminf.    1.64266 (6) obj. -29.8099 iterations 15
Cbc0038I Pass  34: suminf.    0.90552 (3) obj. -29.8099 iterations 7
Cbc0038I Pass  35: suminf.    0.72100 (3) obj. -29.8099 iterations 3
Cbc0038I Pass  36: suminf.    0.95946 (3) obj. -29.8099 iterations 6
Cbc0038I Pass  37: suminf.    0.95946 (3) obj. -29.8099 iterations 0
Cbc0038I Pass  38: suminf.    1.29487 (3) obj. -29.8099 iterations 4
Cbc0038I Pass  39: suminf.    3.27526 (11) obj. -29.8099 iterations 18
Cbc0038I Pass  40: suminf.    2.30141 (10) obj. -29.8099 iterations 11
Cbc0038I Pass  41: suminf.    2.30141 (10) obj. -29.8099 iterations 1
Cbc0038I Pass  42: suminf.    2.40222 (8) obj. -29.8099 iterations 13
Cbc0038I Pass  43: suminf.    1.64004 (7) obj. -29.8099 iterations 12
Cbc0038I Pass  44: suminf.    2.42949 (6) obj. -29.8099 iterations 8
Cbc0038I Pass  45: suminf.    2.20141 (7) obj. -29.8099 iterations 7
Cbc0038I Pass  46: suminf.    1.98135 (6) obj. -29.8099 iterations 8
Cbc0038I Pass  47: suminf.    1.60851 (6) obj. -29.8099 iterations 10
Cbc0038I Pass  48: suminf.    2.83558 (10) obj. -29.8099 iterations 28
Cbc0038I Pass  49: suminf.    2.27508 (12) obj. -29.8099 iterations 12
Cbc0038I Pass  50: suminf.    3.01584 (11) obj. -29.8099 iterations 18
Cbc0038I Pass  51: suminf.    1.45761 (5) obj. -29.8099 iterations 12
Cbc0038I Pass  52: suminf.    1.45761 (5) obj. -29.8099 iterations 1
Cbc0038I Pass  53: suminf.    2.23718 (8) obj. -29.8099 iterations 7
Cbc0038I Pass  54: suminf.    2.82906 (10) obj. -29.8099 iterations 11
Cbc0038I Pass  55: suminf.    2.15147 (11) obj. -29.8099 iterations 11
Cbc0038I Pass  56: suminf.    2.46585 (8) obj. -29.8099 iterations 13
Cbc0038I Pass  57: suminf.    1.45761 (5) obj. -29.8099 iterations 8
Cbc0038I Pass  58: suminf.    1.45761 (5) obj. -29.8099 iterations 1
Cbc0038I Pass  59: suminf.    2.23718 (8) obj. -29.8099 iterations 6
Cbc0038I Pass  60: suminf.    2.02232 (8) obj. -29.8099 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -24.5499 - took 0.08 seconds
Cbc0012I Integer solution of -24.54988 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 71 rows 42 columns
Cbc0031I 28 added rows had average density of 44.392857
Cbc0013I At root node, 28 cuts changed objective from -47.886519 to -39.274825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10604 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1403 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54988 best solution, best possible -39.274825 (0.87 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 22 rows 17 columns
Cbc0001I Search completed - best objective -24.54987999999999, took 8722 iterations and 50 nodes (1.22 seconds)
Cbc0032I Strong branching done 688 times (13823 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 20, 69 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.23

