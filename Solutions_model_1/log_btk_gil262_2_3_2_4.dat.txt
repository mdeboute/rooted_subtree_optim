Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 9.71972e-05 - average 1.9247e-07, 99 fixed columns
Coin0506I Presolve 302 (-203) rows, 160 (-102) columns and 900 (-602) elements
Clp0029I End of values pass after 160 iterations
Clp0014I Perturbing problem by 0.001% of 0.15751615 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Coin0511I After Postsolve, objective 167.44005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13520951 - largest nonzero change 0 ( 0%) - largest zero change 2.9776396e-05
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Coin0511I After Postsolve, objective 167.44005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.4400477 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 90 integers unsatisfied sum - 11.6219
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.6741 iterations 249
Cbc0038I Solution found of -13.6741
Cbc0038I Relaxing continuous gives -13.6741
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 168 rows 91 columns
Cbc0038I Mini branch and bound improved solution from -13.6741 to -89.2106 (0.09 seconds)
Cbc0038I Round again with cutoff of -97.0337
Cbc0038I Pass   2: suminf.    4.09937 (30) obj. -97.0337 iterations 85
Cbc0038I Pass   3: suminf.    2.90814 (10) obj. -97.0337 iterations 68
Cbc0038I Pass   4: suminf.    2.01885 (8) obj. -97.0337 iterations 29
Cbc0038I Pass   5: suminf.    1.81000 (8) obj. -97.0337 iterations 7
Cbc0038I Pass   6: suminf.    2.44565 (9) obj. -97.0337 iterations 29
Cbc0038I Pass   7: suminf.    2.26448 (9) obj. -97.0337 iterations 16
Cbc0038I Pass   8: suminf.    2.17986 (8) obj. -97.0337 iterations 14
Cbc0038I Pass   9: suminf.    1.91784 (7) obj. -97.0337 iterations 23
Cbc0038I Pass  10: suminf.    3.19124 (9) obj. -97.0337 iterations 33
Cbc0038I Pass  11: suminf.    2.31226 (9) obj. -97.0337 iterations 9
Cbc0038I Pass  12: suminf.    2.18390 (10) obj. -97.0337 iterations 20
Cbc0038I Pass  13: suminf.    2.20421 (8) obj. -97.0337 iterations 33
Cbc0038I Pass  14: suminf.    2.20421 (8) obj. -97.0337 iterations 2
Cbc0038I Pass  15: suminf.    3.08430 (8) obj. -97.0337 iterations 22
Cbc0038I Pass  16: suminf.    1.77488 (7) obj. -97.0337 iterations 12
Cbc0038I Pass  17: suminf.    1.64452 (7) obj. -97.0337 iterations 15
Cbc0038I Pass  18: suminf.    2.29183 (9) obj. -97.0337 iterations 28
Cbc0038I Pass  19: suminf.    2.29323 (8) obj. -97.0337 iterations 5
Cbc0038I Pass  20: suminf.    2.54071 (9) obj. -97.0337 iterations 40
Cbc0038I Pass  21: suminf.    2.18308 (8) obj. -97.0337 iterations 18
Cbc0038I Pass  22: suminf.    2.18308 (8) obj. -97.0337 iterations 1
Cbc0038I Pass  23: suminf.    3.04181 (8) obj. -97.0337 iterations 25
Cbc0038I Pass  24: suminf.    1.77488 (7) obj. -97.0337 iterations 11
Cbc0038I Pass  25: suminf.    1.64452 (7) obj. -97.0337 iterations 15
Cbc0038I Pass  26: suminf.    2.29183 (9) obj. -97.0337 iterations 28
Cbc0038I Pass  27: suminf.    2.29323 (8) obj. -97.0337 iterations 5
Cbc0038I Pass  28: suminf.    2.54071 (9) obj. -97.0337 iterations 40
Cbc0038I Pass  29: suminf.    2.18308 (8) obj. -97.0337 iterations 18
Cbc0038I Pass  30: suminf.    2.18308 (8) obj. -97.0337 iterations 1
Cbc0038I Pass  31: suminf.    3.04181 (8) obj. -97.0337 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 197 rows 106 columns
Cbc0038I Mini branch and bound improved solution from -89.2106 to -89.9609 (0.19 seconds)
Cbc0038I Round again with cutoff of -111.115
Cbc0038I Pass  31: suminf.    4.86937 (46) obj. -111.115 iterations 6
Cbc0038I Pass  32: suminf.    4.59454 (11) obj. -111.115 iterations 66
Cbc0038I Pass  33: suminf.    3.05358 (10) obj. -111.115 iterations 42
Cbc0038I Pass  34: suminf.    3.05358 (10) obj. -111.115 iterations 3
Cbc0038I Pass  35: suminf.    3.34901 (9) obj. -111.115 iterations 26
Cbc0038I Pass  36: suminf.    3.04148 (9) obj. -111.115 iterations 16
Cbc0038I Pass  37: suminf.    3.62766 (10) obj. -111.115 iterations 25
Cbc0038I Pass  38: suminf.    2.82434 (10) obj. -111.115 iterations 23
Cbc0038I Pass  39: suminf.    2.50010 (9) obj. -111.115 iterations 20
Cbc0038I Pass  40: suminf.    3.43423 (10) obj. -111.115 iterations 35
Cbc0038I Pass  41: suminf.    1.93720 (7) obj. -111.115 iterations 17
Cbc0038I Pass  42: suminf.    1.90548 (8) obj. -111.115 iterations 17
Cbc0038I Pass  43: suminf.    2.89552 (8) obj. -111.115 iterations 23
Cbc0038I Pass  44: suminf.    2.09467 (8) obj. -111.115 iterations 20
Cbc0038I Pass  45: suminf.    5.85618 (16) obj. -111.115 iterations 48
Cbc0038I Pass  46: suminf.    2.95410 (11) obj. -111.115 iterations 25
Cbc0038I Pass  47: suminf.    2.60073 (8) obj. -111.115 iterations 67
Cbc0038I Pass  48: suminf.    2.03518 (9) obj. -111.115 iterations 31
Cbc0038I Pass  49: suminf.    2.02643 (8) obj. -111.115 iterations 6
Cbc0038I Pass  50: suminf.    2.64973 (8) obj. -111.115 iterations 28
Cbc0038I Pass  51: suminf.    2.14280 (7) obj. -111.115 iterations 11
Cbc0038I Pass  52: suminf.    1.99596 (7) obj. -111.115 iterations 19
Cbc0038I Pass  53: suminf.    2.75322 (9) obj. -111.115 iterations 25
Cbc0038I Pass  54: suminf.    2.51116 (7) obj. -111.115 iterations 10
Cbc0038I Pass  55: suminf.    2.28955 (8) obj. -111.115 iterations 22
Cbc0038I Pass  56: suminf.    3.30905 (12) obj. -111.115 iterations 30
Cbc0038I Pass  57: suminf.    2.96934 (10) obj. -111.115 iterations 19
Cbc0038I Pass  58: suminf.    3.70983 (14) obj. -111.115 iterations 39
Cbc0038I Pass  59: suminf.    3.22032 (14) obj. -111.115 iterations 17
Cbc0038I Pass  60: suminf.    3.08275 (12) obj. -111.115 iterations 33
Cbc0038I Rounding solution of -92.8869 is better than previous of -89.9609

Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 224 rows 120 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I Round again with cutoff of -128.012
Cbc0038I Pass  60: suminf.    5.80491 (47) obj. -128.012 iterations 2
Cbc0038I Pass  61: suminf.    5.05069 (14) obj. -128.012 iterations 76
Cbc0038I Pass  62: suminf.    4.48725 (19) obj. -128.012 iterations 21
Cbc0038I Pass  63: suminf.    4.55866 (14) obj. -128.012 iterations 41
Cbc0038I Pass  64: suminf.    4.46199 (14) obj. -128.012 iterations 19
Cbc0038I Pass  65: suminf.    5.87100 (15) obj. -128.012 iterations 43
Cbc0038I Pass  66: suminf.    5.14202 (14) obj. -128.012 iterations 21
Cbc0038I Pass  67: suminf.    4.41024 (14) obj. -128.012 iterations 46
Cbc0038I Pass  68: suminf.    3.71759 (13) obj. -128.012 iterations 16
Cbc0038I Pass  69: suminf.    3.60158 (13) obj. -128.012 iterations 5
Cbc0038I Pass  70: suminf.    5.89714 (15) obj. -128.012 iterations 62
Cbc0038I Pass  71: suminf.    4.77260 (15) obj. -128.012 iterations 36
Cbc0038I Pass  72: suminf.    4.78547 (15) obj. -128.012 iterations 40
Cbc0038I Pass  73: suminf.    4.14823 (14) obj. -128.012 iterations 25
Cbc0038I Pass  74: suminf.    4.15227 (13) obj. -128.012 iterations 9
Cbc0038I Pass  75: suminf.    6.14434 (17) obj. -128.012 iterations 47
Cbc0038I Pass  76: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  77: suminf.    4.55469 (14) obj. -128.012 iterations 28
Cbc0038I Pass  78: suminf.    4.53825 (14) obj. -128.012 iterations 2
Cbc0038I Pass  79: suminf.    4.28121 (13) obj. -128.012 iterations 41
Cbc0038I Pass  80: suminf.    4.15227 (13) obj. -128.012 iterations 14
Cbc0038I Pass  81: suminf.    6.14434 (17) obj. -128.012 iterations 51
Cbc0038I Pass  82: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  83: suminf.    4.55469 (14) obj. -128.012 iterations 28
Cbc0038I Pass  84: suminf.    4.53825 (14) obj. -128.012 iterations 2
Cbc0038I Pass  85: suminf.    4.28121 (13) obj. -128.012 iterations 41
Cbc0038I Pass  86: suminf.    4.15227 (13) obj. -128.012 iterations 14
Cbc0038I Pass  87: suminf.    6.14434 (17) obj. -128.012 iterations 49
Cbc0038I Pass  88: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  89: suminf.    4.55469 (14) obj. -128.012 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 219 rows 118 columns
Cbc0038I Mini branch and bound did not improve solution (0.51 seconds)
Cbc0038I After 0.51 seconds - Feasibility pump exiting with objective of -92.8869 - took 0.47 seconds
Cbc0012I Integer solution of -92.88693 found by feasibility pump after 0 iterations and 0 nodes (0.51 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 175 rows 95 columns
Cbc0031I 45 added rows had average density of 166.24444
Cbc0013I At root node, 45 cuts changed objective from -167.44005 to -153.53092 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 53103 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.622 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3736 row cuts average 257.1 elements, 0 column cuts (0 active)  in 0.719 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.912 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.88693 best solution, best possible -153.53092 (8.55 seconds)
Cbc0010I After 6 nodes, 7 on tree, -92.88693 best solution, best possible -153.53092 (9.29 seconds)
Cbc0012I Integer solution of -93.79987 found by rounding after 24652 iterations and 13 nodes (9.56 seconds)
Cbc0012I Integer solution of -97.13281 found by rounding after 24792 iterations and 16 nodes (9.58 seconds)
Cbc0010I After 41 nodes, 13 on tree, -97.13281 best solution, best possible -153.53092 (9.99 seconds)
Cbc0012I Integer solution of -99.39846 found by rounding after 27668 iterations and 43 nodes (10.02 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 35 rows 26 columns
Cbc0012I Integer solution of -101.27688 found by RINS after 27668 iterations and 43 nodes (10.03 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 168 rows 89 columns
Cbc0010I After 92 nodes, 17 on tree, -101.27688 best solution, best possible -153.53092 (10.72 seconds)
Cbc0012I Integer solution of -102.34863 found by rounding after 32622 iterations and 123 nodes (10.98 seconds)
Cbc0010I After 221 nodes, 26 on tree, -102.34863 best solution, best possible -153.53092 (11.42 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 9 columns
Cbc0012I Integer solution of -102.71606 found by rounding after 40387 iterations and 345 nodes (11.82 seconds)
Cbc0012I Integer solution of -104.9194 found by rounding after 41636 iterations and 400 nodes (11.95 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -104.9194, took 43123 iterations and 416 nodes (12.03 seconds)
Cbc0032I Strong branching done 3254 times (77825 iterations), fathomed 88 nodes and fixed 279 variables
Cbc0035I Maximum depth 80, 1900 variables fixed on reduced cost
Total time (CPU seconds):       11.53   (Wallclock seconds):       12.11

