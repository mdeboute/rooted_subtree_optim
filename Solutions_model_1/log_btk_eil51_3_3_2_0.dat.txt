Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 0.000200654 - average 2.33319e-06, 5 fixed columns
Coin0506I Presolve 76 (-10) rows, 46 (-5) columns and 236 (-30) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.41467475 - largest nonzero change 0 ( 0%) - largest zero change 2.9023528e-05
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Coin0511I After Postsolve, objective 43.680346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Coin0511I After Postsolve, objective 43.680346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.68034558 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.64512
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.06819 iterations 36
Cbc0038I Solution found of 7.06819
Cbc0038I Relaxing continuous gives 7.06819
Cbc0038I Rounding solution of -8.68107 is better than previous of 7.06819

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -8.68107 to -10.094 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.4528
Cbc0038I Pass   2: suminf.    2.50290 (11) obj. -13.4528 iterations 11
Cbc0038I Pass   3: suminf.    0.76792 (6) obj. -13.4528 iterations 10
Cbc0038I Pass   4: suminf.    2.79361 (7) obj. -13.4528 iterations 6
Cbc0038I Pass   5: suminf.    2.11052 (6) obj. -13.4528 iterations 4
Cbc0038I Pass   6: suminf.    1.20498 (4) obj. -13.4528 iterations 2
Cbc0038I Pass   7: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass   8: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass   9: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  10: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  11: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  12: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  13: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  14: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  15: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  16: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  17: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  18: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  19: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  20: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  21: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  22: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  23: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  24: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  25: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  26: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  27: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  28: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  29: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  30: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  31: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -10.094 - took 0.06 seconds
Cbc0012I Integer solution of -10.09404 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0031I 21 added rows had average density of 40.095238
Cbc0013I At root node, 21 cuts changed objective from -43.680346 to -32.667235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8026 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2012 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0038I Full problem 86 rows 51 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -10.09403999999999, took 7224 iterations and 46 nodes (0.67 seconds)
Cbc0032I Strong branching done 546 times (8997 iterations), fathomed 1 nodes and fixed 25 variables
Cbc0035I Maximum depth 12, 158 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

