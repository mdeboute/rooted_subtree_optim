Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 25 (-7) columns and 135 (-42) elements
Clp1000I sum of infeasibilities 3.40976e-09 - average 7.41252e-11, 4 fixed columns
Coin0506I Presolve 36 (-10) rows, 20 (-5) columns and 106 (-29) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Coin0511I After Postsolve, objective 96.15932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Clp0000I Optimal - objective value 96.15932
Coin0511I After Postsolve, objective 96.15932, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.15932027 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.608%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.49347
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.873 iterations 20
Cbc0038I Solution found of -51.873
Cbc0038I Relaxing continuous gives -51.873
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -51.873 to -59.4653 (0.01 seconds)
Cbc0038I Round again with cutoff of -63.1348
Cbc0038I Pass   2: suminf.    0.13472 (1) obj. -63.1348 iterations 1
Cbc0038I Pass   3: suminf.    0.09842 (2) obj. -63.1348 iterations 4
Cbc0038I Pass   4: suminf.    0.38349 (3) obj. -63.1348 iterations 3
Cbc0038I Pass   5: suminf.    0.33218 (2) obj. -63.1348 iterations 1
Cbc0038I Pass   6: suminf.    0.69241 (2) obj. -63.1348 iterations 4
Cbc0038I Pass   7: suminf.    0.55905 (2) obj. -63.1348 iterations 2
Cbc0038I Pass   8: suminf.    0.52447 (2) obj. -63.1348 iterations 1
Cbc0038I Pass   9: suminf.    0.69241 (2) obj. -63.1348 iterations 2
Cbc0038I Pass  10: suminf.    2.15902 (8) obj. -63.1348 iterations 9
Cbc0038I Pass  11: suminf.    1.49574 (4) obj. -63.1348 iterations 3
Cbc0038I Pass  12: suminf.    1.36554 (8) obj. -63.1348 iterations 4
Cbc0038I Pass  13: suminf.    2.46943 (9) obj. -63.1348 iterations 8
Cbc0038I Pass  14: suminf.    2.31206 (8) obj. -63.1348 iterations 1
Cbc0038I Pass  15: suminf.    2.04258 (5) obj. -63.1348 iterations 6
Cbc0038I Pass  16: suminf.    0.89023 (5) obj. -63.1348 iterations 1
Cbc0038I Pass  17: suminf.    0.89023 (5) obj. -63.1348 iterations 0
Cbc0038I Pass  18: suminf.    0.34856 (2) obj. -63.1348 iterations 3
Cbc0038I Pass  19: suminf.    0.30744 (1) obj. -63.1348 iterations 1
Cbc0038I Pass  20: suminf.    0.42490 (3) obj. -63.1348 iterations 4
Cbc0038I Pass  21: suminf.    1.00246 (3) obj. -63.1348 iterations 1
Cbc0038I Pass  22: suminf.    1.38629 (6) obj. -63.1348 iterations 6
Cbc0038I Pass  23: suminf.    0.52639 (3) obj. -63.1348 iterations 2
Cbc0038I Pass  24: suminf.    0.69241 (2) obj. -63.1348 iterations 3
Cbc0038I Pass  25: suminf.    0.69241 (2) obj. -63.1348 iterations 0
Cbc0038I Pass  26: suminf.    0.55905 (2) obj. -63.1348 iterations 2
Cbc0038I Pass  27: suminf.    0.52447 (2) obj. -63.1348 iterations 1
Cbc0038I Pass  28: suminf.    1.32033 (5) obj. -63.1348 iterations 8
Cbc0038I Pass  29: suminf.    1.09047 (4) obj. -63.1348 iterations 2
Cbc0038I Pass  30: suminf.    1.31662 (3) obj. -63.1348 iterations 5
Cbc0038I Pass  31: suminf.    1.15489 (3) obj. -63.1348 iterations 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -69.7397
Cbc0038I Pass  31: suminf.    0.30811 (3) obj. -69.7397 iterations 2
Cbc0038I Pass  32: suminf.    0.42514 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  33: suminf.    0.37461 (2) obj. -69.7397 iterations 1
Cbc0038I Pass  34: suminf.    0.77610 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  35: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  36: suminf.    0.67458 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  37: suminf.    0.67458 (3) obj. -69.7397 iterations 0
Cbc0038I Pass  38: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  39: suminf.    0.91175 (5) obj. -69.7397 iterations 5
Cbc0038I Pass  40: suminf.    0.69664 (3) obj. -69.7397 iterations 3
Cbc0038I Pass  41: suminf.    0.77610 (3) obj. -69.7397 iterations 4
Cbc0038I Pass  42: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  43: suminf.    0.67458 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  44: suminf.    0.67458 (3) obj. -69.7397 iterations 0
Cbc0038I Pass  45: suminf.    0.77610 (3) obj. -69.7397 iterations 1
Cbc0038I Pass  46: suminf.    1.29107 (5) obj. -69.7397 iterations 7
Cbc0038I Pass  47: suminf.    1.27896 (4) obj. -69.7397 iterations 2
Cbc0038I Pass  48: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  49: suminf.    0.90847 (4) obj. -69.7397 iterations 0
Cbc0038I Pass  50: suminf.    1.29107 (5) obj. -69.7397 iterations 4
Cbc0038I Pass  51: suminf.    1.73444 (6) obj. -69.7397 iterations 5
Cbc0038I Pass  52: suminf.    1.73444 (6) obj. -69.7397 iterations 2
Cbc0038I Pass  53: suminf.    1.56009 (5) obj. -69.7397 iterations 6
Cbc0038I Pass  54: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  55: suminf.    0.90847 (4) obj. -69.7397 iterations 0
Cbc0038I Pass  56: suminf.    1.29107 (5) obj. -69.7397 iterations 4
Cbc0038I Pass  57: suminf.    1.27896 (4) obj. -69.7397 iterations 1
Cbc0038I Pass  58: suminf.    0.90847 (4) obj. -69.7397 iterations 3
Cbc0038I Pass  59: suminf.    1.30795 (5) obj. -69.7397 iterations 2
Cbc0038I Pass  60: suminf.    0.73246 (4) obj. -69.7397 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 25 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -59.4653 - took 0.02 seconds
Cbc0012I Integer solution of -59.46527 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 25 columns, reduced to 34 rows 19 columns
Cbc0031I 13 added rows had average density of 11.076923
Cbc0013I At root node, 13 cuts changed objective from -96.15932 to -64.23788 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 778 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 737 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.790 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59.46526999999998, took 1429 iterations and 0 nodes (1.57 seconds)
Cbc0032I Strong branching done 4 times (14 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.57

