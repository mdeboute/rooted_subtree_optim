Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 71 (-32) columns and 386 (-217) elements
Clp1000I sum of infeasibilities 8.86318e-07 - average 7.09054e-09, 65 fixed columns
Coin0506I Presolve 5 (-120) rows, 5 (-66) columns and 16 (-370) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 36985.501
Clp0000I Optimal - objective value 36985.501
Coin0511I After Postsolve, objective 36985.501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.29437689 - largest nonzero change 0 ( 0%) - largest zero change 2.6944423e-05
Clp0000I Optimal - objective value 36985.501
Clp0000I Optimal - objective value 36985.501
Clp0000I Optimal - objective value 36985.501
Coin0511I After Postsolve, objective 36985.501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36985.50097 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 125 rows, 71 columns (70 integer (70 of which binary)) and 386 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.211%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.7133
Cbc0038I Solution found of -33295.7
Cbc0038I Relaxing continuous gives -33295.7
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -33295.7 to -35319.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -35486.4
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.46926 (4) obj. -35486.4 iterations 12
Cbc0038I Pass   2: suminf.    0.46926 (4) obj. -35486.4 iterations 5
Cbc0038I Pass   3: suminf.    0.86119 (3) obj. -36763.3 iterations 10
Cbc0038I Pass   4: suminf.    0.04228 (1) obj. -35486.4 iterations 6
Cbc0038I Pass   5: suminf.    0.06897 (1) obj. -35591.5 iterations 2
Cbc0038I Pass   6: suminf.    1.37213 (7) obj. -35486.4 iterations 25
Cbc0038I Pass   7: suminf.    0.40770 (3) obj. -35486.4 iterations 8
Cbc0038I Pass   8: suminf.    0.32373 (3) obj. -35486.4 iterations 8
Cbc0038I Pass   9: suminf.    1.06822 (3) obj. -35486.4 iterations 6
Cbc0038I Pass  10: suminf.    0.32373 (3) obj. -35486.4 iterations 5
Cbc0038I Pass  11: suminf.    0.83489 (5) obj. -35486.4 iterations 12
Cbc0038I Pass  12: suminf.    0.74204 (2) obj. -35486.4 iterations 8
Cbc0038I Pass  13: suminf.    0.06667 (1) obj. -35760.5 iterations 5
Cbc0038I Pass  14: suminf.    0.06667 (1) obj. -35760.5 iterations 0
Cbc0038I Pass  15: suminf.    0.11863 (1) obj. -35486.4 iterations 1
Cbc0038I Pass  16: suminf.    0.19469 (2) obj. -35738.7 iterations 13
Cbc0038I Pass  17: suminf.    1.16023 (4) obj. -35486.4 iterations 22
Cbc0038I Pass  18: suminf.    0.42717 (4) obj. -35486.4 iterations 8
Cbc0038I Pass  19: suminf.    0.42717 (4) obj. -35486.4 iterations 4
Cbc0038I Pass  20: suminf.    0.42918 (3) obj. -35931.2 iterations 7
Cbc0038I Pass  21: suminf.    0.23333 (1) obj. -35702.1 iterations 1
Cbc0038I Pass  22: suminf.    0.27377 (1) obj. -35486.4 iterations 1
Cbc0038I Pass  23: suminf.    0.92147 (4) obj. -35486.4 iterations 11
Cbc0038I Pass  24: suminf.    0.49136 (2) obj. -35486.4 iterations 8
Cbc0038I Pass  25: suminf.    0.23333 (1) obj. -35702.1 iterations 6
Cbc0038I Pass  26: suminf.    0.85470 (6) obj. -35486.4 iterations 17
Cbc0038I Pass  27: suminf.    0.46926 (4) obj. -35486.4 iterations 8
Cbc0038I Pass  28: suminf.    0.46926 (4) obj. -35486.4 iterations 3
Cbc0038I Pass  29: suminf.    0.86119 (3) obj. -36763.3 iterations 8
Cbc0038I Pass  30: suminf.    0.04228 (1) obj. -35486.4 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 12 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -35319.8 to -35412.6 (0.02 seconds)
Cbc0038I Round again with cutoff of -35786.2
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.78035 (4) obj. -35786.2 iterations 0
Cbc0038I Pass  31: suminf.    1.08413 (4) obj. -35786.2 iterations 10
Cbc0038I Pass  32: suminf.    1.08413 (4) obj. -35786.2 iterations 5
Cbc0038I Pass  33: suminf.    0.86119 (3) obj. -36763.3 iterations 7
Cbc0038I Pass  34: suminf.    0.18136 (3) obj. -35786.2 iterations 7
Cbc0038I Pass  35: suminf.    0.84629 (4) obj. -35786.2 iterations 18
Cbc0038I Pass  36: suminf.    0.56707 (3) obj. -35786.2 iterations 5
Cbc0038I Pass  37: suminf.    0.78277 (3) obj. -35786.2 iterations 5
Cbc0038I Pass  38: suminf.    0.90662 (4) obj. -35786.2 iterations 6
Cbc0038I Pass  39: suminf.    0.77346 (3) obj. -35786.2 iterations 9
Cbc0038I Pass  40: suminf.    0.12604 (5) obj. -35786.2 iterations 14
Cbc0038I Pass  41: suminf.    0.07294 (2) obj. -35786.2 iterations 17
Cbc0038I Pass  42: suminf.    0.08052 (1) obj. -35786.2 iterations 2
Cbc0038I Pass  43: suminf.    0.10834 (2) obj. -35786.2 iterations 10
Cbc0038I Pass  44: suminf.    0.18136 (3) obj. -35786.2 iterations 21
Cbc0038I Pass  45: suminf.    0.18136 (3) obj. -35786.2 iterations 1
Cbc0038I Pass  46: suminf.    1.08413 (4) obj. -35786.2 iterations 9
Cbc0038I Pass  47: suminf.    1.08413 (4) obj. -35786.2 iterations 5
Cbc0038I Pass  48: suminf.    0.86119 (3) obj. -36763.3 iterations 7
Cbc0038I Pass  49: suminf.    0.50000 (2) obj. -36338.3 iterations 11
Cbc0038I Pass  50: suminf.    1.78163 (7) obj. -35786.2 iterations 14
Cbc0038I Pass  51: suminf.    0.48741 (4) obj. -35786.2 iterations 8
Cbc0038I Pass  52: suminf.    0.48741 (4) obj. -35786.2 iterations 0
Cbc0038I Pass  53: suminf.    1.27156 (4) obj. -35786.2 iterations 9
Cbc0038I Pass  54: suminf.    0.66404 (3) obj. -35786.2 iterations 4
Cbc0038I Pass  55: suminf.    0.56921 (3) obj. -35786.2 iterations 9
Cbc0038I Pass  56: suminf.    1.03087 (3) obj. -35786.2 iterations 6
Cbc0038I Pass  57: suminf.    1.15989 (4) obj. -35786.2 iterations 8
Cbc0038I Pass  58: suminf.    1.04540 (4) obj. -35786.2 iterations 12
Cbc0038I Pass  59: suminf.    0.48741 (4) obj. -35786.2 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 71 columns, reduced to 8 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -35412.6 - took 0.02 seconds
Cbc0012I Integer solution of -35412.61 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 125 rows 71 columns, reduced to 5 rows 7 columns
Cbc0012I Integer solution of -35415.23 found by DiveCoefficient after 107 iterations and 0 nodes (0.24 seconds)
Cbc0031I 8 added rows had average density of 14.25
Cbc0013I At root node, 8 cuts changed objective from -36985.501 to -35828.558 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35415.23, took 153 iterations and 2 nodes (0.25 seconds)
Cbc0032I Strong branching done 20 times (130 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.25

