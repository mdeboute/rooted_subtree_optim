Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-30) rows, 68 (-10) columns and 379 (-74) elements
Clp1000I sum of infeasibilities 0.00034724 - average 2.77792e-06, 16 fixed columns
Coin0506I Presolve 90 (-35) rows, 50 (-18) columns and 274 (-105) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 0.25122367 - largest nonzero change 0 ( 0%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Coin0511I After Postsolve, objective 79.068987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Clp0000I Optimal - objective value 79.068987
Coin0511I After Postsolve, objective 79.068987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.06898732 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 68 columns (67 integer (67 of which binary)) and 444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.89832
Cbc0038I Solution found of -6.02272
Cbc0038I Relaxing continuous gives -16.2343
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 49 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -16.2343 to -39.1138 (0.04 seconds)
Cbc0038I Round again with cutoff of -43.0678
Cbc0038I Pass   1: suminf.    1.77634 (16) obj. -43.0678 iterations 41
Cbc0038I Pass   2: suminf.    0.65880 (3) obj. -43.0678 iterations 19
Cbc0038I Pass   3: suminf.    0.65880 (3) obj. -43.0678 iterations 0
Cbc0038I Pass   4: suminf.    0.36917 (2) obj. -43.0678 iterations 9
Cbc0038I Pass   5: suminf.    0.30028 (1) obj. -43.0678 iterations 6
Cbc0038I Pass   6: suminf.    0.36595 (1) obj. -43.0678 iterations 3
Cbc0038I Pass   7: suminf.    0.79109 (3) obj. -43.0678 iterations 29
Cbc0038I Pass   8: suminf.    0.50180 (3) obj. -43.0678 iterations 8
Cbc0038I Pass   9: suminf.    0.71429 (2) obj. -44.1185 iterations 6
Cbc0038I Pass  10: suminf.    0.59295 (2) obj. -43.0678 iterations 3
Cbc0038I Pass  11: suminf.    0.55934 (2) obj. -43.0678 iterations 2
Cbc0038I Pass  12: suminf.    0.91614 (2) obj. -43.0678 iterations 4
Cbc0038I Pass  13: suminf.    0.59765 (2) obj. -43.0678 iterations 1
Cbc0038I Pass  14: suminf.    1.05103 (4) obj. -43.0678 iterations 6
Cbc0038I Pass  15: suminf.    1.04219 (5) obj. -43.0678 iterations 3
Cbc0038I Pass  16: suminf.    1.06563 (4) obj. -43.0678 iterations 12
Cbc0038I Pass  17: suminf.    1.02039 (4) obj. -43.0678 iterations 2
Cbc0038I Pass  18: suminf.    1.82044 (5) obj. -43.0678 iterations 5
Cbc0038I Pass  19: suminf.    1.05802 (3) obj. -43.0678 iterations 2
Cbc0038I Pass  20: suminf.    1.01677 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  21: suminf.    0.96343 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  22: suminf.    0.58798 (3) obj. -43.0678 iterations 8
Cbc0038I Pass  23: suminf.    3.00507 (10) obj. -43.0678 iterations 16
Cbc0038I Pass  24: suminf.    1.67598 (6) obj. -43.0678 iterations 12
Cbc0038I Pass  25: suminf.    1.82044 (5) obj. -43.0678 iterations 11
Cbc0038I Pass  26: suminf.    1.05802 (3) obj. -43.0678 iterations 2
Cbc0038I Pass  27: suminf.    1.01677 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  28: suminf.    0.96343 (3) obj. -43.0678 iterations 4
Cbc0038I Pass  29: suminf.    0.58798 (3) obj. -43.0678 iterations 8
Cbc0038I Pass  30: suminf.    2.12473 (10) obj. -43.0678 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 68 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.1138 - took 0.04 seconds
Cbc0012I Integer solution of -39.11378 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 68 columns, reduced to 49 rows 28 columns
Cbc0031I 20 added rows had average density of 52.05
Cbc0013I At root node, 20 cuts changed objective from -78.652757 to -66.765985 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5112 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1337 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 67.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 12 nodes, 7 on tree, -39.11378 best solution, best possible -66.765985 (0.69 seconds)
Cbc0001I Search completed - best objective -39.11378000000001, took 6250 iterations and 34 nodes (0.73 seconds)
Cbc0032I Strong branching done 452 times (8815 iterations), fathomed 1 nodes and fixed 32 variables
Cbc0035I Maximum depth 10, 91 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.74

