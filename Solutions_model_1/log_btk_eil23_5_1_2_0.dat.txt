Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 15 (-34) rows, 11 (-14) columns and 38 (-97) elements
Clp0000I Optimal - objective value 11290.485
Coin0511I After Postsolve, objective 11290.485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11290.48537 - 3 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 11 columns (10 integer (10 of which binary)) and 38 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.905%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.372024
Cbc0038I Solution found of -8213.46
Cbc0038I Relaxing continuous gives -8213.46
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8449.31
Cbc0038I Pass   1: suminf.    0.03720 (1) obj. -8449.31 iterations 2
Cbc0038I Pass   2: suminf.    0.37202 (1) obj. -10571.9 iterations 1
Cbc0038I Pass   3: suminf.    0.47739 (1) obj. -8449.31 iterations 4
Cbc0038I Pass   4: suminf.    0.40476 (1) obj. -8909.73 iterations 1
Cbc0038I Pass   5: suminf.    0.47739 (1) obj. -8449.31 iterations 1
Cbc0038I Pass   6: suminf.    0.61892 (2) obj. -8449.31 iterations 2
Cbc0038I Pass   7: suminf.    0.11905 (1) obj. -9089.17 iterations 2
Cbc0038I Pass   8: suminf.    0.01812 (1) obj. -8449.31 iterations 1
Cbc0038I Pass   9: suminf.    0.85703 (2) obj. -8449.31 iterations 5
Cbc0038I Pass  10: suminf.    0.23810 (1) obj. -8883.9 iterations 2
Cbc0038I Pass  11: suminf.    0.30665 (1) obj. -8449.31 iterations 1
Cbc0038I Pass  12: suminf.    0.85703 (2) obj. -8449.31 iterations 2
Cbc0038I Pass  13: suminf.    0.84947 (2) obj. -8449.31 iterations 6
Cbc0038I Pass  14: suminf.    0.84947 (2) obj. -8449.31 iterations 1
Cbc0038I Pass  15: suminf.    0.30118 (1) obj. -8449.31 iterations 2
Cbc0038I Pass  16: suminf.    0.22321 (1) obj. -8925.91 iterations 1
Cbc0038I Pass  17: suminf.    0.48486 (2) obj. -8449.31 iterations 1
Cbc0038I Pass  18: suminf.    0.22321 (1) obj. -8925.91 iterations 1
Cbc0038I Pass  19: suminf.    0.22321 (1) obj. -8925.91 iterations 0
Cbc0038I Pass  20: suminf.    0.84947 (2) obj. -8449.31 iterations 1
Cbc0038I Pass  21: suminf.    0.36012 (1) obj. -8502.6 iterations 6
Cbc0038I Pass  22: suminf.    0.35171 (1) obj. -8449.31 iterations 2
Cbc0038I Pass  23: suminf.    0.36012 (1) obj. -8502.6 iterations 1
Cbc0038I Pass  24: suminf.    0.61986 (2) obj. -8449.31 iterations 2
Cbc0038I Pass  25: suminf.    0.61986 (2) obj. -8449.31 iterations 1
Cbc0038I Pass  26: suminf.    0.35714 (1) obj. -9167.62 iterations 2
Cbc0038I Pass  27: suminf.    0.47045 (1) obj. -8449.31 iterations 1
Cbc0038I Pass  28: suminf.    0.84007 (3) obj. -8449.31 iterations 4
Cbc0038I Pass  29: suminf.    0.43155 (1) obj. -8755.92 iterations 1
Cbc0038I Pass  30: suminf.    0.47991 (1) obj. -8449.31 iterations 1
Cbc0038I Rounding solution of -9372.89 is better than previous of -8213.46

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -9612.7
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.22071 (1) obj. -9612.7 iterations 0
Cbc0038I Pass  31: suminf.    0.37202 (1) obj. -10571.9 iterations 1
Cbc0038I Pass  32: suminf.    0.37202 (1) obj. -10571.9 iterations 1
Cbc0038I Pass  33: suminf.    0.32738 (1) obj. -10304.9 iterations 2
Cbc0038I Pass  34: suminf.    0.21819 (1) obj. -9612.7 iterations 1
Cbc0038I Pass  35: suminf.    0.32738 (1) obj. -10304.9 iterations 1
Cbc0038I Pass  36: suminf.    0.34153 (2) obj. -9612.7 iterations 1
Cbc0038I Pass  37: suminf.    0.34153 (2) obj. -9612.7 iterations 0
Cbc0038I Pass  38: suminf.    0.34153 (2) obj. -9612.7 iterations 0
Cbc0038I Pass  39: suminf.    0.34153 (2) obj. -9612.7 iterations 0
Cbc0038I Pass  40: suminf.    0.45290 (2) obj. -9612.7 iterations 3
Cbc0038I Pass  41: suminf.    0.44940 (1) obj. -9615.15 iterations 3
Cbc0038I Pass  42: suminf.    0.44979 (1) obj. -9612.7 iterations 1
Cbc0038I Pass  43: suminf.    0.78115 (2) obj. -9612.7 iterations 3
Cbc0038I Pass  44: suminf.    0.38720 (1) obj. -9612.7 iterations 1
Cbc0038I Pass  45: suminf.    0.41667 (1) obj. -9799.53 iterations 1
Cbc0038I Pass  46: suminf.    0.41667 (1) obj. -9799.53 iterations 0
Cbc0038I Pass  47: suminf.    0.55150 (2) obj. -9612.7 iterations 1
Cbc0038I Pass  48: suminf.    0.65330 (2) obj. -9612.7 iterations 2
Cbc0038I Pass  49: suminf.    0.65330 (2) obj. -9612.7 iterations 0
Cbc0038I Pass  50: suminf.    0.38972 (1) obj. -9612.7 iterations 1
Cbc0038I Pass  51: suminf.    0.46131 (1) obj. -10066.5 iterations 1
Cbc0038I Pass  52: suminf.    0.54339 (3) obj. -9612.7 iterations 5
Cbc0038I Pass  53: suminf.    0.22071 (1) obj. -9612.7 iterations 3
Cbc0038I Pass  54: suminf.    0.37202 (1) obj. -10571.9 iterations 1
Cbc0038I Pass  55: suminf.    0.21819 (1) obj. -9612.7 iterations 2
Cbc0038I Pass  56: suminf.    0.21819 (1) obj. -9612.7 iterations 0
Cbc0038I Pass  57: suminf.    0.32738 (1) obj. -10304.9 iterations 1
Cbc0038I Pass  58: suminf.    0.94122 (3) obj. -9612.7 iterations 6
Cbc0038I Pass  59: suminf.    0.40476 (1) obj. -9882.17 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9372.89 - took 0.01 seconds
Cbc0012I Integer solution of -9372.89 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 15 rows 11 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -10571.942 to -10571.942 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9372.889999999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

