Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 262 (-2) columns and 1490 (-55) elements
Clp1000I sum of infeasibilities 4.4563e-05 - average 8.93047e-08, 139 fixed columns
Coin0506I Presolve 221 (-278) rows, 121 (-141) columns and 663 (-827) elements
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 2.2474963 - largest nonzero change 1.6052853e-05 ( 0.0011830588%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Coin0511I After Postsolve, objective 184.68286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13387871 - largest nonzero change 1.0197004e-05 ( 0.00092700036%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Coin0511I After Postsolve, objective 184.68286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.6828579 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 262 columns (261 integer (261 of which binary)) and 1490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.361%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.1108
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.94997 iterations 147
Cbc0038I Solution found of -9.94997
Cbc0038I Relaxing continuous gives -9.94997
Cbc0038I Rounding solution of -98.8487 is better than previous of -9.94997

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 79 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -98.8487 to -101.838 (0.06 seconds)
Cbc0038I Round again with cutoff of -110.123
Cbc0038I Pass   2: suminf.    2.32937 (7) obj. -110.123 iterations 17
Cbc0038I Pass   3: suminf.    1.71341 (5) obj. -110.123 iterations 2
Cbc0038I Pass   4: suminf.    1.71341 (5) obj. -110.123 iterations 0
Cbc0038I Pass   5: suminf.    0.87283 (4) obj. -110.123 iterations 14
Cbc0038I Pass   6: suminf.    0.62162 (3) obj. -110.123 iterations 9
Cbc0038I Pass   7: suminf.    1.08762 (3) obj. -110.123 iterations 10
Cbc0038I Pass   8: suminf.    0.92618 (6) obj. -110.123 iterations 7
Cbc0038I Pass   9: suminf.    1.61311 (5) obj. -110.123 iterations 12
Cbc0038I Pass  10: suminf.    0.99861 (4) obj. -110.123 iterations 7
Cbc0038I Pass  11: suminf.    0.99414 (4) obj. -110.123 iterations 1
Cbc0038I Pass  12: suminf.    1.73407 (5) obj. -110.123 iterations 7
Cbc0038I Pass  13: suminf.    1.44592 (7) obj. -110.123 iterations 6
Cbc0038I Pass  14: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  15: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  16: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  17: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  18: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  19: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Pass  20: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  21: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  22: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  23: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  24: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  25: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Pass  26: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  27: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  28: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  29: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  30: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  31: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Rounding solution of -117.829 is better than previous of -101.838

Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 86 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -131.2
Cbc0038I Pass  31: suminf.    3.11018 (12) obj. -131.2 iterations 4
Cbc0038I Pass  32: suminf.    1.58107 (7) obj. -131.2 iterations 17
Cbc0038I Pass  33: suminf.    3.23248 (8) obj. -131.2 iterations 41
Cbc0038I Pass  34: suminf.    2.40618 (7) obj. -131.2 iterations 13
Cbc0038I Pass  35: suminf.    2.38878 (7) obj. -131.2 iterations 14
Cbc0038I Pass  36: suminf.    2.81587 (9) obj. -131.2 iterations 9
Cbc0038I Pass  37: suminf.    2.36564 (8) obj. -131.2 iterations 2
Cbc0038I Pass  38: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  39: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  40: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I Pass  41: suminf.    2.48243 (6) obj. -131.2 iterations 6
Cbc0038I Pass  42: suminf.    2.24834 (8) obj. -131.2 iterations 11
Cbc0038I Pass  43: suminf.    3.18843 (8) obj. -131.2 iterations 23
Cbc0038I Pass  44: suminf.    2.74481 (7) obj. -131.2 iterations 8
Cbc0038I Pass  45: suminf.    2.74481 (7) obj. -131.2 iterations 0
Cbc0038I Pass  46: suminf.    2.57233 (8) obj. -131.2 iterations 8
Cbc0038I Pass  47: suminf.    2.36564 (8) obj. -131.2 iterations 7
Cbc0038I Pass  48: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  49: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  50: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I Pass  51: suminf.    2.48243 (6) obj. -131.2 iterations 6
Cbc0038I Pass  52: suminf.    2.24834 (8) obj. -131.2 iterations 11
Cbc0038I Pass  53: suminf.    3.18843 (8) obj. -131.2 iterations 23
Cbc0038I Pass  54: suminf.    2.74481 (7) obj. -131.2 iterations 8
Cbc0038I Pass  55: suminf.    2.74481 (7) obj. -131.2 iterations 0
Cbc0038I Pass  56: suminf.    2.57233 (8) obj. -131.2 iterations 8
Cbc0038I Pass  57: suminf.    2.36564 (8) obj. -131.2 iterations 7
Cbc0038I Pass  58: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  59: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  60: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 88 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -117.829 - took 0.16 seconds
Cbc0012I Integer solution of -117.82887 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 83 rows 53 columns
Cbc0012I Integer solution of -124.42038 found by RINS after 0 iterations and 0 nodes (0.22 seconds)
Cbc0031I 42 added rows had average density of 161.02381
Cbc0013I At root node, 42 cuts changed objective from -184.68286 to -168.53825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34778 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.509 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3521 row cuts average 257.0 elements, 0 column cuts (0 active)  in 0.469 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.513 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 252.0 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -124.42038 best solution, best possible -168.53825 (5.22 seconds)
Cbc0012I Integer solution of -126.43676 found by rounding after 19567 iterations and 20 nodes (5.87 seconds)
Cbc0010I After 39 nodes, 9 on tree, -126.43676 best solution, best possible -168.53825 (5.93 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 125 rows 77 columns
Cbc0012I Integer solution of -131.55723 found by RINS after 20248 iterations and 42 nodes (6.03 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 127 rows 76 columns
Cbc0010I After 115 nodes, 10 on tree, -131.55723 best solution, best possible -168.53825 (6.63 seconds)
Cbc0001I Search completed - best objective -131.55723, took 25689 iterations and 140 nodes (6.73 seconds)
Cbc0032I Strong branching done 1474 times (40917 iterations), fathomed 25 nodes and fixed 53 variables
Cbc0035I Maximum depth 43, 952 variables fixed on reduced cost
Total time (CPU seconds):       6.60   (Wallclock seconds):       6.80

