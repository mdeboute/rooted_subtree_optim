Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 72 (-6) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 5.57635e-05 - average 4.35652e-07, 13 fixed columns
Coin0506I Presolve 101 (-27) rows, 57 (-15) columns and 308 (-84) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Coin0511I After Postsolve, objective 39.612728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25578669 - largest nonzero change 0 ( 0%) - largest zero change 2.9738336e-05
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Coin0511I After Postsolve, objective 39.612728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.61272816 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 72 columns (71 integer (71 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.5703
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.87271 iterations 43
Cbc0038I Solution found of 8.87271
Cbc0038I Relaxing continuous gives 8.87271
Cbc0038I Rounding solution of 3.23176 is better than previous of 8.87271

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 3.23176 to -14.322 (0.04 seconds)
Cbc0038I Round again with cutoff of -16.8512
Cbc0038I Pass   2: suminf.    2.95876 (13) obj. -16.8512 iterations 15
Cbc0038I Pass   3: suminf.    1.91468 (8) obj. -16.8512 iterations 14
Cbc0038I Pass   4: suminf.    1.90882 (7) obj. -16.8512 iterations 2
Cbc0038I Pass   5: suminf.    1.17760 (4) obj. -16.8512 iterations 7
Cbc0038I Pass   6: suminf.    1.17760 (4) obj. -16.8512 iterations 0
Cbc0038I Pass   7: suminf.    1.30347 (4) obj. -16.8512 iterations 5
Cbc0038I Pass   8: suminf.    1.22640 (4) obj. -16.8512 iterations 3
Cbc0038I Pass   9: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  10: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  11: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  12: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  13: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  14: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  15: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I Pass  16: suminf.    1.22640 (4) obj. -16.8512 iterations 1
Cbc0038I Pass  17: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  18: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  19: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  20: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  21: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  22: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  23: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I Pass  24: suminf.    1.22640 (4) obj. -16.8512 iterations 1
Cbc0038I Pass  25: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  26: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  27: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  28: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  29: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  30: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  31: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -14.322 - took 0.06 seconds
Cbc0012I Integer solution of -14.322 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0031I 21 added rows had average density of 55.571429
Cbc0013I At root node, 21 cuts changed objective from -39.612728 to -31.937197 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8990 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1533 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.322 best solution, best possible -31.937197 (0.68 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 2 rows 3 columns
Cbc0004I Integer solution of -14.58708 found after 8007 iterations and 76 nodes (0.97 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 7 rows 12 columns
Cbc0001I Search completed - best objective -14.58708, took 8821 iterations and 104 nodes (1.01 seconds)
Cbc0032I Strong branching done 914 times (14832 iterations), fathomed 11 nodes and fixed 41 variables
Cbc0035I Maximum depth 20, 190 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.02

