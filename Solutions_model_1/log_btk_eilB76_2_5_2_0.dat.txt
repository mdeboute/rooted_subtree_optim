Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 72 (-6) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 1.08639e-05 - average 8.35683e-08, 11 fixed columns
Coin0506I Presolve 108 (-22) rows, 61 (-11) columns and 330 (-66) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0521963 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Coin0511I After Postsolve, objective 49.732167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Coin0511I After Postsolve, objective 49.732167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.73216688 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 72 columns (71 integer (71 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.42739
Cbc0038I Solution found of 0.780117
Cbc0038I Relaxing continuous gives -4.55745
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -4.55745 to -30.2483 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.0622
Cbc0038I Pass   1: suminf.    2.58960 (19) obj. -32.0622 iterations 38
Cbc0038I Pass   2: suminf.    1.51891 (6) obj. -32.0622 iterations 26
Cbc0038I Pass   3: suminf.    1.07486 (6) obj. -32.0622 iterations 8
Cbc0038I Pass   4: suminf.    1.07486 (6) obj. -32.0622 iterations 1
Cbc0038I Pass   5: suminf.    1.35875 (4) obj. -32.0622 iterations 5
Cbc0038I Pass   6: suminf.    0.97107 (3) obj. -32.0622 iterations 3
Cbc0038I Pass   7: suminf.    0.80104 (3) obj. -32.0622 iterations 5
Cbc0038I Pass   8: suminf.    0.55352 (4) obj. -32.0622 iterations 7
Cbc0038I Pass   9: suminf.    1.28710 (4) obj. -32.0622 iterations 6
Cbc0038I Pass  10: suminf.    1.28252 (5) obj. -32.0622 iterations 1
Cbc0038I Pass  11: suminf.    0.94955 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  12: suminf.    0.91226 (6) obj. -32.0622 iterations 2
Cbc0038I Pass  13: suminf.    2.33257 (7) obj. -32.0622 iterations 9
Cbc0038I Pass  14: suminf.    1.85219 (9) obj. -32.0622 iterations 5
Cbc0038I Pass  15: suminf.    0.68855 (3) obj. -32.0622 iterations 9
Cbc0038I Pass  16: suminf.    0.48476 (3) obj. -32.0622 iterations 4
Cbc0038I Pass  17: suminf.    0.83722 (3) obj. -32.0622 iterations 10
Cbc0038I Pass  18: suminf.    0.68582 (5) obj. -32.0622 iterations 4
Cbc0038I Pass  19: suminf.    1.36120 (5) obj. -32.0622 iterations 11
Cbc0038I Pass  20: suminf.    0.97107 (3) obj. -32.0622 iterations 4
Cbc0038I Pass  21: suminf.    0.80104 (3) obj. -32.0622 iterations 5
Cbc0038I Pass  22: suminf.    0.55352 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  23: suminf.    1.28710 (4) obj. -32.0622 iterations 6
Cbc0038I Pass  24: suminf.    1.28252 (5) obj. -32.0622 iterations 1
Cbc0038I Pass  25: suminf.    0.94955 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  26: suminf.    0.91226 (6) obj. -32.0622 iterations 2
Cbc0038I Pass  27: suminf.    2.33257 (7) obj. -32.0622 iterations 9
Cbc0038I Pass  28: suminf.    1.85219 (9) obj. -32.0622 iterations 4
Cbc0038I Pass  29: suminf.    0.68855 (3) obj. -32.0622 iterations 8
Cbc0038I Pass  30: suminf.    0.48476 (3) obj. -32.0622 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30.2483 - took 0.03 seconds
Cbc0012I Integer solution of -30.24826 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 57 rows 33 columns
Cbc0031I 22 added rows had average density of 47.818182
Cbc0013I At root node, 22 cuts changed objective from -48.386684 to -39.268374 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5975 row cuts average 4.3 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1249 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 71.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -30.24826 best solution, best possible -39.268374 (0.69 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 27 rows 18 columns
Cbc0001I Search completed - best objective -30.24826, took 6726 iterations and 54 nodes (0.86 seconds)
Cbc0032I Strong branching done 638 times (12926 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 26, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.87

