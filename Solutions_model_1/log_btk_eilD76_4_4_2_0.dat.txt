Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000139862 - average 1.04375e-06, 11 fixed columns
Coin0506I Presolve 111 (-23) rows, 63 (-12) columns and 340 (-70) elements
Clp0029I End of values pass after 63 iterations
Clp0000I Optimal - objective value 34.330643
Clp0000I Optimal - objective value 34.330643
Coin0511I After Postsolve, objective 34.330643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.330643
Clp0000I Optimal - objective value 34.330643
Clp0000I Optimal - objective value 34.330643
Coin0511I After Postsolve, objective 34.330643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.33064278 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.9871
Cbc0038I Solution found of 5.10618
Cbc0038I Relaxing continuous gives 4.69292
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 69 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 4.69292 to -4.0344 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.06411
Cbc0038I Pass   1: suminf.    1.97786 (12) obj. -7.06411 iterations 54
Cbc0038I Pass   2: suminf.    2.75766 (9) obj. -7.06411 iterations 13
Cbc0038I Pass   3: suminf.    1.33203 (7) obj. -7.06411 iterations 7
Cbc0038I Pass   4: suminf.    1.33203 (7) obj. -7.06411 iterations 0
Cbc0038I Pass   5: suminf.    2.81638 (8) obj. -7.06411 iterations 6
Cbc0038I Pass   6: suminf.    2.07890 (9) obj. -7.06411 iterations 4
Cbc0038I Pass   7: suminf.    2.07890 (9) obj. -7.06411 iterations 0
Cbc0038I Pass   8: suminf.    0.88247 (4) obj. -7.06411 iterations 13
Cbc0038I Pass   9: suminf.    0.88247 (4) obj. -7.06411 iterations 0
Cbc0038I Pass  10: suminf.    1.61644 (6) obj. -7.06411 iterations 3
Cbc0038I Pass  11: suminf.    1.61644 (6) obj. -7.06411 iterations 0
Cbc0038I Pass  12: suminf.    2.32423 (6) obj. -7.06411 iterations 2
Cbc0038I Pass  13: suminf.    2.32423 (6) obj. -7.06411 iterations 1
Cbc0038I Pass  14: suminf.    1.58811 (5) obj. -7.06411 iterations 5
Cbc0038I Pass  15: suminf.    1.58811 (5) obj. -7.06411 iterations 0
Cbc0038I Pass  16: suminf.    2.09098 (6) obj. -7.06411 iterations 3
Cbc0038I Pass  17: suminf.    1.41493 (6) obj. -7.06411 iterations 1
Cbc0038I Pass  18: suminf.    1.41493 (6) obj. -7.06411 iterations 0
Cbc0038I Pass  19: suminf.    2.03799 (6) obj. -7.06411 iterations 2
Cbc0038I Pass  20: suminf.    2.03799 (6) obj. -7.06411 iterations 0
Cbc0038I Pass  21: suminf.    1.89367 (6) obj. -7.06411 iterations 3
Cbc0038I Pass  22: suminf.    1.41493 (6) obj. -7.06411 iterations 1
Cbc0038I Pass  23: suminf.    1.41493 (6) obj. -7.06411 iterations 0
Cbc0038I Pass  24: suminf.    2.03799 (6) obj. -7.06411 iterations 2
Cbc0038I Pass  25: suminf.    2.03799 (6) obj. -7.06411 iterations 0
Cbc0038I Pass  26: suminf.    1.89367 (6) obj. -7.06411 iterations 3
Cbc0038I Pass  27: suminf.    1.41493 (6) obj. -7.06411 iterations 1
Cbc0038I Pass  28: suminf.    1.41493 (6) obj. -7.06411 iterations 0
Cbc0038I Pass  29: suminf.    2.03799 (6) obj. -7.06411 iterations 2
Cbc0038I Pass  30: suminf.    2.03799 (6) obj. -7.06411 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 75 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.0344 to -7.37065 (0.12 seconds)
Cbc0038I Round again with cutoff of -12.7627
Cbc0038I Pass  30: suminf.    3.38344 (17) obj. -12.7627 iterations 4
Cbc0038I Pass  31: suminf.    3.15633 (10) obj. -12.7627 iterations 26
Cbc0038I Pass  32: suminf.    1.82127 (10) obj. -12.7627 iterations 4
Cbc0038I Pass  33: suminf.    1.90660 (6) obj. -12.7627 iterations 17
Cbc0038I Pass  34: suminf.    1.90660 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  35: suminf.    1.97202 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  36: suminf.    1.97202 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  37: suminf.    2.32994 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  38: suminf.    1.90660 (6) obj. -12.7627 iterations 2
Cbc0038I Pass  39: suminf.    1.90660 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  40: suminf.    1.97202 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  41: suminf.    1.97202 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  42: suminf.    2.32994 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  43: suminf.    1.90660 (6) obj. -12.7627 iterations 2
Cbc0038I Pass  44: suminf.    1.90660 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  45: suminf.    1.97202 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  46: suminf.    1.97202 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  47: suminf.    2.32994 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  48: suminf.    1.90660 (6) obj. -12.7627 iterations 2
Cbc0038I Pass  49: suminf.    1.90660 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  50: suminf.    1.97202 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  51: suminf.    1.97202 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  52: suminf.    2.32994 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  53: suminf.    1.90660 (6) obj. -12.7627 iterations 2
Cbc0038I Pass  54: suminf.    1.90660 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  55: suminf.    1.97202 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  56: suminf.    1.97202 (6) obj. -12.7627 iterations 1
Cbc0038I Pass  57: suminf.    2.32994 (6) obj. -12.7627 iterations 3
Cbc0038I Pass  58: suminf.    1.90660 (6) obj. -12.7627 iterations 2
Cbc0038I Pass  59: suminf.    1.90660 (6) obj. -12.7627 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 71 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -7.37065 - took 0.17 seconds
Cbc0012I Integer solution of -7.370649 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 69 rows 44 columns
Cbc0012I Integer solution of -7.666767 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 22 added rows had average density of 52.545455
Cbc0013I At root node, 22 cuts changed objective from -34.330643 to -25.650925 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13552 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2395 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 184 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.666767 best solution, best possible -25.650925 (1.07 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 16 rows 19 columns
Cbc0012I Integer solution of -7.944017 found by RINS after 9139 iterations and 43 nodes (1.27 seconds)
Cbc0012I Integer solution of -8.341677 found by rounding after 9522 iterations and 60 nodes (1.31 seconds)
Cbc0012I Integer solution of -8.445667 found by rounding after 9562 iterations and 68 nodes (1.31 seconds)
Cbc0001I Search completed - best objective -8.445667000000007, took 10490 iterations and 86 nodes (1.36 seconds)
Cbc0032I Strong branching done 936 times (15973 iterations), fathomed 10 nodes and fixed 50 variables
Cbc0035I Maximum depth 28, 282 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.37

