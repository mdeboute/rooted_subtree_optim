Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 3.52406e-05 - average 1.91525e-07, 12 fixed columns
Coin0506I Presolve 160 (-24) rows, 89 (-12) columns and 490 (-72) elements
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.2357449 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 32.838504
Clp0000I Optimal - objective value 32.838504
Coin0511I After Postsolve, objective 32.838504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.838504
Clp0000I Optimal - objective value 32.838504
Clp0000I Optimal - objective value 32.838504
Coin0511I After Postsolve, objective 32.838504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.83850445 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 60 integers unsatisfied sum - 13.4377
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.95838 iterations 81
Cbc0038I Solution found of 8.95838
Cbc0038I Relaxing continuous gives 8.95838
Cbc0038I Rounding solution of 8.37776 is better than previous of 8.95838

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 107 rows 61 columns
Cbc0038I Mini branch and bound improved solution from 8.37776 to -3.5484 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.4775
Cbc0038I Pass   2: suminf.    2.70296 (12) obj. -6.4775 iterations 24
Cbc0038I Pass   3: suminf.    2.48218 (10) obj. -6.4775 iterations 16
Cbc0038I Pass   4: suminf.    2.13083 (9) obj. -6.4775 iterations 4
Cbc0038I Pass   5: suminf.    2.93324 (11) obj. -6.4775 iterations 16
Cbc0038I Pass   6: suminf.    2.79835 (11) obj. -6.4775 iterations 6
Cbc0038I Pass   7: suminf.    1.73915 (9) obj. -6.4775 iterations 20
Cbc0038I Pass   8: suminf.    2.92929 (11) obj. -6.4775 iterations 13
Cbc0038I Pass   9: suminf.    3.34973 (14) obj. -6.4775 iterations 39
Cbc0038I Pass  10: suminf.    2.65829 (12) obj. -6.4775 iterations 10
Cbc0038I Pass  11: suminf.    2.77355 (10) obj. -6.4775 iterations 29
Cbc0038I Pass  12: suminf.    2.77355 (10) obj. -6.4775 iterations 0
Cbc0038I Pass  13: suminf.    2.00880 (9) obj. -6.4775 iterations 16
Cbc0038I Pass  14: suminf.    1.73388 (9) obj. -6.4775 iterations 5
Cbc0038I Pass  15: suminf.    2.71399 (10) obj. -6.4775 iterations 15
Cbc0038I Pass  16: suminf.    2.59892 (12) obj. -6.4775 iterations 7
Cbc0038I Pass  17: suminf.    2.34503 (9) obj. -6.4775 iterations 14
Cbc0038I Pass  18: suminf.    2.14859 (9) obj. -6.4775 iterations 7
Cbc0038I Pass  19: suminf.    1.43733 (8) obj. -6.4775 iterations 6
Cbc0038I Pass  20: suminf.    3.32124 (11) obj. -6.4775 iterations 15
Cbc0038I Pass  21: suminf.    2.96191 (9) obj. -6.4775 iterations 2
Cbc0038I Pass  22: suminf.    1.98306 (9) obj. -6.4775 iterations 2
Cbc0038I Pass  23: suminf.    1.66939 (8) obj. -6.4775 iterations 5
Cbc0038I Pass  24: suminf.    3.09826 (11) obj. -6.4775 iterations 19
Cbc0038I Pass  25: suminf.    2.69605 (9) obj. -6.4775 iterations 2
Cbc0038I Pass  26: suminf.    1.50193 (9) obj. -6.4775 iterations 4
Cbc0038I Pass  27: suminf.    1.43733 (8) obj. -6.4775 iterations 6
Cbc0038I Pass  28: suminf.    3.32124 (11) obj. -6.4775 iterations 15
Cbc0038I Pass  29: suminf.    2.96191 (9) obj. -6.4775 iterations 2
Cbc0038I Pass  30: suminf.    1.98306 (9) obj. -6.4775 iterations 2
Cbc0038I Pass  31: suminf.    1.66939 (8) obj. -6.4775 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 116 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -3.5484 to -4.12043 (0.15 seconds)
Cbc0038I Round again with cutoff of -11.7497
Cbc0038I Pass  31: suminf.    4.16170 (18) obj. -11.7497 iterations 5
Cbc0038I Pass  32: suminf.    4.16170 (18) obj. -11.7497 iterations 1
Cbc0038I Pass  33: suminf.    3.57293 (12) obj. -11.7497 iterations 41
Cbc0038I Pass  34: suminf.    3.22164 (11) obj. -11.7497 iterations 5
Cbc0038I Pass  35: suminf.    3.18003 (11) obj. -11.7497 iterations 2
Cbc0038I Pass  36: suminf.    3.98212 (12) obj. -11.7497 iterations 22
Cbc0038I Pass  37: suminf.    3.66502 (11) obj. -11.7497 iterations 6
Cbc0038I Pass  38: suminf.    2.71954 (9) obj. -11.7497 iterations 13
Cbc0038I Pass  39: suminf.    2.71954 (9) obj. -11.7497 iterations 0
Cbc0038I Pass  40: suminf.    3.66502 (11) obj. -11.7497 iterations 16
Cbc0038I Pass  41: suminf.    3.95127 (15) obj. -11.7497 iterations 24
Cbc0038I Pass  42: suminf.    3.38449 (13) obj. -11.7497 iterations 7
Cbc0038I Pass  43: suminf.    2.66907 (13) obj. -11.7497 iterations 11
Cbc0038I Pass  44: suminf.    2.66907 (13) obj. -11.7497 iterations 1
Cbc0038I Pass  45: suminf.    4.52156 (13) obj. -11.7497 iterations 36
Cbc0038I Pass  46: suminf.    4.32498 (13) obj. -11.7497 iterations 6
Cbc0038I Pass  47: suminf.    3.24055 (11) obj. -11.7497 iterations 16
Cbc0038I Pass  48: suminf.    2.86533 (11) obj. -11.7497 iterations 5
Cbc0038I Pass  49: suminf.    4.29025 (18) obj. -11.7497 iterations 18
Cbc0038I Pass  50: suminf.    4.16170 (18) obj. -11.7497 iterations 2
Cbc0038I Pass  51: suminf.    4.16170 (18) obj. -11.7497 iterations 1
Cbc0038I Pass  52: suminf.    6.98104 (19) obj. -11.7497 iterations 44
Cbc0038I Pass  53: suminf.    4.50817 (16) obj. -11.7497 iterations 20
Cbc0038I Pass  54: suminf.    4.47946 (15) obj. -11.7497 iterations 1
Cbc0038I Pass  55: suminf.    4.35755 (16) obj. -11.7497 iterations 31
Cbc0038I Pass  56: suminf.    4.32526 (17) obj. -11.7497 iterations 9
Cbc0038I Pass  57: suminf.    4.32526 (17) obj. -11.7497 iterations 1
Cbc0038I Pass  58: suminf.    3.99886 (12) obj. -11.7497 iterations 37
Cbc0038I Pass  59: suminf.    3.03391 (11) obj. -11.7497 iterations 13
Cbc0038I Pass  60: suminf.    3.74622 (12) obj. -11.7497 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 123 rows 70 columns - 3 fixed gives 99, 67 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 99 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -4.12043 - took 0.22 seconds
Cbc0012I Integer solution of -4.120434 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 109 rows 62 columns
Cbc0012I Integer solution of -4.489394 found by RINS after 0 iterations and 0 nodes (0.31 seconds)
Cbc0031I 41 added rows had average density of 79.658537
Cbc0013I At root node, 41 cuts changed objective from -32.838504 to -25.185366 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26327 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3461 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.231 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.489394 best solution, best possible -25.185366 (2.40 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 2 rows 3 columns
Cbc0038I Full problem 184 rows 101 columns, reduced to 52 rows 36 columns
Cbc0010I After 120 nodes, 3 on tree, -4.489394 best solution, best possible -25.131114 (3.13 seconds)
Cbc0001I Search completed - best objective -4.489394000000004, took 18766 iterations and 180 nodes (3.43 seconds)
Cbc0032I Strong branching done 2128 times (37190 iterations), fathomed 17 nodes and fixed 128 variables
Cbc0035I Maximum depth 35, 478 variables fixed on reduced cost
Total time (CPU seconds):       3.29   (Wallclock seconds):       3.46

