Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 25 (-8) columns and 124 (-59) elements
Clp1000I sum of infeasibilities 1.13661e-05 - average 2.77221e-07, 3 fixed columns
Coin0506I Presolve 35 (-6) rows, 22 (-3) columns and 106 (-18) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 51.858262
Clp0000I Optimal - objective value 51.858262
Coin0511I After Postsolve, objective 51.858262, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.858262
Clp0000I Optimal - objective value 51.858262
Clp0000I Optimal - objective value 51.858262
Coin0511I After Postsolve, objective 51.858262, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.85826242 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 25 columns (24 integer (24 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.20508
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.30066 iterations 16
Cbc0038I Solution found of -8.30066
Cbc0038I Relaxing continuous gives -8.30066
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -8.30066 to -33.3487 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.1996
Cbc0038I Pass   2: suminf.    0.78148 (2) obj. -35.1996 iterations 3
Cbc0038I Pass   3: suminf.    0.37121 (2) obj. -35.1996 iterations 5
Cbc0038I Pass   4: suminf.    0.33766 (2) obj. -35.1996 iterations 3
Cbc0038I Pass   5: suminf.    0.33766 (2) obj. -35.1996 iterations 1
Cbc0038I Pass   6: suminf.    0.64029 (2) obj. -35.1996 iterations 3
Cbc0038I Pass   7: suminf.    0.78148 (2) obj. -35.1996 iterations 2
Cbc0038I Pass   8: suminf.    0.37121 (2) obj. -35.1996 iterations 5
Cbc0038I Pass   9: suminf.    0.33766 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  10: suminf.    0.33766 (2) obj. -35.1996 iterations 1
Cbc0038I Pass  11: suminf.    0.64029 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  12: suminf.    0.78148 (2) obj. -35.1996 iterations 2
Cbc0038I Pass  13: suminf.    0.37121 (2) obj. -35.1996 iterations 5
Cbc0038I Pass  14: suminf.    0.33766 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  15: suminf.    0.33766 (2) obj. -35.1996 iterations 1
Cbc0038I Pass  16: suminf.    0.64029 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  17: suminf.    0.78148 (2) obj. -35.1996 iterations 2
Cbc0038I Pass  18: suminf.    0.37121 (2) obj. -35.1996 iterations 5
Cbc0038I Pass  19: suminf.    0.33766 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  20: suminf.    0.33766 (2) obj. -35.1996 iterations 1
Cbc0038I Pass  21: suminf.    0.64029 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  22: suminf.    0.78148 (2) obj. -35.1996 iterations 2
Cbc0038I Pass  23: suminf.    0.37121 (2) obj. -35.1996 iterations 5
Cbc0038I Pass  24: suminf.    0.33766 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  25: suminf.    0.33766 (2) obj. -35.1996 iterations 1
Cbc0038I Pass  26: suminf.    0.64029 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  27: suminf.    0.78148 (2) obj. -35.1996 iterations 2
Cbc0038I Pass  28: suminf.    0.37121 (2) obj. -35.1996 iterations 5
Cbc0038I Pass  29: suminf.    0.33766 (2) obj. -35.1996 iterations 3
Cbc0038I Pass  30: suminf.    0.33766 (2) obj. -35.1996 iterations 1
Cbc0038I Pass  31: suminf.    0.64029 (2) obj. -35.1996 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.3487 - took 0.03 seconds
Cbc0012I Integer solution of -33.348666 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 41 rows 25 columns, reduced to 27 rows 17 columns
Cbc0031I 7 added rows had average density of 23
Cbc0013I At root node, 7 cuts changed objective from -51.85677 to -41.255381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 700 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 495 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -35.84069 found by DiveCoefficient after 1742 iterations and 8 nodes (0.23 seconds)
Cbc0001I Search completed - best objective -35.84069, took 1817 iterations and 14 nodes (0.24 seconds)
Cbc0032I Strong branching done 132 times (829 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.24

