Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 9.15476e-05 - average 1.63478e-06, 6 fixed columns
Coin0506I Presolve 42 (-14) rows, 24 (-6) columns and 125 (-39) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 0.23358998 - largest nonzero change 0 ( 0%) - largest zero change 1.0042233e-05
Clp0000I Optimal - objective value 95.636078
Clp0000I Optimal - objective value 95.636078
Coin0511I After Postsolve, objective 95.636078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.636078
Clp0000I Optimal - objective value 95.636078
Clp0000I Optimal - objective value 95.636078
Coin0511I After Postsolve, objective 95.636078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.63607772 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.552%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.44884
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -30.577 iterations 16
Cbc0038I Solution found of -30.577
Cbc0038I Relaxing continuous gives -30.577
Cbc0038I Rounding solution of -33.799 is better than previous of -30.577

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -39.968
Cbc0038I Pass   2: suminf.    0.18065 (1) obj. -39.968 iterations 1
Cbc0038I Pass   3: suminf.    0.21280 (2) obj. -39.968 iterations 3
Cbc0038I Pass   4: suminf.    0.47227 (1) obj. -39.968 iterations 2
Cbc0038I Pass   5: suminf.    0.29405 (2) obj. -39.968 iterations 2
Cbc0038I Pass   6: suminf.    0.99480 (2) obj. -39.968 iterations 2
Cbc0038I Pass   7: suminf.    0.41632 (1) obj. -39.968 iterations 2
Cbc0038I Pass   8: suminf.    0.38477 (1) obj. -39.968 iterations 1
Cbc0038I Pass   9: suminf.    1.94727 (9) obj. -39.968 iterations 14
Cbc0038I Pass  10: suminf.    1.56546 (8) obj. -39.968 iterations 5
Cbc0038I Pass  11: suminf.    1.53451 (5) obj. -39.968 iterations 13
Cbc0038I Pass  12: suminf.    0.71127 (3) obj. -39.968 iterations 1
Cbc0038I Pass  13: suminf.    0.34913 (2) obj. -39.968 iterations 1
Cbc0038I Pass  14: suminf.    0.47227 (1) obj. -39.968 iterations 3
Cbc0038I Pass  15: suminf.    0.29405 (2) obj. -39.968 iterations 3
Cbc0038I Pass  16: suminf.    0.99480 (2) obj. -39.968 iterations 3
Cbc0038I Pass  17: suminf.    0.41632 (1) obj. -39.968 iterations 3
Cbc0038I Pass  18: suminf.    0.38477 (1) obj. -39.968 iterations 2
Cbc0038I Pass  19: suminf.    1.12449 (3) obj. -39.968 iterations 3
Cbc0038I Pass  20: suminf.    0.51908 (2) obj. -39.968 iterations 4
Cbc0038I Pass  21: suminf.    0.17947 (2) obj. -39.968 iterations 4
Cbc0038I Pass  22: suminf.    1.11476 (3) obj. -39.968 iterations 3
Cbc0038I Pass  23: suminf.    0.47227 (1) obj. -39.968 iterations 3
Cbc0038I Pass  24: suminf.    0.29405 (2) obj. -39.968 iterations 3
Cbc0038I Pass  25: suminf.    0.99480 (2) obj. -39.968 iterations 3
Cbc0038I Pass  26: suminf.    0.41632 (1) obj. -39.968 iterations 3
Cbc0038I Pass  27: suminf.    0.38477 (1) obj. -39.968 iterations 2
Cbc0038I Pass  28: suminf.    2.35173 (9) obj. -39.968 iterations 17
Cbc0038I Pass  29: suminf.    1.72557 (9) obj. -39.968 iterations 8
Cbc0038I Pass  30: suminf.    0.47227 (1) obj. -39.968 iterations 13
Cbc0038I Pass  31: suminf.    0.29405 (2) obj. -39.968 iterations 4
Cbc0038I Rounding solution of -34.2793 is better than previous of -33.799

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -51.0719
Cbc0038I Pass  31: suminf.    0.42177 (2) obj. -51.0719 iterations 1
Cbc0038I Pass  32: suminf.    0.55846 (2) obj. -51.0719 iterations 1
Cbc0038I Pass  33: suminf.    0.51644 (2) obj. -51.0719 iterations 2
Cbc0038I Pass  34: suminf.    0.68173 (2) obj. -51.0719 iterations 4
Cbc0038I Pass  35: suminf.    0.67000 (3) obj. -51.0719 iterations 1
Cbc0038I Pass  36: suminf.    0.73144 (3) obj. -51.0719 iterations 2
Cbc0038I Pass  37: suminf.    0.30146 (3) obj. -51.0719 iterations 2
Cbc0038I Pass  38: suminf.    0.53110 (3) obj. -51.0719 iterations 2
Cbc0038I Pass  39: suminf.    0.68892 (4) obj. -51.0719 iterations 2
Cbc0038I Pass  40: suminf.    0.68892 (4) obj. -51.0719 iterations 1
Cbc0038I Pass  41: suminf.    1.58321 (8) obj. -51.0719 iterations 6
Cbc0038I Pass  42: suminf.    1.42077 (8) obj. -51.0719 iterations 3
Cbc0038I Pass  43: suminf.    1.57728 (4) obj. -51.0719 iterations 9
Cbc0038I Pass  44: suminf.    0.68057 (3) obj. -51.0719 iterations 4
Cbc0038I Pass  45: suminf.    0.75904 (3) obj. -51.0719 iterations 4
Cbc0038I Pass  46: suminf.    0.31411 (3) obj. -51.0719 iterations 2
Cbc0038I Pass  47: suminf.    0.53876 (3) obj. -51.0719 iterations 2
Cbc0038I Pass  48: suminf.    1.26675 (6) obj. -51.0719 iterations 5
Cbc0038I Pass  49: suminf.    0.94811 (5) obj. -51.0719 iterations 2
Cbc0038I Pass  50: suminf.    0.94811 (5) obj. -51.0719 iterations 0
Cbc0038I Pass  51: suminf.    1.73284 (4) obj. -51.0719 iterations 7
Cbc0038I Pass  52: suminf.    0.62867 (3) obj. -51.0719 iterations 4
Cbc0038I Pass  53: suminf.    0.30146 (3) obj. -51.0719 iterations 3
Cbc0038I Pass  54: suminf.    0.53110 (3) obj. -51.0719 iterations 2
Cbc0038I Pass  55: suminf.    4.04905 (11) obj. -51.0719 iterations 11
Cbc0038I Pass  56: suminf.    0.97128 (4) obj. -51.0719 iterations 11
Cbc0038I Pass  57: suminf.    0.97128 (4) obj. -51.0719 iterations 0
Cbc0038I Pass  58: suminf.    1.04603 (4) obj. -51.0719 iterations 8
Cbc0038I Pass  59: suminf.    0.83565 (4) obj. -51.0719 iterations 3
Cbc0038I Pass  60: suminf.    0.73144 (3) obj. -51.0719 iterations 6
Cbc0038I Rounding solution of -34.7847 is better than previous of -34.2793

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -64.3966
Cbc0038I Pass  60: suminf.    0.78614 (2) obj. -64.3966 iterations 0
Cbc0038I Pass  61: suminf.    0.85810 (2) obj. -64.3966 iterations 1
Cbc0038I Pass  62: suminf.    5.29957 (15) obj. -64.3966 iterations 10
Cbc0038I Pass  63: suminf.    1.28625 (4) obj. -64.3966 iterations 8
Cbc0038I Pass  64: suminf.    1.07766 (3) obj. -64.3966 iterations 2
Cbc0038I Pass  65: suminf.    0.97837 (2) obj. -64.3966 iterations 5
Cbc0038I Pass  66: suminf.    0.70716 (2) obj. -64.3966 iterations 1
Cbc0038I Pass  67: suminf.    2.25715 (8) obj. -64.3966 iterations 19
Cbc0038I Pass  68: suminf.    0.92459 (4) obj. -64.3966 iterations 9
Cbc0038I Pass  69: suminf.    1.64315 (7) obj. -64.3966 iterations 8
Cbc0038I Pass  70: suminf.    1.28178 (6) obj. -64.3966 iterations 3
Cbc0038I Pass  71: suminf.    1.28178 (6) obj. -64.3966 iterations 0
Cbc0038I Pass  72: suminf.    1.36318 (4) obj. -64.3966 iterations 8
Cbc0038I Pass  73: suminf.    1.05834 (5) obj. -64.3966 iterations 2
Cbc0038I Pass  74: suminf.    1.04577 (4) obj. -64.3966 iterations 1
Cbc0038I Pass  75: suminf.    1.43954 (4) obj. -64.3966 iterations 4
Cbc0038I Pass  76: suminf.    1.43915 (5) obj. -64.3966 iterations 1
Cbc0038I Pass  77: suminf.    1.44166 (5) obj. -64.3966 iterations 6
Cbc0038I Pass  78: suminf.    1.00650 (4) obj. -64.3966 iterations 1
Cbc0038I Pass  79: suminf.    1.43915 (5) obj. -64.3966 iterations 5
Cbc0038I Pass  80: suminf.    2.04344 (6) obj. -64.3966 iterations 4
Cbc0038I Pass  81: suminf.    1.77052 (6) obj. -64.3966 iterations 2
Cbc0038I Pass  82: suminf.    1.77052 (6) obj. -64.3966 iterations 0
Cbc0038I Pass  83: suminf.    1.43954 (4) obj. -64.3966 iterations 8
Cbc0038I Pass  84: suminf.    1.43915 (5) obj. -64.3966 iterations 1
Cbc0038I Pass  85: suminf.    1.44166 (5) obj. -64.3966 iterations 6
Cbc0038I Pass  86: suminf.    1.00650 (4) obj. -64.3966 iterations 1
Cbc0038I Pass  87: suminf.    1.43915 (5) obj. -64.3966 iterations 5
Cbc0038I Pass  88: suminf.    2.74768 (9) obj. -64.3966 iterations 8
Cbc0038I Pass  89: suminf.    1.63257 (5) obj. -64.3966 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -34.7847 - took 0.04 seconds
Cbc0012I Integer solution of -34.784731 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 28 rows 17 columns
Cbc0031I 11 added rows had average density of 22.454545
Cbc0013I At root node, 11 cuts changed objective from -95.48755 to -53.742284 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1611 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 689 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -35.455833 found by DiveCoefficient after 2345 iterations and 2 nodes (0.24 seconds)
Cbc0012I Integer solution of -37.213651 found by rounding after 2351 iterations and 3 nodes (0.24 seconds)
Cbc0012I Integer solution of -37.526443 found by DiveCoefficient after 2401 iterations and 3 nodes (0.25 seconds)
Cbc0012I Integer solution of -38.344003 found by DiveCoefficient after 2411 iterations and 4 nodes (0.25 seconds)
Cbc0016I Integer solution of -39.647563 found by strong branching after 2471 iterations and 5 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -39.64756300000001, took 2546 iterations and 8 nodes (0.25 seconds)
Cbc0032I Strong branching done 122 times (1188 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.26

