Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-17) rows, 45 (-5) columns and 246 (-39) elements
Clp1000I sum of infeasibilities 3.62532e-05 - average 4.42113e-07, 0 fixed columns
Coin0506I Presolve 82 (0) rows, 45 (0) columns and 246 (0) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Coin0511I After Postsolve, objective 1523.2361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Coin0511I After Postsolve, objective 1523.2361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1523.23607 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 82 rows, 45 columns (44 integer (44 of which binary)) and 246 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 12.2184
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 258.532 iterations 39
Cbc0038I Solution found of 258.532
Cbc0038I Relaxing continuous gives 258.532
Cbc0038I Rounding solution of 110.151 is better than previous of 258.532

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 45 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 110.151 to -409.128 (0.04 seconds)
Cbc0038I Round again with cutoff of -520.539
Cbc0038I Pass   2: suminf.    3.02137 (18) obj. -520.539 iterations 13
Cbc0038I Pass   3: suminf.    2.95684 (17) obj. -520.539 iterations 1
Cbc0038I Pass   4: suminf.    2.39056 (9) obj. -520.539 iterations 8
Cbc0038I Pass   5: suminf.    2.52589 (8) obj. -520.539 iterations 7
Cbc0038I Pass   6: suminf.    1.93700 (9) obj. -520.539 iterations 6
Cbc0038I Pass   7: suminf.    1.93120 (8) obj. -520.539 iterations 1
Cbc0038I Pass   8: suminf.    2.40803 (8) obj. -520.539 iterations 12
Cbc0038I Pass   9: suminf.    1.38899 (5) obj. -520.539 iterations 4
Cbc0038I Pass  10: suminf.    0.71556 (3) obj. -520.539 iterations 3
Cbc0038I Pass  11: suminf.    0.82501 (7) obj. -520.539 iterations 4
Cbc0038I Pass  12: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  13: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  14: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  15: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  16: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  17: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  18: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  19: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  20: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  21: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  22: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  23: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  24: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  25: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  26: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  27: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  28: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  29: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  30: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  31: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 45 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -409.128 - took 0.07 seconds
Cbc0012I Integer solution of -409.1277 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 27 added rows had average density of 34.37037
Cbc0013I At root node, 27 cuts changed objective from -1523.2361 to -976.36719 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7508 row cuts average 6.1 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1863 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 151 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0010I After 10 nodes, 7 on tree, -409.1277 best solution, best possible -976.18929 (0.67 seconds)
Cbc0001I Search completed - best objective -409.1277000000002, took 6177 iterations and 18 nodes (0.68 seconds)
Cbc0032I Strong branching done 344 times (7025 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 7, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.69

