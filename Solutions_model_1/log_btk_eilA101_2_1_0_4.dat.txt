Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-64) rows, 78 (-25) columns and 431 (-172) elements
Clp1000I sum of infeasibilities 2.38256e-06 - average 1.68976e-08, 71 fixed columns
Coin0506I Presolve 8 (-133) rows, 7 (-71) columns and 24 (-407) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Coin0511I After Postsolve, objective 30392.71, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.27262879 - largest nonzero change 0 ( 0%) - largest zero change 2.4498128e-05
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Coin0511I After Postsolve, objective 30392.71, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30392.71013 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 141 rows, 78 columns (77 integer (77 of which binary)) and 431 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.50118
Cbc0038I Solution found of -26033.2
Cbc0038I Relaxing continuous gives -26033.2
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -26033.2 to -28894 (0.01 seconds)
Cbc0038I Round again with cutoff of -29043.8
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.59542 (2) obj. -29043.8 iterations 17
Cbc0038I Pass   2: suminf.    0.33333 (1) obj. -29361.9 iterations 11
Cbc0038I Pass   3: suminf.    0.44375 (1) obj. -29043.8 iterations 2
Cbc0038I Pass   4: suminf.    0.60890 (3) obj. -29043.8 iterations 16
Cbc0038I Pass   5: suminf.    0.60890 (3) obj. -29043.8 iterations 8
Cbc0038I Pass   6: suminf.    0.73315 (2) obj. -29688.3 iterations 12
Cbc0038I Pass   7: suminf.    0.75006 (3) obj. -29043.8 iterations 17
Cbc0038I Pass   8: suminf.    0.75006 (3) obj. -29043.8 iterations 5
Cbc0038I Pass   9: suminf.    0.81262 (3) obj. -29043.8 iterations 13
Cbc0038I Pass  10: suminf.    0.67893 (7) obj. -29043.8 iterations 10
Cbc0038I Pass  11: suminf.    0.69736 (3) obj. -29043.8 iterations 14
Cbc0038I Pass  12: suminf.    0.69736 (3) obj. -29043.8 iterations 3
Cbc0038I Pass  13: suminf.    0.68461 (3) obj. -29043.8 iterations 6
Cbc0038I Pass  14: suminf.    0.68461 (3) obj. -29043.8 iterations 6
Cbc0038I Pass  15: suminf.    0.77794 (4) obj. -29043.8 iterations 13
Cbc0038I Pass  16: suminf.    0.60890 (3) obj. -29043.8 iterations 7
Cbc0038I Pass  17: suminf.    0.73315 (2) obj. -29688.3 iterations 12
Cbc0038I Pass  18: suminf.    0.33333 (1) obj. -29361.9 iterations 3
Cbc0038I Pass  19: suminf.    0.44375 (1) obj. -29043.8 iterations 1
Cbc0038I Pass  20: suminf.    1.29123 (5) obj. -29043.8 iterations 28
Cbc0038I Pass  21: suminf.    1.12161 (5) obj. -29043.8 iterations 20
Cbc0038I Pass  22: suminf.    1.12161 (5) obj. -29043.8 iterations 5
Cbc0038I Pass  23: suminf.    0.45393 (4) obj. -29043.8 iterations 12
Cbc0038I Pass  24: suminf.    0.45393 (4) obj. -29043.8 iterations 2
Cbc0038I Pass  25: suminf.    0.11538 (1) obj. -29681.2 iterations 12
Cbc0038I Pass  26: suminf.    0.46959 (2) obj. -29043.8 iterations 8
Cbc0038I Pass  27: suminf.    0.45422 (4) obj. -29043.8 iterations 13
Cbc0038I Pass  28: suminf.    0.86697 (5) obj. -29043.8 iterations 18
Cbc0038I Pass  29: suminf.    0.83181 (3) obj. -29043.8 iterations 15
Cbc0038I Pass  30: suminf.    0.84887 (3) obj. -29043.8 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 27 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -28894 to -29184.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -29426.4
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.46880 (3) obj. -29426.4 iterations 1
Cbc0038I Pass  31: suminf.    0.37314 (2) obj. -29426.4 iterations 13
Cbc0038I Pass  32: suminf.    0.65490 (2) obj. -29426.4 iterations 5
Cbc0038I Pass  33: suminf.    1.31485 (8) obj. -29426.4 iterations 16
Cbc0038I Pass  34: suminf.    0.26667 (1) obj. -29897.3 iterations 14
Cbc0038I Pass  35: suminf.    0.48145 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  36: suminf.    0.75236 (3) obj. -29426.4 iterations 11
Cbc0038I Pass  37: suminf.    0.75336 (4) obj. -29426.4 iterations 11
Cbc0038I Pass  38: suminf.    0.62980 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  39: suminf.    0.73068 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  40: suminf.    0.73068 (2) obj. -29426.4 iterations 5
Cbc0038I Pass  41: suminf.    0.73800 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  42: suminf.    0.66817 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  43: suminf.    0.38871 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  44: suminf.    0.11538 (1) obj. -29681.2 iterations 9
Cbc0038I Pass  45: suminf.    0.11538 (1) obj. -29681.2 iterations 0
Cbc0038I Pass  46: suminf.    0.66558 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  47: suminf.    0.90169 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  48: suminf.    0.87454 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  49: suminf.    0.23333 (1) obj. -29534.5 iterations 6
Cbc0038I Pass  50: suminf.    0.23333 (1) obj. -29534.5 iterations 3
Cbc0038I Pass  51: suminf.    0.23333 (1) obj. -29534.5 iterations 3
Cbc0038I Pass  52: suminf.    0.66558 (3) obj. -29426.4 iterations 8
Cbc0038I Pass  53: suminf.    0.90169 (3) obj. -29426.4 iterations 9
Cbc0038I Pass  54: suminf.    0.87454 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  55: suminf.    0.71924 (3) obj. -29426.4 iterations 9
Cbc0038I Pass  56: suminf.    0.71924 (3) obj. -29426.4 iterations 5
Cbc0038I Pass  57: suminf.    0.47037 (3) obj. -29426.4 iterations 5
Cbc0038I Pass  58: suminf.    0.40435 (2) obj. -29426.4 iterations 7
Cbc0038I Pass  59: suminf.    0.64907 (2) obj. -29426.4 iterations 10
Cbc0038I Rounding solution of -29232 is better than previous of -29184.8

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -29716.3
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.65127 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  60: suminf.    0.65127 (3) obj. -29716.3 iterations 11
Cbc0038I Pass  61: suminf.    1.23154 (3) obj. -29716.3 iterations 12
Cbc0038I Pass  62: suminf.    0.74278 (3) obj. -29716.3 iterations 7
Cbc0038I Pass  63: suminf.    1.15012 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  64: suminf.    1.12480 (3) obj. -29716.3 iterations 6
Cbc0038I Pass  65: suminf.    1.23270 (3) obj. -29716.3 iterations 5
Cbc0038I Pass  66: suminf.    1.23270 (3) obj. -29716.3 iterations 5
Cbc0038I Pass  67: suminf.    1.19425 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  68: suminf.    0.52028 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  69: suminf.    0.03846 (1) obj. -29799.6 iterations 4
Cbc0038I Pass  70: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  71: suminf.    0.28661 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  72: suminf.    1.19425 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  73: suminf.    1.19425 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  74: suminf.    1.23270 (3) obj. -29716.3 iterations 13
Cbc0038I Pass  75: suminf.    0.97047 (6) obj. -29716.3 iterations 3
Cbc0038I Pass  76: suminf.    0.12506 (2) obj. -29716.3 iterations 4
Cbc0038I Pass  77: suminf.    0.03846 (1) obj. -29799.6 iterations 10
Cbc0038I Pass  78: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  79: suminf.    0.28661 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  80: suminf.    1.19425 (3) obj. -29716.3 iterations 10
Cbc0038I Pass  81: suminf.    1.19425 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  82: suminf.    1.23270 (3) obj. -29716.3 iterations 12
Cbc0038I Pass  83: suminf.    1.05683 (4) obj. -29716.3 iterations 5
Cbc0038I Pass  84: suminf.    0.29560 (2) obj. -29716.3 iterations 12
Cbc0038I Pass  85: suminf.    0.03846 (1) obj. -29799.6 iterations 14
Cbc0038I Pass  86: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  87: suminf.    0.28661 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  88: suminf.    1.19425 (3) obj. -29716.3 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -29232 - took 0.04 seconds
Cbc0012I Integer solution of -29232.01 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -29361.218 found by DiveCoefficient after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 141 rows 78 columns, reduced to 8 rows 8 columns
Cbc0031I 7 added rows had average density of 21.285714
Cbc0013I At root node, 7 cuts changed objective from -30392.71 to -29903.457 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 76.2 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0010I After 9 nodes, 1 on tree, -29361.218 best solution, best possible -29903.457 (0.68 seconds)
Cbc0001I Search completed - best objective -29361.218, took 292 iterations and 10 nodes (0.70 seconds)
Cbc0032I Strong branching done 110 times (568 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 64 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.70

