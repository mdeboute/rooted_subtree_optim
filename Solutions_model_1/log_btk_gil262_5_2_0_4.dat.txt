Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 359 (-168) rows, 188 (-76) columns and 1078 (-467) elements
Clp1000I sum of infeasibilities 8.46778e-06 - average 2.35871e-08, 173 fixed columns
Coin0506I Presolve 14 (-345) rows, 15 (-173) columns and 52 (-1026) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Coin0511I After Postsolve, objective 221702.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14888942 - largest nonzero change 0 ( 0%) - largest zero change 2.999606e-05
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Coin0511I After Postsolve, objective 221702.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221702.4997 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 359 rows, 188 columns (187 integer (187 of which binary)) and 1078 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.504%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 1.66428
Cbc0038I Pass   1: suminf.    0.43158 (1) obj. -214994 iterations 45
Cbc0038I Solution found of -194729
Cbc0038I Relaxing continuous gives -194729
Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -197427
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.43158 (1) obj. -214994 iterations 0
Cbc0038I Pass   3: suminf.    0.07566 (1) obj. -197427 iterations 6
Cbc0038I Pass   4: suminf.    2.55026 (11) obj. -197427 iterations 40
Cbc0038I Pass   5: suminf.    0.21853 (2) obj. -197427 iterations 38
Cbc0038I Pass   6: suminf.    0.48810 (1) obj. -201158 iterations 12
Cbc0038I Pass   7: suminf.    0.48810 (1) obj. -201158 iterations 0
Cbc0038I Pass   8: suminf.    0.88575 (6) obj. -197427 iterations 26
Cbc0038I Pass   9: suminf.    0.73696 (4) obj. -197427 iterations 15
Cbc0038I Pass  10: suminf.    0.45560 (1) obj. -197427 iterations 23
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -212726 iterations 12
Cbc0038I Solution found of -212726
Cbc0038I Relaxing continuous gives -212726
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -214521
Cbc0038I Reduced cost fixing fixed 92 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.43158 (1) obj. -214994 iterations 0
Cbc0038I Pass  13: suminf.    0.44484 (1) obj. -214521 iterations 6
Cbc0038I Pass  14: suminf.    1.32080 (9) obj. -214521 iterations 26
Cbc0038I Pass  15: suminf.    0.49038 (1) obj. -214521 iterations 38
Cbc0038I Pass  16: suminf.    0.49806 (5) obj. -214521 iterations 21
Cbc0038I Pass  17: suminf.    0.25066 (3) obj. -214521 iterations 15
Cbc0038I Pass  18: suminf.    0.34477 (3) obj. -214521 iterations 19
Cbc0038I Pass  19: suminf.    0.97050 (4) obj. -214521 iterations 36
Cbc0038I Pass  20: suminf.    0.96538 (4) obj. -214521 iterations 20
Cbc0038I Pass  21: suminf.    0.96504 (3) obj. -218391 iterations 14
Cbc0038I Pass  22: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  23: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  24: suminf.    1.10470 (4) obj. -214521 iterations 20
Cbc0038I Pass  25: suminf.    1.10470 (4) obj. -214521 iterations 15
Cbc0038I Pass  26: suminf.    1.13911 (3) obj. -214521 iterations 13
Cbc0038I Pass  27: suminf.    0.96504 (3) obj. -218391 iterations 6
Cbc0038I Pass  28: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  29: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  30: suminf.    1.10470 (4) obj. -214521 iterations 23
Cbc0038I Pass  31: suminf.    1.10470 (4) obj. -214521 iterations 13
Cbc0038I Pass  32: suminf.    1.13911 (3) obj. -214521 iterations 13
Cbc0038I Pass  33: suminf.    0.96504 (3) obj. -218391 iterations 6
Cbc0038I Pass  34: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  35: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  36: suminf.    0.56646 (3) obj. -214521 iterations 25
Cbc0038I Pass  37: suminf.    0.43740 (2) obj. -215460 iterations 20
Cbc0038I Pass  38: suminf.    0.48117 (2) obj. -214521 iterations 9
Cbc0038I Pass  39: suminf.    1.36190 (4) obj. -214521 iterations 22
Cbc0038I Pass  40: suminf.    0.96504 (3) obj. -218391 iterations 15
Cbc0038I Pass  41: suminf.    0.88548 (2) obj. -214521 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 25 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -212726 - took 0.06 seconds
Cbc0012I Integer solution of -212725.93 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 359 rows 188 columns, reduced to 5 rows 5 columns
Cbc0031I 7 added rows had average density of 58.571429
Cbc0013I At root node, 7 cuts changed objective from -221702.5 to -216462.8 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 35.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 181.8 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -212725.93 best solution, best possible -216370.84 (0.73 seconds)
Cbc0001I Search completed - best objective -212725.93, took 304 iterations and 8 nodes (0.99 seconds)
Cbc0032I Strong branching done 74 times (461 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       1.01

