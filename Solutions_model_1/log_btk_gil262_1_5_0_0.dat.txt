Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 255 (-9) columns and 1473 (-72) elements
Clp1000I sum of infeasibilities 4.23735e-05 - average 8.57763e-08, 165 fixed columns
Coin0506I Presolve 157 (-337) rows, 84 (-171) columns and 466 (-1007) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.8564898 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Coin0511I After Postsolve, objective 252.35347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13632852 - largest nonzero change 0 ( 0%) - largest zero change 2.9805748e-05
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Coin0511I After Postsolve, objective 252.35347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 252.3534684 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 255 columns (254 integer (254 of which binary)) and 1473 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.378%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 10.051
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.8236 iterations 164
Cbc0038I Solution found of -18.8236
Cbc0038I Relaxing continuous gives -18.8236
Cbc0038I Rounding solution of -50.1522 is better than previous of -18.8236

Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 255 columns, reduced to 89 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -50.1522 to -171.684 (0.06 seconds)
Cbc0038I Round again with cutoff of -179.751
Cbc0038I Pass   2: suminf.    3.96261 (10) obj. -179.751 iterations 38
Cbc0038I Pass   3: suminf.    2.32988 (7) obj. -179.751 iterations 21
Cbc0038I Pass   4: suminf.    1.64975 (5) obj. -179.751 iterations 19
Cbc0038I Pass   5: suminf.    1.44003 (5) obj. -179.751 iterations 10
Cbc0038I Pass   6: suminf.    1.44003 (5) obj. -179.751 iterations 9
Cbc0038I Pass   7: suminf.    1.42906 (5) obj. -179.751 iterations 26
Cbc0038I Pass   8: suminf.    1.28833 (5) obj. -179.751 iterations 11
Cbc0038I Pass   9: suminf.    1.01425 (4) obj. -179.751 iterations 23
Cbc0038I Pass  10: suminf.    0.96908 (4) obj. -179.751 iterations 2
Cbc0038I Pass  11: suminf.    1.31152 (5) obj. -179.751 iterations 17
Cbc0038I Pass  12: suminf.    6.16785 (21) obj. -179.751 iterations 60
Cbc0038I Pass  13: suminf.    3.45052 (17) obj. -179.751 iterations 59
Cbc0038I Pass  14: suminf.    3.45052 (17) obj. -179.751 iterations 0
Cbc0038I Pass  15: suminf.    1.89403 (6) obj. -179.751 iterations 29
Cbc0038I Pass  16: suminf.    1.52913 (7) obj. -179.751 iterations 15
Cbc0038I Pass  17: suminf.    1.50952 (5) obj. -179.751 iterations 19
Cbc0038I Pass  18: suminf.    1.00939 (5) obj. -179.751 iterations 2
Cbc0038I Pass  19: suminf.    1.00939 (5) obj. -179.751 iterations 0
Cbc0038I Pass  20: suminf.    1.15275 (5) obj. -179.751 iterations 15
Cbc0038I Pass  21: suminf.    1.08110 (4) obj. -179.751 iterations 7
Cbc0038I Pass  22: suminf.    2.08639 (5) obj. -179.751 iterations 9
Cbc0038I Pass  23: suminf.    1.85857 (9) obj. -179.751 iterations 10
Cbc0038I Pass  24: suminf.    1.49942 (5) obj. -179.751 iterations 13
Cbc0038I Pass  25: suminf.    2.30472 (8) obj. -179.751 iterations 47
Cbc0038I Pass  26: suminf.    1.15791 (8) obj. -179.751 iterations 19
Cbc0038I Pass  27: suminf.    2.67181 (7) obj. -179.751 iterations 24
Cbc0038I Pass  28: suminf.    1.72453 (8) obj. -179.751 iterations 14
Cbc0038I Pass  29: suminf.    0.59156 (3) obj. -179.751 iterations 12
Cbc0038I Pass  30: suminf.    1.08756 (3) obj. -179.751 iterations 7
Cbc0038I Pass  31: suminf.    0.75799 (3) obj. -179.751 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 187 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 255 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -171.684 - took 0.12 seconds
Cbc0012I Integer solution of -171.68407 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 89 rows 51 columns
Cbc0012I Integer solution of -186.23737 found by RINS after 0 iterations and 0 nodes (0.20 seconds)
Cbc0031I 29 added rows had average density of 106.75862
Cbc0013I At root node, 29 cuts changed objective from -252.35347 to -230.74318 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16292 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.389 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1803 row cuts average 250.6 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.195 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 244.7 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -186.23737 best solution, best possible -230.74318 (2.67 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 102 rows 59 columns
Cbc0010I After 45 nodes, 10 on tree, -186.23737 best solution, best possible -230.74318 (3.38 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 8 rows 7 columns
Cbc0010I After 147 nodes, 10 on tree, -186.23737 best solution, best possible -199.00237 (4.08 seconds)
Cbc0001I Search completed - best objective -186.23737, took 18629 iterations and 188 nodes (4.18 seconds)
Cbc0032I Strong branching done 1792 times (44674 iterations), fathomed 19 nodes and fixed 91 variables
Cbc0035I Maximum depth 36, 1208 variables fixed on reduced cost
Total time (CPU seconds):       4.10   (Wallclock seconds):       4.21

