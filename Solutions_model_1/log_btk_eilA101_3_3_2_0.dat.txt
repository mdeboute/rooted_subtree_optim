Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 6.26473e-05 - average 3.44216e-07, 24 fixed columns
Coin0506I Presolve 129 (-53) rows, 76 (-24) columns and 403 (-153) elements
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 2.2820467 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 50.018211
Clp0000I Optimal - objective value 50.018211
Coin0511I After Postsolve, objective 50.018211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.018211
Clp0000I Optimal - objective value 50.018211
Clp0000I Optimal - objective value 50.018211
Coin0511I After Postsolve, objective 50.018211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.01821125 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 11.0988
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.55453 iterations 48
Cbc0038I Solution found of 3.55453
Cbc0038I Relaxing continuous gives 3.55453
Cbc0038I Rounding solution of -7.11113 is better than previous of 3.55453

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 52 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -7.11113 to -14.2644 (0.05 seconds)
Cbc0038I Round again with cutoff of -17.8399
Cbc0038I Pass   2: suminf.    2.04022 (6) obj. -17.8399 iterations 10
Cbc0038I Pass   3: suminf.    2.11655 (6) obj. -17.8399 iterations 11
Cbc0038I Pass   4: suminf.    0.86634 (4) obj. -17.8399 iterations 7
Cbc0038I Pass   5: suminf.    1.55623 (4) obj. -17.8399 iterations 5
Cbc0038I Pass   6: suminf.    1.94970 (5) obj. -17.8399 iterations 2
Cbc0038I Pass   7: suminf.    1.63112 (5) obj. -17.8399 iterations 1
Cbc0038I Pass   8: suminf.    3.87395 (12) obj. -17.8399 iterations 22
Cbc0038I Pass   9: suminf.    1.32353 (6) obj. -17.8399 iterations 15
Cbc0038I Pass  10: suminf.    1.30422 (6) obj. -17.8399 iterations 1
Cbc0038I Pass  11: suminf.    2.02100 (6) obj. -17.8399 iterations 11
Cbc0038I Pass  12: suminf.    2.02100 (6) obj. -17.8399 iterations 0
Cbc0038I Pass  13: suminf.    2.16845 (7) obj. -17.8399 iterations 5
Cbc0038I Pass  14: suminf.    2.16845 (7) obj. -17.8399 iterations 0
Cbc0038I Pass  15: suminf.    1.46295 (4) obj. -17.8399 iterations 7
Cbc0038I Pass  16: suminf.    1.41934 (4) obj. -17.8399 iterations 3
Cbc0038I Pass  17: suminf.    1.81306 (5) obj. -17.8399 iterations 2
Cbc0038I Pass  18: suminf.    1.49423 (5) obj. -17.8399 iterations 1
Cbc0038I Pass  19: suminf.    1.82389 (5) obj. -17.8399 iterations 39
Cbc0038I Pass  20: suminf.    1.10828 (6) obj. -17.8399 iterations 9
Cbc0038I Pass  21: suminf.    1.73882 (7) obj. -17.8399 iterations 13
Cbc0038I Pass  22: suminf.    1.30127 (5) obj. -17.8399 iterations 3
Cbc0038I Pass  23: suminf.    1.30127 (5) obj. -17.8399 iterations 1
Cbc0038I Pass  24: suminf.    1.96176 (7) obj. -17.8399 iterations 6
Cbc0038I Pass  25: suminf.    1.29182 (4) obj. -17.8399 iterations 3
Cbc0038I Pass  26: suminf.    0.90503 (4) obj. -17.8399 iterations 2
Cbc0038I Pass  27: suminf.    1.99319 (10) obj. -17.8399 iterations 16
Cbc0038I Pass  28: suminf.    1.37702 (5) obj. -17.8399 iterations 11
Cbc0038I Pass  29: suminf.    1.15487 (6) obj. -17.8399 iterations 7
Cbc0038I Pass  30: suminf.    1.10933 (4) obj. -17.8399 iterations 2
Cbc0038I Pass  31: suminf.    1.14552 (5) obj. -17.8399 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 83 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -14.2644 to -14.5443 (0.11 seconds)
Cbc0038I Round again with cutoff of -24.2755
Cbc0038I Pass  31: suminf.    2.94474 (9) obj. -24.2755 iterations 2
Cbc0038I Pass  32: suminf.    2.86374 (8) obj. -24.2755 iterations 1
Cbc0038I Pass  33: suminf.    2.76391 (7) obj. -24.2755 iterations 1
Cbc0038I Pass  34: suminf.    2.76391 (7) obj. -24.2755 iterations 0
Cbc0038I Pass  35: suminf.    1.95032 (5) obj. -24.2755 iterations 8
Cbc0038I Pass  36: suminf.    1.75455 (5) obj. -24.2755 iterations 4
Cbc0038I Pass  37: suminf.    1.75455 (5) obj. -24.2755 iterations 0
Cbc0038I Pass  38: suminf.    1.56259 (5) obj. -24.2755 iterations 4
Cbc0038I Pass  39: suminf.    1.09645 (4) obj. -24.2755 iterations 1
Cbc0038I Pass  40: suminf.    0.87085 (4) obj. -24.2755 iterations 2
Cbc0038I Pass  41: suminf.    1.80270 (6) obj. -24.2755 iterations 5
Cbc0038I Pass  42: suminf.    1.75455 (5) obj. -24.2755 iterations 1
Cbc0038I Pass  43: suminf.    1.56259 (5) obj. -24.2755 iterations 4
Cbc0038I Pass  44: suminf.    1.09645 (4) obj. -24.2755 iterations 1
Cbc0038I Pass  45: suminf.    0.87085 (4) obj. -24.2755 iterations 2
Cbc0038I Pass  46: suminf.    1.80270 (6) obj. -24.2755 iterations 5
Cbc0038I Pass  47: suminf.    1.75455 (5) obj. -24.2755 iterations 1
Cbc0038I Pass  48: suminf.    1.56259 (5) obj. -24.2755 iterations 4
Cbc0038I Pass  49: suminf.    1.09645 (4) obj. -24.2755 iterations 1
Cbc0038I Pass  50: suminf.    0.87085 (4) obj. -24.2755 iterations 2
Cbc0038I Pass  51: suminf.    1.80270 (6) obj. -24.2755 iterations 5
Cbc0038I Pass  52: suminf.    1.75455 (5) obj. -24.2755 iterations 1
Cbc0038I Pass  53: suminf.    1.56259 (5) obj. -24.2755 iterations 4
Cbc0038I Pass  54: suminf.    1.09645 (4) obj. -24.2755 iterations 1
Cbc0038I Pass  55: suminf.    0.87085 (4) obj. -24.2755 iterations 2
Cbc0038I Pass  56: suminf.    1.80270 (6) obj. -24.2755 iterations 5
Cbc0038I Pass  57: suminf.    1.75455 (5) obj. -24.2755 iterations 1
Cbc0038I Pass  58: suminf.    1.56259 (5) obj. -24.2755 iterations 4
Cbc0038I Pass  59: suminf.    1.09645 (4) obj. -24.2755 iterations 1
Cbc0038I Pass  60: suminf.    0.87085 (4) obj. -24.2755 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 52 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -14.5443 to -18.0403 (0.16 seconds)
Cbc0038I Round again with cutoff of -31.9983
Cbc0038I Pass  60: suminf.    3.73279 (11) obj. -31.9983 iterations 2
Cbc0038I Pass  61: suminf.    2.59594 (8) obj. -31.9983 iterations 4
Cbc0038I Pass  62: suminf.    2.00274 (8) obj. -31.9983 iterations 2
Cbc0038I Pass  63: suminf.    1.93143 (7) obj. -31.9983 iterations 2
Cbc0038I Pass  64: suminf.    1.40784 (6) obj. -31.9983 iterations 3
Cbc0038I Pass  65: suminf.    2.68583 (9) obj. -31.9983 iterations 7
Cbc0038I Pass  66: suminf.    5.70637 (17) obj. -31.9983 iterations 28
Cbc0038I Pass  67: suminf.    4.15242 (15) obj. -31.9983 iterations 14
Cbc0038I Pass  68: suminf.    4.15242 (15) obj. -31.9983 iterations 0
Cbc0038I Pass  69: suminf.    4.03340 (11) obj. -31.9983 iterations 21
Cbc0038I Pass  70: suminf.    3.17142 (10) obj. -31.9983 iterations 10
Cbc0038I Pass  71: suminf.    3.12563 (10) obj. -31.9983 iterations 5
Cbc0038I Pass  72: suminf.    3.11918 (9) obj. -31.9983 iterations 3
Cbc0038I Pass  73: suminf.    3.94399 (10) obj. -31.9983 iterations 8
Cbc0038I Pass  74: suminf.    3.24644 (9) obj. -31.9983 iterations 4
Cbc0038I Pass  75: suminf.    3.11862 (9) obj. -31.9983 iterations 2
Cbc0038I Pass  76: suminf.    3.83993 (11) obj. -31.9983 iterations 12
Cbc0038I Pass  77: suminf.    3.05560 (11) obj. -31.9983 iterations 5
Cbc0038I Pass  78: suminf.    3.04307 (10) obj. -31.9983 iterations 6
Cbc0038I Pass  79: suminf.    3.59904 (10) obj. -31.9983 iterations 10
Cbc0038I Pass  80: suminf.    3.11862 (9) obj. -31.9983 iterations 4
Cbc0038I Pass  81: suminf.    3.83993 (11) obj. -31.9983 iterations 12
Cbc0038I Pass  82: suminf.    3.05560 (11) obj. -31.9983 iterations 5
Cbc0038I Pass  83: suminf.    3.04307 (10) obj. -31.9983 iterations 6
Cbc0038I Pass  84: suminf.    3.59904 (10) obj. -31.9983 iterations 10
Cbc0038I Pass  85: suminf.    3.11862 (9) obj. -31.9983 iterations 5
Cbc0038I Pass  86: suminf.    3.83993 (11) obj. -31.9983 iterations 12
Cbc0038I Pass  87: suminf.    3.05560 (11) obj. -31.9983 iterations 5
Cbc0038I Pass  88: suminf.    3.04307 (10) obj. -31.9983 iterations 6
Cbc0038I Pass  89: suminf.    3.59904 (10) obj. -31.9983 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 61 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -18.0403 - took 0.17 seconds
Cbc0012I Integer solution of -18.04028 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 52 rows 33 columns
Cbc0031I 26 added rows had average density of 48.230769
Cbc0013I At root node, 26 cuts changed objective from -50.018211 to -37.971797 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12944 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2455 row cuts average 99.5 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 85.8 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -18.04028 best solution, best possible -37.971797 (1.17 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 77 rows 45 columns
Cbc0038I Full problem 182 rows 100 columns, reduced to 92 rows 52 columns
Cbc0010I After 92 nodes, 11 on tree, -18.04028 best solution, best possible -37.971797 (2.01 seconds)
Cbc0001I Search completed - best objective -18.04028, took 11346 iterations and 138 nodes (2.11 seconds)
Cbc0032I Strong branching done 1338 times (24603 iterations), fathomed 13 nodes and fixed 21 variables
Cbc0035I Maximum depth 31, 625 variables fixed on reduced cost
Total time (CPU seconds):       2.03   (Wallclock seconds):       2.13

