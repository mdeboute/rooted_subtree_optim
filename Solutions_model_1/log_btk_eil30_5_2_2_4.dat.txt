Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 29 (-3) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 7.93157e-05 - average 1.58631e-06, 0 fixed columns
Coin0506I Presolve 50 (0) rows, 29 (0) columns and 150 (0) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 91.072037
Clp0000I Optimal - objective value 91.072037
Coin0511I After Postsolve, objective 91.072037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.072037
Clp0000I Optimal - objective value 91.072037
Clp0000I Optimal - objective value 91.072037
Coin0511I After Postsolve, objective 91.072037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.07203707 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.15479
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.1808 iterations 24
Cbc0038I Solution found of -20.1808
Cbc0038I Relaxing continuous gives -20.1808
Cbc0038I Rounding solution of -23.4257 is better than previous of -20.1808

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -23.4257 to -33.9771 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.664
Cbc0038I Pass   2: suminf.    0.49809 (2) obj. -39.664 iterations 3
Cbc0038I Pass   3: suminf.    0.39750 (1) obj. -39.664 iterations 2
Cbc0038I Pass   4: suminf.    0.21537 (1) obj. -39.664 iterations 1
Cbc0038I Pass   5: suminf.    1.33891 (5) obj. -39.664 iterations 4
Cbc0038I Pass   6: suminf.    1.21159 (4) obj. -39.664 iterations 1
Cbc0038I Pass   7: suminf.    0.29057 (1) obj. -39.664 iterations 4
Cbc0038I Pass   8: suminf.    0.49809 (2) obj. -39.664 iterations 2
Cbc0038I Pass   9: suminf.    0.39750 (1) obj. -39.664 iterations 2
Cbc0038I Pass  10: suminf.    0.21537 (1) obj. -39.664 iterations 1
Cbc0038I Pass  11: suminf.    1.48560 (5) obj. -39.664 iterations 5
Cbc0038I Pass  12: suminf.    1.38221 (5) obj. -39.664 iterations 1
Cbc0038I Pass  13: suminf.    1.61110 (5) obj. -39.664 iterations 4
Cbc0038I Pass  14: suminf.    1.25790 (4) obj. -39.664 iterations 2
Cbc0038I Pass  15: suminf.    0.40606 (3) obj. -39.664 iterations 7
Cbc0038I Pass  16: suminf.    1.94019 (8) obj. -39.664 iterations 10
Cbc0038I Pass  17: suminf.    1.94019 (8) obj. -39.664 iterations 0
Cbc0038I Pass  18: suminf.    1.28480 (3) obj. -39.664 iterations 9
Cbc0038I Pass  19: suminf.    0.81277 (4) obj. -39.664 iterations 3
Cbc0038I Pass  20: suminf.    1.14538 (3) obj. -39.664 iterations 4
Cbc0038I Pass  21: suminf.    1.11540 (3) obj. -39.664 iterations 1
Cbc0038I Pass  22: suminf.    0.74303 (3) obj. -39.664 iterations 3
Cbc0038I Pass  23: suminf.    0.60198 (3) obj. -39.664 iterations 1
Cbc0038I Pass  24: suminf.    2.42087 (6) obj. -39.664 iterations 7
Cbc0038I Pass  25: suminf.    1.19829 (5) obj. -39.664 iterations 4
Cbc0038I Pass  26: suminf.    1.28480 (3) obj. -39.664 iterations 5
Cbc0038I Pass  27: suminf.    0.81277 (4) obj. -39.664 iterations 3
Cbc0038I Pass  28: suminf.    1.14538 (3) obj. -39.664 iterations 4
Cbc0038I Pass  29: suminf.    1.11540 (3) obj. -39.664 iterations 1
Cbc0038I Pass  30: suminf.    0.74303 (3) obj. -39.664 iterations 3
Cbc0038I Pass  31: suminf.    0.60198 (3) obj. -39.664 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.9771 - took 0.04 seconds
Cbc0012I Integer solution of -33.97713 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 13 added rows had average density of 17.692308
Cbc0013I At root node, 13 cuts changed objective from -90.844586 to -62.286 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2816 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1230 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0012I Integer solution of -34.03195 found by rounding after 3550 iterations and 21 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -34.03195000000001, took 3643 iterations and 26 nodes (0.29 seconds)
Cbc0032I Strong branching done 266 times (2526 iterations), fathomed 2 nodes and fixed 14 variables
Cbc0035I Maximum depth 5, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.29

