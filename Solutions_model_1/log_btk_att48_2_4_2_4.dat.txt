Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 48 (-2) columns and 266 (-19) elements
Clp1000I sum of infeasibilities 3.18793e-07 - average 3.58195e-09, 9 fixed columns
Coin0506I Presolve 72 (-17) rows, 39 (-9) columns and 214 (-52) elements
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 23.368255 - largest nonzero change 0 ( 0%) - largest zero change 1.836629e-05
Clp0000I Optimal - objective value 2481.7158
Clp0000I Optimal - objective value 2481.7158
Coin0511I After Postsolve, objective 2481.7158, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2481.7158
Clp0000I Optimal - objective value 2481.7158
Clp0000I Optimal - objective value 2481.7158
Coin0511I After Postsolve, objective 2481.7158, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2481.715765 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 48 columns (47 integer (47 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 10.098
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -544.897 iterations 33
Cbc0038I Solution found of -544.897
Cbc0038I Relaxing continuous gives -544.897
Cbc0038I Rounding solution of -648.455 is better than previous of -544.897

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 48 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -648.455 to -653.812 (0.03 seconds)
Cbc0038I Round again with cutoff of -836.603
Cbc0038I Pass   2: suminf.    0.30519 (2) obj. -836.603 iterations 2
Cbc0038I Pass   3: suminf.    0.89705 (4) obj. -836.603 iterations 7
Cbc0038I Pass   4: suminf.    1.11727 (3) obj. -836.603 iterations 10
Cbc0038I Pass   5: suminf.    0.99224 (3) obj. -836.603 iterations 1
Cbc0038I Pass   6: suminf.    1.25323 (4) obj. -836.603 iterations 3
Cbc0038I Pass   7: suminf.    1.25323 (4) obj. -836.603 iterations 0
Cbc0038I Pass   8: suminf.    1.41545 (4) obj. -836.603 iterations 4
Cbc0038I Pass   9: suminf.    1.32677 (4) obj. -836.603 iterations 3
Cbc0038I Pass  10: suminf.    1.45505 (4) obj. -836.603 iterations 2
Cbc0038I Pass  11: suminf.    0.88068 (3) obj. -836.603 iterations 15
Cbc0038I Pass  12: suminf.    0.80997 (4) obj. -836.603 iterations 9
Cbc0038I Pass  13: suminf.    1.22544 (3) obj. -836.603 iterations 2
Cbc0038I Pass  14: suminf.    0.99411 (3) obj. -836.603 iterations 1
Cbc0038I Pass  15: suminf.    1.20336 (4) obj. -836.603 iterations 3
Cbc0038I Pass  16: suminf.    1.19731 (5) obj. -836.603 iterations 1
Cbc0038I Pass  17: suminf.    1.43118 (4) obj. -836.603 iterations 5
Cbc0038I Pass  18: suminf.    1.23925 (4) obj. -836.603 iterations 1
Cbc0038I Pass  19: suminf.    1.23925 (4) obj. -836.603 iterations 0
Cbc0038I Pass  20: suminf.    1.44034 (4) obj. -836.603 iterations 2
Cbc0038I Pass  21: suminf.    1.24663 (5) obj. -836.603 iterations 3
Cbc0038I Pass  22: suminf.    2.57795 (9) obj. -836.603 iterations 17
Cbc0038I Pass  23: suminf.    1.18622 (6) obj. -836.603 iterations 7
Cbc0038I Pass  24: suminf.    1.42099 (5) obj. -836.603 iterations 8
Cbc0038I Pass  25: suminf.    1.14739 (4) obj. -836.603 iterations 1
Cbc0038I Pass  26: suminf.    0.89179 (3) obj. -836.603 iterations 3
Cbc0038I Pass  27: suminf.    1.40905 (5) obj. -836.603 iterations 5
Cbc0038I Pass  28: suminf.    1.53314 (8) obj. -836.603 iterations 9
Cbc0038I Pass  29: suminf.    1.53314 (8) obj. -836.603 iterations 1
Cbc0038I Pass  30: suminf.    1.20493 (4) obj. -836.603 iterations 13
Cbc0038I Pass  31: suminf.    1.20493 (4) obj. -836.603 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 75 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -653.812 to -708.476 (0.08 seconds)
Cbc0038I Round again with cutoff of -1165.63
Cbc0038I Pass  31: suminf.    0.80043 (4) obj. -1165.63 iterations 2
Cbc0038I Pass  32: suminf.    1.15556 (3) obj. -1165.63 iterations 4
Cbc0038I Pass  33: suminf.    0.82023 (3) obj. -1165.63 iterations 2
Cbc0038I Pass  34: suminf.    1.26042 (4) obj. -1165.63 iterations 3
Cbc0038I Pass  35: suminf.    2.71139 (7) obj. -1165.63 iterations 11
Cbc0038I Pass  36: suminf.    1.56824 (8) obj. -1165.63 iterations 4
Cbc0038I Pass  37: suminf.    2.25962 (7) obj. -1165.63 iterations 9
Cbc0038I Pass  38: suminf.    1.88601 (6) obj. -1165.63 iterations 4
Cbc0038I Pass  39: suminf.    2.00195 (8) obj. -1165.63 iterations 7
Cbc0038I Pass  40: suminf.    2.00112 (9) obj. -1165.63 iterations 1
Cbc0038I Pass  41: suminf.    2.00000 (7) obj. -1165.63 iterations 9
Cbc0038I Pass  42: suminf.    2.00000 (7) obj. -1165.63 iterations 3
Cbc0038I Pass  43: suminf.    3.36286 (10) obj. -1165.63 iterations 6
Cbc0038I Pass  44: suminf.    3.32809 (10) obj. -1165.63 iterations 1
Cbc0038I Pass  45: suminf.    2.14858 (8) obj. -1165.63 iterations 11
Cbc0038I Pass  46: suminf.    1.99544 (7) obj. -1165.63 iterations 2
Cbc0038I Pass  47: suminf.    1.22901 (6) obj. -1165.63 iterations 1
Cbc0038I Pass  48: suminf.    2.17062 (8) obj. -1165.63 iterations 8
Cbc0038I Pass  49: suminf.    2.17062 (8) obj. -1165.63 iterations 0
Cbc0038I Pass  50: suminf.    2.06009 (8) obj. -1165.63 iterations 7
Cbc0038I Pass  51: suminf.    1.99544 (7) obj. -1165.63 iterations 1
Cbc0038I Pass  52: suminf.    1.22901 (6) obj. -1165.63 iterations 1
Cbc0038I Pass  53: suminf.    2.17062 (8) obj. -1165.63 iterations 8
Cbc0038I Pass  54: suminf.    2.17062 (8) obj. -1165.63 iterations 0
Cbc0038I Pass  55: suminf.    2.06009 (8) obj. -1165.63 iterations 7
Cbc0038I Pass  56: suminf.    1.99544 (7) obj. -1165.63 iterations 1
Cbc0038I Pass  57: suminf.    1.22901 (6) obj. -1165.63 iterations 1
Cbc0038I Pass  58: suminf.    2.17062 (8) obj. -1165.63 iterations 8
Cbc0038I Pass  59: suminf.    2.17062 (8) obj. -1165.63 iterations 0
Cbc0038I Pass  60: suminf.    2.06009 (8) obj. -1165.63 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 59 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -708.476 - took 0.09 seconds
Cbc0012I Integer solution of -708.4761 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 89 rows 48 columns, reduced to 50 rows 31 columns
Cbc0031I 17 added rows had average density of 35.294118
Cbc0013I At root node, 17 cuts changed objective from -2481.7158 to -1686.5457 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6312 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1921 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 104 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -708.4761 best solution, best possible -1686.5457 (0.69 seconds)
Cbc0001I Search completed - best objective -708.4761000000003, took 7257 iterations and 34 nodes (0.81 seconds)
Cbc0032I Strong branching done 512 times (10635 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 16, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.81

