Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 150 (-55) rows, 81 (-22) columns and 456 (-147) elements
Clp1000I sum of infeasibilities 1.82838e-07 - average 1.21892e-09, 73 fixed columns
Coin0506I Presolve 11 (-139) rows, 8 (-73) columns and 32 (-424) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Coin0511I After Postsolve, objective 22321.898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21155682 - largest nonzero change 0 ( 0%) - largest zero change 2.9716912e-05
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Coin0511I After Postsolve, objective 22321.898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22321.89784 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 150 rows, 81 columns (80 integer (80 of which binary)) and 469 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.288%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.37469
Cbc0038I Pass   1: suminf.    0.75254 (2) obj. -22154.4 iterations 17
Cbc0038I Solution found of -19020
Cbc0038I Relaxing continuous gives -19020
Cbc0038I Rounding solution of -20547.4 is better than previous of -19020

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20724.9
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.75254 (2) obj. -22154.4 iterations 0
Cbc0038I Pass   3: suminf.    0.33077 (2) obj. -20724.9 iterations 3
Cbc0038I Pass   4: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass   5: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass   6: suminf.    0.81181 (4) obj. -20724.9 iterations 16
Cbc0038I Pass   7: suminf.    0.06396 (1) obj. -20724.9 iterations 14
Cbc0038I Pass   8: suminf.    0.28526 (2) obj. -21597.8 iterations 2
Cbc0038I Pass   9: suminf.    0.76454 (3) obj. -20724.9 iterations 9
Cbc0038I Pass  10: suminf.    0.37872 (2) obj. -21148.1 iterations 7
Cbc0038I Pass  11: suminf.    0.74527 (2) obj. -20724.9 iterations 6
Cbc0038I Pass  12: suminf.    0.53496 (9) obj. -20724.9 iterations 23
Cbc0038I Pass  13: suminf.    0.25195 (2) obj. -20724.9 iterations 15
Cbc0038I Pass  14: suminf.    0.80123 (2) obj. -20724.9 iterations 10
Cbc0038I Pass  15: suminf.    0.29803 (1) obj. -20724.9 iterations 10
Cbc0038I Pass  16: suminf.    0.43902 (1) obj. -21470.2 iterations 1
Cbc0038I Pass  17: suminf.    1.36265 (9) obj. -20724.9 iterations 14
Cbc0038I Pass  18: suminf.    0.56135 (7) obj. -20724.9 iterations 8
Cbc0038I Pass  19: suminf.    0.55311 (8) obj. -20724.9 iterations 4
Cbc0038I Pass  20: suminf.    0.89322 (3) obj. -20724.9 iterations 20
Cbc0038I Pass  21: suminf.    0.21495 (1) obj. -20724.9 iterations 5
Cbc0038I Pass  22: suminf.    0.24390 (1) obj. -20877.9 iterations 1
Cbc0038I Pass  23: suminf.    1.22539 (4) obj. -20724.9 iterations 11
Cbc0038I Pass  24: suminf.    0.30488 (3) obj. -20724.9 iterations 13
Cbc0038I Pass  25: suminf.    1.01857 (3) obj. -20724.9 iterations 10
Cbc0038I Pass  26: suminf.    0.71452 (2) obj. -20724.9 iterations 7
Cbc0038I Pass  27: suminf.    0.20069 (2) obj. -20724.9 iterations 9
Cbc0038I Pass  28: suminf.    0.74546 (2) obj. -20724.9 iterations 2
Cbc0038I Pass  29: suminf.    0.49960 (2) obj. -21556.7 iterations 2
Cbc0038I Pass  30: suminf.    0.79417 (3) obj. -20724.9 iterations 6
Cbc0038I Pass  31: suminf.    0.17966 (2) obj. -21154.5 iterations 3
Cbc0038I Rounding solution of -21529.5 is better than previous of -20547.4

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -21688
Cbc0038I Reduced cost fixing fixed 48 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.75254 (2) obj. -22154.4 iterations 0
Cbc0038I Pass  32: suminf.    0.56329 (2) obj. -21688 iterations 3
Cbc0038I Pass  33: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass  34: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass  35: suminf.    1.14353 (3) obj. -21688 iterations 12
Cbc0038I Pass  36: suminf.    0.51828 (3) obj. -21688 iterations 1
Cbc0038I Pass  37: suminf.    0.56329 (2) obj. -21688 iterations 7
Cbc0038I Pass  38: suminf.    0.56329 (2) obj. -21688 iterations 0
Cbc0038I Pass  39: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass  40: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass  41: suminf.    2.03075 (6) obj. -21688 iterations 12
Cbc0038I Pass  42: suminf.    0.75254 (2) obj. -22154.4 iterations 10
Cbc0038I Pass  43: suminf.    2.33058 (6) obj. -21688 iterations 12
Cbc0038I Pass  44: suminf.    2.15937 (6) obj. -21688 iterations 4
Cbc0038I Pass  45: suminf.    2.40523 (5) obj. -21812.4 iterations 7
Cbc0038I Pass  46: suminf.    0.57474 (7) obj. -21688 iterations 13
Cbc0038I Pass  47: suminf.    0.32365 (4) obj. -21877.7 iterations 18
Cbc0038I Pass  48: suminf.    0.02998 (1) obj. -21688 iterations 6
Cbc0038I Pass  49: suminf.    0.04878 (1) obj. -21787.3 iterations 1
Cbc0038I Pass  50: suminf.    0.25635 (4) obj. -21688 iterations 8
Cbc0038I Pass  51: suminf.    0.15111 (3) obj. -21688 iterations 7
Cbc0038I Pass  52: suminf.    0.23911 (3) obj. -21688 iterations 8
Cbc0038I Pass  53: suminf.    1.36327 (7) obj. -21688 iterations 14
Cbc0038I Pass  54: suminf.    1.01345 (8) obj. -21688 iterations 11
Cbc0038I Pass  55: suminf.    1.01345 (8) obj. -21688 iterations 4
Cbc0038I Pass  56: suminf.    0.32365 (4) obj. -21877.7 iterations 21
Cbc0038I Pass  57: suminf.    0.02998 (1) obj. -21688 iterations 11
Cbc0038I Pass  58: suminf.    1.00434 (4) obj. -21688 iterations 13
Cbc0038I Pass  59: suminf.    0.81094 (3) obj. -21688 iterations 7
Cbc0038I Pass  60: suminf.    0.09880 (2) obj. -21994.5 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -21529.5 - took 0.02 seconds
Cbc0012I Integer solution of -21529.496 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 150 rows 81 columns, reduced to 12 rows 9 columns
Cbc0031I 6 added rows had average density of 13.666667
Cbc0013I At root node, 6 cuts changed objective from -22321.898 to -21743.307 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -21529.496, took 200 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 20 times (119 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

