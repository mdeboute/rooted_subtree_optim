Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 97 (-6) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 3.37552e-05 - average 1.95117e-07, 29 fixed columns
Coin0506I Presolve 117 (-56) rows, 67 (-30) columns and 360 (-172) elements
Clp0014I Perturbing problem by 0.001% of 0.22881766 - largest nonzero change 0 ( 0%) - largest zero change 2.6478744e-05
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Coin0511I After Postsolve, objective 43.862117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20326133 - largest nonzero change 0 ( 0%) - largest zero change 2.8396997e-05
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Coin0511I After Postsolve, objective 43.862117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.86211748 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 97 columns (96 integer (96 of which binary)) and 534 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.925%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.45623
Cbc0038I Solution found of 3.54297
Cbc0038I Relaxing continuous gives -3.68334
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 78 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -3.68334 to -18.1544 (0.04 seconds)
Cbc0038I Round again with cutoff of -20.7252
Cbc0038I Pass   1: suminf.    2.72383 (41) obj. -20.7252 iterations 53
Cbc0038I Pass   2: suminf.    1.13427 (6) obj. -20.7252 iterations 34
Cbc0038I Pass   3: suminf.    0.89377 (5) obj. -20.7252 iterations 10
Cbc0038I Pass   4: suminf.    1.52530 (5) obj. -20.7252 iterations 15
Cbc0038I Pass   5: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass   6: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass   7: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass   8: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass   9: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  10: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  11: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  12: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  13: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  14: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  15: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  16: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  17: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  18: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  19: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  20: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  21: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  22: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  23: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  24: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  25: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  26: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  27: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  28: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  29: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  30: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 106 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -18.1544 to -19.2395 (0.09 seconds)
Cbc0038I Round again with cutoff of -25.3526
Cbc0038I Pass  30: suminf.    3.46343 (41) obj. -25.3526 iterations 0
Cbc0038I Pass  31: suminf.    4.65331 (15) obj. -25.3526 iterations 42
Cbc0038I Pass  32: suminf.    2.86133 (13) obj. -25.3526 iterations 15
Cbc0038I Pass  33: suminf.    2.86133 (13) obj. -25.3526 iterations 1
Cbc0038I Pass  34: suminf.    2.43352 (8) obj. -25.3526 iterations 23
Cbc0038I Pass  35: suminf.    2.43352 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  36: suminf.    2.50328 (8) obj. -25.3526 iterations 16
Cbc0038I Pass  37: suminf.    2.23300 (7) obj. -25.3526 iterations 3
Cbc0038I Pass  38: suminf.    2.21118 (8) obj. -25.3526 iterations 1
Cbc0038I Pass  39: suminf.    2.13112 (8) obj. -25.3526 iterations 12
Cbc0038I Pass  40: suminf.    2.04163 (7) obj. -25.3526 iterations 5
Cbc0038I Pass  41: suminf.    1.71273 (8) obj. -25.3526 iterations 7
Cbc0038I Pass  42: suminf.    1.52418 (7) obj. -25.3526 iterations 6
Cbc0038I Pass  43: suminf.    3.32071 (12) obj. -25.3526 iterations 17
Cbc0038I Pass  44: suminf.    1.18612 (7) obj. -25.3526 iterations 18
Cbc0038I Pass  45: suminf.    2.71924 (8) obj. -25.3526 iterations 16
Cbc0038I Pass  46: suminf.    2.46512 (8) obj. -25.3526 iterations 4
Cbc0038I Pass  47: suminf.    2.46512 (8) obj. -25.3526 iterations 1
Cbc0038I Pass  48: suminf.    2.36694 (8) obj. -25.3526 iterations 8
Cbc0038I Pass  49: suminf.    2.12903 (11) obj. -25.3526 iterations 12
Cbc0038I Pass  50: suminf.    4.51616 (11) obj. -25.3526 iterations 16
Cbc0038I Pass  51: suminf.    2.92503 (8) obj. -25.3526 iterations 5
Cbc0038I Pass  52: suminf.    2.58578 (10) obj. -25.3526 iterations 10
Cbc0038I Pass  53: suminf.    2.39932 (11) obj. -25.3526 iterations 9
Cbc0038I Pass  54: suminf.    4.27223 (11) obj. -25.3526 iterations 17
Cbc0038I Pass  55: suminf.    3.27567 (8) obj. -25.3526 iterations 7
Cbc0038I Pass  56: suminf.    3.27567 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  57: suminf.    2.97548 (8) obj. -25.3526 iterations 15
Cbc0038I Pass  58: suminf.    2.97548 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  59: suminf.    2.97330 (8) obj. -25.3526 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 111 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -19.2395 - took 0.12 seconds
Cbc0012I Integer solution of -19.23949 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 173 rows 97 columns, reduced to 79 rows 46 columns
Cbc0031I 18 added rows had average density of 70.777778
Cbc0013I At root node, 18 cuts changed objective from -43.862117 to -37.10814 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11644 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1791 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 82.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.23949 best solution, best possible -37.10814 (1.18 seconds)
Cbc0012I Integer solution of -19.49417 found by rounding after 8558 iterations and 39 nodes (1.46 seconds)
Cbc0038I Full problem 173 rows 97 columns, reduced to 2 rows 3 columns
Cbc0038I Full problem 173 rows 97 columns, reduced to 25 rows 17 columns
Cbc0001I Search completed - best objective -19.49417, took 10581 iterations and 108 nodes (1.66 seconds)
Cbc0032I Strong branching done 956 times (18625 iterations), fathomed 12 nodes and fixed 21 variables
Cbc0035I Maximum depth 33, 343 variables fixed on reduced cost
Total time (CPU seconds):       1.57   (Wallclock seconds):       1.67

