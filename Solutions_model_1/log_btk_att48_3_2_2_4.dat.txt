Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-16) rows, 45 (-5) columns and 249 (-36) elements
Clp1000I sum of infeasibilities 1.35813e-06 - average 1.6363e-08, 10 fixed columns
Coin0506I Presolve 57 (-26) rows, 34 (-11) columns and 175 (-74) elements
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Coin0511I After Postsolve, objective 2245.2588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 25.057703 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Clp0000I Optimal - objective value 2245.2588
Coin0511I After Postsolve, objective 2245.2588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2245.258751 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 45 columns (44 integer (44 of which binary)) and 249 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.978%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 10.138
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 542.558 iterations 31
Cbc0038I Solution found of 542.558
Cbc0038I Relaxing continuous gives 542.558
Cbc0038I Rounding solution of 194.217 is better than previous of 542.558

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 45 columns, reduced to 51 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 194.217 to -306.035 (0.03 seconds)
Cbc0038I Round again with cutoff of -499.957
Cbc0038I Pass   2: suminf.    2.02003 (7) obj. -499.957 iterations 8
Cbc0038I Pass   3: suminf.    1.96827 (8) obj. -499.957 iterations 6
Cbc0038I Pass   4: suminf.    1.57789 (9) obj. -499.957 iterations 2
Cbc0038I Pass   5: suminf.    1.61649 (6) obj. -499.957 iterations 10
Cbc0038I Pass   6: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass   7: suminf.    2.57228 (8) obj. -499.957 iterations 8
Cbc0038I Pass   8: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass   9: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  10: suminf.    0.66256 (5) obj. -499.957 iterations 3
Cbc0038I Pass  11: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  12: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  13: suminf.    1.20642 (6) obj. -499.957 iterations 6
Cbc0038I Pass  14: suminf.    2.57228 (8) obj. -499.957 iterations 6
Cbc0038I Pass  15: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  16: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  17: suminf.    0.66256 (5) obj. -499.957 iterations 1
Cbc0038I Pass  18: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  19: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  20: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass  21: suminf.    2.57228 (8) obj. -499.957 iterations 6
Cbc0038I Pass  22: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  23: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  24: suminf.    0.66256 (5) obj. -499.957 iterations 1
Cbc0038I Pass  25: suminf.    2.42847 (7) obj. -499.957 iterations 7
Cbc0038I Pass  26: suminf.    1.61649 (6) obj. -499.957 iterations 6
Cbc0038I Pass  27: suminf.    1.20642 (6) obj. -499.957 iterations 4
Cbc0038I Pass  28: suminf.    2.57228 (8) obj. -499.957 iterations 8
Cbc0038I Pass  29: suminf.    1.62776 (7) obj. -499.957 iterations 5
Cbc0038I Pass  30: suminf.    0.76533 (5) obj. -499.957 iterations 2
Cbc0038I Pass  31: suminf.    0.66256 (5) obj. -499.957 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 45 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -306.035 - took 0.04 seconds
Cbc0012I Integer solution of -306.0348 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 83 rows 45 columns, reduced to 51 rows 31 columns
Cbc0031I 21 added rows had average density of 31.761905
Cbc0013I At root node, 21 cuts changed objective from -2245.2588 to -1206.4414 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5687 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1299 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 182 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -306.0348000000004, took 4918 iterations and 12 nodes (0.52 seconds)
Cbc0032I Strong branching done 230 times (3858 iterations), fathomed 0 nodes and fixed 16 variables
Cbc0035I Maximum depth 4, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.53

