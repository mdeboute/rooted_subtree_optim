Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.39366e-05 - average 3.18381e-07, 13 fixed columns
Coin0506I Presolve 112 (-26) rows, 63 (-13) columns and 342 (-78) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.413896 - largest nonzero change 0 ( 0%) - largest zero change 1.9165446e-05
Clp0000I Optimal - objective value 37.298643
Clp0000I Optimal - objective value 37.298643
Coin0511I After Postsolve, objective 37.298643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.298643
Clp0000I Optimal - objective value 37.298643
Clp0000I Optimal - objective value 37.298643
Coin0511I After Postsolve, objective 37.298643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.29864338 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.10551
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.33955 iterations 54
Cbc0038I Solution found of 5.33955
Cbc0038I Relaxing continuous gives 5.33955
Cbc0038I Rounding solution of 2.4186 is better than previous of 5.33955

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 2.4186 to -3.58803 (0.04 seconds)
Cbc0038I Round again with cutoff of -6.95918
Cbc0038I Pass   2: suminf.    1.57756 (8) obj. -6.95918 iterations 10
Cbc0038I Pass   3: suminf.    0.61864 (3) obj. -6.95918 iterations 8
Cbc0038I Pass   4: suminf.    1.13493 (5) obj. -6.95918 iterations 4
Cbc0038I Pass   5: suminf.    1.72263 (4) obj. -6.95918 iterations 3
Cbc0038I Pass   6: suminf.    1.62032 (4) obj. -6.95918 iterations 2
Cbc0038I Pass   7: suminf.    1.68745 (5) obj. -6.95918 iterations 4
Cbc0038I Pass   8: suminf.    1.61637 (5) obj. -6.95918 iterations 1
Cbc0038I Pass   9: suminf.    2.20712 (5) obj. -6.95918 iterations 3
Cbc0038I Pass  10: suminf.    1.18587 (4) obj. -6.95918 iterations 5
Cbc0038I Pass  11: suminf.    1.03871 (7) obj. -6.95918 iterations 2
Cbc0038I Pass  12: suminf.    0.61864 (3) obj. -6.95918 iterations 7
Cbc0038I Pass  13: suminf.    1.13493 (5) obj. -6.95918 iterations 4
Cbc0038I Pass  14: suminf.    1.72263 (4) obj. -6.95918 iterations 3
Cbc0038I Pass  15: suminf.    1.62032 (4) obj. -6.95918 iterations 2
Cbc0038I Pass  16: suminf.    1.68745 (5) obj. -6.95918 iterations 4
Cbc0038I Pass  17: suminf.    1.61637 (5) obj. -6.95918 iterations 1
Cbc0038I Pass  18: suminf.    2.20712 (5) obj. -6.95918 iterations 3
Cbc0038I Pass  19: suminf.    1.18587 (4) obj. -6.95918 iterations 5
Cbc0038I Pass  20: suminf.    1.03871 (7) obj. -6.95918 iterations 2
Cbc0038I Pass  21: suminf.    0.61864 (3) obj. -6.95918 iterations 7
Cbc0038I Pass  22: suminf.    1.13493 (5) obj. -6.95918 iterations 4
Cbc0038I Pass  23: suminf.    1.72263 (4) obj. -6.95918 iterations 3
Cbc0038I Pass  24: suminf.    1.62032 (4) obj. -6.95918 iterations 2
Cbc0038I Pass  25: suminf.    1.68745 (5) obj. -6.95918 iterations 4
Cbc0038I Pass  26: suminf.    1.61637 (5) obj. -6.95918 iterations 1
Cbc0038I Pass  27: suminf.    2.20712 (5) obj. -6.95918 iterations 3
Cbc0038I Pass  28: suminf.    1.18587 (4) obj. -6.95918 iterations 5
Cbc0038I Pass  29: suminf.    1.03871 (7) obj. -6.95918 iterations 2
Cbc0038I Pass  30: suminf.    0.61864 (3) obj. -6.95918 iterations 7
Cbc0038I Pass  31: suminf.    1.13493 (5) obj. -6.95918 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -3.58803 - took 0.07 seconds
Cbc0012I Integer solution of -3.58803 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 73 rows 41 columns
Cbc0031I 27 added rows had average density of 51.888889
Cbc0013I At root node, 27 cuts changed objective from -37.298643 to -29.038843 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14068 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2473 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 195 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3.58803 best solution, best possible -29.038843 (1.06 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 55 rows 35 columns
Cbc0012I Integer solution of -4.14911 found by rounding after 10937 iterations and 63 nodes (1.41 seconds)
Cbc0001I Search completed - best objective -4.14911, took 11000 iterations and 68 nodes (1.41 seconds)
Cbc0032I Strong branching done 814 times (16382 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 27, 140 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.43

