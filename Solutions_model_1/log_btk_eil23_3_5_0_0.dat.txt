Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-12) rows, 21 (-4) columns and 109 (-26) elements
Clp1000I sum of infeasibilities 2.76166e-06 - average 7.46395e-08, 16 fixed columns
Coin0506I Presolve 2 (-35) rows, 2 (-19) columns and 4 (-105) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 4837.577
Clp0000I Optimal - objective value 4837.577
Coin0511I After Postsolve, objective 4837.577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.0957446 - largest nonzero change 2.5215374e-05 ( 0.0025215374%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 4837.577
Clp0000I Optimal - objective value 4837.577
Clp0000I Optimal - objective value 4837.577
Coin0511I After Postsolve, objective 4837.577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4837.576962 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 21 columns (20 integer (20 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.88325
Cbc0038I Pass   1: suminf.    0.23688 (1) obj. -4608.88 iterations 7
Cbc0038I Solution found of -2475.59
Cbc0038I Relaxing continuous gives -2475.59
Cbc0038I Rounding solution of -2667.94 is better than previous of -2475.59

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2873.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.23688 (1) obj. -4608.88 iterations 0
Cbc0038I Pass   3: suminf.    0.14230 (1) obj. -2873.4 iterations 1
Cbc0038I Pass   4: suminf.    0.24293 (2) obj. -2873.4 iterations 4
Cbc0038I Pass   5: suminf.    0.24293 (2) obj. -2873.4 iterations 3
Cbc0038I Pass   6: suminf.    0.14774 (2) obj. -2873.4 iterations 6
Cbc0038I Pass   7: suminf.    0.14774 (2) obj. -2873.4 iterations 4
Cbc0038I Pass   8: suminf.    0.46914 (1) obj. -3916.98 iterations 2
Cbc0038I Pass   9: suminf.    0.09584 (1) obj. -2873.4 iterations 1
Cbc0038I Pass  10: suminf.    0.12880 (2) obj. -2873.4 iterations 3
Cbc0038I Pass  11: suminf.    0.12880 (2) obj. -2873.4 iterations 1
Cbc0038I Pass  12: suminf.    0.40841 (1) obj. -3773.04 iterations 2
Cbc0038I Pass  13: suminf.    0.08659 (1) obj. -2873.4 iterations 1
Cbc0038I Pass  14: suminf.    0.09034 (1) obj. -2873.4 iterations 3
Cbc0038I Pass  15: suminf.    0.25563 (1) obj. -3335.45 iterations 1
Cbc0038I Pass  16: suminf.    0.09034 (1) obj. -2873.4 iterations 1
Cbc0038I Pass  17: suminf.    0.14919 (1) obj. -2873.4 iterations 6
Cbc0038I Pass  18: suminf.    0.29801 (1) obj. -3289.43 iterations 1
Cbc0038I Pass  19: suminf.    0.14919 (1) obj. -2873.4 iterations 1
Cbc0038I Pass  20: suminf.    0.17134 (2) obj. -2873.4 iterations 4
Cbc0038I Pass  21: suminf.    0.24636 (1) obj. -3261.98 iterations 2
Cbc0038I Pass  22: suminf.    0.10735 (1) obj. -2873.4 iterations 1
Cbc0038I Pass  23: suminf.    0.09485 (1) obj. -2873.4 iterations 2
Cbc0038I Pass  24: suminf.    0.31258 (1) obj. -3482.06 iterations 1
Cbc0038I Pass  25: suminf.    0.09485 (1) obj. -2873.4 iterations 1
Cbc0038I Pass  26: suminf.    0.14573 (2) obj. -2873.4 iterations 2
Cbc0038I Pass  27: suminf.    0.34570 (1) obj. -3574.63 iterations 2
Cbc0038I Pass  28: suminf.    0.09485 (1) obj. -2873.4 iterations 1
Cbc0038I Pass  29: suminf.    0.08389 (1) obj. -2873.4 iterations 10
Cbc0038I Pass  30: suminf.    0.08389 (1) obj. -2873.4 iterations 4
Cbc0038I Pass  31: suminf.    0.23834 (1) obj. -3305.16 iterations 1
Cbc0038I Rounding solution of -2747.99 is better than previous of -2667.94

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -2747.99 to -2795.49 (0.01 seconds)
Cbc0038I Round again with cutoff of -3243.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.23688 (1) obj. -4608.88 iterations 0
Cbc0038I Pass  32: suminf.    0.27459 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  33: suminf.    0.27459 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  34: suminf.    0.27459 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  35: suminf.    0.44904 (2) obj. -3243.2 iterations 7
Cbc0038I Pass  36: suminf.    0.44904 (2) obj. -3243.2 iterations 4
Cbc0038I Pass  37: suminf.    0.26225 (1) obj. -3297.26 iterations 2
Cbc0038I Pass  38: suminf.    0.24291 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  39: suminf.    0.41442 (2) obj. -3243.2 iterations 7
Cbc0038I Pass  40: suminf.    0.41442 (2) obj. -3243.2 iterations 2
Cbc0038I Pass  41: suminf.    0.23576 (1) obj. -3270.46 iterations 2
Cbc0038I Pass  42: suminf.    0.22601 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  43: suminf.    0.76368 (4) obj. -3243.2 iterations 8
Cbc0038I Pass  44: suminf.    0.41882 (2) obj. -3243.2 iterations 4
Cbc0038I Pass  45: suminf.    0.44503 (1) obj. -3849.48 iterations 2
Cbc0038I Pass  46: suminf.    0.22816 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  47: suminf.    0.57338 (3) obj. -3243.2 iterations 4
Cbc0038I Pass  48: suminf.    0.21891 (1) obj. -3243.2 iterations 2
Cbc0038I Pass  49: suminf.    0.39140 (1) obj. -3725.39 iterations 1
Cbc0038I Pass  50: suminf.    0.49272 (1) obj. -3970.9 iterations 5
Cbc0038I Pass  51: suminf.    0.49272 (1) obj. -3970.9 iterations 1
Cbc0038I Pass  52: suminf.    0.24697 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  53: suminf.    0.21424 (1) obj. -3243.2 iterations 4
Cbc0038I Pass  54: suminf.    0.21424 (1) obj. -3243.2 iterations 1
Cbc0038I Pass  55: suminf.    0.28874 (1) obj. -3451.46 iterations 1
Cbc0038I Pass  56: suminf.    0.63538 (2) obj. -3243.2 iterations 2
Cbc0038I Pass  57: suminf.    0.28874 (1) obj. -3451.46 iterations 3
Cbc0038I Pass  58: suminf.    0.55207 (2) obj. -3243.2 iterations 7
Cbc0038I Pass  59: suminf.    0.55207 (2) obj. -3243.2 iterations 3
Cbc0038I Pass  60: suminf.    0.28693 (1) obj. -3496.8 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2795.49 - took 0.01 seconds
Cbc0012I Integer solution of -2795.49 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 21 columns, reduced to 4 rows 5 columns
Cbc0031I 11 added rows had average density of 9.3636364
Cbc0013I At root node, 11 cuts changed objective from -4722.4245 to -2799.3804 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 281 row cuts average 2.8 elements, 6 column cuts (6 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 503 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 114 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2795.49, took 943 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 14 times (69 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

