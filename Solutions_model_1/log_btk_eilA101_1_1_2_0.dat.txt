Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 6.26052e-05 - average 3.38407e-07, 16 fixed columns
Coin0506I Presolve 156 (-29) rows, 85 (-16) columns and 474 (-90) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 0.25634332 - largest nonzero change 0 ( 0%) - largest zero change 2.2040389e-05
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Coin0511I After Postsolve, objective 38.421599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Coin0511I After Postsolve, objective 38.421599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.42159898 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 15.2915
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.5914 iterations 94
Cbc0038I Solution found of 13.5914
Cbc0038I Relaxing continuous gives 13.5914
Cbc0038I Rounding solution of -0.607685 is better than previous of 13.5914

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -0.607685 to -10.3604 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.1666
Cbc0038I Pass   2: suminf.    4.59861 (16) obj. -13.1666 iterations 22
Cbc0038I Pass   3: suminf.    2.86705 (11) obj. -13.1666 iterations 23
Cbc0038I Pass   4: suminf.    2.60955 (11) obj. -13.1666 iterations 9
Cbc0038I Pass   5: suminf.    2.06378 (7) obj. -13.1666 iterations 22
Cbc0038I Pass   6: suminf.    2.05619 (7) obj. -13.1666 iterations 1
Cbc0038I Pass   7: suminf.    2.05619 (7) obj. -13.1666 iterations 0
Cbc0038I Pass   8: suminf.    2.47305 (7) obj. -13.1666 iterations 6
Cbc0038I Pass   9: suminf.    1.63561 (5) obj. -13.1666 iterations 4
Cbc0038I Pass  10: suminf.    1.62828 (6) obj. -13.1666 iterations 1
Cbc0038I Pass  11: suminf.    3.15969 (9) obj. -13.1666 iterations 12
Cbc0038I Pass  12: suminf.    2.02313 (10) obj. -13.1666 iterations 14
Cbc0038I Pass  13: suminf.    1.83798 (8) obj. -13.1666 iterations 10
Cbc0038I Pass  14: suminf.    3.38801 (10) obj. -13.1666 iterations 8
Cbc0038I Pass  15: suminf.    2.15212 (11) obj. -13.1666 iterations 12
Cbc0038I Pass  16: suminf.    6.38210 (17) obj. -13.1666 iterations 26
Cbc0038I Pass  17: suminf.    2.51859 (10) obj. -13.1666 iterations 16
Cbc0038I Pass  18: suminf.    1.14044 (7) obj. -13.1666 iterations 14
Cbc0038I Pass  19: suminf.    1.95885 (5) obj. -13.1666 iterations 9
Cbc0038I Pass  20: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  21: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  22: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  23: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  24: suminf.    1.95885 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  25: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  26: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  27: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  28: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  29: suminf.    1.95885 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  30: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  31: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Rounding solution of -11.0074 is better than previous of -10.3604

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 116 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -18.2176
Cbc0038I Pass  31: suminf.    5.66056 (17) obj. -18.2176 iterations 6
Cbc0038I Pass  32: suminf.    5.11295 (15) obj. -18.2176 iterations 8
Cbc0038I Pass  33: suminf.    4.12612 (13) obj. -18.2176 iterations 17
Cbc0038I Pass  34: suminf.    3.65091 (11) obj. -18.2176 iterations 4
Cbc0038I Pass  35: suminf.    4.53273 (14) obj. -18.2176 iterations 17
Cbc0038I Pass  36: suminf.    4.53273 (14) obj. -18.2176 iterations 0
Cbc0038I Pass  37: suminf.    4.30963 (15) obj. -18.2176 iterations 20
Cbc0038I Pass  38: suminf.    3.67328 (12) obj. -18.2176 iterations 9
Cbc0038I Pass  39: suminf.    4.79984 (13) obj. -18.2176 iterations 15
Cbc0038I Pass  40: suminf.    4.79984 (13) obj. -18.2176 iterations 0
Cbc0038I Pass  41: suminf.    2.34517 (10) obj. -18.2176 iterations 14
Cbc0038I Pass  42: suminf.    2.34517 (10) obj. -18.2176 iterations 0
Cbc0038I Pass  43: suminf.    3.05326 (9) obj. -18.2176 iterations 15
Cbc0038I Pass  44: suminf.    2.17699 (9) obj. -18.2176 iterations 12
Cbc0038I Pass  45: suminf.    2.17699 (9) obj. -18.2176 iterations 0
Cbc0038I Pass  46: suminf.    2.99402 (8) obj. -18.2176 iterations 14
Cbc0038I Pass  47: suminf.    2.34352 (9) obj. -18.2176 iterations 7
Cbc0038I Pass  48: suminf.    3.10081 (11) obj. -18.2176 iterations 12
Cbc0038I Pass  49: suminf.    2.71911 (9) obj. -18.2176 iterations 3
Cbc0038I Pass  50: suminf.    4.00863 (11) obj. -18.2176 iterations 14
Cbc0038I Pass  51: suminf.    4.00863 (11) obj. -18.2176 iterations 0
Cbc0038I Pass  52: suminf.    2.34517 (10) obj. -18.2176 iterations 23
Cbc0038I Pass  53: suminf.    3.05326 (9) obj. -18.2176 iterations 17
Cbc0038I Pass  54: suminf.    2.17699 (9) obj. -18.2176 iterations 12
Cbc0038I Pass  55: suminf.    2.17699 (9) obj. -18.2176 iterations 0
Cbc0038I Pass  56: suminf.    2.99402 (8) obj. -18.2176 iterations 14
Cbc0038I Pass  57: suminf.    2.34352 (9) obj. -18.2176 iterations 7
Cbc0038I Pass  58: suminf.    3.10081 (11) obj. -18.2176 iterations 14
Cbc0038I Pass  59: suminf.    2.71911 (9) obj. -18.2176 iterations 4
Cbc0038I Pass  60: suminf.    4.00863 (11) obj. -18.2176 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 108 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -11.0074 - took 0.20 seconds
Cbc0012I Integer solution of -11.007375 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -11.848654 found by RINS after 0 iterations and 0 nodes (0.30 seconds)
Cbc0031I 37 added rows had average density of 66.756757
Cbc0013I At root node, 37 cuts changed objective from -38.421599 to -30.6337 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20380 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2566 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.848654 best solution, best possible -30.6337 (1.84 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 37 rows 29 columns
Cbc0038I Full problem 185 rows 101 columns, reduced to 10 rows 10 columns
Cbc0004I Integer solution of -11.999125 found after 14609 iterations and 106 nodes (2.47 seconds)
Cbc0010I After 134 nodes, 10 on tree, -11.999125 best solution, best possible -30.6337 (2.55 seconds)
Cbc0001I Search completed - best objective -11.99912500000001, took 16612 iterations and 158 nodes (2.62 seconds)
Cbc0032I Strong branching done 1616 times (30934 iterations), fathomed 14 nodes and fixed 72 variables
Cbc0035I Maximum depth 45, 607 variables fixed on reduced cost
Total time (CPU seconds):       2.51   (Wallclock seconds):       2.64

