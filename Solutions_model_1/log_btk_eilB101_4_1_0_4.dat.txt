Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 158 (-47) rows, 87 (-16) columns and 483 (-120) elements
Clp1000I sum of infeasibilities 3.75618e-06 - average 2.37733e-08, 72 fixed columns
Coin0506I Presolve 25 (-133) rows, 14 (-73) columns and 72 (-411) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 0.57594099 - largest nonzero change 0 ( 0%) - largest zero change 1.3462588e-05
Clp0000I Optimal - objective value 20011.8
Clp0000I Optimal - objective value 20011.8
Coin0511I After Postsolve, objective 20011.8, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7393486 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 20011.8
Clp0000I Optimal - objective value 20011.8
Clp0000I Optimal - objective value 20011.8
Coin0511I After Postsolve, objective 20011.8, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20011.80018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 158 rows, 87 columns (86 integer (86 of which binary)) and 494 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.156%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.82497
Cbc0038I Pass   1: suminf.    1.04294 (3) obj. -17000.5 iterations 14
Cbc0038I Solution found of -11966.5
Cbc0038I Relaxing continuous gives -11966.5
Cbc0038I Rounding solution of -13887.1 is better than previous of -11966.5

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 87 columns, reduced to 25 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -13887.1 to -16617 (0.02 seconds)
Cbc0038I Round again with cutoff of -16956.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.04294 (3) obj. -17000.5 iterations 0
Cbc0038I Pass   3: suminf.    1.03001 (4) obj. -16956.5 iterations 9
Cbc0038I Pass   4: suminf.    1.04294 (3) obj. -17000.5 iterations 3
Cbc0038I Pass   5: suminf.    1.82841 (6) obj. -16956.5 iterations 17
Cbc0038I Pass   6: suminf.    0.57841 (7) obj. -16956.5 iterations 8
Cbc0038I Pass   7: suminf.    0.57841 (7) obj. -16956.5 iterations 0
Cbc0038I Pass   8: suminf.    1.61265 (10) obj. -16956.5 iterations 9
Cbc0038I Pass   9: suminf.    1.12576 (6) obj. -16956.5 iterations 3
Cbc0038I Pass  10: suminf.    0.85714 (2) obj. -17147.5 iterations 8
Cbc0038I Pass  11: suminf.    0.16289 (1) obj. -16956.5 iterations 5
Cbc0038I Pass  12: suminf.    0.11111 (1) obj. -17183.4 iterations 2
Cbc0038I Pass  13: suminf.    1.64436 (10) obj. -16956.5 iterations 18
Cbc0038I Pass  14: suminf.    1.02661 (3) obj. -16956.5 iterations 19
Cbc0038I Pass  15: suminf.    0.34188 (2) obj. -18294.8 iterations 9
Cbc0038I Solution found of -17088.9
Cbc0038I Relaxing continuous gives -17088.9
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 87 columns, reduced to 41 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -17088.9 to -18415.4 (0.03 seconds)
Cbc0038I Round again with cutoff of -18734.6
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  16: suminf.    2.23148 (6) obj. -18734.6 iterations 4
Cbc0038I Pass  17: suminf.    2.06363 (6) obj. -18734.6 iterations 2
Cbc0038I Pass  18: suminf.    1.74163 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  19: suminf.    1.53815 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  20: suminf.    1.90989 (6) obj. -18734.6 iterations 15
Cbc0038I Pass  21: suminf.    1.90989 (6) obj. -18734.6 iterations 0
Cbc0038I Pass  22: suminf.    2.23148 (6) obj. -18734.6 iterations 13
Cbc0038I Pass  23: suminf.    2.06363 (6) obj. -18734.6 iterations 2
Cbc0038I Pass  24: suminf.    1.74163 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  25: suminf.    1.53815 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  26: suminf.    1.90989 (6) obj. -18734.6 iterations 15
Cbc0038I Pass  27: suminf.    1.90989 (6) obj. -18734.6 iterations 0
Cbc0038I Pass  28: suminf.    2.23148 (6) obj. -18734.6 iterations 13
Cbc0038I Pass  29: suminf.    2.06363 (6) obj. -18734.6 iterations 2
Cbc0038I Pass  30: suminf.    1.74163 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  31: suminf.    1.53815 (5) obj. -18734.6 iterations 6
Cbc0038I Pass  32: suminf.    1.90989 (6) obj. -18734.6 iterations 14
Cbc0038I Pass  33: suminf.    1.90989 (6) obj. -18734.6 iterations 0
Cbc0038I Pass  34: suminf.    2.23148 (6) obj. -18734.6 iterations 13
Cbc0038I Pass  35: suminf.    2.06363 (6) obj. -18734.6 iterations 2
Cbc0038I Pass  36: suminf.    1.74163 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  37: suminf.    1.53815 (5) obj. -18734.6 iterations 6
Cbc0038I Pass  38: suminf.    1.90989 (6) obj. -18734.6 iterations 14
Cbc0038I Pass  39: suminf.    1.90989 (6) obj. -18734.6 iterations 0
Cbc0038I Pass  40: suminf.    2.23148 (6) obj. -18734.6 iterations 13
Cbc0038I Pass  41: suminf.    2.06363 (6) obj. -18734.6 iterations 2
Cbc0038I Pass  42: suminf.    1.74163 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  43: suminf.    1.53815 (5) obj. -18734.6 iterations 7
Cbc0038I Pass  44: suminf.    1.90989 (6) obj. -18734.6 iterations 15
Cbc0038I Pass  45: suminf.    1.90989 (6) obj. -18734.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 87 columns, reduced to 27 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -18415.4 - took 0.02 seconds
Cbc0012I Integer solution of -18415.358 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 158 rows 87 columns, reduced to 26 rows 15 columns
Cbc0012I Integer solution of -18739.259 found by DiveCoefficient after 62 iterations and 0 nodes (0.06 seconds)
Cbc0031I 9 added rows had average density of 27.888889
Cbc0013I At root node, 9 cuts changed objective from -20011.8 to -19312.045 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 3.1 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -18739.259, took 164 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 24 times (174 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 48 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

