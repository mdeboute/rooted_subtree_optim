Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 26 (-7) columns and 138 (-45) elements
Clp1000I sum of infeasibilities 6.61732e-06 - average 1.43855e-07, 17 fixed columns
Coin0506I Presolve 12 (-34) rows, 7 (-19) columns and 32 (-106) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 628.64256
Clp0000I Optimal - objective value 628.64256
Coin0511I After Postsolve, objective 628.64256, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 628.64256
Clp0000I Optimal - objective value 628.64256
Clp0000I Optimal - objective value 628.64256
Coin0511I After Postsolve, objective 628.64256, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 628.6425594 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 26 columns (25 integer (25 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.579%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.12073
Cbc0038I Pass   1: suminf.    0.86701 (2) obj. -487.745 iterations 7
Cbc0038I Solution found of -199.106
Cbc0038I Relaxing continuous gives -200.632
Cbc0038I Rounding solution of -253.947 is better than previous of -200.632

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -279.904
Cbc0038I Pass   2: suminf.    0.86701 (2) obj. -487.745 iterations 0
Cbc0038I Pass   3: suminf.    0.26048 (1) obj. -279.904 iterations 5
Cbc0038I Pass   4: suminf.    0.44715 (1) obj. -368.878 iterations 1
Cbc0038I Pass   5: suminf.    2.08185 (5) obj. -389.18 iterations 7
Cbc0038I Pass   6: suminf.    0.49261 (3) obj. -343.083 iterations 8
Cbc0038I Pass   7: suminf.    0.49261 (3) obj. -343.083 iterations 0
Cbc0038I Pass   8: suminf.    0.80710 (2) obj. -279.904 iterations 8
Cbc0038I Pass   9: suminf.    0.29268 (1) obj. -369.674 iterations 2
Cbc0038I Solution found of -280.602
Cbc0038I Relaxing continuous gives -280.602
Cbc0038I Rounding solution of -293.604 is better than previous of -280.602

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 18 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -293.604 to -370.344 (0.01 seconds)
Cbc0038I Round again with cutoff of -398.979
Cbc0038I Pass  10: suminf.    0.86701 (2) obj. -487.745 iterations 0
Cbc0038I Pass  11: suminf.    0.61510 (2) obj. -398.979 iterations 4
Cbc0038I Pass  12: suminf.    0.61510 (2) obj. -398.979 iterations 0
Cbc0038I Pass  13: suminf.    0.56383 (2) obj. -398.979 iterations 2
Cbc0038I Pass  14: suminf.    1.21555 (3) obj. -398.979 iterations 5
Cbc0038I Pass  15: suminf.    0.72399 (3) obj. -398.979 iterations 4
Cbc0038I Pass  16: suminf.    0.72399 (3) obj. -398.979 iterations 0
Cbc0038I Pass  17: suminf.    0.86701 (2) obj. -487.745 iterations 2
Cbc0038I Pass  18: suminf.    0.61510 (2) obj. -398.979 iterations 4
Cbc0038I Pass  19: suminf.    0.61510 (2) obj. -398.979 iterations 0
Cbc0038I Pass  20: suminf.    0.56383 (2) obj. -398.979 iterations 2
Cbc0038I Pass  21: suminf.    0.17914 (3) obj. -398.979 iterations 5
Cbc0038I Pass  22: suminf.    0.12974 (1) obj. -398.979 iterations 4
Cbc0038I Pass  23: suminf.    0.21951 (1) obj. -426.298 iterations 1
Cbc0038I Pass  24: suminf.    0.43636 (3) obj. -422.975 iterations 10
Cbc0038I Solution found of -404.068
Cbc0038I Relaxing continuous gives -404.068
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -436.903
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  25: suminf.    0.86701 (2) obj. -487.745 iterations 0
Cbc0038I Pass  26: suminf.    0.82670 (2) obj. -436.903 iterations 4
Cbc0038I Pass  27: suminf.    0.82670 (2) obj. -436.903 iterations 0
Cbc0038I Pass  28: suminf.    0.69938 (2) obj. -436.903 iterations 2
Cbc0038I Pass  29: suminf.    0.95019 (4) obj. -436.903 iterations 4
Cbc0038I Pass  30: suminf.    0.95019 (4) obj. -436.903 iterations 1
Cbc0038I Pass  31: suminf.    0.89761 (3) obj. -436.903 iterations 8
Cbc0038I Pass  32: suminf.    0.34145 (2) obj. -436.903 iterations 3
Cbc0038I Pass  33: suminf.    0.87279 (2) obj. -436.903 iterations 3
Cbc0038I Pass  34: suminf.    0.87279 (2) obj. -436.903 iterations 1
Cbc0038I Pass  35: suminf.    0.95145 (4) obj. -436.903 iterations 7
Cbc0038I Pass  36: suminf.    0.95145 (4) obj. -436.903 iterations 1
Cbc0038I Pass  37: suminf.    0.57419 (4) obj. -436.903 iterations 1
Cbc0038I Pass  38: suminf.    0.57419 (4) obj. -436.903 iterations 0
Cbc0038I Pass  39: suminf.    0.34145 (2) obj. -436.903 iterations 9
Cbc0038I Pass  40: suminf.    0.34145 (2) obj. -436.903 iterations 0
Cbc0038I Pass  41: suminf.    0.87279 (2) obj. -436.903 iterations 3
Cbc0038I Pass  42: suminf.    0.71279 (3) obj. -436.903 iterations 12
Cbc0038I Pass  43: suminf.    0.35436 (4) obj. -436.903 iterations 6
Cbc0038I Pass  44: suminf.    1.02105 (5) obj. -436.903 iterations 5
Cbc0038I Pass  45: suminf.    0.71279 (3) obj. -436.903 iterations 2
Cbc0038I Pass  46: suminf.    2.10814 (6) obj. -436.903 iterations 15
Cbc0038I Pass  47: suminf.    2.10814 (6) obj. -436.903 iterations 2
Cbc0038I Pass  48: suminf.    1.56422 (6) obj. -436.903 iterations 6
Cbc0038I Pass  49: suminf.    0.45366 (2) obj. -450.892 iterations 5
Cbc0038I Pass  50: suminf.    0.23246 (2) obj. -436.903 iterations 3
Cbc0038I Pass  51: suminf.    0.50189 (2) obj. -436.903 iterations 3
Cbc0038I Pass  52: suminf.    0.74730 (3) obj. -436.903 iterations 3
Cbc0038I Pass  53: suminf.    0.23577 (1) obj. -439.193 iterations 3
Cbc0038I Pass  54: suminf.    0.24330 (1) obj. -436.903 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -404.068 - took 0.02 seconds
Cbc0012I Integer solution of -404.0681 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 6 added rows had average density of 17.166667
Cbc0013I At root node, 6 cuts changed objective from -513.5168 to -443.66475 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -404.0681, took 1078 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 38 times (270 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

