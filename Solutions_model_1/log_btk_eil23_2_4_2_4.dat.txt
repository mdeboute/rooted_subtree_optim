Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 9.03663e-06 - average 2.31708e-07, 0 fixed columns
Coin0506I Presolve 39 (0) rows, 22 (0) columns and 114 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Coin0511I After Postsolve, objective 116.92692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Clp0000I Optimal - objective value 116.92692
Coin0511I After Postsolve, objective 116.92692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.9269192 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.49873
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.57695 iterations 19
Cbc0038I Solution found of -2.57695
Cbc0038I Relaxing continuous gives -2.57695
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2.57695 to -31.0939 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.3778
Cbc0038I Pass   2: suminf.    0.40535 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   3: suminf.    0.33878 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   4: suminf.    0.51583 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   5: suminf.    0.30951 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   6: suminf.    0.52769 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   7: suminf.    0.28512 (1) obj. -39.3778 iterations 2
Cbc0038I Pass   8: suminf.    0.53435 (2) obj. -39.3778 iterations 2
Cbc0038I Pass   9: suminf.    0.38648 (2) obj. -39.3778 iterations 2
Cbc0038I Pass  10: suminf.    0.86632 (2) obj. -39.3778 iterations 1
Cbc0038I Pass  11: suminf.    0.45513 (2) obj. -39.3778 iterations 3
Cbc0038I Pass  12: suminf.    1.50640 (5) obj. -39.3778 iterations 12
Cbc0038I Pass  13: suminf.    1.17598 (4) obj. -39.3778 iterations 2
Cbc0038I Pass  14: suminf.    1.40781 (5) obj. -39.3778 iterations 6
Cbc0038I Pass  15: suminf.    1.40781 (5) obj. -39.3778 iterations 0
Cbc0038I Pass  16: suminf.    1.56555 (4) obj. -39.3778 iterations 6
Cbc0038I Pass  17: suminf.    1.56555 (4) obj. -39.3778 iterations 0
Cbc0038I Pass  18: suminf.    1.41242 (5) obj. -39.3778 iterations 9
Cbc0038I Pass  19: suminf.    1.42739 (4) obj. -39.3778 iterations 10
Cbc0038I Pass  20: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  21: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  22: suminf.    1.12511 (4) obj. -39.3778 iterations 4
Cbc0038I Pass  23: suminf.    1.11975 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  24: suminf.    1.42739 (4) obj. -39.3778 iterations 3
Cbc0038I Pass  25: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  26: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  27: suminf.    1.12511 (4) obj. -39.3778 iterations 4
Cbc0038I Pass  28: suminf.    1.11975 (3) obj. -39.3778 iterations 1
Cbc0038I Pass  29: suminf.    1.42739 (4) obj. -39.3778 iterations 3
Cbc0038I Pass  30: suminf.    1.00539 (4) obj. -39.3778 iterations 1
Cbc0038I Pass  31: suminf.    0.91780 (3) obj. -39.3778 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.0939 to -31.1849 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.2886
Cbc0038I Pass  31: suminf.    0.63974 (2) obj. -54.2886 iterations 0
Cbc0038I Pass  32: suminf.    0.43574 (3) obj. -54.2886 iterations 3
Cbc0038I Pass  33: suminf.    0.57192 (3) obj. -54.2886 iterations 7
Cbc0038I Pass  34: suminf.    0.56473 (2) obj. -54.2886 iterations 1
Cbc0038I Pass  35: suminf.    0.93753 (2) obj. -54.2886 iterations 1
Cbc0038I Pass  36: suminf.    0.81624 (3) obj. -54.2886 iterations 4
Cbc0038I Pass  37: suminf.    0.81619 (3) obj. -54.2886 iterations 3
Cbc0038I Pass  38: suminf.    0.81624 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  39: suminf.    2.05882 (6) obj. -54.2886 iterations 10
Cbc0038I Pass  40: suminf.    1.49413 (5) obj. -54.2886 iterations 1
Cbc0038I Pass  41: suminf.    1.41543 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  42: suminf.    1.41543 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  43: suminf.    1.22013 (3) obj. -54.2886 iterations 2
Cbc0038I Pass  44: suminf.    1.22013 (3) obj. -54.2886 iterations 0
Cbc0038I Pass  45: suminf.    1.36817 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  46: suminf.    1.14254 (3) obj. -54.2886 iterations 1
Cbc0038I Pass  47: suminf.    1.14193 (4) obj. -54.2886 iterations 5
Cbc0038I Pass  48: suminf.    0.73269 (3) obj. -54.2886 iterations 4
Cbc0038I Pass  49: suminf.    0.69155 (4) obj. -54.2886 iterations 1
Cbc0038I Pass  50: suminf.    1.27718 (4) obj. -54.2886 iterations 6
Cbc0038I Pass  51: suminf.    1.14193 (4) obj. -54.2886 iterations 2
Cbc0038I Pass  52: suminf.    1.55326 (7) obj. -54.2886 iterations 6
Cbc0038I Pass  53: suminf.    1.38369 (5) obj. -54.2886 iterations 1
Cbc0038I Pass  54: suminf.    1.54305 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  55: suminf.    1.54305 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  56: suminf.    1.36954 (4) obj. -54.2886 iterations 1
Cbc0038I Pass  57: suminf.    1.36954 (4) obj. -54.2886 iterations 0
Cbc0038I Pass  58: suminf.    1.54305 (4) obj. -54.2886 iterations 4
Cbc0038I Pass  59: suminf.    0.80246 (5) obj. -54.2886 iterations 14
Cbc0038I Pass  60: suminf.    0.74571 (5) obj. -54.2886 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.1849 - took 0.02 seconds
Cbc0012I Integer solution of -31.184919 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 18.444444
Cbc0013I At root node, 9 cuts changed objective from -113.93192 to -44.451226 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 799 row cuts average 4.9 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 438 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -31.193859 found by rounding after 1631 iterations and 1 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -31.19385879999999, took 2462 iterations and 24 nodes (0.22 seconds)
Cbc0032I Strong branching done 174 times (856 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

