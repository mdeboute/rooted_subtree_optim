Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 3.54907e-06 - average 6.82513e-08, 4 fixed columns
Coin0506I Presolve 44 (-8) rows, 24 (-4) columns and 129 (-24) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Coin0511I After Postsolve, objective 72.254322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Clp0000I Optimal - objective value 72.254322
Coin0511I After Postsolve, objective 72.254322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.25432208 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 159 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.018%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.79648
Cbc0038I Solution found of 5.86113
Cbc0038I Relaxing continuous gives 2.1464
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 2.1464 to -42.7889 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.3111
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.41691 (1) obj. -45.3111 iterations 20
Cbc0038I Pass   2: suminf.    0.41691 (1) obj. -45.3111 iterations 0
Cbc0038I Pass   3: suminf.    0.04065 (1) obj. -51.7755 iterations 4
Cbc0038I Pass   4: suminf.    0.18904 (1) obj. -45.3111 iterations 1
Cbc0038I Pass   5: suminf.    0.64616 (4) obj. -45.3111 iterations 11
Cbc0038I Pass   6: suminf.    0.35552 (4) obj. -45.3111 iterations 5
Cbc0038I Pass   7: suminf.    1.44809 (4) obj. -45.3111 iterations 5
Cbc0038I Pass   8: suminf.    1.21665 (4) obj. -45.3111 iterations 3
Cbc0038I Pass   9: suminf.    0.49061 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  10: suminf.    0.21667 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  11: suminf.    0.15396 (2) obj. -49.6668 iterations 1
Cbc0038I Pass  12: suminf.    0.49061 (2) obj. -45.3111 iterations 3
Cbc0038I Pass  13: suminf.    0.95004 (3) obj. -45.3111 iterations 7
Cbc0038I Pass  14: suminf.    0.26588 (1) obj. -45.3111 iterations 4
Cbc0038I Pass  15: suminf.    0.26829 (1) obj. -45.4163 iterations 1
Cbc0038I Pass  16: suminf.    1.69150 (5) obj. -45.3111 iterations 10
Cbc0038I Pass  17: suminf.    1.49358 (5) obj. -45.3111 iterations 4
Cbc0038I Pass  18: suminf.    0.83948 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  19: suminf.    0.53856 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  20: suminf.    0.43016 (2) obj. -45.3111 iterations 2
Cbc0038I Pass  21: suminf.    0.10906 (2) obj. -45.3111 iterations 1
Cbc0038I Pass  22: suminf.    0.62801 (3) obj. -45.3111 iterations 4
Cbc0038I Pass  23: suminf.    0.62801 (3) obj. -45.3111 iterations 0
Cbc0038I Pass  24: suminf.    0.66149 (2) obj. -45.3111 iterations 4
Cbc0038I Pass  25: suminf.    0.66149 (2) obj. -45.3111 iterations 0
Cbc0038I Pass  26: suminf.    0.45503 (2) obj. -45.3111 iterations 3
Cbc0038I Pass  27: suminf.    0.41119 (2) obj. -48.3565 iterations 1
Cbc0038I Pass  28: suminf.    0.25748 (3) obj. -45.3111 iterations 7
Cbc0038I Pass  29: suminf.    0.13632 (3) obj. -45.3111 iterations 3
Cbc0038I Pass  30: suminf.    0.70115 (3) obj. -45.3111 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -42.7889 to -44.0321 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.8509
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.40822 (2) obj. -49.8509 iterations 2
Cbc0038I Pass  31: suminf.    0.04065 (1) obj. -51.7755 iterations 2
Cbc0038I Pass  32: suminf.    0.08483 (1) obj. -49.8509 iterations 1
Cbc0038I Pass  33: suminf.    0.24661 (4) obj. -49.8509 iterations 5
Cbc0038I Pass  34: suminf.    0.18118 (5) obj. -49.8509 iterations 2
Cbc0038I Pass  35: suminf.    0.66338 (3) obj. -49.8509 iterations 6
Cbc0038I Pass  36: suminf.    0.66338 (3) obj. -49.8509 iterations 0
Cbc0038I Pass  37: suminf.    0.24874 (3) obj. -49.8509 iterations 5
Cbc0038I Pass  38: suminf.    0.17465 (2) obj. -49.8509 iterations 4
Cbc0038I Pass  39: suminf.    0.36348 (2) obj. -49.8509 iterations 4
Cbc0038I Pass  40: suminf.    0.36348 (2) obj. -49.8509 iterations 0
Cbc0038I Pass  41: suminf.    0.64711 (3) obj. -49.8509 iterations 3
Cbc0038I Pass  42: suminf.    0.54695 (2) obj. -49.8509 iterations 1
Cbc0038I Pass  43: suminf.    1.80057 (8) obj. -49.8509 iterations 17
Cbc0038I Pass  44: suminf.    1.02998 (4) obj. -49.8509 iterations 7
Cbc0038I Pass  45: suminf.    0.22082 (3) obj. -49.8509 iterations 11
Cbc0038I Pass  46: suminf.    0.13008 (1) obj. -49.9719 iterations 3
Cbc0038I Pass  47: suminf.    0.13286 (1) obj. -49.8509 iterations 1
Cbc0038I Pass  48: suminf.    3.08375 (8) obj. -49.8509 iterations 10
Cbc0038I Pass  49: suminf.    1.25639 (5) obj. -49.8509 iterations 4
Cbc0038I Pass  50: suminf.    0.61721 (3) obj. -49.8509 iterations 8
Cbc0038I Pass  51: suminf.    0.18118 (5) obj. -49.8509 iterations 2
Cbc0038I Pass  52: suminf.    0.66338 (3) obj. -49.8509 iterations 6
Cbc0038I Pass  53: suminf.    0.66338 (3) obj. -49.8509 iterations 0
Cbc0038I Pass  54: suminf.    0.24874 (3) obj. -49.8509 iterations 4
Cbc0038I Pass  55: suminf.    0.17465 (2) obj. -49.8509 iterations 2
Cbc0038I Pass  56: suminf.    0.36348 (2) obj. -49.8509 iterations 3
Cbc0038I Pass  57: suminf.    0.36348 (2) obj. -49.8509 iterations 0
Cbc0038I Pass  58: suminf.    0.64711 (3) obj. -49.8509 iterations 3
Cbc0038I Pass  59: suminf.    0.54695 (2) obj. -49.8509 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 42 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -44.0321 - took 0.06 seconds
Cbc0012I Integer solution of -44.03214 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 35 rows 20 columns
Cbc0031I 10 added rows had average density of 24.2
Cbc0013I At root node, 10 cuts changed objective from -68.009969 to -58.127529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 985 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 553 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0016I Integer solution of -45.07749 found by strong branching after 2136 iterations and 8 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -45.07749, took 2349 iterations and 14 nodes (0.27 seconds)
Cbc0032I Strong branching done 152 times (1249 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

