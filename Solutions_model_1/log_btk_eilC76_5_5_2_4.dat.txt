Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.72739e-05 - average 1.27014e-07, 11 fixed columns
Coin0506I Presolve 114 (-22) rows, 65 (-11) columns and 350 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Coin0511I After Postsolve, objective 39.564906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Clp0000I Optimal - objective value 39.564906
Coin0511I After Postsolve, objective 39.564906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.56490641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.3675
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.62642 iterations 51
Cbc0038I Solution found of 0.62642
Cbc0038I Relaxing continuous gives 0.62642
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 0.62642 to -2.36584 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.08584
Cbc0038I Pass   2: suminf.    0.74699 (3) obj. -6.08584 iterations 3
Cbc0038I Pass   3: suminf.    0.20766 (2) obj. -6.08584 iterations 1
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -6.08584 iterations 2
Cbc0038I Solution found of -6.08584
Cbc0038I Relaxing continuous gives -8.60778
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.60778 to -9.24784 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.3113
Cbc0038I Pass   5: suminf.    2.29117 (10) obj. -15.3113 iterations 15
Cbc0038I Pass   6: suminf.    1.61709 (6) obj. -15.3113 iterations 14
Cbc0038I Pass   7: suminf.    1.61709 (6) obj. -15.3113 iterations 0
Cbc0038I Pass   8: suminf.    2.79366 (8) obj. -15.3113 iterations 7
Cbc0038I Pass   9: suminf.    2.75896 (7) obj. -15.3113 iterations 1
Cbc0038I Pass  10: suminf.    1.78141 (6) obj. -15.3113 iterations 9
Cbc0038I Pass  11: suminf.    1.75187 (6) obj. -15.3113 iterations 2
Cbc0038I Pass  12: suminf.    2.24659 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  13: suminf.    1.65706 (7) obj. -15.3113 iterations 2
Cbc0038I Pass  14: suminf.    1.65706 (7) obj. -15.3113 iterations 0
Cbc0038I Pass  15: suminf.    2.92791 (8) obj. -15.3113 iterations 11
Cbc0038I Pass  16: suminf.    2.92791 (8) obj. -15.3113 iterations 0
Cbc0038I Pass  17: suminf.    1.89407 (6) obj. -15.3113 iterations 8
Cbc0038I Pass  18: suminf.    1.89407 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  19: suminf.    2.43899 (6) obj. -15.3113 iterations 6
Cbc0038I Pass  20: suminf.    2.43899 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  21: suminf.    2.65492 (7) obj. -15.3113 iterations 10
Cbc0038I Pass  22: suminf.    1.78141 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  23: suminf.    1.75187 (6) obj. -15.3113 iterations 2
Cbc0038I Pass  24: suminf.    2.24659 (6) obj. -15.3113 iterations 10
Cbc0038I Pass  25: suminf.    1.65706 (7) obj. -15.3113 iterations 2
Cbc0038I Pass  26: suminf.    1.65706 (7) obj. -15.3113 iterations 0
Cbc0038I Pass  27: suminf.    2.92791 (8) obj. -15.3113 iterations 11
Cbc0038I Pass  28: suminf.    2.92791 (8) obj. -15.3113 iterations 0
Cbc0038I Pass  29: suminf.    1.89407 (6) obj. -15.3113 iterations 8
Cbc0038I Pass  30: suminf.    1.89407 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  31: suminf.    2.43899 (6) obj. -15.3113 iterations 6
Cbc0038I Pass  32: suminf.    2.43899 (6) obj. -15.3113 iterations 0
Cbc0038I Pass  33: suminf.    2.65492 (7) obj. -15.3113 iterations 10
Cbc0038I Pass  34: suminf.    1.78141 (6) obj. -15.3113 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -9.24784 - took 0.12 seconds
Cbc0012I Integer solution of -9.247842 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 37 columns
Cbc0031I 23 added rows had average density of 44.695652
Cbc0013I At root node, 23 cuts changed objective from -39.564906 to -32.053435 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14891 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2090 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.247842 best solution, best possible -32.053435 (0.99 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 13 rows 15 columns
Cbc0012I Integer solution of -9.251392 found by RINS after 10333 iterations and 43 nodes (1.21 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 10 rows 13 columns
Cbc0012I Integer solution of -9.4167 found by rounding after 12013 iterations and 145 nodes (1.38 seconds)
Cbc0012I Integer solution of -9.492202 found by rounding after 12365 iterations and 177 nodes (1.42 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 26 rows 20 columns
Cbc0001I Search completed - best objective -9.492201999999992, took 13334 iterations and 208 nodes (1.48 seconds)
Cbc0032I Strong branching done 1438 times (18617 iterations), fathomed 27 nodes and fixed 66 variables
Cbc0035I Maximum depth 26, 593 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.49

