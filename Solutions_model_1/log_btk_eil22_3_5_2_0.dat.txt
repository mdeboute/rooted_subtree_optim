Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 0.000299606 - average 8.56017e-06, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 21 (-1) columns and 100 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 66.56213
Clp0000I Optimal - objective value 66.56213
Coin0511I After Postsolve, objective 66.56213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.56213
Clp0000I Optimal - objective value 66.56213
Clp0000I Optimal - objective value 66.56213
Coin0511I After Postsolve, objective 66.56213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.56213023 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.535%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.08104
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.085 iterations 18
Cbc0038I Solution found of 4.085
Cbc0038I Relaxing continuous gives 4.085
Cbc0038I Rounding solution of -1.07 is better than previous of 4.085

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -1.07 to -25.55 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.6557
Cbc0038I Pass   2: suminf.    1.50438 (6) obj. -29.6557 iterations 7
Cbc0038I Pass   3: suminf.    1.50438 (6) obj. -29.6557 iterations 0
Cbc0038I Pass   4: suminf.    0.67918 (2) obj. -29.6557 iterations 7
Cbc0038I Pass   5: suminf.    1.14730 (3) obj. -29.6557 iterations 2
Cbc0038I Pass   6: suminf.    0.52807 (3) obj. -29.6557 iterations 3
Cbc0038I Pass   7: suminf.    1.12321 (3) obj. -29.6557 iterations 8
Cbc0038I Pass   8: suminf.    0.27275 (2) obj. -29.6557 iterations 2
Cbc0038I Pass   9: suminf.    0.27275 (2) obj. -29.6557 iterations 0
Cbc0038I Pass  10: suminf.    0.86599 (3) obj. -29.6557 iterations 2
Cbc0038I Pass  11: suminf.    0.94679 (3) obj. -29.6557 iterations 4
Cbc0038I Pass  12: suminf.    1.18479 (3) obj. -29.6557 iterations 3
Cbc0038I Pass  13: suminf.    0.84338 (3) obj. -29.6557 iterations 3
Cbc0038I Pass  14: suminf.    1.23667 (5) obj. -29.6557 iterations 6
Cbc0038I Pass  15: suminf.    0.59702 (4) obj. -29.6557 iterations 1
Cbc0038I Pass  16: suminf.    0.57903 (4) obj. -29.6557 iterations 1
Cbc0038I Pass  17: suminf.    1.09190 (4) obj. -29.6557 iterations 9
Cbc0038I Pass  18: suminf.    1.23667 (5) obj. -29.6557 iterations 9
Cbc0038I Pass  19: suminf.    1.42189 (4) obj. -29.6557 iterations 14
Cbc0038I Pass  20: suminf.    1.13113 (4) obj. -29.6557 iterations 2
Cbc0038I Pass  21: suminf.    1.24134 (4) obj. -29.6557 iterations 7
Cbc0038I Pass  22: suminf.    1.06812 (4) obj. -29.6557 iterations 1
Cbc0038I Pass  23: suminf.    0.69185 (4) obj. -29.6557 iterations 1
Cbc0038I Pass  24: suminf.    0.69185 (4) obj. -29.6557 iterations 0
Cbc0038I Pass  25: suminf.    0.74275 (3) obj. -29.6557 iterations 3
Cbc0038I Pass  26: suminf.    0.66151 (3) obj. -29.6557 iterations 1
Cbc0038I Pass  27: suminf.    0.66151 (3) obj. -29.6557 iterations 0
Cbc0038I Pass  28: suminf.    0.56137 (2) obj. -29.6557 iterations 2
Cbc0038I Pass  29: suminf.    0.55742 (2) obj. -29.6557 iterations 1
Cbc0038I Pass  30: suminf.    1.21521 (4) obj. -29.6557 iterations 4
Cbc0038I Pass  31: suminf.    0.69185 (4) obj. -29.6557 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.55 - took 0.04 seconds
Cbc0012I Integer solution of -25.55 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 25 rows 17 columns
Cbc0031I 10 added rows had average density of 20.2
Cbc0013I At root node, 10 cuts changed objective from -66.56213 to -50.365589 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1687 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 753 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0004I Integer solution of -26.54 found after 2310 iterations and 2 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -26.54000000000001, took 3449 iterations and 22 nodes (0.25 seconds)
Cbc0032I Strong branching done 206 times (1464 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.25

