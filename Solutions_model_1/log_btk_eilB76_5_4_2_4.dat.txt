Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 68 (-10) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 3.21898e-05 - average 2.66031e-07, 9 fixed columns
Coin0506I Presolve 93 (-28) rows, 54 (-14) columns and 286 (-84) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 2.1334745 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Coin0511I After Postsolve, objective 49.405058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Clp0000I Optimal - objective value 49.405058
Coin0511I After Postsolve, objective 49.405058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.40505791 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 68 columns (67 integer (67 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.79983
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.1369 iterations 32
Cbc0038I Solution found of 12.1369
Cbc0038I Relaxing continuous gives 12.1369
Cbc0038I Rounding solution of 0.1194 is better than previous of 12.1369

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 0.1194 to -16.7361 (0.02 seconds)
Cbc0038I Round again with cutoff of -19.9533
Cbc0038I Pass   2: suminf.    1.28179 (5) obj. -19.9533 iterations 8
Cbc0038I Pass   3: suminf.    1.23857 (4) obj. -19.9533 iterations 1
Cbc0038I Pass   4: suminf.    1.16836 (4) obj. -19.9533 iterations 6
Cbc0038I Pass   5: suminf.    1.16836 (4) obj. -19.9533 iterations 4
Cbc0038I Pass   6: suminf.    0.68738 (2) obj. -19.9533 iterations 8
Cbc0038I Pass   7: suminf.    0.78251 (2) obj. -19.9533 iterations 4
Cbc0038I Pass   8: suminf.    1.20868 (4) obj. -19.9533 iterations 18
Cbc0038I Pass   9: suminf.    1.19504 (4) obj. -19.9533 iterations 8
Cbc0038I Pass  10: suminf.    0.79079 (3) obj. -19.9533 iterations 8
Cbc0038I Pass  11: suminf.    0.81454 (3) obj. -19.9533 iterations 12
Cbc0038I Pass  12: suminf.    0.72572 (3) obj. -19.9533 iterations 2
Cbc0038I Pass  13: suminf.    0.86409 (2) obj. -19.9533 iterations 2
Cbc0038I Pass  14: suminf.    0.59612 (2) obj. -19.9533 iterations 1
Cbc0038I Pass  15: suminf.    1.83817 (5) obj. -19.9533 iterations 16
Cbc0038I Pass  16: suminf.    0.75858 (3) obj. -19.9533 iterations 9
Cbc0038I Pass  17: suminf.    0.59612 (2) obj. -19.9533 iterations 5
Cbc0038I Pass  18: suminf.    2.08660 (10) obj. -19.9533 iterations 17
Cbc0038I Pass  19: suminf.    1.57442 (5) obj. -19.9533 iterations 9
Cbc0038I Pass  20: suminf.    0.79079 (3) obj. -19.9533 iterations 15
Cbc0038I Pass  21: suminf.    0.68738 (2) obj. -19.9533 iterations 1
Cbc0038I Pass  22: suminf.    0.89455 (3) obj. -19.9533 iterations 3
Cbc0038I Pass  23: suminf.    2.59023 (6) obj. -19.9533 iterations 5
Cbc0038I Pass  24: suminf.    1.67443 (5) obj. -19.9533 iterations 7
Cbc0038I Pass  25: suminf.    2.01871 (7) obj. -19.9533 iterations 21
Cbc0038I Pass  26: suminf.    1.64921 (5) obj. -19.9533 iterations 6
Cbc0038I Pass  27: suminf.    0.97212 (3) obj. -19.9533 iterations 5
Cbc0038I Pass  28: suminf.    0.72599 (3) obj. -19.9533 iterations 2
Cbc0038I Pass  29: suminf.    1.13093 (3) obj. -19.9533 iterations 3
Cbc0038I Pass  30: suminf.    1.20834 (6) obj. -19.9533 iterations 9
Cbc0038I Pass  31: suminf.    0.84885 (4) obj. -19.9533 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 56 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -16.7361 to -19.8623 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.7442
Cbc0038I Pass  31: suminf.    1.65979 (5) obj. -25.7442 iterations 0
Cbc0038I Pass  32: suminf.    1.25203 (4) obj. -25.7442 iterations 5
Cbc0038I Pass  33: suminf.    0.97023 (3) obj. -25.7442 iterations 4
Cbc0038I Pass  34: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  35: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  36: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  37: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  38: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  39: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  40: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  41: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  42: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  43: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  44: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  45: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  46: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  47: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  48: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  49: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  50: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  51: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  52: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  53: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  54: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I Pass  55: suminf.    0.88304 (4) obj. -25.7442 iterations 0
Cbc0038I Pass  56: suminf.    1.13922 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  57: suminf.    0.97023 (3) obj. -25.7442 iterations 1
Cbc0038I Pass  58: suminf.    0.97023 (3) obj. -25.7442 iterations 0
Cbc0038I Pass  59: suminf.    0.88128 (4) obj. -25.7442 iterations 4
Cbc0038I Pass  60: suminf.    0.88304 (4) obj. -25.7442 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -19.8623 - took 0.04 seconds
Cbc0012I Integer solution of -19.86233 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 117 rows 68 columns, reduced to 34 rows 22 columns
Cbc0031I 15 added rows had average density of 28.933333
Cbc0013I At root node, 15 cuts changed objective from -48.907381 to -38.128062 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3314 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1073 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0012I Integer solution of -19.90979 found by DiveCoefficient after 3500 iterations and 2 nodes (0.40 seconds)
Cbc0001I Search completed - best objective -19.90979, took 3916 iterations and 14 nodes (0.44 seconds)
Cbc0032I Strong branching done 244 times (3788 iterations), fathomed 1 nodes and fixed 14 variables
Cbc0035I Maximum depth 5, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.45

