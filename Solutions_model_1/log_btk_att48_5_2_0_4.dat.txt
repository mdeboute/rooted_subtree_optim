Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 63 (-36) rows, 35 (-15) columns and 158 (-127) elements
Clp0000I Optimal - objective value 6211.2323
Coin0511I After Postsolve, objective 6211.2323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6211.232337 - 34 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 63 rows, 35 columns (34 integer (34 of which binary)) and 158 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.495%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.86931
Cbc0038I Pass   1: suminf.    1.00000 (3) obj. -2081.63 iterations 20
Cbc0038I Solution found of -1614.7
Cbc0038I Relaxing continuous gives -1614.7
Cbc0038I Rounding solution of -1779.3 is better than previous of -1614.7

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 35 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1779.3 to -4808.85 (0.01 seconds)
Cbc0038I Round again with cutoff of -4949.15
Cbc0038I Pass   2: suminf.    4.10791 (13) obj. -4949.15 iterations 10
Cbc0038I Pass   3: suminf.    4.00000 (15) obj. -4949.15 iterations 3
Cbc0038I Pass   4: suminf.    6.97504 (20) obj. -4949.15 iterations 9
Cbc0038I Pass   5: suminf.    2.37137 (8) obj. -4949.15 iterations 7
Cbc0038I Pass   6: suminf.    0.81528 (5) obj. -4949.15 iterations 9
Cbc0038I Pass   7: suminf.    0.81475 (4) obj. -4949.15 iterations 2
Cbc0038I Pass   8: suminf.    0.78864 (4) obj. -4949.15 iterations 4
Cbc0038I Pass   9: suminf.    0.74392 (3) obj. -4949.15 iterations 2
Cbc0038I Pass  10: suminf.    0.72182 (4) obj. -4949.15 iterations 4
Cbc0038I Pass  11: suminf.    0.72182 (4) obj. -4949.15 iterations 0
Cbc0038I Pass  12: suminf.    0.78864 (4) obj. -4949.15 iterations 4
Cbc0038I Pass  13: suminf.    2.00000 (9) obj. -4949.15 iterations 8
Cbc0038I Pass  14: suminf.    1.80544 (7) obj. -4949.15 iterations 7
Cbc0038I Pass  15: suminf.    1.55857 (8) obj. -4949.15 iterations 3
Cbc0038I Pass  16: suminf.    0.81475 (4) obj. -4949.15 iterations 3
Cbc0038I Pass  17: suminf.    0.78864 (4) obj. -4949.15 iterations 4
Cbc0038I Pass  18: suminf.    0.74392 (3) obj. -4949.15 iterations 2
Cbc0038I Pass  19: suminf.    0.72182 (4) obj. -4949.15 iterations 4
Cbc0038I Pass  20: suminf.    0.72182 (4) obj. -4949.15 iterations 0
Cbc0038I Pass  21: suminf.    0.78864 (4) obj. -4949.15 iterations 4
Cbc0038I Pass  22: suminf.    1.20245 (13) obj. -4949.15 iterations 6
Cbc0038I Pass  23: suminf.    1.17076 (9) obj. -4949.15 iterations 3
Cbc0038I Pass  24: suminf.    2.59796 (8) obj. -4949.15 iterations 7
Cbc0038I Pass  25: suminf.    0.81528 (5) obj. -4949.15 iterations 10
Cbc0038I Pass  26: suminf.    0.81475 (4) obj. -4949.15 iterations 1
Cbc0038I Pass  27: suminf.    0.78864 (4) obj. -4949.15 iterations 4
Cbc0038I Pass  28: suminf.    0.74392 (3) obj. -4949.15 iterations 2
Cbc0038I Pass  29: suminf.    0.72182 (4) obj. -4949.15 iterations 4
Cbc0038I Pass  30: suminf.    0.72182 (4) obj. -4949.15 iterations 0
Cbc0038I Pass  31: suminf.    0.78864 (4) obj. -4949.15 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 35 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -4808.85 - took 0.02 seconds
Cbc0012I Integer solution of -4808.85 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 63 rows 35 columns, reduced to 29 rows 20 columns
Cbc0031I 6 added rows had average density of 18
Cbc0013I At root node, 6 cuts changed objective from -6211.2323 to -4918.9973 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 781 row cuts average 3.1 elements, 7 column cuts (7 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 474 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -4808.849999999999, took 1115 iterations and 2 nodes (0.12 seconds)
Cbc0032I Strong branching done 34 times (185 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

