Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-9) rows, 30 (-3) columns and 152 (-18) elements
Clp1000I sum of infeasibilities 0.000401253 - average 7.16523e-06, 10 fixed columns
Coin0506I Presolve 36 (-20) rows, 20 (-10) columns and 89 (-63) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Coin0511I After Postsolve, objective 11176.138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3879757 - largest nonzero change 0 ( 0%) - largest zero change 2.5061934e-05
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Coin0511I After Postsolve, objective 11176.138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11176.1378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.05346
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3793.96 iterations 19
Cbc0038I Solution found of -3793.96
Cbc0038I Relaxing continuous gives -3793.96
Cbc0038I Rounding solution of -3794.4 is better than previous of -3793.96

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -3794.4 to -6635.19 (0.04 seconds)
Cbc0038I Round again with cutoff of -7086.75
Cbc0038I Pass   2: suminf.    0.99441 (5) obj. -7086.75 iterations 5
Cbc0038I Pass   3: suminf.    0.99441 (5) obj. -7086.75 iterations 0
Cbc0038I Pass   4: suminf.    0.87450 (4) obj. -7086.75 iterations 13
Cbc0038I Pass   5: suminf.    0.79236 (3) obj. -7086.75 iterations 4
Cbc0038I Pass   6: suminf.    0.82646 (4) obj. -7086.75 iterations 7
Cbc0038I Pass   7: suminf.    1.11763 (5) obj. -7086.75 iterations 5
Cbc0038I Pass   8: suminf.    0.23020 (2) obj. -7086.75 iterations 4
Cbc0038I Pass   9: suminf.    0.99441 (5) obj. -7086.75 iterations 5
Cbc0038I Pass  10: suminf.    0.99441 (5) obj. -7086.75 iterations 0
Cbc0038I Pass  11: suminf.    0.87450 (4) obj. -7086.75 iterations 13
Cbc0038I Pass  12: suminf.    0.79236 (3) obj. -7086.75 iterations 4
Cbc0038I Pass  13: suminf.    0.82646 (4) obj. -7086.75 iterations 7
Cbc0038I Pass  14: suminf.    0.41396 (1) obj. -7086.75 iterations 12
Cbc0038I Pass  15: suminf.    0.06122 (1) obj. -7086.75 iterations 7
Cbc0038I Pass  16: suminf.    0.27175 (1) obj. -7086.75 iterations 1
Cbc0038I Pass  17: suminf.    2.54182 (8) obj. -7086.75 iterations 16
Cbc0038I Pass  18: suminf.    1.17198 (5) obj. -7086.75 iterations 8
Cbc0038I Pass  19: suminf.    1.17198 (5) obj. -7086.75 iterations 0
Cbc0038I Pass  20: suminf.    1.47369 (6) obj. -7086.75 iterations 9
Cbc0038I Pass  21: suminf.    0.45459 (2) obj. -7086.75 iterations 6
Cbc0038I Pass  22: suminf.    0.27175 (1) obj. -7086.75 iterations 3
Cbc0038I Pass  23: suminf.    0.06122 (1) obj. -7086.75 iterations 1
Cbc0038I Pass  24: suminf.    0.16667 (3) obj. -7086.75 iterations 3
Cbc0038I Pass  25: suminf.    0.06122 (1) obj. -7086.75 iterations 4
Cbc0038I Pass  26: suminf.    0.97638 (4) obj. -7086.75 iterations 3
Cbc0038I Pass  27: suminf.    0.36735 (1) obj. -7086.75 iterations 2
Cbc0038I Pass  28: suminf.    0.13626 (1) obj. -7086.75 iterations 2
Cbc0038I Pass  29: suminf.    0.27175 (1) obj. -7086.75 iterations 7
Cbc0038I Pass  30: suminf.    1.57394 (7) obj. -7086.75 iterations 9
Cbc0038I Pass  31: suminf.    1.19085 (5) obj. -7086.75 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -6635.19 to -6636.72 (0.08 seconds)
Cbc0038I Round again with cutoff of -7899.56
Cbc0038I Pass  31: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  32: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  33: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  34: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  35: suminf.    1.88178 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  36: suminf.    1.33335 (4) obj. -7899.56 iterations 6
Cbc0038I Pass  37: suminf.    2.41412 (10) obj. -7899.56 iterations 11
Cbc0038I Pass  38: suminf.    2.29266 (11) obj. -7899.56 iterations 4
Cbc0038I Pass  39: suminf.    1.31049 (4) obj. -7899.56 iterations 14
Cbc0038I Pass  40: suminf.    0.80584 (4) obj. -7899.56 iterations 2
Cbc0038I Pass  41: suminf.    1.40513 (5) obj. -7899.56 iterations 9
Cbc0038I Pass  42: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  43: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  44: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  45: suminf.    2.53029 (10) obj. -7899.56 iterations 9
Cbc0038I Pass  46: suminf.    1.80203 (6) obj. -7899.56 iterations 5
Cbc0038I Pass  47: suminf.    2.00703 (6) obj. -7899.56 iterations 5
Cbc0038I Pass  48: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I Pass  49: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  50: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  51: suminf.    2.05915 (10) obj. -7899.56 iterations 5
Cbc0038I Pass  52: suminf.    1.88669 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  53: suminf.    2.00703 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  54: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I Pass  55: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  56: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  57: suminf.    2.72434 (9) obj. -7899.56 iterations 9
Cbc0038I Pass  58: suminf.    2.07663 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  59: suminf.    1.77087 (5) obj. -7899.56 iterations 9
Cbc0038I Pass  60: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -6636.72 - took 0.06 seconds
Cbc0012I Integer solution of -6636.7202 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 39 rows 21 columns
Cbc0031I 10 added rows had average density of 19.2
Cbc0013I At root node, 10 cuts changed objective from -11150.808 to -8434.1641 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1008 row cuts average 4.3 elements, 2 column cuts (2 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 430 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0012I Integer solution of -6914.7502 found by rounding after 1376 iterations and 1 nodes (0.33 seconds)
Cbc0001I Search completed - best objective -6914.750211, took 1579 iterations and 8 nodes (0.35 seconds)
Cbc0032I Strong branching done 72 times (575 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.36

