Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 319 (-9) rows, 162 (-3) columns and 797 (-17) elements
Clp1000I sum of infeasibilities 1.16292e-05 - average 3.6455e-08, 16 fixed columns
Coin0506I Presolve 260 (-59) rows, 144 (-18) columns and 661 (-136) elements
Clp0029I End of values pass after 142 iterations
Clp0014I Perturbing problem by 0.001% of 1.1185269 - largest nonzero change 1.9624726e-05 ( 0.00098123631%) - largest zero change 2.9019187e-05
Clp0000I Optimal - objective value 3359.1478
Clp0000I Optimal - objective value 3359.1478
Coin0511I After Postsolve, objective 3359.1478, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 9.7487532 - largest nonzero change 4.9703552e-05 ( 0.0029283556%) - largest zero change 2.7506915e-05
Clp0000I Optimal - objective value 3359.1478
Clp0000I Optimal - objective value 3359.1478
Clp0000I Optimal - objective value 3359.1478
Coin0511I After Postsolve, objective 3359.1478, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3359.147815 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 319 rows, 162 columns (161 integer (161 of which binary)) and 797 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.604%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 122 integers unsatisfied sum - 41.0533
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 543.932 iterations 127
Cbc0038I Solution found of 543.932
Cbc0038I Relaxing continuous gives 543.932
Cbc0038I Rounding solution of 237.296 is better than previous of 543.932

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 319 rows 162 columns, reduced to 228 rows 123 columns - 8 fixed gives 172, 111 - still too large
Cbc0038I Full problem 319 rows 162 columns, reduced to 172 rows 111 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -122.349
Cbc0038I Pass   2: suminf.    1.05401 (9) obj. -122.349 iterations 10
Cbc0038I Pass   3: suminf.    0.62990 (6) obj. -122.349 iterations 5
Cbc0038I Pass   4: suminf.    2.33956 (14) obj. -122.349 iterations 23
Cbc0038I Pass   5: suminf.    1.83830 (14) obj. -122.349 iterations 9
Cbc0038I Pass   6: suminf.    2.86714 (14) obj. -122.349 iterations 40
Cbc0038I Pass   7: suminf.    2.86714 (14) obj. -122.349 iterations 1
Cbc0038I Pass   8: suminf.    3.69999 (14) obj. -122.349 iterations 20
Cbc0038I Pass   9: suminf.    3.18796 (16) obj. -122.349 iterations 11
Cbc0038I Pass  10: suminf.    3.17650 (15) obj. -122.349 iterations 1
Cbc0038I Pass  11: suminf.    4.08720 (14) obj. -122.349 iterations 39
Cbc0038I Pass  12: suminf.    3.98838 (18) obj. -122.349 iterations 3
Cbc0038I Pass  13: suminf.    3.97654 (18) obj. -122.349 iterations 2
Cbc0038I Pass  14: suminf.    4.89145 (21) obj. -122.349 iterations 23
Cbc0038I Pass  15: suminf.    3.98513 (15) obj. -122.349 iterations 21
Cbc0038I Pass  16: suminf.    3.79788 (18) obj. -122.349 iterations 5
Cbc0038I Pass  17: suminf.    4.53726 (18) obj. -122.349 iterations 30
Cbc0038I Pass  18: suminf.    3.71796 (18) obj. -122.349 iterations 16
Cbc0038I Pass  19: suminf.    3.67726 (23) obj. -122.349 iterations 16
Cbc0038I Pass  20: suminf.    7.47284 (37) obj. -122.349 iterations 29
Cbc0038I Pass  21: suminf.    6.29785 (36) obj. -122.349 iterations 22
Cbc0038I Pass  22: suminf.    4.85683 (20) obj. -122.349 iterations 37
Cbc0038I Pass  23: suminf.    4.23731 (19) obj. -122.349 iterations 10
Cbc0038I Pass  24: suminf.    4.16774 (19) obj. -122.349 iterations 2
Cbc0038I Pass  25: suminf.    4.22606 (20) obj. -122.349 iterations 15
Cbc0038I Pass  26: suminf.    3.72941 (24) obj. -122.349 iterations 13
Cbc0038I Pass  27: suminf.    4.60786 (20) obj. -122.349 iterations 20
Cbc0038I Pass  28: suminf.    3.80599 (39) obj. -122.349 iterations 13
Cbc0038I Pass  29: suminf.   10.44804 (39) obj. -122.349 iterations 41
Cbc0038I Pass  30: suminf.    9.02660 (34) obj. -122.349 iterations 6
Cbc0038I Pass  31: suminf.    5.72065 (37) obj. -122.349 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 319 rows 162 columns, reduced to 268 rows 138 columns - 15 fixed gives 180, 115 - still too large
Cbc0038I Full problem 319 rows 162 columns, reduced to 180 rows 115 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 237.296 - took 0.05 seconds
Cbc0012I Integer solution of 237.29561 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 319 rows 162 columns, reduced to 232 rows 129 columns - 32 fixed gives 156, 97 - still too large
Cbc0038I Full problem 319 rows 162 columns, reduced to 156 rows 97 columns - too large
Cbc0031I 54 added rows had average density of 71.907407
Cbc0013I At root node, 54 cuts changed objective from -3359.1478 to -1777.0908 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 40640 row cuts average 5.9 elements, 1 column cuts (1 active)  in 0.526 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3343 row cuts average 151.6 elements, 0 column cuts (0 active)  in 0.369 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 563 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.471 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 82.3 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 237.29561 best solution, best possible -1777.0908 (4.39 seconds)
Cbc0016I Integer solution of -289.7808 found by strong branching after 18403 iterations and 15 nodes (4.71 seconds)
Cbc0004I Integer solution of -356.54374 found after 18859 iterations and 22 nodes (4.77 seconds)
Cbc0010I After 50 nodes, 3 on tree, -356.54374 best solution, best possible -1768.5678 (5.14 seconds)
Cbc0001I Search completed - best objective -356.5437399999973, took 22697 iterations and 66 nodes (5.41 seconds)
Cbc0032I Strong branching done 1050 times (35432 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 21, 122 variables fixed on reduced cost
Total time (CPU seconds):       5.33   (Wallclock seconds):       5.46

