Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 3.92297e-06 - average 1.12085e-07, 2 fixed columns
Coin0506I Presolve 32 (-3) rows, 20 (-2) columns and 97 (-10) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Coin0511I After Postsolve, objective 54.033671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Clp0000I Optimal - objective value 54.033671
Coin0511I After Postsolve, objective 54.033671, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.03367101 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.39804
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -17.5009 iterations 18
Cbc0038I Solution found of -17.5009
Cbc0038I Relaxing continuous gives -17.5009
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -17.5009 to -21.7635 (0.01 seconds)
Cbc0038I Round again with cutoff of -24.898
Cbc0038I Pass   2: suminf.    0.42069 (2) obj. -24.898 iterations 2
Cbc0038I Pass   3: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass   4: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass   5: suminf.    0.51947 (3) obj. -24.898 iterations 4
Cbc0038I Pass   6: suminf.    0.24174 (1) obj. -24.898 iterations 2
Cbc0038I Pass   7: suminf.    0.13448 (1) obj. -24.898 iterations 2
Cbc0038I Pass   8: suminf.    0.42069 (2) obj. -24.898 iterations 3
Cbc0038I Pass   9: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass  10: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass  11: suminf.    0.75417 (2) obj. -24.898 iterations 5
Cbc0038I Pass  12: suminf.    0.75417 (2) obj. -24.898 iterations 1
Cbc0038I Pass  13: suminf.    0.56129 (3) obj. -24.898 iterations 6
Cbc0038I Pass  14: suminf.    0.51394 (3) obj. -24.898 iterations 2
Cbc0038I Pass  15: suminf.    0.42069 (2) obj. -24.898 iterations 4
Cbc0038I Pass  16: suminf.    0.68883 (2) obj. -24.898 iterations 2
Cbc0038I Pass  17: suminf.    0.21396 (1) obj. -24.898 iterations 2
Cbc0038I Pass  18: suminf.    0.21396 (1) obj. -24.898 iterations 0
Cbc0038I Pass  19: suminf.    2.59165 (8) obj. -24.898 iterations 8
Cbc0038I Pass  20: suminf.    1.49467 (5) obj. -24.898 iterations 3
Cbc0038I Pass  21: suminf.    1.49467 (5) obj. -24.898 iterations 0
Cbc0038I Pass  22: suminf.    1.43645 (4) obj. -24.898 iterations 8
Cbc0038I Pass  23: suminf.    1.43645 (4) obj. -24.898 iterations 0
Cbc0038I Pass  24: suminf.    0.76087 (3) obj. -24.898 iterations 3
Cbc0038I Pass  25: suminf.    0.70310 (3) obj. -24.898 iterations 3
Cbc0038I Pass  26: suminf.    0.77049 (4) obj. -24.898 iterations 4
Cbc0038I Pass  27: suminf.    0.72573 (4) obj. -24.898 iterations 2
Cbc0038I Pass  28: suminf.    1.10518 (4) obj. -24.898 iterations 9
Cbc0038I Pass  29: suminf.    0.39716 (2) obj. -24.898 iterations 5
Cbc0038I Pass  30: suminf.    0.39716 (2) obj. -24.898 iterations 1
Cbc0038I Pass  31: suminf.    0.42069 (2) obj. -24.898 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21.7635 - took 0.02 seconds
Cbc0012I Integer solution of -21.76346 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 14 columns
Cbc0031I 12 added rows had average density of 16.416667
Cbc0013I At root node, 12 cuts changed objective from -53.108308 to -35.749659 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1004 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 507 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -21.76345999999999, took 1891 iterations and 12 nodes (0.18 seconds)
Cbc0032I Strong branching done 104 times (975 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

