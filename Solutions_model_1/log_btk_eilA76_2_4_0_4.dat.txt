Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-37) rows, 68 (-10) columns and 365 (-88) elements
Clp1000I sum of infeasibilities 4.16607e-05 - average 3.53057e-07, 48 fixed columns
Coin0506I Presolve 9 (-109) rows, 10 (-58) columns and 32 (-333) elements
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.1597306 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 506.99342
Clp0000I Optimal - objective value 506.99342
Coin0511I After Postsolve, objective 506.99342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.150917 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 506.99342
Clp0000I Optimal - objective value 506.99342
Clp0000I Optimal - objective value 506.99342
Coin0511I After Postsolve, objective 506.99342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 506.9934158 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 365 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.245%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.71251
Cbc0038I Pass   1: suminf.    0.57292 (2) obj. -439.003 iterations 19
Cbc0038I Pass   2: suminf.    0.27027 (1) obj. -421.459 iterations 1
Cbc0038I Solution found of -309.089
Cbc0038I Relaxing continuous gives -309.089
Cbc0038I Rounding solution of -327.883 is better than previous of -309.089

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -327.883 to -463.077 (0.01 seconds)
Cbc0038I Round again with cutoff of -467.469
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.77151 (3) obj. -467.469 iterations 1
Cbc0038I Pass   4: suminf.    0.18919 (1) obj. -476.224 iterations 2
Cbc0038I Pass   5: suminf.    0.24605 (1) obj. -467.469 iterations 1
Cbc0038I Pass   6: suminf.    0.87758 (5) obj. -467.469 iterations 7
Cbc0038I Pass   7: suminf.    0.37798 (4) obj. -467.469 iterations 8
Cbc0038I Pass   8: suminf.    0.14522 (2) obj. -467.469 iterations 6
Cbc0038I Pass   9: suminf.    0.00496 (1) obj. -467.469 iterations 20
Cbc0038I Pass  10: suminf.    0.76356 (3) obj. -467.469 iterations 9
Cbc0038I Pass  11: suminf.    0.21762 (1) obj. -467.469 iterations 9
Cbc0038I Pass  12: suminf.    0.11846 (2) obj. -467.469 iterations 8
Cbc0038I Pass  13: suminf.    1.26969 (5) obj. -467.469 iterations 8
Cbc0038I Pass  14: suminf.    0.30936 (4) obj. -467.469 iterations 5
Cbc0038I Pass  15: suminf.    1.24966 (4) obj. -467.469 iterations 20
Cbc0038I Pass  16: suminf.    0.47187 (3) obj. -467.469 iterations 14
Cbc0038I Pass  17: suminf.    0.73002 (4) obj. -467.469 iterations 13
Cbc0038I Pass  18: suminf.    0.61519 (4) obj. -467.469 iterations 5
Cbc0038I Pass  19: suminf.    0.30330 (3) obj. -467.469 iterations 12
Cbc0038I Pass  20: suminf.    0.30330 (3) obj. -467.469 iterations 0
Cbc0038I Pass  21: suminf.    0.52609 (3) obj. -467.469 iterations 13
Cbc0038I Pass  22: suminf.    0.52609 (3) obj. -467.469 iterations 0
Cbc0038I Pass  23: suminf.    0.65691 (5) obj. -467.469 iterations 12
Cbc0038I Pass  24: suminf.    0.65063 (4) obj. -467.469 iterations 7
Cbc0038I Pass  25: suminf.    0.73002 (4) obj. -467.469 iterations 11
Cbc0038I Pass  26: suminf.    0.68683 (6) obj. -467.469 iterations 8
Cbc0038I Pass  27: suminf.    0.44661 (2) obj. -467.469 iterations 11
Cbc0038I Pass  28: suminf.    1.25666 (6) obj. -467.469 iterations 12
Cbc0038I Pass  29: suminf.    0.73002 (4) obj. -467.469 iterations 16
Cbc0038I Pass  30: suminf.    0.52609 (3) obj. -467.469 iterations 1
Cbc0038I Pass  31: suminf.    0.30330 (3) obj. -467.469 iterations 9
Cbc0038I Pass  32: suminf.    0.30330 (3) obj. -467.469 iterations 0
Cbc0038I Rounding solution of -467.119 is better than previous of -463.077

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 22 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -475.374
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.19009 (4) obj. -475.374 iterations 2
Cbc0038I Pass  33: suminf.    0.38026 (1) obj. -475.374 iterations 11
Cbc0038I Pass  34: suminf.    0.38026 (1) obj. -475.374 iterations 0
Cbc0038I Pass  35: suminf.    0.42308 (1) obj. -478.391 iterations 8
Cbc0038I Pass  36: suminf.    0.41304 (3) obj. -475.374 iterations 15
Cbc0038I Pass  37: suminf.    0.26339 (1) obj. -475.374 iterations 8
Cbc0038I Pass  38: suminf.    0.47458 (2) obj. -493.615 iterations 9
Cbc0038I Pass  39: suminf.    0.26339 (1) obj. -475.374 iterations 9
Cbc0038I Pass  40: suminf.    0.48964 (3) obj. -475.374 iterations 11
Cbc0038I Pass  41: suminf.    0.98694 (5) obj. -475.374 iterations 7
Cbc0038I Pass  42: suminf.    0.53095 (2) obj. -475.374 iterations 3
Cbc0038I Pass  43: suminf.    0.97907 (3) obj. -475.374 iterations 5
Cbc0038I Pass  44: suminf.    0.53095 (2) obj. -475.374 iterations 5
Cbc0038I Pass  45: suminf.    0.26339 (1) obj. -475.374 iterations 7
Cbc0038I Pass  46: suminf.    0.47458 (2) obj. -493.615 iterations 8
Cbc0038I Pass  47: suminf.    0.26339 (1) obj. -475.374 iterations 8
Cbc0038I Pass  48: suminf.    1.32708 (6) obj. -475.374 iterations 20
Cbc0038I Pass  49: suminf.    0.37850 (4) obj. -475.374 iterations 15
Cbc0038I Pass  50: suminf.    0.86508 (3) obj. -475.374 iterations 14
Cbc0038I Pass  51: suminf.    0.44545 (2) obj. -475.374 iterations 6
Cbc0038I Pass  52: suminf.    0.37850 (4) obj. -475.374 iterations 8
Cbc0038I Pass  53: suminf.    0.97403 (3) obj. -475.374 iterations 10
Cbc0038I Pass  54: suminf.    0.44545 (2) obj. -475.374 iterations 14
Cbc0038I Pass  55: suminf.    1.26482 (4) obj. -475.374 iterations 11
Cbc0038I Pass  56: suminf.    0.50821 (2) obj. -475.374 iterations 12
Cbc0038I Pass  57: suminf.    0.13777 (2) obj. -475.374 iterations 10
Cbc0038I Pass  58: suminf.    0.50821 (2) obj. -475.374 iterations 12
Cbc0038I Pass  59: suminf.    0.49510 (5) obj. -475.374 iterations 8
Cbc0038I Pass  60: suminf.    0.49510 (5) obj. -475.374 iterations 6
Cbc0038I Pass  61: suminf.    0.78255 (5) obj. -475.374 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -467.119 - took 0.02 seconds
Cbc0012I Integer solution of -467.1191 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 8 rows 8 columns
Cbc0031I 7 added rows had average density of 17
Cbc0013I At root node, 7 cuts changed objective from -506.99342 to -483.78878 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 3.1 elements, 11 column cuts (11 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0001I Search completed - best objective -467.1191, took 210 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 48 times (182 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.23

