Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 5.24601e-05 - average 9.53821e-07, 2 fixed columns
Coin0506I Presolve 49 (-6) rows, 30 (-3) columns and 150 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 2.7130797 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Coin0511I After Postsolve, objective 90.731516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Coin0511I After Postsolve, objective 90.731516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.73151628 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.09087
Cbc0038I Pass   1: suminf.    0.06000 (1) obj. -37.9939 iterations 12
Cbc0038I Solution found of -16.9091
Cbc0038I Relaxing continuous gives -16.9091
Cbc0038I Rounding solution of -27.4895 is better than previous of -16.9091

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -27.4895 to -39.7241 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.825
Cbc0038I Pass   2: suminf.    0.28446 (4) obj. -44.825 iterations 3
Cbc0038I Pass   3: suminf.    1.05136 (3) obj. -44.825 iterations 5
Cbc0038I Pass   4: suminf.    0.33000 (1) obj. -44.825 iterations 4
Cbc0038I Pass   5: suminf.    0.44023 (1) obj. -44.825 iterations 1
Cbc0038I Pass   6: suminf.    0.34124 (1) obj. -44.825 iterations 10
Cbc0038I Pass   7: suminf.    0.34124 (1) obj. -44.825 iterations 2
Cbc0038I Pass   8: suminf.    0.39858 (1) obj. -44.825 iterations 1
Cbc0038I Pass   9: suminf.    0.70317 (3) obj. -44.825 iterations 3
Cbc0038I Pass  10: suminf.    0.47341 (1) obj. -44.825 iterations 2
Cbc0038I Pass  11: suminf.    0.45837 (1) obj. -44.825 iterations 1
Cbc0038I Pass  12: suminf.    1.99058 (6) obj. -44.825 iterations 19
Cbc0038I Pass  13: suminf.    0.75152 (3) obj. -44.825 iterations 8
Cbc0038I Pass  14: suminf.    1.04088 (3) obj. -44.825 iterations 3
Cbc0038I Pass  15: suminf.    0.78758 (3) obj. -44.825 iterations 1
Cbc0038I Pass  16: suminf.    0.78758 (3) obj. -44.825 iterations 0
Cbc0038I Pass  17: suminf.    1.26811 (3) obj. -44.825 iterations 2
Cbc0038I Pass  18: suminf.    0.99450 (6) obj. -44.825 iterations 4
Cbc0038I Pass  19: suminf.    0.91784 (5) obj. -44.825 iterations 6
Cbc0038I Pass  20: suminf.    1.63448 (4) obj. -44.825 iterations 5
Cbc0038I Pass  21: suminf.    0.74818 (3) obj. -44.825 iterations 2
Cbc0038I Pass  22: suminf.    0.74818 (3) obj. -44.825 iterations 0
Cbc0038I Pass  23: suminf.    1.23637 (3) obj. -44.825 iterations 2
Cbc0038I Pass  24: suminf.    1.20266 (5) obj. -44.825 iterations 7
Cbc0038I Pass  25: suminf.    0.83566 (4) obj. -44.825 iterations 4
Cbc0038I Pass  26: suminf.    0.85130 (3) obj. -44.825 iterations 4
Cbc0038I Pass  27: suminf.    1.63116 (6) obj. -44.825 iterations 15
Cbc0038I Pass  28: suminf.    1.31434 (5) obj. -44.825 iterations 1
Cbc0038I Pass  29: suminf.    0.88089 (3) obj. -44.825 iterations 6
Cbc0038I Pass  30: suminf.    0.77383 (3) obj. -44.825 iterations 2
Cbc0038I Pass  31: suminf.    0.96975 (3) obj. -44.825 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 43 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -39.7241 to -40.6553 (0.04 seconds)
Cbc0038I Round again with cutoff of -54.0063
Cbc0038I Pass  31: suminf.    0.74621 (4) obj. -54.0063 iterations 0
Cbc0038I Pass  32: suminf.    1.01390 (5) obj. -54.0063 iterations 5
Cbc0038I Pass  33: suminf.    0.40229 (3) obj. -54.0063 iterations 2
Cbc0038I Pass  34: suminf.    0.60245 (2) obj. -54.0063 iterations 3
Cbc0038I Pass  35: suminf.    0.62210 (4) obj. -54.0063 iterations 5
Cbc0038I Pass  36: suminf.    1.39040 (5) obj. -54.0063 iterations 7
Cbc0038I Pass  37: suminf.    1.10246 (4) obj. -54.0063 iterations 1
Cbc0038I Pass  38: suminf.    1.34348 (4) obj. -54.0063 iterations 6
Cbc0038I Pass  39: suminf.    1.28142 (3) obj. -54.0063 iterations 4
Cbc0038I Pass  40: suminf.    0.87632 (3) obj. -54.0063 iterations 1
Cbc0038I Pass  41: suminf.    0.69993 (3) obj. -54.0063 iterations 1
Cbc0038I Pass  42: suminf.    1.28142 (3) obj. -54.0063 iterations 2
Cbc0038I Pass  43: suminf.    2.72539 (10) obj. -54.0063 iterations 14
Cbc0038I Pass  44: suminf.    2.25024 (8) obj. -54.0063 iterations 4
Cbc0038I Pass  45: suminf.    1.47093 (7) obj. -54.0063 iterations 8
Cbc0038I Pass  46: suminf.    1.29113 (9) obj. -54.0063 iterations 2
Cbc0038I Pass  47: suminf.    2.42802 (6) obj. -54.0063 iterations 14
Cbc0038I Pass  48: suminf.    0.83965 (2) obj. -54.0063 iterations 4
Cbc0038I Pass  49: suminf.    0.36075 (2) obj. -54.0063 iterations 1
Cbc0038I Pass  50: suminf.    2.18866 (11) obj. -54.0063 iterations 12
Cbc0038I Pass  51: suminf.    1.99948 (13) obj. -54.0063 iterations 5
Cbc0038I Pass  52: suminf.    2.14406 (6) obj. -54.0063 iterations 13
Cbc0038I Pass  53: suminf.    1.45207 (4) obj. -54.0063 iterations 3
Cbc0038I Pass  54: suminf.    1.47349 (5) obj. -54.0063 iterations 3
Cbc0038I Pass  55: suminf.    1.29367 (5) obj. -54.0063 iterations 1
Cbc0038I Pass  56: suminf.    1.29367 (5) obj. -54.0063 iterations 0
Cbc0038I Pass  57: suminf.    1.77891 (5) obj. -54.0063 iterations 3
Cbc0038I Pass  58: suminf.    1.62214 (4) obj. -54.0063 iterations 2
Cbc0038I Pass  59: suminf.    1.45207 (4) obj. -54.0063 iterations 2
Cbc0038I Pass  60: suminf.    1.47349 (5) obj. -54.0063 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -40.6553 - took 0.05 seconds
Cbc0012I Integer solution of -40.655255 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 21 rows 17 columns
Cbc0031I 10 added rows had average density of 24.3
Cbc0013I At root node, 10 cuts changed objective from -90.731516 to -65.688526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1469 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 879 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.898 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.655255 best solution, best possible -65.687564 (1.98 seconds)
Cbc0001I Search completed - best objective -40.655255, took 2964 iterations and 22 nodes (2.08 seconds)
Cbc0032I Strong branching done 194 times (1888 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 4, 48 variables fixed on reduced cost
Total time (CPU seconds):       1.25   (Wallclock seconds):       2.08

