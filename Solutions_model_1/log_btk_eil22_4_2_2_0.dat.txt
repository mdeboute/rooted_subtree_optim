Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 111 (-18) elements
Clp1000I sum of infeasibilities 0.0003149 - average 8.51082e-06, 1 fixed columns
Coin0506I Presolve 35 (-2) rows, 21 (-1) columns and 105 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 70.324692
Clp0000I Optimal - objective value 70.324692
Coin0511I After Postsolve, objective 70.324692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.324692
Clp0000I Optimal - objective value 70.324692
Clp0000I Optimal - objective value 70.324692
Coin0511I After Postsolve, objective 70.324692, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.32469167 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.44212
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.15945 iterations 20
Cbc0038I Solution found of 3.15945
Cbc0038I Relaxing continuous gives 3.15945
Cbc0038I Rounding solution of -9.34195 is better than previous of 3.15945

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -9.34195 to -25.0943 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.6065
Cbc0038I Pass   2: suminf.    1.59022 (5) obj. -29.6065 iterations 5
Cbc0038I Pass   3: suminf.    1.60623 (4) obj. -29.6065 iterations 6
Cbc0038I Pass   4: suminf.    1.58096 (4) obj. -29.6065 iterations 2
Cbc0038I Pass   5: suminf.    0.94017 (4) obj. -29.6065 iterations 7
Cbc0038I Pass   6: suminf.    1.52051 (4) obj. -29.6065 iterations 7
Cbc0038I Pass   7: suminf.    0.81967 (3) obj. -29.6065 iterations 4
Cbc0038I Pass   8: suminf.    1.61503 (4) obj. -29.6065 iterations 5
Cbc0038I Pass   9: suminf.    0.85179 (3) obj. -29.6065 iterations 8
Cbc0038I Pass  10: suminf.    0.94017 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  11: suminf.    1.52051 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  12: suminf.    0.81967 (3) obj. -29.6065 iterations 4
Cbc0038I Pass  13: suminf.    1.61503 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  14: suminf.    0.85179 (3) obj. -29.6065 iterations 6
Cbc0038I Pass  15: suminf.    0.94017 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  16: suminf.    1.52051 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  17: suminf.    0.81967 (3) obj. -29.6065 iterations 4
Cbc0038I Pass  18: suminf.    1.61503 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  19: suminf.    0.85179 (3) obj. -29.6065 iterations 6
Cbc0038I Pass  20: suminf.    0.94017 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  21: suminf.    1.52051 (4) obj. -29.6065 iterations 7
Cbc0038I Pass  22: suminf.    0.81967 (3) obj. -29.6065 iterations 4
Cbc0038I Pass  23: suminf.    1.61503 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  24: suminf.    0.85179 (3) obj. -29.6065 iterations 6
Cbc0038I Pass  25: suminf.    0.94017 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  26: suminf.    1.52051 (4) obj. -29.6065 iterations 7
Cbc0038I Pass  27: suminf.    0.81967 (3) obj. -29.6065 iterations 4
Cbc0038I Pass  28: suminf.    1.61503 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  29: suminf.    0.85179 (3) obj. -29.6065 iterations 8
Cbc0038I Pass  30: suminf.    0.94017 (4) obj. -29.6065 iterations 5
Cbc0038I Pass  31: suminf.    1.52051 (4) obj. -29.6065 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25.0943 - took 0.02 seconds
Cbc0012I Integer solution of -25.09426 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 28 rows 17 columns
Cbc0031I 9 added rows had average density of 17.444444
Cbc0013I At root node, 9 cuts changed objective from -70.215906 to -45.762797 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1281 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 665 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.09425999999999, took 2002 iterations and 2 nodes (0.14 seconds)
Cbc0032I Strong branching done 38 times (431 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

