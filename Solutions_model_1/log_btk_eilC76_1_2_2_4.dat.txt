Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 75 (-3) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 2.02498e-05 - average 1.55768e-07, 10 fixed columns
Coin0506I Presolve 112 (-18) rows, 65 (-10) columns and 346 (-56) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 6.15573 - largest nonzero change 0 ( 0%) - largest zero change 2.8682824e-05
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Coin0511I After Postsolve, objective 37.85824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Coin0511I After Postsolve, objective 37.85824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.85824041 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.00601
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.42672 iterations 45
Cbc0038I Solution found of 5.42672
Cbc0038I Relaxing continuous gives 5.42672
Cbc0038I Rounding solution of 1.88441 is better than previous of 5.42672

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.88441 to -9.01125 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.896
Cbc0038I Pass   2: suminf.    2.43757 (10) obj. -11.896 iterations 15
Cbc0038I Pass   3: suminf.    1.51053 (4) obj. -11.896 iterations 11
Cbc0038I Pass   4: suminf.    1.51053 (4) obj. -11.896 iterations 0
Cbc0038I Pass   5: suminf.    1.50221 (6) obj. -11.896 iterations 5
Cbc0038I Pass   6: suminf.    2.01516 (7) obj. -11.896 iterations 5
Cbc0038I Pass   7: suminf.    1.63164 (6) obj. -11.896 iterations 3
Cbc0038I Pass   8: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass   9: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  10: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  11: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  12: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  13: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  14: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  15: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I Pass  16: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass  17: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  18: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  19: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  20: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  21: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  22: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  23: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I Pass  24: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass  25: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  26: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  27: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  28: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  29: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  30: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  31: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -9.01125 to -9.40262 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.0885
Cbc0038I Pass  31: suminf.    3.33982 (12) obj. -17.0885 iterations 2
Cbc0038I Pass  32: suminf.    2.59408 (7) obj. -17.0885 iterations 10
Cbc0038I Pass  33: suminf.    2.07814 (6) obj. -17.0885 iterations 2
Cbc0038I Pass  34: suminf.    2.07814 (6) obj. -17.0885 iterations 0
Cbc0038I Pass  35: suminf.    2.37080 (7) obj. -17.0885 iterations 3
Cbc0038I Pass  36: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  37: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  38: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  39: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  40: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  41: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  42: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  43: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  44: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  45: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  46: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  47: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  48: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  49: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  50: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  51: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  52: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  53: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  54: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  55: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  56: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  57: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  58: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  59: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  60: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -9.40262 - took 0.11 seconds
Cbc0012I Integer solution of -9.40262 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0031I 23 added rows had average density of 35.130435
Cbc0013I At root node, 23 cuts changed objective from -37.85824 to -29.918522 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2353 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.40262 best solution, best possible -29.918522 (0.96 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 8 rows 10 columns
Cbc0004I Integer solution of -9.53904 found after 9186 iterations and 44 nodes (1.15 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 9 rows 13 columns
Cbc0012I Integer solution of -9.714807 found by RINS after 10003 iterations and 91 nodes (1.24 seconds)
Cbc0004I Integer solution of -10.422837 found after 10176 iterations and 109 nodes (1.26 seconds)
Cbc0001I Search completed - best objective -10.422837, took 11759 iterations and 178 nodes (1.37 seconds)
Cbc0032I Strong branching done 1622 times (22876 iterations), fathomed 18 nodes and fixed 55 variables
Cbc0035I Maximum depth 28, 482 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.39

