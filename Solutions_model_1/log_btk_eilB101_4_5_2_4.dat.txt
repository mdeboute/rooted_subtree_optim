Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 176 (-29) rows, 100 (-3) columns and 544 (-59) elements
Clp1000I sum of infeasibilities 2.36309e-05 - average 1.34267e-07, 12 fixed columns
Coin0506I Presolve 153 (-23) rows, 88 (-12) columns and 474 (-70) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 1.5988587 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 41.775286
Clp0000I Optimal - objective value 41.775286
Coin0511I After Postsolve, objective 41.775286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.775286
Clp0000I Optimal - objective value 41.775286
Clp0000I Optimal - objective value 41.775286
Coin0511I After Postsolve, objective 41.775286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.77528581 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 176 rows, 100 columns (99 integer (99 of which binary)) and 545 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.876%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.88414
Cbc0038I Solution found of 3.57271
Cbc0038I Relaxing continuous gives -2.63328
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 100 columns, reduced to 76 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -2.63328 to -17.2491 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.7018
Cbc0038I Pass   1: suminf.    2.81970 (33) obj. -19.7018 iterations 57
Cbc0038I Pass   2: suminf.    1.46471 (4) obj. -19.7018 iterations 41
Cbc0038I Pass   3: suminf.    1.46471 (4) obj. -19.7018 iterations 0
Cbc0038I Pass   4: suminf.    1.11145 (3) obj. -19.7018 iterations 13
Cbc0038I Pass   5: suminf.    1.11145 (3) obj. -19.7018 iterations 1
Cbc0038I Pass   6: suminf.    1.13103 (3) obj. -19.7018 iterations 2
Cbc0038I Pass   7: suminf.    0.80200 (3) obj. -19.7018 iterations 2
Cbc0038I Pass   8: suminf.    1.11145 (3) obj. -19.7018 iterations 4
Cbc0038I Pass   9: suminf.    3.69656 (11) obj. -19.7018 iterations 25
Cbc0038I Pass  10: suminf.    1.47747 (5) obj. -19.7018 iterations 9
Cbc0038I Pass  11: suminf.    1.23988 (4) obj. -19.7018 iterations 19
Cbc0038I Pass  12: suminf.    1.13071 (3) obj. -19.7018 iterations 1
Cbc0038I Pass  13: suminf.    0.89238 (3) obj. -19.7018 iterations 3
Cbc0038I Pass  14: suminf.    1.13071 (3) obj. -19.7018 iterations 3
Cbc0038I Pass  15: suminf.    2.40393 (9) obj. -19.7018 iterations 25
Cbc0038I Pass  16: suminf.    2.17469 (7) obj. -19.7018 iterations 8
Cbc0038I Pass  17: suminf.    1.97172 (6) obj. -19.7018 iterations 29
Cbc0038I Pass  18: suminf.    1.18208 (4) obj. -19.7018 iterations 8
Cbc0038I Pass  19: suminf.    0.93360 (4) obj. -19.7018 iterations 10
Cbc0038I Pass  20: suminf.    0.85466 (4) obj. -19.7018 iterations 4
Cbc0038I Pass  21: suminf.    1.17570 (4) obj. -19.7018 iterations 6
Cbc0038I Pass  22: suminf.    1.17570 (4) obj. -19.7018 iterations 1
Cbc0038I Pass  23: suminf.    0.72517 (3) obj. -19.7018 iterations 8
Cbc0038I Pass  24: suminf.    0.46284 (2) obj. -19.7018 iterations 2
Cbc0038I Pass  25: suminf.    0.79035 (3) obj. -19.7018 iterations 2
Cbc0038I Pass  26: suminf.    1.85429 (9) obj. -19.7018 iterations 17
Cbc0038I Pass  27: suminf.    1.35213 (5) obj. -19.7018 iterations 14
Cbc0038I Pass  28: suminf.    2.91453 (15) obj. -19.7018 iterations 23
Cbc0038I Pass  29: suminf.    1.20715 (7) obj. -19.7018 iterations 27
Cbc0038I Pass  30: suminf.    1.00283 (6) obj. -19.7018 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 100 columns, reduced to 112 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -17.2491 to -17.8787 (0.11 seconds)
Cbc0038I Round again with cutoff of -24.1165
Cbc0038I Pass  30: suminf.    3.54900 (33) obj. -24.1165 iterations 0
Cbc0038I Pass  31: suminf.    2.20528 (9) obj. -24.1165 iterations 41
Cbc0038I Pass  32: suminf.    1.66681 (5) obj. -24.1165 iterations 10
Cbc0038I Pass  33: suminf.    1.07579 (6) obj. -24.1165 iterations 5
Cbc0038I Pass  34: suminf.    2.28727 (6) obj. -24.1165 iterations 17
Cbc0038I Pass  35: suminf.    1.22178 (5) obj. -24.1165 iterations 7
Cbc0038I Pass  36: suminf.    2.38119 (7) obj. -24.1165 iterations 17
Cbc0038I Pass  37: suminf.    3.62846 (17) obj. -24.1165 iterations 29
Cbc0038I Pass  38: suminf.    1.64366 (8) obj. -24.1165 iterations 17
Cbc0038I Pass  39: suminf.    1.29320 (6) obj. -24.1165 iterations 11
Cbc0038I Pass  40: suminf.    1.00391 (6) obj. -24.1165 iterations 2
Cbc0038I Pass  41: suminf.    0.94924 (6) obj. -24.1165 iterations 2
Cbc0038I Pass  42: suminf.    2.61352 (7) obj. -24.1165 iterations 13
Cbc0038I Pass  43: suminf.    2.09314 (6) obj. -24.1165 iterations 6
Cbc0038I Pass  44: suminf.    2.20566 (6) obj. -24.1165 iterations 12
Cbc0038I Pass  45: suminf.    1.55774 (6) obj. -24.1165 iterations 8
Cbc0038I Pass  46: suminf.    2.05293 (6) obj. -24.1165 iterations 5
Cbc0038I Pass  47: suminf.    1.08345 (5) obj. -24.1165 iterations 5
Cbc0038I Pass  48: suminf.    1.67267 (5) obj. -24.1165 iterations 7
Cbc0038I Pass  49: suminf.    1.20356 (5) obj. -24.1165 iterations 2
Cbc0038I Pass  50: suminf.    1.03202 (5) obj. -24.1165 iterations 2
Cbc0038I Pass  51: suminf.    1.11763 (4) obj. -24.1165 iterations 6
Cbc0038I Pass  52: suminf.    1.11763 (4) obj. -24.1165 iterations 0
Cbc0038I Pass  53: suminf.    1.39258 (7) obj. -24.1165 iterations 5
Cbc0038I Pass  54: suminf.    1.23360 (5) obj. -24.1165 iterations 2
Cbc0038I Pass  55: suminf.    2.10780 (6) obj. -24.1165 iterations 6
Cbc0038I Pass  56: suminf.    1.71021 (6) obj. -24.1165 iterations 7
Cbc0038I Pass  57: suminf.    2.20566 (6) obj. -24.1165 iterations 7
Cbc0038I Pass  58: suminf.    1.55774 (6) obj. -24.1165 iterations 8
Cbc0038I Pass  59: suminf.    2.05293 (6) obj. -24.1165 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 100 columns, reduced to 107 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -17.8787 - took 0.14 seconds
Cbc0012I Integer solution of -17.87865 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 176 rows 100 columns, reduced to 76 rows 48 columns
Cbc0012I Integer solution of -18.10841 found by RINS after 0 iterations and 0 nodes (0.22 seconds)
Cbc0031I 30 added rows had average density of 71.066667
Cbc0013I At root node, 30 cuts changed objective from -41.775286 to -34.416332 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12727 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2146 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -18.10841 best solution, best possible -34.416332 (1.21 seconds)
Cbc0038I Full problem 176 rows 100 columns, reduced to 14 rows 16 columns
Cbc0038I Full problem 176 rows 100 columns, reduced to 11 rows 12 columns
Cbc0012I Integer solution of -18.40352 found by rounding after 10572 iterations and 95 nodes (1.62 seconds)
Cbc0001I Search completed - best objective -18.40352, took 11700 iterations and 126 nodes (1.67 seconds)
Cbc0032I Strong branching done 1106 times (22638 iterations), fathomed 13 nodes and fixed 56 variables
Cbc0035I Maximum depth 28, 656 variables fixed on reduced cost
Total time (CPU seconds):       1.61   (Wallclock seconds):       1.69

