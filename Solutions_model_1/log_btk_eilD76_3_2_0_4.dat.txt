Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 60 (-18) columns and 327 (-126) elements
Clp1000I sum of infeasibilities 1.74727e-06 - average 1.63296e-08, 54 fixed columns
Coin0506I Presolve 1 (-106) rows, 2 (-58) columns and 2 (-325) elements
Clp0029I End of values pass after 1 iterations
Clp0000I Optimal - objective value 21828.335
Clp0000I Optimal - objective value 21828.335
Coin0511I After Postsolve, objective 21828.335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.6078606 - largest nonzero change 2.0978395e-05 ( 0.0020978395%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 21828.335
Clp0000I Optimal - objective value 21828.335
Clp0000I Optimal - objective value 21828.335
Coin0511I After Postsolve, objective 21828.335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21828.33538 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 107 rows, 60 columns (59 integer (59 of which binary)) and 327 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.446%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.153846
Cbc0038I Pass   1: suminf.    0.15385 (1) obj. -21656.9 iterations 12
Cbc0038I Solution found of -19081.3
Cbc0038I Relaxing continuous gives -19081.3
Cbc0038I Rounding solution of -19385.7 is better than previous of -19081.3

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 60 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -19385.7 to -20195.4 (0.01 seconds)
Cbc0038I Round again with cutoff of -20358.7
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.15385 (1) obj. -21656.9 iterations 0
Cbc0038I Pass   3: suminf.    0.41964 (1) obj. -20358.7 iterations 1
Cbc0038I Pass   4: suminf.    0.56712 (3) obj. -20358.7 iterations 7
Cbc0038I Pass   5: suminf.    0.56712 (3) obj. -20358.7 iterations 3
Cbc0038I Pass   6: suminf.    0.23881 (2) obj. -20358.7 iterations 7
Cbc0038I Pass   7: suminf.    0.14856 (1) obj. -20358.7 iterations 3
Cbc0038I Pass   8: suminf.    0.15385 (1) obj. -21656.9 iterations 4
Cbc0038I Pass   9: suminf.    0.41964 (1) obj. -20358.7 iterations 1
Cbc0038I Pass  10: suminf.    0.53718 (5) obj. -20358.7 iterations 24
Cbc0038I Solution found of -20499.8
Cbc0038I Relaxing continuous gives -20499.8
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 60 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -20499.8 to -20692 (0.01 seconds)
Cbc0038I Round again with cutoff of -20919.3
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.15385 (1) obj. -21656.9 iterations 0
Cbc0038I Pass  12: suminf.    0.39618 (1) obj. -20919.3 iterations 1
Cbc0038I Pass  13: suminf.    0.29252 (3) obj. -20919.3 iterations 11
Cbc0038I Pass  14: suminf.    0.18519 (1) obj. -21233.4 iterations 8
Cbc0038I Pass  15: suminf.    0.37511 (1) obj. -20919.3 iterations 7
Cbc0038I Pass  16: suminf.    1.32978 (4) obj. -20919.3 iterations 31
Cbc0038I Solution found of -21200.6
Cbc0038I Relaxing continuous gives -21200.6
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 60 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -21388.9
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 4
Cbc0038I Pass  17: suminf.    0.15385 (1) obj. -21828.3 iterations 11
Cbc0038I Pass  18: suminf.    0.38155 (1) obj. -21388.9 iterations 6
Cbc0038I Pass  19: suminf.    1.66867 (4) obj. -21388.9 iterations 7
Cbc0038I Pass  20: suminf.    0.40804 (1) obj. -21388.9 iterations 4
Cbc0038I Pass  21: suminf.    0.83203 (4) obj. -21388.9 iterations 7
Cbc0038I Pass  22: suminf.    0.40804 (1) obj. -21388.9 iterations 7
Cbc0038I Pass  23: suminf.    1.66867 (4) obj. -21388.9 iterations 4
Cbc0038I Pass  24: suminf.    0.47741 (1) obj. -21388.9 iterations 6
Cbc0038I Pass  25: suminf.    1.77136 (4) obj. -21388.9 iterations 10
Cbc0038I Pass  26: suminf.    0.47741 (1) obj. -21388.9 iterations 6
Cbc0038I Pass  27: suminf.    0.15385 (1) obj. -21828.3 iterations 8
Cbc0038I Pass  28: suminf.    0.38155 (1) obj. -21388.9 iterations 4
Cbc0038I Pass  29: suminf.    0.47741 (1) obj. -21388.9 iterations 4
Cbc0038I Pass  30: suminf.    0.31661 (2) obj. -21388.9 iterations 10
Cbc0038I Pass  31: suminf.    0.31661 (2) obj. -21388.9 iterations 7
Cbc0038I Pass  32: suminf.    1.15468 (4) obj. -21388.9 iterations 8
Cbc0038I Pass  33: suminf.    0.33415 (3) obj. -21388.9 iterations 8
Cbc0038I Pass  34: suminf.    0.31661 (2) obj. -21388.9 iterations 14
Cbc0038I Pass  35: suminf.    0.33415 (3) obj. -21388.9 iterations 12
Cbc0038I Pass  36: suminf.    1.77136 (4) obj. -21388.9 iterations 7
Cbc0038I Pass  37: suminf.    0.47741 (1) obj. -21388.9 iterations 6
Cbc0038I Pass  38: suminf.    0.15385 (1) obj. -21828.3 iterations 8
Cbc0038I Pass  39: suminf.    0.38155 (1) obj. -21388.9 iterations 4
Cbc0038I Pass  40: suminf.    0.47741 (1) obj. -21388.9 iterations 4
Cbc0038I Pass  41: suminf.    0.68182 (3) obj. -21425.3 iterations 8
Cbc0038I Pass  42: suminf.    0.81965 (3) obj. -21388.9 iterations 12
Cbc0038I Pass  43: suminf.    0.48130 (2) obj. -21388.9 iterations 8
Cbc0038I Pass  44: suminf.    0.48130 (2) obj. -21388.9 iterations 1
Cbc0038I Pass  45: suminf.    0.48130 (2) obj. -21388.9 iterations 1
Cbc0038I Pass  46: suminf.    1.68875 (4) obj. -21388.9 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 60 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21200.6 - took 0.02 seconds
Cbc0012I Integer solution of -21200.57 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 107 rows 60 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 8
Cbc0013I At root node, 3 cuts changed objective from -21828.335 to -21302.217 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -21200.57, took 18 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

