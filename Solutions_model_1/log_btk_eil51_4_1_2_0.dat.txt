Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 281 (-22) elements
Clp1000I sum of infeasibilities 5.47537e-06 - average 5.88749e-08, 4 fixed columns
Coin0506I Presolve 85 (-8) rows, 47 (-4) columns and 257 (-24) elements
Clp0014I Perturbing problem by 0.001% of 5.3483554 - largest nonzero change 0 ( 0%) - largest zero change 1.8718604e-05
Clp0000I Optimal - objective value 40.173614
Clp0000I Optimal - objective value 40.173614
Coin0511I After Postsolve, objective 40.173614, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.173614
Clp0000I Optimal - objective value 40.173614
Clp0000I Optimal - objective value 40.173614
Coin0511I After Postsolve, objective 40.173614, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.17361394 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.9394
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.62826 iterations 39
Cbc0038I Solution found of -4.62826
Cbc0038I Relaxing continuous gives -4.62826
Cbc0038I Rounding solution of -8.00217 is better than previous of -4.62826

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 64 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -8.00217 to -11.4374 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.3111
Cbc0038I Pass   2: suminf.    1.57010 (8) obj. -14.3111 iterations 12
Cbc0038I Pass   3: suminf.    1.74219 (5) obj. -14.3111 iterations 10
Cbc0038I Pass   4: suminf.    1.56675 (4) obj. -14.3111 iterations 8
Cbc0038I Pass   5: suminf.    1.07145 (4) obj. -14.3111 iterations 5
Cbc0038I Pass   6: suminf.    1.02873 (4) obj. -14.3111 iterations 4
Cbc0038I Pass   7: suminf.    3.41544 (10) obj. -14.3111 iterations 17
Cbc0038I Pass   8: suminf.    1.07368 (4) obj. -14.3111 iterations 10
Cbc0038I Pass   9: suminf.    0.77514 (5) obj. -14.3111 iterations 4
Cbc0038I Pass  10: suminf.    1.86523 (5) obj. -14.3111 iterations 12
Cbc0038I Pass  11: suminf.    1.04205 (3) obj. -14.3111 iterations 2
Cbc0038I Pass  12: suminf.    1.04205 (3) obj. -14.3111 iterations 1
Cbc0038I Pass  13: suminf.    1.19689 (4) obj. -14.3111 iterations 12
Cbc0038I Pass  14: suminf.    1.19689 (4) obj. -14.3111 iterations 1
Cbc0038I Pass  15: suminf.    0.53623 (2) obj. -14.3111 iterations 7
Cbc0038I Pass  16: suminf.    0.74376 (2) obj. -14.3111 iterations 3
Cbc0038I Pass  17: suminf.    1.33539 (6) obj. -14.3111 iterations 12
Cbc0038I Pass  18: suminf.    1.20819 (5) obj. -14.3111 iterations 3
Cbc0038I Pass  19: suminf.    1.01068 (3) obj. -14.3111 iterations 10
Cbc0038I Pass  20: suminf.    1.01068 (3) obj. -14.3111 iterations 1
Cbc0038I Pass  21: suminf.    0.85978 (3) obj. -14.3111 iterations 5
Cbc0038I Pass  22: suminf.    0.85978 (3) obj. -14.3111 iterations 0
Cbc0038I Pass  23: suminf.    2.10828 (7) obj. -14.3111 iterations 10
Cbc0038I Pass  24: suminf.    1.16644 (4) obj. -14.3111 iterations 8
Cbc0038I Pass  25: suminf.    1.57097 (6) obj. -14.3111 iterations 9
Cbc0038I Pass  26: suminf.    1.11293 (4) obj. -14.3111 iterations 2
Cbc0038I Pass  27: suminf.    0.97804 (3) obj. -14.3111 iterations 1
Cbc0038I Pass  28: suminf.    0.94274 (3) obj. -14.3111 iterations 3
Cbc0038I Pass  29: suminf.    1.30014 (4) obj. -14.3111 iterations 4
Cbc0038I Pass  30: suminf.    1.09986 (4) obj. -14.3111 iterations 3
Cbc0038I Pass  31: suminf.    0.98536 (3) obj. -14.3111 iterations 1
Cbc0038I Rounding solution of -11.4706 is better than previous of -11.4374

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 75 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -19.4836
Cbc0038I Pass  31: suminf.    2.50585 (13) obj. -19.4836 iterations 6
Cbc0038I Pass  32: suminf.    1.78340 (7) obj. -19.4836 iterations 20
Cbc0038I Pass  33: suminf.    1.78340 (7) obj. -19.4836 iterations 1
Cbc0038I Pass  34: suminf.    2.23508 (10) obj. -19.4836 iterations 13
Cbc0038I Pass  35: suminf.    1.99596 (9) obj. -19.4836 iterations 6
Cbc0038I Pass  36: suminf.    1.78340 (7) obj. -19.4836 iterations 14
Cbc0038I Pass  37: suminf.    2.45705 (7) obj. -19.4836 iterations 15
Cbc0038I Pass  38: suminf.    1.81938 (5) obj. -19.4836 iterations 8
Cbc0038I Pass  39: suminf.    1.67644 (6) obj. -19.4836 iterations 1
Cbc0038I Pass  40: suminf.    1.93480 (7) obj. -19.4836 iterations 17
Cbc0038I Pass  41: suminf.    1.55432 (6) obj. -19.4836 iterations 9
Cbc0038I Pass  42: suminf.    1.88639 (7) obj. -19.4836 iterations 7
Cbc0038I Pass  43: suminf.    1.55432 (6) obj. -19.4836 iterations 5
Cbc0038I Pass  44: suminf.    3.61721 (11) obj. -19.4836 iterations 29
Cbc0038I Pass  45: suminf.    2.13299 (8) obj. -19.4836 iterations 12
Cbc0038I Pass  46: suminf.    1.59638 (6) obj. -19.4836 iterations 2
Cbc0038I Pass  47: suminf.    2.23574 (8) obj. -19.4836 iterations 13
Cbc0038I Pass  48: suminf.    1.96793 (7) obj. -19.4836 iterations 4
Cbc0038I Pass  49: suminf.    1.62589 (6) obj. -19.4836 iterations 1
Cbc0038I Pass  50: suminf.    1.62589 (6) obj. -19.4836 iterations 0
Cbc0038I Pass  51: suminf.    2.15698 (7) obj. -19.4836 iterations 7
Cbc0038I Pass  52: suminf.    2.15541 (8) obj. -19.4836 iterations 2
Cbc0038I Pass  53: suminf.    1.48132 (4) obj. -19.4836 iterations 9
Cbc0038I Pass  54: suminf.    1.30144 (4) obj. -19.4836 iterations 3
Cbc0038I Pass  55: suminf.    1.36398 (4) obj. -19.4836 iterations 7
Cbc0038I Pass  56: suminf.    1.36398 (4) obj. -19.4836 iterations 0
Cbc0038I Pass  57: suminf.    1.65801 (4) obj. -19.4836 iterations 1
Cbc0038I Pass  58: suminf.    1.47082 (4) obj. -19.4836 iterations 2
Cbc0038I Pass  59: suminf.    1.46122 (4) obj. -19.4836 iterations 1
Cbc0038I Pass  60: suminf.    1.82065 (7) obj. -19.4836 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -11.4706 - took 0.10 seconds
Cbc0012I Integer solution of -11.470601 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 68 rows 38 columns
Cbc0031I 24 added rows had average density of 33.5
Cbc0013I At root node, 24 cuts changed objective from -40.173614 to -30.166678 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8909 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1638 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 30 nodes, 9 on tree, -11.470601 best solution, best possible -30.166678 (0.69 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 19 rows 15 columns
Cbc0038I Full problem 93 rows 51 columns, reduced to 25 rows 19 columns
Cbc0001I Search completed - best objective -11.470601, took 9313 iterations and 110 nodes (0.89 seconds)
Cbc0032I Strong branching done 1256 times (18221 iterations), fathomed 11 nodes and fixed 56 variables
Cbc0035I Maximum depth 19, 298 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.90

