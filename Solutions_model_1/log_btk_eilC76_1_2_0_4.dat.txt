Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 55 (-23) columns and 300 (-153) elements
Clp1000I sum of infeasibilities 0.000147159 - average 1.50162e-06, 23 fixed columns
Coin0506I Presolve 49 (-49) rows, 28 (-27) columns and 148 (-152) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 0.60528085 - largest nonzero change 0 ( 0%) - largest zero change 2.7495377e-05
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Coin0511I After Postsolve, objective 154.65377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Clp0000I Optimal - objective value 154.65377
Coin0511I After Postsolve, objective 154.65377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.6537734 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 98 rows, 55 columns (54 integer (54 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.572%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.53182
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -78.6724 iterations 19
Cbc0038I Solution found of -78.6724
Cbc0038I Relaxing continuous gives -78.6724
Cbc0038I Rounding solution of -92.5734 is better than previous of -78.6724

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -92.5734 to -114.591 (0.03 seconds)
Cbc0038I Round again with cutoff of -118.598
Cbc0038I Pass   2: suminf.    0.61013 (8) obj. -118.598 iterations 7
Cbc0038I Pass   3: suminf.    0.24724 (2) obj. -118.598 iterations 8
Cbc0038I Pass   4: suminf.    0.33200 (2) obj. -118.598 iterations 1
Cbc0038I Pass   5: suminf.    0.90895 (4) obj. -118.598 iterations 11
Cbc0038I Pass   6: suminf.    0.90895 (4) obj. -118.598 iterations 4
Cbc0038I Pass   7: suminf.    0.53921 (4) obj. -118.598 iterations 7
Cbc0038I Pass   8: suminf.    0.53921 (4) obj. -118.598 iterations 0
Cbc0038I Pass   9: suminf.    0.96386 (3) obj. -118.598 iterations 6
Cbc0038I Pass  10: suminf.    0.24239 (1) obj. -118.598 iterations 4
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -118.598 iterations 1
Cbc0038I Solution found of -118.598
Cbc0038I Relaxing continuous gives -126.03
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -131.755
Cbc0038I Pass  12: suminf.    1.27145 (9) obj. -131.755 iterations 1
Cbc0038I Pass  13: suminf.    0.92035 (8) obj. -131.755 iterations 2
Cbc0038I Pass  14: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  15: suminf.    1.30822 (6) obj. -131.755 iterations 6
Cbc0038I Pass  16: suminf.    1.27019 (5) obj. -131.755 iterations 7
Cbc0038I Pass  17: suminf.    1.90994 (10) obj. -131.755 iterations 15
Cbc0038I Pass  18: suminf.    3.18725 (12) obj. -131.755 iterations 13
Cbc0038I Pass  19: suminf.    1.68813 (10) obj. -131.755 iterations 11
Cbc0038I Pass  20: suminf.    4.76410 (14) obj. -131.755 iterations 11
Cbc0038I Pass  21: suminf.    4.22608 (12) obj. -131.755 iterations 10
Cbc0038I Pass  22: suminf.    2.15928 (12) obj. -131.755 iterations 9
Cbc0038I Pass  23: suminf.    1.86694 (9) obj. -131.755 iterations 3
Cbc0038I Pass  24: suminf.    1.27145 (9) obj. -131.755 iterations 12
Cbc0038I Pass  25: suminf.    0.92035 (8) obj. -131.755 iterations 2
Cbc0038I Pass  26: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  27: suminf.    1.02844 (6) obj. -131.755 iterations 11
Cbc0038I Pass  28: suminf.    0.62585 (3) obj. -131.755 iterations 11
Cbc0038I Pass  29: suminf.    1.99511 (7) obj. -131.755 iterations 15
Cbc0038I Pass  30: suminf.    1.47478 (10) obj. -131.755 iterations 10
Cbc0038I Pass  31: suminf.    0.98319 (7) obj. -131.755 iterations 6
Cbc0038I Pass  32: suminf.    2.10659 (11) obj. -131.755 iterations 11
Cbc0038I Pass  33: suminf.    0.92035 (8) obj. -131.755 iterations 4
Cbc0038I Pass  34: suminf.    0.62585 (3) obj. -131.755 iterations 7
Cbc0038I Pass  35: suminf.    1.27145 (9) obj. -131.755 iterations 8
Cbc0038I Pass  36: suminf.    1.74017 (7) obj. -131.755 iterations 13
Cbc0038I Pass  37: suminf.    1.47478 (10) obj. -131.755 iterations 4
Cbc0038I Pass  38: suminf.    0.98319 (7) obj. -131.755 iterations 5
Cbc0038I Pass  39: suminf.    2.10659 (11) obj. -131.755 iterations 10
Cbc0038I Pass  40: suminf.    0.92035 (8) obj. -131.755 iterations 4
Cbc0038I Pass  41: suminf.    0.62585 (3) obj. -131.755 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 47 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -126.03 - took 0.05 seconds
Cbc0012I Integer solution of -126.02979 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 98 rows 55 columns, reduced to 36 rows 21 columns
Cbc0031I 9 added rows had average density of 35.222222
Cbc0013I At root node, 9 cuts changed objective from -154.65377 to -137.9778 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1206 row cuts average 3.1 elements, 4 column cuts (4 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 471 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -126.02979, took 1587 iterations and 6 nodes (0.24 seconds)
Cbc0032I Strong branching done 88 times (752 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

