Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-12) rows, 21 (-4) columns and 108 (-27) elements
Clp1000I sum of infeasibilities 3.25442e-08 - average 8.79574e-10, 2 fixed columns
Coin0506I Presolve 30 (-7) rows, 19 (-2) columns and 90 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 150.86661
Clp0000I Optimal - objective value 150.86661
Coin0511I After Postsolve, objective 150.86661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 150.86661
Clp0000I Optimal - objective value 150.86661
Clp0000I Optimal - objective value 150.86661
Coin0511I After Postsolve, objective 150.86661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.8666088 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 21 columns (20 integer (20 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.980%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.17514
Cbc0038I Pass   1: suminf.    0.31098 (1) obj. -70.7348 iterations 16
Cbc0038I Solution found of -7
Cbc0038I Relaxing continuous gives -7
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 21 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -21.6717
Cbc0038I Pass   2: suminf.    0.31098 (1) obj. -70.7348 iterations 0
Cbc0038I Pass   3: suminf.    0.13391 (2) obj. -21.6717 iterations 2
Cbc0038I Pass   4: suminf.    0.27439 (1) obj. -78.6189 iterations 2
Cbc0038I Pass   5: suminf.    0.10702 (2) obj. -21.6717 iterations 2
Cbc0038I Pass   6: suminf.    0.15244 (1) obj. -75.3994 iterations 2
Cbc0038I Pass   7: suminf.    0.24584 (2) obj. -21.6717 iterations 2
Cbc0038I Pass   8: suminf.    0.13415 (1) obj. -89.0915 iterations 2
Cbc0038I Pass   9: suminf.    0.13699 (1) obj. -21.6717 iterations 1
Cbc0038I Pass  10: suminf.    0.40282 (2) obj. -21.6717 iterations 7
Cbc0038I Pass  11: suminf.    0.19512 (1) obj. -48.4512 iterations 2
Cbc0038I Pass  12: suminf.    0.40501 (2) obj. -21.6717 iterations 2
Cbc0038I Pass  13: suminf.    0.19512 (1) obj. -65.4512 iterations 2
Cbc0038I Pass  14: suminf.    0.32408 (2) obj. -21.6717 iterations 2
Cbc0038I Pass  15: suminf.    0.07317 (1) obj. -79.2317 iterations 2
Cbc0038I Pass  16: suminf.    0.30456 (1) obj. -21.6717 iterations 1
Cbc0038I Pass  17: suminf.    0.97167 (5) obj. -21.6717 iterations 8
Cbc0038I Pass  18: suminf.    0.41024 (2) obj. -21.6717 iterations 4
Cbc0038I Pass  19: suminf.    0.39254 (2) obj. -21.6717 iterations 2
Cbc0038I Pass  20: suminf.    0.51093 (2) obj. -21.6717 iterations 3
Cbc0038I Pass  21: suminf.    0.28049 (1) obj. -30.5549 iterations 2
Cbc0038I Pass  22: suminf.    0.57933 (2) obj. -21.6717 iterations 2
Cbc0038I Pass  23: suminf.    0.28049 (1) obj. -26.5549 iterations 2
Cbc0038I Pass  24: suminf.    0.47610 (2) obj. -21.6717 iterations 2
Cbc0038I Pass  25: suminf.    0.28049 (1) obj. -30.5549 iterations 4
Cbc0038I Pass  26: suminf.    0.49017 (2) obj. -42.9081 iterations 4
Cbc0038I Pass  27: suminf.    0.49017 (2) obj. -42.9081 iterations 1
Cbc0038I Pass  28: suminf.    0.37604 (2) obj. -21.6717 iterations 3
Cbc0038I Pass  29: suminf.    0.20366 (1) obj. -34.6616 iterations 2
Cbc0038I Pass  30: suminf.    0.45488 (1) obj. -49.0762 iterations 7
Cbc0038I Pass  31: suminf.    0.09315 (1) obj. -21.6717 iterations 4
Cbc0038I Rounding solution of -24.5 is better than previous of -7

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 21 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -49.8434
Cbc0038I Pass  31: suminf.    0.31098 (1) obj. -70.7348 iterations 0
Cbc0038I Pass  32: suminf.    0.43847 (2) obj. -49.8434 iterations 2
Cbc0038I Pass  33: suminf.    0.27439 (1) obj. -78.6189 iterations 2
Cbc0038I Pass  34: suminf.    0.41158 (2) obj. -49.8434 iterations 2
Cbc0038I Pass  35: suminf.    0.15244 (1) obj. -75.3994 iterations 2
Cbc0038I Pass  36: suminf.    0.55040 (2) obj. -49.8434 iterations 2
Cbc0038I Pass  37: suminf.    0.13415 (1) obj. -89.0915 iterations 2
Cbc0038I Pass  38: suminf.    0.44155 (1) obj. -49.8434 iterations 1
Cbc0038I Pass  39: suminf.    1.06261 (3) obj. -49.8434 iterations 1
Cbc0038I Pass  40: suminf.    0.72677 (2) obj. -49.8434 iterations 2
Cbc0038I Pass  41: suminf.    0.27550 (2) obj. -49.8434 iterations 1
Cbc0038I Pass  42: suminf.    0.55040 (2) obj. -49.8434 iterations 3
Cbc0038I Pass  43: suminf.    0.13415 (1) obj. -89.0915 iterations 2
Cbc0038I Pass  44: suminf.    0.44155 (1) obj. -49.8434 iterations 1
Cbc0038I Pass  45: suminf.    0.58969 (2) obj. -49.8434 iterations 2
Cbc0038I Pass  46: suminf.    0.50336 (2) obj. -49.8434 iterations 1
Cbc0038I Pass  47: suminf.    0.19629 (1) obj. -49.8434 iterations 2
Cbc0038I Pass  48: suminf.    0.06098 (1) obj. -62.3598 iterations 1
Cbc0038I Pass  49: suminf.    1.80141 (7) obj. -49.8434 iterations 8
Cbc0038I Pass  50: suminf.    1.75515 (7) obj. -49.8434 iterations 1
Cbc0038I Pass  51: suminf.    0.25034 (1) obj. -49.8434 iterations 10
Cbc0038I Pass  52: suminf.    0.03049 (1) obj. -70.1799 iterations 1
Cbc0038I Pass  53: suminf.    0.03049 (1) obj. -70.1799 iterations 1
Cbc0038I Pass  54: suminf.    0.03049 (1) obj. -70.1799 iterations 1
Cbc0038I Pass  55: suminf.    1.44839 (6) obj. -49.8434 iterations 9
Cbc0038I Pass  56: suminf.    1.38038 (6) obj. -49.8434 iterations 3
Cbc0038I Pass  57: suminf.    0.37805 (1) obj. -66.5305 iterations 6
Cbc0038I Pass  58: suminf.    0.41428 (2) obj. -49.8434 iterations 2
Cbc0038I Pass  59: suminf.    0.25610 (1) obj. -75.311 iterations 2
Cbc0038I Pass  60: suminf.    0.46107 (2) obj. -49.8434 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 21 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.5 - took 0.04 seconds
Cbc0012I Integer solution of -24.5 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -60.5 found by DiveCoefficient after 1196 iterations and 0 nodes (0.18 seconds)
Cbc0031I 13 added rows had average density of 11.307692
Cbc0013I At root node, 13 cuts changed objective from -149.21755 to -60.874501 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 881 row cuts average 3.7 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 348 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 102 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -60.5, took 1196 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

