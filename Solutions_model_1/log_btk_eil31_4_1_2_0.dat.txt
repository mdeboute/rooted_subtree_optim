Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 25 (-8) columns and 129 (-54) elements
Clp1000I sum of infeasibilities 3.10869e-06 - average 7.22952e-08, 5 fixed columns
Coin0506I Presolve 34 (-9) rows, 20 (-5) columns and 101 (-28) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Coin0511I After Postsolve, objective 77.261892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Clp0000I Optimal - objective value 77.261892
Coin0511I After Postsolve, objective 77.261892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.26189247 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.61757
Cbc0038I Pass   1: suminf.    0.48889 (1) obj. -44.0362 iterations 11
Cbc0038I Solution found of -34.632
Cbc0038I Relaxing continuous gives -34.632
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 21 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -34.632 to -47.005 (0.01 seconds)
Cbc0038I Round again with cutoff of -49.4646
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.83474 (3) obj. -49.4646 iterations 2
Cbc0038I Pass   3: suminf.    0.47448 (2) obj. -49.4646 iterations 5
Cbc0038I Pass   4: suminf.    0.86005 (3) obj. -49.4646 iterations 2
Cbc0038I Pass   5: suminf.    0.47598 (2) obj. -49.4646 iterations 7
Cbc0038I Pass   6: suminf.    0.18038 (2) obj. -49.4646 iterations 1
Cbc0038I Pass   7: suminf.    1.15135 (4) obj. -49.4646 iterations 5
Cbc0038I Pass   8: suminf.    0.98038 (4) obj. -49.4646 iterations 3
Cbc0038I Pass   9: suminf.    0.67108 (2) obj. -49.4646 iterations 6
Cbc0038I Pass  10: suminf.    0.24604 (2) obj. -49.4646 iterations 3
Cbc0038I Pass  11: suminf.    0.84284 (2) obj. -49.4646 iterations 3
Cbc0038I Pass  12: suminf.    0.50358 (2) obj. -52.3578 iterations 2
Cbc0038I Pass  13: suminf.    0.33415 (2) obj. -49.4646 iterations 1
Cbc0038I Pass  14: suminf.    1.16986 (4) obj. -49.4646 iterations 6
Cbc0038I Pass  15: suminf.    0.60787 (4) obj. -49.4646 iterations 4
Cbc0038I Pass  16: suminf.    0.94686 (2) obj. -49.4646 iterations 5
Cbc0038I Pass  17: suminf.    0.28925 (1) obj. -49.4646 iterations 1
Cbc0038I Pass  18: suminf.    0.16842 (1) obj. -53.7032 iterations 1
Cbc0038I Pass  19: suminf.    0.65195 (6) obj. -49.4646 iterations 6
Cbc0038I Pass  20: suminf.    0.52128 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  21: suminf.    0.73913 (3) obj. -49.4646 iterations 4
Cbc0038I Pass  22: suminf.    0.65536 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  23: suminf.    1.25841 (4) obj. -49.4646 iterations 4
Cbc0038I Pass  24: suminf.    0.92191 (3) obj. -49.4646 iterations 4
Cbc0038I Pass  25: suminf.    1.28862 (4) obj. -49.4646 iterations 3
Cbc0038I Pass  26: suminf.    1.00786 (5) obj. -49.4646 iterations 2
Cbc0038I Pass  27: suminf.    0.90129 (3) obj. -49.4646 iterations 7
Cbc0038I Pass  28: suminf.    0.70331 (3) obj. -49.4646 iterations 2
Cbc0038I Pass  29: suminf.    0.09870 (3) obj. -49.4646 iterations 6
Cbc0038I Pass  30: suminf.    0.09870 (3) obj. -49.4646 iterations 0
Cbc0038I Pass  31: suminf.    1.32574 (4) obj. -49.4646 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -47.005 to -48.5299 (0.02 seconds)
Cbc0038I Round again with cutoff of -53.8918
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14680 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  32: suminf.    0.93442 (2) obj. -53.8918 iterations 4
Cbc0038I Pass  33: suminf.    0.93442 (2) obj. -53.8918 iterations 0
Cbc0038I Pass  34: suminf.    0.29389 (2) obj. -53.8918 iterations 2
Cbc0038I Pass  35: suminf.    1.29099 (4) obj. -53.8918 iterations 11
Cbc0038I Pass  36: suminf.    0.24660 (2) obj. -53.8918 iterations 8
Cbc0038I Pass  37: suminf.    0.63740 (2) obj. -53.8918 iterations 4
Cbc0038I Pass  38: suminf.    0.65090 (3) obj. -53.8918 iterations 3
Cbc0038I Pass  39: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  40: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  41: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  42: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  43: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  44: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I Pass  45: suminf.    0.88413 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  46: suminf.    0.65090 (3) obj. -53.8918 iterations 6
Cbc0038I Pass  47: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  48: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  49: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  50: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  51: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  52: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I Pass  53: suminf.    0.88413 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  54: suminf.    0.65090 (3) obj. -53.8918 iterations 6
Cbc0038I Pass  55: suminf.    0.65090 (3) obj. -53.8918 iterations 0
Cbc0038I Pass  56: suminf.    0.80972 (3) obj. -53.8918 iterations 4
Cbc0038I Pass  57: suminf.    0.70328 (3) obj. -53.8918 iterations 1
Cbc0038I Pass  58: suminf.    2.06612 (5) obj. -53.8918 iterations 6
Cbc0038I Pass  59: suminf.    1.11069 (5) obj. -53.8918 iterations 1
Cbc0038I Pass  60: suminf.    0.91453 (4) obj. -53.8918 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5299 - took 0.03 seconds
Cbc0012I Integer solution of -48.529858 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 25 rows 15 columns
Cbc0031I 10 added rows had average density of 19.5
Cbc0013I At root node, 10 cuts changed objective from -71.600286 to -61.165161 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 691 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 408 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -50.766998 found by rounding after 1328 iterations and 1 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -50.766998, took 1684 iterations and 8 nodes (0.17 seconds)
Cbc0032I Strong branching done 74 times (511 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

