Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 33 (-2) columns and 170 (-25) elements
Clp1000I sum of infeasibilities 0.000268505 - average 4.79473e-06, 1 fixed columns
Coin0506I Presolve 55 (-1) rows, 32 (-1) columns and 166 (-4) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Coin0511I After Postsolve, objective 94.30797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Coin0511I After Postsolve, objective 94.30797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.30797019 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.45927
Cbc0038I Solution found of 20.3069
Cbc0038I Relaxing continuous gives 0.54467
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 0.54467 to -40.6408 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.9426
Cbc0038I Pass   1: suminf.    3.07924 (11) obj. -45.9426 iterations 24
Cbc0038I Pass   2: suminf.    0.97617 (4) obj. -45.9426 iterations 12
Cbc0038I Pass   3: suminf.    0.81249 (4) obj. -45.9426 iterations 2
Cbc0038I Pass   4: suminf.    0.53634 (4) obj. -45.9426 iterations 2
Cbc0038I Pass   5: suminf.    0.99469 (3) obj. -45.9426 iterations 2
Cbc0038I Pass   6: suminf.    0.70860 (3) obj. -45.9426 iterations 2
Cbc0038I Pass   7: suminf.    1.10543 (3) obj. -45.9426 iterations 3
Cbc0038I Pass   8: suminf.    1.87342 (6) obj. -45.9426 iterations 6
Cbc0038I Pass   9: suminf.    1.32303 (5) obj. -45.9426 iterations 7
Cbc0038I Pass  10: suminf.    0.57430 (3) obj. -45.9426 iterations 8
Cbc0038I Pass  11: suminf.    0.57430 (3) obj. -45.9426 iterations 0
Cbc0038I Pass  12: suminf.    1.09738 (3) obj. -45.9426 iterations 3
Cbc0038I Pass  13: suminf.    1.04122 (4) obj. -45.9426 iterations 1
Cbc0038I Pass  14: suminf.    0.69371 (2) obj. -45.9426 iterations 7
Cbc0038I Pass  15: suminf.    0.69371 (2) obj. -45.9426 iterations 0
Cbc0038I Pass  16: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  17: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  18: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I Pass  19: suminf.    0.34723 (3) obj. -45.9426 iterations 4
Cbc0038I Pass  20: suminf.    0.94977 (3) obj. -45.9426 iterations 5
Cbc0038I Pass  21: suminf.    0.69371 (2) obj. -45.9426 iterations 1
Cbc0038I Pass  22: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  23: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  24: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I Pass  25: suminf.    0.34723 (3) obj. -45.9426 iterations 4
Cbc0038I Pass  26: suminf.    0.94977 (3) obj. -45.9426 iterations 5
Cbc0038I Pass  27: suminf.    0.69371 (2) obj. -45.9426 iterations 1
Cbc0038I Pass  28: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  29: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  30: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.6408 - took 0.03 seconds
Cbc0012I Integer solution of -40.64084 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0031I 16 added rows had average density of 20.8125
Cbc0013I At root node, 16 cuts changed objective from -93.657503 to -70.577984 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2849 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1259 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.64084 best solution, best possible -70.577984 (1.58 seconds)
Cbc0012I Integer solution of -41.21939 found by DiveCoefficient after 3774 iterations and 3 nodes (1.64 seconds)
Cbc0012I Integer solution of -41.38704 found by DiveCoefficient after 3953 iterations and 4 nodes (1.65 seconds)
Cbc0012I Integer solution of -43.75301 found by DiveCoefficient after 4399 iterations and 14 nodes (1.68 seconds)
Cbc0001I Search completed - best objective -43.75301000000002, took 4452 iterations and 18 nodes (1.68 seconds)
Cbc0032I Strong branching done 234 times (2961 iterations), fathomed 0 nodes and fixed 19 variables
Cbc0035I Maximum depth 5, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.68

