Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 508 (-19) rows, 262 (-2) columns and 1508 (-37) elements
Clp1000I sum of infeasibilities 1.04969e-05 - average 2.06632e-08, 107 fixed columns
Coin0506I Presolve 293 (-215) rows, 154 (-108) columns and 868 (-640) elements
Clp0029I End of values pass after 154 iterations
Clp0014I Perturbing problem by 0.001% of 0.15793613 - largest nonzero change 0 ( 0%) - largest zero change 2.9214168e-05
Clp0000I Optimal - objective value 150.54385
Clp0000I Optimal - objective value 150.54385
Coin0511I After Postsolve, objective 150.54385, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13414487 - largest nonzero change 0 ( 0%) - largest zero change 2.9709448e-05
Clp0000I Optimal - objective value 150.54385
Clp0000I Optimal - objective value 150.54385
Clp0000I Optimal - objective value 150.54385
Coin0511I After Postsolve, objective 150.54385, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.5438519 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 508 rows, 262 columns (261 integer (261 of which binary)) and 1508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 68 integers unsatisfied sum - 12.2675
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.3741 iterations 236
Cbc0038I Solution found of -1.3741
Cbc0038I Relaxing continuous gives -1.3741
Cbc0038I Rounding solution of -23.53 is better than previous of -1.3741

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 127 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -23.53 to -73.3693 (0.15 seconds)
Cbc0038I Round again with cutoff of -81.0868
Cbc0038I Pass   2: suminf.    3.10829 (9) obj. -81.0868 iterations 27
Cbc0038I Pass   3: suminf.    3.09939 (9) obj. -81.0868 iterations 2
Cbc0038I Pass   4: suminf.    2.27152 (6) obj. -81.0868 iterations 11
Cbc0038I Pass   5: suminf.    1.80357 (6) obj. -81.0868 iterations 11
Cbc0038I Pass   6: suminf.    1.37529 (6) obj. -81.0868 iterations 2
Cbc0038I Pass   7: suminf.    1.33109 (4) obj. -81.0868 iterations 16
Cbc0038I Pass   8: suminf.    1.05272 (4) obj. -81.0868 iterations 9
Cbc0038I Pass   9: suminf.    1.73099 (6) obj. -81.0868 iterations 15
Cbc0038I Pass  10: suminf.    1.25472 (6) obj. -81.0868 iterations 5
Cbc0038I Pass  11: suminf.    1.25472 (6) obj. -81.0868 iterations 0
Cbc0038I Pass  12: suminf.    2.07933 (6) obj. -81.0868 iterations 12
Cbc0038I Pass  13: suminf.    1.36264 (7) obj. -81.0868 iterations 12
Cbc0038I Pass  14: suminf.    5.47801 (20) obj. -81.0868 iterations 67
Cbc0038I Pass  15: suminf.    3.10061 (13) obj. -81.0868 iterations 28
Cbc0038I Pass  16: suminf.    3.10061 (13) obj. -81.0868 iterations 0
Cbc0038I Pass  17: suminf.    2.01081 (8) obj. -81.0868 iterations 47
Cbc0038I Pass  18: suminf.    1.98362 (7) obj. -81.0868 iterations 1
Cbc0038I Pass  19: suminf.    1.91507 (5) obj. -81.0868 iterations 8
Cbc0038I Pass  20: suminf.    1.84659 (6) obj. -81.0868 iterations 1
Cbc0038I Pass  21: suminf.    1.40801 (4) obj. -81.0868 iterations 9
Cbc0038I Pass  22: suminf.    0.99416 (6) obj. -81.0868 iterations 5
Cbc0038I Pass  23: suminf.    4.98433 (14) obj. -81.0868 iterations 49
Cbc0038I Pass  24: suminf.    2.60216 (8) obj. -81.0868 iterations 54
Cbc0038I Pass  25: suminf.    2.08004 (6) obj. -81.0868 iterations 9
Cbc0038I Pass  26: suminf.    1.35214 (7) obj. -81.0868 iterations 9
Cbc0038I Pass  27: suminf.    1.24122 (6) obj. -81.0868 iterations 1
Cbc0038I Pass  28: suminf.    4.05915 (13) obj. -81.0868 iterations 58
Cbc0038I Pass  29: suminf.    2.23554 (9) obj. -81.0868 iterations 27
Cbc0038I Pass  30: suminf.    1.56524 (4) obj. -81.0868 iterations 19
Cbc0038I Pass  31: suminf.    0.88609 (4) obj. -81.0868 iterations 7
Cbc0038I Rounding solution of -75.3254 is better than previous of -73.3693

Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 162 rows 87 columns
Cbc0038I Mini branch and bound improved solution from -75.3254 to -83.0035 (0.33 seconds)
Cbc0038I Round again with cutoff of -96.5116
Cbc0038I Pass  31: suminf.    2.70567 (10) obj. -96.5116 iterations 1
Cbc0038I Pass  32: suminf.    1.70951 (6) obj. -96.5116 iterations 20
Cbc0038I Pass  33: suminf.    2.52343 (11) obj. -96.5116 iterations 17
Cbc0038I Pass  34: suminf.    2.52343 (11) obj. -96.5116 iterations 1
Cbc0038I Pass  35: suminf.    2.91344 (10) obj. -96.5116 iterations 24
Cbc0038I Pass  36: suminf.    2.89633 (9) obj. -96.5116 iterations 2
Cbc0038I Pass  37: suminf.    2.24448 (9) obj. -96.5116 iterations 25
Cbc0038I Pass  38: suminf.    1.95269 (7) obj. -96.5116 iterations 8
Cbc0038I Pass  39: suminf.    2.03499 (7) obj. -96.5116 iterations 12
Cbc0038I Pass  40: suminf.    1.99934 (8) obj. -96.5116 iterations 8
Cbc0038I Pass  41: suminf.    3.21351 (9) obj. -96.5116 iterations 15
Cbc0038I Pass  42: suminf.    2.44412 (8) obj. -96.5116 iterations 3
Cbc0038I Pass  43: suminf.    2.01589 (6) obj. -96.5116 iterations 7
Cbc0038I Pass  44: suminf.    1.96831 (6) obj. -96.5116 iterations 6
Cbc0038I Pass  45: suminf.    1.98097 (7) obj. -96.5116 iterations 7
Cbc0038I Pass  46: suminf.    1.95269 (7) obj. -96.5116 iterations 9
Cbc0038I Pass  47: suminf.    2.03499 (7) obj. -96.5116 iterations 13
Cbc0038I Pass  48: suminf.    1.99934 (8) obj. -96.5116 iterations 9
Cbc0038I Pass  49: suminf.    3.21351 (9) obj. -96.5116 iterations 16
Cbc0038I Pass  50: suminf.    2.44412 (8) obj. -96.5116 iterations 3
Cbc0038I Pass  51: suminf.    2.01589 (6) obj. -96.5116 iterations 7
Cbc0038I Pass  52: suminf.    1.96831 (6) obj. -96.5116 iterations 6
Cbc0038I Pass  53: suminf.    1.98097 (7) obj. -96.5116 iterations 7
Cbc0038I Pass  54: suminf.    1.95269 (7) obj. -96.5116 iterations 10
Cbc0038I Pass  55: suminf.    2.03499 (7) obj. -96.5116 iterations 12
Cbc0038I Pass  56: suminf.    1.99934 (8) obj. -96.5116 iterations 8
Cbc0038I Pass  57: suminf.    3.21351 (9) obj. -96.5116 iterations 14
Cbc0038I Pass  58: suminf.    2.44412 (8) obj. -96.5116 iterations 3
Cbc0038I Pass  59: suminf.    2.01589 (6) obj. -96.5116 iterations 7
Cbc0038I Pass  60: suminf.    1.96831 (6) obj. -96.5116 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 133 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -83.0035 to -83.3477 (0.50 seconds)
Cbc0038I Round again with cutoff of -112.721
Cbc0038I Pass  60: suminf.    4.78082 (14) obj. -112.721 iterations 7
Cbc0038I Pass  61: suminf.    2.75046 (10) obj. -112.721 iterations 25
Cbc0038I Pass  62: suminf.    2.71223 (9) obj. -112.721 iterations 1
Cbc0038I Pass  63: suminf.    3.92068 (12) obj. -112.721 iterations 18
Cbc0038I Pass  64: suminf.    3.37784 (10) obj. -112.721 iterations 12
Cbc0038I Pass  65: suminf.    3.37305 (9) obj. -112.721 iterations 8
Cbc0038I Pass  66: suminf.    2.68978 (10) obj. -112.721 iterations 10
Cbc0038I Pass  67: suminf.    2.66610 (10) obj. -112.721 iterations 2
Cbc0038I Pass  68: suminf.    4.07033 (13) obj. -112.721 iterations 15
Cbc0038I Pass  69: suminf.    3.22255 (12) obj. -112.721 iterations 11
Cbc0038I Pass  70: suminf.    2.97393 (10) obj. -112.721 iterations 16
Cbc0038I Pass  71: suminf.    4.00383 (10) obj. -112.721 iterations 12
Cbc0038I Pass  72: suminf.    3.27385 (12) obj. -112.721 iterations 18
Cbc0038I Pass  73: suminf.    7.33814 (24) obj. -112.721 iterations 74
Cbc0038I Pass  74: suminf.    4.51887 (13) obj. -112.721 iterations 65
Cbc0038I Pass  75: suminf.    4.36205 (16) obj. -112.721 iterations 11
Cbc0038I Pass  76: suminf.    4.21524 (12) obj. -112.721 iterations 21
Cbc0038I Pass  77: suminf.    3.90791 (11) obj. -112.721 iterations 10
Cbc0038I Pass  78: suminf.    3.24925 (13) obj. -112.721 iterations 11
Cbc0038I Pass  79: suminf.    2.98804 (10) obj. -112.721 iterations 14
Cbc0038I Pass  80: suminf.    3.97750 (10) obj. -112.721 iterations 10
Cbc0038I Pass  81: suminf.    3.24925 (13) obj. -112.721 iterations 16
Cbc0038I Pass  82: suminf.    6.98750 (24) obj. -112.721 iterations 55
Cbc0038I Pass  83: suminf.    3.94141 (14) obj. -112.721 iterations 59
Cbc0038I Pass  84: suminf.    3.86161 (15) obj. -112.721 iterations 8
Cbc0038I Pass  85: suminf.    4.05840 (11) obj. -112.721 iterations 15
Cbc0038I Pass  86: suminf.    3.32882 (12) obj. -112.721 iterations 19
Cbc0038I Pass  87: suminf.    3.07554 (10) obj. -112.721 iterations 3
Cbc0038I Pass  88: suminf.    2.72922 (9) obj. -112.721 iterations 15
Cbc0038I Pass  89: suminf.    3.41857 (9) obj. -112.721 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 172 rows 92 columns
Cbc0038I Mini branch and bound did not improve solution (0.70 seconds)
Cbc0038I After 0.70 seconds - Feasibility pump exiting with objective of -83.3477 - took 0.65 seconds
Cbc0012I Integer solution of -83.347672 found by feasibility pump after 0 iterations and 0 nodes (0.70 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 127 rows 69 columns
Cbc0012I Integer solution of -83.49622 found by RINS after 0 iterations and 0 nodes (0.84 seconds)
Cbc0031I 54 added rows had average density of 167.81481
Cbc0013I At root node, 54 cuts changed objective from -150.54385 to -136.25654 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 40232 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2619 row cuts average 256.9 elements, 0 column cuts (0 active)  in 1.210 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.668 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 229 row cuts average 252.3 elements, 0 column cuts (0 active)  in 0.425 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -83.49622 best solution, best possible -136.25654 (13.80 seconds)
Cbc0010I After 4 nodes, 5 on tree, -83.49622 best solution, best possible -136.25654 (14.62 seconds)
Cbc0010I After 10 nodes, 9 on tree, -83.49622 best solution, best possible -136.25654 (15.33 seconds)
Cbc0010I After 25 nodes, 10 on tree, -83.49622 best solution, best possible -136.25654 (16.07 seconds)
Cbc0012I Integer solution of -83.628652 found by rounding after 23271 iterations and 30 nodes (16.30 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 17 rows 14 columns
Cbc0012I Integer solution of -85.766502 found by rounding after 24309 iterations and 43 nodes (16.72 seconds)
Cbc0010I After 46 nodes, 12 on tree, -85.766502 best solution, best possible -136.25654 (16.78 seconds)
Cbc0012I Integer solution of -88.646542 found by rounding after 25243 iterations and 78 nodes (17.03 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 7 rows 8 columns
Cbc0012I Integer solution of -89.0131 found by RINS after 26060 iterations and 91 nodes (17.34 seconds)
Cbc0012I Integer solution of -90.202412 found by rounding after 26474 iterations and 96 nodes (17.47 seconds)
Cbc0010I After 97 nodes, 23 on tree, -90.202412 best solution, best possible -136.25654 (17.49 seconds)
Cbc0010I After 188 nodes, 12 on tree, -90.202412 best solution, best possible -136.25654 (18.20 seconds)
Cbc0010I After 233 nodes, 11 on tree, -90.202412 best solution, best possible -136.25654 (18.93 seconds)
Cbc0010I After 288 nodes, 10 on tree, -90.202412 best solution, best possible -136.25654 (19.64 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 103 rows 56 columns
Cbc0001I Search completed - best objective -90.20241200000001, took 35924 iterations and 308 nodes (19.93 seconds)
Cbc0032I Strong branching done 2600 times (70009 iterations), fathomed 37 nodes and fixed 156 variables
Cbc0035I Maximum depth 55, 2254 variables fixed on reduced cost
Total time (CPU seconds):       19.13   (Wallclock seconds):       20.03

