Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 94 (-9) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 9.89363e-06 - average 5.55822e-08, 22 fixed columns
Coin0506I Presolve 130 (-48) rows, 72 (-22) columns and 398 (-140) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.1857321 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Coin0511I After Postsolve, objective 77.227371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Coin0511I After Postsolve, objective 77.227371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.22737069 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 94 columns (93 integer (93 of which binary)) and 538 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.991%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 10.4385
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.19218 iterations 57
Cbc0038I Solution found of -9.19218
Cbc0038I Relaxing continuous gives -9.19218
Cbc0038I Rounding solution of -17.9507 is better than previous of -9.19218

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 94 columns, reduced to 75 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.9507 to -46.1856 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.2898
Cbc0038I Pass   2: suminf.    4.34827 (14) obj. -49.2898 iterations 34
Cbc0038I Pass   3: suminf.    3.57717 (11) obj. -49.2898 iterations 5
Cbc0038I Pass   4: suminf.    2.43153 (7) obj. -49.2898 iterations 20
Cbc0038I Pass   5: suminf.    2.43153 (7) obj. -49.2898 iterations 0
Cbc0038I Pass   6: suminf.    2.35308 (7) obj. -49.2898 iterations 12
Cbc0038I Pass   7: suminf.    1.31686 (4) obj. -49.2898 iterations 10
Cbc0038I Pass   8: suminf.    1.23608 (3) obj. -49.2898 iterations 4
Cbc0038I Pass   9: suminf.    1.23608 (3) obj. -49.2898 iterations 0
Cbc0038I Pass  10: suminf.    0.63463 (2) obj. -49.2898 iterations 4
Cbc0038I Pass  11: suminf.    0.57292 (3) obj. -49.2898 iterations 1
Cbc0038I Pass  12: suminf.    2.91081 (12) obj. -49.2898 iterations 22
Cbc0038I Pass  13: suminf.    2.29248 (8) obj. -49.2898 iterations 16
Cbc0038I Pass  14: suminf.    1.88118 (7) obj. -49.2898 iterations 2
Cbc0038I Pass  15: suminf.    1.21860 (5) obj. -49.2898 iterations 12
Cbc0038I Pass  16: suminf.    1.90735 (6) obj. -49.2898 iterations 8
Cbc0038I Pass  17: suminf.    1.90735 (6) obj. -49.2898 iterations 0
Cbc0038I Pass  18: suminf.    1.87254 (6) obj. -49.2898 iterations 5
Cbc0038I Pass  19: suminf.    1.66071 (6) obj. -49.2898 iterations 3
Cbc0038I Pass  20: suminf.    2.88134 (11) obj. -49.2898 iterations 17
Cbc0038I Pass  21: suminf.    2.88134 (11) obj. -49.2898 iterations 0
Cbc0038I Pass  22: suminf.    3.32740 (9) obj. -49.2898 iterations 10
Cbc0038I Pass  23: suminf.    2.11116 (8) obj. -49.2898 iterations 14
Cbc0038I Pass  24: suminf.    2.10596 (6) obj. -49.2898 iterations 1
Cbc0038I Pass  25: suminf.    1.72028 (7) obj. -49.2898 iterations 12
Cbc0038I Pass  26: suminf.    1.72028 (7) obj. -49.2898 iterations 0
Cbc0038I Pass  27: suminf.    2.39376 (7) obj. -49.2898 iterations 15
Cbc0038I Pass  28: suminf.    2.39376 (7) obj. -49.2898 iterations 2
Cbc0038I Pass  29: suminf.    2.39195 (8) obj. -49.2898 iterations 6
Cbc0038I Pass  30: suminf.    2.36511 (10) obj. -49.2898 iterations 2
Cbc0038I Pass  31: suminf.    2.05710 (7) obj. -49.2898 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 94 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -46.1856 - took 0.07 seconds
Cbc0012I Integer solution of -46.185563 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 178 rows 94 columns, reduced to 75 rows 43 columns
Cbc0031I 17 added rows had average density of 51.529412
Cbc0013I At root node, 17 cuts changed objective from -77.227371 to -60.729898 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5014 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 823 row cuts average 94.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 5 nodes, 6 on tree, -46.185563 best solution, best possible -60.729898 (0.67 seconds)
Cbc0001I Search completed - best objective -46.185563, took 4416 iterations and 48 nodes (0.73 seconds)
Cbc0032I Strong branching done 412 times (8142 iterations), fathomed 5 nodes and fixed 20 variables
Cbc0035I Maximum depth 15, 163 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.74

