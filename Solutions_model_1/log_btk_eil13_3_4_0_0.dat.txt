Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 58 (-17) elements
Clp1000I sum of infeasibilities 0 - average 0, 2 fixed columns
Coin0506I Presolve 17 (-3) rows, 11 (-2) columns and 48 (-10) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 48.700052
Clp0000I Optimal - objective value 48.700052
Coin0511I After Postsolve, objective 48.700052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.700052
Clp0000I Optimal - objective value 48.700052
Clp0000I Optimal - objective value 48.700052
Coin0511I After Postsolve, objective 48.700052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.70005189 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.832%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.60033
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.3687 iterations 7
Cbc0038I Solution found of -20.3687
Cbc0038I Relaxing continuous gives -20.3687
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -20.3687 to -20.6259 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.3817
Cbc0038I Pass   2: suminf.    0.19082 (1) obj. -23.3817 iterations 1
Cbc0038I Pass   3: suminf.    0.26348 (1) obj. -23.3817 iterations 1
Cbc0038I Pass   4: suminf.    0.66012 (3) obj. -23.3817 iterations 2
Cbc0038I Pass   5: suminf.    1.12821 (4) obj. -23.3817 iterations 1
Cbc0038I Pass   6: suminf.    1.52421 (4) obj. -23.3817 iterations 2
Cbc0038I Pass   7: suminf.    0.95644 (3) obj. -23.3817 iterations 3
Cbc0038I Pass   8: suminf.    0.95644 (3) obj. -23.3817 iterations 0
Cbc0038I Pass   9: suminf.    0.19082 (1) obj. -23.3817 iterations 4
Cbc0038I Pass  10: suminf.    0.19082 (1) obj. -23.3817 iterations 0
Cbc0038I Pass  11: suminf.    0.26348 (1) obj. -23.3817 iterations 1
Cbc0038I Pass  12: suminf.    1.42732 (4) obj. -23.3817 iterations 7
Cbc0038I Pass  13: suminf.    0.45088 (2) obj. -23.3817 iterations 6
Cbc0038I Pass  14: suminf.    0.37464 (1) obj. -23.3817 iterations 1
Cbc0038I Pass  15: suminf.    0.31250 (1) obj. -23.3817 iterations 2
Cbc0038I Pass  16: suminf.    0.14100 (1) obj. -23.3817 iterations 1
Cbc0038I Pass  17: suminf.    0.42700 (1) obj. -23.3817 iterations 3
Cbc0038I Pass  18: suminf.    0.17453 (1) obj. -23.3817 iterations 2
Cbc0038I Pass  19: suminf.    0.41176 (1) obj. -23.3817 iterations 1
Cbc0038I Pass  20: suminf.    0.41176 (1) obj. -23.3817 iterations 1
Cbc0038I Pass  21: suminf.    0.41176 (1) obj. -23.3817 iterations 3
Cbc0038I Pass  22: suminf.    0.44491 (4) obj. -23.3817 iterations 5
Cbc0038I Pass  23: suminf.    0.42078 (3) obj. -23.3817 iterations 2
Cbc0038I Pass  24: suminf.    0.63488 (3) obj. -23.3817 iterations 4
Cbc0038I Pass  25: suminf.    0.59105 (3) obj. -23.3817 iterations 2
Cbc0038I Pass  26: suminf.    0.44303 (3) obj. -23.3817 iterations 2
Cbc0038I Pass  27: suminf.    1.01126 (3) obj. -23.3817 iterations 8
Cbc0038I Pass  28: suminf.    0.77499 (2) obj. -23.3817 iterations 1
Cbc0038I Pass  29: suminf.    0.37464 (1) obj. -23.3817 iterations 3
Cbc0038I Pass  30: suminf.    0.31250 (1) obj. -23.3817 iterations 2
Cbc0038I Pass  31: suminf.    0.14100 (1) obj. -23.3817 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -20.6259 - took 0.01 seconds
Cbc0012I Integer solution of -20.6259 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 13 rows 9 columns
Cbc0031I 3 added rows had average density of 6.6666667
Cbc0013I At root node, 3 cuts changed objective from -48.18277 to -20.747458 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 126 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 225 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 58 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20.6259, took 611 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 10 times (22 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.05

