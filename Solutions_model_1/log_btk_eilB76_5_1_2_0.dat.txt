Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 71 (-7) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 3.57992e-05 - average 2.77513e-07, 17 fixed columns
Coin0506I Presolve 91 (-38) rows, 52 (-19) columns and 278 (-114) elements
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Coin0511I After Postsolve, objective 73.00908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2268098 - largest nonzero change 0 ( 0%) - largest zero change 2.9782016e-05
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Clp0000I Optimal - objective value 73.00908
Coin0511I After Postsolve, objective 73.00908, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.00907959 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 71 columns (70 integer (70 of which binary)) and 458 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.610%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 4.99425
Cbc0038I Solution found of -16.9647
Cbc0038I Relaxing continuous gives -25.2419
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 62 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -25.2419 to -33.6659 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.4695
Cbc0038I Pass   1: suminf.    1.22797 (34) obj. -37.4695 iterations 40
Cbc0038I Pass   2: suminf.    1.20494 (5) obj. -37.4695 iterations 40
Cbc0038I Pass   3: suminf.    1.04069 (5) obj. -37.4695 iterations 3
Cbc0038I Pass   4: suminf.    0.69263 (3) obj. -37.4695 iterations 6
Cbc0038I Pass   5: suminf.    0.51760 (3) obj. -37.4695 iterations 3
Cbc0038I Pass   6: suminf.    1.09177 (4) obj. -37.4695 iterations 9
Cbc0038I Pass   7: suminf.    0.49110 (3) obj. -37.4695 iterations 3
Cbc0038I Pass   8: suminf.    0.49110 (3) obj. -37.4695 iterations 0
Cbc0038I Pass   9: suminf.    0.76887 (3) obj. -37.4695 iterations 7
Cbc0038I Pass  10: suminf.    0.74779 (3) obj. -37.4695 iterations 4
Cbc0038I Pass  11: suminf.    0.49967 (3) obj. -37.4695 iterations 7
Cbc0038I Pass  12: suminf.    1.52978 (7) obj. -37.4695 iterations 13
Cbc0038I Pass  13: suminf.    0.80497 (5) obj. -37.4695 iterations 12
Cbc0038I Pass  14: suminf.    1.49151 (4) obj. -37.4695 iterations 11
Cbc0038I Pass  15: suminf.    0.70111 (2) obj. -37.4695 iterations 6
Cbc0038I Pass  16: suminf.    0.70111 (2) obj. -37.4695 iterations 0
Cbc0038I Pass  17: suminf.    0.91991 (2) obj. -37.4695 iterations 4
Cbc0038I Pass  18: suminf.    0.65624 (2) obj. -37.4695 iterations 5
Cbc0038I Pass  19: suminf.    0.63195 (3) obj. -37.4695 iterations 14
Cbc0038I Pass  20: suminf.    0.63195 (3) obj. -37.4695 iterations 4
Cbc0038I Pass  21: suminf.    0.88521 (8) obj. -37.4695 iterations 14
Cbc0038I Pass  22: suminf.    0.61710 (7) obj. -37.4695 iterations 2
Cbc0038I Pass  23: suminf.    1.54275 (4) obj. -37.4695 iterations 8
Cbc0038I Pass  24: suminf.    0.85199 (4) obj. -37.4695 iterations 5
Cbc0038I Pass  25: suminf.    0.58621 (3) obj. -37.4695 iterations 2
Cbc0038I Pass  26: suminf.    0.85660 (4) obj. -37.4695 iterations 5
Cbc0038I Pass  27: suminf.    0.70370 (3) obj. -37.4695 iterations 5
Cbc0038I Pass  28: suminf.    0.70370 (3) obj. -37.4695 iterations 0
Cbc0038I Pass  29: suminf.    0.98580 (3) obj. -37.4695 iterations 6
Cbc0038I Pass  30: suminf.    0.30033 (2) obj. -37.4695 iterations 2
Cbc0038I Rounding solution of -34.3821 is better than previous of -33.6659

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -44.316
Cbc0038I Pass  30: suminf.    1.91553 (34) obj. -44.316 iterations 0
Cbc0038I Pass  31: suminf.    0.88265 (4) obj. -44.316 iterations 37
Cbc0038I Pass  32: suminf.    0.88265 (4) obj. -44.316 iterations 1
Cbc0038I Pass  33: suminf.    1.63577 (10) obj. -44.316 iterations 13
Cbc0038I Pass  34: suminf.    1.33812 (7) obj. -44.316 iterations 4
Cbc0038I Pass  35: suminf.    1.75899 (6) obj. -44.316 iterations 8
Cbc0038I Pass  36: suminf.    0.76385 (3) obj. -44.316 iterations 3
Cbc0038I Pass  37: suminf.    0.57520 (3) obj. -44.316 iterations 4
Cbc0038I Pass  38: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  39: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  40: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  41: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I Pass  42: suminf.    2.11963 (5) obj. -44.316 iterations 10
Cbc0038I Pass  43: suminf.    1.35415 (4) obj. -44.316 iterations 3
Cbc0038I Pass  44: suminf.    1.35415 (4) obj. -44.316 iterations 0
Cbc0038I Pass  45: suminf.    0.64834 (3) obj. -44.316 iterations 5
Cbc0038I Pass  46: suminf.    0.57520 (3) obj. -44.316 iterations 2
Cbc0038I Pass  47: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  48: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  49: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  50: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I Pass  51: suminf.    2.11963 (5) obj. -44.316 iterations 10
Cbc0038I Pass  52: suminf.    1.35415 (4) obj. -44.316 iterations 3
Cbc0038I Pass  53: suminf.    1.35415 (4) obj. -44.316 iterations 0
Cbc0038I Pass  54: suminf.    0.64834 (3) obj. -44.316 iterations 5
Cbc0038I Pass  55: suminf.    0.57520 (3) obj. -44.316 iterations 2
Cbc0038I Pass  56: suminf.    1.28814 (5) obj. -44.316 iterations 8
Cbc0038I Pass  57: suminf.    1.28443 (5) obj. -44.316 iterations 1
Cbc0038I Pass  58: suminf.    1.45635 (5) obj. -44.316 iterations 8
Cbc0038I Pass  59: suminf.    1.37138 (7) obj. -44.316 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -34.3821 - took 0.08 seconds
Cbc0012I Integer solution of -34.3821 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 126 rows 71 columns, reduced to 63 rows 36 columns
Cbc0031I 19 added rows had average density of 53.263158
Cbc0013I At root node, 19 cuts changed objective from -71.701636 to -61.952612 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5985 row cuts average 5.0 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1268 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -34.3821 best solution, best possible -61.952612 (0.69 seconds)
Cbc0001I Search completed - best objective -34.38209999999999, took 5641 iterations and 34 nodes (0.82 seconds)
Cbc0032I Strong branching done 406 times (6636 iterations), fathomed 5 nodes and fixed 24 variables
Cbc0035I Maximum depth 10, 113 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.83

