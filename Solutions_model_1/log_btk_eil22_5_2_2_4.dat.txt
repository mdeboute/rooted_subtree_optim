Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-8) rows, 22 (-2) columns and 114 (-15) elements
Clp1000I sum of infeasibilities 1.40151e-05 - average 3.5936e-07, 0 fixed columns
Coin0506I Presolve 39 (0) rows, 22 (0) columns and 114 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 63.201712
Clp0000I Optimal - objective value 63.201712
Coin0511I After Postsolve, objective 63.201712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.201712
Clp0000I Optimal - objective value 63.201712
Clp0000I Optimal - objective value 63.201712
Coin0511I After Postsolve, objective 63.201712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.2017119 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.871
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.4525 iterations 16
Cbc0038I Solution found of 15.4525
Cbc0038I Relaxing continuous gives 15.4525
Cbc0038I Rounding solution of 2.28112 is better than previous of 15.4525

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 2.28112 to -18.7796 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.2219
Cbc0038I Pass   2: suminf.    1.54200 (4) obj. -23.2219 iterations 5
Cbc0038I Pass   3: suminf.    0.91730 (3) obj. -23.2219 iterations 1
Cbc0038I Pass   4: suminf.    0.79754 (2) obj. -23.2219 iterations 1
Cbc0038I Pass   5: suminf.    0.23378 (3) obj. -23.2219 iterations 4
Cbc0038I Pass   6: suminf.    0.91730 (3) obj. -23.2219 iterations 5
Cbc0038I Pass   7: suminf.    0.88929 (6) obj. -23.2219 iterations 6
Cbc0038I Pass   8: suminf.    0.76382 (5) obj. -23.2219 iterations 3
Cbc0038I Pass   9: suminf.    1.69514 (5) obj. -23.2219 iterations 7
Cbc0038I Pass  10: suminf.    1.67156 (6) obj. -23.2219 iterations 5
Cbc0038I Pass  11: suminf.    0.85628 (4) obj. -23.2219 iterations 4
Cbc0038I Pass  12: suminf.    0.78620 (4) obj. -23.2219 iterations 2
Cbc0038I Pass  13: suminf.    0.91730 (3) obj. -23.2219 iterations 3
Cbc0038I Pass  14: suminf.    0.79754 (2) obj. -23.2219 iterations 1
Cbc0038I Pass  15: suminf.    0.23378 (3) obj. -23.2219 iterations 4
Cbc0038I Pass  16: suminf.    0.91730 (3) obj. -23.2219 iterations 5
Cbc0038I Pass  17: suminf.    1.75566 (8) obj. -23.2219 iterations 10
Cbc0038I Pass  18: suminf.    1.52435 (5) obj. -23.2219 iterations 5
Cbc0038I Pass  19: suminf.    1.09645 (3) obj. -23.2219 iterations 11
Cbc0038I Pass  20: suminf.    0.50964 (2) obj. -23.2219 iterations 1
Cbc0038I Pass  21: suminf.    0.70714 (2) obj. -23.2219 iterations 3
Cbc0038I Pass  22: suminf.    0.39113 (1) obj. -23.2219 iterations 2
Cbc0038I Pass  23: suminf.    1.10338 (3) obj. -23.2219 iterations 2
Cbc0038I Pass  24: suminf.    3.11314 (8) obj. -23.2219 iterations 6
Cbc0038I Pass  25: suminf.    1.94770 (9) obj. -23.2219 iterations 6
Cbc0038I Pass  26: suminf.    0.55750 (4) obj. -23.2219 iterations 8
Cbc0038I Pass  27: suminf.    0.55750 (4) obj. -23.2219 iterations 1
Cbc0038I Pass  28: suminf.    0.64396 (2) obj. -23.2219 iterations 7
Cbc0038I Pass  29: suminf.    0.50964 (2) obj. -23.2219 iterations 5
Cbc0038I Pass  30: suminf.    0.70714 (2) obj. -23.2219 iterations 3
Cbc0038I Pass  31: suminf.    0.39113 (1) obj. -23.2219 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -18.7796 - took 0.03 seconds
Cbc0012I Integer solution of -18.77955 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 22 columns, reduced to 25 rows 16 columns
Cbc0031I 14 added rows had average density of 17.142857
Cbc0013I At root node, 14 cuts changed objective from -63.201712 to -37.449244 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1512 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 596 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -18.77955, took 2424 iterations and 6 nodes (0.19 seconds)
Cbc0032I Strong branching done 64 times (808 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

