Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-6) rows, 30 (-2) columns and 166 (-11) elements
Clp1000I sum of infeasibilities 0.00331025 - average 5.80745e-05, 3 fixed columns
Coin0506I Presolve 45 (-12) rows, 27 (-3) columns and 136 (-30) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Coin0511I After Postsolve, objective 75.308176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Clp0000I Optimal - objective value 75.308176
Coin0511I After Postsolve, objective 75.308176, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.30817561 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 30 columns (29 integer (29 of which binary)) and 169 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.17617
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.3071 iterations 24
Cbc0038I Solution found of -21.3071
Cbc0038I Relaxing continuous gives -21.3071
Cbc0038I Rounding solution of -24.4518 is better than previous of -21.3071

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 30 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -24.4518 to -27.1612 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.976
Cbc0038I Pass   2: suminf.    0.51328 (3) obj. -31.976 iterations 5
Cbc0038I Pass   3: suminf.    0.49105 (2) obj. -31.976 iterations 9
Cbc0038I Pass   4: suminf.    0.83372 (2) obj. -31.976 iterations 1
Cbc0038I Pass   5: suminf.    0.75766 (6) obj. -31.976 iterations 4
Cbc0038I Pass   6: suminf.    1.24866 (4) obj. -31.976 iterations 9
Cbc0038I Pass   7: suminf.    1.15925 (4) obj. -31.976 iterations 1
Cbc0038I Pass   8: suminf.    1.15887 (5) obj. -31.976 iterations 6
Cbc0038I Pass   9: suminf.    1.45187 (5) obj. -31.976 iterations 7
Cbc0038I Pass  10: suminf.    1.37839 (5) obj. -31.976 iterations 5
Cbc0038I Pass  11: suminf.    1.31468 (4) obj. -31.976 iterations 1
Cbc0038I Pass  12: suminf.    1.31570 (9) obj. -31.976 iterations 11
Cbc0038I Pass  13: suminf.    1.07698 (4) obj. -31.976 iterations 4
Cbc0038I Pass  14: suminf.    1.32623 (5) obj. -31.976 iterations 9
Cbc0038I Pass  15: suminf.    1.43842 (5) obj. -31.976 iterations 7
Cbc0038I Pass  16: suminf.    1.36766 (5) obj. -31.976 iterations 5
Cbc0038I Pass  17: suminf.    1.30395 (4) obj. -31.976 iterations 1
Cbc0038I Pass  18: suminf.    1.37839 (5) obj. -31.976 iterations 2
Cbc0038I Pass  19: suminf.    1.31468 (4) obj. -31.976 iterations 1
Cbc0038I Pass  20: suminf.    1.45187 (5) obj. -31.976 iterations 5
Cbc0038I Pass  21: suminf.    1.37839 (5) obj. -31.976 iterations 5
Cbc0038I Pass  22: suminf.    2.36834 (6) obj. -31.976 iterations 17
Cbc0038I Pass  23: suminf.    1.30136 (5) obj. -31.976 iterations 6
Cbc0038I Pass  24: suminf.    0.99294 (3) obj. -31.976 iterations 5
Cbc0038I Pass  25: suminf.    0.72850 (3) obj. -31.976 iterations 1
Cbc0038I Pass  26: suminf.    1.14428 (3) obj. -31.976 iterations 6
Cbc0038I Pass  27: suminf.    0.98383 (5) obj. -31.976 iterations 2
Cbc0038I Pass  28: suminf.    0.99395 (3) obj. -31.976 iterations 5
Cbc0038I Pass  29: suminf.    1.14526 (5) obj. -31.976 iterations 5
Cbc0038I Pass  30: suminf.    1.43842 (5) obj. -31.976 iterations 7
Cbc0038I Pass  31: suminf.    1.36766 (5) obj. -31.976 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 30 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.1612 - took 0.05 seconds
Cbc0012I Integer solution of -27.161189 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 57 rows 30 columns, reduced to 41 rows 24 columns
Cbc0031I 13 added rows had average density of 26.153846
Cbc0013I At root node, 13 cuts changed objective from -75.308176 to -44.716537 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2736 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 848 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -27.962539 found by DiveCoefficient after 3065 iterations and 5 nodes (0.29 seconds)
Cbc0016I Integer solution of -28.942619 found by strong branching after 3112 iterations and 5 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -28.94261899999999, took 3305 iterations and 10 nodes (0.30 seconds)
Cbc0032I Strong branching done 172 times (2096 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

