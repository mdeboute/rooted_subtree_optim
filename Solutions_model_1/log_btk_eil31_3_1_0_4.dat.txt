Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-32) rows, 19 (-14) columns and 97 (-86) elements
Clp1000I sum of infeasibilities 5.96069e-06 - average 1.80627e-07, 11 fixed columns
Coin0506I Presolve 13 (-20) rows, 8 (-11) columns and 35 (-62) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 3527.3044
Clp0000I Optimal - objective value 3527.3044
Coin0511I After Postsolve, objective 3527.3044, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3527.3044
Clp0000I Optimal - objective value 3527.3044
Clp0000I Optimal - objective value 3527.3044
Coin0511I After Postsolve, objective 3527.3044, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3527.304366 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 96 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.827%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.35225
Cbc0038I Pass   1: suminf.    0.81165 (2) obj. -3480.59 iterations 1
Cbc0038I Solution found of -1715.2
Cbc0038I Relaxing continuous gives -1715.2
Cbc0038I Rounding solution of -2125.5 is better than previous of -1715.2

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2264.48
Cbc0038I Pass   2: suminf.    0.81165 (2) obj. -3480.59 iterations 0
Cbc0038I Pass   3: suminf.    0.32326 (1) obj. -2264.48 iterations 4
Cbc0038I Pass   4: suminf.    0.43902 (1) obj. -2668.41 iterations 1
Cbc0038I Pass   5: suminf.    0.84806 (2) obj. -3063.23 iterations 5
Cbc0038I Pass   6: suminf.    0.47967 (1) obj. -2586.34 iterations 1
Cbc0038I Pass   7: suminf.    0.33091 (1) obj. -2264.48 iterations 1
Cbc0038I Pass   8: suminf.    0.97674 (3) obj. -3131.36 iterations 5
Cbc0038I Pass   9: suminf.    0.07689 (1) obj. -2264.48 iterations 6
Cbc0038I Pass  10: suminf.    0.48780 (1) obj. -3004.15 iterations 1
Cbc0038I Pass  11: suminf.    0.72868 (2) obj. -2762.08 iterations 2
Cbc0038I Pass  12: suminf.    0.07493 (1) obj. -2264.48 iterations 2
Cbc0038I Pass  13: suminf.    0.38211 (1) obj. -2786.45 iterations 1
Cbc0038I Pass  14: suminf.    0.07493 (1) obj. -2264.48 iterations 2
Cbc0038I Pass  15: suminf.    0.79796 (2) obj. -2882.1 iterations 8
Cbc0038I Pass  16: suminf.    0.79796 (2) obj. -2882.1 iterations 2
Cbc0038I Pass  17: suminf.    0.53995 (2) obj. -2264.48 iterations 3
Cbc0038I Pass  18: suminf.    0.53995 (2) obj. -2264.48 iterations 0
Cbc0038I Pass  19: suminf.    0.84286 (2) obj. -2805.82 iterations 2
Cbc0038I Pass  20: suminf.    0.59435 (2) obj. -2264.48 iterations 10
Cbc0038I Pass  21: suminf.    0.07689 (1) obj. -2264.48 iterations 2
Cbc0038I Pass  22: suminf.    0.43089 (1) obj. -2866.01 iterations 1
Cbc0038I Pass  23: suminf.    0.79070 (2) obj. -2310.17 iterations 4
Cbc0038I Pass  24: suminf.    0.41723 (1) obj. -2264.48 iterations 3
Cbc0038I Pass  25: suminf.    0.36585 (1) obj. -2351.77 iterations 1
Cbc0038I Pass  26: suminf.    0.92350 (3) obj. -2264.48 iterations 2
Cbc0038I Pass  27: suminf.    0.90144 (3) obj. -2264.48 iterations 1
Cbc0038I Pass  28: suminf.    0.73687 (2) obj. -2923.57 iterations 1
Cbc0038I Pass  29: suminf.    0.47829 (2) obj. -2264.48 iterations 2
Cbc0038I Pass  30: suminf.    0.72857 (2) obj. -3016.01 iterations 2
Cbc0038I Pass  31: suminf.    0.71451 (2) obj. -3039.9 iterations 1
Cbc0038I Rounding solution of -2149.17 is better than previous of -2125.5

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2149.17 to -3381.4 (0.01 seconds)
Cbc0038I Round again with cutoff of -3408.18
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.81165 (2) obj. -3480.59 iterations 0
Cbc0038I Pass  32: suminf.    0.91904 (2) obj. -3408.18 iterations 2
Cbc0038I Pass  33: suminf.    0.91904 (2) obj. -3408.18 iterations 0
Cbc0038I Pass  34: suminf.    0.92936 (2) obj. -3408.18 iterations 1
Cbc0038I Pass  35: suminf.    1.63071 (6) obj. -3408.18 iterations 6
Cbc0038I Pass  36: suminf.    1.22486 (4) obj. -3408.18 iterations 1
Cbc0038I Pass  37: suminf.    0.52360 (4) obj. -3408.18 iterations 5
Cbc0038I Pass  38: suminf.    0.85203 (2) obj. -3408.18 iterations 5
Cbc0038I Pass  39: suminf.    0.81165 (2) obj. -3480.59 iterations 1
Cbc0038I Pass  40: suminf.    0.91904 (2) obj. -3408.18 iterations 2
Cbc0038I Pass  41: suminf.    0.91904 (2) obj. -3408.18 iterations 0
Cbc0038I Pass  42: suminf.    0.92936 (2) obj. -3408.18 iterations 1
Cbc0038I Pass  43: suminf.    0.85203 (2) obj. -3408.18 iterations 1
Cbc0038I Pass  44: suminf.    1.05280 (3) obj. -3408.18 iterations 1
Cbc0038I Pass  45: suminf.    0.74964 (2) obj. -3408.18 iterations 3
Cbc0038I Pass  46: suminf.    0.69142 (2) obj. -3507.1 iterations 1
Cbc0038I Pass  47: suminf.    0.74964 (2) obj. -3408.18 iterations 1
Cbc0038I Pass  48: suminf.    0.91904 (2) obj. -3408.18 iterations 2
Cbc0038I Pass  49: suminf.    0.85203 (2) obj. -3408.18 iterations 3
Cbc0038I Pass  50: suminf.    0.81165 (2) obj. -3480.59 iterations 1
Cbc0038I Pass  51: suminf.    0.91904 (2) obj. -3408.18 iterations 2
Cbc0038I Pass  52: suminf.    0.91904 (2) obj. -3408.18 iterations 0
Cbc0038I Pass  53: suminf.    0.92936 (2) obj. -3408.18 iterations 1
Cbc0038I Pass  54: suminf.    0.69142 (2) obj. -3507.1 iterations 3
Cbc0038I Pass  55: suminf.    0.69142 (2) obj. -3507.1 iterations 1
Cbc0038I Pass  56: suminf.    0.74964 (2) obj. -3408.18 iterations 1
Cbc0038I Pass  57: suminf.    1.05280 (3) obj. -3408.18 iterations 3
Cbc0038I Pass  58: suminf.    0.81165 (2) obj. -3480.59 iterations 1
Cbc0038I Pass  59: suminf.    0.91904 (2) obj. -3408.18 iterations 2
Cbc0038I Pass  60: suminf.    0.91904 (2) obj. -3408.18 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3381.4 - took 0.01 seconds
Cbc0012I Integer solution of -3381.4 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 13 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -3515.3005 to -3515.3005 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3381.4, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

