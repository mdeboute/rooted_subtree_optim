Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 73 (-5) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 3.85999e-06 - average 2.90225e-08, 8 fixed columns
Coin0506I Presolve 118 (-15) rows, 65 (-8) columns and 358 (-46) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 3.101109 - largest nonzero change 0 ( 0%) - largest zero change 2.1864637e-05
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Coin0511I After Postsolve, objective 50.771776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Clp0000I Optimal - objective value 50.771776
Coin0511I After Postsolve, objective 50.771776, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.77177593 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 73 columns (72 integer (72 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.221%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.4806
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.45477 iterations 40
Cbc0038I Solution found of 5.45477
Cbc0038I Relaxing continuous gives 5.45477
Cbc0038I Rounding solution of 0.41621 is better than previous of 5.45477

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 0.41621 to -24.1652 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.8259
Cbc0038I Pass   2: suminf.    2.50053 (8) obj. -26.8259 iterations 8
Cbc0038I Pass   3: suminf.    2.07932 (6) obj. -26.8259 iterations 4
Cbc0038I Pass   4: suminf.    1.13746 (3) obj. -26.8259 iterations 4
Cbc0038I Pass   5: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass   6: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass   7: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass   8: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass   9: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  10: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  11: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  12: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  13: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  14: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  15: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  16: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  17: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  18: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  19: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  20: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  21: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  22: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  23: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  24: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  25: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  26: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I Pass  27: suminf.    0.85413 (4) obj. -26.8259 iterations 0
Cbc0038I Pass  28: suminf.    1.15490 (4) obj. -26.8259 iterations 2
Cbc0038I Pass  29: suminf.    1.13746 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  30: suminf.    1.29073 (3) obj. -26.8259 iterations 1
Cbc0038I Pass  31: suminf.    0.85413 (4) obj. -26.8259 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.1652 - took 0.04 seconds
Cbc0012I Integer solution of -24.16518 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 133 rows 73 columns, reduced to 70 rows 39 columns
Cbc0031I 23 added rows had average density of 60.608696
Cbc0013I At root node, 23 cuts changed objective from -50.771776 to -39.062382 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11060 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1527 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 51.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.16518 best solution, best possible -39.062382 (0.76 seconds)
Cbc0016I Integer solution of -24.67224 found by strong branching after 7468 iterations and 21 nodes (0.95 seconds)
Cbc0001I Search completed - best objective -24.67224, took 8373 iterations and 40 nodes (0.97 seconds)
Cbc0032I Strong branching done 530 times (10470 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 17, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.98

