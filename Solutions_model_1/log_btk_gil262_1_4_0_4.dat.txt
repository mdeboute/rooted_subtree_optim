Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 381 (-146) rows, 200 (-64) columns and 1147 (-398) elements
Clp1000I sum of infeasibilities 0.00172418 - average 4.5254e-06, 189 fixed columns
Coin0506I Presolve 11 (-370) rows, 11 (-189) columns and 37 (-1110) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Coin0511I After Postsolve, objective 215419.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14412985 - largest nonzero change 1.8840887e-05 ( 0.0017128079%) - largest zero change 2.9943738e-05
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Clp0000I Optimal - objective value 215419.09
Coin0511I After Postsolve, objective 215419.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215419.0857 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 381 rows, 200 columns (199 integer (199 of which binary)) and 1147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.473%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.30921
Cbc0038I Pass   1: suminf.    0.35052 (1) obj. -213139 iterations 33
Cbc0038I Solution found of -202364
Cbc0038I Relaxing continuous gives -202364
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -203670
Cbc0038I Reduced cost fixing fixed 92 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.35052 (1) obj. -213139 iterations 0
Cbc0038I Pass   3: suminf.    0.03525 (2) obj. -203670 iterations 7
Cbc0038I Pass   4: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass   5: suminf.    0.88567 (5) obj. -203670 iterations 33
Cbc0038I Pass   6: suminf.    0.80924 (3) obj. -203670 iterations 18
Cbc0038I Pass   7: suminf.    1.74984 (4) obj. -203670 iterations 15
Cbc0038I Pass   8: suminf.    0.82689 (2) obj. -203670 iterations 8
Cbc0038I Pass   9: suminf.    0.83871 (2) obj. -204126 iterations 5
Cbc0038I Pass  10: suminf.    0.21461 (3) obj. -203670 iterations 19
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -205385 iterations 10
Cbc0038I Solution found of -205385
Cbc0038I Relaxing continuous gives -205385
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -205385 to -209450 (0.03 seconds)
Cbc0038I Round again with cutoff of -210644
Cbc0038I Reduced cost fixing fixed 141 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.35052 (1) obj. -213139 iterations 0
Cbc0038I Pass  13: suminf.    0.22357 (2) obj. -210644 iterations 7
Cbc0038I Pass  14: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass  15: suminf.    0.54746 (3) obj. -210644 iterations 14
Cbc0038I Pass  16: suminf.    0.54746 (3) obj. -210644 iterations 11
Cbc0038I Pass  17: suminf.    0.26374 (2) obj. -215171 iterations 9
Cbc0038I Pass  18: suminf.    0.26374 (2) obj. -215171 iterations 0
Cbc0038I Pass  19: suminf.    1.21166 (3) obj. -210644 iterations 11
Cbc0038I Pass  20: suminf.    0.40620 (2) obj. -210644 iterations 10
Cbc0038I Pass  21: suminf.    0.34278 (1) obj. -210644 iterations 13
Cbc0038I Pass  22: suminf.    0.63212 (2) obj. -211993 iterations 9
Cbc0038I Pass  23: suminf.    0.66856 (2) obj. -210644 iterations 5
Cbc0038I Pass  24: suminf.    0.63245 (2) obj. -210644 iterations 11
Cbc0038I Pass  25: suminf.    0.26638 (3) obj. -210644 iterations 22
Cbc0038I Pass  26: suminf.    0.22357 (2) obj. -210644 iterations 12
Cbc0038I Pass  27: suminf.    1.23124 (3) obj. -214372 iterations 6
Cbc0038I Pass  28: suminf.    0.75237 (8) obj. -210644 iterations 38
Cbc0038I Pass  29: suminf.    0.26172 (4) obj. -210644 iterations 21
Cbc0038I Pass  30: suminf.    1.30141 (3) obj. -211879 iterations 22
Cbc0038I Pass  31: suminf.    1.26191 (3) obj. -210644 iterations 3
Cbc0038I Pass  32: suminf.    0.69778 (8) obj. -210644 iterations 18
Cbc0038I Pass  33: suminf.    0.58428 (6) obj. -210644 iterations 12
Cbc0038I Pass  34: suminf.    1.74516 (5) obj. -210644 iterations 27
Cbc0038I Pass  35: suminf.    0.95690 (4) obj. -210644 iterations 17
Cbc0038I Pass  36: suminf.    0.34278 (1) obj. -210644 iterations 12
Cbc0038I Pass  37: suminf.    0.63212 (2) obj. -211993 iterations 7
Cbc0038I Pass  38: suminf.    0.66856 (2) obj. -210644 iterations 3
Cbc0038I Pass  39: suminf.    0.63245 (2) obj. -210644 iterations 13
Cbc0038I Pass  40: suminf.    2.23727 (8) obj. -210644 iterations 18
Cbc0038I Pass  41: suminf.    2.14545 (6) obj. -210644 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 200 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -209450 - took 0.03 seconds
Cbc0012I Integer solution of -209449.81 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 381 rows 200 columns, reduced to 8 rows 10 columns
Cbc0031I 8 added rows had average density of 19
Cbc0013I At root node, 8 cuts changed objective from -215419.09 to -213852.52 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 195.1 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0010I After 11 nodes, 2 on tree, -209449.81 best solution, best possible -213148.51 (0.74 seconds)
Cbc0001I Search completed - best objective -209449.81, took 424 iterations and 18 nodes (0.84 seconds)
Cbc0032I Strong branching done 144 times (728 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 165 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.84

