Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 48 (-2) columns and 262 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 68 (-19) rows, 45 (-3) columns and 218 (-44) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 1.467652 - largest nonzero change 2.3530591e-05 ( 0.0011765296%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 1872.1333
Clp0000I Optimal - objective value 1872.1333
Coin0511I After Postsolve, objective 1872.1333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 21.663187 - largest nonzero change 0.00021965113 ( 0.00026142863%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 1872.1333
Clp0000I Optimal - objective value 1872.1333
Clp0000I Optimal - objective value 1872.1333
Coin0511I After Postsolve, objective 1872.1333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1872.133277 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 48 columns (47 integer (47 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 9.9175
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 71.102 iterations 25
Cbc0038I Solution found of 71.102
Cbc0038I Relaxing continuous gives 71.102
Cbc0038I Rounding solution of -412.672 is better than previous of 71.102

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -412.672 to -613.525 (0.03 seconds)
Cbc0038I Round again with cutoff of -739.386
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.39436 (6) obj. -739.386 iterations 5
Cbc0038I Pass   3: suminf.    2.38056 (13) obj. -739.386 iterations 11
Cbc0038I Pass   4: suminf.    2.38056 (13) obj. -739.386 iterations 0
Cbc0038I Pass   5: suminf.    3.00000 (11) obj. -739.386 iterations 19
Cbc0038I Pass   6: suminf.    3.00000 (11) obj. -739.386 iterations 0
Cbc0038I Pass   7: suminf.    3.73371 (14) obj. -739.386 iterations 7
Cbc0038I Pass   8: suminf.    2.80613 (8) obj. -739.386 iterations 13
Cbc0038I Pass   9: suminf.    2.31223 (7) obj. -739.386 iterations 3
Cbc0038I Pass  10: suminf.    2.31223 (7) obj. -739.386 iterations 0
Cbc0038I Pass  11: suminf.    2.39358 (7) obj. -739.386 iterations 5
Cbc0038I Pass  12: suminf.    2.25049 (9) obj. -739.386 iterations 2
Cbc0038I Pass  13: suminf.    2.00000 (7) obj. -739.386 iterations 6
Cbc0038I Pass  14: suminf.    2.00000 (9) obj. -739.386 iterations 2
Cbc0038I Pass  15: suminf.    2.67434 (10) obj. -739.386 iterations 6
Cbc0038I Pass  16: suminf.    2.00000 (7) obj. -739.386 iterations 9
Cbc0038I Pass  17: suminf.    2.45162 (8) obj. -739.386 iterations 10
Cbc0038I Pass  18: suminf.    1.47607 (5) obj. -739.386 iterations 4
Cbc0038I Pass  19: suminf.    1.47607 (5) obj. -739.386 iterations 0
Cbc0038I Pass  20: suminf.    1.51398 (10) obj. -739.386 iterations 5
Cbc0038I Pass  21: suminf.    1.50941 (11) obj. -739.386 iterations 1
Cbc0038I Pass  22: suminf.    2.60774 (9) obj. -739.386 iterations 10
Cbc0038I Pass  23: suminf.    2.17565 (6) obj. -739.386 iterations 3
Cbc0038I Pass  24: suminf.    2.13182 (7) obj. -739.386 iterations 1
Cbc0038I Pass  25: suminf.    2.88697 (7) obj. -739.386 iterations 4
Cbc0038I Pass  26: suminf.    1.90459 (6) obj. -739.386 iterations 4
Cbc0038I Pass  27: suminf.    1.57109 (7) obj. -739.386 iterations 4
Cbc0038I Pass  28: suminf.    1.57169 (8) obj. -739.386 iterations 1
Cbc0038I Pass  29: suminf.    2.00000 (7) obj. -739.386 iterations 4
Cbc0038I Pass  30: suminf.    2.00000 (9) obj. -739.386 iterations 4
Cbc0038I Pass  31: suminf.    2.67434 (10) obj. -739.386 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 48 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -613.525 - took 0.07 seconds
Cbc0012I Integer solution of -613.5249 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 48 columns, reduced to 44 rows 28 columns
Cbc0031I 12 added rows had average density of 33.25
Cbc0013I At root node, 12 cuts changed objective from -1872.1333 to -699.64793 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3051 row cuts average 5.8 elements, 1 column cuts (1 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 826 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0012I Integer solution of -617.9219 found by rounding after 2928 iterations and 9 nodes (0.32 seconds)
Cbc0016I Integer solution of -620.5709 found by strong branching after 3090 iterations and 10 nodes (0.33 seconds)
Cbc0001I Search completed - best objective -620.5708999999783, took 3301 iterations and 14 nodes (0.34 seconds)
Cbc0032I Strong branching done 210 times (2478 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 5, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.34

