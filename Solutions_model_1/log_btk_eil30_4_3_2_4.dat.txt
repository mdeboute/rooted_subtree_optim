Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 29 (-3) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 2.05313e-05 - average 4.10627e-07, 1 fixed columns
Coin0506I Presolve 48 (-2) rows, 28 (-1) columns and 145 (-5) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Coin0511I After Postsolve, objective 92.28205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Coin0511I After Postsolve, objective 92.28205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.28205011 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 29 columns (28 integer (28 of which binary)) and 151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.12403
Cbc0038I Pass   1: suminf.    0.03333 (1) obj. -29.1799 iterations 21
Cbc0038I Solution found of -9.75776
Cbc0038I Relaxing continuous gives -9.75776
Cbc0038I Rounding solution of -10.0981 is better than previous of -9.75776

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -10.0981 to -29.2343 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.5391
Cbc0038I Pass   2: suminf.    0.20155 (5) obj. -35.5391 iterations 6
Cbc0038I Pass   3: suminf.    0.57559 (2) obj. -35.5391 iterations 7
Cbc0038I Pass   4: suminf.    0.52897 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   5: suminf.    0.47379 (2) obj. -35.5391 iterations 3
Cbc0038I Pass   6: suminf.    0.41707 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   7: suminf.    0.21837 (2) obj. -35.5391 iterations 2
Cbc0038I Pass   8: suminf.    0.21717 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   9: suminf.    0.41329 (2) obj. -35.5391 iterations 3
Cbc0038I Pass  10: suminf.    0.41329 (2) obj. -35.5391 iterations 0
Cbc0038I Pass  11: suminf.    0.61835 (2) obj. -35.5391 iterations 1
Cbc0038I Pass  12: suminf.    2.33651 (7) obj. -35.5391 iterations 6
Cbc0038I Pass  13: suminf.    1.43728 (4) obj. -35.5391 iterations 5
Cbc0038I Pass  14: suminf.    0.88787 (3) obj. -35.5391 iterations 3
Cbc0038I Pass  15: suminf.    2.22236 (8) obj. -35.5391 iterations 8
Cbc0038I Pass  16: suminf.    0.63626 (4) obj. -35.5391 iterations 7
Cbc0038I Pass  17: suminf.    1.52992 (6) obj. -35.5391 iterations 4
Cbc0038I Pass  18: suminf.    1.09836 (3) obj. -35.5391 iterations 8
Cbc0038I Pass  19: suminf.    1.09836 (3) obj. -35.5391 iterations 0
Cbc0038I Pass  20: suminf.    1.10351 (3) obj. -35.5391 iterations 2
Cbc0038I Pass  21: suminf.    0.54038 (2) obj. -35.5391 iterations 4
Cbc0038I Pass  22: suminf.    0.40214 (2) obj. -35.5391 iterations 2
Cbc0038I Pass  23: suminf.    0.39748 (3) obj. -35.5391 iterations 1
Cbc0038I Pass  24: suminf.    0.79265 (4) obj. -35.5391 iterations 3
Cbc0038I Pass  25: suminf.    0.63626 (4) obj. -35.5391 iterations 1
Cbc0038I Pass  26: suminf.    1.52992 (6) obj. -35.5391 iterations 4
Cbc0038I Pass  27: suminf.    1.09836 (3) obj. -35.5391 iterations 8
Cbc0038I Pass  28: suminf.    1.09836 (3) obj. -35.5391 iterations 0
Cbc0038I Pass  29: suminf.    1.10351 (3) obj. -35.5391 iterations 2
Cbc0038I Pass  30: suminf.    0.54038 (2) obj. -35.5391 iterations 4
Cbc0038I Pass  31: suminf.    0.40214 (2) obj. -35.5391 iterations 2
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -46.8877
Cbc0038I Pass  31: suminf.    0.73980 (7) obj. -46.8877 iterations 2
Cbc0038I Pass  32: suminf.    0.94626 (3) obj. -46.8877 iterations 6
Cbc0038I Pass  33: suminf.    0.94626 (3) obj. -46.8877 iterations 0
Cbc0038I Pass  34: suminf.    1.28143 (3) obj. -46.8877 iterations 1
Cbc0038I Pass  35: suminf.    1.06987 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  36: suminf.    1.06987 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  37: suminf.    1.36447 (5) obj. -46.8877 iterations 3
Cbc0038I Pass  38: suminf.    1.46094 (4) obj. -46.8877 iterations 6
Cbc0038I Pass  39: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  40: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  41: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  42: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  43: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  44: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  45: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  46: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  47: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  48: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  49: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  50: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  51: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  52: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  53: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  54: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  55: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  56: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  57: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  58: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  59: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  60: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -29.2343 - took 0.06 seconds
Cbc0012I Integer solution of -29.23427 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 21 columns
Cbc0031I 9 added rows had average density of 22.777778
Cbc0013I At root node, 9 cuts changed objective from -92.28205 to -60.613629 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2504 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 863 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.23427, took 2932 iterations and 18 nodes (0.32 seconds)
Cbc0032I Strong branching done 202 times (1879 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

