Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-23) rows, 17 (-8) columns and 79 (-56) elements
Clp1000I sum of infeasibilities 2.83484e-06 - average 1.09032e-07, 10 fixed columns
Coin0506I Presolve 4 (-22) rows, 5 (-12) columns and 10 (-69) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Coin0511I After Postsolve, objective 8031.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Coin0511I After Postsolve, objective 8031.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8031.657005 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 17 columns (16 integer (16 of which binary)) and 80 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.891%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.669242
Cbc0038I Pass   1: suminf.    0.66924 (2) obj. -7943.58 iterations 2
Cbc0038I Solution found of -3248.98
Cbc0038I Relaxing continuous gives -3248.98
Cbc0038I Rounding solution of -3660.39 is better than previous of -3248.98

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4088.71
Cbc0038I Pass   2: suminf.    0.66924 (2) obj. -7943.58 iterations 0
Cbc0038I Pass   3: suminf.    0.15074 (1) obj. -4088.71 iterations 2
Cbc0038I Pass   4: suminf.    0.15951 (1) obj. -7931.18 iterations 1
Cbc0038I Pass   5: suminf.    0.06227 (2) obj. -4088.71 iterations 5
Cbc0038I Pass   6: suminf.    0.06227 (2) obj. -4088.71 iterations 1
Cbc0038I Pass   7: suminf.    0.34854 (1) obj. -7154.45 iterations 2
Cbc0038I Pass   8: suminf.    0.10114 (1) obj. -4088.71 iterations 1
Cbc0038I Pass   9: suminf.    0.92992 (2) obj. -6237.29 iterations 2
Cbc0038I Pass  10: suminf.    0.10114 (1) obj. -4088.71 iterations 2
Cbc0038I Pass  11: suminf.    0.36219 (1) obj. -4088.71 iterations 3
Cbc0038I Pass  12: suminf.    0.36219 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  13: suminf.    0.24122 (1) obj. -6298.02 iterations 1
Cbc0038I Pass  14: suminf.    0.22659 (1) obj. -6371.22 iterations 1
Cbc0038I Pass  15: suminf.    0.36369 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  16: suminf.    0.22659 (1) obj. -6371.22 iterations 1
Cbc0038I Pass  17: suminf.    0.17415 (1) obj. -7857.98 iterations 5
Cbc0038I Pass  18: suminf.    0.17415 (1) obj. -7857.98 iterations 1
Cbc0038I Pass  19: suminf.    0.14924 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  20: suminf.    0.53520 (2) obj. -4088.71 iterations 4
Cbc0038I Pass  21: suminf.    0.53520 (2) obj. -4088.71 iterations 0
Cbc0038I Pass  22: suminf.    0.26073 (1) obj. -6725.13 iterations 2
Cbc0038I Pass  23: suminf.    0.26601 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  24: suminf.    0.51200 (3) obj. -4088.71 iterations 3
Cbc0038I Pass  25: suminf.    0.51200 (3) obj. -4088.71 iterations 0
Cbc0038I Pass  26: suminf.    0.27659 (1) obj. -6823.68 iterations 3
Cbc0038I Pass  27: suminf.    0.23247 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  28: suminf.    0.51232 (3) obj. -4088.71 iterations 2
Cbc0038I Pass  29: suminf.    0.51232 (3) obj. -4088.71 iterations 0
Cbc0038I Pass  30: suminf.    0.13024 (1) obj. -7638.37 iterations 3
Cbc0038I Pass  31: suminf.    0.23257 (1) obj. -4088.71 iterations 1
Cbc0038I Rounding solution of -3936.13 is better than previous of -3660.39

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 17 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3936.13 to -6757.14 (0.01 seconds)
Cbc0038I Round again with cutoff of -6994.43
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.66924 (2) obj. -7943.58 iterations 0
Cbc0038I Pass  32: suminf.    0.32767 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  33: suminf.    0.15951 (1) obj. -7931.18 iterations 1
Cbc0038I Pass  34: suminf.    0.32415 (1) obj. -7317.42 iterations 3
Cbc0038I Pass  35: suminf.    0.38213 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  36: suminf.    0.32415 (1) obj. -7317.42 iterations 1
Cbc0038I Pass  37: suminf.    0.73781 (2) obj. -6994.43 iterations 3
Cbc0038I Pass  38: suminf.    0.32415 (1) obj. -7317.42 iterations 3
Cbc0038I Pass  39: suminf.    0.11439 (1) obj. -7539.82 iterations 5
Cbc0038I Pass  40: suminf.    0.21229 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  41: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  42: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  43: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  44: suminf.    0.70764 (2) obj. -6994.43 iterations 4
Cbc0038I Pass  45: suminf.    0.70764 (2) obj. -6994.43 iterations 0
Cbc0038I Pass  46: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  47: suminf.    0.17537 (1) obj. -7200.14 iterations 1
Cbc0038I Pass  48: suminf.    0.44145 (3) obj. -6994.43 iterations 5
Cbc0038I Pass  49: suminf.    0.44145 (3) obj. -6994.43 iterations 1
Cbc0038I Pass  50: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  51: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  52: suminf.    0.70764 (2) obj. -6994.43 iterations 4
Cbc0038I Pass  53: suminf.    0.70764 (2) obj. -6994.43 iterations 0
Cbc0038I Pass  54: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  55: suminf.    0.17537 (1) obj. -7200.14 iterations 1
Cbc0038I Pass  56: suminf.    0.19366 (1) obj. -7291.37 iterations 4
Cbc0038I Pass  57: suminf.    0.19366 (1) obj. -7291.37 iterations 2
Cbc0038I Pass  58: suminf.    0.24696 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  59: suminf.    0.88838 (3) obj. -6994.43 iterations 2
Cbc0038I Pass  60: suminf.    0.58546 (2) obj. -6994.43 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 17 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6757.14 - took 0.02 seconds
Cbc0012I Integer solution of -6757.14 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 26 rows 17 columns, reduced to 2 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7943.5768 to -6753.465 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6757.140000000001, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.01

