Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 63 (-47) rows, 34 (-22) columns and 126 (-143) elements
Clp0000I Optimal - objective value 3265.4866
Coin0511I After Postsolve, objective 3265.4866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3265.486626 - 29 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 63 rows, 34 columns (33 integer (33 of which binary)) and 126 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.83689
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 750 iterations 17
Cbc0038I Solution found of 750
Cbc0038I Relaxing continuous gives 750
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 34 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 750 to -1550 (0.01 seconds)
Cbc0038I Round again with cutoff of -1722.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.23532 (5) obj. -1722.45 iterations 5
Cbc0038I Pass   3: suminf.    1.76201 (4) obj. -1722.45 iterations 8
Cbc0038I Pass   4: suminf.    1.04753 (4) obj. -1722.45 iterations 3
Cbc0038I Pass   5: suminf.    0.17505 (3) obj. -1722.45 iterations 7
Cbc0038I Pass   6: suminf.    0.81433 (5) obj. -1722.45 iterations 5
Cbc0038I Pass   7: suminf.    0.75758 (3) obj. -1722.45 iterations 2
Cbc0038I Pass   8: suminf.    0.60170 (2) obj. -1722.45 iterations 4
Cbc0038I Pass   9: suminf.    0.62075 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  10: suminf.    2.87136 (11) obj. -1722.45 iterations 8
Cbc0038I Pass  11: suminf.    0.88546 (3) obj. -1722.45 iterations 4
Cbc0038I Pass  12: suminf.    1.02036 (9) obj. -1722.45 iterations 1
Cbc0038I Pass  13: suminf.    0.88546 (3) obj. -1722.45 iterations 1
Cbc0038I Pass  14: suminf.    2.28794 (11) obj. -1722.45 iterations 7
Cbc0038I Pass  15: suminf.    2.01767 (6) obj. -1722.45 iterations 2
Cbc0038I Pass  16: suminf.    1.63231 (10) obj. -1722.45 iterations 4
Cbc0038I Pass  17: suminf.    1.19474 (13) obj. -1722.45 iterations 2
Cbc0038I Pass  18: suminf.    1.73634 (9) obj. -1722.45 iterations 14
Cbc0038I Pass  19: suminf.    1.73634 (9) obj. -1722.45 iterations 2
Cbc0038I Pass  20: suminf.    1.55757 (6) obj. -1722.45 iterations 11
Cbc0038I Pass  21: suminf.    1.54956 (5) obj. -1722.45 iterations 7
Cbc0038I Pass  22: suminf.    0.73963 (2) obj. -1722.45 iterations 5
Cbc0038I Pass  23: suminf.    0.79466 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  24: suminf.    3.28934 (9) obj. -1722.45 iterations 10
Cbc0038I Pass  25: suminf.    2.83908 (8) obj. -1722.45 iterations 4
Cbc0038I Pass  26: suminf.    2.78156 (7) obj. -1722.45 iterations 11
Cbc0038I Pass  27: suminf.    1.05937 (3) obj. -1722.45 iterations 4
Cbc0038I Pass  28: suminf.    0.73963 (2) obj. -1722.45 iterations 4
Cbc0038I Pass  29: suminf.    0.79466 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  30: suminf.    3.66787 (9) obj. -1722.45 iterations 7
Cbc0038I Pass  31: suminf.    1.51980 (4) obj. -1722.45 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 34 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1550 - took 0.02 seconds
Cbc0012I Integer solution of -1550 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 63 rows 34 columns, reduced to 34 rows 20 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -3265.4866 to -3265.4866 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1550, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

