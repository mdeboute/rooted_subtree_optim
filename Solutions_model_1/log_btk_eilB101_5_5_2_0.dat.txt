Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 101 (-2) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 0.000538403 - average 2.9746e-06, 30 fixed columns
Coin0506I Presolve 121 (-60) rows, 71 (-30) columns and 377 (-179) elements
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 2.1826194 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 42.316892
Clp0000I Optimal - objective value 42.316892
Coin0511I After Postsolve, objective 42.316892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.316892
Clp0000I Optimal - objective value 42.316892
Clp0000I Optimal - objective value 42.316892
Coin0511I After Postsolve, objective 42.316892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.31689157 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 101 columns (100 integer (100 of which binary)) and 563 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.922%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 7.95282
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.4293 iterations 65
Cbc0038I Solution found of 11.4293
Cbc0038I Relaxing continuous gives 11.4293
Cbc0038I Rounding solution of -13.0054 is better than previous of 11.4293

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -13.0054 to -16.5309 (0.07 seconds)
Cbc0038I Round again with cutoff of -19.1096
Cbc0038I Pass   2: suminf.    3.08911 (13) obj. -19.1096 iterations 30
Cbc0038I Pass   3: suminf.    2.72121 (12) obj. -19.1096 iterations 1
Cbc0038I Pass   4: suminf.    2.45786 (7) obj. -19.1096 iterations 27
Cbc0038I Pass   5: suminf.    1.66742 (6) obj. -19.1096 iterations 4
Cbc0038I Pass   6: suminf.    2.04706 (6) obj. -19.1096 iterations 7
Cbc0038I Pass   7: suminf.    2.04706 (6) obj. -19.1096 iterations 1
Cbc0038I Pass   8: suminf.    1.45338 (7) obj. -19.1096 iterations 6
Cbc0038I Pass   9: suminf.    1.32029 (7) obj. -19.1096 iterations 7
Cbc0038I Pass  10: suminf.    3.00170 (8) obj. -19.1096 iterations 13
Cbc0038I Pass  11: suminf.    2.03384 (6) obj. -19.1096 iterations 4
Cbc0038I Pass  12: suminf.    1.98830 (6) obj. -19.1096 iterations 1
Cbc0038I Pass  13: suminf.    2.68120 (6) obj. -19.1096 iterations 3
Cbc0038I Pass  14: suminf.    1.29186 (7) obj. -19.1096 iterations 6
Cbc0038I Pass  15: suminf.    1.22091 (5) obj. -19.1096 iterations 5
Cbc0038I Pass  16: suminf.    1.40311 (8) obj. -19.1096 iterations 16
Cbc0038I Pass  17: suminf.    1.32029 (7) obj. -19.1096 iterations 1
Cbc0038I Pass  18: suminf.    3.00170 (8) obj. -19.1096 iterations 13
Cbc0038I Pass  19: suminf.    2.03384 (6) obj. -19.1096 iterations 4
Cbc0038I Pass  20: suminf.    1.98830 (6) obj. -19.1096 iterations 1
Cbc0038I Pass  21: suminf.    2.68120 (6) obj. -19.1096 iterations 3
Cbc0038I Pass  22: suminf.    1.29186 (7) obj. -19.1096 iterations 6
Cbc0038I Pass  23: suminf.    1.22091 (5) obj. -19.1096 iterations 5
Cbc0038I Pass  24: suminf.    1.40311 (8) obj. -19.1096 iterations 16
Cbc0038I Pass  25: suminf.    1.32029 (7) obj. -19.1096 iterations 1
Cbc0038I Pass  26: suminf.    3.00170 (8) obj. -19.1096 iterations 13
Cbc0038I Pass  27: suminf.    2.03384 (6) obj. -19.1096 iterations 4
Cbc0038I Pass  28: suminf.    1.98830 (6) obj. -19.1096 iterations 1
Cbc0038I Pass  29: suminf.    2.68120 (6) obj. -19.1096 iterations 3
Cbc0038I Pass  30: suminf.    1.29186 (7) obj. -19.1096 iterations 6
Cbc0038I Pass  31: suminf.    1.22091 (5) obj. -19.1096 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 66 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -16.5309 to -17.7902 (0.12 seconds)
Cbc0038I Round again with cutoff of -23.751
Cbc0038I Pass  31: suminf.    3.74379 (16) obj. -23.751 iterations 3
Cbc0038I Pass  32: suminf.    3.37922 (15) obj. -23.751 iterations 1
Cbc0038I Pass  33: suminf.    3.00489 (9) obj. -23.751 iterations 24
Cbc0038I Pass  34: suminf.    2.36565 (9) obj. -23.751 iterations 5
Cbc0038I Pass  35: suminf.    2.63737 (7) obj. -23.751 iterations 12
Cbc0038I Pass  36: suminf.    2.35647 (7) obj. -23.751 iterations 1
Cbc0038I Pass  37: suminf.    2.44948 (8) obj. -23.751 iterations 9
Cbc0038I Pass  38: suminf.    1.86704 (9) obj. -23.751 iterations 7
Cbc0038I Pass  39: suminf.    1.86704 (9) obj. -23.751 iterations 0
Cbc0038I Pass  40: suminf.    2.77925 (9) obj. -23.751 iterations 19
Cbc0038I Pass  41: suminf.    2.72025 (8) obj. -23.751 iterations 3
Cbc0038I Pass  42: suminf.    3.66349 (12) obj. -23.751 iterations 18
Cbc0038I Pass  43: suminf.    2.43633 (11) obj. -23.751 iterations 8
Cbc0038I Pass  44: suminf.    2.77925 (9) obj. -23.751 iterations 25
Cbc0038I Pass  45: suminf.    3.85166 (14) obj. -23.751 iterations 21
Cbc0038I Pass  46: suminf.    2.69348 (10) obj. -23.751 iterations 20
Cbc0038I Pass  47: suminf.    2.63489 (9) obj. -23.751 iterations 3
Cbc0038I Pass  48: suminf.    2.41829 (9) obj. -23.751 iterations 16
Cbc0038I Pass  49: suminf.    2.33702 (8) obj. -23.751 iterations 9
Cbc0038I Pass  50: suminf.    3.37518 (10) obj. -23.751 iterations 11
Cbc0038I Pass  51: suminf.    2.23102 (10) obj. -23.751 iterations 4
Cbc0038I Pass  52: suminf.    2.23102 (10) obj. -23.751 iterations 2
Cbc0038I Pass  53: suminf.    2.47435 (8) obj. -23.751 iterations 12
Cbc0038I Pass  54: suminf.    2.42032 (8) obj. -23.751 iterations 3
Cbc0038I Pass  55: suminf.    2.42329 (7) obj. -23.751 iterations 5
Cbc0038I Pass  56: suminf.    1.86704 (9) obj. -23.751 iterations 8
Cbc0038I Pass  57: suminf.    1.86704 (9) obj. -23.751 iterations 0
Cbc0038I Pass  58: suminf.    2.77925 (9) obj. -23.751 iterations 19
Cbc0038I Pass  59: suminf.    2.72025 (8) obj. -23.751 iterations 3
Cbc0038I Pass  60: suminf.    3.66349 (12) obj. -23.751 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 73 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -17.7902 - took 0.15 seconds
Cbc0012I Integer solution of -17.79017 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 63 rows 39 columns
Cbc0031I 32 added rows had average density of 58.40625
Cbc0013I At root node, 32 cuts changed objective from -42.316892 to -35.25481 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18024 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2354 row cuts average 100.6 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.79017 best solution, best possible -35.25481 (1.37 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 2 rows 2 columns
Cbc0038I Full problem 181 rows 101 columns, reduced to 83 rows 50 columns
Cbc0004I Integer solution of -17.89612 found after 11421 iterations and 141 nodes (1.75 seconds)
Cbc0012I Integer solution of -17.9068 found by DiveCoefficient after 13787 iterations and 218 nodes (1.94 seconds)
Cbc0016I Integer solution of -17.93243 found by strong branching after 14027 iterations and 234 nodes (1.97 seconds)
Cbc0012I Integer solution of -18.17585 found by rounding after 14421 iterations and 258 nodes (2.00 seconds)
Cbc0012I Integer solution of -18.28155 found by DiveCoefficient after 14480 iterations and 263 nodes (2.01 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 8 rows 11 columns
Cbc0010I After 298 nodes, 2 on tree, -18.28155 best solution, best possible -23.686448 (2.07 seconds)
Cbc0001I Search completed - best objective -18.28154999999999, took 15215 iterations and 308 nodes (2.09 seconds)
Cbc0032I Strong branching done 1886 times (28395 iterations), fathomed 37 nodes and fixed 76 variables
Cbc0035I Maximum depth 43, 942 variables fixed on reduced cost
Total time (CPU seconds):       2.04   (Wallclock seconds):       2.11

