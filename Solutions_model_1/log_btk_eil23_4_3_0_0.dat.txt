Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 22 (-27) rows, 14 (-11) columns and 66 (-69) elements
Clp1000I sum of infeasibilities 0 - average 0, 2 fixed columns
Coin0506I Presolve 17 (-5) rows, 12 (-2) columns and 52 (-14) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 116.14874
Clp0000I Optimal - objective value 116.14874
Coin0511I After Postsolve, objective 116.14874, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 116.14874
Clp0000I Optimal - objective value 116.14874
Clp0000I Optimal - objective value 116.14874
Coin0511I After Postsolve, objective 116.14874, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.1487385 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 14 columns (13 integer (13 of which binary)) and 64 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.53348
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.25 iterations 10
Cbc0038I Solution found of -7.25
Cbc0038I Relaxing continuous gives -7.25
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 14 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -7.25 to -27.1125 (0.01 seconds)
Cbc0038I Round again with cutoff of -34.3172
Cbc0038I Pass   2: suminf.    0.31040 (1) obj. -34.3172 iterations 1
Cbc0038I Pass   3: suminf.    0.48029 (1) obj. -34.3172 iterations 1
Cbc0038I Pass   4: suminf.    0.45976 (1) obj. -34.3172 iterations 3
Cbc0038I Pass   5: suminf.    0.23443 (1) obj. -34.3172 iterations 1
Cbc0038I Pass   6: suminf.    0.45976 (1) obj. -34.3172 iterations 1
Cbc0038I Pass   7: suminf.    0.54039 (2) obj. -34.3172 iterations 3
Cbc0038I Pass   8: suminf.    0.33936 (1) obj. -34.3172 iterations 2
Cbc0038I Pass   9: suminf.    0.36829 (1) obj. -34.3172 iterations 1
Cbc0038I Pass  10: suminf.    0.35463 (1) obj. -34.3172 iterations 2
Cbc0038I Pass  11: suminf.    0.33936 (1) obj. -34.3172 iterations 1
Cbc0038I Pass  12: suminf.    0.35463 (1) obj. -34.3172 iterations 1
Cbc0038I Pass  13: suminf.    0.55652 (3) obj. -34.3172 iterations 2
Cbc0038I Pass  14: suminf.    0.33780 (1) obj. -34.3172 iterations 1
Cbc0038I Pass  15: suminf.    0.23443 (1) obj. -34.3172 iterations 1
Cbc0038I Pass  16: suminf.    0.23443 (1) obj. -34.3172 iterations 0
Cbc0038I Pass  17: suminf.    0.45848 (2) obj. -34.3172 iterations 3
Cbc0038I Pass  18: suminf.    0.23902 (1) obj. -34.3172 iterations 1
Cbc0038I Pass  19: suminf.    0.23443 (1) obj. -34.3172 iterations 2
Cbc0038I Pass  20: suminf.    0.37439 (1) obj. -34.3172 iterations 1
Cbc0038I Pass  21: suminf.    0.57275 (3) obj. -34.3172 iterations 3
Cbc0038I Pass  22: suminf.    0.45239 (2) obj. -34.3172 iterations 1
Cbc0038I Pass  23: suminf.    0.75971 (3) obj. -34.3172 iterations 7
Cbc0038I Pass  24: suminf.    0.28394 (4) obj. -34.3172 iterations 2
Cbc0038I Pass  25: suminf.    0.66329 (2) obj. -34.3172 iterations 5
Cbc0038I Pass  26: suminf.    0.66329 (2) obj. -34.3172 iterations 0
Cbc0038I Pass  27: suminf.    0.19804 (2) obj. -34.3172 iterations 2
Cbc0038I Pass  28: suminf.    0.19804 (2) obj. -34.3172 iterations 0
Cbc0038I Pass  29: suminf.    0.41760 (3) obj. -34.3172 iterations 1
Cbc0038I Pass  30: suminf.    0.12526 (2) obj. -34.3172 iterations 2
Cbc0038I Pass  31: suminf.    0.74100 (4) obj. -34.3172 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 14 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -27.1125 - took 0.01 seconds
Cbc0012I Integer solution of -27.1125 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 20 rows 14 columns, reduced to 9 rows 8 columns
Cbc0012I Integer solution of -30.55 found by DiveCoefficient after 21 iterations and 0 nodes (0.02 seconds)
Cbc0031I 6 added rows had average density of 3
Cbc0013I At root node, 6 cuts changed objective from -99.047307 to -30.55 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 55 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.55000000000001, took 21 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

