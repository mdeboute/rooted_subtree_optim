Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 20 (-5) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.30901e-05 - average 6.41391e-07, 4 fixed columns
Coin0506I Presolve 11 (-25) rows, 13 (-7) columns and 42 (-62) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.6572727 - largest nonzero change 2.724971e-05 ( 0.0022179273%) - largest zero change 1.8314621e-05
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Coin0511I After Postsolve, objective 481.8145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Coin0511I After Postsolve, objective 481.8145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 481.8144999 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 20 columns (19 integer (19 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.63232
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -330.5 iterations 6
Cbc0038I Solution found of -330.5
Cbc0038I Relaxing continuous gives -330.5
Cbc0038I Rounding solution of -353.5 is better than previous of -330.5

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -364.873
Cbc0038I Pass   2: suminf.    0.29981 (4) obj. -364.873 iterations 2
Cbc0038I Pass   3: suminf.    0.47210 (1) obj. -364.873 iterations 5
Cbc0038I Pass   4: suminf.    0.33346 (1) obj. -364.873 iterations 1
Cbc0038I Pass   5: suminf.    0.70909 (2) obj. -364.873 iterations 2
Cbc0038I Pass   6: suminf.    0.43386 (1) obj. -364.873 iterations 2
Cbc0038I Pass   7: suminf.    0.39866 (1) obj. -364.873 iterations 1
Cbc0038I Pass   8: suminf.    0.51947 (2) obj. -364.873 iterations 6
Cbc0038I Pass   9: suminf.    0.51947 (2) obj. -364.873 iterations 1
Cbc0038I Pass  10: suminf.    0.37196 (1) obj. -364.873 iterations 3
Cbc0038I Pass  11: suminf.    0.37116 (1) obj. -364.873 iterations 1
Cbc0038I Pass  12: suminf.    1.11468 (6) obj. -364.873 iterations 9
Cbc0038I Pass  13: suminf.    0.27712 (1) obj. -369.308 iterations 9
Cbc0038I Pass  14: suminf.    0.29105 (1) obj. -364.873 iterations 1
Cbc0038I Pass  15: suminf.    0.39365 (2) obj. -364.873 iterations 3
Cbc0038I Pass  16: suminf.    0.39365 (2) obj. -364.873 iterations 2
Cbc0038I Pass  17: suminf.    0.22460 (2) obj. -364.873 iterations 7
Cbc0038I Pass  18: suminf.    0.22460 (2) obj. -364.873 iterations 0
Cbc0038I Pass  19: suminf.    0.25184 (2) obj. -364.873 iterations 2
Cbc0038I Pass  20: suminf.    0.25184 (2) obj. -364.873 iterations 0
Cbc0038I Pass  21: suminf.    0.54943 (4) obj. -364.873 iterations 3
Cbc0038I Pass  22: suminf.    0.44809 (4) obj. -364.873 iterations 5
Cbc0038I Pass  23: suminf.    0.21068 (3) obj. -364.873 iterations 5
Cbc0038I Pass  24: suminf.    1.10532 (3) obj. -364.873 iterations 2
Cbc0038I Pass  25: suminf.    0.40155 (2) obj. -364.873 iterations 2
Cbc0038I Pass  26: suminf.    0.21507 (3) obj. -364.873 iterations 3
Cbc0038I Pass  27: suminf.    0.21068 (3) obj. -364.873 iterations 2
Cbc0038I Pass  28: suminf.    0.21193 (3) obj. -364.873 iterations 7
Cbc0038I Pass  29: suminf.    0.21193 (3) obj. -364.873 iterations 0
Cbc0038I Pass  30: suminf.    0.30558 (2) obj. -364.873 iterations 5
Cbc0038I Pass  31: suminf.    0.30558 (2) obj. -364.873 iterations 0
Cbc0038I Rounding solution of -387.302 is better than previous of -353.5

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 22 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -403.037
Cbc0038I Pass  31: suminf.    0.75235 (4) obj. -403.037 iterations 0
Cbc0038I Pass  32: suminf.    0.47210 (1) obj. -403.037 iterations 5
Cbc0038I Pass  33: suminf.    0.45338 (1) obj. -403.037 iterations 1
Cbc0038I Pass  34: suminf.    1.06572 (4) obj. -403.037 iterations 12
Cbc0038I Pass  35: suminf.    1.05381 (4) obj. -403.037 iterations 4
Cbc0038I Pass  36: suminf.    0.49827 (2) obj. -403.037 iterations 6
Cbc0038I Pass  37: suminf.    0.47590 (2) obj. -403.037 iterations 2
Cbc0038I Pass  38: suminf.    0.47590 (2) obj. -403.037 iterations 0
Cbc0038I Pass  39: suminf.    0.53551 (2) obj. -403.037 iterations 3
Cbc0038I Pass  40: suminf.    0.82655 (2) obj. -403.037 iterations 5
Cbc0038I Pass  41: suminf.    0.82655 (2) obj. -403.037 iterations 0
Cbc0038I Pass  42: suminf.    0.47210 (1) obj. -403.037 iterations 2
Cbc0038I Pass  43: suminf.    0.45338 (1) obj. -403.037 iterations 1
Cbc0038I Pass  44: suminf.    1.74566 (6) obj. -403.037 iterations 10
Cbc0038I Pass  45: suminf.    1.08395 (4) obj. -403.037 iterations 2
Cbc0038I Pass  46: suminf.    1.05324 (4) obj. -403.037 iterations 3
Cbc0038I Pass  47: suminf.    0.47210 (1) obj. -403.037 iterations 5
Cbc0038I Pass  48: suminf.    0.43766 (1) obj. -403.037 iterations 1
Cbc0038I Pass  49: suminf.    2.68067 (8) obj. -403.037 iterations 13
Cbc0038I Pass  50: suminf.    1.17675 (4) obj. -403.037 iterations 6
Cbc0038I Pass  51: suminf.    1.05230 (3) obj. -403.037 iterations 4
Cbc0038I Pass  52: suminf.    0.86246 (2) obj. -403.037 iterations 2
Cbc0038I Pass  53: suminf.    0.84766 (3) obj. -403.037 iterations 2
Cbc0038I Pass  54: suminf.    0.84766 (3) obj. -403.037 iterations 0
Cbc0038I Pass  55: suminf.    1.09545 (6) obj. -403.037 iterations 7
Cbc0038I Pass  56: suminf.    1.09545 (6) obj. -403.037 iterations 3
Cbc0038I Pass  57: suminf.    0.85038 (3) obj. -403.037 iterations 5
Cbc0038I Pass  58: suminf.    0.59319 (2) obj. -403.037 iterations 2
Cbc0038I Pass  59: suminf.    0.38382 (3) obj. -403.037 iterations 3
Cbc0038I Pass  60: suminf.    0.38382 (3) obj. -403.037 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -387.302 to -402 (0.02 seconds)
Cbc0038I Round again with cutoff of -421.619
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.97269 (4) obj. -421.619 iterations 0
Cbc0038I Pass  61: suminf.    0.68404 (3) obj. -421.619 iterations 6
Cbc0038I Pass  62: suminf.    0.68404 (3) obj. -421.619 iterations 0
Cbc0038I Pass  63: suminf.    1.31565 (3) obj. -421.619 iterations 3
Cbc0038I Pass  64: suminf.    0.79331 (2) obj. -421.619 iterations 2
Cbc0038I Pass  65: suminf.    1.88205 (6) obj. -421.619 iterations 9
Cbc0038I Pass  66: suminf.    1.82964 (5) obj. -421.619 iterations 2
Cbc0038I Pass  67: suminf.    0.75527 (3) obj. -421.619 iterations 5
Cbc0038I Pass  68: suminf.    0.62788 (3) obj. -421.619 iterations 2
Cbc0038I Pass  69: suminf.    0.88122 (4) obj. -421.619 iterations 3
Cbc0038I Pass  70: suminf.    0.88122 (4) obj. -421.619 iterations 0
Cbc0038I Pass  71: suminf.    1.12663 (4) obj. -421.619 iterations 3
Cbc0038I Pass  72: suminf.    1.05786 (4) obj. -421.619 iterations 1
Cbc0038I Pass  73: suminf.    0.88122 (4) obj. -421.619 iterations 4
Cbc0038I Pass  74: suminf.    1.59008 (6) obj. -421.619 iterations 2
Cbc0038I Pass  75: suminf.    1.31743 (5) obj. -421.619 iterations 2
Cbc0038I Pass  76: suminf.    0.88489 (4) obj. -421.619 iterations 7
Cbc0038I Pass  77: suminf.    0.88122 (4) obj. -421.619 iterations 1
Cbc0038I Pass  78: suminf.    1.12663 (4) obj. -421.619 iterations 3
Cbc0038I Pass  79: suminf.    1.05786 (4) obj. -421.619 iterations 1
Cbc0038I Pass  80: suminf.    0.88122 (4) obj. -421.619 iterations 4
Cbc0038I Pass  81: suminf.    1.21389 (6) obj. -421.619 iterations 9
Cbc0038I Pass  82: suminf.    1.21389 (6) obj. -421.619 iterations 1
Cbc0038I Pass  83: suminf.    0.77723 (3) obj. -421.619 iterations 3
Cbc0038I Pass  84: suminf.    0.74646 (3) obj. -421.619 iterations 2
Cbc0038I Pass  85: suminf.    0.74646 (3) obj. -421.619 iterations 0
Cbc0038I Pass  86: suminf.    1.01066 (6) obj. -421.619 iterations 4
Cbc0038I Pass  87: suminf.    0.92037 (4) obj. -421.619 iterations 2
Cbc0038I Pass  88: suminf.    1.24224 (7) obj. -421.619 iterations 4
Cbc0038I Pass  89: suminf.    1.15159 (6) obj. -421.619 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -402 - took 0.02 seconds
Cbc0012I Integer solution of -402 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 20 columns, reduced to 7 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -464.97723 to -464.97723 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -402, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

