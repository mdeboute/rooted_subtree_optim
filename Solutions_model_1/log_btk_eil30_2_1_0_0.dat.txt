Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 165 (-12) elements
Clp1000I sum of infeasibilities 0.00655622 - average 0.000117075, 5 fixed columns
Coin0506I Presolve 44 (-12) rows, 25 (-5) columns and 131 (-34) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 97.2197
Clp0000I Optimal - objective value 97.2197
Coin0511I After Postsolve, objective 97.2197, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 97.2197
Clp0000I Optimal - objective value 97.2197
Clp0000I Optimal - objective value 97.2197
Coin0511I After Postsolve, objective 97.2197, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.21969995 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 167 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.44146
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.36679 iterations 24
Cbc0038I Solution found of 3.36679
Cbc0038I Relaxing continuous gives 3.36679
Cbc0038I Rounding solution of -6.10534 is better than previous of 3.36679

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -6.10534 to -33.0168 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.8316
Cbc0038I Pass   2: suminf.    0.49470 (4) obj. -38.8316 iterations 6
Cbc0038I Pass   3: suminf.    0.49470 (4) obj. -38.8316 iterations 1
Cbc0038I Pass   4: suminf.    0.68807 (2) obj. -38.8316 iterations 6
Cbc0038I Pass   5: suminf.    0.66682 (2) obj. -38.8316 iterations 2
Cbc0038I Pass   6: suminf.    2.36386 (6) obj. -38.8316 iterations 13
Cbc0038I Pass   7: suminf.    1.16640 (9) obj. -38.8316 iterations 7
Cbc0038I Pass   8: suminf.    1.57220 (5) obj. -38.8316 iterations 13
Cbc0038I Pass   9: suminf.    1.43249 (6) obj. -38.8316 iterations 2
Cbc0038I Pass  10: suminf.    0.64754 (2) obj. -38.8316 iterations 6
Cbc0038I Pass  11: suminf.    0.86998 (2) obj. -38.8316 iterations 1
Cbc0038I Pass  12: suminf.    1.61761 (7) obj. -38.8316 iterations 6
Cbc0038I Pass  13: suminf.    1.17880 (5) obj. -38.8316 iterations 2
Cbc0038I Pass  14: suminf.    1.22157 (4) obj. -38.8316 iterations 5
Cbc0038I Pass  15: suminf.    0.99488 (3) obj. -38.8316 iterations 1
Cbc0038I Pass  16: suminf.    0.95948 (4) obj. -38.8316 iterations 1
Cbc0038I Pass  17: suminf.    0.86998 (2) obj. -38.8316 iterations 4
Cbc0038I Pass  18: suminf.    0.64754 (2) obj. -38.8316 iterations 1
Cbc0038I Pass  19: suminf.    1.06289 (6) obj. -38.8316 iterations 6
Cbc0038I Pass  20: suminf.    0.94827 (4) obj. -38.8316 iterations 3
Cbc0038I Pass  21: suminf.    2.36920 (10) obj. -38.8316 iterations 7
Cbc0038I Pass  22: suminf.    1.89457 (6) obj. -38.8316 iterations 7
Cbc0038I Pass  23: suminf.    1.40235 (6) obj. -38.8316 iterations 7
Cbc0038I Pass  24: suminf.    1.38567 (6) obj. -38.8316 iterations 1
Cbc0038I Pass  25: suminf.    1.80574 (6) obj. -38.8316 iterations 7
Cbc0038I Pass  26: suminf.    0.22946 (3) obj. -38.8316 iterations 6
Cbc0038I Pass  27: suminf.    0.90937 (3) obj. -38.8316 iterations 8
Cbc0038I Pass  28: suminf.    0.94910 (5) obj. -38.8316 iterations 5
Cbc0038I Pass  29: suminf.    0.65445 (2) obj. -38.8316 iterations 4
Cbc0038I Pass  30: suminf.    0.78922 (2) obj. -38.8316 iterations 1
Cbc0038I Pass  31: suminf.    1.61469 (4) obj. -38.8316 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 52 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -33.0168 to -35.5016 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.2982
Cbc0038I Pass  31: suminf.    1.06652 (8) obj. -49.2982 iterations 4
Cbc0038I Pass  32: suminf.    1.06368 (6) obj. -49.2982 iterations 2
Cbc0038I Pass  33: suminf.    1.21609 (3) obj. -49.2982 iterations 13
Cbc0038I Pass  34: suminf.    0.96847 (5) obj. -49.2982 iterations 6
Cbc0038I Pass  35: suminf.    1.88642 (7) obj. -49.2982 iterations 6
Cbc0038I Pass  36: suminf.    1.81457 (6) obj. -49.2982 iterations 1
Cbc0038I Pass  37: suminf.    1.84965 (5) obj. -49.2982 iterations 8
Cbc0038I Pass  38: suminf.    1.37475 (5) obj. -49.2982 iterations 2
Cbc0038I Pass  39: suminf.    0.77586 (4) obj. -49.2982 iterations 2
Cbc0038I Pass  40: suminf.    0.48795 (4) obj. -49.2982 iterations 1
Cbc0038I Pass  41: suminf.    1.29284 (5) obj. -49.2982 iterations 8
Cbc0038I Pass  42: suminf.    1.27157 (6) obj. -49.2982 iterations 2
Cbc0038I Pass  43: suminf.    1.76946 (6) obj. -49.2982 iterations 7
Cbc0038I Pass  44: suminf.    0.94055 (4) obj. -49.2982 iterations 5
Cbc0038I Pass  45: suminf.    0.80696 (4) obj. -49.2982 iterations 1
Cbc0038I Pass  46: suminf.    1.17039 (4) obj. -49.2982 iterations 5
Cbc0038I Pass  47: suminf.    1.17039 (4) obj. -49.2982 iterations 0
Cbc0038I Pass  48: suminf.    1.86697 (5) obj. -49.2982 iterations 5
Cbc0038I Pass  49: suminf.    1.31115 (4) obj. -49.2982 iterations 4
Cbc0038I Pass  50: suminf.    1.26272 (4) obj. -49.2982 iterations 2
Cbc0038I Pass  51: suminf.    1.82443 (4) obj. -49.2982 iterations 3
Cbc0038I Pass  52: suminf.    0.94218 (5) obj. -49.2982 iterations 4
Cbc0038I Pass  53: suminf.    0.80696 (4) obj. -49.2982 iterations 1
Cbc0038I Pass  54: suminf.    1.17039 (4) obj. -49.2982 iterations 5
Cbc0038I Pass  55: suminf.    1.17039 (4) obj. -49.2982 iterations 0
Cbc0038I Pass  56: suminf.    1.86697 (5) obj. -49.2982 iterations 5
Cbc0038I Pass  57: suminf.    1.31115 (4) obj. -49.2982 iterations 4
Cbc0038I Pass  58: suminf.    1.26272 (4) obj. -49.2982 iterations 2
Cbc0038I Pass  59: suminf.    1.82443 (4) obj. -49.2982 iterations 3
Cbc0038I Pass  60: suminf.    0.94218 (5) obj. -49.2982 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -35.5016 - took 0.05 seconds
Cbc0012I Integer solution of -35.501587 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 55 rows 30 columns, reduced to 34 rows 20 columns
Cbc0031I 16 added rows had average density of 22.75
Cbc0013I At root node, 16 cuts changed objective from -91.164282 to -57.906165 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1191 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 581 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.683 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -35.501587 best solution, best possible -57.906165 (1.43 seconds)
Cbc0001I Search completed - best objective -35.501587, took 2436 iterations and 6 nodes (1.46 seconds)
Cbc0032I Strong branching done 88 times (1282 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       1.47

