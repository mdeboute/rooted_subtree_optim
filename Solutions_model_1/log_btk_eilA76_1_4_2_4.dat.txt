Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 0.00014657 - average 1.21132e-06, 13 fixed columns
Coin0506I Presolve 96 (-25) rows, 54 (-13) columns and 293 (-75) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.37184903 - largest nonzero change 0 ( 0%) - largest zero change 2.929533e-05
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Coin0511I After Postsolve, objective 37.344754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Clp0000I Optimal - objective value 37.344754
Coin0511I After Postsolve, objective 37.344754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.34475417 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 67 columns (66 integer (66 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.37549
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.88316 iterations 33
Cbc0038I Solution found of 2.88316
Cbc0038I Relaxing continuous gives 2.88316
Cbc0038I Rounding solution of -9.77557 is better than previous of 2.88316

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -9.77557 to -10.2453 (0.02 seconds)
Cbc0038I Round again with cutoff of -12.9313
Cbc0038I Pass   2: suminf.    1.60196 (5) obj. -12.9313 iterations 10
Cbc0038I Pass   3: suminf.    1.60196 (5) obj. -12.9313 iterations 0
Cbc0038I Pass   4: suminf.    1.01980 (5) obj. -12.9313 iterations 11
Cbc0038I Pass   5: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass   6: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass   7: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass   8: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass   9: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  10: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  11: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  12: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  13: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  14: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  15: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  16: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  17: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  18: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  19: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  20: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  21: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  22: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  23: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  24: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I Pass  25: suminf.    1.01980 (5) obj. -12.9313 iterations 7
Cbc0038I Pass  26: suminf.    1.01980 (5) obj. -12.9313 iterations 0
Cbc0038I Pass  27: suminf.    1.19896 (4) obj. -12.9313 iterations 7
Cbc0038I Pass  28: suminf.    1.19695 (3) obj. -12.9313 iterations 4
Cbc0038I Pass  29: suminf.    0.99549 (3) obj. -12.9313 iterations 2
Cbc0038I Pass  30: suminf.    1.16166 (4) obj. -12.9313 iterations 4
Cbc0038I Pass  31: suminf.    1.16166 (4) obj. -12.9313 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -10.2453 - took 0.04 seconds
Cbc0012I Integer solution of -10.24534 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 121 rows 67 columns, reduced to 58 rows 33 columns
Cbc0031I 17 added rows had average density of 52.294118
Cbc0013I At root node, 17 cuts changed objective from -37.103809 to -28.601931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9693 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 66.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.24534 best solution, best possible -28.601931 (0.70 seconds)
Cbc0004I Integer solution of -11.55095 found after 7687 iterations and 25 nodes (0.86 seconds)
Cbc0038I Full problem 121 rows 67 columns, reduced to 9 rows 8 columns
Cbc0012I Integer solution of -11.783 found by RINS after 7850 iterations and 42 nodes (0.88 seconds)
Cbc0001I Search completed - best objective -11.783, took 8483 iterations and 70 nodes (0.91 seconds)
Cbc0032I Strong branching done 694 times (11531 iterations), fathomed 3 nodes and fixed 34 variables
Cbc0035I Maximum depth 15, 153 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       0.92

