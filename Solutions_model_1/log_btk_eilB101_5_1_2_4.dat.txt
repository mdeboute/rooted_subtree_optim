Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 99 (-4) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 4.43188e-05 - average 2.42179e-07, 9 fixed columns
Coin0506I Presolve 159 (-24) rows, 87 (-12) columns and 484 (-72) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Coin0511I After Postsolve, objective 47.249562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Coin0511I After Postsolve, objective 47.249562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.2495622 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.919%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 7.35414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.33818 iterations 85
Cbc0038I Solution found of -3.33818
Cbc0038I Relaxing continuous gives -3.33818
Cbc0038I Rounding solution of -19.0096 is better than previous of -3.33818

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -19.0096 to -20.3641 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.0527
Cbc0038I Pass   2: suminf.    1.49777 (10) obj. -23.0527 iterations 21
Cbc0038I Pass   3: suminf.    1.06755 (4) obj. -23.0527 iterations 11
Cbc0038I Pass   4: suminf.    1.55923 (4) obj. -23.0527 iterations 12
Cbc0038I Pass   5: suminf.    1.14822 (4) obj. -23.0527 iterations 4
Cbc0038I Pass   6: suminf.    0.42574 (4) obj. -23.0527 iterations 4
Cbc0038I Pass   7: suminf.    0.35818 (3) obj. -23.0527 iterations 2
Cbc0038I Pass   8: suminf.    3.91253 (13) obj. -23.0527 iterations 23
Cbc0038I Pass   9: suminf.    1.20889 (5) obj. -23.0527 iterations 29
Cbc0038I Pass  10: suminf.    0.82046 (4) obj. -23.0527 iterations 1
Cbc0038I Pass  11: suminf.    2.67346 (12) obj. -23.0527 iterations 35
Cbc0038I Pass  12: suminf.    1.70566 (9) obj. -23.0527 iterations 12
Cbc0038I Pass  13: suminf.    1.88064 (5) obj. -23.0527 iterations 18
Cbc0038I Pass  14: suminf.    1.04712 (3) obj. -23.0527 iterations 8
Cbc0038I Pass  15: suminf.    0.99601 (3) obj. -23.0527 iterations 3
Cbc0038I Pass  16: suminf.    1.24125 (4) obj. -23.0527 iterations 6
Cbc0038I Pass  17: suminf.    1.24125 (4) obj. -23.0527 iterations 0
Cbc0038I Pass  18: suminf.    1.03547 (3) obj. -23.0527 iterations 7
Cbc0038I Pass  19: suminf.    1.75751 (7) obj. -23.0527 iterations 24
Cbc0038I Pass  20: suminf.    1.15352 (7) obj. -23.0527 iterations 13
Cbc0038I Pass  21: suminf.    1.65079 (5) obj. -23.0527 iterations 18
Cbc0038I Pass  22: suminf.    1.22920 (4) obj. -23.0527 iterations 8
Cbc0038I Pass  23: suminf.    1.13297 (4) obj. -23.0527 iterations 1
Cbc0038I Pass  24: suminf.    0.39591 (3) obj. -23.0527 iterations 8
Cbc0038I Pass  25: suminf.    0.82390 (3) obj. -23.0527 iterations 6
Cbc0038I Pass  26: suminf.    0.50727 (5) obj. -23.0527 iterations 7
Cbc0038I Pass  27: suminf.    1.22197 (4) obj. -23.0527 iterations 12
Cbc0038I Pass  28: suminf.    0.54149 (5) obj. -23.0527 iterations 5
Cbc0038I Pass  29: suminf.    1.81502 (12) obj. -23.0527 iterations 26
Cbc0038I Pass  30: suminf.    0.61262 (4) obj. -23.0527 iterations 30
Cbc0038I Pass  31: suminf.    1.18550 (4) obj. -23.0527 iterations 4
Cbc0038I Rounding solution of -23.3964 is better than previous of -20.3641

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 126 rows 70 columns - 1 fixed gives 116, 69 - still too large
Cbc0038I Full problem 183 rows 99 columns, reduced to 116 rows 69 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -28.1671
Cbc0038I Pass  31: suminf.    2.13089 (12) obj. -28.1671 iterations 2
Cbc0038I Pass  32: suminf.    1.70084 (8) obj. -28.1671 iterations 10
Cbc0038I Pass  33: suminf.    2.45559 (7) obj. -28.1671 iterations 21
Cbc0038I Pass  34: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  35: suminf.    1.94437 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  36: suminf.    1.56974 (7) obj. -28.1671 iterations 14
Cbc0038I Pass  37: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  38: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  39: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  40: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  41: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  42: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  43: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  44: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  45: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  46: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  47: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  48: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  49: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  50: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  51: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  52: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  53: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  54: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  55: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  56: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  57: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  58: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  59: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  60: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 104 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -23.3964 - took 0.11 seconds
Cbc0012I Integer solution of -23.3964 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 100 rows 57 columns
Cbc0031I 28 added rows had average density of 57.75
Cbc0013I At root node, 28 cuts changed objective from -47.249562 to -42.35645 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14985 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.3964 best solution, best possible -42.35645 (1.42 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 72 rows 42 columns
Cbc0012I Integer solution of -23.45748 found by RINS after 10555 iterations and 44 nodes (1.82 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 3 rows 4 columns
Cbc0001I Search completed - best objective -23.45748, took 13949 iterations and 156 nodes (2.10 seconds)
Cbc0032I Strong branching done 1560 times (26221 iterations), fathomed 15 nodes and fixed 73 variables
Cbc0035I Maximum depth 48, 432 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       2.11

