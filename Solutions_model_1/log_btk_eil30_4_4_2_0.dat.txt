Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 27 (-5) columns and 140 (-37) elements
Clp1000I sum of infeasibilities 1.41693e-05 - average 3.01474e-07, 2 fixed columns
Coin0506I Presolve 37 (-10) rows, 25 (-2) columns and 116 (-24) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Coin0511I After Postsolve, objective 74.766767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Coin0511I After Postsolve, objective 74.766767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.76676728 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 47 rows, 27 columns (26 integer (26 of which binary)) and 140 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.50122
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.47079 iterations 22
Cbc0038I Solution found of -5.47079
Cbc0038I Relaxing continuous gives -5.47079
Cbc0038I Rounding solution of -5.52225 is better than previous of -5.47079

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 27 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -5.52225 to -23.9191 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.004
Cbc0038I Pass   2: suminf.    0.41127 (2) obj. -29.004 iterations 3
Cbc0038I Pass   3: suminf.    0.41129 (1) obj. -29.004 iterations 2
Cbc0038I Pass   4: suminf.    0.24614 (2) obj. -29.004 iterations 2
Cbc0038I Pass   5: suminf.    0.33871 (1) obj. -29.004 iterations 2
Cbc0038I Pass   6: suminf.    0.41172 (2) obj. -29.004 iterations 2
Cbc0038I Pass   7: suminf.    2.45929 (6) obj. -29.004 iterations 5
Cbc0038I Pass   8: suminf.    0.65779 (2) obj. -29.004 iterations 2
Cbc0038I Pass   9: suminf.    1.54970 (5) obj. -29.004 iterations 8
Cbc0038I Pass  10: suminf.    0.86921 (4) obj. -29.004 iterations 2
Cbc0038I Pass  11: suminf.    0.57360 (3) obj. -29.004 iterations 7
Cbc0038I Pass  12: suminf.    0.98371 (5) obj. -29.004 iterations 6
Cbc0038I Pass  13: suminf.    0.72311 (4) obj. -29.004 iterations 2
Cbc0038I Pass  14: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  15: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  16: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  17: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  18: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  19: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  20: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  21: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  22: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  23: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  24: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  25: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  26: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  27: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  28: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  29: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  30: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  31: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 27 columns, reduced to 35 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.9191 - took 0.05 seconds
Cbc0012I Integer solution of -23.919115 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 27 columns, reduced to 31 rows 21 columns
Cbc0031I 13 added rows had average density of 15.230769
Cbc0013I At root node, 13 cuts changed objective from -74.766767 to -37.016282 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1971 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1141 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 165 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -24.02014 found by DiveCoefficient after 2228 iterations and 1 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -24.02014, took 2491 iterations and 4 nodes (0.20 seconds)
Cbc0032I Strong branching done 50 times (555 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.20

