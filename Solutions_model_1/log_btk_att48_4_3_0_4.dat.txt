Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 59 (-40) rows, 32 (-18) columns and 175 (-110) elements
Clp0000I Optimal - objective value 13047.919
Coin0511I After Postsolve, objective 13047.919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13047.91877 - 34 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 59 rows, 32 columns (31 integer (31 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.740%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 8.45114
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8759.5 iterations 25
Cbc0038I Solution found of -8759.5
Cbc0038I Relaxing continuous gives -8759.5
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -8759.5 to -12547.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -12597.9
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.53965 (10) obj. -12597.9 iterations 14
Cbc0038I Pass   3: suminf.    2.00000 (6) obj. -12597.9 iterations 8
Cbc0038I Pass   4: suminf.    2.02816 (6) obj. -12597.9 iterations 10
Cbc0038I Pass   5: suminf.    2.05632 (7) obj. -12597.9 iterations 11
Cbc0038I Pass   6: suminf.    1.04378 (5) obj. -12597.9 iterations 10
Cbc0038I Pass   7: suminf.    1.01228 (9) obj. -12597.9 iterations 3
Cbc0038I Pass   8: suminf.    0.17191 (8) obj. -12597.9 iterations 10
Cbc0038I Pass   9: suminf.    0.03128 (1) obj. -12597.9 iterations 14
Cbc0038I Pass  10: suminf.    0.05146 (1) obj. -12597.9 iterations 3
Cbc0038I Pass  11: suminf.    1.30341 (11) obj. -12597.9 iterations 15
Cbc0038I Pass  12: suminf.    0.05853 (2) obj. -12597.9 iterations 10
Cbc0038I Pass  13: suminf.    0.15769 (4) obj. -12597.9 iterations 6
Cbc0038I Pass  14: suminf.    0.19087 (4) obj. -12597.9 iterations 3
Cbc0038I Pass  15: suminf.    0.16981 (4) obj. -12597.9 iterations 8
Cbc0038I Pass  16: suminf.    0.04251 (3) obj. -12597.9 iterations 12
Cbc0038I Pass  17: suminf.    0.30069 (5) obj. -12597.9 iterations 13
Cbc0038I Pass  18: suminf.    2.28640 (17) obj. -12597.9 iterations 9
Cbc0038I Pass  19: suminf.    0.38730 (7) obj. -12597.9 iterations 7
Cbc0038I Pass  20: suminf.    0.11835 (4) obj. -12597.9 iterations 5
Cbc0038I Pass  21: suminf.    1.90609 (12) obj. -12597.9 iterations 13
Cbc0038I Pass  22: suminf.    1.90609 (12) obj. -12597.9 iterations 0
Cbc0038I Pass  23: suminf.    1.81918 (9) obj. -12597.9 iterations 7
Cbc0038I Pass  24: suminf.    0.03128 (1) obj. -12597.9 iterations 13
Cbc0038I Pass  25: suminf.    0.05146 (1) obj. -12597.9 iterations 3
Cbc0038I Pass  26: suminf.    3.02284 (11) obj. -12597.9 iterations 14
Cbc0038I Pass  27: suminf.    2.97560 (14) obj. -12597.9 iterations 2
Cbc0038I Pass  28: suminf.    0.17189 (5) obj. -12597.9 iterations 10
Cbc0038I Pass  29: suminf.    0.29938 (4) obj. -12597.9 iterations 13
Cbc0038I Pass  30: suminf.    0.29965 (4) obj. -12597.9 iterations 5
Cbc0038I Pass  31: suminf.    0.18269 (4) obj. -12597.9 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 39 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -12547.9 - took 0.02 seconds
Cbc0012I Integer solution of -12547.89 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 59 rows 32 columns, reduced to 30 rows 21 columns
Cbc0031I 8 added rows had average density of 5.125
Cbc0013I At root node, 27 cuts changed objective from -13047.919 to -12547.89 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 84 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -12547.89, took 28 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

