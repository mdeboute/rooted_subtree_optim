Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 20 (-5) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 6.23487e-07 - average 1.78139e-08, 4 fixed columns
Coin0506I Presolve 23 (-12) rows, 16 (-4) columns and 70 (-32) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.3662388 - largest nonzero change 0 ( 0%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Coin0511I After Postsolve, objective 86.244406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Clp0000I Optimal - objective value 86.244406
Coin0511I After Postsolve, objective 86.244406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.24440621 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.024%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.51994
Cbc0038I Pass   1: suminf.    0.62006 (2) obj. -25.7753 iterations 16
Cbc0038I Solution found of -1.75769
Cbc0038I Relaxing continuous gives -1.75769
Cbc0038I Rounding solution of -12.9336 is better than previous of -1.75769

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20.1644
Cbc0038I Pass   2: suminf.    0.62006 (2) obj. -25.7753 iterations 0
Cbc0038I Pass   3: suminf.    0.30621 (4) obj. -20.1644 iterations 6
Cbc0038I Pass   4: suminf.    0.36893 (2) obj. -20.1644 iterations 5
Cbc0038I Pass   5: suminf.    0.23988 (2) obj. -20.1644 iterations 1
Cbc0038I Pass   6: suminf.    0.35772 (3) obj. -20.1644 iterations 6
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -20.1958 iterations 3
Cbc0038I Solution found of -20.1958
Cbc0038I Relaxing continuous gives -20.1958
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.2048
Cbc0038I Pass   8: suminf.    0.64884 (4) obj. -33.2048 iterations 2
Cbc0038I Pass   9: suminf.    0.73714 (6) obj. -33.2048 iterations 7
Cbc0038I Pass  10: suminf.    0.51606 (8) obj. -33.2048 iterations 3
Cbc0038I Pass  11: suminf.    1.24002 (3) obj. -33.2048 iterations 9
Cbc0038I Pass  12: suminf.    0.84375 (4) obj. -33.2048 iterations 3
Cbc0038I Pass  13: suminf.    1.31608 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  14: suminf.    0.95507 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  15: suminf.    1.60907 (5) obj. -33.2048 iterations 4
Cbc0038I Pass  16: suminf.    1.27319 (4) obj. -33.2048 iterations 2
Cbc0038I Pass  17: suminf.    1.41766 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  18: suminf.    1.10983 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  19: suminf.    2.35790 (7) obj. -33.2048 iterations 6
Cbc0038I Pass  20: suminf.    2.31348 (6) obj. -33.2048 iterations 1
Cbc0038I Pass  21: suminf.    1.39007 (6) obj. -33.2048 iterations 3
Cbc0038I Pass  22: suminf.    0.79220 (5) obj. -33.2048 iterations 1
Cbc0038I Pass  23: suminf.    0.41294 (3) obj. -33.2048 iterations 3
Cbc0038I Pass  24: suminf.    1.67318 (5) obj. -33.2048 iterations 6
Cbc0038I Pass  25: suminf.    1.41766 (3) obj. -33.2048 iterations 4
Cbc0038I Pass  26: suminf.    1.10983 (3) obj. -33.2048 iterations 2
Cbc0038I Pass  27: suminf.    1.10983 (3) obj. -33.2048 iterations 0
Cbc0038I Pass  28: suminf.    0.99851 (4) obj. -33.2048 iterations 1
Cbc0038I Pass  29: suminf.    0.99851 (4) obj. -33.2048 iterations 0
Cbc0038I Pass  30: suminf.    0.60474 (5) obj. -33.2048 iterations 12
Cbc0038I Pass  31: suminf.    0.24990 (4) obj. -33.2048 iterations 1
Cbc0038I Pass  32: suminf.    1.04262 (5) obj. -33.2048 iterations 8
Cbc0038I Pass  33: suminf.    0.59382 (4) obj. -33.2048 iterations 3
Cbc0038I Pass  34: suminf.    0.85977 (3) obj. -33.2048 iterations 4
Cbc0038I Pass  35: suminf.    0.29706 (2) obj. -33.2048 iterations 1
Cbc0038I Pass  36: suminf.    1.00332 (5) obj. -33.2048 iterations 5
Cbc0038I Pass  37: suminf.    1.24002 (3) obj. -33.2048 iterations 4
Cbc0038I Rounding solution of -22.9204 is better than previous of -20.1958

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -48.8155
Cbc0038I Pass  37: suminf.    0.92422 (7) obj. -48.8155 iterations 4
Cbc0038I Pass  38: suminf.    1.49706 (6) obj. -48.8155 iterations 11
Cbc0038I Pass  39: suminf.    1.29821 (6) obj. -48.8155 iterations 1
Cbc0038I Pass  40: suminf.    0.82664 (6) obj. -48.8155 iterations 3
Cbc0038I Pass  41: suminf.    1.99108 (8) obj. -48.8155 iterations 10
Cbc0038I Pass  42: suminf.    1.80275 (6) obj. -48.8155 iterations 2
Cbc0038I Pass  43: suminf.    1.02090 (5) obj. -48.8155 iterations 3
Cbc0038I Pass  44: suminf.    0.98050 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  45: suminf.    1.69391 (6) obj. -48.8155 iterations 5
Cbc0038I Pass  46: suminf.    1.62323 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  47: suminf.    1.45642 (5) obj. -48.8155 iterations 4
Cbc0038I Pass  48: suminf.    1.45642 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  49: suminf.    1.56474 (5) obj. -48.8155 iterations 4
Cbc0038I Pass  50: suminf.    1.53632 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  51: suminf.    1.73575 (4) obj. -48.8155 iterations 2
Cbc0038I Pass  52: suminf.    1.73575 (4) obj. -48.8155 iterations 0
Cbc0038I Pass  53: suminf.    1.76050 (5) obj. -48.8155 iterations 2
Cbc0038I Pass  54: suminf.    1.73575 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  55: suminf.    1.73575 (4) obj. -48.8155 iterations 0
Cbc0038I Pass  56: suminf.    1.56474 (5) obj. -48.8155 iterations 3
Cbc0038I Pass  57: suminf.    1.53632 (4) obj. -48.8155 iterations 1
Cbc0038I Pass  58: suminf.    1.73575 (4) obj. -48.8155 iterations 2
Cbc0038I Pass  59: suminf.    2.88765 (8) obj. -48.8155 iterations 7
Cbc0038I Pass  60: suminf.    1.89106 (7) obj. -48.8155 iterations 1
Cbc0038I Pass  61: suminf.    1.60935 (5) obj. -48.8155 iterations 2
Cbc0038I Pass  62: suminf.    1.60935 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  63: suminf.    1.83336 (6) obj. -48.8155 iterations 3
Cbc0038I Pass  64: suminf.    1.77986 (5) obj. -48.8155 iterations 1
Cbc0038I Pass  65: suminf.    1.77986 (5) obj. -48.8155 iterations 0
Cbc0038I Pass  66: suminf.    1.66647 (6) obj. -48.8155 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.9204 - took 0.03 seconds
Cbc0012I Integer solution of -26.52147 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 21 rows 15 columns
Cbc0031I 10 added rows had average density of 14.3
Cbc0013I At root node, 10 cuts changed objective from -85.240543 to -36.61713 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1473 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 687 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -28.93998 found by rounding after 1573 iterations and 1 nodes (0.15 seconds)
Cbc0004I Integer solution of -33.3717 found after 1588 iterations and 1 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -33.37170000000003, took 1672 iterations and 2 nodes (0.15 seconds)
Cbc0032I Strong branching done 32 times (299 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

