Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-19) rows, 18 (-7) columns and 88 (-47) elements
Clp1000I sum of infeasibilities 8.85925e-07 - average 2.95308e-08, 4 fixed columns
Coin0506I Presolve 20 (-10) rows, 14 (-4) columns and 60 (-28) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Coin0511I After Postsolve, objective 73.693667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.2366774 - largest nonzero change 1.5935982e-05 ( 0.0015935982%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Coin0511I After Postsolve, objective 73.693667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.69366723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 18 columns (17 integer (17 of which binary)) and 89 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.955%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.16029
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.52296 iterations 12
Cbc0038I Solution found of -3.52296
Cbc0038I Relaxing continuous gives -3.52296
Cbc0038I Rounding solution of -4.40464 is better than previous of -3.52296

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -4.40464 to -23.2014 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2507
Cbc0038I Pass   2: suminf.    0.23690 (2) obj. -28.2507 iterations 2
Cbc0038I Pass   3: suminf.    0.61165 (3) obj. -28.2507 iterations 7
Cbc0038I Pass   4: suminf.    1.27849 (5) obj. -28.2507 iterations 3
Cbc0038I Pass   5: suminf.    1.13762 (4) obj. -28.2507 iterations 1
Cbc0038I Pass   6: suminf.    1.03235 (5) obj. -28.2507 iterations 4
Cbc0038I Pass   7: suminf.    0.82986 (3) obj. -28.2507 iterations 2
Cbc0038I Pass   8: suminf.    0.69090 (3) obj. -28.2507 iterations 2
Cbc0038I Pass   9: suminf.    1.04310 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  10: suminf.    1.39362 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  11: suminf.    1.29378 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  12: suminf.    1.15585 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  13: suminf.    1.03235 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  14: suminf.    0.82986 (3) obj. -28.2507 iterations 2
Cbc0038I Pass  15: suminf.    0.69090 (3) obj. -28.2507 iterations 2
Cbc0038I Pass  16: suminf.    1.04310 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  17: suminf.    0.72366 (3) obj. -28.2507 iterations 7
Cbc0038I Pass  18: suminf.    0.64481 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  19: suminf.    1.14356 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  20: suminf.    0.75249 (5) obj. -28.2507 iterations 1
Cbc0038I Pass  21: suminf.    0.74276 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  22: suminf.    1.02437 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  23: suminf.    0.96792 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  24: suminf.    1.05121 (3) obj. -28.2507 iterations 3
Cbc0038I Pass  25: suminf.    1.05121 (3) obj. -28.2507 iterations 0
Cbc0038I Pass  26: suminf.    1.07231 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  27: suminf.    1.05121 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  28: suminf.    1.30099 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  29: suminf.    1.19005 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  30: suminf.    1.15454 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  31: suminf.    1.65449 (6) obj. -28.2507 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -23.2014 to -31.1494 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.6584
Cbc0038I Pass  31: suminf.    0.56704 (4) obj. -39.6584 iterations 2
Cbc0038I Pass  32: suminf.    0.70261 (4) obj. -39.6584 iterations 6
Cbc0038I Pass  33: suminf.    0.70248 (4) obj. -39.6584 iterations 1
Cbc0038I Pass  34: suminf.    1.32900 (5) obj. -39.6584 iterations 4
Cbc0038I Pass  35: suminf.    0.63621 (3) obj. -39.6584 iterations 4
Cbc0038I Pass  36: suminf.    1.69927 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  37: suminf.    1.35700 (4) obj. -39.6584 iterations 1
Cbc0038I Pass  38: suminf.    0.60236 (3) obj. -39.6584 iterations 2
Cbc0038I Pass  39: suminf.    1.21464 (4) obj. -39.6584 iterations 5
Cbc0038I Pass  40: suminf.    1.37661 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  41: suminf.    1.37021 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  42: suminf.    1.68428 (6) obj. -39.6584 iterations 6
Cbc0038I Pass  43: suminf.    1.68299 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  44: suminf.    2.08521 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  45: suminf.    2.08521 (6) obj. -39.6584 iterations 0
Cbc0038I Pass  46: suminf.    2.54423 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  47: suminf.    2.24852 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  48: suminf.    1.85972 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  49: suminf.    1.85972 (5) obj. -39.6584 iterations 0
Cbc0038I Pass  50: suminf.    1.93285 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  51: suminf.    1.91037 (5) obj. -39.6584 iterations 4
Cbc0038I Pass  52: suminf.    1.85972 (5) obj. -39.6584 iterations 2
Cbc0038I Pass  53: suminf.    3.06864 (10) obj. -39.6584 iterations 7
Cbc0038I Pass  54: suminf.    2.19941 (7) obj. -39.6584 iterations 3
Cbc0038I Pass  55: suminf.    1.58847 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  56: suminf.    1.56374 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  57: suminf.    1.85972 (5) obj. -39.6584 iterations 2
Cbc0038I Pass  58: suminf.    1.85972 (5) obj. -39.6584 iterations 0
Cbc0038I Pass  59: suminf.    1.93285 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  60: suminf.    2.35370 (7) obj. -39.6584 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.1494 - took 0.03 seconds
Cbc0012I Integer solution of -31.149436 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 18 columns, reduced to 20 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -73.693667 to -8.5963003 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.1494356, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

