Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 4.51852e-05 - average 3.29819e-07, 19 fixed columns
Coin0506I Presolve 99 (-38) rows, 55 (-20) columns and 300 (-116) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Coin0511I After Postsolve, objective 66.242755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Clp0000I Optimal - objective value 66.242755
Coin0511I After Postsolve, objective 66.242755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.24275539 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.598%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.51031
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.5714 iterations 45
Cbc0038I Solution found of -15.5714
Cbc0038I Relaxing continuous gives -15.5714
Cbc0038I Rounding solution of -28.1636 is better than previous of -15.5714

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -28.1636 to -36.0719 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.0891
Cbc0038I Pass   2: suminf.    1.21516 (5) obj. -39.0891 iterations 9
Cbc0038I Pass   3: suminf.    0.91005 (4) obj. -39.0891 iterations 1
Cbc0038I Pass   4: suminf.    1.46524 (4) obj. -39.0891 iterations 8
Cbc0038I Pass   5: suminf.    0.25136 (1) obj. -39.0891 iterations 4
Cbc0038I Pass   6: suminf.    0.39296 (1) obj. -39.0891 iterations 1
Cbc0038I Pass   7: suminf.    2.53559 (7) obj. -39.0891 iterations 16
Cbc0038I Pass   8: suminf.    0.22062 (2) obj. -39.0891 iterations 20
Cbc0038I Pass   9: suminf.    0.16498 (2) obj. -39.0891 iterations 1
Cbc0038I Pass  10: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  11: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  12: suminf.    2.69911 (7) obj. -39.0891 iterations 14
Cbc0038I Pass  13: suminf.    1.27854 (4) obj. -39.0891 iterations 10
Cbc0038I Pass  14: suminf.    1.33536 (3) obj. -39.0891 iterations 5
Cbc0038I Pass  15: suminf.    0.64077 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  16: suminf.    0.25136 (1) obj. -39.0891 iterations 4
Cbc0038I Pass  17: suminf.    0.39296 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  18: suminf.    2.62040 (8) obj. -39.0891 iterations 18
Cbc0038I Pass  19: suminf.    0.81148 (3) obj. -39.0891 iterations 17
Cbc0038I Pass  20: suminf.    0.72084 (3) obj. -39.0891 iterations 1
Cbc0038I Pass  21: suminf.    0.35091 (1) obj. -39.0891 iterations 3
Cbc0038I Pass  22: suminf.    0.16498 (2) obj. -39.0891 iterations 3
Cbc0038I Pass  23: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  24: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Pass  25: suminf.    3.33843 (11) obj. -39.0891 iterations 17
Cbc0038I Pass  26: suminf.    0.69068 (3) obj. -39.0891 iterations 24
Cbc0038I Pass  27: suminf.    0.69068 (3) obj. -39.0891 iterations 0
Cbc0038I Pass  28: suminf.    0.49053 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  29: suminf.    0.16498 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  30: suminf.    0.64817 (2) obj. -39.0891 iterations 2
Cbc0038I Pass  31: suminf.    0.35091 (1) obj. -39.0891 iterations 1
Cbc0038I Rounding solution of -36.0732 is better than previous of -36.0719

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 80 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -44.5198
Cbc0038I Pass  31: suminf.    1.55415 (7) obj. -44.5198 iterations 1
Cbc0038I Pass  32: suminf.    1.25566 (4) obj. -44.5198 iterations 6
Cbc0038I Pass  33: suminf.    1.38484 (4) obj. -44.5198 iterations 8
Cbc0038I Pass  34: suminf.    0.56594 (3) obj. -44.5198 iterations 6
Cbc0038I Pass  35: suminf.    1.10799 (3) obj. -44.5198 iterations 3
Cbc0038I Pass  36: suminf.    2.61352 (9) obj. -44.5198 iterations 14
Cbc0038I Pass  37: suminf.    1.55415 (7) obj. -44.5198 iterations 19
Cbc0038I Pass  38: suminf.    1.25566 (4) obj. -44.5198 iterations 6
Cbc0038I Pass  39: suminf.    1.38484 (4) obj. -44.5198 iterations 7
Cbc0038I Pass  40: suminf.    0.56594 (3) obj. -44.5198 iterations 5
Cbc0038I Pass  41: suminf.    1.10799 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  42: suminf.    2.26197 (9) obj. -44.5198 iterations 12
Cbc0038I Pass  43: suminf.    1.15907 (4) obj. -44.5198 iterations 9
Cbc0038I Pass  44: suminf.    0.74275 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  45: suminf.    3.26224 (8) obj. -44.5198 iterations 10
Cbc0038I Pass  46: suminf.    1.49502 (5) obj. -44.5198 iterations 15
Cbc0038I Pass  47: suminf.    0.92336 (3) obj. -44.5198 iterations 5
Cbc0038I Pass  48: suminf.    0.78883 (3) obj. -44.5198 iterations 13
Cbc0038I Pass  49: suminf.    0.56594 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  50: suminf.    1.10799 (3) obj. -44.5198 iterations 2
Cbc0038I Pass  51: suminf.    1.61331 (7) obj. -44.5198 iterations 11
Cbc0038I Pass  52: suminf.    0.78883 (3) obj. -44.5198 iterations 22
Cbc0038I Pass  53: suminf.    1.90292 (5) obj. -44.5198 iterations 13
Cbc0038I Pass  54: suminf.    1.73510 (4) obj. -44.5198 iterations 11
Cbc0038I Pass  55: suminf.    1.08265 (4) obj. -44.5198 iterations 2
Cbc0038I Pass  56: suminf.    0.56594 (3) obj. -44.5198 iterations 7
Cbc0038I Pass  57: suminf.    1.10799 (3) obj. -44.5198 iterations 3
Cbc0038I Pass  58: suminf.    1.62895 (7) obj. -44.5198 iterations 12
Cbc0038I Pass  59: suminf.    0.78883 (3) obj. -44.5198 iterations 17
Cbc0038I Pass  60: suminf.    2.01373 (7) obj. -44.5198 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -36.0732 - took 0.06 seconds
Cbc0012I Integer solution of -36.07321 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 56 rows 32 columns
Cbc0031I 20 added rows had average density of 54.1
Cbc0013I At root node, 20 cuts changed objective from -66.242755 to -55.886514 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6186 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1262 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 24 nodes, 2 on tree, -36.07321 best solution, best possible -55.886514 (0.68 seconds)
Cbc0001I Search completed - best objective -36.07321, took 6434 iterations and 28 nodes (0.69 seconds)
Cbc0032I Strong branching done 416 times (8664 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 11, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.70

