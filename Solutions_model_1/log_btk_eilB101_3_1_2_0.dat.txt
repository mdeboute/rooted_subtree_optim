Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 97 (-6) columns and 544 (-59) elements
Clp1000I sum of infeasibilities 7.61836e-05 - average 4.25607e-07, 22 fixed columns
Coin0506I Presolve 132 (-47) rows, 73 (-24) columns and 402 (-142) elements
Clp0029I End of values pass after 73 iterations
Clp0000I Optimal - objective value 45.499288
Clp0000I Optimal - objective value 45.499288
Coin0511I After Postsolve, objective 45.499288, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.499288
Clp0000I Optimal - objective value 45.499288
Clp0000I Optimal - objective value 45.499288
Coin0511I After Postsolve, objective 45.499288, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.49928768 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 97 columns (96 integer (96 of which binary)) and 595 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.401%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 7.46839
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.66428 iterations 71
Cbc0038I Solution found of -0.66428
Cbc0038I Relaxing continuous gives -0.66428
Cbc0038I Rounding solution of -19.6746 is better than previous of -0.66428

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 97 columns, reduced to 70 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -19.6746 to -21.095 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.4498
Cbc0038I Pass   2: suminf.    2.62936 (16) obj. -23.4498 iterations 25
Cbc0038I Pass   3: suminf.    1.37193 (6) obj. -23.4498 iterations 23
Cbc0038I Pass   4: suminf.    1.19680 (5) obj. -23.4498 iterations 4
Cbc0038I Pass   5: suminf.    1.83725 (7) obj. -23.4498 iterations 14
Cbc0038I Pass   6: suminf.    1.45236 (6) obj. -23.4498 iterations 1
Cbc0038I Pass   7: suminf.    1.29954 (5) obj. -23.4498 iterations 1
Cbc0038I Pass   8: suminf.    1.29573 (5) obj. -23.4498 iterations 1
Cbc0038I Pass   9: suminf.    1.26881 (4) obj. -23.4498 iterations 12
Cbc0038I Pass  10: suminf.    0.87739 (5) obj. -23.4498 iterations 8
Cbc0038I Pass  11: suminf.    0.79134 (5) obj. -23.4498 iterations 4
Cbc0038I Pass  12: suminf.    1.80324 (6) obj. -23.4498 iterations 8
Cbc0038I Pass  13: suminf.    1.77244 (6) obj. -23.4498 iterations 2
Cbc0038I Pass  14: suminf.    0.81638 (4) obj. -23.4498 iterations 5
Cbc0038I Pass  15: suminf.    3.58245 (11) obj. -23.4498 iterations 19
Cbc0038I Pass  16: suminf.    0.97612 (6) obj. -23.4498 iterations 20
Cbc0038I Pass  17: suminf.    0.50189 (4) obj. -23.4498 iterations 2
Cbc0038I Pass  18: suminf.    1.80308 (5) obj. -23.4498 iterations 9
Cbc0038I Pass  19: suminf.    1.32672 (5) obj. -23.4498 iterations 3
Cbc0038I Pass  20: suminf.    1.55849 (5) obj. -23.4498 iterations 4
Cbc0038I Pass  21: suminf.    1.32652 (4) obj. -23.4498 iterations 4
Cbc0038I Pass  22: suminf.    0.50189 (4) obj. -23.4498 iterations 5
Cbc0038I Pass  23: suminf.    0.50189 (4) obj. -23.4498 iterations 2
Cbc0038I Pass  24: suminf.    1.80308 (5) obj. -23.4498 iterations 9
Cbc0038I Pass  25: suminf.    1.32672 (5) obj. -23.4498 iterations 3
Cbc0038I Pass  26: suminf.    1.55849 (5) obj. -23.4498 iterations 4
Cbc0038I Pass  27: suminf.    1.32652 (4) obj. -23.4498 iterations 4
Cbc0038I Pass  28: suminf.    0.50189 (4) obj. -23.4498 iterations 5
Cbc0038I Pass  29: suminf.    0.50189 (4) obj. -23.4498 iterations 2
Cbc0038I Pass  30: suminf.    1.80308 (5) obj. -23.4498 iterations 9
Cbc0038I Pass  31: suminf.    1.32672 (5) obj. -23.4498 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 97 columns, reduced to 94 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -21.095 to -21.1435 (0.11 seconds)
Cbc0038I Round again with cutoff of -27.6884
Cbc0038I Pass  31: suminf.    3.21600 (16) obj. -27.6884 iterations 0
Cbc0038I Pass  32: suminf.    2.08002 (8) obj. -27.6884 iterations 21
Cbc0038I Pass  33: suminf.    1.67188 (6) obj. -27.6884 iterations 8
Cbc0038I Pass  34: suminf.    1.67188 (6) obj. -27.6884 iterations 2
Cbc0038I Pass  35: suminf.    2.12187 (7) obj. -27.6884 iterations 11
Cbc0038I Pass  36: suminf.    2.03351 (7) obj. -27.6884 iterations 7
Cbc0038I Pass  37: suminf.    2.32435 (7) obj. -27.6884 iterations 13
Cbc0038I Pass  38: suminf.    2.20483 (9) obj. -27.6884 iterations 7
Cbc0038I Pass  39: suminf.    1.97162 (8) obj. -27.6884 iterations 11
Cbc0038I Pass  40: suminf.    1.55059 (8) obj. -27.6884 iterations 9
Cbc0038I Pass  41: suminf.    2.09602 (8) obj. -27.6884 iterations 12
Cbc0038I Pass  42: suminf.    1.74235 (7) obj. -27.6884 iterations 5
Cbc0038I Pass  43: suminf.    1.77113 (6) obj. -27.6884 iterations 13
Cbc0038I Pass  44: suminf.    1.03331 (6) obj. -27.6884 iterations 4
Cbc0038I Pass  45: suminf.    1.36476 (6) obj. -27.6884 iterations 19
Cbc0038I Pass  46: suminf.    1.31232 (6) obj. -27.6884 iterations 3
Cbc0038I Pass  47: suminf.    1.77412 (6) obj. -27.6884 iterations 11
Cbc0038I Pass  48: suminf.    1.74235 (7) obj. -27.6884 iterations 4
Cbc0038I Pass  49: suminf.    1.77113 (6) obj. -27.6884 iterations 13
Cbc0038I Pass  50: suminf.    1.03331 (6) obj. -27.6884 iterations 4
Cbc0038I Pass  51: suminf.    1.36476 (6) obj. -27.6884 iterations 19
Cbc0038I Pass  52: suminf.    1.31232 (6) obj. -27.6884 iterations 3
Cbc0038I Pass  53: suminf.    1.77412 (6) obj. -27.6884 iterations 11
Cbc0038I Pass  54: suminf.    1.74235 (7) obj. -27.6884 iterations 4
Cbc0038I Pass  55: suminf.    1.77113 (6) obj. -27.6884 iterations 13
Cbc0038I Pass  56: suminf.    1.03331 (6) obj. -27.6884 iterations 4
Cbc0038I Pass  57: suminf.    1.36476 (6) obj. -27.6884 iterations 19
Cbc0038I Pass  58: suminf.    1.31232 (6) obj. -27.6884 iterations 3
Cbc0038I Pass  59: suminf.    1.77412 (6) obj. -27.6884 iterations 11
Cbc0038I Pass  60: suminf.    1.74235 (7) obj. -27.6884 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 97 columns, reduced to 84 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -21.1435 - took 0.12 seconds
Cbc0012I Integer solution of -21.14349 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 178 rows 97 columns, reduced to 74 rows 41 columns
Cbc0031I 29 added rows had average density of 55.517241
Cbc0013I At root node, 29 cuts changed objective from -44.642589 to -38.27552 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12953 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2245 row cuts average 96.7 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.14349 best solution, best possible -38.27552 (1.28 seconds)
Cbc0012I Integer solution of -21.71529 found by rounding after 10288 iterations and 39 nodes (1.55 seconds)
Cbc0038I Full problem 178 rows 97 columns, reduced to 72 rows 38 columns
Cbc0012I Integer solution of -22.16376 found by RINS after 10346 iterations and 42 nodes (1.58 seconds)
Cbc0038I Full problem 178 rows 97 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -22.16376, took 12201 iterations and 110 nodes (1.70 seconds)
Cbc0032I Strong branching done 1046 times (21066 iterations), fathomed 4 nodes and fixed 37 variables
Cbc0035I Maximum depth 38, 265 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       1.72

