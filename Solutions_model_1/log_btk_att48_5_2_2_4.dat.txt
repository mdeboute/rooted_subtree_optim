Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 48 (-2) columns and 262 (-23) elements
Clp1000I sum of infeasibilities 1.5691e-06 - average 1.80357e-08, 13 fixed columns
Coin0506I Presolve 59 (-28) rows, 34 (-14) columns and 178 (-84) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 25.449537 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 2260.2392
Clp0000I Optimal - objective value 2260.2392
Coin0511I After Postsolve, objective 2260.2392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2260.2392
Clp0000I Optimal - objective value 2260.2392
Clp0000I Optimal - objective value 2260.2392
Coin0511I After Postsolve, objective 2260.2392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2260.239241 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 48 columns (47 integer (47 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 9.43945
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 88.4098 iterations 29
Cbc0038I Solution found of 88.4098
Cbc0038I Relaxing continuous gives 88.4098
Cbc0038I Rounding solution of -230.928 is better than previous of 88.4098

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -230.928 to -562.143 (0.02 seconds)
Cbc0038I Round again with cutoff of -731.953
Cbc0038I Pass   2: suminf.    0.74818 (4) obj. -731.953 iterations 4
Cbc0038I Pass   3: suminf.    0.74300 (3) obj. -731.953 iterations 1
Cbc0038I Pass   4: suminf.    1.19108 (4) obj. -731.953 iterations 5
Cbc0038I Pass   5: suminf.    0.99580 (4) obj. -731.953 iterations 3
Cbc0038I Pass   6: suminf.    1.36929 (6) obj. -731.953 iterations 10
Cbc0038I Pass   7: suminf.    1.36929 (6) obj. -731.953 iterations 0
Cbc0038I Pass   8: suminf.    1.00000 (5) obj. -731.953 iterations 7
Cbc0038I Pass   9: suminf.    1.00000 (4) obj. -731.953 iterations 2
Cbc0038I Pass  10: suminf.    1.11907 (3) obj. -731.953 iterations 7
Cbc0038I Pass  11: suminf.    1.21743 (3) obj. -731.953 iterations 2
Cbc0038I Pass  12: suminf.    1.21743 (3) obj. -731.953 iterations 0
Cbc0038I Pass  13: suminf.    1.37652 (3) obj. -731.953 iterations 2
Cbc0038I Pass  14: suminf.    1.47127 (4) obj. -731.953 iterations 9
Cbc0038I Pass  15: suminf.    1.27095 (4) obj. -731.953 iterations 4
Cbc0038I Pass  16: suminf.    1.28585 (3) obj. -731.953 iterations 2
Cbc0038I Pass  17: suminf.    1.20974 (3) obj. -731.953 iterations 1
Cbc0038I Pass  18: suminf.    1.28585 (3) obj. -731.953 iterations 2
Cbc0038I Pass  19: suminf.    3.00000 (8) obj. -731.953 iterations 17
Cbc0038I Pass  20: suminf.    2.00000 (6) obj. -731.953 iterations 7
Cbc0038I Pass  21: suminf.    2.00000 (6) obj. -731.953 iterations 0
Cbc0038I Pass  22: suminf.    1.31814 (5) obj. -731.953 iterations 12
Cbc0038I Pass  23: suminf.    1.20288 (3) obj. -731.953 iterations 1
Cbc0038I Pass  24: suminf.    1.37757 (3) obj. -731.953 iterations 2
Cbc0038I Pass  25: suminf.    1.10452 (3) obj. -731.953 iterations 2
Cbc0038I Pass  26: suminf.    1.10452 (3) obj. -731.953 iterations 1
Cbc0038I Pass  27: suminf.    1.20288 (3) obj. -731.953 iterations 2
Cbc0038I Pass  28: suminf.    1.20288 (3) obj. -731.953 iterations 0
Cbc0038I Pass  29: suminf.    1.37757 (3) obj. -731.953 iterations 2
Cbc0038I Pass  30: suminf.    1.10452 (3) obj. -731.953 iterations 2
Cbc0038I Pass  31: suminf.    1.10452 (3) obj. -731.953 iterations 1
Cbc0038I Rounding solution of -562.144 is better than previous of -562.143

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -1037.61
Cbc0038I Pass  31: suminf.    1.52086 (6) obj. -1037.61 iterations 3
Cbc0038I Pass  32: suminf.    1.35243 (5) obj. -1037.61 iterations 1
Cbc0038I Pass  33: suminf.    1.89723 (5) obj. -1037.61 iterations 5
Cbc0038I Pass  34: suminf.    1.23329 (4) obj. -1037.61 iterations 4
Cbc0038I Pass  35: suminf.    1.75270 (7) obj. -1037.61 iterations 5
Cbc0038I Pass  36: suminf.    1.75270 (7) obj. -1037.61 iterations 0
Cbc0038I Pass  37: suminf.    1.22200 (5) obj. -1037.61 iterations 9
Cbc0038I Pass  38: suminf.    1.19768 (6) obj. -1037.61 iterations 1
Cbc0038I Pass  39: suminf.    1.31938 (4) obj. -1037.61 iterations 7
Cbc0038I Pass  40: suminf.    1.31938 (4) obj. -1037.61 iterations 0
Cbc0038I Pass  41: suminf.    1.41312 (4) obj. -1037.61 iterations 4
Cbc0038I Pass  42: suminf.    1.23249 (4) obj. -1037.61 iterations 2
Cbc0038I Pass  43: suminf.    1.23249 (4) obj. -1037.61 iterations 0
Cbc0038I Pass  44: suminf.    1.51148 (5) obj. -1037.61 iterations 2
Cbc0038I Pass  45: suminf.    1.51148 (4) obj. -1037.61 iterations 1
Cbc0038I Pass  46: suminf.    1.47345 (4) obj. -1037.61 iterations 3
Cbc0038I Pass  47: suminf.    1.47345 (4) obj. -1037.61 iterations 0
Cbc0038I Pass  48: suminf.    1.57181 (4) obj. -1037.61 iterations 1
Cbc0038I Pass  49: suminf.    1.47345 (4) obj. -1037.61 iterations 2
Cbc0038I Pass  50: suminf.    2.58688 (11) obj. -1037.61 iterations 12
Cbc0038I Pass  51: suminf.    1.53329 (4) obj. -1037.61 iterations 9
Cbc0038I Pass  52: suminf.    1.53329 (4) obj. -1037.61 iterations 0
Cbc0038I Pass  53: suminf.    1.35915 (4) obj. -1037.61 iterations 3
Cbc0038I Pass  54: suminf.    1.35915 (4) obj. -1037.61 iterations 1
Cbc0038I Pass  55: suminf.    1.45751 (4) obj. -1037.61 iterations 1
Cbc0038I Pass  56: suminf.    1.35915 (4) obj. -1037.61 iterations 2
Cbc0038I Pass  57: suminf.    2.68263 (12) obj. -1037.61 iterations 14
Cbc0038I Pass  58: suminf.    1.85359 (5) obj. -1037.61 iterations 9
Cbc0038I Pass  59: suminf.    1.53396 (4) obj. -1037.61 iterations 3
Cbc0038I Pass  60: suminf.    1.53396 (4) obj. -1037.61 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -562.144 - took 0.05 seconds
Cbc0012I Integer solution of -562.1442 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 48 columns, reduced to 46 rows 29 columns
Cbc0031I 22 added rows had average density of 36.090909
Cbc0013I At root node, 22 cuts changed objective from -2260.2392 to -1465.3192 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7942 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1784 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 146 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0010I After 9 nodes, 8 on tree, -562.1442 best solution, best possible -1465.3192 (0.69 seconds)
Cbc0001I Search completed - best objective -562.1441999999997, took 7979 iterations and 30 nodes (0.74 seconds)
Cbc0032I Strong branching done 424 times (9098 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 14, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

