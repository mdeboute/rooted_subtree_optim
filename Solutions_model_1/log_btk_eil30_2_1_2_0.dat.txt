Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 0.00898962 - average 0.000160529, 2 fixed columns
Coin0506I Presolve 52 (-4) rows, 28 (-2) columns and 152 (-12) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Coin0511I After Postsolve, objective 89.82473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Coin0511I After Postsolve, objective 89.82473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.82473007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 164 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.060%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.00986
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 16.5909 iterations 22
Cbc0038I Solution found of 16.5909
Cbc0038I Relaxing continuous gives 16.5909
Cbc0038I Rounding solution of 9.05216 is better than previous of 16.5909

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 9.05216 to -24.4206 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.9611
Cbc0038I Pass   2: suminf.    0.81121 (3) obj. -30.9611 iterations 4
Cbc0038I Pass   3: suminf.    0.61009 (3) obj. -30.9611 iterations 2
Cbc0038I Pass   4: suminf.    1.43123 (4) obj. -30.9611 iterations 4
Cbc0038I Pass   5: suminf.    2.53625 (13) obj. -30.9611 iterations 18
Cbc0038I Pass   6: suminf.    0.92726 (8) obj. -30.9611 iterations 9
Cbc0038I Pass   7: suminf.    0.92726 (8) obj. -30.9611 iterations 0
Cbc0038I Pass   8: suminf.    0.94824 (4) obj. -30.9611 iterations 12
Cbc0038I Pass   9: suminf.    0.86416 (4) obj. -30.9611 iterations 2
Cbc0038I Pass  10: suminf.    1.55791 (5) obj. -30.9611 iterations 4
Cbc0038I Pass  11: suminf.    1.55791 (5) obj. -30.9611 iterations 0
Cbc0038I Pass  12: suminf.    0.56777 (3) obj. -30.9611 iterations 5
Cbc0038I Pass  13: suminf.    0.53864 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  14: suminf.    0.88112 (3) obj. -30.9611 iterations 3
Cbc0038I Pass  15: suminf.    0.54004 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  16: suminf.    1.19916 (4) obj. -30.9611 iterations 4
Cbc0038I Pass  17: suminf.    4.21295 (10) obj. -30.9611 iterations 8
Cbc0038I Pass  18: suminf.    0.56777 (3) obj. -30.9611 iterations 8
Cbc0038I Pass  19: suminf.    0.53864 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  20: suminf.    0.88112 (3) obj. -30.9611 iterations 3
Cbc0038I Pass  21: suminf.    0.54004 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  22: suminf.    1.19916 (4) obj. -30.9611 iterations 4
Cbc0038I Pass  23: suminf.    3.52684 (13) obj. -30.9611 iterations 17
Cbc0038I Pass  24: suminf.    1.32257 (9) obj. -30.9611 iterations 7
Cbc0038I Pass  25: suminf.    1.06960 (6) obj. -30.9611 iterations 5
Cbc0038I Pass  26: suminf.    1.03821 (6) obj. -30.9611 iterations 5
Cbc0038I Pass  27: suminf.    0.85486 (2) obj. -30.9611 iterations 11
Cbc0038I Pass  28: suminf.    0.82921 (2) obj. -30.9611 iterations 2
Cbc0038I Pass  29: suminf.    0.93419 (4) obj. -30.9611 iterations 5
Cbc0038I Pass  30: suminf.    0.93419 (4) obj. -30.9611 iterations 1
Cbc0038I Pass  31: suminf.    1.15750 (4) obj. -30.9611 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -24.4206 to -24.8615 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.7338
Cbc0038I Pass  31: suminf.    1.15463 (6) obj. -42.7338 iterations 3
Cbc0038I Pass  32: suminf.    1.15463 (6) obj. -42.7338 iterations 1
Cbc0038I Pass  33: suminf.    0.72986 (4) obj. -42.7338 iterations 8
Cbc0038I Pass  34: suminf.    0.60328 (4) obj. -42.7338 iterations 3
Cbc0038I Pass  35: suminf.    1.84018 (5) obj. -42.7338 iterations 6
Cbc0038I Pass  36: suminf.    0.70923 (4) obj. -42.7338 iterations 7
Cbc0038I Pass  37: suminf.    1.99672 (8) obj. -42.7338 iterations 12
Cbc0038I Pass  38: suminf.    1.90975 (8) obj. -42.7338 iterations 5
Cbc0038I Pass  39: suminf.    1.62327 (4) obj. -42.7338 iterations 14
Cbc0038I Pass  40: suminf.    1.25957 (4) obj. -42.7338 iterations 7
Cbc0038I Pass  41: suminf.    1.10406 (4) obj. -42.7338 iterations 3
Cbc0038I Pass  42: suminf.    1.89750 (5) obj. -42.7338 iterations 6
Cbc0038I Pass  43: suminf.    1.62266 (4) obj. -42.7338 iterations 1
Cbc0038I Pass  44: suminf.    1.57478 (4) obj. -42.7338 iterations 1
Cbc0038I Pass  45: suminf.    1.33208 (4) obj. -42.7338 iterations 6
Cbc0038I Pass  46: suminf.    1.33208 (4) obj. -42.7338 iterations 0
Cbc0038I Pass  47: suminf.    5.25091 (15) obj. -42.7338 iterations 19
Cbc0038I Pass  48: suminf.    3.04001 (11) obj. -42.7338 iterations 7
Cbc0038I Pass  49: suminf.    2.76100 (7) obj. -42.7338 iterations 13
Cbc0038I Pass  50: suminf.    1.63752 (6) obj. -42.7338 iterations 5
Cbc0038I Pass  51: suminf.    1.63752 (6) obj. -42.7338 iterations 0
Cbc0038I Pass  52: suminf.    2.51347 (7) obj. -42.7338 iterations 7
Cbc0038I Pass  53: suminf.    1.64678 (7) obj. -42.7338 iterations 5
Cbc0038I Pass  54: suminf.    1.63752 (6) obj. -42.7338 iterations 1
Cbc0038I Pass  55: suminf.    2.50315 (9) obj. -42.7338 iterations 11
Cbc0038I Pass  56: suminf.    1.25054 (5) obj. -42.7338 iterations 8
Cbc0038I Pass  57: suminf.    1.25054 (5) obj. -42.7338 iterations 0
Cbc0038I Pass  58: suminf.    2.14116 (8) obj. -42.7338 iterations 8
Cbc0038I Pass  59: suminf.    1.90761 (8) obj. -42.7338 iterations 6
Cbc0038I Pass  60: suminf.    2.82110 (7) obj. -42.7338 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.8615 - took 0.04 seconds
Cbc0012I Integer solution of -24.861544 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 34 rows 19 columns
Cbc0031I 10 added rows had average density of 22.4
Cbc0013I At root node, 10 cuts changed objective from -89.82473 to -46.858931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1135 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 441 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 52 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.86154445, took 2145 iterations and 4 nodes (0.27 seconds)
Cbc0032I Strong branching done 66 times (870 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.27

