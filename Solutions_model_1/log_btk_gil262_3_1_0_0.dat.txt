Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 501 (-26) rows, 257 (-7) columns and 1484 (-61) elements
Clp1000I sum of infeasibilities 0.00029437 - average 5.87566e-07, 128 fixed columns
Coin0506I Presolve 233 (-268) rows, 121 (-136) columns and 682 (-802) elements
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 0.1655779 - largest nonzero change 0 ( 0%) - largest zero change 2.9004644e-05
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Coin0511I After Postsolve, objective 180.15811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1308531 - largest nonzero change 0 ( 0%) - largest zero change 2.9980352e-05
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Coin0511I After Postsolve, objective 180.15811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.15811 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 501 rows, 257 columns (256 integer (256 of which binary)) and 1484 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 72 integers unsatisfied sum - 10.8637
Cbc0038I Solution found of -4.93255
Cbc0038I Relaxing continuous gives -25.6232
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 140 rows 73 columns
Cbc0038I Mini branch and bound improved solution from -25.6232 to -107.054 (0.06 seconds)
Cbc0038I Round again with cutoff of -114.364
Cbc0038I Pass   1: suminf.    4.42201 (43) obj. -114.364 iterations 217
Cbc0038I Pass   2: suminf.    1.84779 (8) obj. -114.364 iterations 59
Cbc0038I Pass   3: suminf.    0.96799 (6) obj. -114.364 iterations 34
Cbc0038I Pass   4: suminf.    0.77652 (5) obj. -114.364 iterations 24
Cbc0038I Pass   5: suminf.    1.00189 (5) obj. -114.364 iterations 16
Cbc0038I Pass   6: suminf.    0.93773 (4) obj. -114.364 iterations 1
Cbc0038I Pass   7: suminf.    1.11330 (4) obj. -114.364 iterations 9
Cbc0038I Pass   8: suminf.    0.97161 (4) obj. -114.364 iterations 7
Cbc0038I Pass   9: suminf.    3.69614 (14) obj. -114.364 iterations 64
Cbc0038I Pass  10: suminf.    2.13991 (13) obj. -114.364 iterations 58
Cbc0038I Pass  11: suminf.    2.27465 (9) obj. -114.364 iterations 20
Cbc0038I Pass  12: suminf.    4.73046 (17) obj. -114.364 iterations 49
Cbc0038I Pass  13: suminf.    0.61720 (3) obj. -114.364 iterations 73
Cbc0038I Pass  14: suminf.    0.55313 (2) obj. -114.364 iterations 1
Cbc0038I Pass  15: suminf.    0.67594 (2) obj. -114.364 iterations 8
Cbc0038I Pass  16: suminf.    0.63200 (2) obj. -114.364 iterations 1
Cbc0038I Pass  17: suminf.    3.57968 (18) obj. -114.364 iterations 64
Cbc0038I Pass  18: suminf.    0.61720 (3) obj. -114.364 iterations 62
Cbc0038I Pass  19: suminf.    5.13809 (24) obj. -114.364 iterations 67
Cbc0038I Pass  20: suminf.    1.36566 (6) obj. -114.364 iterations 74
Cbc0038I Pass  21: suminf.    1.31620 (6) obj. -114.364 iterations 8
Cbc0038I Pass  22: suminf.    2.16134 (9) obj. -114.364 iterations 19
Cbc0038I Pass  23: suminf.    1.36566 (6) obj. -114.364 iterations 18
Cbc0038I Pass  24: suminf.    1.66781 (8) obj. -114.364 iterations 46
Cbc0038I Pass  25: suminf.    0.75915 (7) obj. -114.364 iterations 34
Cbc0038I Pass  26: suminf.    2.09922 (8) obj. -114.364 iterations 20
Cbc0038I Pass  27: suminf.    0.84903 (4) obj. -114.364 iterations 22
Cbc0038I Pass  28: suminf.    2.69067 (8) obj. -114.364 iterations 38
Cbc0038I Pass  29: suminf.    0.10018 (6) obj. -114.364 iterations 55
Cbc0038I Pass  30: suminf.    0.10018 (6) obj. -114.364 iterations 0
Cbc0038I Rounding solution of -109.811 is better than previous of -107.054

Cbc0038I Before mini branch and bound, 131 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 239 rows 125 columns
Cbc0038I Mini branch and bound improved solution from -109.811 to -120.081 (0.19 seconds)
Cbc0038I Round again with cutoff of -132.097
Cbc0038I Pass  30: suminf.    5.30562 (43) obj. -132.097 iterations 0
Cbc0038I Pass  31: suminf.    3.68121 (12) obj. -132.097 iterations 63
Cbc0038I Pass  32: suminf.    1.94254 (9) obj. -132.097 iterations 49
Cbc0038I Pass  33: suminf.    3.11871 (11) obj. -132.097 iterations 44
Cbc0038I Pass  34: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  35: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  36: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  37: suminf.    2.24663 (9) obj. -132.097 iterations 30
Cbc0038I Pass  38: suminf.    1.94254 (9) obj. -132.097 iterations 7
Cbc0038I Pass  39: suminf.    3.11871 (11) obj. -132.097 iterations 48
Cbc0038I Pass  40: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  41: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  42: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  43: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  44: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  45: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  46: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  47: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  48: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  49: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  50: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  51: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  52: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  53: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  54: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  55: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  56: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  57: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  58: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  59: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 185 rows 97 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -120.081 - took 0.24 seconds
Cbc0012I Integer solution of -120.08107 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 147 rows 77 columns
Cbc0031I 34 added rows had average density of 106
Cbc0013I At root node, 34 cuts changed objective from -180.15811 to -163.86381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34619 row cuts average 3.4 elements, 1 column cuts (1 active)  in 1.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2597 row cuts average 252.3 elements, 0 column cuts (0 active)  in 0.820 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.777 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 245.7 elements, 0 column cuts (0 active)  in 0.285 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -120.08107 best solution, best possible -163.86381 (8.37 seconds)
Cbc0010I After 6 nodes, 7 on tree, -120.08107 best solution, best possible -163.86381 (9.10 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 130 rows 69 columns
Cbc0010I After 42 nodes, 13 on tree, -120.08107 best solution, best possible -163.86381 (9.86 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -120.08107, took 20128 iterations and 106 nodes (10.45 seconds)
Cbc0032I Strong branching done 1242 times (34369 iterations), fathomed 6 nodes and fixed 22 variables
Cbc0035I Maximum depth 49, 283 variables fixed on reduced cost
Total time (CPU seconds):       10.12   (Wallclock seconds):       10.53

