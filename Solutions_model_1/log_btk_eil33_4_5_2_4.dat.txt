Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-9) rows, 33 (-2) columns and 178 (-17) elements
Clp1000I sum of infeasibilities 8.35382e-05 - average 1.3923e-06, 1 fixed columns
Coin0506I Presolve 56 (-4) rows, 32 (-1) columns and 168 (-10) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 2.9720688 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 89.141707
Clp0000I Optimal - objective value 89.141707
Coin0511I After Postsolve, objective 89.141707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.141707
Clp0000I Optimal - objective value 89.141707
Clp0000I Optimal - objective value 89.141707
Coin0511I After Postsolve, objective 89.141707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.14170659 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.05595
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23.1086 iterations 16
Cbc0038I Solution found of -23.1086
Cbc0038I Relaxing continuous gives -23.1086
Cbc0038I Rounding solution of -26.9197 is better than previous of -23.1086

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -26.9197 to -38.0596 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.1679
Cbc0038I Pass   2: suminf.    0.72992 (6) obj. -43.1679 iterations 6
Cbc0038I Pass   3: suminf.    0.89404 (3) obj. -43.1679 iterations 11
Cbc0038I Pass   4: suminf.    0.63817 (2) obj. -43.1679 iterations 1
Cbc0038I Pass   5: suminf.    0.81766 (2) obj. -43.1679 iterations 1
Cbc0038I Pass   6: suminf.    0.90433 (4) obj. -43.1679 iterations 11
Cbc0038I Pass   7: suminf.    0.90433 (4) obj. -43.1679 iterations 3
Cbc0038I Pass   8: suminf.    1.14590 (3) obj. -43.1679 iterations 10
Cbc0038I Pass   9: suminf.    0.69139 (4) obj. -43.1679 iterations 2
Cbc0038I Pass  10: suminf.    0.41844 (3) obj. -43.1679 iterations 4
Cbc0038I Pass  11: suminf.    0.36085 (1) obj. -43.1679 iterations 2
Cbc0038I Pass  12: suminf.    0.40121 (1) obj. -43.1679 iterations 1
Cbc0038I Pass  13: suminf.    0.72331 (4) obj. -43.1679 iterations 6
Cbc0038I Pass  14: suminf.    0.49540 (3) obj. -43.1679 iterations 9
Cbc0038I Pass  15: suminf.    0.45030 (3) obj. -43.1679 iterations 5
Cbc0038I Pass  16: suminf.    1.89484 (8) obj. -43.1679 iterations 9
Cbc0038I Pass  17: suminf.    0.81972 (3) obj. -43.1679 iterations 8
Cbc0038I Pass  18: suminf.    1.03521 (4) obj. -43.1679 iterations 4
Cbc0038I Pass  19: suminf.    1.14590 (3) obj. -43.1679 iterations 6
Cbc0038I Pass  20: suminf.    1.14590 (3) obj. -43.1679 iterations 0
Cbc0038I Pass  21: suminf.    0.69139 (4) obj. -43.1679 iterations 2
Cbc0038I Pass  22: suminf.    0.41844 (3) obj. -43.1679 iterations 4
Cbc0038I Pass  23: suminf.    0.36085 (1) obj. -43.1679 iterations 2
Cbc0038I Pass  24: suminf.    0.40121 (1) obj. -43.1679 iterations 1
Cbc0038I Pass  25: suminf.    0.32100 (4) obj. -43.1679 iterations 10
Cbc0038I Pass  26: suminf.    0.23445 (3) obj. -43.1679 iterations 5
Cbc0038I Pass  27: suminf.    0.82781 (4) obj. -43.1679 iterations 4
Cbc0038I Pass  28: suminf.    0.79698 (4) obj. -43.1679 iterations 1
Cbc0038I Pass  29: suminf.    1.41475 (4) obj. -43.1679 iterations 3
Cbc0038I Pass  30: suminf.    1.08510 (3) obj. -43.1679 iterations 2
Cbc0038I Pass  31: suminf.    1.06670 (4) obj. -43.1679 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -38.0596 - took 0.04 seconds
Cbc0012I Integer solution of -38.05955 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 21 rows 16 columns
Cbc0031I 13 added rows had average density of 30.538462
Cbc0013I At root node, 13 cuts changed objective from -89.141707 to -66.258454 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2105 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1115 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.785 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.05955 best solution, best possible -66.258454 (1.76 seconds)
Cbc0001I Search completed - best objective -38.05955, took 3391 iterations and 14 nodes (1.84 seconds)
Cbc0032I Strong branching done 190 times (2581 iterations), fathomed 1 nodes and fixed 16 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.85

