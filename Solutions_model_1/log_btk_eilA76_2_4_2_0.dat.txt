Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 8.53006e-05 - average 6.31856e-07, 13 fixed columns
Coin0506I Presolve 112 (-23) rows, 63 (-13) columns and 342 (-72) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.4397831 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Coin0511I After Postsolve, objective 54.663083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Clp0000I Optimal - objective value 54.663083
Coin0511I After Postsolve, objective 54.663083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.66308255 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.55195
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.6204 iterations 56
Cbc0038I Solution found of -10.6204
Cbc0038I Relaxing continuous gives -10.6204
Cbc0038I Rounding solution of -10.638 is better than previous of -10.6204

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -10.638 to -19.446 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.9678
Cbc0038I Pass   2: suminf.    1.10404 (5) obj. -22.9678 iterations 5
Cbc0038I Pass   3: suminf.    0.76057 (2) obj. -22.9678 iterations 5
Cbc0038I Pass   4: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass   5: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass   6: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass   7: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass   8: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass   9: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  10: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  11: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  12: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  13: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  14: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  15: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  16: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  17: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  18: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  19: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  20: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  21: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  22: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  23: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  24: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  25: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  26: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I Pass  27: suminf.    1.44041 (4) obj. -22.9678 iterations 4
Cbc0038I Pass  28: suminf.    0.76057 (2) obj. -22.9678 iterations 4
Cbc0038I Pass  29: suminf.    0.78387 (3) obj. -22.9678 iterations 2
Cbc0038I Pass  30: suminf.    1.07118 (3) obj. -22.9678 iterations 1
Cbc0038I Pass  31: suminf.    0.92250 (4) obj. -22.9678 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -19.446 - took 0.07 seconds
Cbc0012I Integer solution of -19.44603 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 65 rows 38 columns
Cbc0031I 25 added rows had average density of 49.88
Cbc0013I At root node, 25 cuts changed objective from -54.663083 to -45.650174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10503 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1239 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.44603 best solution, best possible -45.650174 (0.87 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 19 rows 16 columns
Cbc0038I Full problem 135 rows 76 columns, reduced to 5 rows 9 columns
Cbc0001I Search completed - best objective -19.44603000000001, took 9914 iterations and 124 nodes (1.22 seconds)
Cbc0032I Strong branching done 1080 times (15479 iterations), fathomed 16 nodes and fixed 51 variables
Cbc0035I Maximum depth 21, 436 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.23

