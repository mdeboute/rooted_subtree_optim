Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 2.81037e-06 - average 2.05137e-08, 9 fixed columns
Coin0506I Presolve 119 (-18) rows, 66 (-9) columns and 362 (-54) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 31.21535
Clp0000I Optimal - objective value 31.21535
Coin0511I After Postsolve, objective 31.21535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.21535
Clp0000I Optimal - objective value 31.21535
Clp0000I Optimal - objective value 31.21535
Coin0511I After Postsolve, objective 31.21535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.21535027 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 8.59381
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.68006 iterations 54
Cbc0038I Solution found of 7.68006
Cbc0038I Relaxing continuous gives 7.68006
Cbc0038I Rounding solution of -2.52826 is better than previous of 7.68006

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 85 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -2.52826 to -2.933 (0.05 seconds)
Cbc0038I Round again with cutoff of -5.76133
Cbc0038I Pass   2: suminf.    1.64056 (9) obj. -5.76133 iterations 12
Cbc0038I Pass   3: suminf.    1.27164 (5) obj. -5.76133 iterations 10
Cbc0038I Pass   4: suminf.    1.16404 (5) obj. -5.76133 iterations 3
Cbc0038I Pass   5: suminf.    0.75319 (5) obj. -5.76133 iterations 10
Cbc0038I Pass   6: suminf.    1.41619 (5) obj. -5.76133 iterations 5
Cbc0038I Pass   7: suminf.    1.22270 (4) obj. -5.76133 iterations 1
Cbc0038I Pass   8: suminf.    1.15940 (4) obj. -5.76133 iterations 6
Cbc0038I Pass   9: suminf.    1.15940 (4) obj. -5.76133 iterations 0
Cbc0038I Pass  10: suminf.    1.22270 (4) obj. -5.76133 iterations 1
Cbc0038I Pass  11: suminf.    2.17734 (6) obj. -5.76133 iterations 20
Cbc0038I Pass  12: suminf.    1.00694 (5) obj. -5.76133 iterations 7
Cbc0038I Pass  13: suminf.    1.00694 (5) obj. -5.76133 iterations 1
Cbc0038I Pass  14: suminf.    1.66102 (5) obj. -5.76133 iterations 15
Cbc0038I Pass  15: suminf.    1.50630 (6) obj. -5.76133 iterations 10
Cbc0038I Pass  16: suminf.    1.40713 (5) obj. -5.76133 iterations 1
Cbc0038I Pass  17: suminf.    1.76061 (5) obj. -5.76133 iterations 9
Cbc0038I Pass  18: suminf.    1.76061 (5) obj. -5.76133 iterations 0
Cbc0038I Pass  19: suminf.    1.57922 (5) obj. -5.76133 iterations 6
Cbc0038I Pass  20: suminf.    1.50286 (5) obj. -5.76133 iterations 2
Cbc0038I Pass  21: suminf.    1.47590 (4) obj. -5.76133 iterations 10
Cbc0038I Pass  22: suminf.    1.50630 (6) obj. -5.76133 iterations 9
Cbc0038I Pass  23: suminf.    1.40713 (5) obj. -5.76133 iterations 1
Cbc0038I Pass  24: suminf.    1.76061 (5) obj. -5.76133 iterations 9
Cbc0038I Pass  25: suminf.    1.76061 (5) obj. -5.76133 iterations 0
Cbc0038I Pass  26: suminf.    1.57922 (5) obj. -5.76133 iterations 6
Cbc0038I Pass  27: suminf.    1.50286 (5) obj. -5.76133 iterations 2
Cbc0038I Pass  28: suminf.    1.47590 (4) obj. -5.76133 iterations 10
Cbc0038I Pass  29: suminf.    1.50630 (6) obj. -5.76133 iterations 9
Cbc0038I Pass  30: suminf.    1.40713 (5) obj. -5.76133 iterations 1
Cbc0038I Pass  31: suminf.    1.76061 (5) obj. -5.76133 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 85 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.933 - took 0.07 seconds
Cbc0012I Integer solution of -2.933003 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 85 rows 48 columns
Cbc0031I 24 added rows had average density of 60.041667
Cbc0013I At root node, 24 cuts changed objective from -31.21535 to -24.675405 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14585 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1732 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 138 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 204 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.933003 best solution, best possible -24.675405 (1.03 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 58 rows 34 columns
Cbc0012I Integer solution of -3.43758 found by RINS after 10134 iterations and 42 nodes (1.32 seconds)
Cbc0012I Integer solution of -3.610823 found by rounding after 10664 iterations and 58 nodes (1.35 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 14 rows 13 columns
Cbc0001I Search completed - best objective -3.610823000000003, took 11769 iterations and 110 nodes (1.42 seconds)
Cbc0032I Strong branching done 1036 times (17539 iterations), fathomed 8 nodes and fixed 59 variables
Cbc0035I Maximum depth 32, 221 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.44

