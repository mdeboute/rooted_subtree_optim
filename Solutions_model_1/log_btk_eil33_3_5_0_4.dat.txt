Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 45 (-24) rows, 24 (-11) columns and 131 (-64) elements
Clp0000I Optimal - objective value 83.36733
Coin0511I After Postsolve, objective 83.36733, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.36732954 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 24 columns (23 integer (23 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.507%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.39276
Cbc0038I Pass   1: suminf.    0.49200 (1) obj. 28.538 iterations 15
Cbc0038I Solution found of 73.75
Cbc0038I Relaxing continuous gives 73.75
Cbc0038I Rounding solution of 63.5 is better than previous of 73.75

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 20 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 63.5 to 15.25 (0.01 seconds)
Cbc0038I Round again with cutoff of 6.58616
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.62004 (3) obj. 6.58616 iterations 2
Cbc0038I Pass   3: suminf.    0.29377 (3) obj. 6.58616 iterations 4
Cbc0038I Pass   4: suminf.    0.24811 (2) obj. 6.58616 iterations 1
Cbc0038I Pass   5: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass   6: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass   7: suminf.    2.92651 (8) obj. 6.58616 iterations 6
Cbc0038I Pass   8: suminf.    0.73084 (4) obj. 6.58616 iterations 6
Cbc0038I Pass   9: suminf.    0.37666 (3) obj. 6.58616 iterations 7
Cbc0038I Pass  10: suminf.    0.33338 (2) obj. 6.58616 iterations 1
Cbc0038I Pass  11: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  12: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  13: suminf.    1.25799 (7) obj. 6.58616 iterations 8
Cbc0038I Pass  14: suminf.    0.70207 (4) obj. 6.58616 iterations 4
Cbc0038I Pass  15: suminf.    0.23932 (3) obj. 6.58616 iterations 8
Cbc0038I Pass  16: suminf.    0.54622 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  17: suminf.    0.31808 (2) obj. 6.58616 iterations 2
Cbc0038I Pass  18: suminf.    0.23450 (2) obj. 6.58616 iterations 3
Cbc0038I Pass  19: suminf.    0.29377 (3) obj. 6.58616 iterations 3
Cbc0038I Pass  20: suminf.    0.24811 (2) obj. 6.58616 iterations 1
Cbc0038I Pass  21: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  22: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  23: suminf.    1.51785 (4) obj. 6.58616 iterations 10
Cbc0038I Pass  24: suminf.    1.51785 (4) obj. 6.58616 iterations 1
Cbc0038I Pass  25: suminf.    0.26725 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  26: suminf.    0.07626 (2) obj. 6.58616 iterations 2
Cbc0038I Pass  27: suminf.    0.40869 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  28: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  29: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  30: suminf.    0.57312 (3) obj. 6.58616 iterations 3
Cbc0038I Pass  31: suminf.    0.41929 (4) obj. 6.58616 iterations 2
Cbc0038I Rounding solution of 2 is better than previous of 15.25

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -12.4278
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.76624 (4) obj. -12.4278 iterations 1
Cbc0038I Pass  32: suminf.    0.54081 (3) obj. -12.4278 iterations 6
Cbc0038I Pass  33: suminf.    0.29264 (1) obj. -12.4278 iterations 3
Cbc0038I Pass  34: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  35: suminf.    1.14188 (4) obj. -12.4278 iterations 3
Cbc0038I Pass  36: suminf.    0.56110 (2) obj. -12.4278 iterations 1
Cbc0038I Pass  37: suminf.    1.03227 (4) obj. -12.4278 iterations 7
Cbc0038I Pass  38: suminf.    0.64698 (4) obj. -12.4278 iterations 5
Cbc0038I Pass  39: suminf.    0.48338 (2) obj. -12.4278 iterations 6
Cbc0038I Pass  40: suminf.    0.29264 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  41: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  42: suminf.    0.81778 (5) obj. -12.4278 iterations 4
Cbc0038I Pass  43: suminf.    0.81778 (5) obj. -12.4278 iterations 0
Cbc0038I Pass  44: suminf.    1.24281 (5) obj. -12.4278 iterations 5
Cbc0038I Pass  45: suminf.    0.73125 (9) obj. -12.4278 iterations 8
Cbc0038I Pass  46: suminf.    0.71164 (7) obj. -12.4278 iterations 2
Cbc0038I Pass  47: suminf.    1.23423 (6) obj. -12.4278 iterations 11
Cbc0038I Pass  48: suminf.    0.72677 (4) obj. -12.4278 iterations 6
Cbc0038I Pass  49: suminf.    1.36338 (5) obj. -12.4278 iterations 3
Cbc0038I Pass  50: suminf.    0.96534 (2) obj. -12.4278 iterations 4
Cbc0038I Pass  51: suminf.    0.29264 (1) obj. -12.4278 iterations 2
Cbc0038I Pass  52: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  53: suminf.    1.07668 (9) obj. -12.4278 iterations 8
Cbc0038I Pass  54: suminf.    0.80779 (6) obj. -12.4278 iterations 7
Cbc0038I Pass  55: suminf.    1.49214 (4) obj. -12.4278 iterations 6
Cbc0038I Pass  56: suminf.    1.29286 (4) obj. -12.4278 iterations 2
Cbc0038I Pass  57: suminf.    0.48338 (2) obj. -12.4278 iterations 2
Cbc0038I Pass  58: suminf.    0.29264 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  59: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  60: suminf.    0.89764 (4) obj. -12.4278 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2 - took 0.02 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 24 columns, reduced to 21 rows 13 columns
Cbc0031I 7 added rows had average density of 20.857143
Cbc0013I At root node, 7 cuts changed objective from -69.13933 to -15.901417 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1017 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of 0 found by DiveCoefficient after 1672 iterations and 4 nodes (0.15 seconds)
Cbc0001I Search completed - best objective 0, took 1672 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 40 times (390 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

