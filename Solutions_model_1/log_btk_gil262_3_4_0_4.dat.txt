Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 379 (-148) rows, 199 (-65) columns and 1134 (-411) elements
Clp1000I sum of infeasibilities 5.11846e-06 - average 1.35052e-08, 194 fixed columns
Coin0506I Presolve 5 (-374) rows, 5 (-194) columns and 14 (-1120) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 235456.61
Clp0000I Optimal - objective value 235456.61
Coin0511I After Postsolve, objective 235456.61, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1457505 - largest nonzero change 0 ( 0%) - largest zero change 2.9986153e-05
Clp0000I Optimal - objective value 235456.61
Clp0000I Optimal - objective value 235456.61
Clp0000I Optimal - objective value 235456.61
Coin0511I After Postsolve, objective 235456.61, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 235456.6113 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 379 rows, 199 columns (198 integer (198 of which binary)) and 1134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.475%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.11659
Cbc0038I Pass   1: suminf.    0.02041 (1) obj. -220960 iterations 24
Cbc0038I Solution found of -220180
Cbc0038I Relaxing continuous gives -220180
Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 379 rows 199 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -221708
Cbc0038I Reduced cost fixing fixed 83 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.11279 (3) obj. -221708 iterations 2
Cbc0038I Pass   3: suminf.    0.11279 (3) obj. -221708 iterations 18
Cbc0038I Pass   4: suminf.    0.14274 (3) obj. -221708 iterations 65
Cbc0038I Pass   5: suminf.    0.39871 (3) obj. -222694 iterations 30
Cbc0038I Pass   6: suminf.    1.10689 (9) obj. -221708 iterations 26
Cbc0038I Pass   7: suminf.    0.77123 (3) obj. -221708 iterations 29
Cbc0038I Pass   8: suminf.    0.92910 (3) obj. -221708 iterations 10
Cbc0038I Pass   9: suminf.    1.37411 (6) obj. -221708 iterations 22
Cbc0038I Pass  10: suminf.    0.90784 (4) obj. -221708 iterations 13
Cbc0038I Pass  11: suminf.    1.14988 (4) obj. -221708 iterations 34
Cbc0038I Pass  12: suminf.    1.05213 (6) obj. -221708 iterations 22
Cbc0038I Pass  13: suminf.    0.94004 (6) obj. -221708 iterations 14
Cbc0038I Pass  14: suminf.    1.06557 (6) obj. -221708 iterations 26
Cbc0038I Pass  15: suminf.    1.17491 (8) obj. -221708 iterations 29
Cbc0038I Pass  16: suminf.    1.07182 (4) obj. -221708 iterations 13
Cbc0038I Pass  17: suminf.    0.83149 (4) obj. -221708 iterations 40
Cbc0038I Pass  18: suminf.    0.83149 (4) obj. -221708 iterations 0
Cbc0038I Pass  19: suminf.    1.22181 (3) obj. -221708 iterations 9
Cbc0038I Pass  20: suminf.    0.42845 (3) obj. -221708 iterations 25
Cbc0038I Pass  21: suminf.    0.42845 (3) obj. -221708 iterations 18
Cbc0038I Pass  22: suminf.    0.60548 (7) obj. -221708 iterations 15
Cbc0038I Pass  23: suminf.    0.42845 (3) obj. -221708 iterations 17
Cbc0038I Pass  24: suminf.    1.23051 (5) obj. -221708 iterations 20
Cbc0038I Pass  25: suminf.    0.43522 (3) obj. -221708 iterations 23
Cbc0038I Pass  26: suminf.    1.19509 (3) obj. -221708 iterations 7
Cbc0038I Pass  27: suminf.    0.93144 (4) obj. -221708 iterations 35
Cbc0038I Pass  28: suminf.    0.93144 (4) obj. -221708 iterations 24
Cbc0038I Pass  29: suminf.    1.10581 (5) obj. -221708 iterations 12
Cbc0038I Pass  30: suminf.    0.55229 (3) obj. -221708 iterations 19
Cbc0038I Pass  31: suminf.    0.67964 (3) obj. -221708 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 379 rows 199 columns, reduced to 32 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -220180 - took 0.05 seconds
Cbc0012I Integer solution of -220180.44 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 379 rows 199 columns, reduced to 5 rows 5 columns
Cbc0031I 5 added rows had average density of 23.8
Cbc0013I At root node, 5 cuts changed objective from -235456.61 to -228595.66 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 18 column cuts (18 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 28.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -220180.443, took 276 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 68 times (265 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 96 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

