Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 255 (-9) columns and 1470 (-75) elements
Clp1000I sum of infeasibilities 0.000112065 - average 2.27312e-07, 134 fixed columns
Coin0506I Presolve 218 (-275) rows, 116 (-139) columns and 648 (-822) elements
Clp0029I End of values pass after 116 iterations
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Coin0511I After Postsolve, objective 185.28344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13418008 - largest nonzero change 0 ( 0%) - largest zero change 2.9749394e-05
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Clp0000I Optimal - objective value 185.28344
Coin0511I After Postsolve, objective 185.28344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 185.2834446 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 255 columns (254 integer (254 of which binary)) and 1470 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 79 integers unsatisfied sum - 10.5885
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.274 iterations 194
Cbc0038I Solution found of -18.274
Cbc0038I Relaxing continuous gives -18.274
Cbc0038I Rounding solution of -37.3591 is better than previous of -18.274

Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 148 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -37.3591 to -131.027 (0.07 seconds)
Cbc0038I Round again with cutoff of -136.453
Cbc0038I Pass   2: suminf.    4.71400 (29) obj. -136.453 iterations 58
Cbc0038I Pass   3: suminf.    3.92431 (15) obj. -136.453 iterations 45
Cbc0038I Pass   4: suminf.    3.17185 (15) obj. -136.453 iterations 24
Cbc0038I Pass   5: suminf.    3.14136 (9) obj. -136.453 iterations 6
Cbc0038I Pass   6: suminf.    3.79738 (12) obj. -136.453 iterations 38
Cbc0038I Pass   7: suminf.    3.79738 (12) obj. -136.453 iterations 0
Cbc0038I Pass   8: suminf.    3.56450 (12) obj. -136.453 iterations 23
Cbc0038I Pass   9: suminf.    3.04605 (12) obj. -136.453 iterations 19
Cbc0038I Pass  10: suminf.    3.34502 (13) obj. -136.453 iterations 25
Cbc0038I Pass  11: suminf.    2.29127 (10) obj. -136.453 iterations 27
Cbc0038I Pass  12: suminf.    2.21996 (11) obj. -136.453 iterations 17
Cbc0038I Pass  13: suminf.    2.41523 (11) obj. -136.453 iterations 54
Cbc0038I Pass  14: suminf.    2.32089 (15) obj. -136.453 iterations 14
Cbc0038I Pass  15: suminf.    2.61795 (12) obj. -136.453 iterations 44
Cbc0038I Pass  16: suminf.    2.00072 (11) obj. -136.453 iterations 13
Cbc0038I Pass  17: suminf.    1.71327 (12) obj. -136.453 iterations 4
Cbc0038I Pass  18: suminf.    4.56055 (12) obj. -136.453 iterations 35
Cbc0038I Pass  19: suminf.    3.43672 (10) obj. -136.453 iterations 22
Cbc0038I Pass  20: suminf.    2.76078 (13) obj. -136.453 iterations 16
Cbc0038I Pass  21: suminf.    2.75150 (12) obj. -136.453 iterations 1
Cbc0038I Pass  22: suminf.    3.47538 (9) obj. -136.453 iterations 27
Cbc0038I Pass  23: suminf.    3.07927 (10) obj. -136.453 iterations 25
Cbc0038I Pass  24: suminf.    3.07927 (10) obj. -136.453 iterations 0
Cbc0038I Pass  25: suminf.    3.24436 (10) obj. -136.453 iterations 29
Cbc0038I Pass  26: suminf.    2.57109 (12) obj. -136.453 iterations 17
Cbc0038I Pass  27: suminf.    2.53478 (12) obj. -136.453 iterations 2
Cbc0038I Pass  28: suminf.    3.50641 (11) obj. -136.453 iterations 35
Cbc0038I Pass  29: suminf.    3.21103 (11) obj. -136.453 iterations 18
Cbc0038I Pass  30: suminf.    3.13971 (12) obj. -136.453 iterations 6
Cbc0038I Pass  31: suminf.    3.12781 (12) obj. -136.453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 255 columns, reduced to 169 rows 91 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -131.027 - took 0.14 seconds
Cbc0012I Integer solution of -131.02689 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 148 rows 80 columns
Cbc0031I 35 added rows had average density of 146.11429
Cbc0013I At root node, 35 cuts changed objective from -185.28344 to -169.98329 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27885 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.441 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2483 row cuts average 252.4 elements, 0 column cuts (0 active)  in 0.395 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.434 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 247.5 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -131.02689 best solution, best possible -169.98329 (3.63 seconds)
Cbc0010I After 10 nodes, 9 on tree, -131.02689 best solution, best possible -169.98329 (4.34 seconds)
Cbc0038I Full problem 493 rows 255 columns, reduced to 95 rows 51 columns
Cbc0038I Full problem 493 rows 255 columns, reduced to 137 rows 74 columns
Cbc0010I After 95 nodes, 2 on tree, -131.02689 best solution, best possible -169.98138 (5.07 seconds)
Cbc0001I Search completed - best objective -131.02689, took 20481 iterations and 140 nodes (5.43 seconds)
Cbc0032I Strong branching done 1768 times (45459 iterations), fathomed 17 nodes and fixed 72 variables
Cbc0035I Maximum depth 38, 1180 variables fixed on reduced cost
Total time (CPU seconds):       5.34   (Wallclock seconds):       5.48

