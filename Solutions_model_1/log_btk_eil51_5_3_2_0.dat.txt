Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-9) rows, 51 (-2) columns and 286 (-17) elements
Clp1000I sum of infeasibilities 2.00287e-05 - average 2.08632e-07, 4 fixed columns
Coin0506I Presolve 88 (-8) rows, 47 (-4) columns and 262 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Coin0511I After Postsolve, objective 44.840514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Coin0511I After Postsolve, objective 44.840514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.84051365 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 96 rows, 51 columns (50 integer (50 of which binary)) and 286 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.789%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.417
Cbc0038I Solution found of 11.8162
Cbc0038I Relaxing continuous gives -1.98722
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 51 columns, reduced to 70 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -1.98722 to -7.07605 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.8526
Cbc0038I Pass   1: suminf.    1.89403 (26) obj. -10.8526 iterations 35
Cbc0038I Pass   2: suminf.    0.77856 (5) obj. -10.8526 iterations 33
Cbc0038I Pass   3: suminf.    0.15953 (3) obj. -10.8526 iterations 3
Cbc0038I Pass   4: suminf.    1.20429 (5) obj. -10.8526 iterations 9
Cbc0038I Pass   5: suminf.    0.72311 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   6: suminf.    0.72311 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   7: suminf.    0.29987 (3) obj. -10.8526 iterations 3
Cbc0038I Pass   8: suminf.    0.29987 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   9: suminf.    0.72311 (3) obj. -10.8526 iterations 2
Cbc0038I Pass  10: suminf.    0.48065 (3) obj. -10.8526 iterations 16
Cbc0038I Pass  11: suminf.    0.35036 (3) obj. -10.8526 iterations 5
Cbc0038I Pass  12: suminf.    0.77549 (3) obj. -10.8526 iterations 2
Cbc0038I Pass  13: suminf.    0.77549 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  14: suminf.    0.35036 (3) obj. -10.8526 iterations 3
Cbc0038I Pass  15: suminf.    1.55308 (7) obj. -10.8526 iterations 21
Cbc0038I Pass  16: suminf.    1.20032 (5) obj. -10.8526 iterations 4
Cbc0038I Pass  17: suminf.    1.33488 (5) obj. -10.8526 iterations 7
Cbc0038I Pass  18: suminf.    1.19915 (4) obj. -10.8526 iterations 1
Cbc0038I Pass  19: suminf.    1.04938 (4) obj. -10.8526 iterations 4
Cbc0038I Pass  20: suminf.    1.03555 (5) obj. -10.8526 iterations 1
Cbc0038I Pass  21: suminf.    0.92800 (5) obj. -10.8526 iterations 10
Cbc0038I Pass  22: suminf.    1.17739 (3) obj. -10.8526 iterations 5
Cbc0038I Pass  23: suminf.    1.01656 (4) obj. -10.8526 iterations 2
Cbc0038I Pass  24: suminf.    1.15367 (3) obj. -10.8526 iterations 4
Cbc0038I Pass  25: suminf.    1.15367 (3) obj. -10.8526 iterations 0
Cbc0038I Pass  26: suminf.    1.21669 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  27: suminf.    0.99911 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  28: suminf.    0.99911 (3) obj. -10.8526 iterations 0
Cbc0038I Pass  29: suminf.    1.15367 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  30: suminf.    1.15367 (3) obj. -10.8526 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 51 columns, reduced to 83 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.07605 - took 0.10 seconds
Cbc0012I Integer solution of -7.07605 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 96 rows 51 columns, reduced to 70 rows 37 columns
Cbc0012I Integer solution of -12.34531 found by RINS after 0 iterations and 0 nodes (0.17 seconds)
Cbc0031I 13 added rows had average density of 26.076923
Cbc0013I At root node, 13 cuts changed objective from -44.840514 to -36.293844 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6373 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1664 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0012I Integer solution of -13.52076 found by DiveCoefficient after 5892 iterations and 35 nodes (0.66 seconds)
Cbc0010I After 39 nodes, 2 on tree, -13.52076 best solution, best possible -36.293844 (0.67 seconds)
Cbc0001I Search completed - best objective -13.52076000000001, took 6032 iterations and 42 nodes (0.67 seconds)
Cbc0032I Strong branching done 464 times (7048 iterations), fathomed 8 nodes and fixed 32 variables
Cbc0035I Maximum depth 6, 101 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

