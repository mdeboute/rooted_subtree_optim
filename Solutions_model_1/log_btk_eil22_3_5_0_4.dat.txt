Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 24 (-23) rows, 15 (-9) columns and 72 (-57) elements
Clp0000I Optimal - objective value 89.140618
Coin0511I After Postsolve, objective 89.140618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.14061833 - 15 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 73 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.11118
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -26 iterations 8
Cbc0038I Solution found of -26
Cbc0038I Relaxing continuous gives -26
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -26 to -46 (0.01 seconds)
Cbc0038I Round again with cutoff of -50.6307
Cbc0038I Pass   2: suminf.    0.84933 (2) obj. -50.6307 iterations 2
Cbc0038I Pass   3: suminf.    0.36000 (1) obj. -50.6307 iterations 2
Cbc0038I Pass   4: suminf.    0.42467 (1) obj. -50.6307 iterations 1
Cbc0038I Pass   5: suminf.    0.59948 (3) obj. -50.6307 iterations 4
Cbc0038I Pass   6: suminf.    0.28869 (2) obj. -50.6307 iterations 2
Cbc0038I Pass   7: suminf.    0.75420 (3) obj. -50.6307 iterations 4
Cbc0038I Pass   8: suminf.    0.75780 (4) obj. -50.6307 iterations 1
Cbc0038I Pass   9: suminf.    0.60450 (3) obj. -50.6307 iterations 6
Cbc0038I Pass  10: suminf.    0.39259 (2) obj. -50.6307 iterations 6
Cbc0038I Pass  11: suminf.    0.42467 (1) obj. -50.6307 iterations 2
Cbc0038I Pass  12: suminf.    0.36000 (1) obj. -50.6307 iterations 1
Cbc0038I Pass  13: suminf.    0.67880 (2) obj. -50.6307 iterations 5
Cbc0038I Pass  14: suminf.    0.47516 (1) obj. -50.6307 iterations 4
Cbc0038I Pass  15: suminf.    0.08000 (1) obj. -50.6307 iterations 2
Cbc0038I Pass  16: suminf.    0.33395 (1) obj. -50.6307 iterations 1
Cbc0038I Pass  17: suminf.    0.65381 (4) obj. -50.6307 iterations 6
Cbc0038I Pass  18: suminf.    0.60450 (3) obj. -50.6307 iterations 3
Cbc0038I Pass  19: suminf.    0.39259 (2) obj. -50.6307 iterations 6
Cbc0038I Pass  20: suminf.    0.42467 (1) obj. -50.6307 iterations 2
Cbc0038I Pass  21: suminf.    0.36000 (1) obj. -50.6307 iterations 1
Cbc0038I Pass  22: suminf.    0.39542 (1) obj. -50.6307 iterations 2
Cbc0038I Pass  23: suminf.    0.36000 (1) obj. -50.6307 iterations 2
Cbc0038I Pass  24: suminf.    0.39259 (2) obj. -50.6307 iterations 1
Cbc0038I Pass  25: suminf.    1.05963 (3) obj. -50.6307 iterations 5
Cbc0038I Pass  26: suminf.    1.05963 (3) obj. -50.6307 iterations 1
Cbc0038I Pass  27: suminf.    0.61885 (3) obj. -50.6307 iterations 5
Cbc0038I Pass  28: suminf.    0.44296 (3) obj. -50.6307 iterations 1
Cbc0038I Pass  29: suminf.    1.41640 (4) obj. -50.6307 iterations 4
Cbc0038I Pass  30: suminf.    0.70349 (3) obj. -50.6307 iterations 2
Cbc0038I Pass  31: suminf.    0.39542 (1) obj. -50.6307 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -46 - took 0.01 seconds
Cbc0012I Integer solution of -46 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 17 rows 11 columns
Cbc0031I 7 added rows had average density of 10.857143
Cbc0013I At root node, 7 cuts changed objective from -83.307937 to -59.972095 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 401 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -46, took 1043 iterations and 2 nodes (0.09 seconds)
Cbc0032I Strong branching done 24 times (194 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

