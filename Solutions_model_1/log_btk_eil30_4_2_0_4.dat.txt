Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 27 (-36) rows, 16 (-16) columns and 80 (-97) elements
Clp0000I Optimal - objective value 119.78123
Coin0511I After Postsolve, objective 119.78123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.7812298 - 16 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 27 rows, 16 columns (15 integer (15 of which binary)) and 80 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.924%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.95697
Cbc0038I Solution found of -47
Cbc0038I Relaxing continuous gives -47
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 16 columns, reduced to 15 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -54.728
Cbc0038I Pass   1: suminf.    0.19943 (2) obj. -54.728 iterations 8
Cbc0038I Pass   2: suminf.    0.28226 (1) obj. -81.6169 iterations 4
Cbc0038I Pass   3: suminf.    0.28036 (1) obj. -54.728 iterations 2
Cbc0038I Pass   4: suminf.    0.28036 (1) obj. -54.728 iterations 2
Cbc0038I Pass   5: suminf.    0.28036 (1) obj. -54.728 iterations 2
Cbc0038I Pass   6: suminf.    1.12588 (4) obj. -54.728 iterations 5
Cbc0038I Pass   7: suminf.    0.94214 (3) obj. -54.728 iterations 3
Cbc0038I Pass   8: suminf.    0.33871 (1) obj. -75.25 iterations 3
Cbc0038I Pass   9: suminf.    0.39649 (1) obj. -54.728 iterations 1
Cbc0038I Pass  10: suminf.    0.39649 (1) obj. -54.728 iterations 2
Cbc0038I Pass  11: suminf.    0.39649 (1) obj. -54.728 iterations 2
Cbc0038I Pass  12: suminf.    1.01422 (4) obj. -54.728 iterations 5
Cbc0038I Pass  13: suminf.    0.79997 (4) obj. -54.728 iterations 3
Cbc0038I Pass  14: suminf.    0.26124 (2) obj. -54.728 iterations 6
Cbc0038I Pass  15: suminf.    0.26124 (2) obj. -54.728 iterations 0
Cbc0038I Pass  16: suminf.    0.49194 (1) obj. -54.728 iterations 1
Cbc0038I Pass  17: suminf.    0.44810 (1) obj. -54.728 iterations 1
Cbc0038I Pass  18: suminf.    0.44810 (1) obj. -54.728 iterations 1
Cbc0038I Pass  19: suminf.    0.44810 (1) obj. -54.728 iterations 2
Cbc0038I Pass  20: suminf.    0.22715 (3) obj. -54.728 iterations 5
Cbc0038I Pass  21: suminf.    0.22715 (3) obj. -54.728 iterations 2
Cbc0038I Pass  22: suminf.    1.56292 (6) obj. -54.728 iterations 4
Cbc0038I Pass  23: suminf.    0.43655 (3) obj. -54.728 iterations 4
Cbc0038I Pass  24: suminf.    0.28223 (3) obj. -54.728 iterations 4
Cbc0038I Pass  25: suminf.    0.28223 (3) obj. -54.728 iterations 0
Cbc0038I Pass  26: suminf.    0.56219 (3) obj. -54.728 iterations 5
Cbc0038I Pass  27: suminf.    0.56219 (3) obj. -54.728 iterations 0
Cbc0038I Pass  28: suminf.    0.44355 (1) obj. -67.125 iterations 5
Cbc0038I Pass  29: suminf.    0.39649 (1) obj. -54.728 iterations 1
Cbc0038I Pass  30: suminf.    0.39649 (1) obj. -54.728 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 16 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -47 - took 0.02 seconds
Cbc0012I Integer solution of -47 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 16 columns, reduced to 15 rows 9 columns
Cbc0012I Integer solution of -65 found by DiveCoefficient after 21 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from -119.78123 to -65 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 2.1 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -65, took 21 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.01

