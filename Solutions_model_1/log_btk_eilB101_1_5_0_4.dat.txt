Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 150 (-55) rows, 82 (-21) columns and 458 (-145) elements
Clp1000I sum of infeasibilities 0 - average 0, 72 fixed columns
Coin0506I Presolve 9 (-141) rows, 9 (-73) columns and 32 (-426) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 26935.711
Clp0000I Optimal - objective value 26935.711
Coin0511I After Postsolve, objective 26935.711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6547884 - largest nonzero change 2.3510516e-05 ( 0.0023510516%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 26935.711
Clp0000I Optimal - objective value 26935.711
Clp0000I Optimal - objective value 26935.711
Coin0511I After Postsolve, objective 26935.711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26935.71069 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 149 rows, 82 columns (81 integer (81 of which binary)) and 464 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.190%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 1.57479
Cbc0038I Solution found of -23026.8
Cbc0038I Relaxing continuous gives -23026.8
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 149 rows 82 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -23026.8 to -24345.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -24604.2
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.54505 (2) obj. -24604.2 iterations 24
Cbc0038I Pass   2: suminf.    0.26667 (1) obj. -25537 iterations 10
Cbc0038I Pass   3: suminf.    0.05796 (1) obj. -24604.2 iterations 1
Cbc0038I Pass   4: suminf.    0.58781 (2) obj. -24604.2 iterations 12
Cbc0038I Pass   5: suminf.    0.58781 (2) obj. -24604.2 iterations 8
Cbc0038I Pass   6: suminf.    0.05796 (1) obj. -24604.2 iterations 12
Cbc0038I Pass   7: suminf.    0.64137 (3) obj. -24604.2 iterations 13
Cbc0038I Pass   8: suminf.    0.64137 (3) obj. -24604.2 iterations 3
Cbc0038I Pass   9: suminf.    0.38328 (2) obj. -24604.2 iterations 15
Cbc0038I Pass  10: suminf.    0.38328 (2) obj. -24604.2 iterations 0
Cbc0038I Pass  11: suminf.    0.06667 (1) obj. -25111.3 iterations 10
Cbc0038I Solution found of -24813.3
Cbc0038I Relaxing continuous gives -24813.3
Cbc0038I Rounding solution of -25166 is better than previous of -24813.3

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 149 rows 82 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -25520
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.86149 (2) obj. -25520 iterations 0
Cbc0038I Pass  13: suminf.    0.26667 (1) obj. -25537 iterations 14
Cbc0038I Pass  14: suminf.    0.26285 (1) obj. -25520 iterations 1
Cbc0038I Pass  15: suminf.    1.21330 (6) obj. -25520 iterations 20
Cbc0038I Pass  16: suminf.    0.99297 (4) obj. -25520 iterations 14
Cbc0038I Pass  17: suminf.    0.72035 (4) obj. -25520 iterations 9
Cbc0038I Pass  18: suminf.    0.47254 (4) obj. -25520 iterations 8
Cbc0038I Pass  19: suminf.    0.47254 (4) obj. -25520 iterations 4
Cbc0038I Pass  20: suminf.    1.96436 (5) obj. -25520 iterations 10
Cbc0038I Pass  21: suminf.    1.84654 (6) obj. -25520 iterations 7
Cbc0038I Pass  22: suminf.    0.26667 (1) obj. -25537 iterations 10
Cbc0038I Pass  23: suminf.    0.26285 (1) obj. -25520 iterations 2
Cbc0038I Pass  24: suminf.    0.26285 (1) obj. -25520 iterations 7
Cbc0038I Pass  25: suminf.    0.26285 (1) obj. -25520 iterations 6
Cbc0038I Pass  26: suminf.    0.41559 (9) obj. -25520 iterations 18
Cbc0038I Pass  27: suminf.    0.38096 (5) obj. -25520 iterations 8
Cbc0038I Pass  28: suminf.    0.31234 (4) obj. -25520 iterations 9
Cbc0038I Pass  29: suminf.    0.31234 (4) obj. -25520 iterations 5
Cbc0038I Pass  30: suminf.    1.78723 (5) obj. -25520 iterations 8
Cbc0038I Pass  31: suminf.    0.31234 (4) obj. -25520 iterations 6
Cbc0038I Pass  32: suminf.    0.36730 (4) obj. -25520 iterations 11
Cbc0038I Pass  33: suminf.    0.36730 (4) obj. -25520 iterations 3
Cbc0038I Pass  34: suminf.    0.31234 (4) obj. -25520 iterations 11
Cbc0038I Pass  35: suminf.    0.31234 (4) obj. -25520 iterations 3
Cbc0038I Pass  36: suminf.    1.78723 (5) obj. -25520 iterations 8
Cbc0038I Pass  37: suminf.    0.31234 (4) obj. -25520 iterations 6
Cbc0038I Pass  38: suminf.    0.24099 (3) obj. -25520 iterations 12
Cbc0038I Pass  39: suminf.    0.24099 (3) obj. -25520 iterations 3
Cbc0038I Pass  40: suminf.    0.31234 (4) obj. -25520 iterations 8
Cbc0038I Pass  41: suminf.    0.31234 (4) obj. -25520 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 149 rows 82 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -24813.3 to -25319 (0.03 seconds)
Cbc0038I Round again with cutoff of -25944.7
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 4
Cbc0038I Pass  41: suminf.    1.01716 (9) obj. -25944.7 iterations 5
Cbc0038I Pass  42: suminf.    1.73473 (7) obj. -25944.7 iterations 16
Cbc0038I Pass  43: suminf.    0.62735 (4) obj. -25944.7 iterations 11
Cbc0038I Pass  44: suminf.    1.76715 (5) obj. -25944.7 iterations 10
Cbc0038I Pass  45: suminf.    1.76715 (5) obj. -25944.7 iterations 6
Cbc0038I Pass  46: suminf.    0.91295 (4) obj. -25944.7 iterations 16
Cbc0038I Pass  47: suminf.    1.07630 (5) obj. -25944.7 iterations 16
Cbc0038I Pass  48: suminf.    0.64538 (9) obj. -25944.7 iterations 9
Cbc0038I Pass  49: suminf.    0.43348 (7) obj. -25944.7 iterations 14
Cbc0038I Pass  50: suminf.    0.32269 (9) obj. -25944.7 iterations 10
Cbc0038I Pass  51: suminf.    1.24703 (8) obj. -25944.7 iterations 12
Cbc0038I Pass  52: suminf.    0.64982 (9) obj. -25944.7 iterations 9
Cbc0038I Pass  53: suminf.    0.54441 (5) obj. -25944.7 iterations 9
Cbc0038I Pass  54: suminf.    0.62735 (4) obj. -25944.7 iterations 7
Cbc0038I Pass  55: suminf.    0.62735 (4) obj. -25944.7 iterations 7
Cbc0038I Pass  56: suminf.    1.76715 (5) obj. -25944.7 iterations 10
Cbc0038I Pass  57: suminf.    1.33642 (6) obj. -25944.7 iterations 8
Cbc0038I Pass  58: suminf.    1.33642 (6) obj. -25944.7 iterations 4
Cbc0038I Pass  59: suminf.    0.57094 (3) obj. -25944.7 iterations 13
Cbc0038I Pass  60: suminf.    0.57094 (3) obj. -25944.7 iterations 0
Cbc0038I Pass  61: suminf.    0.50608 (3) obj. -25944.7 iterations 9
Cbc0038I Pass  62: suminf.    0.50608 (3) obj. -25944.7 iterations 0
Cbc0038I Pass  63: suminf.    0.71809 (3) obj. -25944.7 iterations 1
Cbc0038I Pass  64: suminf.    0.43083 (2) obj. -25944.7 iterations 10
Cbc0038I Pass  65: suminf.    0.71581 (4) obj. -25944.7 iterations 25
Cbc0038I Pass  66: suminf.    0.57094 (3) obj. -25944.7 iterations 7
Cbc0038I Pass  67: suminf.    0.50608 (3) obj. -25944.7 iterations 9
Cbc0038I Pass  68: suminf.    0.50608 (3) obj. -25944.7 iterations 0
Cbc0038I Pass  69: suminf.    0.71809 (3) obj. -25944.7 iterations 1
Cbc0038I Pass  70: suminf.    0.43083 (2) obj. -25944.7 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 149 rows 82 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25319 - took 0.02 seconds
Cbc0012I Integer solution of -25319.03 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 149 rows 82 columns, reduced to 2 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 5.2
Cbc0013I At root node, 5 cuts changed objective from -26935.711 to -25354.201 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.1 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 81.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25319.03, took 53 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.12

