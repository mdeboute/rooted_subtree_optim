Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 49 (-4) columns and 262 (-41) elements
Clp1000I sum of infeasibilities 2.07075e-05 - average 2.40785e-07, 3 fixed columns
Coin0506I Presolve 80 (-6) rows, 46 (-3) columns and 244 (-18) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Coin0511I After Postsolve, objective 41.475372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Coin0511I After Postsolve, objective 41.475372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.47537193 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 49 columns (48 integer (48 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.73926
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.74036 iterations 32
Cbc0038I Solution found of 1.74036
Cbc0038I Relaxing continuous gives 1.74036
Cbc0038I Rounding solution of -0.01005 is better than previous of 1.74036

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -0.01005 to -9.47555 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.6756
Cbc0038I Pass   2: suminf.    1.44579 (9) obj. -12.6756 iterations 7
Cbc0038I Pass   3: suminf.    1.37135 (8) obj. -12.6756 iterations 1
Cbc0038I Pass   4: suminf.    1.37135 (8) obj. -12.6756 iterations 0
Cbc0038I Pass   5: suminf.    1.90425 (6) obj. -12.6756 iterations 9
Cbc0038I Pass   6: suminf.    1.90425 (6) obj. -12.6756 iterations 0
Cbc0038I Pass   7: suminf.    1.16227 (4) obj. -12.6756 iterations 7
Cbc0038I Pass   8: suminf.    1.02115 (3) obj. -12.6756 iterations 2
Cbc0038I Pass   9: suminf.    1.04671 (3) obj. -12.6756 iterations 1
Cbc0038I Pass  10: suminf.    1.27311 (5) obj. -12.6756 iterations 12
Cbc0038I Pass  11: suminf.    1.27311 (5) obj. -12.6756 iterations 1
Cbc0038I Pass  12: suminf.    1.86495 (5) obj. -12.6756 iterations 12
Cbc0038I Pass  13: suminf.    1.68274 (6) obj. -12.6756 iterations 3
Cbc0038I Pass  14: suminf.    1.68274 (6) obj. -12.6756 iterations 0
Cbc0038I Pass  15: suminf.    1.35880 (5) obj. -12.6756 iterations 6
Cbc0038I Pass  16: suminf.    1.35880 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  17: suminf.    0.98551 (4) obj. -12.6756 iterations 7
Cbc0038I Pass  18: suminf.    0.83126 (3) obj. -12.6756 iterations 1
Cbc0038I Pass  19: suminf.    1.46742 (4) obj. -12.6756 iterations 4
Cbc0038I Pass  20: suminf.    1.46742 (4) obj. -12.6756 iterations 0
Cbc0038I Pass  21: suminf.    1.62266 (5) obj. -12.6756 iterations 5
Cbc0038I Pass  22: suminf.    1.62266 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  23: suminf.    2.12062 (5) obj. -12.6756 iterations 5
Cbc0038I Pass  24: suminf.    2.12062 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  25: suminf.    1.93950 (5) obj. -12.6756 iterations 2
Cbc0038I Pass  26: suminf.    1.68274 (6) obj. -12.6756 iterations 3
Cbc0038I Pass  27: suminf.    1.68274 (6) obj. -12.6756 iterations 0
Cbc0038I Pass  28: suminf.    1.35880 (5) obj. -12.6756 iterations 6
Cbc0038I Pass  29: suminf.    1.35880 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  30: suminf.    0.98551 (4) obj. -12.6756 iterations 7
Cbc0038I Pass  31: suminf.    0.83126 (3) obj. -12.6756 iterations 1
Cbc0038I Rounding solution of -10.404 is better than previous of -9.47555

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -18.4356
Cbc0038I Pass  31: suminf.    2.20213 (9) obj. -18.4356 iterations 0
Cbc0038I Pass  32: suminf.    2.12769 (8) obj. -18.4356 iterations 1
Cbc0038I Pass  33: suminf.    2.12769 (8) obj. -18.4356 iterations 0
Cbc0038I Pass  34: suminf.    2.15227 (6) obj. -18.4356 iterations 10
Cbc0038I Pass  35: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  36: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  37: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  38: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  39: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  40: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  41: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  42: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  43: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  44: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  45: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  46: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  47: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  48: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  49: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  50: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  51: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  52: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  53: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  54: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  55: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  56: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  57: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  58: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  59: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  60: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -10.404 - took 0.07 seconds
Cbc0012I Integer solution of -10.40399 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 86 rows 49 columns, reduced to 65 rows 38 columns
Cbc0031I 29 added rows had average density of 33.413793
Cbc0013I At root node, 29 cuts changed objective from -41.475372 to -30.475799 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9885 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 48.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 159 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 48.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -10.40399 best solution, best possible -30.475799 (0.68 seconds)
Cbc0038I Full problem 86 rows 49 columns, reduced to 56 rows 33 columns
Cbc0001I Search completed - best objective -10.40399, took 11128 iterations and 60 nodes (1.09 seconds)
Cbc0032I Strong branching done 862 times (14348 iterations), fathomed 4 nodes and fixed 22 variables
Cbc0035I Maximum depth 17, 80 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.10

