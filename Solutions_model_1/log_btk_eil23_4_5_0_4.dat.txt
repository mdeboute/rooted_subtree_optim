Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-31) rows, 13 (-12) columns and 55 (-80) elements
Clp1000I sum of infeasibilities 0 - average 0, 9 fixed columns
Coin0506I Presolve 4 (-14) rows, 4 (-9) columns and 10 (-45) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Coin0511I After Postsolve, objective 12583.503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26750404 - largest nonzero change 0 ( 0%) - largest zero change 1.5917103e-05
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Clp0000I Optimal - objective value 12583.503
Coin0511I After Postsolve, objective 12583.503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12583.50328 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 55 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.00485
Cbc0038I Pass   1: suminf.    0.02317 (1) obj. -7436.95 iterations 2
Cbc0038I Solution found of -1884.08
Cbc0038I Relaxing continuous gives -1937.07
Cbc0038I Rounding solution of -2387.69 is better than previous of -1937.07

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2909.24
Cbc0038I Pass   2: suminf.    0.02317 (1) obj. -7436.95 iterations 0
Cbc0038I Pass   3: suminf.    0.17081 (1) obj. -2909.24 iterations 3
Cbc0038I Pass   4: suminf.    0.11364 (1) obj. -6981.88 iterations 1
Cbc0038I Pass   5: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass   6: suminf.    0.27273 (1) obj. -6076.4 iterations 0
Cbc0038I Pass   7: suminf.    0.17081 (1) obj. -2909.24 iterations 1
Cbc0038I Pass   8: suminf.    0.22257 (1) obj. -2909.24 iterations 3
Cbc0038I Pass   9: suminf.    0.32955 (1) obj. -5458.41 iterations 1
Cbc0038I Pass  10: suminf.    0.22257 (1) obj. -2909.24 iterations 1
Cbc0038I Pass  11: suminf.    0.23891 (1) obj. -2909.24 iterations 2
Cbc0038I Pass  12: suminf.    0.22727 (1) obj. -5947.5 iterations 1
Cbc0038I Pass  13: suminf.    0.23891 (1) obj. -2909.24 iterations 1
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -3108.91 iterations 4
Cbc0038I Solution found of -3108.91
Cbc0038I Relaxing continuous gives -3108.91
Cbc0038I Rounding solution of -3629.52 is better than previous of -3108.91

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4424.25
Cbc0038I Pass  15: suminf.    0.02317 (1) obj. -7436.95 iterations 0
Cbc0038I Pass  16: suminf.    0.43699 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  17: suminf.    0.11364 (1) obj. -6981.88 iterations 1
Cbc0038I Pass  18: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass  19: suminf.    0.43699 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  20: suminf.    0.27273 (1) obj. -6076.4 iterations 1
Cbc0038I Pass  21: suminf.    0.93933 (2) obj. -4424.25 iterations 2
Cbc0038I Pass  22: suminf.    0.49921 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  23: suminf.    0.12683 (1) obj. -6510.56 iterations 2
Cbc0038I Pass  24: suminf.    0.15122 (1) obj. -5993.47 iterations 4
Cbc0038I Pass  25: suminf.    0.15122 (1) obj. -5993.47 iterations 1
Cbc0038I Pass  26: suminf.    0.43366 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  27: suminf.    0.45178 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  28: suminf.    0.18171 (1) obj. -5931.12 iterations 3
Cbc0038I Pass  29: suminf.    0.45178 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  30: suminf.    0.03537 (1) obj. -6727.99 iterations 3
Cbc0038I Pass  31: suminf.    0.03537 (1) obj. -6727.99 iterations 0
Cbc0038I Pass  32: suminf.    0.44896 (1) obj. -4424.25 iterations 2
Cbc0038I Pass  33: suminf.    0.17561 (1) obj. -6299.6 iterations 4
Cbc0038I Pass  34: suminf.    0.48876 (1) obj. -4424.25 iterations 3
Cbc0038I Pass  35: suminf.    0.32955 (1) obj. -5458.41 iterations 1
Cbc0038I Pass  36: suminf.    0.42642 (1) obj. -6099.9 iterations 3
Cbc0038I Pass  37: suminf.    0.27918 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  38: suminf.    0.42642 (1) obj. -6099.9 iterations 1
Cbc0038I Pass  39: suminf.    0.39497 (1) obj. -6171.88 iterations 1
Cbc0038I Pass  40: suminf.    0.29798 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  41: suminf.    0.39497 (1) obj. -6171.88 iterations 1
Cbc0038I Pass  42: suminf.    0.36478 (1) obj. -5080.87 iterations 1
Cbc0038I Pass  43: suminf.    0.48015 (1) obj. -4424.25 iterations 1
Cbc0038I Pass  44: suminf.    0.36478 (1) obj. -5080.87 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3629.52 - took 0.01 seconds
Cbc0012I Integer solution of -3629.519 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -6365.816 found by DiveCoefficient after 32 iterations and 0 nodes (0.02 seconds)
Cbc0031I 8 added rows had average density of 4.75
Cbc0013I At root node, 8 cuts changed objective from -7603.1713 to -6365.816 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 5.6 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6365.816000000001, took 32 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

