Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 73 (-5) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 3.08231e-06 - average 2.38938e-08, 10 fixed columns
Coin0506I Presolve 110 (-19) rows, 63 (-10) columns and 338 (-58) elements
Clp0029I End of values pass after 63 iterations
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Coin0511I After Postsolve, objective 55.429742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Coin0511I After Postsolve, objective 55.429742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.42974191 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 73 columns (72 integer (72 of which binary)) and 432 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.780%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.62172
Cbc0038I Solution found of -2.31461
Cbc0038I Relaxing continuous gives -9.25922
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -9.25922 to -25.0354 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.9996
Cbc0038I Pass   1: suminf.    1.53699 (19) obj. -27.9996 iterations 39
Cbc0038I Pass   2: suminf.    2.31747 (6) obj. -27.9996 iterations 22
Cbc0038I Pass   3: suminf.    1.45324 (4) obj. -27.9996 iterations 8
Cbc0038I Pass   4: suminf.    0.91434 (3) obj. -27.9996 iterations 4
Cbc0038I Pass   5: suminf.    0.61808 (3) obj. -27.9996 iterations 6
Cbc0038I Pass   6: suminf.    0.47009 (1) obj. -27.9996 iterations 1
Cbc0038I Pass   7: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass   8: suminf.    2.23868 (7) obj. -27.9996 iterations 18
Cbc0038I Pass   9: suminf.    0.57984 (4) obj. -27.9996 iterations 12
Cbc0038I Pass  10: suminf.    0.57700 (5) obj. -27.9996 iterations 1
Cbc0038I Pass  11: suminf.    1.00155 (3) obj. -27.9996 iterations 8
Cbc0038I Pass  12: suminf.    0.65782 (2) obj. -27.9996 iterations 3
Cbc0038I Pass  13: suminf.    0.47009 (1) obj. -27.9996 iterations 3
Cbc0038I Pass  14: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass  15: suminf.    2.35233 (8) obj. -27.9996 iterations 17
Cbc0038I Pass  16: suminf.    2.04816 (6) obj. -27.9996 iterations 5
Cbc0038I Pass  17: suminf.    1.20724 (5) obj. -27.9996 iterations 1
Cbc0038I Pass  18: suminf.    1.53699 (19) obj. -27.9996 iterations 29
Cbc0038I Pass  19: suminf.    2.31747 (6) obj. -27.9996 iterations 22
Cbc0038I Pass  20: suminf.    1.45324 (4) obj. -27.9996 iterations 8
Cbc0038I Pass  21: suminf.    0.91434 (3) obj. -27.9996 iterations 4
Cbc0038I Pass  22: suminf.    0.61808 (3) obj. -27.9996 iterations 6
Cbc0038I Pass  23: suminf.    0.47009 (1) obj. -27.9996 iterations 1
Cbc0038I Pass  24: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass  25: suminf.    2.38614 (8) obj. -27.9996 iterations 15
Cbc0038I Pass  26: suminf.    0.56872 (3) obj. -27.9996 iterations 12
Cbc0038I Pass  27: suminf.    0.56872 (3) obj. -27.9996 iterations 2
Cbc0038I Pass  28: suminf.    0.64905 (2) obj. -27.9996 iterations 6
Cbc0038I Pass  29: suminf.    1.58340 (5) obj. -27.9996 iterations 17
Cbc0038I Pass  30: suminf.    1.58016 (5) obj. -27.9996 iterations 6
Cbc0038I Rounding solution of -30.0353 is better than previous of -25.0354

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -34.9638
Cbc0038I Pass  30: suminf.    2.10816 (19) obj. -34.9638 iterations 0
Cbc0038I Pass  31: suminf.    2.71627 (8) obj. -34.9638 iterations 22
Cbc0038I Pass  32: suminf.    1.73025 (6) obj. -34.9638 iterations 8
Cbc0038I Pass  33: suminf.    1.20983 (6) obj. -34.9638 iterations 4
Cbc0038I Pass  34: suminf.    0.85719 (8) obj. -34.9638 iterations 6
Cbc0038I Pass  35: suminf.    2.58269 (7) obj. -34.9638 iterations 12
Cbc0038I Pass  36: suminf.    1.62160 (6) obj. -34.9638 iterations 8
Cbc0038I Pass  37: suminf.    3.13659 (13) obj. -34.9638 iterations 18
Cbc0038I Pass  38: suminf.    1.11358 (7) obj. -34.9638 iterations 18
Cbc0038I Pass  39: suminf.    1.09817 (6) obj. -34.9638 iterations 2
Cbc0038I Pass  40: suminf.    1.76769 (5) obj. -34.9638 iterations 9
Cbc0038I Pass  41: suminf.    1.02060 (4) obj. -34.9638 iterations 9
Cbc0038I Pass  42: suminf.    1.33798 (5) obj. -34.9638 iterations 6
Cbc0038I Pass  43: suminf.    0.45767 (4) obj. -34.9638 iterations 6
Cbc0038I Pass  44: suminf.    0.43823 (4) obj. -34.9638 iterations 6
Cbc0038I Pass  45: suminf.    1.24772 (4) obj. -34.9638 iterations 8
Cbc0038I Pass  46: suminf.    4.20156 (12) obj. -34.9638 iterations 21
Cbc0038I Pass  47: suminf.    1.99377 (7) obj. -34.9638 iterations 20
Cbc0038I Pass  48: suminf.    1.84102 (7) obj. -34.9638 iterations 5
Cbc0038I Pass  49: suminf.    2.29475 (6) obj. -34.9638 iterations 9
Cbc0038I Pass  50: suminf.    1.34386 (6) obj. -34.9638 iterations 12
Cbc0038I Pass  51: suminf.    1.24886 (6) obj. -34.9638 iterations 5
Cbc0038I Pass  52: suminf.    2.35069 (7) obj. -34.9638 iterations 19
Cbc0038I Pass  53: suminf.    1.37277 (5) obj. -34.9638 iterations 16
Cbc0038I Pass  54: suminf.    1.04831 (4) obj. -34.9638 iterations 7
Cbc0038I Pass  55: suminf.    0.51218 (4) obj. -34.9638 iterations 10
Cbc0038I Pass  56: suminf.    1.24772 (4) obj. -34.9638 iterations 10
Cbc0038I Pass  57: suminf.    0.43823 (4) obj. -34.9638 iterations 8
Cbc0038I Pass  58: suminf.    2.13917 (8) obj. -34.9638 iterations 16
Cbc0038I Pass  59: suminf.    1.08760 (6) obj. -34.9638 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 92 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -30.0353 - took 0.08 seconds
Cbc0012I Integer solution of -30.03532 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 128 rows 73 columns, reduced to 71 rows 41 columns
Cbc0031I 23 added rows had average density of 52.26087
Cbc0013I At root node, 23 cuts changed objective from -54.677118 to -46.059864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11667 row cuts average 5.0 elements, 1 column cuts (1 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2483 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.03532 best solution, best possible -46.059864 (0.90 seconds)
Cbc0001I Search completed - best objective -30.03532000000001, took 8588 iterations and 46 nodes (1.08 seconds)
Cbc0032I Strong branching done 594 times (12766 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 21, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.10

