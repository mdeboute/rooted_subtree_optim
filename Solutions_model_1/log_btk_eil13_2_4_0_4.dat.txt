Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 10 (-5) columns and 48 (-27) elements
Clp1000I sum of infeasibilities 6.36011e-07 - average 3.74124e-08, 1 fixed columns
Coin0506I Presolve 14 (-3) rows, 9 (-1) columns and 40 (-8) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 165.48746
Clp0000I Optimal - objective value 165.48746
Coin0511I After Postsolve, objective 165.48746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 165.48746
Clp0000I Optimal - objective value 165.48746
Clp0000I Optimal - objective value 165.48746
Coin0511I After Postsolve, objective 165.48746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.4874592 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 10 columns (9 integer (9 of which binary)) and 49 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.524%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.4
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -108.6 iterations 6
Cbc0038I Solution found of -108.6
Cbc0038I Relaxing continuous gives -108.6
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 10 columns, reduced to 10 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -112.772
Cbc0038I Pass   2: suminf.    0.06794 (1) obj. -112.772 iterations 1
Cbc0038I Pass   3: suminf.    0.09524 (1) obj. -112.772 iterations 1
Cbc0038I Pass   4: suminf.    0.90889 (4) obj. -112.772 iterations 5
Cbc0038I Pass   5: suminf.    0.90889 (4) obj. -112.772 iterations 0
Cbc0038I Pass   6: suminf.    0.96674 (3) obj. -112.772 iterations 5
Cbc0038I Pass   7: suminf.    0.26719 (1) obj. -112.772 iterations 3
Cbc0038I Pass   8: suminf.    0.15789 (1) obj. -112.772 iterations 2
Cbc0038I Pass   9: suminf.    0.30490 (1) obj. -112.772 iterations 1
Cbc0038I Pass  10: suminf.    0.92506 (4) obj. -112.772 iterations 1
Cbc0038I Pass  11: suminf.    0.30490 (1) obj. -112.772 iterations 1
Cbc0038I Pass  12: suminf.    0.30490 (1) obj. -112.772 iterations 0
Cbc0038I Pass  13: suminf.    0.90889 (4) obj. -112.772 iterations 3
Cbc0038I Pass  14: suminf.    0.90889 (4) obj. -112.772 iterations 0
Cbc0038I Pass  15: suminf.    0.96674 (3) obj. -112.772 iterations 4
Cbc0038I Pass  16: suminf.    0.09524 (1) obj. -112.772 iterations 3
Cbc0038I Pass  17: suminf.    0.06794 (1) obj. -112.772 iterations 1
Cbc0038I Pass  18: suminf.    0.86626 (3) obj. -112.772 iterations 5
Cbc0038I Pass  19: suminf.    0.86626 (3) obj. -112.772 iterations 1
Cbc0038I Pass  20: suminf.    0.38310 (2) obj. -112.772 iterations 4
Cbc0038I Pass  21: suminf.    0.38310 (2) obj. -112.772 iterations 0
Cbc0038I Pass  22: suminf.    0.09524 (1) obj. -112.772 iterations 2
Cbc0038I Pass  23: suminf.    0.06794 (1) obj. -112.772 iterations 1
Cbc0038I Pass  24: suminf.    0.06794 (1) obj. -112.772 iterations 0
Cbc0038I Pass  25: suminf.    0.06794 (1) obj. -112.772 iterations 0
Cbc0038I Pass  26: suminf.    0.06794 (1) obj. -112.772 iterations 0
Cbc0038I Pass  27: suminf.    2.23672 (6) obj. -112.772 iterations 5
Cbc0038I Pass  28: suminf.    0.06794 (1) obj. -112.772 iterations 4
Cbc0038I Pass  29: suminf.    0.93719 (3) obj. -112.772 iterations 6
Cbc0038I Pass  30: suminf.    0.26719 (1) obj. -112.772 iterations 5
Cbc0038I Pass  31: suminf.    0.15789 (1) obj. -112.772 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 10 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -108.6 - took 0.01 seconds
Cbc0012I Integer solution of -108.6 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 10 columns, reduced to 10 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -148.51891 to -148.51891 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -108.6, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

