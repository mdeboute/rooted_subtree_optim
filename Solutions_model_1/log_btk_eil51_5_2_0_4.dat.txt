Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-38) rows, 37 (-16) columns and 202 (-101) elements
Clp1000I sum of infeasibilities 4.014e-05 - average 5.99104e-07, 6 fixed columns
Coin0506I Presolve 56 (-11) rows, 31 (-6) columns and 168 (-34) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Coin0511I After Postsolve, objective 112.96051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Clp0000I Optimal - objective value 112.96051
Coin0511I After Postsolve, objective 112.96051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.9605091 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 67 rows, 37 columns (36 integer (36 of which binary)) and 202 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.45451
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -61.7946 iterations 14
Cbc0038I Solution found of -61.7946
Cbc0038I Relaxing continuous gives -61.7946
Cbc0038I Rounding solution of -67.0324 is better than previous of -61.7946

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -67.0324 to -82.4216 (0.01 seconds)
Cbc0038I Round again with cutoff of -85.4756
Cbc0038I Pass   2: suminf.    0.18689 (4) obj. -85.4756 iterations 5
Cbc0038I Pass   3: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass   4: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass   5: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass   6: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass   7: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass   8: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass   9: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  10: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  11: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  12: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  13: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  14: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  15: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  16: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  17: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  18: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  19: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  20: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  21: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  22: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  23: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  24: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  25: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I Pass  26: suminf.    0.18689 (4) obj. -85.4756 iterations 4
Cbc0038I Pass  27: suminf.    0.18689 (4) obj. -85.4756 iterations 0
Cbc0038I Pass  28: suminf.    1.42463 (6) obj. -85.4756 iterations 8
Cbc0038I Pass  29: suminf.    0.96699 (5) obj. -85.4756 iterations 3
Cbc0038I Pass  30: suminf.    2.04303 (7) obj. -85.4756 iterations 10
Cbc0038I Pass  31: suminf.    1.41977 (4) obj. -85.4756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -82.4216 - took 0.02 seconds
Cbc0012I Integer solution of -82.4216 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 67 rows 37 columns, reduced to 25 rows 16 columns
Cbc0031I 6 added rows had average density of 34
Cbc0013I At root node, 6 cuts changed objective from -112.96051 to -92.41581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 605 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 391 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -82.4216, took 1295 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 66 times (441 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

