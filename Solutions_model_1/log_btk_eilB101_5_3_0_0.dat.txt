Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 99 (-4) columns and 571 (-32) elements
Clp1000I sum of infeasibilities 1.06844e-05 - average 5.62338e-08, 22 fixed columns
Coin0506I Presolve 146 (-44) rows, 77 (-22) columns and 439 (-132) elements
Clp0029I End of values pass after 77 iterations
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Coin0511I After Postsolve, objective 47.516167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Coin0511I After Postsolve, objective 47.516167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.51616674 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 189 rows, 99 columns (98 integer (98 of which binary)) and 594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 7.11812
Cbc0038I Solution found of -1.92067
Cbc0038I Relaxing continuous gives -7.63194
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 189 rows 99 columns, reduced to 107 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -7.63194 to -25.2254 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.4104
Cbc0038I Pass   1: suminf.    2.56428 (29) obj. -27.4104 iterations 64
Cbc0038I Pass   2: suminf.    1.73733 (11) obj. -27.4104 iterations 25
Cbc0038I Pass   3: suminf.    2.74541 (8) obj. -27.4104 iterations 14
Cbc0038I Pass   4: suminf.    1.76329 (10) obj. -27.4104 iterations 14
Cbc0038I Pass   5: suminf.    4.09202 (16) obj. -27.4104 iterations 31
Cbc0038I Pass   6: suminf.    2.18410 (11) obj. -27.4104 iterations 44
Cbc0038I Pass   7: suminf.    2.38822 (7) obj. -27.4104 iterations 13
Cbc0038I Pass   8: suminf.    2.13391 (7) obj. -27.4104 iterations 8
Cbc0038I Pass   9: suminf.    1.43745 (6) obj. -27.4104 iterations 10
Cbc0038I Pass  10: suminf.    1.24684 (8) obj. -27.4104 iterations 16
Cbc0038I Pass  11: suminf.    2.71624 (8) obj. -27.4104 iterations 16
Cbc0038I Pass  12: suminf.    1.76329 (10) obj. -27.4104 iterations 11
Cbc0038I Pass  13: suminf.    1.73733 (11) obj. -27.4104 iterations 4
Cbc0038I Pass  14: suminf.    2.74541 (8) obj. -27.4104 iterations 17
Cbc0038I Pass  15: suminf.    6.12655 (19) obj. -27.4104 iterations 37
Cbc0038I Pass  16: suminf.    2.86183 (15) obj. -27.4104 iterations 38
Cbc0038I Pass  17: suminf.    2.56428 (29) obj. -27.4104 iterations 15
Cbc0038I Pass  18: suminf.    5.75276 (20) obj. -27.4104 iterations 53
Cbc0038I Pass  19: suminf.    2.55556 (9) obj. -27.4104 iterations 38
Cbc0038I Pass  20: suminf.    1.86091 (13) obj. -27.4104 iterations 10
Cbc0038I Pass  21: suminf.    4.02129 (12) obj. -27.4104 iterations 23
Cbc0038I Pass  22: suminf.    4.33329 (16) obj. -27.4104 iterations 16
Cbc0038I Pass  23: suminf.    2.95960 (13) obj. -27.4104 iterations 25
Cbc0038I Pass  24: suminf.    1.79903 (10) obj. -27.4104 iterations 13
Cbc0038I Pass  25: suminf.    3.27823 (10) obj. -27.4104 iterations 11
Cbc0038I Pass  26: suminf.    2.31744 (9) obj. -27.4104 iterations 5
Cbc0038I Pass  27: suminf.    2.15169 (13) obj. -27.4104 iterations 12
Cbc0038I Pass  28: suminf.    2.69816 (9) obj. -27.4104 iterations 14
Cbc0038I Pass  29: suminf.    2.36545 (10) obj. -27.4104 iterations 8
Cbc0038I Pass  30: suminf.    1.56409 (8) obj. -27.4104 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 189 rows 99 columns, reduced to 146 rows 77 columns - 1 fixed gives 135, 76 - still too large
Cbc0038I Full problem 189 rows 99 columns, reduced to 135 rows 76 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -25.2254 - took 0.06 seconds
Cbc0012I Integer solution of -25.2254 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 189 rows 99 columns, reduced to 107 rows 56 columns
Cbc0031I 23 added rows had average density of 78.434783
Cbc0013I At root node, 23 cuts changed objective from -47.074975 to -40.225309 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9214 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.2254 best solution, best possible -40.225309 (0.98 seconds)
Cbc0038I Full problem 189 rows 99 columns, reduced to 73 rows 40 columns
Cbc0001I Search completed - best objective -25.2254, took 8620 iterations and 64 nodes (1.29 seconds)
Cbc0032I Strong branching done 840 times (16972 iterations), fathomed 3 nodes and fixed 27 variables
Cbc0035I Maximum depth 23, 97 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.31

