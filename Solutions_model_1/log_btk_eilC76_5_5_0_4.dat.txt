Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 59 (-19) columns and 325 (-128) elements
Clp1000I sum of infeasibilities 1.56594e-05 - average 1.46349e-07, 37 fixed columns
Coin0506I Presolve 34 (-73) rows, 20 (-39) columns and 102 (-223) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Coin0511I After Postsolve, objective 148.80281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31342519 - largest nonzero change 1.4622327e-05 ( 0.0012557832%) - largest zero change 2.7340943e-05
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Coin0511I After Postsolve, objective 148.80281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.8028108 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 107 rows, 59 columns (58 integer (58 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.04131
Cbc0038I Pass   1: suminf.    1.27363 (3) obj. -137.036 iterations 13
Cbc0038I Solution found of -95.978
Cbc0038I Relaxing continuous gives -95.978
Cbc0038I Rounding solution of -118.284 is better than previous of -95.978

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -118.284 to -119.745 (0.01 seconds)
Cbc0038I Round again with cutoff of -122.651
Cbc0038I Pass   2: suminf.    1.27363 (3) obj. -137.036 iterations 0
Cbc0038I Pass   3: suminf.    0.98511 (2) obj. -122.651 iterations 4
Cbc0038I Pass   4: suminf.    0.46154 (1) obj. -131.493 iterations 5
Cbc0038I Pass   5: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass   6: suminf.    0.79922 (4) obj. -122.651 iterations 12
Cbc0038I Pass   7: suminf.    0.58718 (3) obj. -122.651 iterations 10
Cbc0038I Pass   8: suminf.    0.53026 (4) obj. -122.651 iterations 4
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -123.842 iterations 2
Cbc0038I Pass  10: suminf.    0.14481 (1) obj. -122.651 iterations 4
Cbc0038I Pass  11: suminf.    0.46154 (1) obj. -122.651 iterations 2
Cbc0038I Pass  12: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass  13: suminf.    0.96600 (8) obj. -122.651 iterations 12
Cbc0038I Pass  14: suminf.    0.68346 (4) obj. -122.651 iterations 9
Cbc0038I Pass  15: suminf.    1.02903 (5) obj. -122.651 iterations 18
Cbc0038I Pass  16: suminf.    2.01686 (13) obj. -122.651 iterations 21
Cbc0038I Pass  17: suminf.    0.54112 (3) obj. -122.651 iterations 19
Cbc0038I Pass  18: suminf.    0.14481 (1) obj. -122.651 iterations 3
Cbc0038I Pass  19: suminf.    0.46154 (1) obj. -122.651 iterations 2
Cbc0038I Pass  20: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass  21: suminf.    1.89246 (7) obj. -122.651 iterations 12
Cbc0038I Pass  22: suminf.    0.21416 (1) obj. -122.651 iterations 14
Cbc0038I Pass  23: suminf.    0.03846 (1) obj. -129.141 iterations 1
Cbc0038I Pass  24: suminf.    2.41217 (9) obj. -122.651 iterations 13
Cbc0038I Pass  25: suminf.    1.78860 (5) obj. -122.651 iterations 6
Cbc0038I Pass  26: suminf.    0.63829 (4) obj. -122.651 iterations 6
Cbc0038I Pass  27: suminf.    0.14538 (2) obj. -122.651 iterations 4
Cbc0038I Pass  28: suminf.    0.14538 (2) obj. -122.651 iterations 0
Cbc0038I Pass  29: suminf.    0.46552 (3) obj. -122.651 iterations 4
Cbc0038I Pass  30: suminf.    0.14538 (2) obj. -122.651 iterations 8
Cbc0038I Pass  31: suminf.    0.98387 (5) obj. -122.651 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -119.745 to -132.813 (0.02 seconds)
Cbc0038I Round again with cutoff of -136.011
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.27363 (3) obj. -137.036 iterations 0
Cbc0038I Pass  32: suminf.    1.35506 (4) obj. -136.011 iterations 2
Cbc0038I Pass  33: suminf.    0.54792 (6) obj. -136.011 iterations 5
Cbc0038I Pass  34: suminf.    0.85322 (5) obj. -136.011 iterations 10
Cbc0038I Pass  35: suminf.    0.56612 (5) obj. -136.011 iterations 6
Cbc0038I Pass  36: suminf.    1.55150 (7) obj. -136.011 iterations 7
Cbc0038I Pass  37: suminf.    0.66165 (5) obj. -136.011 iterations 8
Cbc0038I Pass  38: suminf.    0.62477 (6) obj. -136.011 iterations 12
Cbc0038I Pass  39: suminf.    0.54792 (6) obj. -136.011 iterations 5
Cbc0038I Pass  40: suminf.    0.85322 (5) obj. -136.011 iterations 11
Cbc0038I Pass  41: suminf.    0.56612 (5) obj. -136.011 iterations 5
Cbc0038I Pass  42: suminf.    1.55150 (7) obj. -136.011 iterations 6
Cbc0038I Pass  43: suminf.    0.66165 (5) obj. -136.011 iterations 10
Cbc0038I Pass  44: suminf.    1.92313 (9) obj. -136.011 iterations 11
Cbc0038I Pass  45: suminf.    1.42473 (8) obj. -136.011 iterations 5
Cbc0038I Pass  46: suminf.    1.28619 (8) obj. -136.011 iterations 11
Cbc0038I Pass  47: suminf.    0.75938 (6) obj. -136.011 iterations 7
Cbc0038I Pass  48: suminf.    0.53462 (4) obj. -136.011 iterations 5
Cbc0038I Pass  49: suminf.    2.55797 (6) obj. -136.011 iterations 6
Cbc0038I Pass  50: suminf.    2.55797 (6) obj. -136.011 iterations 0
Cbc0038I Pass  51: suminf.    1.53611 (9) obj. -136.011 iterations 7
Cbc0038I Pass  52: suminf.    1.42473 (8) obj. -136.011 iterations 3
Cbc0038I Pass  53: suminf.    1.28619 (8) obj. -136.011 iterations 12
Cbc0038I Pass  54: suminf.    0.75938 (6) obj. -136.011 iterations 7
Cbc0038I Pass  55: suminf.    0.53462 (4) obj. -136.011 iterations 6
Cbc0038I Pass  56: suminf.    2.55797 (6) obj. -136.011 iterations 7
Cbc0038I Pass  57: suminf.    2.55797 (6) obj. -136.011 iterations 0
Cbc0038I Pass  58: suminf.    1.53611 (9) obj. -136.011 iterations 8
Cbc0038I Pass  59: suminf.    1.42473 (8) obj. -136.011 iterations 3
Cbc0038I Pass  60: suminf.    1.28619 (8) obj. -136.011 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -132.813 - took 0.03 seconds
Cbc0012I Integer solution of -132.81301 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 107 rows 59 columns, reduced to 14 rows 13 columns
Cbc0031I 7 added rows had average density of 29.142857
Cbc0013I At root node, 7 cuts changed objective from -148.80281 to -139.56974 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 4.4 elements, 13 column cuts (13 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 72 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0001I Search completed - best objective -132.81301, took 122 iterations and 2 nodes (0.30 seconds)
Cbc0032I Strong branching done 26 times (189 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.30

