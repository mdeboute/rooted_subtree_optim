Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 2.75568e-07 - average 1.53093e-08, 1 fixed columns
Coin0506I Presolve 16 (-2) rows, 11 (-1) columns and 46 (-6) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Coin0511I After Postsolve, objective 58.654029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Coin0511I After Postsolve, objective 58.654029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.65402882 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 12 columns (11 integer (11 of which binary)) and 52 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.17019
Cbc0038I Pass   1: suminf.    0.23529 (1) obj. -42.9118 iterations 4
Cbc0038I Solution found of -31.25
Cbc0038I Relaxing continuous gives -31.25
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 12 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -31.25 to -33.8 (0.00 seconds)
Cbc0038I Round again with cutoff of -36.025
Cbc0038I Pass   2: suminf.    0.23529 (1) obj. -42.9118 iterations 0
Cbc0038I Pass   3: suminf.    0.16381 (1) obj. -36.025 iterations 2
Cbc0038I Pass   4: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass   5: suminf.    1.06578 (3) obj. -36.025 iterations 2
Cbc0038I Pass   6: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass   7: suminf.    0.90805 (2) obj. -36.025 iterations 2
Cbc0038I Pass   8: suminf.    0.90805 (2) obj. -36.025 iterations 0
Cbc0038I Pass   9: suminf.    0.61270 (2) obj. -36.025 iterations 2
Cbc0038I Pass  10: suminf.    0.83750 (2) obj. -36.025 iterations 2
Cbc0038I Pass  11: suminf.    1.68432 (4) obj. -36.025 iterations 2
Cbc0038I Pass  12: suminf.    0.74437 (2) obj. -36.025 iterations 3
Cbc0038I Pass  13: suminf.    0.16381 (1) obj. -36.025 iterations 1
Cbc0038I Pass  14: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass  15: suminf.    1.06578 (3) obj. -36.025 iterations 2
Cbc0038I Pass  16: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass  17: suminf.    0.55379 (2) obj. -36.025 iterations 2
Cbc0038I Pass  18: suminf.    0.44781 (2) obj. -36.025 iterations 1
Cbc0038I Pass  19: suminf.    0.55379 (2) obj. -36.025 iterations 4
Cbc0038I Pass  20: suminf.    0.55379 (2) obj. -36.025 iterations 0
Cbc0038I Pass  21: suminf.    1.35874 (3) obj. -36.025 iterations 1
Cbc0038I Pass  22: suminf.    0.07633 (1) obj. -36.025 iterations 3
Cbc0038I Pass  23: suminf.    1.05749 (8) obj. -36.025 iterations 7
Cbc0038I Pass  24: suminf.    1.16140 (3) obj. -36.025 iterations 10
Cbc0038I Pass  25: suminf.    0.61270 (2) obj. -36.025 iterations 3
Cbc0038I Pass  26: suminf.    0.61270 (2) obj. -36.025 iterations 0
Cbc0038I Pass  27: suminf.    0.83750 (2) obj. -36.025 iterations 2
Cbc0038I Pass  28: suminf.    0.91062 (2) obj. -36.025 iterations 2
Cbc0038I Pass  29: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I Pass  30: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I Pass  31: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 12 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -33.8 - took 0.01 seconds
Cbc0012I Integer solution of -33.8 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 12 columns, reduced to 8 rows 6 columns
Cbc0031I 6 added rows had average density of 5.8333333
Cbc0013I At root node, 6 cuts changed objective from -55.722486 to -34.782868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 119 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 235 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.8, took 593 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 10 times (31 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

