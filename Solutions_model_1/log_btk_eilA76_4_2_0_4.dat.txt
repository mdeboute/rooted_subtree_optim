Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 65 (-13) columns and 356 (-97) elements
Clp1000I sum of infeasibilities 3.62955e-06 - average 3.12893e-08, 53 fixed columns
Coin0506I Presolve 9 (-107) rows, 10 (-55) columns and 32 (-324) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Coin0511I After Postsolve, objective 16595.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9938665 - largest nonzero change 1.5114173e-05 ( 0.001112934%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Coin0511I After Postsolve, objective 16595.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16595.35913 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 65 columns (64 integer (64 of which binary)) and 357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.362%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.828288
Cbc0038I Pass   1: suminf.    0.17857 (1) obj. -16070.1 iterations 9
Cbc0038I Solution found of -14442.1
Cbc0038I Relaxing continuous gives -14442.1
Cbc0038I Rounding solution of -15376 is better than previous of -14442.1

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15498
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17857 (1) obj. -16070.1 iterations 0
Cbc0038I Pass   3: suminf.    0.37322 (2) obj. -15498 iterations 6
Cbc0038I Pass   4: suminf.    0.28906 (2) obj. -15943.9 iterations 6
Cbc0038I Pass   5: suminf.    0.28906 (2) obj. -15943.9 iterations 0
Cbc0038I Pass   6: suminf.    0.77636 (2) obj. -15498 iterations 8
Cbc0038I Pass   7: suminf.    0.55094 (2) obj. -16116.5 iterations 5
Cbc0038I Pass   8: suminf.    0.18043 (4) obj. -15498 iterations 8
Cbc0038I Pass   9: suminf.    0.13248 (2) obj. -15498 iterations 7
Cbc0038I Pass  10: suminf.    0.57143 (3) obj. -16132.7 iterations 6
Cbc0038I Pass  11: suminf.    1.05772 (3) obj. -15498 iterations 11
Cbc0038I Pass  12: suminf.    0.58685 (2) obj. -15498 iterations 6
Cbc0038I Pass  13: suminf.    0.58685 (2) obj. -15498 iterations 1
Cbc0038I Pass  14: suminf.    0.75551 (2) obj. -15498 iterations 3
Cbc0038I Pass  15: suminf.    0.58732 (4) obj. -15498 iterations 15
Cbc0038I Pass  16: suminf.    0.58281 (3) obj. -15498 iterations 6
Cbc0038I Pass  17: suminf.    0.55094 (2) obj. -16342.3 iterations 10
Cbc0038I Pass  18: suminf.    0.45714 (2) obj. -16261 iterations 2
Cbc0038I Pass  19: suminf.    0.96204 (3) obj. -15498 iterations 7
Cbc0038I Pass  20: suminf.    1.82851 (7) obj. -15498 iterations 12
Cbc0038I Pass  21: suminf.    0.69445 (3) obj. -15498 iterations 9
Cbc0038I Pass  22: suminf.    1.26954 (3) obj. -15498 iterations 1
Cbc0038I Pass  23: suminf.    0.93168 (3) obj. -15498 iterations 7
Cbc0038I Pass  24: suminf.    0.94643 (3) obj. -16435.2 iterations 6
Cbc0038I Pass  25: suminf.    0.21307 (2) obj. -15498 iterations 5
Cbc0038I Pass  26: suminf.    1.35026 (4) obj. -15498 iterations 12
Cbc0038I Pass  27: suminf.    0.36304 (3) obj. -15682.5 iterations 4
Cbc0038I Pass  28: suminf.    0.93168 (3) obj. -15498 iterations 12
Cbc0038I Pass  29: suminf.    0.93168 (3) obj. -15498 iterations 0
Cbc0038I Pass  30: suminf.    0.94643 (3) obj. -16435.2 iterations 6
Cbc0038I Pass  31: suminf.    0.21307 (2) obj. -15498 iterations 5
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 65 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -15376 to -15985.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -16107.2
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.22440 (4) obj. -16107.2 iterations 3
Cbc0038I Pass  32: suminf.    0.48695 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  33: suminf.    0.48695 (3) obj. -16107.2 iterations 0
Cbc0038I Pass  34: suminf.    0.22440 (4) obj. -16107.2 iterations 4
Cbc0038I Pass  35: suminf.    0.62922 (3) obj. -16107.2 iterations 7
Cbc0038I Pass  36: suminf.    0.62922 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  37: suminf.    0.90929 (3) obj. -16591.6 iterations 7
Cbc0038I Pass  38: suminf.    0.69184 (2) obj. -16276.2 iterations 4
Cbc0038I Pass  39: suminf.    0.41602 (3) obj. -16107.2 iterations 14
Cbc0038I Pass  40: suminf.    0.31987 (4) obj. -16107.2 iterations 7
Cbc0038I Pass  41: suminf.    0.41602 (3) obj. -16107.2 iterations 4
Cbc0038I Pass  42: suminf.    0.39934 (4) obj. -16107.2 iterations 5
Cbc0038I Pass  43: suminf.    1.09894 (5) obj. -16107.2 iterations 9
Cbc0038I Pass  44: suminf.    1.02587 (4) obj. -16107.2 iterations 2
Cbc0038I Pass  45: suminf.    0.30357 (3) obj. -16205 iterations 6
Cbc0038I Pass  46: suminf.    0.25295 (2) obj. -16107.2 iterations 5
Cbc0038I Pass  47: suminf.    0.29245 (2) obj. -16128.8 iterations 5
Cbc0038I Pass  48: suminf.    2.03515 (5) obj. -16107.2 iterations 13
Cbc0038I Pass  49: suminf.    0.44972 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  50: suminf.    0.44972 (3) obj. -16107.2 iterations 0
Cbc0038I Pass  51: suminf.    0.97591 (3) obj. -16224.5 iterations 4
Cbc0038I Pass  52: suminf.    0.97591 (3) obj. -16224.5 iterations 0
Cbc0038I Pass  53: suminf.    0.70934 (3) obj. -16107.2 iterations 7
Cbc0038I Pass  54: suminf.    0.70934 (3) obj. -16107.2 iterations 1
Cbc0038I Pass  55: suminf.    0.48584 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  56: suminf.    1.44021 (4) obj. -16107.2 iterations 3
Cbc0038I Pass  57: suminf.    1.24908 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  58: suminf.    0.44972 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  59: suminf.    0.97591 (3) obj. -16224.5 iterations 4
Cbc0038I Pass  60: suminf.    0.69184 (2) obj. -16276.2 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 65 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15985.1 - took 0.02 seconds
Cbc0012I Integer solution of -15985.11 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 116 rows 65 columns, reduced to 10 rows 12 columns
Cbc0031I 8 added rows had average density of 17.875
Cbc0013I At root node, 8 cuts changed objective from -16595.359 to -16261.317 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15985.11, took 174 iterations and 4 nodes (0.39 seconds)
Cbc0032I Strong branching done 22 times (92 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.40

