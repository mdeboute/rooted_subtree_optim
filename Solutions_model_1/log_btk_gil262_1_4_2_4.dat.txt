Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 502 (-25) rows, 262 (-2) columns and 1496 (-49) elements
Clp1000I sum of infeasibilities 0.000150717 - average 3.00233e-07, 114 fixed columns
Coin0506I Presolve 264 (-238) rows, 142 (-120) columns and 787 (-709) elements
Clp0029I End of values pass after 142 iterations
Clp0014I Perturbing problem by 0.001% of 0.16132937 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 115.78314
Clp0000I Optimal - objective value 115.78314
Coin0511I After Postsolve, objective 115.78314, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13334639 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 115.78314
Clp0000I Optimal - objective value 115.78314
Clp0000I Optimal - objective value 115.78314
Coin0511I After Postsolve, objective 115.78314, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.783144 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 502 rows, 262 columns (261 integer (261 of which binary)) and 1496 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 70 integers unsatisfied sum - 12.7884
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.8854 iterations 267
Cbc0038I Solution found of 13.8854
Cbc0038I Relaxing continuous gives 13.8854
Cbc0038I Rounding solution of -31.7813 is better than previous of 13.8854

Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 129 rows 71 columns
Cbc0038I Mini branch and bound improved solution from -31.7813 to -56.1784 (0.06 seconds)
Cbc0038I Round again with cutoff of -62.139
Cbc0038I Pass   2: suminf.    4.55110 (29) obj. -62.139 iterations 53
Cbc0038I Pass   3: suminf.    4.08077 (50) obj. -62.139 iterations 40
Cbc0038I Pass   4: suminf.    2.82621 (10) obj. -62.139 iterations 76
Cbc0038I Pass   5: suminf.    1.43149 (7) obj. -62.139 iterations 8
Cbc0038I Pass   6: suminf.    1.26380 (5) obj. -62.139 iterations 33
Cbc0038I Pass   7: suminf.    1.24206 (4) obj. -62.139 iterations 1
Cbc0038I Pass   8: suminf.    1.36975 (4) obj. -62.139 iterations 11
Cbc0038I Pass   9: suminf.    1.36975 (4) obj. -62.139 iterations 0
Cbc0038I Pass  10: suminf.    1.24206 (4) obj. -62.139 iterations 35
Cbc0038I Pass  11: suminf.    7.99369 (19) obj. -62.139 iterations 84
Cbc0038I Pass  12: suminf.    3.60559 (9) obj. -62.139 iterations 22
Cbc0038I Pass  13: suminf.    3.06179 (9) obj. -62.139 iterations 6
Cbc0038I Pass  14: suminf.    0.85394 (2) obj. -62.139 iterations 12
Cbc0038I Pass  15: suminf.    0.62511 (3) obj. -62.139 iterations 2
Cbc0038I Pass  16: suminf.    0.81236 (2) obj. -62.139 iterations 3
Cbc0038I Pass  17: suminf.    0.60897 (3) obj. -62.139 iterations 2
Cbc0038I Pass  18: suminf.    1.45228 (4) obj. -62.139 iterations 14
Cbc0038I Pass  19: suminf.    1.44143 (5) obj. -62.139 iterations 1
Cbc0038I Pass  20: suminf.    1.84713 (5) obj. -62.139 iterations 22
Cbc0038I Pass  21: suminf.    1.46274 (4) obj. -62.139 iterations 12
Cbc0038I Pass  22: suminf.    4.91821 (15) obj. -62.139 iterations 47
Cbc0038I Pass  23: suminf.    3.83771 (12) obj. -62.139 iterations 25
Cbc0038I Pass  24: suminf.    3.72568 (11) obj. -62.139 iterations 3
Cbc0038I Pass  25: suminf.    3.34997 (10) obj. -62.139 iterations 1
Cbc0038I Pass  26: suminf.    0.95554 (6) obj. -62.139 iterations 38
Cbc0038I Pass  27: suminf.    0.94685 (3) obj. -62.139 iterations 2
Cbc0038I Pass  28: suminf.    1.34297 (4) obj. -62.139 iterations 4
Cbc0038I Pass  29: suminf.    0.99790 (3) obj. -62.139 iterations 2
Cbc0038I Pass  30: suminf.    3.97768 (12) obj. -62.139 iterations 30
Cbc0038I Pass  31: suminf.    2.70631 (9) obj. -62.139 iterations 50
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 146 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 213 rows 116 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -56.1784 - took 0.14 seconds
Cbc0012I Integer solution of -56.17844 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 129 rows 71 columns
Cbc0012I Integer solution of -56.42856 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 48 added rows had average density of 137.54167
Cbc0013I At root node, 48 cuts changed objective from -115.78314 to -103.60873 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44500 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.547 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3324 row cuts average 260.4 elements, 0 column cuts (0 active)  in 0.517 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.591 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 255.6 elements, 0 column cuts (0 active)  in 0.236 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -56.42856 best solution, best possible -103.60873 (5.63 seconds)
Cbc0010I After 11 nodes, 8 on tree, -56.42856 best solution, best possible -103.60873 (6.35 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 206 rows 112 columns
Cbc0010I After 45 nodes, 8 on tree, -56.42856 best solution, best possible -103.60873 (7.05 seconds)
Cbc0012I Integer solution of -58.03703 found by rounding after 22356 iterations and 49 nodes (7.11 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 4 rows 5 columns
Cbc0016I Integer solution of -58.1054 found by strong branching after 25088 iterations and 114 nodes (7.40 seconds)
Cbc0010I After 161 nodes, 15 on tree, -58.1054 best solution, best possible -103.60873 (7.76 seconds)
Cbc0012I Integer solution of -60.29002 found by rounding after 32029 iterations and 262 nodes (8.38 seconds)
Cbc0010I After 275 nodes, 9 on tree, -60.29002 best solution, best possible -103.60873 (8.46 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 76 rows 48 columns
Cbc0001I Search completed - best objective -60.29002, took 36103 iterations and 356 nodes (8.83 seconds)
Cbc0032I Strong branching done 3226 times (86377 iterations), fathomed 24 nodes and fixed 190 variables
Cbc0035I Maximum depth 59, 1398 variables fixed on reduced cost
Total time (CPU seconds):       8.64   (Wallclock seconds):       8.90

