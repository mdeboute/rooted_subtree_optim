Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 99 (-4) columns and 554 (-49) elements
Clp1000I sum of infeasibilities 8.68706e-05 - average 4.77311e-07, 21 fixed columns
Coin0506I Presolve 138 (-44) rows, 76 (-23) columns and 420 (-134) elements
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 1.624279 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 40.452797
Clp0000I Optimal - objective value 40.452797
Coin0511I After Postsolve, objective 40.452797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.452797
Clp0000I Optimal - objective value 40.452797
Clp0000I Optimal - objective value 40.452797
Coin0511I After Postsolve, objective 40.452797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.45279712 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 99 columns (98 integer (98 of which binary)) and 565 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 6.82097
Cbc0038I Solution found of 1.26369
Cbc0038I Relaxing continuous gives -5.20217
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 99 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.20217 to -12.8378 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.5646
Cbc0038I Pass   1: suminf.    1.74554 (29) obj. -15.5646 iterations 51
Cbc0038I Pass   2: suminf.    1.08827 (5) obj. -15.5646 iterations 37
Cbc0038I Pass   3: suminf.    0.95465 (3) obj. -15.5646 iterations 4
Cbc0038I Pass   4: suminf.    0.80482 (3) obj. -15.5646 iterations 7
Cbc0038I Pass   5: suminf.    0.59799 (2) obj. -15.5646 iterations 6
Cbc0038I Pass   6: suminf.    0.69265 (2) obj. -15.5646 iterations 4
Cbc0038I Pass   7: suminf.    2.11870 (6) obj. -15.5646 iterations 15
Cbc0038I Pass   8: suminf.    1.36713 (4) obj. -15.5646 iterations 18
Cbc0038I Pass   9: suminf.    1.87234 (6) obj. -15.5646 iterations 9
Cbc0038I Pass  10: suminf.    1.38249 (6) obj. -15.5646 iterations 1
Cbc0038I Pass  11: suminf.    1.27825 (7) obj. -15.5646 iterations 1
Cbc0038I Pass  12: suminf.    2.31094 (5) obj. -15.5646 iterations 11
Cbc0038I Pass  13: suminf.    1.36156 (6) obj. -15.5646 iterations 3
Cbc0038I Pass  14: suminf.    1.35475 (7) obj. -15.5646 iterations 1
Cbc0038I Pass  15: suminf.    2.33688 (6) obj. -15.5646 iterations 7
Cbc0038I Pass  16: suminf.    1.77502 (9) obj. -15.5646 iterations 5
Cbc0038I Pass  17: suminf.    1.85665 (6) obj. -15.5646 iterations 11
Cbc0038I Pass  18: suminf.    1.31939 (4) obj. -15.5646 iterations 5
Cbc0038I Pass  19: suminf.    1.61339 (4) obj. -15.5646 iterations 4
Cbc0038I Pass  20: suminf.    4.04322 (10) obj. -15.5646 iterations 22
Cbc0038I Pass  21: suminf.    2.23045 (8) obj. -15.5646 iterations 24
Cbc0038I Pass  22: suminf.    2.37391 (6) obj. -15.5646 iterations 10
Cbc0038I Pass  23: suminf.    1.54613 (5) obj. -15.5646 iterations 3
Cbc0038I Pass  24: suminf.    2.34260 (5) obj. -15.5646 iterations 5
Cbc0038I Pass  25: suminf.    1.86466 (5) obj. -15.5646 iterations 2
Cbc0038I Pass  26: suminf.    2.54200 (7) obj. -15.5646 iterations 18
Cbc0038I Pass  27: suminf.    1.65249 (6) obj. -15.5646 iterations 17
Cbc0038I Pass  28: suminf.    2.24864 (6) obj. -15.5646 iterations 5
Cbc0038I Pass  29: suminf.    1.86552 (5) obj. -15.5646 iterations 5
Cbc0038I Pass  30: suminf.    1.54613 (5) obj. -15.5646 iterations 1
Cbc0038I Rounding solution of -14.7156 is better than previous of -12.8378

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 99 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -20.4727
Cbc0038I Pass  30: suminf.    2.57229 (29) obj. -20.4727 iterations 0
Cbc0038I Pass  31: suminf.    1.86535 (7) obj. -20.4727 iterations 32
Cbc0038I Pass  32: suminf.    1.59786 (5) obj. -20.4727 iterations 9
Cbc0038I Pass  33: suminf.    1.77744 (8) obj. -20.4727 iterations 10
Cbc0038I Pass  34: suminf.    1.77744 (8) obj. -20.4727 iterations 0
Cbc0038I Pass  35: suminf.    1.87041 (6) obj. -20.4727 iterations 9
Cbc0038I Pass  36: suminf.    1.25520 (4) obj. -20.4727 iterations 5
Cbc0038I Pass  37: suminf.    1.25520 (4) obj. -20.4727 iterations 0
Cbc0038I Pass  38: suminf.    1.62197 (4) obj. -20.4727 iterations 2
Cbc0038I Pass  39: suminf.    2.56325 (9) obj. -20.4727 iterations 19
Cbc0038I Pass  40: suminf.    1.27498 (5) obj. -20.4727 iterations 13
Cbc0038I Pass  41: suminf.    1.27498 (5) obj. -20.4727 iterations 0
Cbc0038I Pass  42: suminf.    1.24679 (5) obj. -20.4727 iterations 13
Cbc0038I Pass  43: suminf.    1.24679 (5) obj. -20.4727 iterations 0
Cbc0038I Pass  44: suminf.    1.58571 (5) obj. -20.4727 iterations 4
Cbc0038I Pass  45: suminf.    1.48388 (5) obj. -20.4727 iterations 3
Cbc0038I Pass  46: suminf.    1.47997 (4) obj. -20.4727 iterations 1
Cbc0038I Pass  47: suminf.    1.38230 (4) obj. -20.4727 iterations 2
Cbc0038I Pass  48: suminf.    1.24679 (5) obj. -20.4727 iterations 3
Cbc0038I Pass  49: suminf.    1.58571 (5) obj. -20.4727 iterations 4
Cbc0038I Pass  50: suminf.    1.48388 (5) obj. -20.4727 iterations 3
Cbc0038I Pass  51: suminf.    1.47997 (4) obj. -20.4727 iterations 1
Cbc0038I Pass  52: suminf.    1.38230 (4) obj. -20.4727 iterations 2
Cbc0038I Pass  53: suminf.    1.24679 (5) obj. -20.4727 iterations 3
Cbc0038I Pass  54: suminf.    1.58571 (5) obj. -20.4727 iterations 4
Cbc0038I Pass  55: suminf.    1.48388 (5) obj. -20.4727 iterations 3
Cbc0038I Pass  56: suminf.    1.47997 (4) obj. -20.4727 iterations 1
Cbc0038I Pass  57: suminf.    1.38230 (4) obj. -20.4727 iterations 2
Cbc0038I Pass  58: suminf.    1.24679 (5) obj. -20.4727 iterations 3
Cbc0038I Pass  59: suminf.    1.58571 (5) obj. -20.4727 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 99 columns, reduced to 93 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -14.7156 - took 0.11 seconds
Cbc0012I Integer solution of -14.715629 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 182 rows 99 columns, reduced to 89 rows 50 columns
Cbc0031I 30 added rows had average density of 58.333333
Cbc0013I At root node, 30 cuts changed objective from -40.105041 to -32.753567 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14570 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2060 row cuts average 98.9 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.715629 best solution, best possible -32.753567 (1.36 seconds)
Cbc0038I Full problem 182 rows 99 columns, reduced to 89 rows 50 columns
Cbc0012I Integer solution of -14.90565 found by RINS after 10588 iterations and 45 nodes (1.70 seconds)
Cbc0038I Full problem 182 rows 99 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of -14.912139 found by rounding after 12685 iterations and 97 nodes (1.87 seconds)
Cbc0016I Integer solution of -15.39625 found by strong branching after 12745 iterations and 102 nodes (1.87 seconds)
Cbc0001I Search completed - best objective -15.39624999999999, took 12907 iterations and 106 nodes (1.88 seconds)
Cbc0032I Strong branching done 1128 times (19598 iterations), fathomed 9 nodes and fixed 49 variables
Cbc0035I Maximum depth 38, 287 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       1.90

