Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 4.14405e-07 - average 2.20428e-09, 9 fixed columns
Coin0506I Presolve 161 (-27) rows, 92 (-9) columns and 498 (-72) elements
Clp0029I End of values pass after 92 iterations
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Coin0511I After Postsolve, objective 47.585587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Coin0511I After Postsolve, objective 47.585587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.58558728 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 13.8043
Cbc0038I Solution found of 4.35675
Cbc0038I Relaxing continuous gives 0.56518
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 106 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 0.56518 to -14.6201 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.9167
Cbc0038I Pass   1: suminf.    3.65874 (30) obj. -17.9167 iterations 103
Cbc0038I Pass   2: suminf.    1.72732 (8) obj. -17.9167 iterations 42
Cbc0038I Pass   3: suminf.    1.57647 (7) obj. -17.9167 iterations 6
Cbc0038I Pass   4: suminf.    2.51398 (7) obj. -17.9167 iterations 9
Cbc0038I Pass   5: suminf.    2.03583 (7) obj. -17.9167 iterations 3
Cbc0038I Pass   6: suminf.    2.51700 (7) obj. -17.9167 iterations 9
Cbc0038I Pass   7: suminf.    2.70082 (7) obj. -17.9167 iterations 8
Cbc0038I Pass   8: suminf.    1.90256 (10) obj. -17.9167 iterations 4
Cbc0038I Pass   9: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  10: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  11: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  12: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  13: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  14: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  15: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  16: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  17: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  18: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  19: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  20: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  21: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  22: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  23: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  24: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  25: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  26: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  27: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  28: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  29: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  30: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 112 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -14.6201 to -16.5782 (0.16 seconds)
Cbc0038I Round again with cutoff of -23.8505
Cbc0038I Pass  30: suminf.    5.17376 (37) obj. -23.8505 iterations 13
Cbc0038I Pass  31: suminf.    3.43013 (11) obj. -23.8505 iterations 42
Cbc0038I Pass  32: suminf.    3.37519 (10) obj. -23.8505 iterations 3
Cbc0038I Pass  33: suminf.    3.88143 (13) obj. -23.8505 iterations 22
Cbc0038I Pass  34: suminf.    3.78643 (12) obj. -23.8505 iterations 5
Cbc0038I Pass  35: suminf.    3.78643 (12) obj. -23.8505 iterations 0
Cbc0038I Pass  36: suminf.    3.73762 (11) obj. -23.8505 iterations 15
Cbc0038I Pass  37: suminf.    3.69162 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  38: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  39: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  40: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  41: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  42: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  43: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  44: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  45: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  46: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  47: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  48: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  49: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  50: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  51: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  52: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  53: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  54: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  55: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  56: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  57: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  58: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  59: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 120 rows 71 columns - 10 fixed gives 82, 61 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 78 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -16.5782 - took 0.16 seconds
Cbc0012I Integer solution of -16.57824 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 107 rows 64 columns
Cbc0012I Integer solution of -17.09011 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 37 added rows had average density of 64.513514
Cbc0013I At root node, 37 cuts changed objective from -47.585587 to -38.22555 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20997 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2405 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.09011 best solution, best possible -38.22555 (1.87 seconds)
Cbc0012I Integer solution of -17.33695 found by rounding after 13290 iterations and 21 nodes (2.15 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 17 rows 18 columns
Cbc0012I Integer solution of -17.60725 found by RINS after 13972 iterations and 41 nodes (2.24 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -17.78138 found by rounding after 15748 iterations and 136 nodes (2.45 seconds)
Cbc0012I Integer solution of -17.84459 found by DiveCoefficient after 17169 iterations and 168 nodes (2.53 seconds)
Cbc0016I Integer solution of -17.86174 found by strong branching after 17234 iterations and 179 nodes (2.54 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 2 rows 5 columns
Cbc0010I After 207 nodes, 4 on tree, -17.86174 best solution, best possible -28.12643 (2.58 seconds)
Cbc0012I Integer solution of -17.90438 found by rounding after 17744 iterations and 214 nodes (2.59 seconds)
Cbc0001I Search completed - best objective -17.90437999999999, took 18417 iterations and 262 nodes (2.65 seconds)
Cbc0032I Strong branching done 1832 times (29889 iterations), fathomed 41 nodes and fixed 124 variables
Cbc0035I Maximum depth 35, 738 variables fixed on reduced cost
Total time (CPU seconds):       2.59   (Wallclock seconds):       2.67

