Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 101 (-2) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 2.86804e-05 - average 1.60225e-07, 20 fixed columns
Coin0506I Presolve 138 (-41) rows, 80 (-21) columns and 428 (-124) elements
Clp0029I End of values pass after 80 iterations
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Coin0511I After Postsolve, objective 48.79624, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Coin0511I After Postsolve, objective 48.79624, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.79624044 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 101 columns (100 integer (100 of which binary)) and 563 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.941%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.23144
Cbc0038I Solution found of 1.18964
Cbc0038I Relaxing continuous gives -5.97144
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 81 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.97144 to -23.7189 (0.08 seconds)
Cbc0038I Round again with cutoff of -26.2267
Cbc0038I Pass   1: suminf.    2.71571 (27) obj. -26.2267 iterations 64
Cbc0038I Pass   2: suminf.    1.82337 (7) obj. -26.2267 iterations 34
Cbc0038I Pass   3: suminf.    1.34796 (7) obj. -26.2267 iterations 5
Cbc0038I Pass   4: suminf.    1.82837 (8) obj. -26.2267 iterations 13
Cbc0038I Pass   5: suminf.    1.44204 (8) obj. -26.2267 iterations 8
Cbc0038I Pass   6: suminf.    1.96013 (6) obj. -26.2267 iterations 12
Cbc0038I Pass   7: suminf.    0.63282 (4) obj. -26.2267 iterations 5
Cbc0038I Pass   8: suminf.    0.89802 (4) obj. -26.2267 iterations 5
Cbc0038I Pass   9: suminf.    0.54021 (2) obj. -26.2267 iterations 3
Cbc0038I Pass  10: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  11: suminf.    2.71072 (10) obj. -26.2267 iterations 24
Cbc0038I Pass  12: suminf.    1.21536 (6) obj. -26.2267 iterations 16
Cbc0038I Pass  13: suminf.    0.77784 (5) obj. -26.2267 iterations 10
Cbc0038I Pass  14: suminf.    0.63282 (4) obj. -26.2267 iterations 9
Cbc0038I Pass  15: suminf.    0.63282 (4) obj. -26.2267 iterations 0
Cbc0038I Pass  16: suminf.    0.89802 (4) obj. -26.2267 iterations 5
Cbc0038I Pass  17: suminf.    0.54021 (2) obj. -26.2267 iterations 3
Cbc0038I Pass  18: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  19: suminf.    3.30633 (11) obj. -26.2267 iterations 24
Cbc0038I Pass  20: suminf.    2.84774 (13) obj. -26.2267 iterations 8
Cbc0038I Pass  21: suminf.    2.62842 (11) obj. -26.2267 iterations 27
Cbc0038I Pass  22: suminf.    1.57172 (8) obj. -26.2267 iterations 7
Cbc0038I Pass  23: suminf.    1.09653 (7) obj. -26.2267 iterations 7
Cbc0038I Pass  24: suminf.    2.16993 (6) obj. -26.2267 iterations 14
Cbc0038I Pass  25: suminf.    1.19909 (3) obj. -26.2267 iterations 4
Cbc0038I Pass  26: suminf.    0.54021 (2) obj. -26.2267 iterations 4
Cbc0038I Pass  27: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  28: suminf.    2.19659 (7) obj. -26.2267 iterations 22
Cbc0038I Pass  29: suminf.    1.62966 (8) obj. -26.2267 iterations 10
Cbc0038I Pass  30: suminf.    1.58053 (6) obj. -26.2267 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 101 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -23.7189 to -24.4416 (0.13 seconds)
Cbc0038I Round again with cutoff of -30.7406
Cbc0038I Pass  30: suminf.    3.32091 (27) obj. -30.7406 iterations 0
Cbc0038I Pass  31: suminf.    3.18035 (11) obj. -30.7406 iterations 36
Cbc0038I Pass  32: suminf.    1.91264 (9) obj. -30.7406 iterations 8
Cbc0038I Pass  33: suminf.    2.36557 (10) obj. -30.7406 iterations 13
Cbc0038I Pass  34: suminf.    1.95215 (10) obj. -30.7406 iterations 7
Cbc0038I Pass  35: suminf.    1.92381 (8) obj. -30.7406 iterations 2
Cbc0038I Pass  36: suminf.    1.52732 (6) obj. -30.7406 iterations 7
Cbc0038I Pass  37: suminf.    1.31157 (5) obj. -30.7406 iterations 7
Cbc0038I Pass  38: suminf.    1.43979 (6) obj. -30.7406 iterations 6
Cbc0038I Pass  39: suminf.    0.51295 (3) obj. -30.7406 iterations 5
Cbc0038I Pass  40: suminf.    0.48693 (4) obj. -30.7406 iterations 2
Cbc0038I Pass  41: suminf.    1.59050 (5) obj. -30.7406 iterations 6
Cbc0038I Pass  42: suminf.    1.09501 (6) obj. -30.7406 iterations 10
Cbc0038I Pass  43: suminf.    1.93720 (7) obj. -30.7406 iterations 8
Cbc0038I Pass  44: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  45: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  46: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  47: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  48: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  49: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  50: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  51: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  52: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  53: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  54: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  55: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  56: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  57: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  58: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  59: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 89 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -24.4416 - took 0.15 seconds
Cbc0012I Integer solution of -24.44165 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 82 rows 49 columns
Cbc0031I 29 added rows had average density of 60.827586
Cbc0013I At root node, 29 cuts changed objective from -48.79624 to -42.144529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16097 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2815 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 100.3 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.44165 best solution, best possible -42.144529 (1.60 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 5 rows 6 columns
Cbc0038I Full problem 179 rows 101 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -24.44165, took 14688 iterations and 134 nodes (2.09 seconds)
Cbc0032I Strong branching done 1108 times (23066 iterations), fathomed 7 nodes and fixed 40 variables
Cbc0035I Maximum depth 38, 339 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       2.11

