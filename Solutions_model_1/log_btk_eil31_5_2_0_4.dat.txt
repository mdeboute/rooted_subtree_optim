Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-34) rows, 19 (-14) columns and 93 (-90) elements
Clp1000I sum of infeasibilities 3.85438e-06 - average 1.24335e-07, 14 fixed columns
Coin0506I Presolve 3 (-28) rows, 3 (-16) columns and 7 (-86) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 5864.2251
Clp0000I Optimal - objective value 5864.2251
Coin0511I After Postsolve, objective 5864.2251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.5750699 - largest nonzero change 1.7917877e-05 ( 0.0012557832%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 5864.2251
Clp0000I Optimal - objective value 5864.2251
Clp0000I Optimal - objective value 5864.2251
Coin0511I After Postsolve, objective 5864.2251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5864.225109 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 19 columns (18 integer (18 of which binary)) and 97 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.287%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.839378
Cbc0038I Pass   1: suminf.    0.83938 (3) obj. -5447.7 iterations 2
Cbc0038I Solution found of -3970.84
Cbc0038I Relaxing continuous gives -3973.2
Cbc0038I Rounding solution of -5321.91 is better than previous of -3973.2

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 19 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -5321.91 to -5322.27 (0.01 seconds)
Cbc0038I Round again with cutoff of -5334.81
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.83938 (3) obj. -5447.7 iterations 0
Cbc0038I Pass   3: suminf.    0.32312 (1) obj. -5334.81 iterations 5
Cbc0038I Pass   4: suminf.    0.31250 (1) obj. -5356.18 iterations 1
Cbc0038I Pass   5: suminf.    0.75121 (3) obj. -5334.81 iterations 3
Cbc0038I Pass   6: suminf.    0.31250 (1) obj. -5356.18 iterations 2
Cbc0038I Pass   7: suminf.    0.83620 (4) obj. -5334.81 iterations 4
Cbc0038I Pass   8: suminf.    1.15142 (4) obj. -5334.81 iterations 6
Cbc0038I Pass   9: suminf.    1.15142 (4) obj. -5334.81 iterations 1
Cbc0038I Pass  10: suminf.    0.24015 (2) obj. -5334.81 iterations 5
Cbc0038I Pass  11: suminf.    0.00624 (1) obj. -5334.81 iterations 2
Cbc0038I Pass  12: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I Pass  13: suminf.    0.00624 (1) obj. -5334.81 iterations 1
Cbc0038I Pass  14: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I Pass  15: suminf.    0.00624 (1) obj. -5334.81 iterations 1
Cbc0038I Pass  16: suminf.    0.00624 (1) obj. -5334.81 iterations 1
Cbc0038I Pass  17: suminf.    1.20754 (4) obj. -5334.81 iterations 2
Cbc0038I Pass  18: suminf.    1.20754 (4) obj. -5334.81 iterations 0
Cbc0038I Pass  19: suminf.    0.46877 (2) obj. -5334.81 iterations 4
Cbc0038I Pass  20: suminf.    0.31250 (1) obj. -5356.18 iterations 3
Cbc0038I Pass  21: suminf.    0.32312 (1) obj. -5334.81 iterations 1
Cbc0038I Pass  22: suminf.    0.74225 (3) obj. -5334.81 iterations 2
Cbc0038I Pass  23: suminf.    0.10946 (2) obj. -5334.81 iterations 3
Cbc0038I Pass  24: suminf.    0.00624 (1) obj. -5334.81 iterations 2
Cbc0038I Pass  25: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I Pass  26: suminf.    0.00624 (1) obj. -5334.81 iterations 2
Cbc0038I Pass  27: suminf.    1.15142 (4) obj. -5334.81 iterations 6
Cbc0038I Pass  28: suminf.    0.24015 (2) obj. -5334.81 iterations 5
Cbc0038I Pass  29: suminf.    0.24015 (2) obj. -5334.81 iterations 1
Cbc0038I Pass  30: suminf.    1.27656 (5) obj. -5334.81 iterations 3
Cbc0038I Pass  31: suminf.    1.20754 (4) obj. -5334.81 iterations 2
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 19 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -5357.39
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.83938 (3) obj. -5447.7 iterations 0
Cbc0038I Pass  32: suminf.    0.31941 (2) obj. -5357.39 iterations 6
Cbc0038I Pass  33: suminf.    0.31941 (2) obj. -5357.39 iterations 0
Cbc0038I Pass  34: suminf.    0.04507 (2) obj. -5357.39 iterations 4
Cbc0038I Pass  35: suminf.    0.01746 (1) obj. -5357.39 iterations 1
Cbc0038I Pass  36: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I Pass  37: suminf.    0.32234 (3) obj. -5357.39 iterations 6
Cbc0038I Pass  38: suminf.    1.02176 (5) obj. -5357.39 iterations 12
Cbc0038I Pass  39: suminf.    1.02176 (5) obj. -5357.39 iterations 1
Cbc0038I Pass  40: suminf.    0.31941 (2) obj. -5357.39 iterations 7
Cbc0038I Pass  41: suminf.    0.31941 (2) obj. -5357.39 iterations 0
Cbc0038I Pass  42: suminf.    0.04507 (2) obj. -5357.39 iterations 4
Cbc0038I Pass  43: suminf.    0.01746 (1) obj. -5357.39 iterations 1
Cbc0038I Pass  44: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I Pass  45: suminf.    0.83938 (3) obj. -5447.7 iterations 5
Cbc0038I Pass  46: suminf.    0.83938 (3) obj. -5447.7 iterations 0
Cbc0038I Pass  47: suminf.    0.31941 (2) obj. -5357.39 iterations 6
Cbc0038I Pass  48: suminf.    0.31941 (2) obj. -5357.39 iterations 0
Cbc0038I Pass  49: suminf.    0.04507 (2) obj. -5357.39 iterations 4
Cbc0038I Pass  50: suminf.    0.01746 (1) obj. -5357.39 iterations 1
Cbc0038I Pass  51: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I Pass  52: suminf.    0.83938 (3) obj. -5447.7 iterations 5
Cbc0038I Pass  53: suminf.    0.31941 (2) obj. -5357.39 iterations 6
Cbc0038I Pass  54: suminf.    0.31941 (2) obj. -5357.39 iterations 0
Cbc0038I Pass  55: suminf.    0.04507 (2) obj. -5357.39 iterations 4
Cbc0038I Pass  56: suminf.    0.01746 (1) obj. -5357.39 iterations 1
Cbc0038I Pass  57: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I Pass  58: suminf.    0.04507 (2) obj. -5357.39 iterations 2
Cbc0038I Pass  59: suminf.    0.01746 (1) obj. -5357.39 iterations 2
Cbc0038I Pass  60: suminf.    0.02222 (1) obj. -5366.97 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 19 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5322.27 - took 0.01 seconds
Cbc0012I Integer solution of -5322.269 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 19 columns, reduced to 5 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -5447.701 to -5447.701 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5322.269, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

