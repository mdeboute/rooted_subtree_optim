Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 62 (-43) rows, 34 (-19) columns and 186 (-117) elements
Clp0000I Optimal - objective value 85.946291
Coin0511I After Postsolve, objective 85.946291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.94629124 - 27 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 62 rows, 34 columns (33 integer (33 of which binary)) and 186 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.558%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.89104
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -26.6667 iterations 15
Cbc0038I Solution found of -26.6667
Cbc0038I Relaxing continuous gives -26.6667
Cbc0038I Rounding solution of -35.5238 is better than previous of -26.6667

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 34 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -35.5238 to -74.5239 (0.01 seconds)
Cbc0038I Round again with cutoff of -75.6662
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.66744 (9) obj. -75.6662 iterations 10
Cbc0038I Pass   3: suminf.    0.45321 (8) obj. -75.6662 iterations 5
Cbc0038I Pass   4: suminf.    0.38354 (6) obj. -75.6662 iterations 5
Cbc0038I Pass   5: suminf.    1.88931 (7) obj. -75.6662 iterations 7
Cbc0038I Pass   6: suminf.    1.12728 (7) obj. -75.6662 iterations 4
Cbc0038I Pass   7: suminf.    0.50935 (3) obj. -75.6662 iterations 11
Cbc0038I Pass   8: suminf.    1.12728 (7) obj. -75.6662 iterations 9
Cbc0038I Pass   9: suminf.    1.09646 (8) obj. -75.6662 iterations 12
Cbc0038I Pass  10: suminf.    1.04337 (7) obj. -75.6662 iterations 2
Cbc0038I Pass  11: suminf.    1.88931 (7) obj. -75.6662 iterations 8
Cbc0038I Pass  12: suminf.    1.12728 (7) obj. -75.6662 iterations 4
Cbc0038I Pass  13: suminf.    0.50935 (3) obj. -75.6662 iterations 11
Cbc0038I Pass  14: suminf.    1.12728 (7) obj. -75.6662 iterations 9
Cbc0038I Pass  15: suminf.    0.90915 (5) obj. -75.6662 iterations 14
Cbc0038I Pass  16: suminf.    0.80884 (6) obj. -75.6662 iterations 1
Cbc0038I Pass  17: suminf.    2.10488 (8) obj. -75.6662 iterations 9
Cbc0038I Pass  18: suminf.    0.45321 (8) obj. -75.6662 iterations 3
Cbc0038I Pass  19: suminf.    0.38354 (6) obj. -75.6662 iterations 5
Cbc0038I Pass  20: suminf.    1.88931 (7) obj. -75.6662 iterations 7
Cbc0038I Pass  21: suminf.    1.12728 (7) obj. -75.6662 iterations 4
Cbc0038I Pass  22: suminf.    0.50935 (3) obj. -75.6662 iterations 11
Cbc0038I Pass  23: suminf.    1.12728 (7) obj. -75.6662 iterations 9
Cbc0038I Pass  24: suminf.    3.39661 (11) obj. -75.6662 iterations 13
Cbc0038I Pass  25: suminf.    1.81035 (9) obj. -75.6662 iterations 8
Cbc0038I Pass  26: suminf.    1.81035 (9) obj. -75.6662 iterations 0
Cbc0038I Pass  27: suminf.    2.51429 (10) obj. -75.6662 iterations 10
Cbc0038I Pass  28: suminf.    0.93124 (6) obj. -75.6662 iterations 10
Cbc0038I Pass  29: suminf.    1.74113 (9) obj. -75.6662 iterations 5
Cbc0038I Pass  30: suminf.    1.47457 (6) obj. -75.6662 iterations 6
Cbc0038I Pass  31: suminf.    1.11301 (6) obj. -75.6662 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 34 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -74.5239 - took 0.02 seconds
Cbc0012I Integer solution of -74.5239 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 62 rows 34 columns, reduced to 20 rows 15 columns
Cbc0031I 8 added rows had average density of 21.5
Cbc0013I At root node, 8 cuts changed objective from -85.946291 to -75.258039 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 378 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 341 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -74.52390000000001, took 1013 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 22 times (213 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.11

