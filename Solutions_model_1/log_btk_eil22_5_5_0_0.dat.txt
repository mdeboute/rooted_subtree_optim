Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 8.52267e-05 - average 2.43505e-06, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 21 (-1) columns and 100 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 58.534064
Clp0000I Optimal - objective value 58.534064
Coin0511I After Postsolve, objective 58.534064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.534064
Clp0000I Optimal - objective value 58.534064
Clp0000I Optimal - objective value 58.534064
Coin0511I After Postsolve, objective 58.534064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.53406423 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.66764
Cbc0038I Solution found of -9.97669
Cbc0038I Relaxing continuous gives -15.6206
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -15.6206 to -24.8916 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2559
Cbc0038I Pass   1: suminf.    0.72129 (6) obj. -28.2559 iterations 23
Cbc0038I Pass   2: suminf.    1.78446 (7) obj. -28.2559 iterations 10
Cbc0038I Pass   3: suminf.    1.29572 (5) obj. -28.2559 iterations 4
Cbc0038I Pass   4: suminf.    0.72129 (6) obj. -28.2559 iterations 10
Cbc0038I Pass   5: suminf.    1.04797 (3) obj. -28.2559 iterations 14
Cbc0038I Pass   6: suminf.    0.51737 (2) obj. -28.2559 iterations 5
Cbc0038I Pass   7: suminf.    0.47563 (4) obj. -28.2559 iterations 3
Cbc0038I Pass   8: suminf.    0.51699 (2) obj. -28.2559 iterations 5
Cbc0038I Pass   9: suminf.    0.64328 (2) obj. -28.2559 iterations 3
Cbc0038I Pass  10: suminf.    1.16381 (5) obj. -28.2559 iterations 6
Cbc0038I Pass  11: suminf.    1.10050 (4) obj. -28.2559 iterations 3
Cbc0038I Pass  12: suminf.    1.39102 (3) obj. -28.2559 iterations 10
Cbc0038I Pass  13: suminf.    0.54902 (2) obj. -28.2559 iterations 2
Cbc0038I Pass  14: suminf.    0.63580 (2) obj. -28.2559 iterations 4
Cbc0038I Pass  15: suminf.    1.25876 (4) obj. -28.2559 iterations 3
Cbc0038I Pass  16: suminf.    0.63580 (2) obj. -28.2559 iterations 3
Cbc0038I Pass  17: suminf.    1.20788 (5) obj. -28.2559 iterations 7
Cbc0038I Pass  18: suminf.    1.01624 (6) obj. -28.2559 iterations 2
Cbc0038I Pass  19: suminf.    0.30429 (3) obj. -28.2559 iterations 7
Cbc0038I Pass  20: suminf.    0.44292 (2) obj. -28.2559 iterations 5
Cbc0038I Pass  21: suminf.    0.67370 (2) obj. -28.2559 iterations 2
Cbc0038I Pass  22: suminf.    0.44797 (4) obj. -28.2559 iterations 10
Cbc0038I Pass  23: suminf.    0.44797 (4) obj. -28.2559 iterations 1
Cbc0038I Pass  24: suminf.    0.10056 (2) obj. -28.2559 iterations 6
Cbc0038I Pass  25: suminf.    0.10056 (2) obj. -28.2559 iterations 0
Cbc0038I Pass  26: suminf.    0.80149 (3) obj. -28.2559 iterations 4
Cbc0038I Pass  27: suminf.    0.44987 (2) obj. -28.2559 iterations 4
Cbc0038I Pass  28: suminf.    0.43515 (3) obj. -28.2559 iterations 1
Cbc0038I Pass  29: suminf.    1.06104 (3) obj. -28.2559 iterations 3
Cbc0038I Pass  30: suminf.    0.39834 (3) obj. -28.2559 iterations 6
Cbc0038I Rounding solution of -25.9458 is better than previous of -24.8916

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -25.9458 to -26.2412 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.3116
Cbc0038I Pass  30: suminf.    1.16749 (12) obj. -34.3116 iterations 2
Cbc0038I Pass  31: suminf.    3.25637 (9) obj. -34.3116 iterations 17
Cbc0038I Pass  32: suminf.    3.20765 (9) obj. -34.3116 iterations 3
Cbc0038I Pass  33: suminf.    1.71056 (5) obj. -34.3116 iterations 8
Cbc0038I Pass  34: suminf.    1.71056 (5) obj. -34.3116 iterations 0
Cbc0038I Pass  35: suminf.    0.81939 (3) obj. -34.3116 iterations 8
Cbc0038I Pass  36: suminf.    0.81939 (3) obj. -34.3116 iterations 0
Cbc0038I Pass  37: suminf.    1.39531 (3) obj. -34.3116 iterations 3
Cbc0038I Pass  38: suminf.    1.65182 (5) obj. -34.3116 iterations 4
Cbc0038I Pass  39: suminf.    1.47295 (4) obj. -34.3116 iterations 2
Cbc0038I Pass  40: suminf.    0.81939 (3) obj. -34.3116 iterations 4
Cbc0038I Pass  41: suminf.    1.63270 (6) obj. -34.3116 iterations 14
Cbc0038I Pass  42: suminf.    0.65218 (2) obj. -34.3116 iterations 7
Cbc0038I Pass  43: suminf.    0.23810 (1) obj. -34.443 iterations 2
Cbc0038I Pass  44: suminf.    0.24316 (1) obj. -34.3116 iterations 2
Cbc0038I Pass  45: suminf.    0.77822 (6) obj. -34.3116 iterations 7
Cbc0038I Pass  46: suminf.    0.77822 (6) obj. -34.3116 iterations 1
Cbc0038I Pass  47: suminf.    1.44245 (5) obj. -34.3116 iterations 13
Cbc0038I Pass  48: suminf.    0.99775 (3) obj. -34.3116 iterations 5
Cbc0038I Pass  49: suminf.    0.83026 (3) obj. -34.3116 iterations 2
Cbc0038I Pass  50: suminf.    1.44245 (5) obj. -34.3116 iterations 6
Cbc0038I Pass  51: suminf.    1.47272 (6) obj. -34.3116 iterations 11
Cbc0038I Pass  52: suminf.    1.32029 (5) obj. -34.3116 iterations 1
Cbc0038I Pass  53: suminf.    0.84268 (4) obj. -34.3116 iterations 10
Cbc0038I Pass  54: suminf.    1.43476 (4) obj. -34.3116 iterations 7
Cbc0038I Pass  55: suminf.    1.08980 (3) obj. -34.3116 iterations 2
Cbc0038I Pass  56: suminf.    0.48746 (3) obj. -34.3116 iterations 3
Cbc0038I Pass  57: suminf.    1.32558 (4) obj. -34.3116 iterations 4
Cbc0038I Pass  58: suminf.    0.91465 (4) obj. -34.3116 iterations 1
Cbc0038I Pass  59: suminf.    0.62380 (2) obj. -34.3116 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.2412 - took 0.03 seconds
Cbc0012I Integer solution of -26.2412 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 13 added rows had average density of 12.769231
Cbc0013I At root node, 13 cuts changed objective from -58.534064 to -44.045665 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1154 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 782 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.24119999999999, took 2103 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 62 times (604 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

