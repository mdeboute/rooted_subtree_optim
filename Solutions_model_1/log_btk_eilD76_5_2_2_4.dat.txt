Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 69 (-9) columns and 377 (-76) elements
Clp1000I sum of infeasibilities 2.1786e-05 - average 1.77122e-07, 15 fixed columns
Coin0506I Presolve 91 (-32) rows, 53 (-16) columns and 281 (-96) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 2.8330422 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 141.37236
Clp0000I Optimal - objective value 141.37236
Coin0511I After Postsolve, objective 141.37236, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 141.37236
Clp0000I Optimal - objective value 141.37236
Clp0000I Optimal - objective value 141.37236
Coin0511I After Postsolve, objective 141.37236, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 141.3723591 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 123 rows, 69 columns (68 integer (68 of which binary)) and 377 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 8.32444
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -46.333 iterations 30
Cbc0038I Solution found of -46.333
Cbc0038I Relaxing continuous gives -46.333
Cbc0038I Rounding solution of -76.062 is better than previous of -46.333

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -76.062 to -96.1245 (0.05 seconds)
Cbc0038I Round again with cutoff of -100.649
Cbc0038I Pass   2: suminf.    2.15926 (8) obj. -100.649 iterations 15
Cbc0038I Pass   3: suminf.    1.85988 (7) obj. -100.649 iterations 1
Cbc0038I Pass   4: suminf.    0.90365 (5) obj. -100.649 iterations 2
Cbc0038I Pass   5: suminf.    0.51906 (2) obj. -100.649 iterations 9
Cbc0038I Pass   6: suminf.    0.45476 (2) obj. -100.649 iterations 2
Cbc0038I Pass   7: suminf.    0.55206 (2) obj. -100.649 iterations 4
Cbc0038I Pass   8: suminf.    0.63642 (2) obj. -100.649 iterations 1
Cbc0038I Pass   9: suminf.    1.63187 (8) obj. -100.649 iterations 17
Cbc0038I Pass  10: suminf.    1.63187 (8) obj. -100.649 iterations 2
Cbc0038I Pass  11: suminf.    2.70933 (8) obj. -100.649 iterations 12
Cbc0038I Pass  12: suminf.    1.10116 (5) obj. -100.649 iterations 3
Cbc0038I Pass  13: suminf.    0.86995 (5) obj. -100.649 iterations 9
Cbc0038I Pass  14: suminf.    0.53797 (3) obj. -100.649 iterations 4
Cbc0038I Pass  15: suminf.    0.64457 (2) obj. -100.649 iterations 4
Cbc0038I Pass  16: suminf.    0.48975 (3) obj. -100.649 iterations 4
Cbc0038I Pass  17: suminf.    1.19133 (6) obj. -100.649 iterations 9
Cbc0038I Pass  18: suminf.    2.42028 (10) obj. -100.649 iterations 18
Cbc0038I Pass  19: suminf.    1.06653 (7) obj. -100.649 iterations 7
Cbc0038I Pass  20: suminf.    1.06653 (7) obj. -100.649 iterations 0
Cbc0038I Pass  21: suminf.    2.31693 (8) obj. -100.649 iterations 17
Cbc0038I Pass  22: suminf.    0.60339 (3) obj. -100.649 iterations 12
Cbc0038I Pass  23: suminf.    1.10081 (4) obj. -100.649 iterations 4
Cbc0038I Pass  24: suminf.    0.77547 (9) obj. -100.649 iterations 22
Cbc0038I Pass  25: suminf.    0.58092 (4) obj. -100.649 iterations 12
Cbc0038I Pass  26: suminf.    0.75557 (7) obj. -100.649 iterations 18
Cbc0038I Pass  27: suminf.    0.72734 (7) obj. -100.649 iterations 2
Cbc0038I Pass  28: suminf.    1.90925 (7) obj. -100.649 iterations 17
Cbc0038I Pass  29: suminf.    3.07028 (8) obj. -100.649 iterations 14
Cbc0038I Pass  30: suminf.    1.19040 (4) obj. -100.649 iterations 10
Cbc0038I Pass  31: suminf.    1.16341 (4) obj. -100.649 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 48 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -96.1245 to -97.4936 (0.10 seconds)
Cbc0038I Round again with cutoff of -108.794
Cbc0038I Pass  31: suminf.    2.61961 (8) obj. -108.794 iterations 0
Cbc0038I Pass  32: suminf.    2.32023 (7) obj. -108.794 iterations 1
Cbc0038I Pass  33: suminf.    1.36401 (5) obj. -108.794 iterations 2
Cbc0038I Pass  34: suminf.    1.00444 (4) obj. -108.794 iterations 9
Cbc0038I Pass  35: suminf.    1.70877 (7) obj. -108.794 iterations 10
Cbc0038I Pass  36: suminf.    1.55097 (6) obj. -108.794 iterations 1
Cbc0038I Pass  37: suminf.    1.65840 (12) obj. -108.794 iterations 30
Cbc0038I Pass  38: suminf.    0.46513 (3) obj. -108.794 iterations 17
Cbc0038I Pass  39: suminf.    0.71968 (3) obj. -108.794 iterations 6
Cbc0038I Pass  40: suminf.    0.60294 (2) obj. -108.794 iterations 1
Cbc0038I Pass  41: suminf.    0.56908 (4) obj. -108.794 iterations 6
Cbc0038I Pass  42: suminf.    1.06316 (3) obj. -108.794 iterations 5
Cbc0038I Pass  43: suminf.    0.76906 (2) obj. -108.794 iterations 1
Cbc0038I Pass  44: suminf.    0.49496 (3) obj. -108.794 iterations 3
Cbc0038I Pass  45: suminf.    1.30809 (4) obj. -108.794 iterations 3
Cbc0038I Pass  46: suminf.    1.70296 (9) obj. -108.794 iterations 16
Cbc0038I Pass  47: suminf.    1.56614 (6) obj. -108.794 iterations 5
Cbc0038I Pass  48: suminf.    2.16811 (5) obj. -108.794 iterations 8
Cbc0038I Pass  49: suminf.    2.14321 (6) obj. -108.794 iterations 1
Cbc0038I Pass  50: suminf.    0.91387 (4) obj. -108.794 iterations 9
Cbc0038I Pass  51: suminf.    0.91387 (4) obj. -108.794 iterations 2
Cbc0038I Pass  52: suminf.    0.83002 (3) obj. -108.794 iterations 7
Cbc0038I Pass  53: suminf.    1.45300 (3) obj. -108.794 iterations 2
Cbc0038I Pass  54: suminf.    1.02018 (3) obj. -108.794 iterations 1
Cbc0038I Pass  55: suminf.    1.04885 (3) obj. -108.794 iterations 2
Cbc0038I Pass  56: suminf.    0.89441 (4) obj. -108.794 iterations 3
Cbc0038I Pass  57: suminf.    1.64021 (5) obj. -108.794 iterations 7
Cbc0038I Pass  58: suminf.    0.91915 (4) obj. -108.794 iterations 1
Cbc0038I Pass  59: suminf.    0.91387 (4) obj. -108.794 iterations 1
Cbc0038I Pass  60: suminf.    0.83002 (3) obj. -108.794 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 48 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -97.4936 to -103.446 (0.12 seconds)
Cbc0038I Round again with cutoff of -118.568
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    3.17204 (8) obj. -118.568 iterations 0
Cbc0038I Pass  61: suminf.    2.87266 (7) obj. -118.568 iterations 1
Cbc0038I Pass  62: suminf.    1.76261 (5) obj. -118.568 iterations 7
Cbc0038I Pass  63: suminf.    1.60118 (6) obj. -118.568 iterations 7
Cbc0038I Pass  64: suminf.    2.26120 (7) obj. -118.568 iterations 12
Cbc0038I Pass  65: suminf.    2.10339 (6) obj. -118.568 iterations 1
Cbc0038I Pass  66: suminf.    3.39465 (13) obj. -118.568 iterations 14
Cbc0038I Pass  67: suminf.    1.64096 (7) obj. -118.568 iterations 13
Cbc0038I Pass  68: suminf.    1.64096 (7) obj. -118.568 iterations 2
Cbc0038I Pass  69: suminf.    2.15078 (8) obj. -118.568 iterations 13
Cbc0038I Pass  70: suminf.    1.87466 (7) obj. -118.568 iterations 1
Cbc0038I Pass  71: suminf.    1.76091 (7) obj. -118.568 iterations 2
Cbc0038I Pass  72: suminf.    2.84347 (11) obj. -118.568 iterations 18
Cbc0038I Pass  73: suminf.    2.15292 (6) obj. -118.568 iterations 14
Cbc0038I Pass  74: suminf.    1.69555 (5) obj. -118.568 iterations 4
Cbc0038I Pass  75: suminf.    1.66381 (7) obj. -118.568 iterations 4
Cbc0038I Pass  76: suminf.    1.63316 (8) obj. -118.568 iterations 1
Cbc0038I Pass  77: suminf.    2.16585 (8) obj. -118.568 iterations 13
Cbc0038I Pass  78: suminf.    1.91846 (8) obj. -118.568 iterations 3
Cbc0038I Pass  79: suminf.    1.90008 (8) obj. -118.568 iterations 1
Cbc0038I Pass  80: suminf.    1.81715 (7) obj. -118.568 iterations 1
Cbc0038I Pass  81: suminf.    1.18710 (6) obj. -118.568 iterations 6
Cbc0038I Pass  82: suminf.    2.35411 (6) obj. -118.568 iterations 14
Cbc0038I Pass  83: suminf.    2.11991 (7) obj. -118.568 iterations 4
Cbc0038I Pass  84: suminf.    3.19878 (9) obj. -118.568 iterations 7
Cbc0038I Pass  85: suminf.    1.21842 (5) obj. -118.568 iterations 11
Cbc0038I Pass  86: suminf.    0.82182 (5) obj. -118.568 iterations 2
Cbc0038I Pass  87: suminf.    1.53871 (6) obj. -118.568 iterations 9
Cbc0038I Pass  88: suminf.    1.50146 (6) obj. -118.568 iterations 1
Cbc0038I Pass  89: suminf.    2.69405 (7) obj. -118.568 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 69 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -103.446 - took 0.13 seconds
Cbc0012I Integer solution of -103.44644 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 123 rows 69 columns, reduced to 40 rows 25 columns
Cbc0031I 13 added rows had average density of 54.230769
Cbc0013I At root node, 13 cuts changed objective from -141.37236 to -122.59694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3048 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 953 row cuts average 68.9 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 125 row cuts average 68.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -103.44644, took 3293 iterations and 10 nodes (0.51 seconds)
Cbc0032I Strong branching done 156 times (2208 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 2, 127 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.52

