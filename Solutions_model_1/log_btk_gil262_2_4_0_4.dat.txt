Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 396 (-131) rows, 204 (-60) columns and 1184 (-361) elements
Clp1000I sum of infeasibilities 1.95186e-06 - average 4.92893e-09, 199 fixed columns
Coin0506I Presolve 4 (-392) rows, 4 (-200) columns and 12 (-1172) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 205924.09
Clp0000I Optimal - objective value 205924.09
Coin0511I After Postsolve, objective 205924.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14663463 - largest nonzero change 0 ( 0%) - largest zero change 2.9965731e-05
Clp0000I Optimal - objective value 205924.09
Clp0000I Optimal - objective value 205924.09
Clp0000I Optimal - objective value 205924.09
Coin0511I After Postsolve, objective 205924.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 205924.0902 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 396 rows, 204 columns (203 integer (203 of which binary)) and 1184 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.472%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.54583
Cbc0038I Solution found of -180239
Cbc0038I Relaxing continuous gives -180239
Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 396 rows 204 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -182808
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.09524 (1) obj. -182808 iterations 64
Cbc0038I Pass   2: suminf.    0.24096 (1) obj. -200709 iterations 13
Cbc0038I Pass   3: suminf.    0.50912 (4) obj. -182808 iterations 31
Cbc0038I Pass   4: suminf.    0.08767 (2) obj. -182808 iterations 65
Cbc0038I Pass   5: suminf.    0.32921 (3) obj. -188442 iterations 9
Cbc0038I Pass   6: suminf.    2.48756 (8) obj. -182808 iterations 26
Cbc0038I Pass   7: suminf.    1.11615 (4) obj. -182808 iterations 20
Cbc0038I Pass   8: suminf.    0.43095 (2) obj. -182808 iterations 20
Cbc0038I Pass   9: suminf.    1.29824 (4) obj. -182808 iterations 48
Cbc0038I Pass  10: suminf.    1.29824 (4) obj. -182808 iterations 6
Cbc0038I Pass  11: suminf.    0.19711 (1) obj. -182808 iterations 29
Cbc0038I Pass  12: suminf.    0.19711 (1) obj. -182808 iterations 0
Cbc0038I Pass  13: suminf.    0.49495 (1) obj. -188344 iterations 10
Cbc0038I Pass  14: suminf.    0.33500 (1) obj. -182808 iterations 6
Cbc0038I Pass  15: suminf.    0.42420 (3) obj. -182808 iterations 42
Cbc0038I Pass  16: suminf.    0.09841 (3) obj. -182808 iterations 49
Cbc0038I Pass  17: suminf.    1.11088 (3) obj. -182808 iterations 32
Cbc0038I Pass  18: suminf.    0.56343 (2) obj. -182808 iterations 28
Cbc0038I Pass  19: suminf.    0.35425 (2) obj. -195229 iterations 12
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. -193053 iterations 2
Cbc0038I Solution found of -193053
Cbc0038I Relaxing continuous gives -193053
Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 396 rows 204 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -193053 to -200051 (0.04 seconds)
Cbc0038I Round again with cutoff of -201226
Cbc0038I Reduced cost fixing fixed 124 variables on major pass 3
Cbc0038I Pass  21: suminf.    0.28762 (2) obj. -201226 iterations 8
Cbc0038I Pass  22: suminf.    0.28762 (2) obj. -201226 iterations 16
Cbc0038I Pass  23: suminf.    0.58975 (2) obj. -201226 iterations 24
Cbc0038I Pass  24: suminf.    0.54279 (2) obj. -202329 iterations 19
Cbc0038I Pass  25: suminf.    0.38965 (2) obj. -201226 iterations 22
Cbc0038I Pass  26: suminf.    0.49190 (2) obj. -201226 iterations 31
Cbc0038I Pass  27: suminf.    0.87992 (4) obj. -201226 iterations 30
Cbc0038I Pass  28: suminf.    0.87992 (4) obj. -201226 iterations 12
Cbc0038I Pass  29: suminf.    0.73128 (3) obj. -201226 iterations 28
Cbc0038I Pass  30: suminf.    0.70326 (3) obj. -201226 iterations 19
Cbc0038I Pass  31: suminf.    0.73722 (2) obj. -201705 iterations 20
Cbc0038I Pass  32: suminf.    0.98994 (4) obj. -201226 iterations 16
Cbc0038I Pass  33: suminf.    0.28283 (1) obj. -201482 iterations 18
Cbc0038I Pass  34: suminf.    0.29071 (1) obj. -201226 iterations 6
Cbc0038I Pass  35: suminf.    0.60027 (2) obj. -201226 iterations 16
Cbc0038I Pass  36: suminf.    0.60027 (2) obj. -201226 iterations 5
Cbc0038I Pass  37: suminf.    0.43077 (2) obj. -202591 iterations 9
Cbc0038I Pass  38: suminf.    1.38863 (6) obj. -201226 iterations 29
Cbc0038I Pass  39: suminf.    1.06351 (5) obj. -201226 iterations 18
Cbc0038I Pass  40: suminf.    0.73722 (2) obj. -201705 iterations 31
Cbc0038I Pass  41: suminf.    0.70326 (3) obj. -201226 iterations 20
Cbc0038I Pass  42: suminf.    0.73722 (2) obj. -201705 iterations 20
Cbc0038I Pass  43: suminf.    2.17060 (6) obj. -201226 iterations 36
Cbc0038I Pass  44: suminf.    1.89589 (5) obj. -201226 iterations 14
Cbc0038I Pass  45: suminf.    0.91811 (3) obj. -203033 iterations 25
Cbc0038I Pass  46: suminf.    0.60610 (2) obj. -201226 iterations 20
Cbc0038I Pass  47: suminf.    0.52291 (5) obj. -201226 iterations 21
Cbc0038I Pass  48: suminf.    0.46028 (3) obj. -201226 iterations 24
Cbc0038I Pass  49: suminf.    0.28283 (1) obj. -201482 iterations 3
Cbc0038I Pass  50: suminf.    0.29071 (1) obj. -201226 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 396 rows 204 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -200051 - took 0.04 seconds
Cbc0012I Integer solution of -200051.1 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 396 rows 204 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 7.6666667
Cbc0013I At root node, 3 cuts changed objective from -205924.09 to -203221.25 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 199.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -200051.105, took 13 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 115 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

