Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 75 (-3) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 0.000172857 - average 1.32967e-06, 14 fixed columns
Coin0506I Presolve 104 (-26) rows, 61 (-14) columns and 322 (-80) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 6.2084513 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Coin0511I After Postsolve, objective 33.142848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Coin0511I After Postsolve, objective 33.142848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.14284752 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.76408
Cbc0038I Solution found of 8.00472
Cbc0038I Relaxing continuous gives 8.00472
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 66 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 8.00472 to -9.47391 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.8409
Cbc0038I Pass   1: suminf.    3.05410 (15) obj. -11.8409 iterations 26
Cbc0038I Pass   2: suminf.    2.47876 (6) obj. -11.8409 iterations 19
Cbc0038I Pass   3: suminf.    1.09241 (5) obj. -11.8409 iterations 4
Cbc0038I Pass   4: suminf.    1.72175 (5) obj. -11.8409 iterations 9
Cbc0038I Pass   5: suminf.    1.21806 (5) obj. -11.8409 iterations 3
Cbc0038I Pass   6: suminf.    1.19514 (4) obj. -11.8409 iterations 1
Cbc0038I Pass   7: suminf.    3.03044 (7) obj. -11.8409 iterations 9
Cbc0038I Pass   8: suminf.    2.29579 (8) obj. -11.8409 iterations 4
Cbc0038I Pass   9: suminf.    2.29579 (8) obj. -11.8409 iterations 0
Cbc0038I Pass  10: suminf.    1.10142 (4) obj. -11.8409 iterations 9
Cbc0038I Pass  11: suminf.    1.04164 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  12: suminf.    1.03127 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  13: suminf.    1.44632 (4) obj. -11.8409 iterations 8
Cbc0038I Pass  14: suminf.    1.44632 (4) obj. -11.8409 iterations 1
Cbc0038I Pass  15: suminf.    3.69645 (10) obj. -11.8409 iterations 19
Cbc0038I Pass  16: suminf.    1.71762 (9) obj. -11.8409 iterations 12
Cbc0038I Pass  17: suminf.    1.59145 (9) obj. -11.8409 iterations 2
Cbc0038I Pass  18: suminf.    1.38477 (5) obj. -11.8409 iterations 1
Cbc0038I Pass  19: suminf.    1.01011 (3) obj. -11.8409 iterations 4
Cbc0038I Pass  20: suminf.    1.33207 (5) obj. -11.8409 iterations 6
Cbc0038I Pass  21: suminf.    1.97434 (6) obj. -11.8409 iterations 4
Cbc0038I Pass  22: suminf.    1.97434 (6) obj. -11.8409 iterations 0
Cbc0038I Pass  23: suminf.    1.10142 (4) obj. -11.8409 iterations 7
Cbc0038I Pass  24: suminf.    1.04164 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  25: suminf.    1.03127 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  26: suminf.    1.44632 (4) obj. -11.8409 iterations 6
Cbc0038I Pass  27: suminf.    1.44632 (4) obj. -11.8409 iterations 1
Cbc0038I Pass  28: suminf.    3.36389 (11) obj. -11.8409 iterations 29
Cbc0038I Pass  29: suminf.    2.63917 (9) obj. -11.8409 iterations 7
Cbc0038I Pass  30: suminf.    2.30397 (8) obj. -11.8409 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 76 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -9.47391 to -9.54558 (0.12 seconds)
Cbc0038I Round again with cutoff of -16.1013
Cbc0038I Pass  30: suminf.    3.98173 (17) obj. -16.1013 iterations 3
Cbc0038I Pass  31: suminf.    2.48645 (7) obj. -16.1013 iterations 20
Cbc0038I Pass  32: suminf.    1.13196 (5) obj. -16.1013 iterations 4
Cbc0038I Pass  33: suminf.    1.62840 (5) obj. -16.1013 iterations 8
Cbc0038I Pass  34: suminf.    1.62840 (5) obj. -16.1013 iterations 0
Cbc0038I Pass  35: suminf.    2.02107 (5) obj. -16.1013 iterations 3
Cbc0038I Pass  36: suminf.    1.45046 (5) obj. -16.1013 iterations 1
Cbc0038I Pass  37: suminf.    2.14590 (5) obj. -16.1013 iterations 2
Cbc0038I Pass  38: suminf.    1.74115 (5) obj. -16.1013 iterations 1
Cbc0038I Pass  39: suminf.    1.45046 (5) obj. -16.1013 iterations 3
Cbc0038I Pass  40: suminf.    4.55704 (13) obj. -16.1013 iterations 17
Cbc0038I Pass  41: suminf.    2.30193 (10) obj. -16.1013 iterations 19
Cbc0038I Pass  42: suminf.    2.27615 (9) obj. -16.1013 iterations 1
Cbc0038I Pass  43: suminf.    2.47782 (8) obj. -16.1013 iterations 10
Cbc0038I Pass  44: suminf.    2.03430 (7) obj. -16.1013 iterations 1
Cbc0038I Pass  45: suminf.    1.79040 (7) obj. -16.1013 iterations 2
Cbc0038I Pass  46: suminf.    2.40460 (7) obj. -16.1013 iterations 8
Cbc0038I Pass  47: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  48: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  49: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I Pass  50: suminf.    1.88356 (6) obj. -16.1013 iterations 0
Cbc0038I Pass  51: suminf.    2.40460 (7) obj. -16.1013 iterations 7
Cbc0038I Pass  52: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  53: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  54: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I Pass  55: suminf.    1.88356 (6) obj. -16.1013 iterations 0
Cbc0038I Pass  56: suminf.    2.40460 (7) obj. -16.1013 iterations 7
Cbc0038I Pass  57: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  58: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  59: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -9.54558 - took 0.14 seconds
Cbc0012I Integer solution of -9.5455769 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 42 columns
Cbc0031I 20 added rows had average density of 54.05
Cbc0013I At root node, 20 cuts changed objective from -33.142848 to -25.376237 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10884 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.5455769 best solution, best possible -25.376237 (0.90 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 36 rows 26 columns
Cbc0012I Integer solution of -9.5721569 found by RINS after 7503 iterations and 41 nodes (1.14 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 9 rows 14 columns
Cbc0001I Search completed - best objective -9.572156899999996, took 9316 iterations and 162 nodes (1.29 seconds)
Cbc0032I Strong branching done 1102 times (16632 iterations), fathomed 21 nodes and fixed 28 variables
Cbc0035I Maximum depth 29, 293 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.30

