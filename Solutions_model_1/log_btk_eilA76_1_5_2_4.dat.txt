Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 0.000524051 - average 4.00039e-06, 16 fixed columns
Coin0506I Presolve 93 (-38) rows, 55 (-20) columns and 289 (-115) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.26712011 - largest nonzero change 0 ( 0%) - largest zero change 2.7495251e-05
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Coin0511I After Postsolve, objective 43.975109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Coin0511I After Postsolve, objective 43.975109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.97510855 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.82858
Cbc0038I Solution found of -4.27778
Cbc0038I Relaxing continuous gives -13.6325
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16.6522
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.61747 (34) obj. -16.6522 iterations 33
Cbc0038I Pass   2: suminf.    3.10205 (10) obj. -16.6522 iterations 38
Cbc0038I Pass   3: suminf.    1.23928 (4) obj. -16.6522 iterations 12
Cbc0038I Pass   4: suminf.    1.17986 (6) obj. -16.6522 iterations 2
Cbc0038I Pass   5: suminf.    1.97896 (6) obj. -16.6522 iterations 8
Cbc0038I Pass   6: suminf.    1.71788 (6) obj. -16.6522 iterations 1
Cbc0038I Pass   7: suminf.    1.84172 (5) obj. -16.6522 iterations 7
Cbc0038I Pass   8: suminf.    1.82693 (6) obj. -16.6522 iterations 1
Cbc0038I Pass   9: suminf.    1.82693 (6) obj. -16.6522 iterations 0
Cbc0038I Pass  10: suminf.    1.71151 (6) obj. -16.6522 iterations 7
Cbc0038I Pass  11: suminf.    1.60485 (6) obj. -16.6522 iterations 4
Cbc0038I Pass  12: suminf.    1.53515 (4) obj. -16.6522 iterations 8
Cbc0038I Pass  13: suminf.    1.50636 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  14: suminf.    1.63310 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  15: suminf.    1.30725 (5) obj. -16.6522 iterations 3
Cbc0038I Pass  16: suminf.    2.12597 (5) obj. -16.6522 iterations 6
Cbc0038I Pass  17: suminf.    1.62018 (6) obj. -16.6522 iterations 16
Cbc0038I Pass  18: suminf.    1.20820 (5) obj. -16.6522 iterations 10
Cbc0038I Pass  19: suminf.    1.20970 (6) obj. -16.6522 iterations 1
Cbc0038I Pass  20: suminf.    1.48481 (4) obj. -16.6522 iterations 9
Cbc0038I Pass  21: suminf.    1.40044 (6) obj. -16.6522 iterations 3
Cbc0038I Pass  22: suminf.    1.53515 (4) obj. -16.6522 iterations 8
Cbc0038I Pass  23: suminf.    1.50636 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  24: suminf.    1.63310 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  25: suminf.    1.30725 (5) obj. -16.6522 iterations 3
Cbc0038I Pass  26: suminf.    2.12597 (5) obj. -16.6522 iterations 6
Cbc0038I Pass  27: suminf.    2.79990 (7) obj. -16.6522 iterations 18
Cbc0038I Pass  28: suminf.    1.70587 (6) obj. -16.6522 iterations 15
Cbc0038I Pass  29: suminf.    1.30425 (5) obj. -16.6522 iterations 4
Cbc0038I Pass  30: suminf.    1.45781 (4) obj. -16.6522 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -13.6325 - took 0.05 seconds
Cbc0012I Integer solution of -13.6325 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 65 rows 38 columns
Cbc0031I 21 added rows had average density of 58.857143
Cbc0013I At root node, 21 cuts changed objective from -43.828529 to -37.679215 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10731 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1366 row cuts average 67.9 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 67.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.6325 best solution, best possible -37.679215 (0.79 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 10 rows 8 columns
Cbc0004I Integer solution of -13.722053 found after 9335 iterations and 42 nodes (1.06 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -13.722053, took 11613 iterations and 166 nodes (1.28 seconds)
Cbc0032I Strong branching done 1266 times (16564 iterations), fathomed 9 nodes and fixed 64 variables
Cbc0035I Maximum depth 25, 302 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.29

