Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-24) rows, 47 (-6) columns and 248 (-55) elements
Clp1000I sum of infeasibilities 0 - average 0, 43 fixed columns
Coin0506I Presolve 3 (-78) rows, 3 (-44) columns and 7 (-241) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3650.3813
Clp0000I Optimal - objective value 3650.3813
Coin0511I After Postsolve, objective 3650.3813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3650.3813
Clp0000I Optimal - objective value 3650.3813
Clp0000I Optimal - objective value 3650.3813
Coin0511I After Postsolve, objective 3650.3813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3650.381268 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 47 columns (46 integer (46 of which binary)) and 248 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.769%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.315789
Cbc0038I Pass   1: suminf.    0.24390 (1) obj. -3476.65 iterations 1
Cbc0038I Solution found of -2521.24
Cbc0038I Relaxing continuous gives -2521.24
Cbc0038I Rounding solution of -2543.99 is better than previous of -2521.24

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 47 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2654.63
Cbc0038I Pass   2: suminf.    0.24390 (1) obj. -3476.65 iterations 0
Cbc0038I Pass   3: suminf.    0.10556 (1) obj. -2654.63 iterations 1
Cbc0038I Pass   4: suminf.    0.10793 (3) obj. -2654.63 iterations 8
Cbc0038I Pass   5: suminf.    0.10793 (3) obj. -2654.63 iterations 3
Cbc0038I Pass   6: suminf.    0.33401 (3) obj. -2654.63 iterations 3
Cbc0038I Pass   7: suminf.    0.33401 (3) obj. -2654.63 iterations 0
Cbc0038I Pass   8: suminf.    0.10793 (3) obj. -2654.63 iterations 1
Cbc0038I Pass   9: suminf.    0.37803 (5) obj. -2654.63 iterations 12
Cbc0038I Pass  10: suminf.    0.28185 (3) obj. -2654.63 iterations 8
Cbc0038I Pass  11: suminf.    0.32177 (3) obj. -2654.63 iterations 1
Cbc0038I Pass  12: suminf.    1.28569 (6) obj. -2654.63 iterations 10
Cbc0038I Pass  13: suminf.    0.27874 (3) obj. -2654.63 iterations 5
Cbc0038I Pass  14: suminf.    0.87946 (3) obj. -2654.63 iterations 1
Cbc0038I Pass  15: suminf.    0.75725 (5) obj. -2654.63 iterations 15
Cbc0038I Pass  16: suminf.    0.75621 (5) obj. -2654.63 iterations 3
Cbc0038I Pass  17: suminf.    0.92352 (3) obj. -2654.63 iterations 2
Cbc0038I Pass  18: suminf.    0.23949 (3) obj. -2654.63 iterations 2
Cbc0038I Pass  19: suminf.    1.83712 (8) obj. -2654.63 iterations 11
Cbc0038I Pass  20: suminf.    1.06842 (6) obj. -2654.63 iterations 5
Cbc0038I Pass  21: suminf.    0.23004 (3) obj. -2654.63 iterations 4
Cbc0038I Pass  22: suminf.    0.36804 (3) obj. -2654.63 iterations 1
Cbc0038I Pass  23: suminf.    0.51374 (8) obj. -2654.63 iterations 14
Cbc0038I Pass  24: suminf.    0.26133 (4) obj. -2654.63 iterations 9
Cbc0038I Pass  25: suminf.    1.06876 (3) obj. -2654.63 iterations 4
Cbc0038I Pass  26: suminf.    0.25839 (3) obj. -2654.63 iterations 2
Cbc0038I Pass  27: suminf.    1.16402 (6) obj. -2654.63 iterations 11
Cbc0038I Pass  28: suminf.    0.26710 (3) obj. -2654.63 iterations 6
Cbc0038I Pass  29: suminf.    1.02697 (3) obj. -2654.63 iterations 1
Cbc0038I Pass  30: suminf.    1.02697 (3) obj. -2654.63 iterations 0
Cbc0038I Pass  31: suminf.    0.26710 (3) obj. -2654.63 iterations 2
Cbc0038I Rounding solution of -2575.56 is better than previous of -2543.99

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 47 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -2575.56 to -2593.09 (0.02 seconds)
Cbc0038I Round again with cutoff of -2853.78
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.24390 (1) obj. -3476.65 iterations 0
Cbc0038I Pass  32: suminf.    0.26317 (1) obj. -2853.78 iterations 1
Cbc0038I Pass  33: suminf.    1.49279 (4) obj. -2853.78 iterations 8
Cbc0038I Pass  34: suminf.    0.54872 (2) obj. -2853.78 iterations 6
Cbc0038I Pass  35: suminf.    0.60176 (3) obj. -2853.78 iterations 2
Cbc0038I Pass  36: suminf.    0.60176 (3) obj. -2853.78 iterations 0
Cbc0038I Pass  37: suminf.    0.82333 (3) obj. -2853.78 iterations 1
Cbc0038I Pass  38: suminf.    0.82333 (3) obj. -2853.78 iterations 0
Cbc0038I Pass  39: suminf.    1.33507 (5) obj. -2853.78 iterations 12
Cbc0038I Pass  40: suminf.    1.33507 (5) obj. -2853.78 iterations 2
Cbc0038I Pass  41: suminf.    1.16976 (3) obj. -2853.78 iterations 2
Cbc0038I Pass  42: suminf.    1.16976 (3) obj. -2853.78 iterations 0
Cbc0038I Pass  43: suminf.    0.78499 (3) obj. -2853.78 iterations 1
Cbc0038I Pass  44: suminf.    0.78499 (3) obj. -2853.78 iterations 0
Cbc0038I Pass  45: suminf.    1.23759 (4) obj. -2853.78 iterations 7
Cbc0038I Pass  46: suminf.    0.74759 (3) obj. -2853.78 iterations 3
Cbc0038I Pass  47: suminf.    1.05685 (3) obj. -2853.78 iterations 1
Cbc0038I Pass  48: suminf.    1.28704 (5) obj. -2853.78 iterations 4
Cbc0038I Pass  49: suminf.    1.28704 (5) obj. -2853.78 iterations 1
Cbc0038I Pass  50: suminf.    1.07147 (3) obj. -2853.78 iterations 3
Cbc0038I Pass  51: suminf.    1.07147 (3) obj. -2853.78 iterations 0
Cbc0038I Pass  52: suminf.    0.75789 (3) obj. -2853.78 iterations 1
Cbc0038I Pass  53: suminf.    0.75789 (3) obj. -2853.78 iterations 0
Cbc0038I Pass  54: suminf.    1.05296 (5) obj. -2853.78 iterations 3
Cbc0038I Pass  55: suminf.    0.78110 (3) obj. -2853.78 iterations 2
Cbc0038I Pass  56: suminf.    0.86523 (3) obj. -2853.78 iterations 1
Cbc0038I Pass  57: suminf.    1.72107 (6) obj. -2853.78 iterations 12
Cbc0038I Pass  58: suminf.    1.29965 (5) obj. -2853.78 iterations 1
Cbc0038I Pass  59: suminf.    1.02775 (3) obj. -2853.78 iterations 2
Cbc0038I Pass  60: suminf.    1.02775 (3) obj. -2853.78 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 47 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2593.09 - took 0.02 seconds
Cbc0012I Integer solution of -2593.0948 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 81 rows 47 columns, reduced to 8 rows 10 columns
Cbc0012I Integer solution of -2600.608 found by DiveCoefficient after 87 iterations and 0 nodes (0.15 seconds)
Cbc0031I 8 added rows had average density of 14.875
Cbc0013I At root node, 8 cuts changed objective from -3650.3813 to -2600.7494 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.9 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 45.4 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.14139718 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -2600.60803, took 87 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.15

