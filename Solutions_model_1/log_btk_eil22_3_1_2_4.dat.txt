Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 25 (-22) rows, 15 (-9) columns and 74 (-55) elements
Clp0000I Optimal - objective value 73.325389
Coin0511I After Postsolve, objective 73.325389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.32538896 - 14 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 25 rows, 15 columns (14 integer (14 of which binary)) and 74 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.35974
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19 iterations 7
Cbc0038I Solution found of -19
Cbc0038I Relaxing continuous gives -19
Cbc0038I Rounding solution of -24 is better than previous of -19

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 15 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29.8324
Cbc0038I Pass   2: suminf.    0.28506 (1) obj. -29.8324 iterations 1
Cbc0038I Pass   3: suminf.    0.23810 (1) obj. -29.8324 iterations 1
Cbc0038I Pass   4: suminf.    0.23810 (1) obj. -29.8324 iterations 0
Cbc0038I Pass   5: suminf.    0.23810 (1) obj. -29.8324 iterations 0
Cbc0038I Pass   6: suminf.    0.37873 (2) obj. -29.8324 iterations 5
Cbc0038I Pass   7: suminf.    0.01411 (1) obj. -29.8324 iterations 2
Cbc0038I Pass   8: suminf.    0.37283 (1) obj. -29.8324 iterations 1
Cbc0038I Pass   9: suminf.    0.11111 (1) obj. -29.8324 iterations 5
Cbc0038I Pass  10: suminf.    0.11111 (1) obj. -29.8324 iterations 0
Cbc0038I Pass  11: suminf.    0.28506 (1) obj. -29.8324 iterations 2
Cbc0038I Pass  12: suminf.    0.23810 (1) obj. -29.8324 iterations 1
Cbc0038I Pass  13: suminf.    1.03943 (4) obj. -29.8324 iterations 5
Cbc0038I Pass  14: suminf.    0.81713 (4) obj. -29.8324 iterations 2
Cbc0038I Pass  15: suminf.    0.44214 (2) obj. -29.8324 iterations 5
Cbc0038I Pass  16: suminf.    0.11111 (1) obj. -29.8324 iterations 2
Cbc0038I Pass  17: suminf.    1.17073 (4) obj. -29.8324 iterations 5
Cbc0038I Pass  18: suminf.    0.84465 (3) obj. -29.8324 iterations 4
Cbc0038I Pass  19: suminf.    0.83400 (3) obj. -29.8324 iterations 3
Cbc0038I Pass  20: suminf.    0.66125 (2) obj. -29.8324 iterations 3
Cbc0038I Pass  21: suminf.    0.22785 (2) obj. -29.8324 iterations 2
Cbc0038I Pass  22: suminf.    0.42447 (2) obj. -29.8324 iterations 3
Cbc0038I Pass  23: suminf.    0.34123 (2) obj. -29.8324 iterations 2
Cbc0038I Pass  24: suminf.    0.28506 (1) obj. -29.8324 iterations 1
Cbc0038I Pass  25: suminf.    0.23810 (1) obj. -29.8324 iterations 1
Cbc0038I Pass  26: suminf.    1.15764 (4) obj. -29.8324 iterations 5
Cbc0038I Pass  27: suminf.    1.09731 (4) obj. -29.8324 iterations 2
Cbc0038I Pass  28: suminf.    1.09731 (4) obj. -29.8324 iterations 1
Cbc0038I Pass  29: suminf.    1.09731 (4) obj. -29.8324 iterations 1
Cbc0038I Pass  30: suminf.    0.34123 (2) obj. -29.8324 iterations 5
Cbc0038I Pass  31: suminf.    0.28506 (1) obj. -29.8324 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 15 columns, reduced to 24 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -19 to -29 (0.02 seconds)
Cbc0038I Round again with cutoff of -38.665
Cbc0038I Pass  31: suminf.    0.48250 (1) obj. -38.665 iterations 0
Cbc0038I Pass  32: suminf.    0.23810 (1) obj. -38.665 iterations 1
Cbc0038I Pass  33: suminf.    0.38462 (4) obj. -38.665 iterations 3
Cbc0038I Pass  34: suminf.    0.23810 (1) obj. -38.665 iterations 3
Cbc0038I Pass  35: suminf.    0.60353 (4) obj. -38.665 iterations 4
Cbc0038I Pass  36: suminf.    0.60353 (4) obj. -38.665 iterations 0
Cbc0038I Pass  37: suminf.    0.83845 (3) obj. -38.665 iterations 4
Cbc0038I Pass  38: suminf.    0.70702 (3) obj. -38.665 iterations 2
Cbc0038I Pass  39: suminf.    0.17673 (3) obj. -38.665 iterations 5
Cbc0038I Pass  40: suminf.    0.17673 (3) obj. -38.665 iterations 0
Cbc0038I Pass  41: suminf.    0.65438 (2) obj. -38.665 iterations 3
Cbc0038I Pass  42: suminf.    0.90171 (3) obj. -38.665 iterations 2
Cbc0038I Pass  43: suminf.    0.65438 (2) obj. -38.665 iterations 2
Cbc0038I Pass  44: suminf.    1.85522 (6) obj. -38.665 iterations 6
Cbc0038I Pass  45: suminf.    1.67048 (5) obj. -38.665 iterations 2
Cbc0038I Pass  46: suminf.    1.67048 (5) obj. -38.665 iterations 0
Cbc0038I Pass  47: suminf.    0.80265 (2) obj. -38.665 iterations 5
Cbc0038I Pass  48: suminf.    0.48250 (1) obj. -38.665 iterations 1
Cbc0038I Pass  49: suminf.    0.23810 (1) obj. -38.665 iterations 1
Cbc0038I Pass  50: suminf.    2.72611 (7) obj. -38.665 iterations 7
Cbc0038I Pass  51: suminf.    1.79992 (5) obj. -38.665 iterations 3
Cbc0038I Pass  52: suminf.    1.79992 (5) obj. -38.665 iterations 0
Cbc0038I Pass  53: suminf.    2.98583 (10) obj. -38.665 iterations 4
Cbc0038I Pass  54: suminf.    1.89337 (6) obj. -38.665 iterations 3
Cbc0038I Pass  55: suminf.    2.15607 (7) obj. -38.665 iterations 1
Cbc0038I Pass  56: suminf.    1.89337 (6) obj. -38.665 iterations 1
Cbc0038I Pass  57: suminf.    2.30078 (9) obj. -38.665 iterations 4
Cbc0038I Pass  58: suminf.    1.86737 (7) obj. -38.665 iterations 1
Cbc0038I Pass  59: suminf.    0.81906 (3) obj. -38.665 iterations 5
Cbc0038I Pass  60: suminf.    0.47797 (2) obj. -38.665 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 15 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -29 - took 0.02 seconds
Cbc0012I Integer solution of -29 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 15 columns, reduced to 20 rows 12 columns
Cbc0031I 6 added rows had average density of 13.166667
Cbc0013I At root node, 6 cuts changed objective from -73.325389 to -44.215291 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 590 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 625 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -29, took 1382 iterations and 4 nodes (0.10 seconds)
Cbc0032I Strong branching done 26 times (156 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

