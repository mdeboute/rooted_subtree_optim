Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.28941e-05 - average 3.22512e-07, 20 fixed columns
Coin0506I Presolve 96 (-37) rows, 55 (-20) columns and 294 (-114) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.35157957 - largest nonzero change 0 ( 0%) - largest zero change 2.6046125e-05
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Coin0511I After Postsolve, objective 56.620562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Clp0000I Optimal - objective value 56.620562
Coin0511I After Postsolve, objective 56.620562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.620562 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.68822
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.48234 iterations 41
Cbc0038I Solution found of 3.48234
Cbc0038I Relaxing continuous gives 3.48234
Cbc0038I Rounding solution of -4.80782 is better than previous of 3.48234

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.80782 to -27.6964 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.5889
Cbc0038I Pass   2: suminf.    3.86405 (11) obj. -30.5889 iterations 20
Cbc0038I Pass   3: suminf.    3.40929 (9) obj. -30.5889 iterations 8
Cbc0038I Pass   4: suminf.    2.25200 (8) obj. -30.5889 iterations 1
Cbc0038I Pass   5: suminf.    1.17894 (6) obj. -30.5889 iterations 3
Cbc0038I Pass   6: suminf.    1.02373 (5) obj. -30.5889 iterations 15
Cbc0038I Pass   7: suminf.    1.39621 (5) obj. -30.5889 iterations 13
Cbc0038I Pass   8: suminf.    0.79812 (4) obj. -30.5889 iterations 6
Cbc0038I Pass   9: suminf.    1.39621 (5) obj. -30.5889 iterations 6
Cbc0038I Pass  10: suminf.    4.29157 (12) obj. -30.5889 iterations 19
Cbc0038I Pass  11: suminf.    2.85959 (12) obj. -30.5889 iterations 9
Cbc0038I Pass  12: suminf.    2.85181 (12) obj. -30.5889 iterations 3
Cbc0038I Pass  13: suminf.    2.47300 (11) obj. -30.5889 iterations 1
Cbc0038I Pass  14: suminf.    2.66985 (8) obj. -30.5889 iterations 14
Cbc0038I Pass  15: suminf.    2.26759 (6) obj. -30.5889 iterations 2
Cbc0038I Pass  16: suminf.    1.40410 (5) obj. -30.5889 iterations 6
Cbc0038I Pass  17: suminf.    2.51747 (7) obj. -30.5889 iterations 7
Cbc0038I Pass  18: suminf.    2.15175 (8) obj. -30.5889 iterations 22
Cbc0038I Pass  19: suminf.    0.73926 (4) obj. -30.5889 iterations 12
Cbc0038I Pass  20: suminf.    0.73926 (4) obj. -30.5889 iterations 0
Cbc0038I Pass  21: suminf.    0.46181 (3) obj. -30.5889 iterations 12
Cbc0038I Pass  22: suminf.    0.46031 (2) obj. -30.5889 iterations 1
Cbc0038I Pass  23: suminf.    0.47242 (2) obj. -30.5889 iterations 6
Cbc0038I Pass  24: suminf.    2.05472 (7) obj. -30.5889 iterations 26
Cbc0038I Pass  25: suminf.    0.87923 (4) obj. -30.5889 iterations 11
Cbc0038I Pass  26: suminf.    0.82958 (5) obj. -30.5889 iterations 3
Cbc0038I Pass  27: suminf.    1.50637 (5) obj. -30.5889 iterations 14
Cbc0038I Pass  28: suminf.    1.40683 (4) obj. -30.5889 iterations 1
Cbc0038I Pass  29: suminf.    1.40683 (4) obj. -30.5889 iterations 0
Cbc0038I Pass  30: suminf.    0.81645 (3) obj. -30.5889 iterations 8
Cbc0038I Pass  31: suminf.    0.81645 (3) obj. -30.5889 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -27.6964 to -29.2179 (0.06 seconds)
Cbc0038I Round again with cutoff of -35.7953
Cbc0038I Pass  31: suminf.    3.80344 (11) obj. -35.7953 iterations 0
Cbc0038I Pass  32: suminf.    1.01141 (7) obj. -35.7953 iterations 11
Cbc0038I Pass  33: suminf.    0.90841 (6) obj. -35.7953 iterations 1
Cbc0038I Pass  34: suminf.    1.58709 (7) obj. -35.7953 iterations 9
Cbc0038I Pass  35: suminf.    3.87427 (10) obj. -35.7953 iterations 16
Cbc0038I Pass  36: suminf.    1.94587 (7) obj. -35.7953 iterations 6
Cbc0038I Pass  37: suminf.    1.82350 (6) obj. -35.7953 iterations 5
Cbc0038I Pass  38: suminf.    1.71776 (6) obj. -35.7953 iterations 7
Cbc0038I Pass  39: suminf.    3.15454 (9) obj. -35.7953 iterations 13
Cbc0038I Pass  40: suminf.    2.69162 (10) obj. -35.7953 iterations 14
Cbc0038I Pass  41: suminf.    2.67094 (10) obj. -35.7953 iterations 1
Cbc0038I Pass  42: suminf.    3.22975 (9) obj. -35.7953 iterations 17
Cbc0038I Pass  43: suminf.    2.54116 (9) obj. -35.7953 iterations 5
Cbc0038I Pass  44: suminf.    2.51579 (8) obj. -35.7953 iterations 3
Cbc0038I Pass  45: suminf.    2.46688 (7) obj. -35.7953 iterations 11
Cbc0038I Pass  46: suminf.    2.17558 (8) obj. -35.7953 iterations 5
Cbc0038I Pass  47: suminf.    2.56712 (8) obj. -35.7953 iterations 12
Cbc0038I Pass  48: suminf.    5.85504 (19) obj. -35.7953 iterations 24
Cbc0038I Pass  49: suminf.    4.07993 (15) obj. -35.7953 iterations 22
Cbc0038I Pass  50: suminf.    4.00126 (15) obj. -35.7953 iterations 1
Cbc0038I Pass  51: suminf.    3.99896 (14) obj. -35.7953 iterations 1
Cbc0038I Pass  52: suminf.    3.62407 (14) obj. -35.7953 iterations 20
Cbc0038I Pass  53: suminf.    3.39743 (11) obj. -35.7953 iterations 3
Cbc0038I Pass  54: suminf.    3.35295 (11) obj. -35.7953 iterations 1
Cbc0038I Pass  55: suminf.    4.00583 (11) obj. -35.7953 iterations 14
Cbc0038I Pass  56: suminf.    1.95331 (8) obj. -35.7953 iterations 9
Cbc0038I Pass  57: suminf.    0.69276 (7) obj. -35.7953 iterations 4
Cbc0038I Pass  58: suminf.    0.69276 (7) obj. -35.7953 iterations 0
Cbc0038I Pass  59: suminf.    2.10291 (6) obj. -35.7953 iterations 14
Cbc0038I Pass  60: suminf.    1.13817 (5) obj. -35.7953 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 78 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.2179 - took 0.08 seconds
Cbc0012I Integer solution of -29.217905 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 70 rows 41 columns
Cbc0031I 20 added rows had average density of 50.5
Cbc0013I At root node, 20 cuts changed objective from -56.620562 to -40.732297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7064 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1153 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 6 nodes, 1 on tree, -29.217905 best solution, best possible -40.730954 (0.72 seconds)
Cbc0001I Search completed - best objective -29.217905, took 5790 iterations and 20 nodes (0.80 seconds)
Cbc0032I Strong branching done 398 times (7082 iterations), fathomed 2 nodes and fixed 22 variables
Cbc0035I Maximum depth 7, 77 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.81

