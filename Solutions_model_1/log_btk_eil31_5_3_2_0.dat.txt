Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 149 (-34) elements
Clp1000I sum of infeasibilities 2.0952e-05 - average 4.1904e-07, 4 fixed columns
Coin0506I Presolve 39 (-11) rows, 23 (-5) columns and 117 (-32) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Coin0511I After Postsolve, objective 81.32727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Clp0000I Optimal - objective value 81.32727
Coin0511I After Postsolve, objective 81.32727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.32727007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.576%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.66884
Cbc0038I Solution found of -13.5746
Cbc0038I Relaxing continuous gives -13.5746
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -13.5746 to -48.894 (0.02 seconds)
Cbc0038I Round again with cutoff of -51.174
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.56024 (5) obj. -51.174 iterations 18
Cbc0038I Pass   2: suminf.    0.86574 (2) obj. -51.174 iterations 8
Cbc0038I Pass   3: suminf.    0.63160 (2) obj. -51.174 iterations 2
Cbc0038I Pass   4: suminf.    0.46250 (1) obj. -51.174 iterations 1
Cbc0038I Pass   5: suminf.    0.47975 (1) obj. -51.174 iterations 1
Cbc0038I Pass   6: suminf.    0.87708 (4) obj. -51.174 iterations 11
Cbc0038I Pass   7: suminf.    0.55212 (3) obj. -51.174 iterations 3
Cbc0038I Pass   8: suminf.    0.70594 (2) obj. -51.174 iterations 3
Cbc0038I Pass   9: suminf.    0.45236 (2) obj. -51.174 iterations 2
Cbc0038I Pass  10: suminf.    0.38750 (1) obj. -51.174 iterations 1
Cbc0038I Pass  11: suminf.    0.34041 (1) obj. -51.174 iterations 1
Cbc0038I Pass  12: suminf.    1.17192 (3) obj. -51.174 iterations 4
Cbc0038I Pass  13: suminf.    1.17192 (3) obj. -51.174 iterations 1
Cbc0038I Pass  14: suminf.    0.15466 (2) obj. -51.174 iterations 4
Cbc0038I Pass  15: suminf.    0.51223 (2) obj. -51.174 iterations 4
Cbc0038I Pass  16: suminf.    0.38750 (1) obj. -51.174 iterations 1
Cbc0038I Pass  17: suminf.    0.34041 (1) obj. -51.174 iterations 1
Cbc0038I Pass  18: suminf.    1.65222 (7) obj. -51.174 iterations 8
Cbc0038I Pass  19: suminf.    0.62143 (2) obj. -51.174 iterations 7
Cbc0038I Pass  20: suminf.    0.60041 (2) obj. -51.174 iterations 3
Cbc0038I Pass  21: suminf.    0.60041 (2) obj. -51.174 iterations 1
Cbc0038I Pass  22: suminf.    0.98236 (3) obj. -51.174 iterations 4
Cbc0038I Pass  23: suminf.    1.95713 (7) obj. -51.174 iterations 10
Cbc0038I Pass  24: suminf.    1.51616 (5) obj. -51.174 iterations 5
Cbc0038I Pass  25: suminf.    0.79016 (3) obj. -51.174 iterations 3
Cbc0038I Pass  26: suminf.    0.73169 (4) obj. -51.174 iterations 3
Cbc0038I Pass  27: suminf.    1.17424 (4) obj. -51.174 iterations 9
Cbc0038I Pass  28: suminf.    0.65206 (2) obj. -51.174 iterations 5
Cbc0038I Pass  29: suminf.    0.38880 (2) obj. -51.174 iterations 1
Cbc0038I Pass  30: suminf.    0.79704 (2) obj. -51.174 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.894 - took 0.02 seconds
Cbc0012I Integer solution of -48.894 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 27 rows 17 columns
Cbc0031I 10 added rows had average density of 22.2
Cbc0013I At root node, 10 cuts changed objective from -71.693057 to -60.858384 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 811 row cuts average 3.9 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 374 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.89400000000001, took 2362 iterations and 14 nodes (0.24 seconds)
Cbc0032I Strong branching done 164 times (1449 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

