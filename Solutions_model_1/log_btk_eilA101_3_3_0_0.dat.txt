Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 9.789e-06 - average 5.23476e-08, 14 fixed columns
Coin0506I Presolve 157 (-30) rows, 85 (-16) columns and 476 (-92) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 2.5236562 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Coin0511I After Postsolve, objective 45.594969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Coin0511I After Postsolve, objective 45.594969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.59496892 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 13.1892
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.0285 iterations 81
Cbc0038I Solution found of 10.0285
Cbc0038I Relaxing continuous gives 10.0285
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 107 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 10.0285 to -6.55949 (0.08 seconds)
Cbc0038I Round again with cutoff of -10.4631
Cbc0038I Pass   2: suminf.    2.18765 (9) obj. -10.4631 iterations 20
Cbc0038I Pass   3: suminf.    1.71898 (35) obj. -10.4631 iterations 24
Cbc0038I Pass   4: suminf.    1.66572 (7) obj. -10.4631 iterations 36
Cbc0038I Pass   5: suminf.    0.86109 (6) obj. -10.4631 iterations 2
Cbc0038I Pass   6: suminf.    1.43766 (6) obj. -10.4631 iterations 11
Cbc0038I Pass   7: suminf.    1.43766 (6) obj. -10.4631 iterations 0
Cbc0038I Pass   8: suminf.    1.47722 (5) obj. -10.4631 iterations 7
Cbc0038I Pass   9: suminf.    0.70837 (3) obj. -10.4631 iterations 3
Cbc0038I Pass  10: suminf.    1.26637 (5) obj. -10.4631 iterations 3
Cbc0038I Pass  11: suminf.    1.26637 (5) obj. -10.4631 iterations 0
Cbc0038I Pass  12: suminf.    1.62099 (5) obj. -10.4631 iterations 4
Cbc0038I Pass  13: suminf.    1.62099 (5) obj. -10.4631 iterations 0
Cbc0038I Pass  14: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  15: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  16: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  17: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  18: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  19: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  20: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  21: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  22: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  23: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  24: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  25: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  26: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  27: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  28: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  29: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  30: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  31: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 121 rows 66 columns - 1 fixed gives 113, 65 - ok now
Cbc0038I Full problem 187 rows 101 columns, reduced to 113 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -6.55949 to -6.61962 (0.15 seconds)
Cbc0038I Round again with cutoff of -17.4895
Cbc0038I Pass  31: suminf.    2.76630 (9) obj. -17.4895 iterations 0
Cbc0038I Pass  32: suminf.    2.12427 (7) obj. -17.4895 iterations 14
Cbc0038I Pass  33: suminf.    2.03794 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  34: suminf.    1.32032 (6) obj. -17.4895 iterations 12
Cbc0038I Pass  35: suminf.    1.15733 (6) obj. -17.4895 iterations 3
Cbc0038I Pass  36: suminf.    2.12427 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  37: suminf.    5.00486 (15) obj. -17.4895 iterations 28
Cbc0038I Pass  38: suminf.    2.52712 (10) obj. -17.4895 iterations 20
Cbc0038I Pass  39: suminf.    1.68354 (6) obj. -17.4895 iterations 16
Cbc0038I Pass  40: suminf.    1.68354 (6) obj. -17.4895 iterations 0
Cbc0038I Pass  41: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  42: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  43: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  44: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  45: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  46: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  47: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  48: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  49: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  50: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  51: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  52: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  53: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  54: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  55: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  56: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  57: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  58: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  59: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  60: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 115 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -6.61962 - took 0.20 seconds
Cbc0012I Integer solution of -6.619618 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 111 rows 60 columns
Cbc0031I 27 added rows had average density of 76
Cbc0013I At root node, 27 cuts changed objective from -45.594969 to -33.994625 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20210 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2531 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.619618 best solution, best possible -33.994625 (1.83 seconds)
Cbc0012I Integer solution of -7.6741791 found by rounding after 11264 iterations and 40 nodes (2.07 seconds)
Cbc0001I Search completed - best objective -7.674179120000005, took 12158 iterations and 68 nodes (2.15 seconds)
Cbc0032I Strong branching done 856 times (15484 iterations), fathomed 6 nodes and fixed 66 variables
Cbc0035I Maximum depth 15, 210 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.17

