Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 503 (-24) rows, 262 (-2) columns and 1499 (-46) elements
Clp1000I sum of infeasibilities 0.000190745 - average 3.79214e-07, 137 fixed columns
Coin0506I Presolve 232 (-271) rows, 125 (-137) columns and 691 (-808) elements
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 2.7822663 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Coin0511I After Postsolve, objective 193.87771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13513346 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Coin0511I After Postsolve, objective 193.87771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.8777128 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 503 rows, 262 columns (261 integer (261 of which binary)) and 1499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 13.8652
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 24.9794 iterations 215
Cbc0038I Solution found of 24.9794
Cbc0038I Relaxing continuous gives 24.9794
Cbc0038I Rounding solution of -96.5659 is better than previous of 24.9794

Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 119 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -96.5659 to -100.226 (0.15 seconds)
Cbc0038I Round again with cutoff of -109.591
Cbc0038I Pass   2: suminf.    2.70205 (10) obj. -109.591 iterations 43
Cbc0038I Pass   3: suminf.    2.70205 (10) obj. -109.591 iterations 0
Cbc0038I Pass   4: suminf.    1.85158 (8) obj. -109.591 iterations 30
Cbc0038I Pass   5: suminf.    1.78754 (6) obj. -109.591 iterations 34
Cbc0038I Pass   6: suminf.    1.90173 (5) obj. -109.591 iterations 44
Cbc0038I Pass   7: suminf.    1.58254 (5) obj. -109.591 iterations 28
Cbc0038I Pass   8: suminf.    1.78754 (6) obj. -109.591 iterations 7
Cbc0038I Pass   9: suminf.    5.81681 (18) obj. -109.591 iterations 79
Cbc0038I Pass  10: suminf.    3.09040 (11) obj. -109.591 iterations 49
Cbc0038I Pass  11: suminf.    2.07427 (6) obj. -109.591 iterations 65
Cbc0038I Pass  12: suminf.    1.53176 (5) obj. -109.591 iterations 37
Cbc0038I Pass  13: suminf.    1.49297 (5) obj. -109.591 iterations 7
Cbc0038I Pass  14: suminf.    1.49297 (5) obj. -109.591 iterations 3
Cbc0038I Pass  15: suminf.    2.09563 (8) obj. -109.591 iterations 47
Cbc0038I Pass  16: suminf.    2.01397 (7) obj. -109.591 iterations 1
Cbc0038I Pass  17: suminf.    2.16750 (7) obj. -109.591 iterations 17
Cbc0038I Pass  18: suminf.    1.98973 (7) obj. -109.591 iterations 44
Cbc0038I Pass  19: suminf.    1.52183 (6) obj. -109.591 iterations 38
Cbc0038I Pass  20: suminf.    1.24692 (5) obj. -109.591 iterations 18
Cbc0038I Pass  21: suminf.    1.24692 (5) obj. -109.591 iterations 0
Cbc0038I Pass  22: suminf.    2.03452 (8) obj. -109.591 iterations 44
Cbc0038I Pass  23: suminf.    2.03452 (8) obj. -109.591 iterations 19
Cbc0038I Pass  24: suminf.    3.14797 (11) obj. -109.591 iterations 59
Cbc0038I Pass  25: suminf.    2.90846 (8) obj. -109.591 iterations 13
Cbc0038I Pass  26: suminf.    2.74509 (7) obj. -109.591 iterations 10
Cbc0038I Pass  27: suminf.    2.46799 (8) obj. -109.591 iterations 37
Cbc0038I Pass  28: suminf.    2.32284 (9) obj. -109.591 iterations 22
Cbc0038I Pass  29: suminf.    1.78693 (5) obj. -109.591 iterations 24
Cbc0038I Pass  30: suminf.    1.31640 (4) obj. -109.591 iterations 21
Cbc0038I Pass  31: suminf.    1.29916 (5) obj. -109.591 iterations 6
Cbc0038I Rounding solution of -109.604 is better than previous of -100.226

Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 169 rows 93 columns
Cbc0038I Mini branch and bound improved solution from -109.604 to -117.819 (0.33 seconds)
Cbc0038I Round again with cutoff of -133.031
Cbc0038I Pass  31: suminf.    3.70327 (17) obj. -133.031 iterations 29
Cbc0038I Pass  32: suminf.    3.69577 (13) obj. -133.031 iterations 14
Cbc0038I Pass  33: suminf.    3.71258 (11) obj. -133.031 iterations 42
Cbc0038I Pass  34: suminf.    3.48922 (12) obj. -133.031 iterations 32
Cbc0038I Pass  35: suminf.    3.11886 (11) obj. -133.031 iterations 10
Cbc0038I Pass  36: suminf.    2.97040 (14) obj. -133.031 iterations 9
Cbc0038I Pass  37: suminf.    2.97915 (18) obj. -133.031 iterations 10
Cbc0038I Pass  38: suminf.    2.54823 (8) obj. -133.031 iterations 42
Cbc0038I Pass  39: suminf.    2.17804 (7) obj. -133.031 iterations 29
Cbc0038I Pass  40: suminf.    2.03806 (8) obj. -133.031 iterations 7
Cbc0038I Pass  41: suminf.    3.21968 (8) obj. -133.031 iterations 24
Cbc0038I Pass  42: suminf.    2.25672 (6) obj. -133.031 iterations 44
Cbc0038I Pass  43: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  44: suminf.    1.94789 (6) obj. -133.031 iterations 28
Cbc0038I Pass  45: suminf.    1.94215 (6) obj. -133.031 iterations 24
Cbc0038I Pass  46: suminf.    2.48662 (7) obj. -133.031 iterations 45
Cbc0038I Pass  47: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  48: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  49: suminf.    1.94789 (6) obj. -133.031 iterations 24
Cbc0038I Pass  50: suminf.    1.94215 (6) obj. -133.031 iterations 20
Cbc0038I Pass  51: suminf.    2.48662 (7) obj. -133.031 iterations 43
Cbc0038I Pass  52: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  53: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  54: suminf.    1.94789 (6) obj. -133.031 iterations 26
Cbc0038I Pass  55: suminf.    1.94215 (6) obj. -133.031 iterations 22
Cbc0038I Pass  56: suminf.    2.48662 (7) obj. -133.031 iterations 47
Cbc0038I Pass  57: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  58: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  59: suminf.    1.94789 (6) obj. -133.031 iterations 25
Cbc0038I Pass  60: suminf.    1.94215 (6) obj. -133.031 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 142 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.50 seconds)
Cbc0038I After 0.50 seconds - Feasibility pump exiting with objective of -117.819 - took 0.45 seconds
Cbc0012I Integer solution of -117.81933 found by feasibility pump after 0 iterations and 0 nodes (0.51 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 122 rows 68 columns
Cbc0031I 35 added rows had average density of 168.48571
Cbc0013I At root node, 35 cuts changed objective from -193.87771 to -176.33972 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26513 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2739 row cuts average 254.2 elements, 0 column cuts (0 active)  in 0.983 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.2 elements, 0 column cuts (0 active)  in 1.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 226 row cuts average 250.1 elements, 0 column cuts (0 active)  in 0.373 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -117.81933 best solution, best possible -176.33972 (9.08 seconds)
Cbc0010I After 3 nodes, 4 on tree, -117.81933 best solution, best possible -176.33972 (9.83 seconds)
Cbc0010I After 9 nodes, 10 on tree, -117.81933 best solution, best possible -176.33972 (10.58 seconds)
Cbc0010I After 28 nodes, 8 on tree, -117.81933 best solution, best possible -176.33972 (11.32 seconds)
Cbc0012I Integer solution of -118.68874 found by rounding after 16675 iterations and 33 nodes (11.36 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 21 rows 20 columns
Cbc0038I Full problem 503 rows 262 columns, reduced to 5 rows 8 columns
Cbc0012I Integer solution of -119.3623 found by rounding after 18674 iterations and 104 nodes (12.02 seconds)
Cbc0010I After 104 nodes, 13 on tree, -119.3623 best solution, best possible -176.33972 (12.02 seconds)
Cbc0012I Integer solution of -119.40443 found by rounding after 19637 iterations and 142 nodes (12.23 seconds)
Cbc0012I Integer solution of -120.3733 found by rounding after 20597 iterations and 182 nodes (12.41 seconds)
Cbc0010I After 204 nodes, 10 on tree, -120.3733 best solution, best possible -176.33972 (12.74 seconds)
Cbc0010I After 244 nodes, 15 on tree, -120.3733 best solution, best possible -176.33972 (13.45 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 199 rows 106 columns
Cbc0010I After 297 nodes, 12 on tree, -120.3733 best solution, best possible -176.33972 (14.18 seconds)
Cbc0010I After 362 nodes, 11 on tree, -120.3733 best solution, best possible -176.33972 (14.89 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 119 rows 66 columns
Cbc0010I After 400 nodes, 17 on tree, -120.3733 best solution, best possible -176.33972 (15.61 seconds)
Cbc0010I After 470 nodes, 1 on tree, -120.3733 best solution, best possible -138.55868 (16.38 seconds)
Cbc0001I Search completed - best objective -120.373297, took 34821 iterations and 494 nodes (16.89 seconds)
Cbc0032I Strong branching done 4186 times (79133 iterations), fathomed 111 nodes and fixed 349 variables
Cbc0035I Maximum depth 76, 3765 variables fixed on reduced cost
Total time (CPU seconds):       16.03   (Wallclock seconds):       16.99

