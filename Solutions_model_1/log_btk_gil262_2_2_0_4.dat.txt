Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 335 (-192) rows, 178 (-86) columns and 1007 (-538) elements
Clp1000I sum of infeasibilities 0 - average 0, 174 fixed columns
Coin0506I Presolve 2 (-333) rows, 3 (-175) columns and 6 (-1001) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 281637.41
Clp0000I Optimal - objective value 281637.41
Coin0511I After Postsolve, objective 281637.41, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15340838 - largest nonzero change 0 ( 0%) - largest zero change 2.9892973e-05
Clp0000I Optimal - objective value 281637.41
Clp0000I Optimal - objective value 281637.41
Clp0000I Optimal - objective value 281637.41
Coin0511I After Postsolve, objective 281637.41, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 281637.4139 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 335 rows, 178 columns (177 integer (177 of which binary)) and 1007 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.524%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.12339
Cbc0038I Solution found of -277346
Cbc0038I Relaxing continuous gives -277346
Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 335 rows 178 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -277775
Cbc0038I Reduced cost fixing fixed 136 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.01104 (1) obj. -277775 iterations 27
Cbc0038I Pass   2: suminf.    0.09278 (1) obj. -280953 iterations 5
Cbc0038I Pass   3: suminf.    0.35180 (2) obj. -277775 iterations 15
Cbc0038I Pass   4: suminf.    0.78384 (3) obj. -277775 iterations 12
Cbc0038I Pass   5: suminf.    0.25716 (3) obj. -277775 iterations 20
Cbc0038I Pass   6: suminf.    0.03403 (2) obj. -277775 iterations 18
Cbc0038I Pass   7: suminf.    0.13997 (2) obj. -277775 iterations 6
Cbc0038I Pass   8: suminf.    0.30615 (3) obj. -277775 iterations 6
Cbc0038I Pass   9: suminf.    0.03403 (2) obj. -277775 iterations 11
Cbc0038I Pass  10: suminf.    0.03403 (2) obj. -277775 iterations 6
Cbc0038I Pass  11: suminf.    0.48508 (4) obj. -277775 iterations 10
Cbc0038I Pass  12: suminf.    0.77001 (3) obj. -277775 iterations 17
Cbc0038I Pass  13: suminf.    1.31052 (4) obj. -277775 iterations 19
Cbc0038I Pass  14: suminf.    1.31052 (4) obj. -277775 iterations 1
Cbc0038I Pass  15: suminf.    1.55340 (4) obj. -279195 iterations 17
Cbc0038I Pass  16: suminf.    0.77290 (2) obj. -277775 iterations 12
Cbc0038I Pass  17: suminf.    0.75626 (2) obj. -278147 iterations 10
Cbc0038I Pass  18: suminf.    0.75626 (2) obj. -278147 iterations 6
Cbc0038I Pass  19: suminf.    0.75626 (2) obj. -278147 iterations 6
Cbc0038I Pass  20: suminf.    0.52745 (4) obj. -277775 iterations 16
Cbc0038I Pass  21: suminf.    0.43299 (1) obj. -278011 iterations 15
Cbc0038I Pass  22: suminf.    0.43905 (1) obj. -277775 iterations 5
Cbc0038I Pass  23: suminf.    0.77290 (2) obj. -277775 iterations 14
Cbc0038I Pass  24: suminf.    0.77290 (2) obj. -277775 iterations 10
Cbc0038I Pass  25: suminf.    0.76316 (2) obj. -277775 iterations 21
Cbc0038I Pass  26: suminf.    0.04013 (4) obj. -277775 iterations 28
Cbc0038I Pass  27: suminf.    0.03403 (2) obj. -277775 iterations 7
Cbc0038I Pass  28: suminf.    0.13997 (2) obj. -277775 iterations 6
Cbc0038I Pass  29: suminf.    0.44203 (4) obj. -277775 iterations 12
Cbc0038I Pass  30: suminf.    0.13997 (2) obj. -277775 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 335 rows 178 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -277346 - took 0.02 seconds
Cbc0012I Integer solution of -277346 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 335 rows 178 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 8
Cbc0013I At root node, 3 cuts changed objective from -281637.41 to -279191.43 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 1.5 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 177.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -277346, took 14 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 136 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

