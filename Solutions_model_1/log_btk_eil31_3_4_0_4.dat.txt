Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-40) rows, 15 (-18) columns and 73 (-110) elements
Clp1000I sum of infeasibilities 1.43412e-06 - average 5.73647e-08, 12 fixed columns
Coin0506I Presolve 0 (-25) rows, 0 (-15) columns and 0 (-73) elements
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Coin0511I After Postsolve, objective 4866.4702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1922829 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Coin0511I After Postsolve, objective 4866.4702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4866.470244 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.758642
Cbc0038I Solution found of -3511
Cbc0038I Relaxing continuous gives -3511
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3645.76
Cbc0038I Pass   1: suminf.    0.07640 (2) obj. -3645.76 iterations 7
Cbc0038I Pass   2: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass   3: suminf.    0.79070 (2) obj. -3885.17 iterations 4
Cbc0038I Pass   4: suminf.    0.79070 (2) obj. -3885.17 iterations 1
Cbc0038I Pass   5: suminf.    0.92643 (2) obj. -3645.76 iterations 4
Cbc0038I Pass   6: suminf.    0.44444 (2) obj. -3920.73 iterations 7
Cbc0038I Pass   7: suminf.    0.06710 (2) obj. -3645.76 iterations 5
Cbc0038I Pass   8: suminf.    0.38422 (2) obj. -4653.59 iterations 2
Cbc0038I Pass   9: suminf.    0.37302 (1) obj. -4634.78 iterations 1
Cbc0038I Pass  10: suminf.    0.81689 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  11: suminf.    0.81689 (2) obj. -3645.76 iterations 1
Cbc0038I Pass  12: suminf.    0.71779 (3) obj. -3645.76 iterations 3
Cbc0038I Pass  13: suminf.    0.71779 (3) obj. -3645.76 iterations 0
Cbc0038I Pass  14: suminf.    0.75950 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  15: suminf.    0.23091 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  16: suminf.    0.23091 (2) obj. -3645.76 iterations 0
Cbc0038I Pass  17: suminf.    0.23091 (2) obj. -3645.76 iterations 0
Cbc0038I Pass  18: suminf.    0.06358 (2) obj. -3645.76 iterations 4
Cbc0038I Pass  19: suminf.    0.55000 (2) obj. -4327.78 iterations 2
Cbc0038I Pass  20: suminf.    0.55000 (2) obj. -4327.78 iterations 0
Cbc0038I Pass  21: suminf.    1.07109 (3) obj. -3645.76 iterations 3
Cbc0038I Pass  22: suminf.    0.76056 (4) obj. -3645.76 iterations 5
Cbc0038I Pass  23: suminf.    0.07119 (2) obj. -3645.76 iterations 8
Cbc0038I Pass  24: suminf.    0.15504 (2) obj. -3793.66 iterations 1
Cbc0038I Pass  25: suminf.    0.07459 (2) obj. -3645.76 iterations 10
Cbc0038I Pass  26: suminf.    0.52713 (2) obj. -4443.96 iterations 1
Cbc0038I Pass  27: suminf.    0.07459 (2) obj. -3645.76 iterations 5
Cbc0038I Pass  28: suminf.    0.96668 (3) obj. -3645.76 iterations 4
Cbc0038I Pass  29: suminf.    0.96668 (3) obj. -3645.76 iterations 0
Cbc0038I Pass  30: suminf.    0.06706 (2) obj. -3645.76 iterations 7
Cbc0038I Rounding solution of -3533.6 is better than previous of -3511

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -3533.6 to -3535 (0.01 seconds)
Cbc0038I Round again with cutoff of -3887.96
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.21372 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  31: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass  32: suminf.    1.21788 (4) obj. -3887.96 iterations 2
Cbc0038I Pass  33: suminf.    1.09409 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  34: suminf.    0.55917 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  35: suminf.    0.73850 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  36: suminf.    0.73850 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  37: suminf.    0.78730 (2) obj. -3887.96 iterations 7
Cbc0038I Pass  38: suminf.    0.77519 (2) obj. -3909.31 iterations 1
Cbc0038I Pass  39: suminf.    0.78730 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  40: suminf.    1.06559 (4) obj. -3887.96 iterations 11
Cbc0038I Pass  41: suminf.    0.48465 (2) obj. -3887.96 iterations 3
Cbc0038I Pass  42: suminf.    0.78329 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  43: suminf.    0.88409 (3) obj. -3887.96 iterations 2
Cbc0038I Pass  44: suminf.    0.87959 (3) obj. -3887.96 iterations 5
Cbc0038I Pass  45: suminf.    0.20839 (2) obj. -3887.96 iterations 4
Cbc0038I Pass  46: suminf.    0.27907 (2) obj. -4012.62 iterations 1
Cbc0038I Pass  47: suminf.    0.90925 (3) obj. -3887.96 iterations 5
Cbc0038I Pass  48: suminf.    0.90925 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  49: suminf.    0.26984 (1) obj. -3990.79 iterations 2
Cbc0038I Pass  50: suminf.    0.21191 (2) obj. -3887.96 iterations 2
Cbc0038I Pass  51: suminf.    0.52713 (2) obj. -4443.96 iterations 1
Cbc0038I Pass  52: suminf.    0.72574 (3) obj. -3887.96 iterations 7
Cbc0038I Pass  53: suminf.    0.72574 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  54: suminf.    0.26951 (2) obj. -3887.96 iterations 3
Cbc0038I Pass  55: suminf.    0.26951 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  56: suminf.    0.79481 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  57: suminf.    0.48677 (2) obj. -4435.77 iterations 1
Cbc0038I Pass  58: suminf.    0.79227 (3) obj. -3887.96 iterations 2
Cbc0038I Pass  59: suminf.    0.79227 (3) obj. -3887.96 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3535 - took 0.01 seconds
Cbc0012I Integer solution of -3535 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 5 columns
Cbc0031I 2 added rows had average density of 2.5
Cbc0013I At root node, 5 cuts changed objective from -4856.78 to -3535 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3535, took 4 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

