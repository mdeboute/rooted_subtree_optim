Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 31 (-2) columns and 158 (-25) elements
Clp1000I sum of infeasibilities 8.19781e-05 - average 1.5765e-06, 7 fixed columns
Coin0506I Presolve 31 (-21) rows, 20 (-11) columns and 95 (-63) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 103.8087
Clp0000I Optimal - objective value 103.8087
Coin0511I After Postsolve, objective 103.8087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.8087
Clp0000I Optimal - objective value 103.8087
Clp0000I Optimal - objective value 103.8087
Coin0511I After Postsolve, objective 103.8087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.8087021 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 31 columns (30 integer (30 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.735%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.80445
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.96825 iterations 18
Cbc0038I Solution found of -1.96825
Cbc0038I Relaxing continuous gives -1.96825
Cbc0038I Rounding solution of -10.1175 is better than previous of -1.96825

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -10.1175 to -60.4905 (0.02 seconds)
Cbc0038I Round again with cutoff of -63.4109
Cbc0038I Pass   2: suminf.    0.82130 (3) obj. -63.4109 iterations 4
Cbc0038I Pass   3: suminf.    0.61211 (2) obj. -63.4109 iterations 5
Cbc0038I Pass   4: suminf.    0.28112 (2) obj. -72.9604 iterations 2
Cbc0038I Pass   5: suminf.    0.04989 (2) obj. -63.4109 iterations 1
Cbc0038I Pass   6: suminf.    0.80172 (3) obj. -63.4109 iterations 3
Cbc0038I Pass   7: suminf.    0.96607 (3) obj. -63.4109 iterations 11
Cbc0038I Pass   8: suminf.    0.86883 (5) obj. -63.4109 iterations 6
Cbc0038I Pass   9: suminf.    0.51796 (3) obj. -63.4109 iterations 5
Cbc0038I Pass  10: suminf.    0.51796 (3) obj. -63.4109 iterations 0
Cbc0038I Pass  11: suminf.    0.60708 (2) obj. -63.4109 iterations 3
Cbc0038I Pass  12: suminf.    0.55839 (2) obj. -63.4109 iterations 3
Cbc0038I Pass  13: suminf.    0.95466 (2) obj. -63.4109 iterations 2
Cbc0038I Pass  14: suminf.    0.51796 (3) obj. -63.4109 iterations 5
Cbc0038I Pass  15: suminf.    1.38189 (6) obj. -63.4109 iterations 7
Cbc0038I Pass  16: suminf.    1.18492 (5) obj. -63.4109 iterations 1
Cbc0038I Pass  17: suminf.    0.72971 (3) obj. -63.4109 iterations 7
Cbc0038I Pass  18: suminf.    0.49920 (3) obj. -63.4109 iterations 3
Cbc0038I Pass  19: suminf.    0.96182 (3) obj. -63.4109 iterations 4
Cbc0038I Pass  20: suminf.    0.94813 (3) obj. -63.4109 iterations 1
Cbc0038I Pass  21: suminf.    0.81759 (3) obj. -63.4109 iterations 5
Cbc0038I Pass  22: suminf.    0.59531 (3) obj. -63.4109 iterations 2
Cbc0038I Pass  23: suminf.    1.01473 (4) obj. -63.4109 iterations 4
Cbc0038I Pass  24: suminf.    0.83491 (2) obj. -63.4109 iterations 7
Cbc0038I Pass  25: suminf.    0.83491 (2) obj. -63.4109 iterations 1
Cbc0038I Pass  26: suminf.    0.71712 (3) obj. -63.4109 iterations 4
Cbc0038I Pass  27: suminf.    0.59372 (2) obj. -63.4109 iterations 1
Cbc0038I Pass  28: suminf.    0.53631 (2) obj. -63.4109 iterations 1
Cbc0038I Pass  29: suminf.    1.73253 (5) obj. -63.4109 iterations 10
Cbc0038I Pass  30: suminf.    1.14020 (4) obj. -63.4109 iterations 8
Cbc0038I Pass  31: suminf.    0.65157 (3) obj. -63.4109 iterations 1
Cbc0038I Rounding solution of -60.5793 is better than previous of -60.4905

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -68.6675
Cbc0038I Pass  31: suminf.    1.23212 (5) obj. -68.6675 iterations 1
Cbc0038I Pass  32: suminf.    0.56959 (2) obj. -68.6675 iterations 6
Cbc0038I Pass  33: suminf.    0.17717 (2) obj. -68.6675 iterations 2
Cbc0038I Pass  34: suminf.    1.11887 (3) obj. -68.6675 iterations 3
Cbc0038I Pass  35: suminf.    0.85074 (9) obj. -68.6675 iterations 12
Cbc0038I Pass  36: suminf.    0.43994 (2) obj. -68.6675 iterations 8
Cbc0038I Pass  37: suminf.    0.63206 (3) obj. -68.6675 iterations 4
Cbc0038I Pass  38: suminf.    0.57211 (2) obj. -68.6675 iterations 2
Cbc0038I Pass  39: suminf.    0.63655 (4) obj. -68.6675 iterations 4
Cbc0038I Pass  40: suminf.    3.68162 (10) obj. -68.6675 iterations 11
Cbc0038I Pass  41: suminf.    1.24267 (4) obj. -68.6675 iterations 12
Cbc0038I Pass  42: suminf.    1.06034 (3) obj. -68.6675 iterations 5
Cbc0038I Pass  43: suminf.    1.18992 (4) obj. -68.6675 iterations 3
Cbc0038I Pass  44: suminf.    1.06675 (5) obj. -68.6675 iterations 3
Cbc0038I Pass  45: suminf.    1.27016 (3) obj. -68.6675 iterations 6
Cbc0038I Pass  46: suminf.    0.99712 (3) obj. -68.6675 iterations 1
Cbc0038I Pass  47: suminf.    0.66303 (3) obj. -68.6675 iterations 1
Cbc0038I Pass  48: suminf.    0.66619 (3) obj. -68.6675 iterations 2
Cbc0038I Pass  49: suminf.    0.92610 (3) obj. -68.6675 iterations 4
Cbc0038I Pass  50: suminf.    0.74438 (3) obj. -68.6675 iterations 2
Cbc0038I Pass  51: suminf.    0.74438 (3) obj. -68.6675 iterations 0
Cbc0038I Pass  52: suminf.    1.08187 (3) obj. -68.6675 iterations 3
Cbc0038I Pass  53: suminf.    0.86976 (3) obj. -68.6675 iterations 1
Cbc0038I Pass  54: suminf.    0.66619 (3) obj. -68.6675 iterations 3
Cbc0038I Pass  55: suminf.    0.92610 (3) obj. -68.6675 iterations 4
Cbc0038I Pass  56: suminf.    0.74438 (3) obj. -68.6675 iterations 2
Cbc0038I Pass  57: suminf.    0.74438 (3) obj. -68.6675 iterations 0
Cbc0038I Pass  58: suminf.    1.08187 (3) obj. -68.6675 iterations 3
Cbc0038I Pass  59: suminf.    0.86976 (3) obj. -68.6675 iterations 1
Cbc0038I Pass  60: suminf.    0.66619 (3) obj. -68.6675 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 42 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -60.5793 - took 0.03 seconds
Cbc0012I Integer solution of -60.57935 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 31 columns, reduced to 29 rows 19 columns
Cbc0031I 11 added rows had average density of 20.818182
Cbc0013I At root node, 11 cuts changed objective from -89.693966 to -69.398752 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 891 row cuts average 5.7 elements, 2 column cuts (2 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 552 row cuts average 30.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -60.57935000000001, took 2123 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 70 times (628 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

