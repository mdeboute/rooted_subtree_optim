Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 14 (-35) rows, 10 (-15) columns and 35 (-100) elements
Clp1000I sum of infeasibilities 0 - average 0, 7 fixed columns
Coin0506I Presolve 2 (-12) rows, 2 (-8) columns and 4 (-31) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 8845.9688
Clp0000I Optimal - objective value 8845.9688
Coin0511I After Postsolve, objective 8845.9688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 8845.9688
Clp0000I Optimal - objective value 8845.9688
Clp0000I Optimal - objective value 8845.9688
Coin0511I After Postsolve, objective 8845.9688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8845.968809 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 14 rows, 10 columns (9 integer (9 of which binary)) and 35 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.095%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.0997561
Cbc0038I Pass   1: suminf.    0.09976 (1) obj. -8818.11 iterations 0
Cbc0038I Solution found of -3624.06
Cbc0038I Relaxing continuous gives -3624.06
Cbc0038I Rounding solution of -3625.06 is better than previous of -3624.06

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4144.36
Cbc0038I Pass   2: suminf.    0.09976 (1) obj. -8818.11 iterations 0
Cbc0038I Pass   3: suminf.    0.09018 (1) obj. -4144.36 iterations 1
Cbc0038I Pass   4: suminf.    0.27951 (3) obj. -4144.36 iterations 2
Cbc0038I Pass   5: suminf.    0.18727 (2) obj. -4144.36 iterations 1
Cbc0038I Pass   6: suminf.    0.18727 (2) obj. -4144.36 iterations 0
Cbc0038I Pass   7: suminf.    0.27951 (3) obj. -4144.36 iterations 1
Cbc0038I Pass   8: suminf.    0.18727 (2) obj. -4144.36 iterations 1
Cbc0038I Pass   9: suminf.    0.27951 (3) obj. -4144.36 iterations 1
Cbc0038I Pass  10: suminf.    0.18693 (2) obj. -4144.36 iterations 2
Cbc0038I Pass  11: suminf.    0.24610 (1) obj. -7974.78 iterations 2
Cbc0038I Pass  12: suminf.    0.09001 (1) obj. -4144.36 iterations 1
Cbc0038I Pass  13: suminf.    0.14738 (2) obj. -4144.36 iterations 3
Cbc0038I Pass  14: suminf.    0.07406 (1) obj. -4144.36 iterations 2
Cbc0038I Pass  15: suminf.    0.44122 (1) obj. -6941 iterations 1
Cbc0038I Pass  16: suminf.    0.44122 (1) obj. -6941 iterations 0
Cbc0038I Pass  17: suminf.    0.44122 (1) obj. -6941 iterations 0
Cbc0038I Pass  18: suminf.    0.42073 (1) obj. -5212.68 iterations 1
Cbc0038I Pass  19: suminf.    0.39411 (1) obj. -4144.36 iterations 1
Cbc0038I Pass  20: suminf.    0.42073 (1) obj. -5212.68 iterations 1
Cbc0038I Pass  21: suminf.    0.96471 (2) obj. -4953.16 iterations 3
Cbc0038I Pass  22: suminf.    0.38007 (1) obj. -4144.36 iterations 2
Cbc0038I Pass  23: suminf.    0.46341 (1) obj. -5047.41 iterations 1
Cbc0038I Pass  24: suminf.    0.72941 (2) obj. -5543.35 iterations 2
Cbc0038I Pass  25: suminf.    0.39601 (1) obj. -4144.36 iterations 2
Cbc0038I Pass  26: suminf.    0.34146 (1) obj. -5659.02 iterations 1
Cbc0038I Pass  27: suminf.    0.09976 (1) obj. -8818.11 iterations 5
Cbc0038I Pass  28: suminf.    0.09976 (1) obj. -8818.11 iterations 1
Cbc0038I Pass  29: suminf.    0.09018 (1) obj. -4144.36 iterations 1
Cbc0038I Pass  30: suminf.    0.09018 (1) obj. -4144.36 iterations 0
Cbc0038I Pass  31: suminf.    0.09018 (1) obj. -4144.36 iterations 0
Cbc0038I Rounding solution of -3798.06 is better than previous of -3625.06

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 10 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -5079.11
Cbc0038I Pass  31: suminf.    0.09976 (1) obj. -8818.11 iterations 0
Cbc0038I Pass  32: suminf.    0.25219 (1) obj. -5079.11 iterations 1
Cbc0038I Pass  33: suminf.    0.25219 (1) obj. -5079.11 iterations 1
Cbc0038I Pass  34: suminf.    0.25219 (1) obj. -5079.11 iterations 1
Cbc0038I Pass  35: suminf.    0.25219 (1) obj. -5079.11 iterations 1
Cbc0038I Pass  36: suminf.    0.50152 (2) obj. -5079.11 iterations 3
Cbc0038I Pass  37: suminf.    0.25202 (1) obj. -5079.11 iterations 1
Cbc0038I Pass  38: suminf.    0.24610 (1) obj. -7974.78 iterations 1
Cbc0038I Pass  39: suminf.    0.24610 (1) obj. -7974.78 iterations 0
Cbc0038I Pass  40: suminf.    0.26829 (1) obj. -6081.19 iterations 3
Cbc0038I Pass  41: suminf.    0.44197 (1) obj. -5079.11 iterations 1
Cbc0038I Pass  42: suminf.    0.26829 (1) obj. -6081.19 iterations 1
Cbc0038I Pass  43: suminf.    0.64706 (2) obj. -5701.11 iterations 4
Cbc0038I Pass  44: suminf.    0.42794 (1) obj. -5079.11 iterations 2
Cbc0038I Pass  45: suminf.    0.29878 (1) obj. -5824.29 iterations 1
Cbc0038I Pass  46: suminf.    0.68659 (2) obj. -7433.03 iterations 2
Cbc0038I Pass  47: suminf.    0.25202 (1) obj. -5079.11 iterations 2
Cbc0038I Pass  48: suminf.    0.31927 (1) obj. -7552.61 iterations 1
Cbc0038I Pass  49: suminf.    0.44122 (1) obj. -6941 iterations 1
Cbc0038I Pass  50: suminf.    0.23607 (1) obj. -5079.11 iterations 1
Cbc0038I Pass  51: suminf.    0.44122 (1) obj. -6941 iterations 1
Cbc0038I Pass  52: suminf.    0.22750 (2) obj. -7575.59 iterations 6
Cbc0038I Solution found of -7565.13
Cbc0038I Relaxing continuous gives -7565.13
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 10 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -7565.13 to -7565.13 (0.01 seconds)
Cbc0038I Round again with cutoff of -7941.02
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  53: suminf.    0.09976 (1) obj. -8818.11 iterations 0
Cbc0038I Pass  54: suminf.    0.25177 (1) obj. -7941.02 iterations 1
Cbc0038I Pass  55: suminf.    0.25177 (1) obj. -7941.02 iterations 0
Cbc0038I Pass  56: suminf.    0.63202 (3) obj. -7941.02 iterations 3
Cbc0038I Pass  57: suminf.    0.63202 (3) obj. -7941.02 iterations 1
Cbc0038I Pass  58: suminf.    0.88987 (3) obj. -7941.02 iterations 1
Cbc0038I Pass  59: suminf.    0.40424 (2) obj. -8250.66 iterations 1
Cbc0038I Pass  60: suminf.    0.25177 (1) obj. -7941.02 iterations 2
Cbc0038I Pass  61: suminf.    0.17293 (1) obj. -8395.94 iterations 1
Cbc0038I Pass  62: suminf.    0.40424 (2) obj. -8250.66 iterations 1
Cbc0038I Pass  63: suminf.    0.26306 (2) obj. -8659.78 iterations 3
Cbc0038I Pass  64: suminf.    0.26306 (2) obj. -8659.78 iterations 0
Cbc0038I Pass  65: suminf.    0.25177 (1) obj. -7941.02 iterations 3
Cbc0038I Pass  66: suminf.    0.09976 (1) obj. -8818.11 iterations 1
Cbc0038I Pass  67: suminf.    0.24610 (1) obj. -7974.78 iterations 1
Cbc0038I Pass  68: suminf.    0.25195 (1) obj. -7941.02 iterations 1
Cbc0038I Pass  69: suminf.    0.24610 (1) obj. -7974.78 iterations 1
Cbc0038I Pass  70: suminf.    1.03376 (4) obj. -7941.02 iterations 3
Cbc0038I Pass  71: suminf.    1.03376 (4) obj. -7941.02 iterations 0
Cbc0038I Pass  72: suminf.    1.03376 (4) obj. -7941.02 iterations 0
Cbc0038I Pass  73: suminf.    1.16982 (4) obj. -7941.02 iterations 1
Cbc0038I Pass  74: suminf.    0.40424 (2) obj. -8250.66 iterations 1
Cbc0038I Pass  75: suminf.    0.25177 (1) obj. -7941.02 iterations 2
Cbc0038I Pass  76: suminf.    0.17293 (1) obj. -8395.94 iterations 1
Cbc0038I Pass  77: suminf.    0.17293 (1) obj. -8395.94 iterations 0
Cbc0038I Pass  78: suminf.    0.17293 (1) obj. -8395.94 iterations 0
Cbc0038I Pass  79: suminf.    0.17293 (1) obj. -8395.94 iterations 0
Cbc0038I Pass  80: suminf.    0.51983 (2) obj. -7941.02 iterations 1
Cbc0038I Pass  81: suminf.    0.51983 (2) obj. -7941.02 iterations 0
Cbc0038I Pass  82: suminf.    0.51983 (2) obj. -7941.02 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7565.13 - took 0.02 seconds
Cbc0012I Integer solution of -7565.13 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 14 rows 10 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -8818.1072 to -8818.1072 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7565.13, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

