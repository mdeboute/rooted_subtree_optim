Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 3.45262e-05 - average 7.67248e-07, 5 fixed columns
Coin0506I Presolve 36 (-9) rows, 21 (-5) columns and 107 (-28) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.2861784 - largest nonzero change 0 ( 0%) - largest zero change 2.041331e-05
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Coin0511I After Postsolve, objective 93.8123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Coin0511I After Postsolve, objective 93.8123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.81229978 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 26 columns (25 integer (25 of which binary)) and 145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.717%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.67744
Cbc0038I Pass   1: suminf.    0.27368 (1) obj. -76.1261 iterations 11
Cbc0038I Solution found of -49.4624
Cbc0038I Relaxing continuous gives -49.4624
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 21 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -49.4624 to -60.9466 (0.01 seconds)
Cbc0038I Round again with cutoff of -63.9218
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27368 (1) obj. -76.1261 iterations 0
Cbc0038I Pass   3: suminf.    0.39387 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   4: suminf.    2.02724 (7) obj. -63.9218 iterations 10
Cbc0038I Pass   5: suminf.    0.40779 (2) obj. -63.9218 iterations 8
Cbc0038I Pass   6: suminf.    0.37895 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   7: suminf.    0.32265 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   8: suminf.    1.42253 (5) obj. -63.9218 iterations 6
Cbc0038I Pass   9: suminf.    0.96621 (6) obj. -63.9218 iterations 4
Cbc0038I Pass  10: suminf.    0.43267 (2) obj. -63.9218 iterations 6
Cbc0038I Pass  11: suminf.    0.54676 (2) obj. -63.9218 iterations 2
Cbc0038I Pass  12: suminf.    0.54676 (2) obj. -63.9218 iterations 0
Cbc0038I Pass  13: suminf.    0.37895 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  14: suminf.    0.32265 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  15: suminf.    0.93367 (5) obj. -63.9218 iterations 13
Cbc0038I Pass  16: suminf.    0.57052 (4) obj. -63.9218 iterations 3
Cbc0038I Pass  17: suminf.    1.13021 (4) obj. -63.9218 iterations 4
Cbc0038I Pass  18: suminf.    0.48148 (2) obj. -71.0962 iterations 3
Cbc0038I Pass  19: suminf.    0.16229 (1) obj. -63.9218 iterations 2
Cbc0038I Pass  20: suminf.    0.22768 (4) obj. -63.9218 iterations 3
Cbc0038I Pass  21: suminf.    0.16229 (1) obj. -63.9218 iterations 3
Cbc0038I Pass  22: suminf.    0.44355 (2) obj. -63.9218 iterations 8
Cbc0038I Pass  23: suminf.    0.44355 (2) obj. -63.9218 iterations 1
Cbc0038I Pass  24: suminf.    0.53491 (2) obj. -63.9218 iterations 7
Cbc0038I Pass  25: suminf.    0.53491 (2) obj. -63.9218 iterations 0
Cbc0038I Pass  26: suminf.    0.47368 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  27: suminf.    0.38441 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  28: suminf.    2.74371 (9) obj. -63.9218 iterations 14
Cbc0038I Pass  29: suminf.    0.59960 (4) obj. -63.9218 iterations 5
Cbc0038I Pass  30: suminf.    0.19321 (3) obj. -63.9218 iterations 6
Cbc0038I Pass  31: suminf.    0.32265 (1) obj. -63.9218 iterations 4
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -60.9466 to -61.4245 (0.03 seconds)
Cbc0038I Round again with cutoff of -69.277
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27368 (1) obj. -76.1261 iterations 0
Cbc0038I Pass  32: suminf.    0.46025 (1) obj. -69.277 iterations 1
Cbc0038I Pass  33: suminf.    1.12836 (4) obj. -69.277 iterations 4
Cbc0038I Pass  34: suminf.    0.63366 (2) obj. -81.8461 iterations 2
Cbc0038I Pass  35: suminf.    3.36515 (10) obj. -69.277 iterations 8
Cbc0038I Pass  36: suminf.    2.36619 (7) obj. -69.277 iterations 4
Cbc0038I Pass  37: suminf.    0.95181 (6) obj. -69.277 iterations 3
Cbc0038I Pass  38: suminf.    0.95181 (6) obj. -69.277 iterations 0
Cbc0038I Pass  39: suminf.    0.39989 (2) obj. -69.277 iterations 7
Cbc0038I Pass  40: suminf.    0.27368 (1) obj. -76.1261 iterations 2
Cbc0038I Pass  41: suminf.    0.46025 (1) obj. -69.277 iterations 1
Cbc0038I Pass  42: suminf.    3.87579 (11) obj. -69.277 iterations 14
Cbc0038I Pass  43: suminf.    2.19780 (12) obj. -69.277 iterations 3
Cbc0038I Pass  44: suminf.    2.16928 (12) obj. -69.277 iterations 1
Cbc0038I Pass  45: suminf.    2.24059 (11) obj. -69.277 iterations 2
Cbc0038I Pass  46: suminf.    2.16928 (12) obj. -69.277 iterations 2
Cbc0038I Pass  47: suminf.    0.43021 (3) obj. -69.277 iterations 10
Cbc0038I Pass  48: suminf.    0.43083 (2) obj. -69.277 iterations 2
Cbc0038I Pass  49: suminf.    0.56251 (2) obj. -69.277 iterations 4
Cbc0038I Pass  50: suminf.    0.56145 (2) obj. -69.277 iterations 2
Cbc0038I Pass  51: suminf.    0.71287 (2) obj. -72.0053 iterations 2
Cbc0038I Pass  52: suminf.    0.54938 (4) obj. -69.277 iterations 5
Cbc0038I Pass  53: suminf.    0.54487 (4) obj. -69.277 iterations 4
Cbc0038I Pass  54: suminf.    0.33760 (3) obj. -72.9499 iterations 7
Cbc0038I Pass  55: suminf.    0.03158 (1) obj. -70.6216 iterations 2
Cbc0038I Pass  56: suminf.    0.05347 (1) obj. -69.277 iterations 1
Cbc0038I Pass  57: suminf.    1.09306 (5) obj. -69.277 iterations 7
Cbc0038I Pass  58: suminf.    1.09306 (5) obj. -69.277 iterations 2
Cbc0038I Pass  59: suminf.    0.84271 (3) obj. -69.277 iterations 4
Cbc0038I Pass  60: suminf.    0.47867 (2) obj. -75.77 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -61.4245 - took 0.03 seconds
Cbc0012I Integer solution of -61.42453 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 26 columns, reduced to 22 rows 14 columns
Cbc0031I 9 added rows had average density of 13.555556
Cbc0013I At root node, 9 cuts changed objective from -90.697694 to -76.053816 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 680 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 353 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -61.42453, took 1803 iterations and 12 nodes (0.20 seconds)
Cbc0032I Strong branching done 106 times (848 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

