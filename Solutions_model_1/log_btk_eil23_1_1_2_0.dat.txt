Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 0.00173165 - average 4.94758e-05, 2 fixed columns
Coin0506I Presolve 23 (-12) rows, 18 (-3) columns and 74 (-30) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 174.82734
Clp0000I Optimal - objective value 174.82734
Coin0511I After Postsolve, objective 174.82734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 174.82734
Clp0000I Optimal - objective value 174.82734
Clp0000I Optimal - objective value 174.82734
Coin0511I After Postsolve, objective 174.82734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 174.8273405 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.654%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.53569
Cbc0038I Pass   1: suminf.    0.70095 (2) obj. -107.049 iterations 17
Cbc0038I Solution found of -80.8056
Cbc0038I Relaxing continuous gives -80.8056
Cbc0038I Rounding solution of -89.109 is better than previous of -80.8056

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -89.109 to -117.422 (0.02 seconds)
Cbc0038I Round again with cutoff of -123.049
Cbc0038I Pass   2: suminf.    0.92054 (4) obj. -123.049 iterations 2
Cbc0038I Pass   3: suminf.    0.69453 (4) obj. -123.049 iterations 2
Cbc0038I Pass   4: suminf.    0.56931 (5) obj. -123.049 iterations 8
Cbc0038I Pass   5: suminf.    0.54609 (3) obj. -123.049 iterations 3
Cbc0038I Pass   6: suminf.    0.54609 (3) obj. -123.049 iterations 0
Cbc0038I Pass   7: suminf.    0.95934 (3) obj. -123.049 iterations 4
Cbc0038I Pass   8: suminf.    0.90224 (3) obj. -123.049 iterations 2
Cbc0038I Pass   9: suminf.    0.54863 (3) obj. -123.049 iterations 1
Cbc0038I Pass  10: suminf.    1.32992 (7) obj. -123.049 iterations 7
Cbc0038I Pass  11: suminf.    1.32992 (7) obj. -123.049 iterations 2
Cbc0038I Pass  12: suminf.    1.64732 (7) obj. -123.049 iterations 7
Cbc0038I Pass  13: suminf.    1.48339 (4) obj. -123.049 iterations 3
Cbc0038I Pass  14: suminf.    0.76514 (3) obj. -123.049 iterations 3
Cbc0038I Pass  15: suminf.    0.71552 (3) obj. -123.049 iterations 1
Cbc0038I Pass  16: suminf.    0.95934 (3) obj. -123.049 iterations 2
Cbc0038I Pass  17: suminf.    0.90224 (3) obj. -123.049 iterations 1
Cbc0038I Pass  18: suminf.    0.54863 (3) obj. -123.049 iterations 1
Cbc0038I Pass  19: suminf.    0.95934 (3) obj. -123.049 iterations 4
Cbc0038I Pass  20: suminf.    2.45962 (7) obj. -123.049 iterations 9
Cbc0038I Pass  21: suminf.    1.04361 (7) obj. -123.049 iterations 3
Cbc0038I Pass  22: suminf.    1.04361 (7) obj. -123.049 iterations 0
Cbc0038I Pass  23: suminf.    0.80315 (3) obj. -123.049 iterations 7
Cbc0038I Pass  24: suminf.    0.70322 (3) obj. -123.049 iterations 1
Cbc0038I Pass  25: suminf.    0.50209 (2) obj. -123.049 iterations 4
Cbc0038I Pass  26: suminf.    0.48487 (2) obj. -123.049 iterations 1
Cbc0038I Pass  27: suminf.    0.63895 (3) obj. -123.049 iterations 4
Cbc0038I Pass  28: suminf.    0.63649 (3) obj. -123.049 iterations 2
Cbc0038I Pass  29: suminf.    0.77684 (3) obj. -123.049 iterations 2
Cbc0038I Pass  30: suminf.    0.94553 (6) obj. -123.049 iterations 4
Cbc0038I Pass  31: suminf.    0.81768 (5) obj. -123.049 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 23 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -117.422 - took 0.02 seconds
Cbc0012I Integer solution of -117.42195 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 23 rows 16 columns
Cbc0031I 11 added rows had average density of 11.181818
Cbc0013I At root node, 11 cuts changed objective from -173.69088 to -125.33962 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 966 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 633 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -117.42195, took 1812 iterations and 2 nodes (0.14 seconds)
Cbc0032I Strong branching done 24 times (245 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

