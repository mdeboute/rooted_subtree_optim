Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 487 (-40) rows, 251 (-13) columns and 1451 (-94) elements
Clp1000I sum of infeasibilities 1.49191e-05 - average 3.06347e-08, 126 fixed columns
Coin0506I Presolve 215 (-272) rows, 118 (-133) columns and 653 (-798) elements
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.39498 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Coin0511I After Postsolve, objective 2993.2004, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1733708 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Coin0511I After Postsolve, objective 2993.2004, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2993.20038 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 487 rows, 251 columns (250 integer (250 of which binary)) and 1451 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.384%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.68999
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1288.5 iterations 87
Cbc0038I Solution found of -1288.5
Cbc0038I Relaxing continuous gives -1288.5
Cbc0038I Rounding solution of -2401.65 is better than previous of -1288.5

Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 487 rows 251 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2401.65 to -2824.4 (0.06 seconds)
Cbc0038I Round again with cutoff of -2841.28
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.15470 (7) obj. -2841.28 iterations 30
Cbc0038I Pass   3: suminf.    0.71616 (4) obj. -2841.28 iterations 29
Cbc0038I Pass   4: suminf.    2.31085 (11) obj. -2841.28 iterations 48
Cbc0038I Pass   5: suminf.    0.25033 (3) obj. -2841.28 iterations 59
Cbc0038I Pass   6: suminf.    0.18758 (3) obj. -2841.28 iterations 18
Cbc0038I Pass   7: suminf.    0.37012 (2) obj. -2841.28 iterations 17
Cbc0038I Pass   8: suminf.    0.34694 (1) obj. -2841.28 iterations 6
Cbc0038I Pass   9: suminf.    0.35038 (1) obj. -2841.28 iterations 5
Cbc0038I Pass  10: suminf.    1.72736 (6) obj. -2841.28 iterations 57
Cbc0038I Pass  11: suminf.    0.73834 (3) obj. -2841.28 iterations 51
Cbc0038I Pass  12: suminf.    0.20926 (2) obj. -2841.28 iterations 6
Cbc0038I Pass  13: suminf.    0.20926 (2) obj. -2841.28 iterations 1
Cbc0038I Pass  14: suminf.    0.37012 (2) obj. -2841.28 iterations 9
Cbc0038I Pass  15: suminf.    0.34694 (1) obj. -2841.28 iterations 6
Cbc0038I Pass  16: suminf.    0.35038 (1) obj. -2841.28 iterations 5
Cbc0038I Pass  17: suminf.    2.01041 (10) obj. -2841.28 iterations 38
Cbc0038I Pass  18: suminf.    1.61570 (6) obj. -2841.28 iterations 30
Cbc0038I Pass  19: suminf.    0.91511 (5) obj. -2841.28 iterations 21
Cbc0038I Pass  20: suminf.    0.59121 (5) obj. -2841.28 iterations 51
Cbc0038I Pass  21: suminf.    0.58990 (5) obj. -2841.28 iterations 18
Cbc0038I Pass  22: suminf.    0.51447 (3) obj. -2841.28 iterations 43
Cbc0038I Pass  23: suminf.    0.37775 (2) obj. -2841.28 iterations 21
Cbc0038I Pass  24: suminf.    1.37761 (5) obj. -2841.28 iterations 15
Cbc0038I Pass  25: suminf.    0.89567 (4) obj. -2841.28 iterations 10
Cbc0038I Pass  26: suminf.    3.82444 (16) obj. -2841.28 iterations 62
Cbc0038I Pass  27: suminf.    0.39304 (2) obj. -2841.28 iterations 55
Cbc0038I Pass  28: suminf.    0.76977 (7) obj. -2841.28 iterations 26
Cbc0038I Pass  29: suminf.    0.44391 (4) obj. -2841.28 iterations 38
Cbc0038I Pass  30: suminf.    0.43545 (2) obj. -2841.28 iterations 26
Cbc0038I Pass  31: suminf.    4.43894 (11) obj. -2841.28 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 487 rows 251 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -2824.4 - took 0.17 seconds
Cbc0012I Integer solution of -2824.405 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 487 rows 251 columns, reduced to 28 rows 18 columns
Cbc0031I 11 added rows had average density of 129.90909
Cbc0013I At root node, 11 cuts changed objective from -2993.2004 to -2954.4556 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 246 row cuts average 3.2 elements, 24 column cuts (24 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 202.2 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -2824.405 best solution, best possible -2954.4079 (0.62 seconds)
Cbc0012I Integer solution of -2865.305 found by DiveCoefficient after 519 iterations and 5 nodes (0.76 seconds)
Cbc0038I Full problem 487 rows 251 columns, reduced to 6 rows 6 columns
Cbc0038I Full problem 498 rows 251 columns, reduced to 341 rows 178 columns
Cbc0044I Reduced cost fixing - 341 rows, 178 columns - restarting search
Cbc0012I Integer solution of -2865.305 found by Previous solution after 0 iterations and 0 nodes (1.09 seconds)
Cbc0038I Full problem 341 rows 178 columns, reduced to 32 rows 20 columns
Cbc0031I 11 added rows had average density of 108.09091
Cbc0013I At root node, 11 cuts changed objective from -2993.2004 to -2953.332 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 151 row cuts average 3.2 elements, 11 column cuts (11 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 161.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 160.7 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 13 row cuts average 109.5 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -2865.305 best solution, best possible -2953.2964 (1.61 seconds)
Cbc0038I Full problem 341 rows 178 columns, reduced to 17 rows 16 columns
Cbc0038I Full problem 341 rows 178 columns, reduced to 5 rows 5 columns
Cbc0010I After 190 nodes, 11 on tree, -2865.305 best solution, best possible -2953.2964 (2.61 seconds)
Cbc0038I Full problem 341 rows 178 columns, reduced to 14 rows 14 columns
Cbc0001I Search completed - best objective -2865.305, took 7127 iterations and 276 nodes (2.98 seconds)
Cbc0032I Strong branching done 1352 times (12680 iterations), fathomed 62 nodes and fixed 125 variables
Cbc0035I Maximum depth 18, 2226 variables fixed on reduced cost
Cbc0038I Probing was tried 267 times and created 2309 cuts of which 0 were active after adding rounds of cuts (0.093 seconds)
Cbc0038I Gomory was tried 12 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I Knapsack was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I MixedIntegerRounding2 was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 227 times and created 87 cuts of which 0 were active after adding rounds of cuts (0.118 seconds)
Cbc0038I ZeroHalf was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.171 seconds)
Cbc0038I Stored from first was tried 227 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -2865.305, took 8970 iterations and 326 nodes (2.99 seconds)
Cbc0032I Strong branching done 470 times (6001 iterations), fathomed 15 nodes and fixed 38 variables
Cbc0035I Maximum depth 13, 660 variables fixed on reduced cost
Total time (CPU seconds):       2.77   (Wallclock seconds):       3.00

