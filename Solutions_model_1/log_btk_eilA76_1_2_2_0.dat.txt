Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 75 (-3) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 1.80534e-05 - average 1.36768e-07, 8 fixed columns
Coin0506I Presolve 117 (-15) rows, 67 (-8) columns and 360 (-46) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Coin0511I After Postsolve, objective 52.443134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Coin0511I After Postsolve, objective 52.443134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.44313352 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 75 columns (74 integer (74 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.99924
Cbc0038I Solution found of 0.195994
Cbc0038I Relaxing continuous gives -7.50049
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -7.50049 to -24.2583 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.0769
Cbc0038I Pass   1: suminf.    2.66374 (38) obj. -27.0769 iterations 44
Cbc0038I Pass   2: suminf.    0.84985 (4) obj. -27.0769 iterations 41
Cbc0038I Pass   3: suminf.    0.51810 (3) obj. -27.0769 iterations 1
Cbc0038I Pass   4: suminf.    1.15232 (4) obj. -27.0769 iterations 6
Cbc0038I Pass   5: suminf.    1.06774 (4) obj. -27.0769 iterations 2
Cbc0038I Pass   6: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass   7: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass   8: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass   9: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  10: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  11: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  12: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  13: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  14: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  15: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  16: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  17: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  18: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  19: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  20: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  21: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  22: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  23: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  24: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  25: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  26: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  27: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  28: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  29: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  30: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -24.2583 to -24.54 (0.10 seconds)
Cbc0038I Round again with cutoff of -32.1502
Cbc0038I Pass  30: suminf.    3.35405 (38) obj. -32.1502 iterations 0
Cbc0038I Pass  31: suminf.    2.58913 (9) obj. -32.1502 iterations 31
Cbc0038I Pass  32: suminf.    2.23142 (6) obj. -32.1502 iterations 8
Cbc0038I Pass  33: suminf.    1.87524 (6) obj. -32.1502 iterations 2
Cbc0038I Pass  34: suminf.    1.35583 (3) obj. -32.1502 iterations 12
Cbc0038I Pass  35: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  36: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  37: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  38: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  39: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  40: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  41: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  42: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  43: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  44: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  45: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  46: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  47: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  48: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  49: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  50: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  51: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  52: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  53: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  54: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  55: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  56: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  57: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  58: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  59: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -24.54 - took 0.12 seconds
Cbc0012I Integer solution of -24.54001 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 77 rows 44 columns
Cbc0031I 23 added rows had average density of 65.869565
Cbc0013I At root node, 23 cuts changed objective from -52.443134 to -46.641174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10816 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1424 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54001 best solution, best possible -46.641174 (0.93 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 43 rows 28 columns
Cbc0038I Full problem 132 rows 75 columns, reduced to 6 rows 9 columns
Cbc0001I Search completed - best objective -24.54001, took 11099 iterations and 142 nodes (1.35 seconds)
Cbc0032I Strong branching done 1134 times (18829 iterations), fathomed 14 nodes and fixed 55 variables
Cbc0035I Maximum depth 35, 306 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.36

