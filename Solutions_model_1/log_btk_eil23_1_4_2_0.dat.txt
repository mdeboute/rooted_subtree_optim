Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 22 (-3) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 0 - average 0, 17 fixed columns
Coin0506I Presolve 3 (-31) rows, 5 (-17) columns and 10 (-94) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 9457.711
Clp0000I Optimal - objective value 9457.711
Coin0511I After Postsolve, objective 9457.711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.8953843 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 9457.711
Clp0000I Optimal - objective value 9457.711
Clp0000I Optimal - objective value 9457.711
Coin0511I After Postsolve, objective 9457.711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9457.710988 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.982924
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5826.94 iterations 6
Cbc0038I Solution found of -5826.94
Cbc0038I Relaxing continuous gives -5826.94
Cbc0038I Rounding solution of -7761.05 is better than previous of -5826.94

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7804.86
Cbc0038I Pass   2: suminf.    0.32636 (1) obj. -7804.86 iterations 1
Cbc0038I Pass   3: suminf.    0.37195 (1) obj. -8081.16 iterations 1
Cbc0038I Pass   4: suminf.    0.60238 (3) obj. -7804.86 iterations 6
Cbc0038I Pass   5: suminf.    0.60238 (3) obj. -7804.86 iterations 2
Cbc0038I Pass   6: suminf.    0.78422 (2) obj. -7804.86 iterations 2
Cbc0038I Pass   7: suminf.    0.40370 (1) obj. -7804.86 iterations 1
Cbc0038I Pass   8: suminf.    0.44055 (1) obj. -8028.17 iterations 1
Cbc0038I Pass   9: suminf.    0.48933 (1) obj. -7804.86 iterations 5
Cbc0038I Pass  10: suminf.    0.47561 (1) obj. -7888 iterations 1
Cbc0038I Pass  11: suminf.    0.48933 (1) obj. -7804.86 iterations 1
Cbc0038I Pass  12: suminf.    1.22025 (3) obj. -7804.86 iterations 3
Cbc0038I Pass  13: suminf.    0.61752 (2) obj. -7804.86 iterations 1
Cbc0038I Pass  14: suminf.    0.47590 (1) obj. -7823.02 iterations 2
Cbc0038I Pass  15: suminf.    0.47890 (1) obj. -7804.86 iterations 1
Cbc0038I Pass  16: suminf.    1.89736 (4) obj. -7804.86 iterations 5
Cbc0038I Pass  17: suminf.    0.75795 (2) obj. -7804.86 iterations 3
Cbc0038I Pass  18: suminf.    0.75795 (2) obj. -7804.86 iterations 1
Cbc0038I Pass  19: suminf.    0.78971 (2) obj. -7804.86 iterations 1
Cbc0038I Pass  20: suminf.    1.09790 (4) obj. -7804.86 iterations 10
Cbc0038I Pass  21: suminf.    0.67975 (2) obj. -7804.86 iterations 3
Cbc0038I Pass  22: suminf.    0.80282 (2) obj. -7804.86 iterations 2
Cbc0038I Pass  23: suminf.    0.80282 (2) obj. -7804.86 iterations 0
Cbc0038I Pass  24: suminf.    0.67975 (2) obj. -7804.86 iterations 2
Cbc0038I Pass  25: suminf.    0.77824 (2) obj. -7804.86 iterations 4
Cbc0038I Pass  26: suminf.    0.66049 (2) obj. -7804.86 iterations 2
Cbc0038I Pass  27: suminf.    0.77824 (2) obj. -7804.86 iterations 2
Cbc0038I Pass  28: suminf.    0.53508 (2) obj. -7804.86 iterations 6
Cbc0038I Pass  29: suminf.    0.53508 (2) obj. -7804.86 iterations 0
Cbc0038I Pass  30: suminf.    0.02916 (1) obj. -7975.83 iterations 3
Cbc0038I Pass  31: suminf.    0.00095 (1) obj. -7804.86 iterations 1
Cbc0038I Rounding solution of -7799.12 is better than previous of -7761.05

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -7799.12 to -7878.91 (0.02 seconds)
Cbc0038I Round again with cutoff of -7942.95
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.34915 (1) obj. -7942.95 iterations 0
Cbc0038I Pass  32: suminf.    0.37195 (1) obj. -8081.16 iterations 1
Cbc0038I Pass  33: suminf.    0.90302 (3) obj. -7942.95 iterations 6
Cbc0038I Pass  34: suminf.    0.69321 (2) obj. -7942.95 iterations 2
Cbc0038I Pass  35: suminf.    0.87262 (2) obj. -7942.95 iterations 2
Cbc0038I Pass  36: suminf.    0.64524 (2) obj. -7942.95 iterations 3
Cbc0038I Pass  37: suminf.    0.64524 (2) obj. -7942.95 iterations 1
Cbc0038I Pass  38: suminf.    0.91339 (2) obj. -7942.95 iterations 2
Cbc0038I Pass  39: suminf.    0.60846 (3) obj. -7942.95 iterations 4
Cbc0038I Pass  40: suminf.    0.60846 (3) obj. -7942.95 iterations 0
Cbc0038I Pass  41: suminf.    1.09506 (3) obj. -7942.95 iterations 6
Cbc0038I Pass  42: suminf.    0.93844 (4) obj. -7942.95 iterations 3
Cbc0038I Pass  43: suminf.    0.58985 (2) obj. -7942.95 iterations 11
Cbc0038I Pass  44: suminf.    0.58487 (2) obj. -7942.95 iterations 3
Cbc0038I Pass  45: suminf.    0.50343 (2) obj. -7942.95 iterations 2
Cbc0038I Pass  46: suminf.    0.33354 (1) obj. -8007.45 iterations 2
Cbc0038I Pass  47: suminf.    0.34418 (1) obj. -7942.95 iterations 1
Cbc0038I Pass  48: suminf.    1.00244 (4) obj. -7942.95 iterations 8
Cbc0038I Pass  49: suminf.    0.58134 (2) obj. -7942.95 iterations 3
Cbc0038I Pass  50: suminf.    1.19947 (3) obj. -7942.95 iterations 2
Cbc0038I Pass  51: suminf.    0.58134 (2) obj. -7942.95 iterations 1
Cbc0038I Pass  52: suminf.    1.51995 (4) obj. -7942.95 iterations 5
Cbc0038I Pass  53: suminf.    1.51995 (4) obj. -7942.95 iterations 1
Cbc0038I Pass  54: suminf.    0.86192 (2) obj. -7942.95 iterations 3
Cbc0038I Pass  55: suminf.    0.83934 (2) obj. -7942.95 iterations 1
Cbc0038I Pass  56: suminf.    0.82203 (2) obj. -7942.95 iterations 2
Cbc0038I Pass  57: suminf.    0.85592 (2) obj. -7942.95 iterations 1
Cbc0038I Pass  58: suminf.    0.69558 (3) obj. -7942.95 iterations 7
Cbc0038I Pass  59: suminf.    0.69558 (3) obj. -7942.95 iterations 0
Cbc0038I Pass  60: suminf.    0.74591 (4) obj. -7942.95 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7878.91 - took 0.02 seconds
Cbc0012I Integer solution of -7878.907 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 4 cuts changed objective from -8199.1072 to -7878.907 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 3.2 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7878.906999999999, took 22 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

