Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 15 (-14) rows, 12 (-3) columns and 46 (-29) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 13 (-2) rows, 11 (-1) columns and 40 (-6) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 53.518501
Clp0000I Optimal - objective value 53.518501
Coin0511I After Postsolve, objective 53.518501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.518501
Clp0000I Optimal - objective value 53.518501
Clp0000I Optimal - objective value 53.518501
Coin0511I After Postsolve, objective 53.518501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.51850059 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 15 rows, 12 columns (11 integer (11 of which binary)) and 46 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.70888
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -27.4285 iterations 9
Cbc0038I Solution found of -27.4285
Cbc0038I Relaxing continuous gives -27.4285
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 12 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -27.4285 to -30.0001 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.352
Cbc0038I Pass   2: suminf.    0.22235 (1) obj. -32.352 iterations 1
Cbc0038I Pass   3: suminf.    0.44444 (1) obj. -32.352 iterations 2
Cbc0038I Pass   4: suminf.    0.42137 (1) obj. -32.352 iterations 2
Cbc0038I Pass   5: suminf.    0.08293 (2) obj. -32.352 iterations 3
Cbc0038I Pass   6: suminf.    0.76940 (2) obj. -32.352 iterations 2
Cbc0038I Pass   7: suminf.    0.11111 (1) obj. -32.352 iterations 2
Cbc0038I Pass   8: suminf.    0.14471 (1) obj. -32.352 iterations 1
Cbc0038I Pass   9: suminf.    0.12287 (2) obj. -32.352 iterations 4
Cbc0038I Pass  10: suminf.    0.12287 (2) obj. -32.352 iterations 0
Cbc0038I Pass  11: suminf.    0.27778 (1) obj. -32.352 iterations 1
Cbc0038I Pass  12: suminf.    0.34729 (1) obj. -32.352 iterations 2
Cbc0038I Pass  13: suminf.    0.37031 (1) obj. -32.352 iterations 5
Cbc0038I Pass  14: suminf.    0.45136 (2) obj. -32.352 iterations 3
Cbc0038I Pass  15: suminf.    0.23933 (2) obj. -32.352 iterations 3
Cbc0038I Pass  16: suminf.    0.76940 (2) obj. -32.352 iterations 5
Cbc0038I Pass  17: suminf.    0.11111 (1) obj. -32.352 iterations 2
Cbc0038I Pass  18: suminf.    0.14471 (1) obj. -32.352 iterations 1
Cbc0038I Pass  19: suminf.    0.08293 (2) obj. -32.352 iterations 4
Cbc0038I Pass  20: suminf.    0.08293 (2) obj. -32.352 iterations 0
Cbc0038I Pass  21: suminf.    0.30722 (3) obj. -32.352 iterations 3
Cbc0038I Pass  22: suminf.    0.29561 (2) obj. -32.352 iterations 2
Cbc0038I Pass  23: suminf.    0.11765 (1) obj. -32.352 iterations 2
Cbc0038I Pass  24: suminf.    0.36167 (1) obj. -32.352 iterations 3
Cbc0038I Pass  25: suminf.    0.06666 (2) obj. -32.352 iterations 3
Cbc0038I Pass  26: suminf.    0.76940 (2) obj. -32.352 iterations 2
Cbc0038I Pass  27: suminf.    0.11111 (1) obj. -32.352 iterations 2
Cbc0038I Pass  28: suminf.    0.14471 (1) obj. -32.352 iterations 1
Cbc0038I Pass  29: suminf.    0.11111 (1) obj. -32.352 iterations 1
Cbc0038I Pass  30: suminf.    0.14471 (1) obj. -32.352 iterations 1
Cbc0038I Pass  31: suminf.    0.11111 (1) obj. -32.352 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 12 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -30.0001 - took 0.01 seconds
Cbc0012I Integer solution of -30.0001 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 15 rows 12 columns, reduced to 10 rows 9 columns
Cbc0031I 9 added rows had average density of 9.3333333
Cbc0013I At root node, 9 cuts changed objective from -53.518501 to -39.020976 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 417 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 301 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 138 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.0001, took 1134 iterations and 6 nodes (0.07 seconds)
Cbc0032I Strong branching done 32 times (150 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

