Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 5.03034e-08 - average 3.72618e-10, 6 fixed columns
Coin0506I Presolve 123 (-12) rows, 69 (-6) columns and 376 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Coin0511I After Postsolve, objective 38.113922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Coin0511I After Postsolve, objective 38.113922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.11392158 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 75 columns (74 integer (74 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.63671
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.04576 iterations 53
Cbc0038I Solution found of 9.04576
Cbc0038I Relaxing continuous gives 9.04576
Cbc0038I Rounding solution of -10.084 is better than previous of 9.04576

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -12.8871
Cbc0038I Pass   2: suminf.    1.79577 (33) obj. -12.8871 iterations 34
Cbc0038I Pass   3: suminf.    1.76347 (42) obj. -12.8871 iterations 12
Cbc0038I Pass   4: suminf.    2.43563 (9) obj. -12.8871 iterations 47
Cbc0038I Pass   5: suminf.    1.67569 (7) obj. -12.8871 iterations 4
Cbc0038I Pass   6: suminf.    1.30608 (5) obj. -12.8871 iterations 13
Cbc0038I Pass   7: suminf.    1.16592 (6) obj. -12.8871 iterations 1
Cbc0038I Pass   8: suminf.    2.04367 (6) obj. -12.8871 iterations 6
Cbc0038I Pass   9: suminf.    1.78346 (5) obj. -12.8871 iterations 3
Cbc0038I Pass  10: suminf.    1.30608 (5) obj. -12.8871 iterations 5
Cbc0038I Pass  11: suminf.    2.42594 (10) obj. -12.8871 iterations 16
Cbc0038I Pass  12: suminf.    1.93218 (9) obj. -12.8871 iterations 4
Cbc0038I Pass  13: suminf.    2.04401 (6) obj. -12.8871 iterations 8
Cbc0038I Pass  14: suminf.    1.76954 (5) obj. -12.8871 iterations 3
Cbc0038I Pass  15: suminf.    1.03863 (5) obj. -12.8871 iterations 7
Cbc0038I Pass  16: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  17: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  18: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  19: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I Pass  20: suminf.    1.76954 (5) obj. -12.8871 iterations 0
Cbc0038I Pass  21: suminf.    1.03863 (5) obj. -12.8871 iterations 6
Cbc0038I Pass  22: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  23: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  24: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  25: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I Pass  26: suminf.    1.76954 (5) obj. -12.8871 iterations 0
Cbc0038I Pass  27: suminf.    1.03863 (5) obj. -12.8871 iterations 7
Cbc0038I Pass  28: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  29: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  30: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  31: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -10.084 - took 0.07 seconds
Cbc0012I Integer solution of -10.084026 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 80 rows 46 columns
Cbc0031I 25 added rows had average density of 52.04
Cbc0013I At root node, 25 cuts changed objective from -38.113922 to -31.125959 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14542 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1977 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.084026 best solution, best possible -31.125959 (1.01 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 35 rows 25 columns
Cbc0012I Integer solution of -10.521466 found by RINS after 9573 iterations and 42 nodes (1.31 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 34 rows 24 columns
Cbc0001I Search completed - best objective -10.521466, took 11964 iterations and 140 nodes (1.49 seconds)
Cbc0032I Strong branching done 1394 times (24653 iterations), fathomed 11 nodes and fixed 41 variables
Cbc0035I Maximum depth 36, 136 variables fixed on reduced cost
Total time (CPU seconds):       1.45   (Wallclock seconds):       1.50

