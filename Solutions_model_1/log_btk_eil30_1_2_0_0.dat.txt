Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-10) rows, 30 (-2) columns and 159 (-18) elements
Clp1000I sum of infeasibilities 0.000562818 - average 1.06192e-05, 3 fixed columns
Coin0506I Presolve 44 (-9) rows, 26 (-4) columns and 133 (-26) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Coin0511I After Postsolve, objective 68.651143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Coin0511I After Postsolve, objective 68.651143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.6511432 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 30 columns (29 integer (29 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.62107
Cbc0038I Solution found of -5.43272
Cbc0038I Relaxing continuous gives -5.43272
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -5.43272 to -20.1463 (0.04 seconds)
Cbc0038I Round again with cutoff of -24.9969
Cbc0038I Pass   1: suminf.    1.28618 (5) obj. -24.9969 iterations 25
Cbc0038I Pass   2: suminf.    0.91603 (4) obj. -24.9969 iterations 7
Cbc0038I Pass   3: suminf.    0.68748 (4) obj. -24.9969 iterations 3
Cbc0038I Pass   4: suminf.    1.62946 (5) obj. -24.9969 iterations 4
Cbc0038I Pass   5: suminf.    0.91603 (4) obj. -24.9969 iterations 1
Cbc0038I Pass   6: suminf.    2.88668 (10) obj. -24.9969 iterations 12
Cbc0038I Pass   7: suminf.    2.00401 (9) obj. -24.9969 iterations 5
Cbc0038I Pass   8: suminf.    1.19717 (6) obj. -24.9969 iterations 3
Cbc0038I Pass   9: suminf.    0.86598 (6) obj. -24.9969 iterations 2
Cbc0038I Pass  10: suminf.    1.18244 (5) obj. -24.9969 iterations 12
Cbc0038I Pass  11: suminf.    1.16905 (5) obj. -24.9969 iterations 1
Cbc0038I Pass  12: suminf.    1.22230 (3) obj. -24.9969 iterations 7
Cbc0038I Pass  13: suminf.    0.94962 (4) obj. -24.9969 iterations 2
Cbc0038I Pass  14: suminf.    0.94962 (4) obj. -24.9969 iterations 0
Cbc0038I Pass  15: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  16: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  17: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  18: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  19: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  20: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  21: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  22: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  23: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  24: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  25: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  26: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  27: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  28: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  29: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  30: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -20.1463 - took 0.06 seconds
Cbc0012I Integer solution of -20.14628 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 20 columns
Cbc0031I 13 added rows had average density of 16.076923
Cbc0013I At root node, 13 cuts changed objective from -68.651143 to -39.206679 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2371 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 919 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0012I Integer solution of -20.52107 found by rounding after 3452 iterations and 10 nodes (0.46 seconds)
Cbc0001I Search completed - best objective -20.52106999999999, took 3642 iterations and 20 nodes (0.47 seconds)
Cbc0032I Strong branching done 274 times (4036 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.47

