Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 374 (-153) rows, 197 (-67) columns and 1123 (-422) elements
Clp1000I sum of infeasibilities 2.81994e-06 - average 7.53995e-09, 190 fixed columns
Coin0506I Presolve 9 (-365) rows, 7 (-190) columns and 26 (-1097) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 193451.34
Clp0000I Optimal - objective value 193451.34
Coin0511I After Postsolve, objective 193451.34, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14479848 - largest nonzero change 0 ( 0%) - largest zero change 2.9961237e-05
Clp0000I Optimal - objective value 193451.34
Clp0000I Optimal - objective value 193451.34
Clp0000I Optimal - objective value 193451.34
Coin0511I After Postsolve, objective 193451.34, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193451.3426 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 374 rows, 197 columns (196 integer (196 of which binary)) and 1123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.478%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.28272
Cbc0038I Pass   1: suminf.    0.56437 (3) obj. -187299 iterations 31
Cbc0038I Pass   2: suminf.    0.56437 (3) obj. -187299 iterations 0
Cbc0038I Solution found of -115620
Cbc0038I Relaxing continuous gives -115635
Cbc0038I Rounding solution of -147346 is better than previous of -115635

Cbc0038I Before mini branch and bound, 187 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 197 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -147346 to -181928 (0.02 seconds)
Cbc0038I Round again with cutoff of -183080
Cbc0038I Reduced cost fixing fixed 76 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.56437 (3) obj. -187299 iterations 0
Cbc0038I Pass   4: suminf.    0.56437 (3) obj. -187299 iterations 0
Cbc0038I Pass   5: suminf.    0.04181 (2) obj. -183080 iterations 22
Cbc0038I Pass   6: suminf.    0.04181 (2) obj. -183080 iterations 0
Cbc0038I Pass   7: suminf.    0.85350 (7) obj. -183080 iterations 37
Cbc0038I Pass   8: suminf.    0.80704 (8) obj. -183080 iterations 17
Cbc0038I Pass   9: suminf.    0.95147 (3) obj. -183080 iterations 40
Cbc0038I Pass  10: suminf.    0.95147 (3) obj. -183080 iterations 0
Cbc0038I Pass  11: suminf.    1.00536 (3) obj. -184027 iterations 21
Cbc0038I Pass  12: suminf.    2.55617 (7) obj. -183080 iterations 19
Cbc0038I Pass  13: suminf.    1.46274 (6) obj. -183080 iterations 13
Cbc0038I Pass  14: suminf.    1.29270 (7) obj. -183080 iterations 10
Cbc0038I Pass  15: suminf.    0.89382 (5) obj. -183080 iterations 37
Cbc0038I Pass  16: suminf.    0.89382 (5) obj. -183080 iterations 0
Cbc0038I Pass  17: suminf.    0.70142 (5) obj. -183080 iterations 25
Cbc0038I Pass  18: suminf.    0.59757 (4) obj. -183080 iterations 4
Cbc0038I Pass  19: suminf.    1.83748 (4) obj. -183080 iterations 6
Cbc0038I Pass  20: suminf.    0.70142 (5) obj. -183080 iterations 5
Cbc0038I Pass  21: suminf.    0.81526 (5) obj. -183080 iterations 15
Cbc0038I Pass  22: suminf.    0.56437 (3) obj. -187299 iterations 19
Cbc0038I Pass  23: suminf.    0.04181 (2) obj. -183080 iterations 19
Cbc0038I Pass  24: suminf.    0.04181 (2) obj. -183080 iterations 0
Cbc0038I Pass  25: suminf.    0.56437 (3) obj. -187299 iterations 17
Cbc0038I Pass  26: suminf.    2.33473 (9) obj. -183080 iterations 25
Cbc0038I Pass  27: suminf.    0.04181 (2) obj. -183080 iterations 31
Cbc0038I Pass  28: suminf.    1.45584 (7) obj. -183080 iterations 28
Cbc0038I Pass  29: suminf.    0.25012 (1) obj. -183080 iterations 25
Cbc0038I Pass  30: suminf.    0.14286 (1) obj. -188838 iterations 4
Cbc0038I Pass  31: suminf.    0.51220 (3) obj. -183080 iterations 11
Cbc0038I Pass  32: suminf.    0.43160 (3) obj. -183080 iterations 10
Cbc0038I Rounding solution of -187084 is better than previous of -181928

Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 197 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -188357
Cbc0038I Reduced cost fixing fixed 127 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.71197 (8) obj. -188357 iterations 3
Cbc0038I Pass  33: suminf.    0.71197 (8) obj. -188357 iterations 12
Cbc0038I Pass  34: suminf.    1.56282 (4) obj. -188357 iterations 32
Cbc0038I Pass  35: suminf.    1.24773 (4) obj. -188357 iterations 26
Cbc0038I Pass  36: suminf.    1.21799 (5) obj. -188357 iterations 4
Cbc0038I Pass  37: suminf.    2.54914 (6) obj. -188357 iterations 8
Cbc0038I Pass  38: suminf.    0.71197 (8) obj. -188357 iterations 7
Cbc0038I Pass  39: suminf.    0.71197 (8) obj. -188357 iterations 10
Cbc0038I Pass  40: suminf.    1.56282 (4) obj. -188357 iterations 31
Cbc0038I Pass  41: suminf.    1.24773 (4) obj. -188357 iterations 26
Cbc0038I Pass  42: suminf.    1.21799 (5) obj. -188357 iterations 4
Cbc0038I Pass  43: suminf.    2.54914 (6) obj. -188357 iterations 8
Cbc0038I Pass  44: suminf.    0.71197 (8) obj. -188357 iterations 7
Cbc0038I Pass  45: suminf.    0.71197 (8) obj. -188357 iterations 10
Cbc0038I Pass  46: suminf.    1.56282 (4) obj. -188357 iterations 31
Cbc0038I Pass  47: suminf.    1.24773 (4) obj. -188357 iterations 26
Cbc0038I Pass  48: suminf.    1.21799 (5) obj. -188357 iterations 4
Cbc0038I Pass  49: suminf.    2.54914 (6) obj. -188357 iterations 8
Cbc0038I Pass  50: suminf.    0.71197 (8) obj. -188357 iterations 7
Cbc0038I Pass  51: suminf.    0.71197 (8) obj. -188357 iterations 10
Cbc0038I Pass  52: suminf.    1.56282 (4) obj. -188357 iterations 31
Cbc0038I Pass  53: suminf.    1.24773 (4) obj. -188357 iterations 26
Cbc0038I Pass  54: suminf.    1.21799 (5) obj. -188357 iterations 4
Cbc0038I Pass  55: suminf.    2.54914 (6) obj. -188357 iterations 8
Cbc0038I Pass  56: suminf.    0.71197 (8) obj. -188357 iterations 7
Cbc0038I Pass  57: suminf.    0.71197 (8) obj. -188357 iterations 10
Cbc0038I Pass  58: suminf.    1.56282 (4) obj. -188357 iterations 31
Cbc0038I Pass  59: suminf.    1.24773 (4) obj. -188357 iterations 26
Cbc0038I Pass  60: suminf.    1.21799 (5) obj. -188357 iterations 4
Cbc0038I Pass  61: suminf.    2.54914 (6) obj. -188357 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 187 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 197 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -187084 - took 0.05 seconds
Cbc0012I Integer solution of -187083.77 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 374 rows 197 columns, reduced to 14 rows 11 columns
Cbc0031I 5 added rows had average density of 17.4
Cbc0013I At root node, 5 cuts changed objective from -193451.34 to -189872.84 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 34 row cuts average 2.8 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 190.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0001I Search completed - best objective -187083.77, took 186 iterations and 2 nodes (0.43 seconds)
Cbc0032I Strong branching done 44 times (306 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 120 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.44

