Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 177 (-28) rows, 101 (-2) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 4.24024e-05 - average 2.39562e-07, 13 fixed columns
Coin0506I Presolve 149 (-28) rows, 87 (-14) columns and 464 (-84) elements
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 0.26475287 - largest nonzero change 0 ( 0%) - largest zero change 1.9643641e-05
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Coin0511I After Postsolve, objective 44.811612, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Clp0000I Optimal - objective value 44.811612
Coin0511I After Postsolve, objective 44.811612, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.81161214 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 177 rows, 101 columns (100 integer (100 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.854%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 13.9633
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.0357 iterations 93
Cbc0038I Solution found of 11.0357
Cbc0038I Relaxing continuous gives 11.0357
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 105 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 11.0357 to -16.143 (0.06 seconds)
Cbc0038I Round again with cutoff of -19.01
Cbc0038I Pass   2: suminf.    4.02607 (16) obj. -19.01 iterations 24
Cbc0038I Pass   3: suminf.    2.46504 (10) obj. -19.01 iterations 10
Cbc0038I Pass   4: suminf.    2.46504 (10) obj. -19.01 iterations 0
Cbc0038I Pass   5: suminf.    3.42571 (9) obj. -19.01 iterations 13
Cbc0038I Pass   6: suminf.    2.73669 (8) obj. -19.01 iterations 2
Cbc0038I Pass   7: suminf.    2.38201 (7) obj. -19.01 iterations 1
Cbc0038I Pass   8: suminf.    1.92984 (7) obj. -19.01 iterations 13
Cbc0038I Pass   9: suminf.    1.92984 (7) obj. -19.01 iterations 0
Cbc0038I Pass  10: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  11: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  12: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  13: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  14: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  15: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  16: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  17: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  18: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  19: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  20: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  21: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  22: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  23: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  24: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  25: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  26: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I Pass  27: suminf.    1.93634 (6) obj. -19.01 iterations 1
Cbc0038I Pass  28: suminf.    1.98564 (7) obj. -19.01 iterations 9
Cbc0038I Pass  29: suminf.    1.92984 (7) obj. -19.01 iterations 1
Cbc0038I Pass  30: suminf.    2.45837 (7) obj. -19.01 iterations 13
Cbc0038I Pass  31: suminf.    2.05920 (6) obj. -19.01 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 106 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -16.143 to -16.2469 (0.11 seconds)
Cbc0038I Round again with cutoff of -24.1703
Cbc0038I Pass  31: suminf.    5.15096 (21) obj. -24.1703 iterations 3
Cbc0038I Pass  32: suminf.    3.51325 (12) obj. -24.1703 iterations 17
Cbc0038I Pass  33: suminf.    3.51325 (12) obj. -24.1703 iterations 0
Cbc0038I Pass  34: suminf.    4.56419 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  35: suminf.    3.14391 (9) obj. -24.1703 iterations 6
Cbc0038I Pass  36: suminf.    2.97084 (8) obj. -24.1703 iterations 8
Cbc0038I Pass  37: suminf.    3.58862 (11) obj. -24.1703 iterations 12
Cbc0038I Pass  38: suminf.    2.96855 (10) obj. -24.1703 iterations 4
Cbc0038I Pass  39: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  40: suminf.    3.67795 (11) obj. -24.1703 iterations 14
Cbc0038I Pass  41: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  42: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  43: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  44: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  45: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  46: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  47: suminf.    3.67795 (11) obj. -24.1703 iterations 14
Cbc0038I Pass  48: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  49: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  50: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  51: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  52: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  53: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I Pass  54: suminf.    3.67795 (11) obj. -24.1703 iterations 16
Cbc0038I Pass  55: suminf.    3.08444 (11) obj. -24.1703 iterations 6
Cbc0038I Pass  56: suminf.    4.79601 (12) obj. -24.1703 iterations 14
Cbc0038I Pass  57: suminf.    3.50691 (10) obj. -24.1703 iterations 11
Cbc0038I Pass  58: suminf.    3.12751 (9) obj. -24.1703 iterations 16
Cbc0038I Pass  59: suminf.    2.96855 (10) obj. -24.1703 iterations 6
Cbc0038I Pass  60: suminf.    2.96855 (10) obj. -24.1703 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 106 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -16.2469 - took 0.16 seconds
Cbc0012I Integer solution of -16.24692 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 105 rows 63 columns
Cbc0031I 42 added rows had average density of 66.404762
Cbc0013I At root node, 42 cuts changed objective from -44.811612 to -36.762744 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24849 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3675 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.195 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.24692 best solution, best possible -36.762744 (1.97 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 99 rows 61 columns
Cbc0016I Integer solution of -16.32655 found by strong branching after 14400 iterations and 88 nodes (2.52 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 2 rows 6 columns
Cbc0016I Integer solution of -16.66131 found by strong branching after 15188 iterations and 147 nodes (2.62 seconds)
Cbc0010I After 161 nodes, 14 on tree, -16.66131 best solution, best possible -36.762744 (2.67 seconds)
Cbc0001I Search completed - best objective -16.66131, took 17378 iterations and 200 nodes (2.75 seconds)
Cbc0032I Strong branching done 1618 times (31014 iterations), fathomed 29 nodes and fixed 95 variables
Cbc0035I Maximum depth 40, 671 variables fixed on reduced cost
Total time (CPU seconds):       2.68   (Wallclock seconds):       2.77

