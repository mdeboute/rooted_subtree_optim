Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 58 (-20) columns and 315 (-138) elements
Clp1000I sum of infeasibilities 5.35115e-05 - average 5.19529e-07, 47 fixed columns
Coin0506I Presolve 7 (-96) rows, 5 (-53) columns and 18 (-297) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Coin0511I After Postsolve, objective 16814.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Coin0511I After Postsolve, objective 16814.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16814.4225 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 58 columns (57 integer (57 of which binary)) and 390 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.448%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.86089
Cbc0038I Pass   1: suminf.    0.82242 (3) obj. -16431.2 iterations 8
Cbc0038I Solution found of -5867.15
Cbc0038I Relaxing continuous gives -5867.15
Cbc0038I Rounding solution of -13134.2 is better than previous of -5867.15

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -13502.3
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.82242 (3) obj. -16431.2 iterations 0
Cbc0038I Pass   3: suminf.    0.55209 (2) obj. -13502.3 iterations 2
Cbc0038I Pass   4: suminf.    0.05405 (1) obj. -16088 iterations 2
Cbc0038I Pass   5: suminf.    0.48342 (1) obj. -13502.3 iterations 1
Cbc0038I Pass   6: suminf.    1.53706 (6) obj. -13502.3 iterations 13
Cbc0038I Pass   7: suminf.    1.53706 (6) obj. -13502.3 iterations 3
Cbc0038I Pass   8: suminf.    0.17955 (1) obj. -13502.3 iterations 12
Cbc0038I Solution found of -14156.6
Cbc0038I Relaxing continuous gives -14156.6
Cbc0038I Rounding solution of -14208.6 is better than previous of -14156.6

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -14208.6 to -15151.1 (0.03 seconds)
Cbc0038I Round again with cutoff of -15483.7
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.82242 (3) obj. -16431.2 iterations 0
Cbc0038I Pass  10: suminf.    0.17633 (2) obj. -15483.7 iterations 2
Cbc0038I Pass  11: suminf.    0.05405 (1) obj. -16088 iterations 2
Cbc0038I Pass  12: suminf.    0.15439 (1) obj. -15483.7 iterations 1
Cbc0038I Pass  13: suminf.    1.23972 (5) obj. -15483.7 iterations 7
Cbc0038I Pass  14: suminf.    0.57377 (2) obj. -16040.5 iterations 6
Cbc0038I Pass  15: suminf.    0.70365 (2) obj. -15483.7 iterations 2
Cbc0038I Pass  16: suminf.    1.20129 (4) obj. -15483.7 iterations 5
Cbc0038I Solution found of -15550
Cbc0038I Relaxing continuous gives -15550
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -15929.3
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 4
Cbc0038I Pass  17: suminf.    0.56784 (2) obj. -16547.2 iterations 6
Cbc0038I Pass  18: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass  19: suminf.    0.08040 (1) obj. -15929.3 iterations 1
Cbc0038I Pass  20: suminf.    0.44040 (2) obj. -16136.1 iterations 10
Cbc0038I Pass  21: suminf.    0.44040 (2) obj. -16136.1 iterations 2
Cbc0038I Pass  22: suminf.    1.27988 (3) obj. -15929.3 iterations 8
Cbc0038I Pass  23: suminf.    0.61861 (2) obj. -15929.3 iterations 3
Cbc0038I Pass  24: suminf.    0.47508 (2) obj. -16109.4 iterations 4
Cbc0038I Pass  25: suminf.    1.41983 (3) obj. -15929.3 iterations 6
Cbc0038I Pass  26: suminf.    1.11383 (3) obj. -15929.3 iterations 6
Cbc0038I Pass  27: suminf.    0.48465 (3) obj. -16464.2 iterations 5
Cbc0038I Pass  28: suminf.    0.48465 (3) obj. -16464.2 iterations 0
Cbc0038I Pass  29: suminf.    0.82844 (3) obj. -15929.3 iterations 9
Cbc0038I Pass  30: suminf.    0.75050 (3) obj. -15929.3 iterations 3
Cbc0038I Pass  31: suminf.    0.61039 (2) obj. -16403.6 iterations 7
Cbc0038I Pass  32: suminf.    0.61039 (2) obj. -16403.6 iterations 0
Cbc0038I Pass  33: suminf.    0.10409 (1) obj. -15929.3 iterations 3
Cbc0038I Pass  34: suminf.    0.10409 (1) obj. -15929.3 iterations 0
Cbc0038I Pass  35: suminf.    1.06042 (3) obj. -15929.3 iterations 7
Cbc0038I Pass  36: suminf.    1.11383 (3) obj. -15929.3 iterations 7
Cbc0038I Pass  37: suminf.    0.48465 (3) obj. -16464.2 iterations 6
Cbc0038I Pass  38: suminf.    0.48465 (3) obj. -16464.2 iterations 0
Cbc0038I Pass  39: suminf.    0.82844 (3) obj. -15929.3 iterations 10
Cbc0038I Pass  40: suminf.    0.75050 (3) obj. -15929.3 iterations 3
Cbc0038I Pass  41: suminf.    0.61039 (2) obj. -16403.6 iterations 8
Cbc0038I Pass  42: suminf.    0.61039 (2) obj. -16403.6 iterations 0
Cbc0038I Pass  43: suminf.    0.10409 (1) obj. -15929.3 iterations 3
Cbc0038I Pass  44: suminf.    0.10409 (1) obj. -15929.3 iterations 0
Cbc0038I Pass  45: suminf.    0.57468 (3) obj. -15929.3 iterations 5
Cbc0038I Pass  46: suminf.    0.10409 (1) obj. -15929.3 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -15550 - took 0.02 seconds
Cbc0012I Integer solution of -15550 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 100 rows 58 columns, reduced to 4 rows 5 columns
Cbc0031I 7 added rows had average density of 9
Cbc0013I At root node, 7 cuts changed objective from -16814.423 to -16202.59 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 46 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 55.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15550, took 91 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 16 times (64 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

