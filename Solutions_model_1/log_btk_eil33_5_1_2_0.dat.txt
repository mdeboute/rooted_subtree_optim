Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 33 (-2) columns and 166 (-29) elements
Clp1000I sum of infeasibilities 2.50419e-05 - average 4.63738e-07, 3 fixed columns
Coin0506I Presolve 48 (-6) rows, 30 (-3) columns and 148 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Coin0511I After Postsolve, objective 70.769833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Coin0511I After Postsolve, objective 70.769833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.76983316 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 54 rows, 33 columns (32 integer (32 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.352%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.12074
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.2203 iterations 28
Cbc0038I Solution found of -11.2203
Cbc0038I Relaxing continuous gives -11.2203
Cbc0038I Rounding solution of -12.4646 is better than previous of -11.2203

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 33 columns, reduced to 47 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -12.4646 to -23.4771 (0.03 seconds)
Cbc0038I Round again with cutoff of -28.2065
Cbc0038I Pass   2: suminf.    1.00150 (5) obj. -28.2065 iterations 6
Cbc0038I Pass   3: suminf.    0.87965 (5) obj. -28.2065 iterations 8
Cbc0038I Pass   4: suminf.    0.86561 (4) obj. -28.2065 iterations 1
Cbc0038I Pass   5: suminf.    1.00466 (5) obj. -28.2065 iterations 8
Cbc0038I Pass   6: suminf.    1.75442 (7) obj. -28.2065 iterations 13
Cbc0038I Pass   7: suminf.    1.14352 (4) obj. -28.2065 iterations 7
Cbc0038I Pass   8: suminf.    1.02079 (5) obj. -28.2065 iterations 5
Cbc0038I Pass   9: suminf.    0.99195 (5) obj. -28.2065 iterations 2
Cbc0038I Pass  10: suminf.    1.12104 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  11: suminf.    1.11753 (5) obj. -28.2065 iterations 2
Cbc0038I Pass  12: suminf.    1.62518 (5) obj. -28.2065 iterations 5
Cbc0038I Pass  13: suminf.    1.87262 (6) obj. -28.2065 iterations 5
Cbc0038I Pass  14: suminf.    1.45918 (4) obj. -28.2065 iterations 3
Cbc0038I Pass  15: suminf.    0.71542 (7) obj. -28.2065 iterations 9
Cbc0038I Pass  16: suminf.    1.72265 (6) obj. -28.2065 iterations 9
Cbc0038I Pass  17: suminf.    1.27315 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  18: suminf.    1.10528 (5) obj. -28.2065 iterations 5
Cbc0038I Pass  19: suminf.    0.89167 (4) obj. -28.2065 iterations 1
Cbc0038I Pass  20: suminf.    1.31458 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  21: suminf.    1.08129 (3) obj. -28.2065 iterations 15
Cbc0038I Pass  22: suminf.    0.74192 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  23: suminf.    1.06470 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  24: suminf.    1.04739 (3) obj. -28.2065 iterations 1
Cbc0038I Pass  25: suminf.    1.00713 (3) obj. -28.2065 iterations 3
Cbc0038I Pass  26: suminf.    0.61496 (2) obj. -28.2065 iterations 1
Cbc0038I Pass  27: suminf.    1.10532 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  28: suminf.    1.03604 (6) obj. -28.2065 iterations 3
Cbc0038I Pass  29: suminf.    0.87434 (4) obj. -28.2065 iterations 11
Cbc0038I Pass  30: suminf.    1.09984 (4) obj. -28.2065 iterations 3
Cbc0038I Pass  31: suminf.    1.63271 (8) obj. -28.2065 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 33 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.4771 - took 0.06 seconds
Cbc0012I Integer solution of -23.47712 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 16 added rows had average density of 24.0625
Cbc0013I At root node, 16 cuts changed objective from -70.769833 to -51.744807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3213 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 789 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23.47711999999999, took 3926 iterations and 34 nodes (0.42 seconds)
Cbc0032I Strong branching done 398 times (5020 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 10, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.40   (Wallclock seconds):       0.43

