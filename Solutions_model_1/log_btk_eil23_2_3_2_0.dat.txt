Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 1.94258e-05 - average 5.11207e-07, 4 fixed columns
Coin0506I Presolve 20 (-18) rows, 18 (-4) columns and 68 (-44) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Coin0511I After Postsolve, objective 124.08179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Coin0511I After Postsolve, objective 124.08179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.0817863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.747%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.69781
Cbc0038I Pass   1: suminf.    0.85769 (2) obj. 11.0016 iterations 8
Cbc0038I Pass   2: suminf.    0.37636 (1) obj. 15.9521 iterations 1
Cbc0038I Solution found of 29.9404
Cbc0038I Relaxing continuous gives 29.9404
Cbc0038I Rounding solution of 28.1543 is better than previous of 29.9404

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 28.1543 to -62.7961 (0.01 seconds)
Cbc0038I Round again with cutoff of -68.9248
Cbc0038I Pass   3: suminf.    1.53839 (8) obj. -68.9248 iterations 6
Cbc0038I Pass   4: suminf.    1.79447 (5) obj. -68.9248 iterations 12
Cbc0038I Pass   5: suminf.    1.79447 (5) obj. -68.9248 iterations 0
Cbc0038I Pass   6: suminf.    1.50038 (4) obj. -68.9248 iterations 5
Cbc0038I Pass   7: suminf.    1.41079 (4) obj. -68.9248 iterations 5
Cbc0038I Pass   8: suminf.    1.79447 (5) obj. -68.9248 iterations 3
Cbc0038I Pass   9: suminf.    1.96801 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  10: suminf.    1.82495 (6) obj. -68.9248 iterations 2
Cbc0038I Pass  11: suminf.    2.20172 (6) obj. -68.9248 iterations 7
Cbc0038I Pass  12: suminf.    2.17794 (6) obj. -68.9248 iterations 1
Cbc0038I Pass  13: suminf.    2.04779 (5) obj. -68.9248 iterations 3
Cbc0038I Pass  14: suminf.    1.55501 (5) obj. -68.9248 iterations 3
Cbc0038I Pass  15: suminf.    1.55084 (5) obj. -68.9248 iterations 1
Cbc0038I Pass  16: suminf.    2.04779 (5) obj. -68.9248 iterations 2
Cbc0038I Pass  17: suminf.    1.34100 (5) obj. -68.9248 iterations 6
Cbc0038I Pass  18: suminf.    0.88009 (4) obj. -68.9248 iterations 3
Cbc0038I Pass  19: suminf.    1.46650 (4) obj. -68.9248 iterations 5
Cbc0038I Pass  20: suminf.    1.47291 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  21: suminf.    1.51174 (4) obj. -68.9248 iterations 4
Cbc0038I Pass  22: suminf.    1.47702 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  23: suminf.    1.97940 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  24: suminf.    1.97940 (6) obj. -68.9248 iterations 0
Cbc0038I Pass  25: suminf.    0.88009 (4) obj. -68.9248 iterations 6
Cbc0038I Pass  26: suminf.    1.46650 (4) obj. -68.9248 iterations 5
Cbc0038I Pass  27: suminf.    1.47291 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  28: suminf.    1.51174 (4) obj. -68.9248 iterations 4
Cbc0038I Pass  29: suminf.    1.47702 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  30: suminf.    1.97940 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  31: suminf.    1.97940 (6) obj. -68.9248 iterations 0
Cbc0038I Pass  32: suminf.    0.88009 (4) obj. -68.9248 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -62.7961 to -64.5822 (0.02 seconds)
Cbc0038I Round again with cutoff of -79.9562
Cbc0038I Pass  32: suminf.    1.74321 (8) obj. -79.9562 iterations 0
Cbc0038I Pass  33: suminf.    1.79155 (5) obj. -79.9562 iterations 12
Cbc0038I Pass  34: suminf.    1.76149 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  35: suminf.    2.22438 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  36: suminf.    1.25434 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  37: suminf.    1.20168 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  38: suminf.    1.32026 (5) obj. -79.9562 iterations 3
Cbc0038I Pass  39: suminf.    1.27509 (3) obj. -79.9562 iterations 2
Cbc0038I Pass  40: suminf.    1.15448 (5) obj. -79.9562 iterations 4
Cbc0038I Pass  41: suminf.    1.13847 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  42: suminf.    2.00412 (8) obj. -79.9562 iterations 9
Cbc0038I Pass  43: suminf.    1.35634 (6) obj. -79.9562 iterations 4
Cbc0038I Pass  44: suminf.    1.29985 (4) obj. -79.9562 iterations 7
Cbc0038I Pass  45: suminf.    1.00667 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  46: suminf.    1.69455 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  47: suminf.    1.69455 (5) obj. -79.9562 iterations 0
Cbc0038I Pass  48: suminf.    1.76149 (5) obj. -79.9562 iterations 4
Cbc0038I Pass  49: suminf.    1.76149 (5) obj. -79.9562 iterations 0
Cbc0038I Pass  50: suminf.    2.22438 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  51: suminf.    1.93579 (6) obj. -79.9562 iterations 5
Cbc0038I Pass  52: suminf.    1.92026 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  53: suminf.    1.57978 (6) obj. -79.9562 iterations 2
Cbc0038I Pass  54: suminf.    1.29974 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  55: suminf.    1.00961 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  56: suminf.    0.87746 (4) obj. -79.9562 iterations 5
Cbc0038I Pass  57: suminf.    0.85773 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  58: suminf.    1.16383 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  59: suminf.    1.10893 (5) obj. -79.9562 iterations 1
Cbc0038I Pass  60: suminf.    0.85720 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  61: suminf.    2.49780 (8) obj. -79.9562 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -64.5822 - took 0.03 seconds
Cbc0012I Integer solution of -64.58216 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 11 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 6.25
Cbc0013I At root node, 10 cuts changed objective from -124.08179 to -63.927045 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 5.8 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 107 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.58215999999999, took 186 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.04

