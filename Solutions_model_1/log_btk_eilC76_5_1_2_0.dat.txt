Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 0.000101693 - average 7.36902e-07, 10 fixed columns
Coin0506I Presolve 118 (-20) rows, 65 (-10) columns and 358 (-60) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 0.29660135 - largest nonzero change 0 ( 0%) - largest zero change 2.8436704e-05
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Coin0511I After Postsolve, objective 34.674461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Coin0511I After Postsolve, objective 34.674461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.67446135 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.68735
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.78937 iterations 55
Cbc0038I Solution found of 5.78937
Cbc0038I Relaxing continuous gives 5.78937
Cbc0038I Rounding solution of 0.901483 is better than previous of 5.78937

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 0.901483 to -5.26076 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.20222
Cbc0038I Pass   2: suminf.    1.83334 (17) obj. -8.20222 iterations 23
Cbc0038I Pass   3: suminf.    1.50991 (47) obj. -8.20222 iterations 27
Cbc0038I Pass   4: suminf.    0.81896 (4) obj. -8.20222 iterations 46
Cbc0038I Pass   5: suminf.    0.81896 (4) obj. -8.20222 iterations 0
Cbc0038I Pass   6: suminf.    1.20001 (5) obj. -8.20222 iterations 9
Cbc0038I Pass   7: suminf.    1.20001 (5) obj. -8.20222 iterations 1
Cbc0038I Pass   8: suminf.    1.36321 (4) obj. -8.20222 iterations 5
Cbc0038I Pass   9: suminf.    1.36321 (4) obj. -8.20222 iterations 0
Cbc0038I Pass  10: suminf.    0.86550 (3) obj. -8.20222 iterations 2
Cbc0038I Pass  11: suminf.    0.86550 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  12: suminf.    0.82096 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  13: suminf.    0.82096 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  14: suminf.    0.86550 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  15: suminf.    1.56879 (6) obj. -8.20222 iterations 18
Cbc0038I Pass  16: suminf.    1.53965 (7) obj. -8.20222 iterations 5
Cbc0038I Pass  17: suminf.    1.65036 (6) obj. -8.20222 iterations 12
Cbc0038I Pass  18: suminf.    1.53988 (4) obj. -8.20222 iterations 2
Cbc0038I Pass  19: suminf.    1.02805 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  20: suminf.    1.02805 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  21: suminf.    0.96525 (3) obj. -8.20222 iterations 2
Cbc0038I Pass  22: suminf.    0.96525 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  23: suminf.    1.02805 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  24: suminf.    2.10314 (8) obj. -8.20222 iterations 16
Cbc0038I Pass  25: suminf.    0.89070 (5) obj. -8.20222 iterations 15
Cbc0038I Pass  26: suminf.    0.83008 (5) obj. -8.20222 iterations 5
Cbc0038I Pass  27: suminf.    1.40612 (5) obj. -8.20222 iterations 12
Cbc0038I Pass  28: suminf.    1.29821 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  29: suminf.    0.97868 (3) obj. -8.20222 iterations 4
Cbc0038I Pass  30: suminf.    1.29821 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  31: suminf.    1.79026 (9) obj. -8.20222 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 112 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -5.26076 to -7.94305 (0.12 seconds)
Cbc0038I Round again with cutoff of -13.4967
Cbc0038I Pass  31: suminf.    3.28241 (17) obj. -13.4967 iterations 0
Cbc0038I Pass  32: suminf.    1.41644 (7) obj. -13.4967 iterations 23
Cbc0038I Pass  33: suminf.    1.24414 (7) obj. -13.4967 iterations 2
Cbc0038I Pass  34: suminf.    2.22307 (6) obj. -13.4967 iterations 9
Cbc0038I Pass  35: suminf.    1.95530 (5) obj. -13.4967 iterations 2
Cbc0038I Pass  36: suminf.    1.73533 (7) obj. -13.4967 iterations 4
Cbc0038I Pass  37: suminf.    2.87466 (7) obj. -13.4967 iterations 8
Cbc0038I Pass  38: suminf.    1.20132 (6) obj. -13.4967 iterations 10
Cbc0038I Pass  39: suminf.    1.19479 (5) obj. -13.4967 iterations 4
Cbc0038I Pass  40: suminf.    1.90670 (7) obj. -13.4967 iterations 7
Cbc0038I Pass  41: suminf.    1.89287 (6) obj. -13.4967 iterations 1
Cbc0038I Pass  42: suminf.    1.25401 (6) obj. -13.4967 iterations 4
Cbc0038I Pass  43: suminf.    2.17457 (6) obj. -13.4967 iterations 21
Cbc0038I Pass  44: suminf.    1.48663 (5) obj. -13.4967 iterations 10
Cbc0038I Pass  45: suminf.    1.89173 (5) obj. -13.4967 iterations 9
Cbc0038I Pass  46: suminf.    1.84214 (6) obj. -13.4967 iterations 1
Cbc0038I Pass  47: suminf.    2.18304 (6) obj. -13.4967 iterations 2
Cbc0038I Pass  48: suminf.    1.83892 (6) obj. -13.4967 iterations 7
Cbc0038I Pass  49: suminf.    1.82241 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  50: suminf.    1.46736 (4) obj. -13.4967 iterations 5
Cbc0038I Pass  51: suminf.    1.46244 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  52: suminf.    2.13211 (6) obj. -13.4967 iterations 5
Cbc0038I Pass  53: suminf.    2.13211 (6) obj. -13.4967 iterations 0
Cbc0038I Pass  54: suminf.    1.82241 (5) obj. -13.4967 iterations 6
Cbc0038I Pass  55: suminf.    1.82241 (5) obj. -13.4967 iterations 0
Cbc0038I Pass  56: suminf.    1.46736 (4) obj. -13.4967 iterations 5
Cbc0038I Pass  57: suminf.    1.46244 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  58: suminf.    2.13211 (6) obj. -13.4967 iterations 5
Cbc0038I Pass  59: suminf.    2.13211 (6) obj. -13.4967 iterations 0
Cbc0038I Pass  60: suminf.    1.82241 (5) obj. -13.4967 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -7.94305 - took 0.17 seconds
Cbc0012I Integer solution of -7.943045 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0031I 37 added rows had average density of 44.513514
Cbc0013I At root node, 37 cuts changed objective from -34.674461 to -26.497735 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14785 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2031 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.943045 best solution, best possible -26.497735 (1.12 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 52 rows 32 columns
Cbc0012I Integer solution of -8.0483 found by rounding after 12398 iterations and 79 nodes (1.52 seconds)
Cbc0001I Search completed - best objective -8.048299999999998, took 12559 iterations and 86 nodes (1.53 seconds)
Cbc0032I Strong branching done 1032 times (15561 iterations), fathomed 12 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 99 variables fixed on reduced cost
Total time (CPU seconds):       1.51   (Wallclock seconds):       1.54

