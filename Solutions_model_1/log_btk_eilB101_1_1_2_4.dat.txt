Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 174 (-31) rows, 99 (-4) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 1.68054e-05 - average 9.65825e-08, 13 fixed columns
Coin0506I Presolve 151 (-23) rows, 86 (-13) columns and 467 (-71) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 1.6774414 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Coin0511I After Postsolve, objective 35.544273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Clp0000I Optimal - objective value 35.544273
Coin0511I After Postsolve, objective 35.544273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.54427308 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 99 columns (98 integer (98 of which binary)) and 545 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.48055
Cbc0038I Solution found of 2.98866
Cbc0038I Relaxing continuous gives -4.33921
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 99 columns, reduced to 84 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -7.43812
Cbc0038I Pass   1: suminf.    0.60554 (43) obj. -7.43812 iterations 65
Cbc0038I Pass   2: suminf.    1.61191 (9) obj. -7.43812 iterations 49
Cbc0038I Pass   3: suminf.    1.42938 (6) obj. -7.43812 iterations 5
Cbc0038I Pass   4: suminf.    1.39847 (6) obj. -7.43812 iterations 20
Cbc0038I Pass   5: suminf.    1.22016 (3) obj. -7.43812 iterations 8
Cbc0038I Pass   6: suminf.    1.04281 (3) obj. -7.43812 iterations 1
Cbc0038I Pass   7: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass   8: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass   9: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  10: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  11: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  12: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  13: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  14: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  15: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  16: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  17: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  18: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  19: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  20: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  21: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  22: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  23: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I Pass  24: suminf.    1.17646 (4) obj. -7.43812 iterations 3
Cbc0038I Pass  25: suminf.    1.09137 (5) obj. -7.43812 iterations 1
Cbc0038I Pass  26: suminf.    1.69983 (5) obj. -7.43812 iterations 11
Cbc0038I Pass  27: suminf.    1.04281 (3) obj. -7.43812 iterations 3
Cbc0038I Pass  28: suminf.    1.16793 (4) obj. -7.43812 iterations 4
Cbc0038I Pass  29: suminf.    1.18071 (4) obj. -7.43812 iterations 1
Cbc0038I Pass  30: suminf.    1.77597 (5) obj. -7.43812 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 99 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -4.33921 - took 0.08 seconds
Cbc0012I Integer solution of -4.33921 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 173 rows 99 columns, reduced to 84 rows 48 columns
Cbc0031I 28 added rows had average density of 58.535714
Cbc0013I At root node, 28 cuts changed objective from -35.327404 to -29.402672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16874 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1923 row cuts average 98.6 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 97.7 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.33921 best solution, best possible -29.402672 (1.40 seconds)
Cbc0038I Full problem 173 rows 99 columns, reduced to 73 rows 44 columns
Cbc0001I Search completed - best objective -4.33921, took 15134 iterations and 100 nodes (1.98 seconds)
Cbc0032I Strong branching done 1130 times (23510 iterations), fathomed 3 nodes and fixed 41 variables
Cbc0035I Maximum depth 41, 238 variables fixed on reduced cost
Total time (CPU seconds):       1.92   (Wallclock seconds):       1.99

