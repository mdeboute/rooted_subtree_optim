Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 260 (-4) columns and 1503 (-42) elements
Clp1000I sum of infeasibilities 1.3421e-05 - average 2.64714e-08, 161 fixed columns
Coin0506I Presolve 182 (-325) rows, 99 (-161) columns and 544 (-959) elements
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.6286078 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Coin0511I After Postsolve, objective 230.10277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13475134 - largest nonzero change 0 ( 0%) - largest zero change 2.9764379e-05
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Clp0000I Optimal - objective value 230.10277
Coin0511I After Postsolve, objective 230.10277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 230.1027692 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 260 columns (259 integer (259 of which binary)) and 1503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.373%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 12.1685
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.4775 iterations 190
Cbc0038I Solution found of 10.4775
Cbc0038I Relaxing continuous gives 10.4775
Cbc0038I Rounding solution of -104.692 is better than previous of 10.4775

Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 96 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -104.692 to -138.423 (0.16 seconds)
Cbc0038I Round again with cutoff of -147.591
Cbc0038I Pass   2: suminf.    2.89114 (7) obj. -147.591 iterations 41
Cbc0038I Pass   3: suminf.    2.89114 (7) obj. -147.591 iterations 0
Cbc0038I Pass   4: suminf.    2.11551 (7) obj. -147.591 iterations 31
Cbc0038I Pass   5: suminf.    2.11551 (7) obj. -147.591 iterations 0
Cbc0038I Pass   6: suminf.    2.89114 (7) obj. -147.591 iterations 35
Cbc0038I Pass   7: suminf.    6.78986 (24) obj. -147.591 iterations 91
Cbc0038I Pass   8: suminf.    1.56285 (8) obj. -147.591 iterations 98
Cbc0038I Pass   9: suminf.    1.30334 (6) obj. -147.591 iterations 20
Cbc0038I Pass  10: suminf.    2.47232 (7) obj. -147.591 iterations 32
Cbc0038I Pass  11: suminf.    2.37726 (6) obj. -147.591 iterations 18
Cbc0038I Pass  12: suminf.    1.49290 (5) obj. -147.591 iterations 22
Cbc0038I Pass  13: suminf.    1.49290 (5) obj. -147.591 iterations 0
Cbc0038I Pass  14: suminf.    2.22859 (5) obj. -147.591 iterations 16
Cbc0038I Pass  15: suminf.    2.22859 (5) obj. -147.591 iterations 0
Cbc0038I Pass  16: suminf.    1.18709 (4) obj. -147.591 iterations 16
Cbc0038I Pass  17: suminf.    0.99129 (4) obj. -147.591 iterations 11
Cbc0038I Pass  18: suminf.    1.03398 (4) obj. -147.591 iterations 14
Cbc0038I Pass  19: suminf.    1.03398 (4) obj. -147.591 iterations 7
Cbc0038I Pass  20: suminf.    1.13796 (4) obj. -147.591 iterations 13
Cbc0038I Pass  21: suminf.    5.67331 (19) obj. -147.591 iterations 41
Cbc0038I Pass  22: suminf.    2.00454 (7) obj. -147.591 iterations 49
Cbc0038I Pass  23: suminf.    1.81170 (8) obj. -147.591 iterations 14
Cbc0038I Pass  24: suminf.    2.26403 (9) obj. -147.591 iterations 41
Cbc0038I Pass  25: suminf.    2.26175 (7) obj. -147.591 iterations 3
Cbc0038I Pass  26: suminf.    2.79453 (8) obj. -147.591 iterations 23
Cbc0038I Pass  27: suminf.    2.26344 (7) obj. -147.591 iterations 27
Cbc0038I Pass  28: suminf.    2.66005 (9) obj. -147.591 iterations 15
Cbc0038I Pass  29: suminf.    2.11008 (7) obj. -147.591 iterations 16
Cbc0038I Pass  30: suminf.    1.97954 (7) obj. -147.591 iterations 21
Cbc0038I Pass  31: suminf.    2.51014 (7) obj. -147.591 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 161 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -138.423 to -142.695 (0.43 seconds)
Cbc0038I Round again with cutoff of -164.093
Cbc0038I Pass  31: suminf.    3.48883 (11) obj. -164.093 iterations 5
Cbc0038I Pass  32: suminf.    3.48883 (11) obj. -164.093 iterations 0
Cbc0038I Pass  33: suminf.    4.08299 (11) obj. -164.093 iterations 36
Cbc0038I Pass  34: suminf.    2.15106 (13) obj. -164.093 iterations 40
Cbc0038I Pass  35: suminf.    2.47549 (9) obj. -164.093 iterations 41
Cbc0038I Pass  36: suminf.    1.87013 (8) obj. -164.093 iterations 7
Cbc0038I Pass  37: suminf.    1.81328 (6) obj. -164.093 iterations 3
Cbc0038I Pass  38: suminf.    2.56161 (9) obj. -164.093 iterations 48
Cbc0038I Pass  39: suminf.    1.69368 (8) obj. -164.093 iterations 34
Cbc0038I Pass  40: suminf.    2.24261 (8) obj. -164.093 iterations 25
Cbc0038I Pass  41: suminf.    1.89451 (7) obj. -164.093 iterations 36
Cbc0038I Pass  42: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  43: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  44: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  45: suminf.    2.40114 (11) obj. -164.093 iterations 50
Cbc0038I Pass  46: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  47: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  48: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  49: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  50: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  51: suminf.    2.40114 (11) obj. -164.093 iterations 50
Cbc0038I Pass  52: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  53: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  54: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I Pass  55: suminf.    1.89012 (8) obj. -164.093 iterations 21
Cbc0038I Pass  56: suminf.    1.89012 (8) obj. -164.093 iterations 5
Cbc0038I Pass  57: suminf.    2.40114 (11) obj. -164.093 iterations 52
Cbc0038I Pass  58: suminf.    1.97674 (6) obj. -164.093 iterations 25
Cbc0038I Pass  59: suminf.    1.89451 (7) obj. -164.093 iterations 23
Cbc0038I Pass  60: suminf.    2.31484 (8) obj. -164.093 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 260 columns, reduced to 113 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.62 seconds)
Cbc0038I After 0.62 seconds - Feasibility pump exiting with objective of -142.695 - took 0.54 seconds
Cbc0012I Integer solution of -142.69497 found by feasibility pump after 0 iterations and 0 nodes (0.62 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 98 rows 54 columns
Cbc0012I Integer solution of -144.7338 found by RINS after 0 iterations and 0 nodes (0.76 seconds)
Cbc0031I 30 added rows had average density of 121.26667
Cbc0013I At root node, 30 cuts changed objective from -230.10277 to -207.21049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22189 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2165 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.846 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.197 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.683 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 248.0 elements, 0 column cuts (0 active)  in 0.315 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -144.7338 best solution, best possible -207.21049 (8.19 seconds)
Cbc0010I After 5 nodes, 6 on tree, -144.7338 best solution, best possible -207.21049 (8.96 seconds)
Cbc0010I After 31 nodes, 10 on tree, -144.7338 best solution, best possible -207.21049 (9.66 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 118 rows 66 columns
Cbc0012I Integer solution of -159.69721 found by RINS after 12951 iterations and 41 nodes (9.98 seconds)
Cbc0010I After 68 nodes, 11 on tree, -159.69721 best solution, best possible -207.21049 (10.36 seconds)
Cbc0038I Full problem 507 rows 260 columns, reduced to 108 rows 60 columns
Cbc0010I After 142 nodes, 11 on tree, -159.69721 best solution, best possible -207.21049 (11.08 seconds)
Cbc0001I Search completed - best objective -159.69721, took 18506 iterations and 172 nodes (11.41 seconds)
Cbc0032I Strong branching done 1720 times (47900 iterations), fathomed 15 nodes and fixed 42 variables
Cbc0035I Maximum depth 63, 951 variables fixed on reduced cost
Total time (CPU seconds):       10.77   (Wallclock seconds):       11.48

