Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-18) rows, 70 (-7) columns and 335 (-39) elements
Clp1000I sum of infeasibilities 0.209658 - average 0.00156462, 13 fixed columns
Coin0506I Presolve 57 (-77) rows, 56 (-14) columns and 167 (-168) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.306926 - largest nonzero change 2.8696192e-05 ( 0.0014348096%) - largest zero change 1.9329231e-05
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Coin0511I After Postsolve, objective 1659.1147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3357157 - largest nonzero change 2.8696192e-05 ( 0.0014348096%) - largest zero change 2.7814203e-05
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Clp0000I Optimal - objective value 1659.1147
Coin0511I After Postsolve, objective 1659.1147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1659.11474 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 70 columns (69 integer (69 of which binary)) and 335 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.348%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.33741
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. 47.0028 iterations 40
Cbc0038I Solution found of 176.336
Cbc0038I Relaxing continuous gives 176.336
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 31 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 176.336 to -469.331 (0.03 seconds)
Cbc0038I Round again with cutoff of -586.195
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.63733 (4) obj. -586.195 iterations 3
Cbc0038I Pass   3: suminf.    0.58109 (3) obj. -586.195 iterations 6
Cbc0038I Pass   4: suminf.    0.33236 (2) obj. -586.195 iterations 2
Cbc0038I Pass   5: suminf.    0.96365 (4) obj. -586.195 iterations 3
Cbc0038I Pass   6: suminf.    0.96365 (4) obj. -586.195 iterations 0
Cbc0038I Pass   7: suminf.    0.55474 (3) obj. -586.195 iterations 4
Cbc0038I Pass   8: suminf.    1.04955 (3) obj. -586.195 iterations 2
Cbc0038I Pass   9: suminf.    0.43784 (3) obj. -586.195 iterations 2
Cbc0038I Pass  10: suminf.    1.04955 (3) obj. -586.195 iterations 2
Cbc0038I Pass  11: suminf.    1.04480 (5) obj. -586.195 iterations 19
Cbc0038I Pass  12: suminf.    1.04480 (5) obj. -586.195 iterations 2
Cbc0038I Pass  13: suminf.    1.01709 (4) obj. -586.195 iterations 4
Cbc0038I Pass  14: suminf.    0.75804 (4) obj. -586.195 iterations 1
Cbc0038I Pass  15: suminf.    1.34608 (4) obj. -586.195 iterations 2
Cbc0038I Pass  16: suminf.    0.66591 (4) obj. -586.195 iterations 2
Cbc0038I Pass  17: suminf.    1.11623 (5) obj. -586.195 iterations 13
Cbc0038I Pass  18: suminf.    1.11623 (5) obj. -586.195 iterations 4
Cbc0038I Pass  19: suminf.    1.16208 (5) obj. -586.195 iterations 4
Cbc0038I Pass  20: suminf.    0.90303 (5) obj. -586.195 iterations 1
Cbc0038I Pass  21: suminf.    1.11623 (5) obj. -586.195 iterations 1
Cbc0038I Pass  22: suminf.    1.44391 (7) obj. -586.195 iterations 12
Cbc0038I Pass  23: suminf.    1.15493 (6) obj. -586.195 iterations 4
Cbc0038I Pass  24: suminf.    1.02690 (5) obj. -586.195 iterations 1
Cbc0038I Pass  25: suminf.    1.02690 (5) obj. -586.195 iterations 0
Cbc0038I Pass  26: suminf.    1.10624 (5) obj. -586.195 iterations 4
Cbc0038I Pass  27: suminf.    0.84719 (5) obj. -586.195 iterations 1
Cbc0038I Pass  28: suminf.    1.02690 (5) obj. -586.195 iterations 1
Cbc0038I Pass  29: suminf.    1.84049 (11) obj. -586.195 iterations 16
Cbc0038I Pass  30: suminf.    1.25191 (7) obj. -586.195 iterations 11
Cbc0038I Pass  31: suminf.    1.24127 (6) obj. -586.195 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 34 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -469.331 to -469.333 (0.11 seconds)
Cbc0038I Round again with cutoff of -796.551
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.70618 (4) obj. -796.551 iterations 0
Cbc0038I Pass  32: suminf.    0.62268 (4) obj. -796.551 iterations 5
Cbc0038I Pass  33: suminf.    0.62268 (4) obj. -796.551 iterations 0
Cbc0038I Pass  34: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  35: suminf.    0.58143 (4) obj. -796.551 iterations 1
Cbc0038I Pass  36: suminf.    1.50260 (4) obj. -796.551 iterations 2
Cbc0038I Pass  37: suminf.    0.59864 (4) obj. -796.551 iterations 2
Cbc0038I Pass  38: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  39: suminf.    1.25509 (6) obj. -796.551 iterations 10
Cbc0038I Pass  40: suminf.    0.84496 (4) obj. -796.551 iterations 5
Cbc0038I Pass  41: suminf.    0.92689 (4) obj. -796.551 iterations 1
Cbc0038I Pass  42: suminf.    0.87040 (5) obj. -796.551 iterations 8
Cbc0038I Pass  43: suminf.    0.58143 (4) obj. -796.551 iterations 5
Cbc0038I Pass  44: suminf.    1.50260 (4) obj. -796.551 iterations 2
Cbc0038I Pass  45: suminf.    0.59864 (4) obj. -796.551 iterations 2
Cbc0038I Pass  46: suminf.    0.84048 (4) obj. -796.551 iterations 3
Cbc0038I Pass  47: suminf.    0.84048 (4) obj. -796.551 iterations 9
Cbc0038I Pass  48: suminf.    0.58143 (4) obj. -796.551 iterations 6
Cbc0038I Pass  49: suminf.    1.50261 (4) obj. -796.551 iterations 2
Cbc0038I Pass  50: suminf.    0.88807 (5) obj. -796.551 iterations 3
Cbc0038I Pass  51: suminf.    0.92689 (4) obj. -796.551 iterations 2
Cbc0038I Pass  52: suminf.    0.84496 (4) obj. -796.551 iterations 1
Cbc0038I Pass  53: suminf.    0.96612 (5) obj. -796.551 iterations 11
Cbc0038I Pass  54: suminf.    0.84496 (4) obj. -796.551 iterations 2
Cbc0038I Pass  55: suminf.    0.92689 (4) obj. -796.551 iterations 1
Cbc0038I Pass  56: suminf.    1.00263 (9) obj. -796.551 iterations 10
Cbc0038I Pass  57: suminf.    0.91460 (5) obj. -796.551 iterations 5
Cbc0038I Pass  58: suminf.    0.93482 (5) obj. -796.551 iterations 2
Cbc0038I Pass  59: suminf.    2.44730 (8) obj. -796.551 iterations 15
Cbc0038I Pass  60: suminf.    2.37392 (7) obj. -796.551 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 70 columns, reduced to 34 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -469.333 - took 0.10 seconds
Cbc0012I Integer solution of -469.3327 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 31 rows 29 columns
Cbc0031I 8 added rows had average density of 64.875
Cbc0013I At root node, 8 cuts changed objective from -1637.9756 to -568.70333 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 177 row cuts average 10.7 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 63.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0038I Full problem 134 rows 70 columns, reduced to 6 rows 8 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0010I After 355 nodes, 15 on tree, -469.3327 best solution, best possible -568.70176 (0.68 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 134 rows 70 columns, reduced to 0 rows 0 columns
Cbc0010I After 742 nodes, 5 on tree, -469.3327 best solution, best possible -568.70176 (1.38 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 4 rows 5 columns
Cbc0010I After 1061 nodes, 4 on tree, -469.3327 best solution, best possible -568.70176 (2.09 seconds)
Cbc0038I Full problem 134 rows 70 columns, reduced to 5 rows 6 columns
Cbc0001I Search completed - best objective -469.3327000000309, took 80928 iterations and 22722 nodes (2.19 seconds)
Cbc0032I Strong branching done 2216 times (6046 iterations), fathomed 57 nodes and fixed 25 variables
Cbc0041I Maximum depth 17, 472 variables fixed on reduced cost (complete fathoming 240 times, 21604 nodes taking 65905 iterations)
Total time (CPU seconds):       1.96   (Wallclock seconds):       2.19

