Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 1.49283e-05 - average 2.87082e-07, 3 fixed columns
Coin0506I Presolve 46 (-6) rows, 25 (-3) columns and 135 (-18) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 73.55305
Clp0000I Optimal - objective value 73.55305
Coin0511I After Postsolve, objective 73.55305, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.55305
Clp0000I Optimal - objective value 73.55305
Clp0000I Optimal - objective value 73.55305
Coin0511I After Postsolve, objective 73.55305, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.55305031 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.77433
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.4445 iterations 23
Cbc0038I Solution found of -13.4445
Cbc0038I Relaxing continuous gives -13.4445
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -13.4445 to -46.9535 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.8576
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.36087 (2) obj. -48.8576 iterations 1
Cbc0038I Pass   3: suminf.    0.16667 (1) obj. -48.8576 iterations 2
Cbc0038I Pass   4: suminf.    0.18043 (1) obj. -48.8576 iterations 1
Cbc0038I Pass   5: suminf.    1.02268 (4) obj. -48.8576 iterations 10
Cbc0038I Pass   6: suminf.    0.80354 (5) obj. -48.8576 iterations 4
Cbc0038I Pass   7: suminf.    1.10454 (3) obj. -48.8576 iterations 6
Cbc0038I Pass   8: suminf.    1.01069 (4) obj. -48.8576 iterations 3
Cbc0038I Pass   9: suminf.    0.44988 (3) obj. -48.8576 iterations 4
Cbc0038I Pass  10: suminf.    1.10454 (3) obj. -48.8576 iterations 4
Cbc0038I Pass  11: suminf.    0.90364 (3) obj. -48.8576 iterations 2
Cbc0038I Pass  12: suminf.    0.75711 (3) obj. -48.8576 iterations 1
Cbc0038I Pass  13: suminf.    0.47916 (3) obj. -48.8576 iterations 5
Cbc0038I Pass  14: suminf.    2.59244 (9) obj. -48.8576 iterations 16
Cbc0038I Pass  15: suminf.    1.75908 (5) obj. -48.8576 iterations 4
Cbc0038I Pass  16: suminf.    0.95600 (3) obj. -48.8576 iterations 6
Cbc0038I Pass  17: suminf.    0.90141 (3) obj. -48.8576 iterations 4
Cbc0038I Pass  18: suminf.    1.73625 (4) obj. -48.8576 iterations 3
Cbc0038I Pass  19: suminf.    1.21509 (4) obj. -48.8576 iterations 5
Cbc0038I Pass  20: suminf.    0.66549 (4) obj. -48.8576 iterations 5
Cbc0038I Pass  21: suminf.    1.43404 (4) obj. -48.8576 iterations 8
Cbc0038I Pass  22: suminf.    0.42816 (3) obj. -48.8576 iterations 6
Cbc0038I Pass  23: suminf.    0.36087 (2) obj. -48.8576 iterations 7
Cbc0038I Pass  24: suminf.    0.16667 (1) obj. -48.8576 iterations 3
Cbc0038I Pass  25: suminf.    0.18043 (1) obj. -48.8576 iterations 1
Cbc0038I Pass  26: suminf.    1.67786 (6) obj. -48.8576 iterations 11
Cbc0038I Pass  27: suminf.    0.97997 (3) obj. -48.8576 iterations 7
Cbc0038I Pass  28: suminf.    0.52024 (2) obj. -48.8576 iterations 4
Cbc0038I Pass  29: suminf.    0.58594 (2) obj. -48.8576 iterations 3
Cbc0038I Pass  30: suminf.    0.22480 (1) obj. -48.8576 iterations 2
Cbc0038I Pass  31: suminf.    0.17500 (1) obj. -48.8576 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -46.9535 - took 0.02 seconds
Cbc0012I Integer solution of -46.953541 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 28 columns, reduced to 26 rows 16 columns
Cbc0031I 8 added rows had average density of 18.25
Cbc0013I At root node, 8 cuts changed objective from -65.993142 to -54.298779 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 737 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 599 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -46.953541, took 1986 iterations and 8 nodes (0.17 seconds)
Cbc0032I Strong branching done 94 times (832 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

