Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 60 (-18) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 1.27158e-05 - average 1.16659e-07, 10 fixed columns
Coin0506I Presolve 89 (-20) rows, 49 (-11) columns and 268 (-62) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 0.39248319 - largest nonzero change 0 ( 0%) - largest zero change 2.9259604e-05
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Coin0511I After Postsolve, objective 66.780465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Clp0000I Optimal - objective value 66.780465
Coin0511I After Postsolve, objective 66.780465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.78046547 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 60 columns (59 integer (59 of which binary)) and 374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.645%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.53166
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.0184 iterations 29
Cbc0038I Solution found of -28.0184
Cbc0038I Relaxing continuous gives -28.0184
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -28.0184 to -42.839 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.0912
Cbc0038I Pass   2: suminf.    0.76277 (3) obj. -45.0912 iterations 10
Cbc0038I Pass   3: suminf.    0.35956 (2) obj. -45.0912 iterations 1
Cbc0038I Pass   4: suminf.    0.85639 (3) obj. -45.0912 iterations 8
Cbc0038I Pass   5: suminf.    0.35669 (2) obj. -45.0912 iterations 1
Cbc0038I Pass   6: suminf.    0.35956 (2) obj. -45.0912 iterations 9
Cbc0038I Pass   7: suminf.    1.18291 (5) obj. -45.0912 iterations 14
Cbc0038I Pass   8: suminf.    0.50427 (2) obj. -45.0912 iterations 8
Cbc0038I Pass   9: suminf.    0.35956 (2) obj. -45.0912 iterations 8
Cbc0038I Pass  10: suminf.    0.35956 (2) obj. -45.0912 iterations 0
Cbc0038I Pass  11: suminf.    0.85639 (3) obj. -45.0912 iterations 8
Cbc0038I Pass  12: suminf.    0.35669 (2) obj. -45.0912 iterations 1
Cbc0038I Pass  13: suminf.    0.35956 (2) obj. -45.0912 iterations 9
Cbc0038I Pass  14: suminf.    3.30702 (13) obj. -45.0912 iterations 23
Cbc0038I Pass  15: suminf.    0.61856 (2) obj. -45.0912 iterations 22
Cbc0038I Pass  16: suminf.    0.04987 (1) obj. -45.0912 iterations 6
Cbc0038I Pass  17: suminf.    0.46082 (2) obj. -45.0912 iterations 3
Cbc0038I Pass  18: suminf.    0.98055 (4) obj. -45.0912 iterations 7
Cbc0038I Pass  19: suminf.    0.67811 (2) obj. -45.0912 iterations 6
Cbc0038I Pass  20: suminf.    0.97842 (3) obj. -45.0912 iterations 5
Cbc0038I Pass  21: suminf.    0.46393 (2) obj. -45.0912 iterations 2
Cbc0038I Pass  22: suminf.    0.61856 (2) obj. -45.0912 iterations 8
Cbc0038I Pass  23: suminf.    0.04987 (1) obj. -45.0912 iterations 6
Cbc0038I Pass  24: suminf.    0.46082 (2) obj. -45.0912 iterations 3
Cbc0038I Pass  25: suminf.    1.29456 (7) obj. -45.0912 iterations 14
Cbc0038I Pass  26: suminf.    0.77220 (2) obj. -45.0912 iterations 12
Cbc0038I Pass  27: suminf.    0.93362 (3) obj. -45.0912 iterations 4
Cbc0038I Pass  28: suminf.    0.41183 (2) obj. -45.0912 iterations 2
Cbc0038I Pass  29: suminf.    0.61856 (2) obj. -45.0912 iterations 7
Cbc0038I Pass  30: suminf.    0.04987 (1) obj. -45.0912 iterations 4
Cbc0038I Pass  31: suminf.    0.46082 (2) obj. -45.0912 iterations 2
Cbc0038I Rounding solution of -43.967 is better than previous of -42.839

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -49.1449
Cbc0038I Pass  31: suminf.    1.02325 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  32: suminf.    0.60876 (2) obj. -49.1449 iterations 11
Cbc0038I Pass  33: suminf.    0.77397 (3) obj. -49.1449 iterations 8
Cbc0038I Pass  34: suminf.    0.54754 (2) obj. -49.1449 iterations 2
Cbc0038I Pass  35: suminf.    0.60876 (2) obj. -49.1449 iterations 8
Cbc0038I Pass  36: suminf.    0.82788 (4) obj. -49.1449 iterations 8
Cbc0038I Pass  37: suminf.    0.82116 (3) obj. -49.1449 iterations 8
Cbc0038I Pass  38: suminf.    0.76330 (4) obj. -49.1449 iterations 12
Cbc0038I Pass  39: suminf.    0.60876 (2) obj. -49.1449 iterations 1
Cbc0038I Pass  40: suminf.    0.77397 (3) obj. -49.1449 iterations 7
Cbc0038I Pass  41: suminf.    0.54754 (2) obj. -49.1449 iterations 2
Cbc0038I Pass  42: suminf.    0.60876 (2) obj. -49.1449 iterations 8
Cbc0038I Pass  43: suminf.    1.69100 (5) obj. -49.1449 iterations 14
Cbc0038I Pass  44: suminf.    1.46346 (8) obj. -49.1449 iterations 12
Cbc0038I Pass  45: suminf.    2.27828 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  46: suminf.    0.99933 (4) obj. -49.1449 iterations 5
Cbc0038I Pass  47: suminf.    0.99933 (4) obj. -49.1449 iterations 0
Cbc0038I Pass  48: suminf.    0.72952 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  49: suminf.    0.36801 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  50: suminf.    1.51545 (5) obj. -49.1449 iterations 3
Cbc0038I Pass  51: suminf.    0.89166 (6) obj. -49.1449 iterations 3
Cbc0038I Pass  52: suminf.    2.20545 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  53: suminf.    0.99933 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  54: suminf.    0.99933 (4) obj. -49.1449 iterations 0
Cbc0038I Pass  55: suminf.    0.72952 (4) obj. -49.1449 iterations 3
Cbc0038I Pass  56: suminf.    0.36801 (4) obj. -49.1449 iterations 2
Cbc0038I Pass  57: suminf.    1.51545 (5) obj. -49.1449 iterations 3
Cbc0038I Pass  58: suminf.    0.89166 (6) obj. -49.1449 iterations 3
Cbc0038I Pass  59: suminf.    2.20545 (7) obj. -49.1449 iterations 7
Cbc0038I Pass  60: suminf.    0.99933 (4) obj. -49.1449 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 60 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -43.967 - took 0.04 seconds
Cbc0012I Integer solution of -43.96698 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 103 rows 60 columns, reduced to 39 rows 22 columns
Cbc0031I 15 added rows had average density of 41.933333
Cbc0013I At root node, 15 cuts changed objective from -65.360008 to -55.2007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5729 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1423 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -43.96698000000001, took 4542 iterations and 12 nodes (0.54 seconds)
Cbc0032I Strong branching done 212 times (3576 iterations), fathomed 1 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.54

