Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 13 (-2) columns and 56 (-19) elements
Clp1000I sum of infeasibilities 4.21037e-07 - average 2.21598e-08, 1 fixed columns
Coin0506I Presolve 17 (-2) rows, 12 (-1) columns and 50 (-6) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 49.576631
Clp0000I Optimal - objective value 49.576631
Coin0511I After Postsolve, objective 49.576631, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.576631
Clp0000I Optimal - objective value 49.576631
Clp0000I Optimal - objective value 49.576631
Coin0511I After Postsolve, objective 49.576631, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.57663146 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.407%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.51958
Cbc0038I Solution found of -8.54823
Cbc0038I Relaxing continuous gives -20.779
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.2753
Cbc0038I Pass   1: suminf.    0.24168 (8) obj. -23.2753 iterations 3
Cbc0038I Pass   2: suminf.    1.07076 (3) obj. -23.2753 iterations 8
Cbc0038I Pass   3: suminf.    1.07076 (3) obj. -23.2753 iterations 0
Cbc0038I Pass   4: suminf.    0.26394 (7) obj. -23.2753 iterations 5
Cbc0038I Pass   5: suminf.    0.84490 (3) obj. -23.2753 iterations 9
Cbc0038I Pass   6: suminf.    0.44062 (3) obj. -23.2753 iterations 2
Cbc0038I Pass   7: suminf.    0.28120 (1) obj. -23.2753 iterations 4
Cbc0038I Pass   8: suminf.    0.48636 (1) obj. -23.2753 iterations 2
Cbc0038I Pass   9: suminf.    0.82232 (4) obj. -23.2753 iterations 4
Cbc0038I Pass  10: suminf.    0.53916 (2) obj. -23.2753 iterations 3
Cbc0038I Pass  11: suminf.    0.61570 (2) obj. -23.2753 iterations 2
Cbc0038I Pass  12: suminf.    0.70920 (2) obj. -23.2753 iterations 1
Cbc0038I Pass  13: suminf.    0.92945 (3) obj. -23.2753 iterations 2
Cbc0038I Pass  14: suminf.    0.70920 (2) obj. -23.2753 iterations 2
Cbc0038I Pass  15: suminf.    1.18607 (4) obj. -23.2753 iterations 5
Cbc0038I Pass  16: suminf.    0.82821 (3) obj. -23.2753 iterations 3
Cbc0038I Pass  17: suminf.    0.52046 (2) obj. -23.2753 iterations 2
Cbc0038I Pass  18: suminf.    0.39129 (2) obj. -23.2753 iterations 3
Cbc0038I Pass  19: suminf.    0.93498 (2) obj. -23.2753 iterations 5
Cbc0038I Pass  20: suminf.    0.74771 (2) obj. -23.2753 iterations 2
Cbc0038I Pass  21: suminf.    0.93498 (2) obj. -23.2753 iterations 2
Cbc0038I Pass  22: suminf.    0.93498 (2) obj. -23.2753 iterations 0
Cbc0038I Pass  23: suminf.    0.93498 (2) obj. -23.2753 iterations 0
Cbc0038I Pass  24: suminf.    1.31588 (4) obj. -23.2753 iterations 6
Cbc0038I Pass  25: suminf.    1.09321 (3) obj. -23.2753 iterations 2
Cbc0038I Pass  26: suminf.    1.91667 (4) obj. -23.2753 iterations 3
Cbc0038I Pass  27: suminf.    1.07230 (3) obj. -23.2753 iterations 1
Cbc0038I Pass  28: suminf.    0.28474 (8) obj. -23.2753 iterations 6
Cbc0038I Pass  29: suminf.    0.24168 (8) obj. -23.2753 iterations 3
Cbc0038I Pass  30: suminf.    1.07076 (3) obj. -23.2753 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -20.779 - took 0.01 seconds
Cbc0012I Integer solution of -20.779 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 13 columns, reduced to 12 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 6.75
Cbc0013I At root node, 4 cuts changed objective from -45.740937 to -21.46158 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20.779, took 58 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

