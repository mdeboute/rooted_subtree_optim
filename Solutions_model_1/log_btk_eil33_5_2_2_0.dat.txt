Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 0.000733857 - average 1.28747e-05, 1 fixed columns
Coin0506I Presolve 56 (-1) rows, 32 (-1) columns and 168 (-4) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Coin0511I After Postsolve, objective 95.824545, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Coin0511I After Postsolve, objective 95.824545, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.82454505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.50657
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.5558 iterations 18
Cbc0038I Solution found of -18.5558
Cbc0038I Relaxing continuous gives -18.5558
Cbc0038I Rounding solution of -35.7507 is better than previous of -18.5558

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -35.7507 to -39.7566 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.2953
Cbc0038I Pass   2: suminf.    0.44790 (2) obj. -45.2953 iterations 2
Cbc0038I Pass   3: suminf.    0.25750 (1) obj. -45.2953 iterations 2
Cbc0038I Pass   4: suminf.    2.39557 (7) obj. -45.2953 iterations 10
Cbc0038I Pass   5: suminf.    0.84627 (3) obj. -45.2953 iterations 7
Cbc0038I Pass   6: suminf.    0.72234 (2) obj. -45.2953 iterations 1
Cbc0038I Pass   7: suminf.    0.57838 (2) obj. -45.2953 iterations 3
Cbc0038I Pass   8: suminf.    0.50657 (4) obj. -45.2953 iterations 2
Cbc0038I Pass   9: suminf.    0.84694 (3) obj. -45.2953 iterations 5
Cbc0038I Pass  10: suminf.    0.80488 (4) obj. -45.2953 iterations 1
Cbc0038I Pass  11: suminf.    0.47912 (2) obj. -45.2953 iterations 3
Cbc0038I Pass  12: suminf.    0.46509 (2) obj. -45.2953 iterations 3
Cbc0038I Pass  13: suminf.    0.49991 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  14: suminf.    0.49991 (2) obj. -45.2953 iterations 0
Cbc0038I Pass  15: suminf.    0.47417 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  16: suminf.    0.49991 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  17: suminf.    2.51824 (10) obj. -45.2953 iterations 16
Cbc0038I Pass  18: suminf.    1.45545 (4) obj. -45.2953 iterations 9
Cbc0038I Pass  19: suminf.    0.39067 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  20: suminf.    0.29587 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  21: suminf.    0.95942 (3) obj. -45.2953 iterations 3
Cbc0038I Pass  22: suminf.    0.61777 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  23: suminf.    0.29587 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  24: suminf.    1.41249 (4) obj. -45.2953 iterations 6
Cbc0038I Pass  25: suminf.    1.41249 (4) obj. -45.2953 iterations 1
Cbc0038I Pass  26: suminf.    0.27790 (2) obj. -45.2953 iterations 5
Cbc0038I Pass  27: suminf.    0.36076 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  28: suminf.    0.30800 (1) obj. -45.2953 iterations 1
Cbc0038I Pass  29: suminf.    0.85880 (3) obj. -45.2953 iterations 5
Cbc0038I Pass  30: suminf.    0.58586 (3) obj. -45.2953 iterations 3
Cbc0038I Pass  31: suminf.    0.50417 (2) obj. -45.2953 iterations 5
Cbc0038I Rounding solution of -40.0491 is better than previous of -39.7566

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -40.0491 to -41.4917 (0.05 seconds)
Cbc0038I Round again with cutoff of -55.2649
Cbc0038I Pass  31: suminf.    0.50338 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  32: suminf.    0.49778 (4) obj. -55.2649 iterations 1
Cbc0038I Pass  33: suminf.    0.88580 (5) obj. -55.2649 iterations 8
Cbc0038I Pass  34: suminf.    0.81820 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  35: suminf.    0.58607 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  36: suminf.    0.58607 (3) obj. -55.2649 iterations 0
Cbc0038I Pass  37: suminf.    1.35901 (5) obj. -55.2649 iterations 8
Cbc0038I Pass  38: suminf.    1.27314 (4) obj. -55.2649 iterations 2
Cbc0038I Pass  39: suminf.    0.84198 (5) obj. -55.2649 iterations 7
Cbc0038I Pass  40: suminf.    0.78011 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  41: suminf.    0.55641 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  42: suminf.    0.55641 (3) obj. -55.2649 iterations 0
Cbc0038I Pass  43: suminf.    0.84198 (5) obj. -55.2649 iterations 2
Cbc0038I Pass  44: suminf.    0.89934 (7) obj. -55.2649 iterations 13
Cbc0038I Pass  45: suminf.    0.89784 (7) obj. -55.2649 iterations 1
Cbc0038I Pass  46: suminf.    1.02198 (4) obj. -55.2649 iterations 9
Cbc0038I Pass  47: suminf.    1.02198 (4) obj. -55.2649 iterations 0
Cbc0038I Pass  48: suminf.    1.23813 (4) obj. -55.2649 iterations 2
Cbc0038I Pass  49: suminf.    1.23813 (4) obj. -55.2649 iterations 0
Cbc0038I Pass  50: suminf.    1.28318 (5) obj. -55.2649 iterations 5
Cbc0038I Pass  51: suminf.    0.62711 (2) obj. -55.2649 iterations 3
Cbc0038I Pass  52: suminf.    0.61142 (2) obj. -55.2649 iterations 1
Cbc0038I Pass  53: suminf.    1.00841 (3) obj. -55.2649 iterations 2
Cbc0038I Pass  54: suminf.    1.35538 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  55: suminf.    0.61142 (2) obj. -55.2649 iterations 1
Cbc0038I Pass  56: suminf.    3.48375 (12) obj. -55.2649 iterations 14
Cbc0038I Pass  57: suminf.    1.47648 (8) obj. -55.2649 iterations 6
Cbc0038I Pass  58: suminf.    1.46449 (7) obj. -55.2649 iterations 1
Cbc0038I Pass  59: suminf.    1.48281 (4) obj. -55.2649 iterations 6
Cbc0038I Pass  60: suminf.    1.28318 (5) obj. -55.2649 iterations 3
Cbc0038I Rounding solution of -42.166 is better than previous of -41.4917

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -42.166 to -42.3821 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.2284
Cbc0038I Pass  60: suminf.    1.29614 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  61: suminf.    1.25233 (8) obj. -67.2284 iterations 2
Cbc0038I Pass  62: suminf.    1.12323 (4) obj. -67.2284 iterations 4
Cbc0038I Pass  63: suminf.    1.04733 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  64: suminf.    1.00766 (7) obj. -67.2284 iterations 1
Cbc0038I Pass  65: suminf.    2.09584 (6) obj. -67.2284 iterations 9
Cbc0038I Pass  66: suminf.    0.89914 (4) obj. -67.2284 iterations 3
Cbc0038I Pass  67: suminf.    0.79199 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  68: suminf.    2.05871 (6) obj. -67.2284 iterations 4
Cbc0038I Pass  69: suminf.    2.08499 (6) obj. -67.2284 iterations 5
Cbc0038I Pass  70: suminf.    1.91855 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  71: suminf.    1.51584 (4) obj. -67.2284 iterations 4
Cbc0038I Pass  72: suminf.    1.39678 (5) obj. -67.2284 iterations 2
Cbc0038I Pass  73: suminf.    1.26681 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  74: suminf.    1.24728 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  75: suminf.    1.24728 (6) obj. -67.2284 iterations 0
Cbc0038I Pass  76: suminf.    1.23329 (4) obj. -67.2284 iterations 5
Cbc0038I Pass  77: suminf.    1.16236 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  78: suminf.    1.38708 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  79: suminf.    1.34130 (5) obj. -67.2284 iterations 1
Cbc0038I Pass  80: suminf.    1.51584 (4) obj. -67.2284 iterations 8
Cbc0038I Pass  81: suminf.    1.39678 (5) obj. -67.2284 iterations 2
Cbc0038I Pass  82: suminf.    1.26681 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  83: suminf.    1.24728 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  84: suminf.    1.24728 (6) obj. -67.2284 iterations 0
Cbc0038I Pass  85: suminf.    1.23329 (4) obj. -67.2284 iterations 5
Cbc0038I Pass  86: suminf.    1.16236 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  87: suminf.    1.38708 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  88: suminf.    1.34130 (5) obj. -67.2284 iterations 1
Cbc0038I Pass  89: suminf.    1.51584 (4) obj. -67.2284 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -42.3821 - took 0.07 seconds
Cbc0012I Integer solution of -42.382147 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 40 rows 22 columns
Cbc0031I 9 added rows had average density of 26.333333
Cbc0013I At root node, 9 cuts changed objective from -95.143194 to -72.484215 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2730 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1314 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.775 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -42.382147 best solution, best possible -72.484215 (1.78 seconds)
Cbc0001I Search completed - best objective -42.3821473, took 3991 iterations and 34 nodes (1.90 seconds)
Cbc0032I Strong branching done 344 times (3548 iterations), fathomed 0 nodes and fixed 16 variables
Cbc0035I Maximum depth 8, 71 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.91

