Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-8) rows, 32 (-2) columns and 145 (-14) elements
Clp1000I sum of infeasibilities 0.0114372 - average 0.000197194, 5 fixed columns
Coin0506I Presolve 45 (-13) rows, 27 (-5) columns and 114 (-31) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 1.1175347 - largest nonzero change 0 ( 0%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value 3231.0181
Clp0000I Optimal - objective value 3231.0181
Coin0511I After Postsolve, objective 3231.0181, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1666698 - largest nonzero change 0 ( 0%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 3231.0181
Clp0000I Optimal - objective value 3231.0181
Clp0000I Optimal - objective value 3231.0181
Coin0511I After Postsolve, objective 3231.0181, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3231.018073 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 58 rows, 32 columns (31 integer (31 of which binary)) and 145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.740%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 10.6095
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 381.751 iterations 28
Cbc0038I Solution found of 381.751
Cbc0038I Relaxing continuous gives 381.751
Cbc0038I Rounding solution of 311.314 is better than previous of 381.751

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 311.314 to 189.831 (0.02 seconds)
Cbc0038I Round again with cutoff of -152.254
Cbc0038I Pass   2: suminf.    0.14198 (1) obj. -152.254 iterations 1
Cbc0038I Pass   3: suminf.    0.24870 (1) obj. -152.254 iterations 2
Cbc0038I Pass   4: suminf.    0.28073 (3) obj. -152.254 iterations 4
Cbc0038I Pass   5: suminf.    0.92387 (3) obj. -152.254 iterations 3
Cbc0038I Pass   6: suminf.    0.92387 (3) obj. -152.254 iterations 0
Cbc0038I Pass   7: suminf.    1.06505 (3) obj. -152.254 iterations 3
Cbc0038I Pass   8: suminf.    0.54182 (2) obj. -152.254 iterations 2
Cbc0038I Pass   9: suminf.    0.71194 (3) obj. -152.254 iterations 4
Cbc0038I Pass  10: suminf.    0.92387 (3) obj. -152.254 iterations 2
Cbc0038I Pass  11: suminf.    0.92387 (3) obj. -152.254 iterations 0
Cbc0038I Pass  12: suminf.    1.06505 (3) obj. -152.254 iterations 3
Cbc0038I Pass  13: suminf.    0.54182 (2) obj. -152.254 iterations 2
Cbc0038I Pass  14: suminf.    0.71194 (3) obj. -152.254 iterations 4
Cbc0038I Pass  15: suminf.    0.92387 (3) obj. -152.254 iterations 2
Cbc0038I Pass  16: suminf.    0.92387 (3) obj. -152.254 iterations 0
Cbc0038I Pass  17: suminf.    1.06505 (3) obj. -152.254 iterations 3
Cbc0038I Pass  18: suminf.    0.54182 (2) obj. -152.254 iterations 2
Cbc0038I Pass  19: suminf.    0.71194 (3) obj. -152.254 iterations 4
Cbc0038I Pass  20: suminf.    0.92387 (3) obj. -152.254 iterations 2
Cbc0038I Pass  21: suminf.    0.92387 (3) obj. -152.254 iterations 0
Cbc0038I Pass  22: suminf.    1.06505 (3) obj. -152.254 iterations 3
Cbc0038I Pass  23: suminf.    0.54182 (2) obj. -152.254 iterations 2
Cbc0038I Pass  24: suminf.    0.71194 (3) obj. -152.254 iterations 4
Cbc0038I Pass  25: suminf.    0.92387 (3) obj. -152.254 iterations 2
Cbc0038I Pass  26: suminf.    0.92387 (3) obj. -152.254 iterations 0
Cbc0038I Pass  27: suminf.    1.06505 (3) obj. -152.254 iterations 3
Cbc0038I Pass  28: suminf.    0.54182 (2) obj. -152.254 iterations 2
Cbc0038I Pass  29: suminf.    0.71194 (3) obj. -152.254 iterations 4
Cbc0038I Pass  30: suminf.    0.92387 (3) obj. -152.254 iterations 2
Cbc0038I Pass  31: suminf.    0.92387 (3) obj. -152.254 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 189.831 - took 0.04 seconds
Cbc0012I Integer solution of 189.8314 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 15 added rows had average density of 18.666667
Cbc0013I At root node, 15 cuts changed objective from -3231.0181 to -1361.7989 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2498 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 816 row cuts average 31.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0016I Integer solution of 176.4834 found by strong branching after 2831 iterations and 1 nodes (0.29 seconds)
Cbc0012I Integer solution of 0 found by rounding after 3273 iterations and 7 nodes (0.33 seconds)
Cbc0001I Search completed - best objective 0, took 3293 iterations and 8 nodes (0.33 seconds)
Cbc0032I Strong branching done 134 times (2091 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

