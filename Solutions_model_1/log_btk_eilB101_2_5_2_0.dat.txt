Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 96 (-7) columns and 530 (-73) elements
Clp1000I sum of infeasibilities 0.000216173 - average 1.24955e-06, 43 fixed columns
Coin0506I Presolve 86 (-87) rows, 51 (-45) columns and 266 (-264) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 2.2748533 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 83.96215
Clp0000I Optimal - objective value 83.96215
Coin0511I After Postsolve, objective 83.96215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.96215
Clp0000I Optimal - objective value 83.96215
Clp0000I Optimal - objective value 83.96215
Coin0511I After Postsolve, objective 83.96215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.9621497 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 96 columns (95 integer (95 of which binary)) and 533 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.950%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.98076
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.7502 iterations 46
Cbc0038I Solution found of -14.7502
Cbc0038I Relaxing continuous gives -14.7502
Cbc0038I Rounding solution of -51.5244 is better than previous of -14.7502

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 96 columns, reduced to 53 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -51.5244 to -56.7306 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.4539
Cbc0038I Pass   2: suminf.    2.64555 (11) obj. -59.4539 iterations 13
Cbc0038I Pass   3: suminf.    2.64555 (11) obj. -59.4539 iterations 0
Cbc0038I Pass   4: suminf.    2.83496 (7) obj. -59.4539 iterations 14
Cbc0038I Pass   5: suminf.    1.96683 (6) obj. -59.4539 iterations 11
Cbc0038I Pass   6: suminf.    1.95269 (5) obj. -59.4539 iterations 3
Cbc0038I Pass   7: suminf.    1.72908 (9) obj. -59.4539 iterations 13
Cbc0038I Pass   8: suminf.    1.72908 (9) obj. -59.4539 iterations 0
Cbc0038I Pass   9: suminf.    2.51799 (7) obj. -59.4539 iterations 15
Cbc0038I Pass  10: suminf.    1.95884 (6) obj. -59.4539 iterations 7
Cbc0038I Pass  11: suminf.    1.92391 (6) obj. -59.4539 iterations 7
Cbc0038I Pass  12: suminf.    2.44354 (6) obj. -59.4539 iterations 15
Cbc0038I Pass  13: suminf.    1.87241 (6) obj. -59.4539 iterations 3
Cbc0038I Pass  14: suminf.    1.39209 (5) obj. -59.4539 iterations 2
Cbc0038I Pass  15: suminf.    1.38816 (5) obj. -59.4539 iterations 1
Cbc0038I Pass  16: suminf.    1.77909 (6) obj. -59.4539 iterations 10
Cbc0038I Pass  17: suminf.    1.72908 (9) obj. -59.4539 iterations 4
Cbc0038I Pass  18: suminf.    2.51799 (7) obj. -59.4539 iterations 15
Cbc0038I Pass  19: suminf.    1.95884 (6) obj. -59.4539 iterations 7
Cbc0038I Pass  20: suminf.    1.92391 (6) obj. -59.4539 iterations 7
Cbc0038I Pass  21: suminf.    2.44354 (6) obj. -59.4539 iterations 17
Cbc0038I Pass  22: suminf.    1.87241 (6) obj. -59.4539 iterations 3
Cbc0038I Pass  23: suminf.    1.39209 (5) obj. -59.4539 iterations 2
Cbc0038I Pass  24: suminf.    1.38816 (5) obj. -59.4539 iterations 1
Cbc0038I Pass  25: suminf.    1.77909 (6) obj. -59.4539 iterations 10
Cbc0038I Pass  26: suminf.    1.72908 (9) obj. -59.4539 iterations 4
Cbc0038I Pass  27: suminf.    2.51799 (7) obj. -59.4539 iterations 15
Cbc0038I Pass  28: suminf.    1.95884 (6) obj. -59.4539 iterations 7
Cbc0038I Pass  29: suminf.    1.92391 (6) obj. -59.4539 iterations 7
Cbc0038I Pass  30: suminf.    2.44354 (6) obj. -59.4539 iterations 15
Cbc0038I Pass  31: suminf.    1.87241 (6) obj. -59.4539 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 96 columns, reduced to 59 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -56.7306 - took 0.05 seconds
Cbc0012I Integer solution of -56.73065 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 173 rows 96 columns, reduced to 53 rows 33 columns
Cbc0031I 27 added rows had average density of 61.111111
Cbc0013I At root node, 27 cuts changed objective from -83.96215 to -73.911636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8181 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1345 row cuts average 89.4 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 90.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -56.73065 best solution, best possible -73.911636 (0.86 seconds)
Cbc0016I Integer solution of -56.90476 found by strong branching after 7225 iterations and 32 nodes (1.11 seconds)
Cbc0016I Integer solution of -57.16654 found by strong branching after 7363 iterations and 40 nodes (1.12 seconds)
Cbc0038I Full problem 173 rows 96 columns, reduced to 4 rows 7 columns
Cbc0038I Full problem 173 rows 96 columns, reduced to 8 rows 12 columns
Cbc0012I Integer solution of -57.76352 found by RINS after 8437 iterations and 91 nodes (1.24 seconds)
Cbc0001I Search completed - best objective -57.76351999999999, took 8728 iterations and 98 nodes (1.25 seconds)
Cbc0032I Strong branching done 804 times (12067 iterations), fathomed 13 nodes and fixed 68 variables
Cbc0035I Maximum depth 13, 470 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.26

