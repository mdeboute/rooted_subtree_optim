Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 66 (-12) columns and 358 (-95) elements
Clp1000I sum of infeasibilities 5.00991e-05 - average 4.28197e-07, 23 fixed columns
Coin0506I Presolve 68 (-49) rows, 39 (-27) columns and 206 (-152) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 69.597089
Clp0000I Optimal - objective value 69.597089
Coin0511I After Postsolve, objective 69.597089, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22443859 - largest nonzero change 0 ( 0%) - largest zero change 2.9441491e-05
Clp0000I Optimal - objective value 69.597089
Clp0000I Optimal - objective value 69.597089
Clp0000I Optimal - objective value 69.597089
Coin0511I After Postsolve, objective 69.597089, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.59708904 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 66 columns (65 integer (65 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.586%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.1847
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -27.6418 iterations 28
Cbc0038I Solution found of -27.6418
Cbc0038I Relaxing continuous gives -27.6418
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 66 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -27.6418 to -51.9054 (0.02 seconds)
Cbc0038I Round again with cutoff of -53.3326
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.34733 (7) obj. -53.3326 iterations 12
Cbc0038I Pass   3: suminf.    0.84075 (4) obj. -53.3326 iterations 9
Cbc0038I Pass   4: suminf.    1.71930 (6) obj. -53.3326 iterations 5
Cbc0038I Pass   5: suminf.    2.68599 (9) obj. -53.3326 iterations 19
Cbc0038I Pass   6: suminf.    2.87603 (9) obj. -53.3326 iterations 19
Cbc0038I Pass   7: suminf.    2.06360 (6) obj. -53.3326 iterations 25
Cbc0038I Pass   8: suminf.    0.88906 (4) obj. -53.3326 iterations 9
Cbc0038I Pass   9: suminf.    0.07432 (1) obj. -53.3326 iterations 13
Cbc0038I Pass  10: suminf.    0.07432 (1) obj. -53.3326 iterations 0
Cbc0038I Pass  11: suminf.    0.49562 (2) obj. -53.3326 iterations 3
Cbc0038I Pass  12: suminf.    2.74377 (9) obj. -53.3326 iterations 17
Cbc0038I Pass  13: suminf.    2.11668 (10) obj. -53.3326 iterations 14
Cbc0038I Pass  14: suminf.    2.43540 (7) obj. -53.3326 iterations 10
Cbc0038I Pass  15: suminf.    1.40855 (6) obj. -53.3326 iterations 8
Cbc0038I Pass  16: suminf.    0.84075 (4) obj. -53.3326 iterations 6
Cbc0038I Pass  17: suminf.    1.71930 (6) obj. -53.3326 iterations 4
Cbc0038I Pass  18: suminf.    3.19156 (11) obj. -53.3326 iterations 14
Cbc0038I Pass  19: suminf.    0.56664 (4) obj. -53.3326 iterations 19
Cbc0038I Pass  20: suminf.    0.56664 (4) obj. -53.3326 iterations 0
Cbc0038I Pass  21: suminf.    1.21663 (4) obj. -53.3326 iterations 2
Cbc0038I Pass  22: suminf.    0.66465 (3) obj. -53.3326 iterations 8
Cbc0038I Pass  23: suminf.    1.99833 (9) obj. -53.3326 iterations 17
Cbc0038I Pass  24: suminf.    1.59613 (6) obj. -53.3326 iterations 10
Cbc0038I Pass  25: suminf.    1.20883 (6) obj. -53.3326 iterations 4
Cbc0038I Pass  26: suminf.    0.84075 (4) obj. -53.3326 iterations 10
Cbc0038I Pass  27: suminf.    1.71930 (6) obj. -53.3326 iterations 5
Cbc0038I Pass  28: suminf.    1.71224 (7) obj. -53.3326 iterations 6
Cbc0038I Pass  29: suminf.    1.29984 (5) obj. -53.3326 iterations 8
Cbc0038I Pass  30: suminf.    1.56906 (4) obj. -53.3326 iterations 6
Cbc0038I Pass  31: suminf.    1.14926 (3) obj. -53.3326 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 66 columns, reduced to 52 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -51.9054 - took 0.02 seconds
Cbc0012I Integer solution of -51.9054 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 111 rows 66 columns, reduced to 31 rows 18 columns
Cbc0031I 12 added rows had average density of 20.583333
Cbc0013I At root node, 12 cuts changed objective from -66.176102 to -57.515148 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2633 row cuts average 6.8 elements, 7 column cuts (7 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 826 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -51.9054, took 2833 iterations and 4 nodes (0.34 seconds)
Cbc0032I Strong branching done 44 times (563 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 1, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.34

