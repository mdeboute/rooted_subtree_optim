Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-9) rows, 32 (-3) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 0.00033688 - average 5.61467e-06, 4 fixed columns
Coin0506I Presolve 52 (-8) rows, 28 (-4) columns and 152 (-24) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Coin0511I After Postsolve, objective 67.093277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Coin0511I After Postsolve, objective 67.093277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.09327696 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 32 columns (31 integer (31 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.96495
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.7526 iterations 15
Cbc0038I Solution found of -18.7526
Cbc0038I Relaxing continuous gives -18.7526
Cbc0038I Rounding solution of -24.0537 is better than previous of -18.7526

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 32 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28.3577
Cbc0038I Pass   2: suminf.    0.32153 (2) obj. -28.3577 iterations 2
Cbc0038I Pass   3: suminf.    0.75183 (2) obj. -28.3577 iterations 1
Cbc0038I Pass   4: suminf.    0.96009 (6) obj. -28.3577 iterations 8
Cbc0038I Pass   5: suminf.    0.93006 (3) obj. -28.3577 iterations 3
Cbc0038I Pass   6: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass   7: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass   8: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass   9: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  10: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  11: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  12: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  13: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  14: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  15: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  16: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  17: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  18: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  19: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  20: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  21: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  22: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  23: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  24: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  25: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  26: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  27: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  28: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  29: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  30: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  31: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 32 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -24.0537 - took 0.04 seconds
Cbc0012I Integer solution of -24.0537 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 60 rows 32 columns, reduced to 21 rows 16 columns
Cbc0031I 10 added rows had average density of 26.4
Cbc0013I At root node, 10 cuts changed objective from -67.093277 to -47.243855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2364 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 978 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 50 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.700 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.0537 best solution, best possible -47.243855 (1.43 seconds)
Cbc0012I Integer solution of -25.83258 found by rounding after 3999 iterations and 8 nodes (1.49 seconds)
Cbc0012I Integer solution of -26.82369 found by rounding after 4210 iterations and 19 nodes (1.50 seconds)
Cbc0012I Integer solution of -27.3444 found by rounding after 4244 iterations and 20 nodes (1.50 seconds)
Cbc0012I Integer solution of -27.99662 found by rounding after 4298 iterations and 27 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -27.99661999999999, took 4302 iterations and 28 nodes (1.51 seconds)
Cbc0032I Strong branching done 244 times (2720 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 7, 44 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.52

