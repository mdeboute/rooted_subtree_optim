Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-20) rows, 25 (-10) columns and 141 (-54) elements
Clp1000I sum of infeasibilities 4.41198e-05 - average 9.00404e-07, 1 fixed columns
Coin0506I Presolve 45 (-4) rows, 23 (-2) columns and 129 (-12) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Coin0511I After Postsolve, objective 346.65585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Clp0000I Optimal - objective value 346.65585
Coin0511I After Postsolve, objective 346.65585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 346.6558547 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 25 columns (24 integer (24 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.22823
Cbc0038I Pass   1: suminf.    0.56889 (2) obj. -222.883 iterations 11
Cbc0038I Solution found of -127.333
Cbc0038I Relaxing continuous gives -127.333
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 25 columns, reduced to 32 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -127.333 to -167.333 (0.01 seconds)
Cbc0038I Round again with cutoff of -182.273
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.56889 (2) obj. -222.883 iterations 0
Cbc0038I Pass   3: suminf.    0.28565 (1) obj. -182.273 iterations 2
Cbc0038I Pass   4: suminf.    0.47500 (1) obj. -218.691 iterations 1
Cbc0038I Pass   5: suminf.    0.77484 (8) obj. -182.273 iterations 5
Cbc0038I Pass   6: suminf.    1.18793 (8) obj. -182.273 iterations 7
Cbc0038I Pass   7: suminf.    0.38410 (3) obj. -182.273 iterations 6
Cbc0038I Pass   8: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass   9: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  10: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  11: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  12: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  13: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  14: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  15: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  16: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  17: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  18: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  19: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  20: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  21: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  22: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  23: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  24: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  25: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I Pass  26: suminf.    0.21190 (3) obj. -182.273 iterations 3
Cbc0038I Pass  27: suminf.    0.55646 (5) obj. -182.273 iterations 10
Cbc0038I Pass  28: suminf.    1.53911 (6) obj. -182.273 iterations 7
Cbc0038I Pass  29: suminf.    1.49689 (6) obj. -182.273 iterations 1
Cbc0038I Pass  30: suminf.    1.29191 (5) obj. -182.273 iterations 7
Cbc0038I Pass  31: suminf.    0.91748 (4) obj. -182.273 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 25 columns, reduced to 36 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -167.333 - took 0.02 seconds
Cbc0012I Integer solution of -167.333 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 49 rows 25 columns, reduced to 32 rows 16 columns
Cbc0031I 5 added rows had average density of 16.8
Cbc0013I At root node, 5 cuts changed objective from -316.73487 to -219.4508 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 428 row cuts average 2.7 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -167.333, took 1065 iterations and 4 nodes (0.13 seconds)
Cbc0032I Strong branching done 38 times (188 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

