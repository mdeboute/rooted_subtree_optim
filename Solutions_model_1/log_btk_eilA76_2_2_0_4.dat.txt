Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 65 (-13) columns and 351 (-102) elements
Clp1000I sum of infeasibilities 1.58479e-05 - average 1.39016e-07, 31 fixed columns
Coin0506I Presolve 53 (-61) rows, 32 (-33) columns and 163 (-188) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 411.36856
Clp0000I Optimal - objective value 411.36856
Coin0511I After Postsolve, objective 411.36856, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1012548 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 411.36856
Clp0000I Optimal - objective value 411.36856
Clp0000I Optimal - objective value 411.36856
Coin0511I After Postsolve, objective 411.36856, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 411.3685583 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 65 columns (64 integer (64 of which binary)) and 350 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.327%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.52739
Cbc0038I Pass   1: suminf.    0.44444 (1) obj. -352.282 iterations 20
Cbc0038I Solution found of -325.997
Cbc0038I Relaxing continuous gives -325.997
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 65 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -325.997 to -356.066 (0.02 seconds)
Cbc0038I Round again with cutoff of -361.596
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.43386 (2) obj. -361.596 iterations 1
Cbc0038I Pass   3: suminf.    0.27661 (1) obj. -361.596 iterations 1
Cbc0038I Pass   4: suminf.    0.54257 (2) obj. -376.537 iterations 2
Cbc0038I Pass   5: suminf.    0.44408 (4) obj. -361.596 iterations 8
Cbc0038I Pass   6: suminf.    1.92910 (6) obj. -361.596 iterations 13
Cbc0038I Pass   7: suminf.    1.35834 (3) obj. -361.596 iterations 9
Cbc0038I Pass   8: suminf.    0.85422 (3) obj. -361.596 iterations 10
Cbc0038I Pass   9: suminf.    0.56610 (3) obj. -361.596 iterations 2
Cbc0038I Pass  10: suminf.    0.44308 (1) obj. -361.596 iterations 5
Cbc0038I Pass  11: suminf.    0.42510 (3) obj. -361.596 iterations 3
Cbc0038I Pass  12: suminf.    1.35834 (3) obj. -361.596 iterations 8
Cbc0038I Pass  13: suminf.    1.35834 (3) obj. -361.596 iterations 0
Cbc0038I Pass  14: suminf.    0.85422 (3) obj. -361.596 iterations 10
Cbc0038I Pass  15: suminf.    0.56610 (3) obj. -361.596 iterations 2
Cbc0038I Pass  16: suminf.    0.44308 (1) obj. -361.596 iterations 5
Cbc0038I Pass  17: suminf.    0.42510 (3) obj. -361.596 iterations 3
Cbc0038I Pass  18: suminf.    1.35834 (3) obj. -361.596 iterations 8
Cbc0038I Pass  19: suminf.    1.35834 (3) obj. -361.596 iterations 0
Cbc0038I Pass  20: suminf.    0.85422 (3) obj. -361.596 iterations 10
Cbc0038I Pass  21: suminf.    0.56610 (3) obj. -361.596 iterations 2
Cbc0038I Pass  22: suminf.    0.44308 (1) obj. -361.596 iterations 5
Cbc0038I Pass  23: suminf.    0.42510 (3) obj. -361.596 iterations 3
Cbc0038I Pass  24: suminf.    1.35834 (3) obj. -361.596 iterations 8
Cbc0038I Pass  25: suminf.    1.35834 (3) obj. -361.596 iterations 0
Cbc0038I Pass  26: suminf.    0.85422 (3) obj. -361.596 iterations 10
Cbc0038I Pass  27: suminf.    0.56610 (3) obj. -361.596 iterations 2
Cbc0038I Pass  28: suminf.    0.44308 (1) obj. -361.596 iterations 5
Cbc0038I Pass  29: suminf.    0.42510 (3) obj. -361.596 iterations 3
Cbc0038I Pass  30: suminf.    1.35834 (3) obj. -361.596 iterations 8
Cbc0038I Pass  31: suminf.    1.35834 (3) obj. -361.596 iterations 0
Cbc0038I Rounding solution of -356.673 is better than previous of -356.066

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 65 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -371.551
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.42254 (2) obj. -371.551 iterations 0
Cbc0038I Pass  32: suminf.    0.35396 (1) obj. -371.551 iterations 1
Cbc0038I Pass  33: suminf.    0.54257 (2) obj. -376.537 iterations 2
Cbc0038I Pass  34: suminf.    2.58844 (9) obj. -371.551 iterations 20
Cbc0038I Pass  35: suminf.    0.50615 (3) obj. -371.551 iterations 6
Cbc0038I Pass  36: suminf.    0.35261 (3) obj. -371.551 iterations 10
Cbc0038I Pass  37: suminf.    0.54162 (2) obj. -371.551 iterations 6
Cbc0038I Pass  38: suminf.    3.97781 (12) obj. -371.551 iterations 22
Cbc0038I Pass  39: suminf.    0.82154 (6) obj. -371.551 iterations 17
Cbc0038I Pass  40: suminf.    0.91015 (4) obj. -371.551 iterations 18
Cbc0038I Pass  41: suminf.    0.59739 (3) obj. -371.551 iterations 8
Cbc0038I Pass  42: suminf.    0.06897 (1) obj. -371.551 iterations 9
Cbc0038I Pass  43: suminf.    0.69258 (2) obj. -371.551 iterations 3
Cbc0038I Pass  44: suminf.    1.05779 (3) obj. -371.551 iterations 3
Cbc0038I Pass  45: suminf.    0.69258 (2) obj. -371.551 iterations 3
Cbc0038I Pass  46: suminf.    1.03237 (4) obj. -371.551 iterations 8
Cbc0038I Pass  47: suminf.    0.61093 (2) obj. -371.551 iterations 10
Cbc0038I Pass  48: suminf.    0.06897 (1) obj. -383.093 iterations 5
Cbc0038I Pass  49: suminf.    0.69258 (2) obj. -371.551 iterations 3
Cbc0038I Pass  50: suminf.    1.05779 (3) obj. -371.551 iterations 3
Cbc0038I Pass  51: suminf.    0.69258 (2) obj. -371.551 iterations 3
Cbc0038I Pass  52: suminf.    0.82871 (3) obj. -371.551 iterations 15
Cbc0038I Pass  53: suminf.    0.49454 (1) obj. -371.551 iterations 6
Cbc0038I Pass  54: suminf.    0.39286 (2) obj. -371.551 iterations 3
Cbc0038I Pass  55: suminf.    0.49454 (1) obj. -371.551 iterations 3
Cbc0038I Pass  56: suminf.    1.01930 (6) obj. -371.551 iterations 10
Cbc0038I Pass  57: suminf.    2.04110 (7) obj. -371.551 iterations 10
Cbc0038I Pass  58: suminf.    2.04110 (7) obj. -371.551 iterations 2
Cbc0038I Pass  59: suminf.    0.91015 (4) obj. -371.551 iterations 14
Cbc0038I Pass  60: suminf.    0.59739 (3) obj. -371.551 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 65 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -356.673 to -370.893 (0.05 seconds)
Cbc0038I Round again with cutoff of -383.496
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 4
Cbc0038I Pass  60: suminf.    1.44996 (6) obj. -383.496 iterations 3
Cbc0038I Pass  61: suminf.    1.17753 (3) obj. -383.496 iterations 4
Cbc0038I Pass  62: suminf.    0.97163 (2) obj. -383.496 iterations 6
Cbc0038I Pass  63: suminf.    0.83053 (3) obj. -383.496 iterations 2
Cbc0038I Pass  64: suminf.    0.97276 (4) obj. -383.496 iterations 7
Cbc0038I Pass  65: suminf.    0.87872 (3) obj. -383.496 iterations 5
Cbc0038I Pass  66: suminf.    0.88231 (3) obj. -383.496 iterations 7
Cbc0038I Pass  67: suminf.    0.82803 (2) obj. -383.496 iterations 2
Cbc0038I Pass  68: suminf.    0.83053 (3) obj. -383.496 iterations 2
Cbc0038I Pass  69: suminf.    0.97276 (4) obj. -383.496 iterations 7
Cbc0038I Pass  70: suminf.    0.87872 (3) obj. -383.496 iterations 5
Cbc0038I Pass  71: suminf.    0.88231 (3) obj. -383.496 iterations 7
Cbc0038I Pass  72: suminf.    0.82803 (2) obj. -383.496 iterations 2
Cbc0038I Pass  73: suminf.    0.83053 (3) obj. -383.496 iterations 2
Cbc0038I Pass  74: suminf.    0.97276 (4) obj. -383.496 iterations 7
Cbc0038I Pass  75: suminf.    0.87872 (3) obj. -383.496 iterations 5
Cbc0038I Pass  76: suminf.    0.88231 (3) obj. -383.496 iterations 7
Cbc0038I Pass  77: suminf.    0.82803 (2) obj. -383.496 iterations 2
Cbc0038I Pass  78: suminf.    0.83053 (3) obj. -383.496 iterations 2
Cbc0038I Pass  79: suminf.    0.97276 (4) obj. -383.496 iterations 7
Cbc0038I Pass  80: suminf.    0.87872 (3) obj. -383.496 iterations 5
Cbc0038I Pass  81: suminf.    0.88231 (3) obj. -383.496 iterations 7
Cbc0038I Pass  82: suminf.    0.82803 (2) obj. -383.496 iterations 2
Cbc0038I Pass  83: suminf.    0.83053 (3) obj. -383.496 iterations 2
Cbc0038I Pass  84: suminf.    0.97276 (4) obj. -383.496 iterations 7
Cbc0038I Pass  85: suminf.    0.87872 (3) obj. -383.496 iterations 5
Cbc0038I Pass  86: suminf.    0.88231 (3) obj. -383.496 iterations 7
Cbc0038I Pass  87: suminf.    0.82803 (2) obj. -383.496 iterations 2
Cbc0038I Pass  88: suminf.    0.83053 (3) obj. -383.496 iterations 2
Cbc0038I Pass  89: suminf.    0.97276 (4) obj. -383.496 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 65 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -370.893 - took 0.05 seconds
Cbc0012I Integer solution of -370.89281 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 113 rows 65 columns, reduced to 21 rows 13 columns
Cbc0031I 3 added rows had average density of 31.666667
Cbc0013I At root node, 3 cuts changed objective from -411.36856 to -393.0089 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 45 row cuts average 3.1 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -370.8928100000001, took 366 iterations and 20 nodes (0.13 seconds)
Cbc0032I Strong branching done 136 times (553 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

