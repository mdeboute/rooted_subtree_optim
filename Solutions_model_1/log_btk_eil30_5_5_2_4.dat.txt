Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 6.53555e-05 - average 1.28148e-06, 4 fixed columns
Coin0506I Presolve 40 (-11) rows, 25 (-4) columns and 122 (-30) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.1370666 - largest nonzero change 0 ( 0%) - largest zero change 2.8693142e-05
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Coin0511I After Postsolve, objective 101.74695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Coin0511I After Postsolve, objective 101.74695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.7469525 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.3074
Cbc0038I Pass   1: suminf.    0.16667 (1) obj. -44.3313 iterations 21
Cbc0038I Solution found of -24.7678
Cbc0038I Relaxing continuous gives -24.7678
Cbc0038I Rounding solution of -45.1414 is better than previous of -24.7678

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -45.1414 to -51.4261 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.4583
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.71960 (5) obj. -56.4583 iterations 5
Cbc0038I Pass   3: suminf.    0.78573 (2) obj. -56.4583 iterations 6
Cbc0038I Pass   4: suminf.    0.72339 (2) obj. -56.4583 iterations 2
Cbc0038I Pass   5: suminf.    0.71254 (3) obj. -56.4583 iterations 1
Cbc0038I Pass   6: suminf.    0.61651 (2) obj. -56.4583 iterations 3
Cbc0038I Pass   7: suminf.    0.61651 (2) obj. -56.4583 iterations 0
Cbc0038I Pass   8: suminf.    0.69611 (2) obj. -56.4583 iterations 2
Cbc0038I Pass   9: suminf.    0.69611 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  10: suminf.    1.46169 (5) obj. -56.4583 iterations 9
Cbc0038I Pass  11: suminf.    1.37693 (6) obj. -56.4583 iterations 2
Cbc0038I Pass  12: suminf.    1.71811 (4) obj. -56.4583 iterations 8
Cbc0038I Pass  13: suminf.    0.28135 (2) obj. -56.4583 iterations 5
Cbc0038I Pass  14: suminf.    0.37966 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  15: suminf.    0.37966 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  16: suminf.    0.82166 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  17: suminf.    1.01147 (4) obj. -56.4583 iterations 5
Cbc0038I Pass  18: suminf.    1.01147 (4) obj. -56.4583 iterations 0
Cbc0038I Pass  19: suminf.    1.52405 (5) obj. -56.4583 iterations 8
Cbc0038I Pass  20: suminf.    1.19595 (5) obj. -56.4583 iterations 1
Cbc0038I Pass  21: suminf.    0.80679 (3) obj. -56.4583 iterations 3
Cbc0038I Pass  22: suminf.    0.61651 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  23: suminf.    0.69611 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  24: suminf.    0.69611 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  25: suminf.    0.61651 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  26: suminf.    1.48797 (5) obj. -56.4583 iterations 9
Cbc0038I Pass  27: suminf.    0.73008 (4) obj. -56.4583 iterations 5
Cbc0038I Pass  28: suminf.    1.33702 (5) obj. -56.4583 iterations 5
Cbc0038I Pass  29: suminf.    0.87472 (3) obj. -56.4583 iterations 3
Cbc0038I Pass  30: suminf.    0.77905 (3) obj. -56.4583 iterations 1
Cbc0038I Pass  31: suminf.    1.33702 (5) obj. -56.4583 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -51.4261 - took 0.05 seconds
Cbc0012I Integer solution of -51.426093 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 18 columns
Cbc0031I 10 added rows had average density of 13.9
Cbc0013I At root node, 10 cuts changed objective from -101.74695 to -67.991847 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1498 row cuts average 4.9 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 783 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -53.243853 found by rounding after 1933 iterations and 2 nodes (0.17 seconds)
Cbc0001I Search completed - best objective -53.24385300000023, took 2436 iterations and 10 nodes (0.20 seconds)
Cbc0032I Strong branching done 76 times (628 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.21

