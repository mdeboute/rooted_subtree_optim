Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 419 (-34) elements
Clp1000I sum of infeasibilities 0.000212541 - average 1.54015e-06, 10 fixed columns
Coin0506I Presolve 121 (-17) rows, 65 (-10) columns and 365 (-54) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 0.26588882 - largest nonzero change 0 ( 0%) - largest zero change 2.7092154e-05
Clp0000I Optimal - objective value 41.660058
Clp0000I Optimal - objective value 41.660058
Coin0511I After Postsolve, objective 41.660058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.660058
Clp0000I Optimal - objective value 41.660058
Clp0000I Optimal - objective value 41.660058
Coin0511I After Postsolve, objective 41.660058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.66005794 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.08874
Cbc0038I Solution found of -3.05006
Cbc0038I Relaxing continuous gives -9.82675
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -9.82675 to -11.0226 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.0691
Cbc0038I Pass   1: suminf.    0.85645 (34) obj. -14.0691 iterations 27
Cbc0038I Pass   2: suminf.    1.20546 (5) obj. -14.0691 iterations 34
Cbc0038I Pass   3: suminf.    0.51336 (2) obj. -14.0691 iterations 8
Cbc0038I Pass   4: suminf.    0.41083 (2) obj. -14.0691 iterations 4
Cbc0038I Pass   5: suminf.    0.40086 (2) obj. -14.0691 iterations 1
Cbc0038I Pass   6: suminf.    0.75511 (3) obj. -14.0691 iterations 3
Cbc0038I Pass   7: suminf.    0.69091 (2) obj. -14.0691 iterations 1
Cbc0038I Pass   8: suminf.    0.76832 (2) obj. -14.0691 iterations 1
Cbc0038I Pass   9: suminf.    0.38086 (2) obj. -14.0691 iterations 2
Cbc0038I Pass  10: suminf.    0.56258 (3) obj. -14.0691 iterations 9
Cbc0038I Pass  11: suminf.    0.51815 (4) obj. -14.0691 iterations 6
Cbc0038I Pass  12: suminf.    1.04336 (4) obj. -14.0691 iterations 6
Cbc0038I Pass  13: suminf.    0.84268 (3) obj. -14.0691 iterations 3
Cbc0038I Pass  14: suminf.    0.53295 (4) obj. -14.0691 iterations 2
Cbc0038I Pass  15: suminf.    1.00119 (3) obj. -14.0691 iterations 4
Cbc0038I Pass  16: suminf.    1.00119 (3) obj. -14.0691 iterations 0
Cbc0038I Pass  17: suminf.    1.21232 (3) obj. -14.0691 iterations 1
Cbc0038I Pass  18: suminf.    0.91645 (3) obj. -14.0691 iterations 1
Cbc0038I Pass  19: suminf.    0.90911 (3) obj. -14.0691 iterations 1
Cbc0038I Pass  20: suminf.    0.89540 (4) obj. -14.0691 iterations 2
Cbc0038I Pass  21: suminf.    1.06612 (8) obj. -14.0691 iterations 5
Cbc0038I Pass  22: suminf.    1.07135 (8) obj. -14.0691 iterations 1
Cbc0038I Pass  23: suminf.    1.50305 (5) obj. -14.0691 iterations 11
Cbc0038I Pass  24: suminf.    1.50305 (5) obj. -14.0691 iterations 0
Cbc0038I Pass  25: suminf.    4.07413 (13) obj. -14.0691 iterations 13
Cbc0038I Pass  26: suminf.    2.53197 (7) obj. -14.0691 iterations 10
Cbc0038I Pass  27: suminf.    2.11274 (7) obj. -14.0691 iterations 2
Cbc0038I Pass  28: suminf.    1.66028 (6) obj. -14.0691 iterations 1
Cbc0038I Pass  29: suminf.    1.53128 (4) obj. -14.0691 iterations 9
Cbc0038I Pass  30: suminf.    0.80004 (7) obj. -14.0691 iterations 5
Cbc0038I Rounding solution of -11.9717 is better than previous of -11.0226

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 105 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -19.5525
Cbc0038I Pass  30: suminf.    1.96346 (34) obj. -19.5525 iterations 0
Cbc0038I Pass  31: suminf.    1.16016 (6) obj. -19.5525 iterations 40
Cbc0038I Pass  32: suminf.    0.74058 (4) obj. -19.5525 iterations 1
Cbc0038I Pass  33: suminf.    1.93068 (7) obj. -19.5525 iterations 10
Cbc0038I Pass  34: suminf.    2.25514 (7) obj. -19.5525 iterations 7
Cbc0038I Pass  35: suminf.    1.93920 (18) obj. -19.5525 iterations 15
Cbc0038I Pass  36: suminf.    1.79997 (25) obj. -19.5525 iterations 10
Cbc0038I Pass  37: suminf.    1.67455 (7) obj. -19.5525 iterations 29
Cbc0038I Pass  38: suminf.    0.64249 (3) obj. -19.5525 iterations 3
Cbc0038I Pass  39: suminf.    1.20798 (4) obj. -19.5525 iterations 6
Cbc0038I Pass  40: suminf.    0.94537 (3) obj. -19.5525 iterations 1
Cbc0038I Pass  41: suminf.    0.83562 (4) obj. -19.5525 iterations 2
Cbc0038I Pass  42: suminf.    0.83562 (4) obj. -19.5525 iterations 0
Cbc0038I Pass  43: suminf.    1.56026 (4) obj. -19.5525 iterations 5
Cbc0038I Pass  44: suminf.    1.18562 (6) obj. -19.5525 iterations 5
Cbc0038I Pass  45: suminf.    1.07422 (6) obj. -19.5525 iterations 3
Cbc0038I Pass  46: suminf.    1.25856 (3) obj. -19.5525 iterations 9
Cbc0038I Pass  47: suminf.    1.25856 (3) obj. -19.5525 iterations 0
Cbc0038I Pass  48: suminf.    1.38079 (4) obj. -19.5525 iterations 2
Cbc0038I Pass  49: suminf.    1.15847 (3) obj. -19.5525 iterations 2
Cbc0038I Pass  50: suminf.    2.35927 (11) obj. -19.5525 iterations 21
Cbc0038I Pass  51: suminf.    1.69582 (12) obj. -19.5525 iterations 10
Cbc0038I Pass  52: suminf.    1.41256 (10) obj. -19.5525 iterations 2
Cbc0038I Pass  53: suminf.    1.51150 (5) obj. -19.5525 iterations 13
Cbc0038I Pass  54: suminf.    1.21837 (5) obj. -19.5525 iterations 1
Cbc0038I Pass  55: suminf.    1.21837 (5) obj. -19.5525 iterations 2
Cbc0038I Pass  56: suminf.    1.89466 (6) obj. -19.5525 iterations 9
Cbc0038I Pass  57: suminf.    1.81962 (7) obj. -19.5525 iterations 1
Cbc0038I Pass  58: suminf.    1.79598 (6) obj. -19.5525 iterations 6
Cbc0038I Pass  59: suminf.    1.79598 (6) obj. -19.5525 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 104 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -11.9717 - took 0.16 seconds
Cbc0012I Integer solution of -11.971672 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 87 rows 47 columns
Cbc0012I Integer solution of -12.586152 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 19 added rows had average density of 48.842105
Cbc0013I At root node, 19 cuts changed objective from -41.486285 to -35.894838 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10239 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1398 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.586152 best solution, best possible -35.894838 (0.81 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 44 rows 26 columns
Cbc0012I Integer solution of -12.587442 found by RINS after 7705 iterations and 44 nodes (1.02 seconds)
Cbc0016I Integer solution of -12.812432 found by strong branching after 8619 iterations and 87 nodes (1.07 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 58 rows 31 columns
Cbc0004I Integer solution of -13.23056 found after 9506 iterations and 142 nodes (1.17 seconds)
Cbc0001I Search completed - best objective -13.23056, took 9796 iterations and 152 nodes (1.18 seconds)
Cbc0032I Strong branching done 1190 times (17546 iterations), fathomed 17 nodes and fixed 71 variables
Cbc0035I Maximum depth 30, 324 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.19

