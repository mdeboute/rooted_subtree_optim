Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 9.76777e-06 - average 2.79079e-07, 2 fixed columns
Coin0506I Presolve 31 (-4) rows, 20 (-2) columns and 94 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Coin0511I After Postsolve, objective 70.494879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Clp0000I Optimal - objective value 70.494879
Coin0511I After Postsolve, objective 70.494879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.49487929 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.09837
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.4237 iterations 19
Cbc0038I Solution found of -0.4237
Cbc0038I Relaxing continuous gives -0.4237
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -0.4237 to -26.4974 (0.02 seconds)
Cbc0038I Round again with cutoff of -30.7469
Cbc0038I Pass   2: suminf.    1.57417 (6) obj. -30.7469 iterations 6
Cbc0038I Pass   3: suminf.    1.54103 (4) obj. -30.7469 iterations 6
Cbc0038I Pass   4: suminf.    1.14905 (4) obj. -30.7469 iterations 1
Cbc0038I Pass   5: suminf.    1.06184 (5) obj. -30.7469 iterations 1
Cbc0038I Pass   6: suminf.    1.56269 (4) obj. -30.7469 iterations 6
Cbc0038I Pass   7: suminf.    0.90769 (3) obj. -30.7469 iterations 2
Cbc0038I Pass   8: suminf.    0.56016 (2) obj. -30.7469 iterations 3
Cbc0038I Pass   9: suminf.    0.47712 (2) obj. -30.7469 iterations 3
Cbc0038I Pass  10: suminf.    0.97421 (3) obj. -30.7469 iterations 5
Cbc0038I Pass  11: suminf.    0.66887 (5) obj. -30.7469 iterations 10
Cbc0038I Pass  12: suminf.    0.51332 (4) obj. -30.7469 iterations 3
Cbc0038I Pass  13: suminf.    0.62087 (4) obj. -30.7469 iterations 6
Cbc0038I Pass  14: suminf.    0.58988 (4) obj. -30.7469 iterations 1
Cbc0038I Pass  15: suminf.    1.20963 (4) obj. -30.7469 iterations 6
Cbc0038I Pass  16: suminf.    1.15231 (3) obj. -30.7469 iterations 1
Cbc0038I Pass  17: suminf.    0.47712 (2) obj. -30.7469 iterations 3
Cbc0038I Pass  18: suminf.    0.97421 (3) obj. -30.7469 iterations 5
Cbc0038I Pass  19: suminf.    0.56016 (2) obj. -30.7469 iterations 5
Cbc0038I Pass  20: suminf.    1.05785 (6) obj. -30.7469 iterations 6
Cbc0038I Pass  21: suminf.    0.88048 (3) obj. -30.7469 iterations 2
Cbc0038I Pass  22: suminf.    0.88048 (3) obj. -30.7469 iterations 0
Cbc0038I Pass  23: suminf.    0.52152 (6) obj. -30.7469 iterations 9
Cbc0038I Pass  24: suminf.    0.50327 (8) obj. -30.7469 iterations 2
Cbc0038I Pass  25: suminf.    1.24402 (12) obj. -30.7469 iterations 13
Cbc0038I Pass  26: suminf.    1.24402 (12) obj. -30.7469 iterations 1
Cbc0038I Pass  27: suminf.    0.66727 (4) obj. -30.7469 iterations 13
Cbc0038I Pass  28: suminf.    0.60915 (3) obj. -30.7469 iterations 2
Cbc0038I Pass  29: suminf.    0.30894 (3) obj. -30.7469 iterations 4
Cbc0038I Pass  30: suminf.    1.43936 (5) obj. -30.7469 iterations 8
Cbc0038I Pass  31: suminf.    0.92446 (4) obj. -30.7469 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.4974 - took 0.03 seconds
Cbc0012I Integer solution of -26.4974 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 13 added rows had average density of 15.384615
Cbc0013I At root node, 13 cuts changed objective from -68.991317 to -52.324603 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1991 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 894 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.49740000000001, took 3106 iterations and 14 nodes (0.25 seconds)
Cbc0032I Strong branching done 140 times (1152 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.25

