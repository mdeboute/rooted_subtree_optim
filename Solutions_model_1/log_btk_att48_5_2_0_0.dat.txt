Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 46 (-4) columns and 258 (-27) elements
Clp1000I sum of infeasibilities 1.07459e-06 - average 1.23516e-08, 6 fixed columns
Coin0506I Presolve 75 (-12) rows, 40 (-6) columns and 222 (-36) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 23.549797 - largest nonzero change 0 ( 0%) - largest zero change 1.9383958e-05
Clp0000I Optimal - objective value 2815.5597
Clp0000I Optimal - objective value 2815.5597
Coin0511I After Postsolve, objective 2815.5597, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 23.109047 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 2815.5597
Clp0000I Optimal - objective value 2815.5597
Clp0000I Optimal - objective value 2815.5597
Coin0511I After Postsolve, objective 2815.5597, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2815.559679 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 46 columns (45 integer (45 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.987%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 10.2175
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -690.352 iterations 37
Cbc0038I Solution found of -690.352
Cbc0038I Relaxing continuous gives -690.352
Cbc0038I Rounding solution of -694.283 is better than previous of -690.352

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 46 columns, reduced to 46 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -694.283 to -1369.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -1514.29
Cbc0038I Pass   2: suminf.    1.04345 (5) obj. -1514.29 iterations 4
Cbc0038I Pass   3: suminf.    1.28850 (3) obj. -1514.29 iterations 4
Cbc0038I Pass   4: suminf.    0.80278 (4) obj. -1514.29 iterations 2
Cbc0038I Pass   5: suminf.    2.00000 (5) obj. -1514.29 iterations 12
Cbc0038I Pass   6: suminf.    1.00000 (3) obj. -1514.29 iterations 5
Cbc0038I Pass   7: suminf.    1.00000 (3) obj. -1514.29 iterations 1
Cbc0038I Pass   8: suminf.    0.68352 (3) obj. -1514.29 iterations 4
Cbc0038I Pass   9: suminf.    0.67881 (2) obj. -1514.29 iterations 1
Cbc0038I Pass  10: suminf.    0.83040 (2) obj. -1514.29 iterations 1
Cbc0038I Pass  11: suminf.    2.90199 (9) obj. -1514.29 iterations 20
Cbc0038I Pass  12: suminf.    1.09511 (6) obj. -1514.29 iterations 7
Cbc0038I Pass  13: suminf.    1.00000 (5) obj. -1514.29 iterations 2
Cbc0038I Pass  14: suminf.    1.10630 (4) obj. -1514.29 iterations 10
Cbc0038I Pass  15: suminf.    1.24218 (4) obj. -1514.29 iterations 2
Cbc0038I Pass  16: suminf.    1.24156 (5) obj. -1514.29 iterations 1
Cbc0038I Pass  17: suminf.    0.83149 (5) obj. -1514.29 iterations 4
Cbc0038I Pass  18: suminf.    0.83149 (5) obj. -1514.29 iterations 0
Cbc0038I Pass  19: suminf.    1.06810 (4) obj. -1514.29 iterations 12
Cbc0038I Pass  20: suminf.    0.98794 (4) obj. -1514.29 iterations 1
Cbc0038I Pass  21: suminf.    1.28261 (5) obj. -1514.29 iterations 7
Cbc0038I Pass  22: suminf.    1.25789 (4) obj. -1514.29 iterations 1
Cbc0038I Pass  23: suminf.    0.99833 (4) obj. -1514.29 iterations 3
Cbc0038I Pass  24: suminf.    0.88761 (3) obj. -1514.29 iterations 3
Cbc0038I Pass  25: suminf.    0.92149 (4) obj. -1514.29 iterations 2
Cbc0038I Pass  26: suminf.    0.74948 (3) obj. -1514.29 iterations 1
Cbc0038I Pass  27: suminf.    0.95536 (4) obj. -1514.29 iterations 2
Cbc0038I Pass  28: suminf.    1.00000 (4) obj. -1514.29 iterations 5
Cbc0038I Pass  29: suminf.    1.00000 (4) obj. -1514.29 iterations 1
Cbc0038I Pass  30: suminf.    1.02654 (3) obj. -1514.29 iterations 4
Cbc0038I Pass  31: suminf.    0.80343 (3) obj. -1514.29 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 46 columns, reduced to 51 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1369.7 - took 0.04 seconds
Cbc0012I Integer solution of -1369.705 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 87 rows 46 columns, reduced to 46 rows 31 columns
Cbc0031I 21 added rows had average density of 28.285714
Cbc0013I At root node, 21 cuts changed objective from -2815.5597 to -1930.3987 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4637 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1219 row cuts average 44.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0016I Integer solution of -1384.451 found by strong branching after 3584 iterations and 6 nodes (0.48 seconds)
Cbc0001I Search completed - best objective -1384.451, took 3907 iterations and 12 nodes (0.49 seconds)
Cbc0032I Strong branching done 284 times (5851 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.49

