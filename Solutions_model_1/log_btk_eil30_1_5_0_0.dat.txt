Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 37 (-26) rows, 20 (-12) columns and 106 (-71) elements
Clp0000I Optimal - objective value 77.629813
Coin0511I After Postsolve, objective 77.629813, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.62981281 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.122%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.86663
Cbc0038I Pass   1: suminf.    1.09589 (4) obj. -49.9247 iterations 12
Cbc0038I Solution found of -6
Cbc0038I Relaxing continuous gives -6
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 22 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -6 to -20.05 (0.02 seconds)
Cbc0038I Round again with cutoff of -25.375
Cbc0038I Pass   2: suminf.    1.09589 (4) obj. -49.9247 iterations 0
Cbc0038I Pass   3: suminf.    0.74078 (3) obj. -25.375 iterations 10
Cbc0038I Pass   4: suminf.    0.63406 (3) obj. -25.375 iterations 10
Cbc0038I Pass   5: suminf.    0.91835 (3) obj. -25.375 iterations 7
Cbc0038I Pass   6: suminf.    0.85670 (6) obj. -25.375 iterations 2
Cbc0038I Pass   7: suminf.    0.70941 (5) obj. -25.375 iterations 9
Cbc0038I Pass   8: suminf.    0.70941 (5) obj. -25.375 iterations 0
Cbc0038I Pass   9: suminf.    1.20366 (4) obj. -25.375 iterations 8
Cbc0038I Pass  10: suminf.    0.58394 (2) obj. -25.375 iterations 3
Cbc0038I Pass  11: suminf.    0.93637 (2) obj. -25.375 iterations 1
Cbc0038I Pass  12: suminf.    0.10104 (1) obj. -25.375 iterations 3
Cbc0038I Pass  13: suminf.    1.93291 (6) obj. -25.375 iterations 5
Cbc0038I Pass  14: suminf.    1.79707 (8) obj. -25.375 iterations 2
Cbc0038I Pass  15: suminf.    1.24825 (16) obj. -25.375 iterations 13
Cbc0038I Pass  16: suminf.    1.15714 (16) obj. -25.375 iterations 3
Cbc0038I Pass  17: suminf.    1.83775 (5) obj. -53.8542 iterations 16
Cbc0038I Pass  18: suminf.    1.09589 (4) obj. -49.9247 iterations 3
Cbc0038I Pass  19: suminf.    0.74078 (3) obj. -25.375 iterations 9
Cbc0038I Pass  20: suminf.    0.63406 (3) obj. -25.375 iterations 9
Cbc0038I Pass  21: suminf.    0.91835 (3) obj. -25.375 iterations 5
Cbc0038I Pass  22: suminf.    0.85670 (6) obj. -25.375 iterations 2
Cbc0038I Pass  23: suminf.    0.70941 (5) obj. -25.375 iterations 7
Cbc0038I Pass  24: suminf.    0.70941 (5) obj. -25.375 iterations 0
Cbc0038I Pass  25: suminf.    1.20366 (4) obj. -25.375 iterations 8
Cbc0038I Pass  26: suminf.    0.58394 (2) obj. -25.375 iterations 3
Cbc0038I Pass  27: suminf.    0.93637 (2) obj. -25.375 iterations 1
Cbc0038I Pass  28: suminf.    0.10104 (1) obj. -25.375 iterations 3
Cbc0038I Pass  29: suminf.    0.24263 (6) obj. -25.375 iterations 7
Cbc0038I Pass  30: suminf.    0.22311 (7) obj. -25.375 iterations 2
Cbc0038I Pass  31: suminf.    1.24825 (16) obj. -25.375 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 35 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20.05 - took 0.02 seconds
Cbc0012I Integer solution of -20.05 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 20 columns, reduced to 15 rows 10 columns
Cbc0031I 9 added rows had average density of 12.222222
Cbc0013I At root node, 9 cuts changed objective from -72.92024 to -37.974356 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 826 row cuts average 4.4 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 461 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0004I Integer solution of -20.275 found after 1577 iterations and 1 nodes (0.13 seconds)
Cbc0001I Search completed - best objective -20.27500000000001, took 1613 iterations and 2 nodes (0.13 seconds)
Cbc0032I Strong branching done 26 times (290 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

