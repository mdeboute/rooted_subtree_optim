Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 57 (-21) columns and 313 (-140) elements
Clp1000I sum of infeasibilities 3.49441e-05 - average 3.39263e-07, 25 fixed columns
Coin0506I Presolve 32 (-71) rows, 22 (-35) columns and 102 (-211) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Coin0511I After Postsolve, objective 334.11788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Coin0511I After Postsolve, objective 334.11788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 334.1178787 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 103 rows, 57 columns (56 integer (56 of which binary)) and 313 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.53108
Cbc0038I Pass   1: suminf.    0.26931 (2) obj. -312.836 iterations 20
Cbc0038I Pass   2: suminf.    0.26931 (2) obj. -312.836 iterations 0
Cbc0038I Solution found of -194.191
Cbc0038I Relaxing continuous gives -194.191
Cbc0038I Rounding solution of -266.559 is better than previous of -194.191

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -266.559 to -314.416 (0.02 seconds)
Cbc0038I Round again with cutoff of -316.387
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.36118 (6) obj. -316.387 iterations 4
Cbc0038I Pass   4: suminf.    0.35179 (4) obj. -316.387 iterations 5
Cbc0038I Pass   5: suminf.    0.48792 (3) obj. -316.387 iterations 14
Cbc0038I Pass   6: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass   7: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass   8: suminf.    0.63612 (4) obj. -316.387 iterations 10
Cbc0038I Pass   9: suminf.    0.63612 (4) obj. -316.387 iterations 1
Cbc0038I Pass  10: suminf.    0.70450 (6) obj. -316.387 iterations 1
Cbc0038I Pass  11: suminf.    0.63612 (4) obj. -316.387 iterations 1
Cbc0038I Pass  12: suminf.    0.48792 (3) obj. -316.387 iterations 12
Cbc0038I Pass  13: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass  14: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass  15: suminf.    2.55271 (8) obj. -316.387 iterations 14
Cbc0038I Pass  16: suminf.    2.51876 (10) obj. -316.387 iterations 3
Cbc0038I Pass  17: suminf.    1.22594 (7) obj. -316.387 iterations 11
Cbc0038I Pass  18: suminf.    1.16120 (5) obj. -316.387 iterations 7
Cbc0038I Pass  19: suminf.    1.20402 (5) obj. -316.387 iterations 9
Cbc0038I Pass  20: suminf.    0.63612 (4) obj. -316.387 iterations 10
Cbc0038I Pass  21: suminf.    0.63612 (4) obj. -316.387 iterations 2
Cbc0038I Pass  22: suminf.    0.48792 (3) obj. -316.387 iterations 12
Cbc0038I Pass  23: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass  24: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass  25: suminf.    0.92075 (9) obj. -316.387 iterations 9
Cbc0038I Pass  26: suminf.    0.87197 (7) obj. -316.387 iterations 4
Cbc0038I Pass  27: suminf.    1.00188 (4) obj. -316.387 iterations 18
Cbc0038I Pass  28: suminf.    1.00188 (4) obj. -316.387 iterations 1
Cbc0038I Pass  29: suminf.    1.00296 (5) obj. -316.387 iterations 13
Cbc0038I Pass  30: suminf.    0.43721 (1) obj. -316.387 iterations 7
Cbc0038I Pass  31: suminf.    0.37838 (1) obj. -321.428 iterations 1
Cbc0038I Pass  32: suminf.    0.86935 (4) obj. -316.387 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -314.416 - took 0.02 seconds
Cbc0012I Integer solution of -314.41636 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 103 rows 57 columns, reduced to 22 rows 16 columns
Cbc0031I 7 added rows had average density of 9
Cbc0013I At root node, 7 cuts changed objective from -334.11788 to -319.57812 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -314.41636, took 126 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 6 times (23 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

