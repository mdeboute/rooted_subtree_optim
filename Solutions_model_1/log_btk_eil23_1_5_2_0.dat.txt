Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-9) rows, 23 (-2) columns and 118 (-17) elements
Clp1000I sum of infeasibilities 1.11521e-05 - average 2.78803e-07, 1 fixed columns
Coin0506I Presolve 38 (-2) rows, 22 (-1) columns and 112 (-6) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 147.29856
Clp0000I Optimal - objective value 147.29856
Coin0511I After Postsolve, objective 147.29856, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 147.29856
Clp0000I Optimal - objective value 147.29856
Clp0000I Optimal - objective value 147.29856
Coin0511I After Postsolve, objective 147.29856, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 147.2985645 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 23 columns (22 integer (22 of which binary)) and 121 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.550%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.98462
Cbc0038I Pass   1: suminf.    0.26077 (2) obj. -74.3024 iterations 20
Cbc0038I Pass   2: suminf.    0.14833 (1) obj. -72.5444 iterations 1
Cbc0038I Solution found of -49.2516
Cbc0038I Relaxing continuous gives -49.2516
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -49.2516 to -74.5552 (0.04 seconds)
Cbc0038I Round again with cutoff of -81.7865
Cbc0038I Pass   3: suminf.    0.45521 (3) obj. -81.7865 iterations 2
Cbc0038I Pass   4: suminf.    0.19115 (2) obj. -81.7865 iterations 3
Cbc0038I Pass   5: suminf.    0.39818 (5) obj. -81.7865 iterations 5
Cbc0038I Pass   6: suminf.    0.36505 (3) obj. -81.7865 iterations 2
Cbc0038I Pass   7: suminf.    1.23010 (10) obj. -81.7865 iterations 9
Cbc0038I Pass   8: suminf.    2.32692 (10) obj. -81.7865 iterations 16
Cbc0038I Pass   9: suminf.    2.27455 (9) obj. -81.7865 iterations 1
Cbc0038I Pass  10: suminf.    1.56128 (8) obj. -81.7865 iterations 4
Cbc0038I Pass  11: suminf.    1.48410 (7) obj. -81.7865 iterations 2
Cbc0038I Pass  12: suminf.    2.44413 (9) obj. -81.7865 iterations 9
Cbc0038I Pass  13: suminf.    2.23555 (8) obj. -81.7865 iterations 4
Cbc0038I Pass  14: suminf.    2.55178 (8) obj. -81.7865 iterations 9
Cbc0038I Pass  15: suminf.    1.81986 (7) obj. -81.7865 iterations 4
Cbc0038I Pass  16: suminf.    1.81986 (7) obj. -81.7865 iterations 0
Cbc0038I Pass  17: suminf.    2.94041 (9) obj. -81.7865 iterations 9
Cbc0038I Pass  18: suminf.    2.17669 (9) obj. -81.7865 iterations 7
Cbc0038I Pass  19: suminf.    2.17669 (9) obj. -81.7865 iterations 0
Cbc0038I Pass  20: suminf.    3.30936 (10) obj. -81.7865 iterations 8
Cbc0038I Pass  21: suminf.    1.10306 (7) obj. -81.7865 iterations 6
Cbc0038I Pass  22: suminf.    1.10306 (7) obj. -81.7865 iterations 0
Cbc0038I Pass  23: suminf.    1.82829 (7) obj. -81.7865 iterations 8
Cbc0038I Pass  24: suminf.    1.59591 (7) obj. -81.7865 iterations 6
Cbc0038I Pass  25: suminf.    2.39154 (8) obj. -81.7865 iterations 7
Cbc0038I Pass  26: suminf.    1.10306 (7) obj. -81.7865 iterations 4
Cbc0038I Pass  27: suminf.    1.10306 (7) obj. -81.7865 iterations 0
Cbc0038I Pass  28: suminf.    1.82829 (7) obj. -81.7865 iterations 8
Cbc0038I Pass  29: suminf.    1.59591 (7) obj. -81.7865 iterations 6
Cbc0038I Pass  30: suminf.    2.39154 (8) obj. -81.7865 iterations 7
Cbc0038I Pass  31: suminf.    1.10306 (7) obj. -81.7865 iterations 4
Cbc0038I Pass  32: suminf.    1.10306 (7) obj. -81.7865 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -74.5552 - took 0.06 seconds
Cbc0012I Integer solution of -74.55518 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 9 added rows had average density of 16.888889
Cbc0013I At root node, 9 cuts changed objective from -146.86771 to -92.326863 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1048 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 609 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -74.55518000000004, took 2742 iterations and 30 nodes (0.28 seconds)
Cbc0032I Strong branching done 278 times (1422 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

