Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 101 (-2) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 2.18732e-05 - average 1.19526e-07, 9 fixed columns
Coin0506I Presolve 165 (-18) rows, 92 (-9) columns and 506 (-54) elements
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.0097642 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 35.669508
Clp0000I Optimal - objective value 35.669508
Coin0511I After Postsolve, objective 35.669508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.669508
Clp0000I Optimal - objective value 35.669508
Clp0000I Optimal - objective value 35.669508
Coin0511I After Postsolve, objective 35.669508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.66950754 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 101 columns (100 integer (100 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 13.4723
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.1034 iterations 84
Cbc0038I Solution found of 11.1034
Cbc0038I Relaxing continuous gives 11.1034
Cbc0038I Rounding solution of -8.60254 is better than previous of 11.1034

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 91 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -8.60254 to -8.70789 (0.08 seconds)
Cbc0038I Round again with cutoff of -11.4041
Cbc0038I Pass   2: suminf.    3.48809 (19) obj. -11.4041 iterations 20
Cbc0038I Pass   3: suminf.    3.48809 (19) obj. -11.4041 iterations 0
Cbc0038I Pass   4: suminf.    2.77485 (9) obj. -11.4041 iterations 26
Cbc0038I Pass   5: suminf.    2.77485 (9) obj. -11.4041 iterations 0
Cbc0038I Pass   6: suminf.    2.49176 (8) obj. -11.4041 iterations 10
Cbc0038I Pass   7: suminf.    2.12589 (7) obj. -11.4041 iterations 6
Cbc0038I Pass   8: suminf.    2.12589 (7) obj. -11.4041 iterations 0
Cbc0038I Pass   9: suminf.    1.66380 (6) obj. -11.4041 iterations 10
Cbc0038I Pass  10: suminf.    2.15164 (6) obj. -11.4041 iterations 4
Cbc0038I Pass  11: suminf.    2.04465 (6) obj. -11.4041 iterations 1
Cbc0038I Pass  12: suminf.    2.04465 (6) obj. -11.4041 iterations 0
Cbc0038I Pass  13: suminf.    1.92479 (6) obj. -11.4041 iterations 3
Cbc0038I Pass  14: suminf.    1.92479 (6) obj. -11.4041 iterations 0
Cbc0038I Pass  15: suminf.    2.39065 (6) obj. -11.4041 iterations 2
Cbc0038I Pass  16: suminf.    1.79819 (7) obj. -11.4041 iterations 2
Cbc0038I Pass  17: suminf.    1.79819 (7) obj. -11.4041 iterations 0
Cbc0038I Pass  18: suminf.    1.90990 (6) obj. -11.4041 iterations 6
Cbc0038I Pass  19: suminf.    1.38832 (5) obj. -11.4041 iterations 1
Cbc0038I Pass  20: suminf.    1.36921 (5) obj. -11.4041 iterations 1
Cbc0038I Pass  21: suminf.    1.66380 (6) obj. -11.4041 iterations 6
Cbc0038I Pass  22: suminf.    2.15164 (6) obj. -11.4041 iterations 4
Cbc0038I Pass  23: suminf.    2.04465 (6) obj. -11.4041 iterations 1
Cbc0038I Pass  24: suminf.    2.04465 (6) obj. -11.4041 iterations 0
Cbc0038I Pass  25: suminf.    1.92479 (6) obj. -11.4041 iterations 3
Cbc0038I Pass  26: suminf.    1.92479 (6) obj. -11.4041 iterations 0
Cbc0038I Pass  27: suminf.    2.39065 (6) obj. -11.4041 iterations 2
Cbc0038I Pass  28: suminf.    1.79819 (7) obj. -11.4041 iterations 2
Cbc0038I Pass  29: suminf.    1.79819 (7) obj. -11.4041 iterations 0
Cbc0038I Pass  30: suminf.    1.90990 (6) obj. -11.4041 iterations 6
Cbc0038I Pass  31: suminf.    1.38832 (5) obj. -11.4041 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 93 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -8.70789 to -9.23325 (0.16 seconds)
Cbc0038I Round again with cutoff of -16.2572
Cbc0038I Pass  31: suminf.    4.90655 (28) obj. -16.2572 iterations 5
Cbc0038I Pass  32: suminf.    4.90655 (28) obj. -16.2572 iterations 0
Cbc0038I Pass  33: suminf.    1.72362 (7) obj. -16.2572 iterations 23
Cbc0038I Pass  34: suminf.    1.72362 (7) obj. -16.2572 iterations 0
Cbc0038I Pass  35: suminf.    2.93105 (11) obj. -16.2572 iterations 11
Cbc0038I Pass  36: suminf.    2.92903 (10) obj. -16.2572 iterations 1
Cbc0038I Pass  37: suminf.    3.21004 (10) obj. -16.2572 iterations 4
Cbc0038I Pass  38: suminf.    2.77182 (9) obj. -16.2572 iterations 2
Cbc0038I Pass  39: suminf.    1.91962 (6) obj. -16.2572 iterations 3
Cbc0038I Pass  40: suminf.    2.12994 (7) obj. -16.2572 iterations 6
Cbc0038I Pass  41: suminf.    2.12994 (7) obj. -16.2572 iterations 0
Cbc0038I Pass  42: suminf.    2.35557 (7) obj. -16.2572 iterations 5
Cbc0038I Pass  43: suminf.    1.94577 (6) obj. -16.2572 iterations 1
Cbc0038I Pass  44: suminf.    4.67591 (15) obj. -16.2572 iterations 18
Cbc0038I Pass  45: suminf.    3.44193 (13) obj. -16.2572 iterations 6
Cbc0038I Pass  46: suminf.    2.92227 (10) obj. -16.2572 iterations 18
Cbc0038I Pass  47: suminf.    3.02842 (8) obj. -16.2572 iterations 6
Cbc0038I Pass  48: suminf.    2.10755 (7) obj. -16.2572 iterations 3
Cbc0038I Pass  49: suminf.    2.59309 (8) obj. -16.2572 iterations 7
Cbc0038I Pass  50: suminf.    2.59309 (8) obj. -16.2572 iterations 0
Cbc0038I Pass  51: suminf.    2.98223 (10) obj. -16.2572 iterations 5
Cbc0038I Pass  52: suminf.    2.94343 (10) obj. -16.2572 iterations 1
Cbc0038I Pass  53: suminf.    2.06429 (8) obj. -16.2572 iterations 6
Cbc0038I Pass  54: suminf.    2.00450 (9) obj. -16.2572 iterations 1
Cbc0038I Pass  55: suminf.    2.79396 (9) obj. -16.2572 iterations 7
Cbc0038I Pass  56: suminf.    2.06349 (7) obj. -16.2572 iterations 3
Cbc0038I Pass  57: suminf.    2.06349 (7) obj. -16.2572 iterations 0
Cbc0038I Pass  58: suminf.    2.08191 (6) obj. -16.2572 iterations 13
Cbc0038I Pass  59: suminf.    2.08191 (6) obj. -16.2572 iterations 0
Cbc0038I Pass  60: suminf.    2.26701 (8) obj. -16.2572 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 104 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -9.23325 - took 0.19 seconds
Cbc0012I Integer solution of -9.233249 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 91 rows 56 columns
Cbc0012I Integer solution of -10.535249 found by RINS after 0 iterations and 0 nodes (0.31 seconds)
Cbc0031I 33 added rows had average density of 65.606061
Cbc0013I At root node, 33 cuts changed objective from -35.669508 to -28.003664 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20363 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2740 row cuts average 100.9 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.535249 best solution, best possible -28.003664 (1.89 seconds)
Cbc0012I Integer solution of -10.800258 found by rounding after 12008 iterations and 27 nodes (2.30 seconds)
Cbc0012I Integer solution of -10.871963 found by rounding after 12011 iterations and 28 nodes (2.30 seconds)
Cbc0012I Integer solution of -11.557921 found by rounding after 12059 iterations and 30 nodes (2.31 seconds)
Cbc0016I Integer solution of -11.595514 found by strong branching after 12287 iterations and 39 nodes (2.33 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 3 rows 5 columns
Cbc0004I Integer solution of -11.596784 found after 12474 iterations and 52 nodes (2.36 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 81 rows 47 columns
Cbc0010I After 96 nodes, 20 on tree, -11.596784 best solution, best possible -28.003664 (2.59 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 4 rows 8 columns
Cbc0001I Search completed - best objective -11.596784, took 16723 iterations and 208 nodes (2.85 seconds)
Cbc0032I Strong branching done 1942 times (35304 iterations), fathomed 24 nodes and fixed 100 variables
Cbc0035I Maximum depth 51, 497 variables fixed on reduced cost
Total time (CPU seconds):       2.72   (Wallclock seconds):       2.87

