Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 101 (-2) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 5.03879e-05 - average 2.83078e-07, 13 fixed columns
Coin0506I Presolve 153 (-25) rows, 87 (-14) columns and 472 (-78) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 33.905264
Clp0000I Optimal - objective value 33.905264
Coin0511I After Postsolve, objective 33.905264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.905264
Clp0000I Optimal - objective value 33.905264
Clp0000I Optimal - objective value 33.905264
Coin0511I After Postsolve, objective 33.905264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.90526429 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 101 columns (100 integer (100 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.858%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 60 integers unsatisfied sum - 13.1128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.25145 iterations 83
Cbc0038I Solution found of 9.25145
Cbc0038I Relaxing continuous gives 9.25145
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 102 rows 61 columns
Cbc0038I Mini branch and bound improved solution from 9.25145 to -2.9964 (0.07 seconds)
Cbc0038I Round again with cutoff of -6.08738
Cbc0038I Pass   2: suminf.    1.46398 (27) obj. -6.08738 iterations 30
Cbc0038I Pass   3: suminf.    1.18206 (46) obj. -6.08738 iterations 25
Cbc0038I Pass   4: suminf.    1.89444 (8) obj. -6.08738 iterations 50
Cbc0038I Pass   5: suminf.    1.89444 (8) obj. -6.08738 iterations 0
Cbc0038I Pass   6: suminf.    2.42328 (9) obj. -6.08738 iterations 20
Cbc0038I Pass   7: suminf.    2.58609 (10) obj. -6.08738 iterations 9
Cbc0038I Pass   8: suminf.    2.29525 (9) obj. -6.08738 iterations 1
Cbc0038I Pass   9: suminf.    2.39813 (7) obj. -6.08738 iterations 12
Cbc0038I Pass  10: suminf.    2.39813 (7) obj. -6.08738 iterations 0
Cbc0038I Pass  11: suminf.    3.08286 (10) obj. -6.08738 iterations 5
Cbc0038I Pass  12: suminf.    2.51842 (8) obj. -6.08738 iterations 3
Cbc0038I Pass  13: suminf.    2.51842 (8) obj. -6.08738 iterations 1
Cbc0038I Pass  14: suminf.    2.58609 (10) obj. -6.08738 iterations 9
Cbc0038I Pass  15: suminf.    2.29525 (9) obj. -6.08738 iterations 1
Cbc0038I Pass  16: suminf.    2.39813 (7) obj. -6.08738 iterations 12
Cbc0038I Pass  17: suminf.    2.39813 (7) obj. -6.08738 iterations 0
Cbc0038I Pass  18: suminf.    3.08286 (10) obj. -6.08738 iterations 5
Cbc0038I Pass  19: suminf.    2.51842 (8) obj. -6.08738 iterations 3
Cbc0038I Pass  20: suminf.    2.51842 (8) obj. -6.08738 iterations 1
Cbc0038I Pass  21: suminf.    2.58609 (10) obj. -6.08738 iterations 9
Cbc0038I Pass  22: suminf.    2.29525 (9) obj. -6.08738 iterations 1
Cbc0038I Pass  23: suminf.    2.39813 (7) obj. -6.08738 iterations 14
Cbc0038I Pass  24: suminf.    2.39813 (7) obj. -6.08738 iterations 0
Cbc0038I Pass  25: suminf.    3.08286 (10) obj. -6.08738 iterations 5
Cbc0038I Pass  26: suminf.    2.51842 (8) obj. -6.08738 iterations 3
Cbc0038I Pass  27: suminf.    2.51842 (8) obj. -6.08738 iterations 1
Cbc0038I Pass  28: suminf.    2.58609 (10) obj. -6.08738 iterations 11
Cbc0038I Pass  29: suminf.    2.29525 (9) obj. -6.08738 iterations 1
Cbc0038I Pass  30: suminf.    2.39813 (7) obj. -6.08738 iterations 14
Cbc0038I Pass  31: suminf.    2.39813 (7) obj. -6.08738 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 112 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -2.9964 to -3.10756 (0.13 seconds)
Cbc0038I Round again with cutoff of -11.651
Cbc0038I Pass  31: suminf.    4.09906 (27) obj. -11.651 iterations 0
Cbc0038I Pass  32: suminf.    3.30971 (46) obj. -11.651 iterations 25
Cbc0038I Pass  33: suminf.    2.61207 (10) obj. -11.651 iterations 33
Cbc0038I Pass  34: suminf.    2.15678 (10) obj. -11.651 iterations 2
Cbc0038I Pass  35: suminf.    3.14477 (11) obj. -11.651 iterations 20
Cbc0038I Pass  36: suminf.    3.14477 (11) obj. -11.651 iterations 0
Cbc0038I Pass  37: suminf.    4.24541 (10) obj. -11.651 iterations 10
Cbc0038I Pass  38: suminf.    2.92466 (8) obj. -11.651 iterations 4
Cbc0038I Pass  39: suminf.    2.93086 (9) obj. -11.651 iterations 7
Cbc0038I Pass  40: suminf.    2.89582 (10) obj. -11.651 iterations 2
Cbc0038I Pass  41: suminf.    2.89582 (10) obj. -11.651 iterations 0
Cbc0038I Pass  42: suminf.    4.10946 (10) obj. -11.651 iterations 6
Cbc0038I Pass  43: suminf.    2.92466 (8) obj. -11.651 iterations 4
Cbc0038I Pass  44: suminf.    2.93086 (9) obj. -11.651 iterations 7
Cbc0038I Pass  45: suminf.    2.89582 (10) obj. -11.651 iterations 2
Cbc0038I Pass  46: suminf.    2.89582 (10) obj. -11.651 iterations 0
Cbc0038I Pass  47: suminf.    4.10946 (10) obj. -11.651 iterations 6
Cbc0038I Pass  48: suminf.    2.92466 (8) obj. -11.651 iterations 4
Cbc0038I Pass  49: suminf.    2.93086 (9) obj. -11.651 iterations 7
Cbc0038I Pass  50: suminf.    2.89582 (10) obj. -11.651 iterations 2
Cbc0038I Pass  51: suminf.    2.89582 (10) obj. -11.651 iterations 0
Cbc0038I Pass  52: suminf.    4.10946 (10) obj. -11.651 iterations 6
Cbc0038I Pass  53: suminf.    2.92466 (8) obj. -11.651 iterations 4
Cbc0038I Pass  54: suminf.    2.93086 (9) obj. -11.651 iterations 7
Cbc0038I Pass  55: suminf.    2.89582 (10) obj. -11.651 iterations 2
Cbc0038I Pass  56: suminf.    2.89582 (10) obj. -11.651 iterations 0
Cbc0038I Pass  57: suminf.    4.10946 (10) obj. -11.651 iterations 6
Cbc0038I Pass  58: suminf.    2.92466 (8) obj. -11.651 iterations 4
Cbc0038I Pass  59: suminf.    2.93086 (9) obj. -11.651 iterations 7
Cbc0038I Pass  60: suminf.    2.89582 (10) obj. -11.651 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 112 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -3.10756 - took 0.16 seconds
Cbc0012I Integer solution of -3.107562 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 104 rows 62 columns
Cbc0031I 28 added rows had average density of 73.071429
Cbc0013I At root node, 28 cuts changed objective from -33.905264 to -26.192914 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23086 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2885 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.107562 best solution, best possible -26.192914 (1.72 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 95 rows 57 columns
Cbc0038I Full problem 178 rows 101 columns, reduced to 23 rows 22 columns
Cbc0001I Search completed - best objective -3.107561999999998, took 15868 iterations and 124 nodes (2.28 seconds)
Cbc0032I Strong branching done 1446 times (25597 iterations), fathomed 17 nodes and fixed 78 variables
Cbc0035I Maximum depth 32, 408 variables fixed on reduced cost
Total time (CPU seconds):       2.23   (Wallclock seconds):       2.30

