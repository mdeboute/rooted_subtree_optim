Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 75 (-30) rows, 42 (-11) columns and 227 (-76) elements
Clp0000I Optimal - objective value 111.9501
Coin0511I After Postsolve, objective 111.9501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.950098 - 26 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 75 rows, 42 columns (41 integer (41 of which binary)) and 227 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.045%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.79677
Cbc0038I Pass   1: suminf.    0.76050 (2) obj. -88.6155 iterations 18
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -86.5357 iterations 2
Cbc0038I Solution found of -70.25
Cbc0038I Relaxing continuous gives -70.25
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 42 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -70.25 to -85.25 (0.01 seconds)
Cbc0038I Round again with cutoff of -88.1449
Cbc0038I Pass   3: suminf.    0.76050 (2) obj. -88.6155 iterations 0
Cbc0038I Pass   4: suminf.    0.34414 (2) obj. -88.1449 iterations 5
Cbc0038I Pass   5: suminf.    0.38169 (2) obj. -88.1449 iterations 6
Cbc0038I Pass   6: suminf.    0.38169 (2) obj. -88.1449 iterations 0
Cbc0038I Pass   7: suminf.    0.20080 (2) obj. -88.1449 iterations 1
Cbc0038I Pass   8: suminf.    1.03325 (4) obj. -88.1449 iterations 7
Cbc0038I Pass   9: suminf.    0.61857 (2) obj. -88.1449 iterations 5
Cbc0038I Pass  10: suminf.    2.05991 (7) obj. -88.1449 iterations 10
Cbc0038I Pass  11: suminf.    0.71429 (3) obj. -88.9895 iterations 11
Cbc0038I Pass  12: suminf.    0.44123 (2) obj. -88.1449 iterations 6
Cbc0038I Pass  13: suminf.    0.30758 (3) obj. -88.1449 iterations 3
Cbc0038I Pass  14: suminf.    0.86291 (2) obj. -88.1449 iterations 3
Cbc0038I Pass  15: suminf.    0.93099 (3) obj. -88.1449 iterations 3
Cbc0038I Pass  16: suminf.    1.11851 (10) obj. -88.1449 iterations 9
Cbc0038I Pass  17: suminf.    0.89814 (8) obj. -88.1449 iterations 3
Cbc0038I Pass  18: suminf.    2.28141 (7) obj. -88.1449 iterations 7
Cbc0038I Pass  19: suminf.    0.83087 (3) obj. -88.1449 iterations 9
Cbc0038I Pass  20: suminf.    0.54539 (2) obj. -88.1449 iterations 3
Cbc0038I Pass  21: suminf.    0.11941 (2) obj. -88.1449 iterations 3
Cbc0038I Pass  22: suminf.    1.53032 (6) obj. -88.1449 iterations 11
Cbc0038I Pass  23: suminf.    0.80507 (4) obj. -88.1449 iterations 7
Cbc0038I Pass  24: suminf.    1.01269 (4) obj. -88.1449 iterations 7
Cbc0038I Pass  25: suminf.    0.38659 (2) obj. -88.1449 iterations 5
Cbc0038I Pass  26: suminf.    0.46080 (2) obj. -88.1449 iterations 4
Cbc0038I Pass  27: suminf.    0.65252 (2) obj. -88.1449 iterations 1
Cbc0038I Pass  28: suminf.    1.57280 (6) obj. -88.1449 iterations 11
Cbc0038I Pass  29: suminf.    0.94713 (5) obj. -88.1449 iterations 6
Cbc0038I Pass  30: suminf.    1.16537 (5) obj. -88.1449 iterations 8
Cbc0038I Pass  31: suminf.    0.22999 (3) obj. -88.1449 iterations 5
Cbc0038I Pass  32: suminf.    0.38169 (2) obj. -88.1449 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 42 columns, reduced to 42 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -85.25 to -87.75 (0.03 seconds)
Cbc0038I Round again with cutoff of -92.906
Cbc0038I Pass  32: suminf.    1.02531 (4) obj. -92.906 iterations 1
Cbc0038I Pass  33: suminf.    0.41134 (2) obj. -92.906 iterations 4
Cbc0038I Pass  34: suminf.    0.58007 (2) obj. -92.906 iterations 7
Cbc0038I Pass  35: suminf.    0.58007 (2) obj. -92.906 iterations 0
Cbc0038I Pass  36: suminf.    0.39124 (2) obj. -92.906 iterations 1
Cbc0038I Pass  37: suminf.    1.32387 (6) obj. -92.906 iterations 18
Cbc0038I Pass  38: suminf.    0.43624 (1) obj. -92.906 iterations 13
Cbc0038I Pass  39: suminf.    0.15863 (2) obj. -92.906 iterations 3
Cbc0038I Pass  40: suminf.    0.70406 (2) obj. -92.906 iterations 1
Cbc0038I Pass  41: suminf.    2.07239 (10) obj. -92.906 iterations 10
Cbc0038I Pass  42: suminf.    2.04524 (8) obj. -92.906 iterations 3
Cbc0038I Pass  43: suminf.    2.30268 (7) obj. -92.906 iterations 5
Cbc0038I Pass  44: suminf.    0.35667 (3) obj. -92.906 iterations 8
Cbc0038I Pass  45: suminf.    0.15863 (2) obj. -92.906 iterations 1
Cbc0038I Pass  46: suminf.    0.70406 (2) obj. -92.906 iterations 1
Cbc0038I Pass  47: suminf.    1.65001 (6) obj. -92.906 iterations 6
Cbc0038I Pass  48: suminf.    1.61273 (7) obj. -92.906 iterations 5
Cbc0038I Pass  49: suminf.    1.13837 (6) obj. -92.906 iterations 8
Cbc0038I Pass  50: suminf.    1.09344 (6) obj. -92.906 iterations 3
Cbc0038I Pass  51: suminf.    1.08749 (4) obj. -92.906 iterations 8
Cbc0038I Pass  52: suminf.    0.22236 (2) obj. -92.906 iterations 6
Cbc0038I Pass  53: suminf.    0.78494 (3) obj. -92.906 iterations 3
Cbc0038I Pass  54: suminf.    1.06163 (6) obj. -92.906 iterations 10
Cbc0038I Pass  55: suminf.    0.47378 (3) obj. -92.906 iterations 10
Cbc0038I Pass  56: suminf.    0.96423 (6) obj. -92.906 iterations 7
Cbc0038I Pass  57: suminf.    0.91644 (4) obj. -92.906 iterations 1
Cbc0038I Pass  58: suminf.    1.28201 (4) obj. -92.906 iterations 6
Cbc0038I Pass  59: suminf.    1.09344 (6) obj. -92.906 iterations 4
Cbc0038I Pass  60: suminf.    1.08749 (4) obj. -92.906 iterations 6
Cbc0038I Pass  61: suminf.    0.22236 (2) obj. -92.906 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 42 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -87.75 - took 0.04 seconds
Cbc0012I Integer solution of -87.75 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 75 rows 42 columns, reduced to 30 rows 18 columns
Cbc0031I 8 added rows had average density of 25.75
Cbc0013I At root node, 8 cuts changed objective from -111.9501 to -95.930543 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 110 row cuts average 3.2 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 59 row cuts average 33.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -87.75, took 298 iterations and 6 nodes (0.09 seconds)
Cbc0032I Strong branching done 62 times (438 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

