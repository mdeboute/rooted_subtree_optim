Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-30) rows, 69 (-9) columns and 380 (-73) elements
Clp1000I sum of infeasibilities 1.68083e-05 - average 1.34466e-07, 6 fixed columns
Coin0506I Presolve 111 (-14) rows, 62 (-7) columns and 338 (-42) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 52.246152
Clp0000I Optimal - objective value 52.246152
Coin0511I After Postsolve, objective 52.246152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.246152
Clp0000I Optimal - objective value 52.246152
Clp0000I Optimal - objective value 52.246152
Coin0511I After Postsolve, objective 52.246152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.24615175 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 125 rows, 69 columns (68 integer (68 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.282%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.79346
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.69082 iterations 41
Cbc0038I Solution found of -2.69082
Cbc0038I Relaxing continuous gives -2.69082
Cbc0038I Rounding solution of -12.9439 is better than previous of -2.69082

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 69 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -12.9439 to -27.2784 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.7753
Cbc0038I Pass   2: suminf.    1.18494 (5) obj. -29.7753 iterations 9
Cbc0038I Pass   3: suminf.    1.05843 (4) obj. -29.7753 iterations 4
Cbc0038I Pass   4: suminf.    1.40028 (4) obj. -29.7753 iterations 2
Cbc0038I Pass   5: suminf.    1.34579 (4) obj. -29.7753 iterations 1
Cbc0038I Pass   6: suminf.    1.05843 (4) obj. -29.7753 iterations 2
Cbc0038I Pass   7: suminf.    1.34335 (7) obj. -29.7753 iterations 27
Cbc0038I Pass   8: suminf.    1.34335 (7) obj. -29.7753 iterations 1
Cbc0038I Pass   9: suminf.    1.74156 (6) obj. -29.7753 iterations 22
Cbc0038I Pass  10: suminf.    1.20688 (4) obj. -29.7753 iterations 5
Cbc0038I Pass  11: suminf.    1.06839 (3) obj. -29.7753 iterations 1
Cbc0038I Pass  12: suminf.    1.17061 (3) obj. -29.7753 iterations 4
Cbc0038I Pass  13: suminf.    1.14132 (3) obj. -29.7753 iterations 1
Cbc0038I Pass  14: suminf.    1.17061 (3) obj. -29.7753 iterations 1
Cbc0038I Pass  15: suminf.    0.98317 (6) obj. -29.7753 iterations 14
Cbc0038I Pass  16: suminf.    0.73806 (3) obj. -29.7753 iterations 6
Cbc0038I Pass  17: suminf.    0.90234 (2) obj. -29.7753 iterations 3
Cbc0038I Pass  18: suminf.    0.67119 (2) obj. -29.7753 iterations 3
Cbc0038I Pass  19: suminf.    2.39539 (9) obj. -29.7753 iterations 24
Cbc0038I Pass  20: suminf.    2.39539 (9) obj. -29.7753 iterations 5
Cbc0038I Pass  21: suminf.    1.63448 (5) obj. -29.7753 iterations 14
Cbc0038I Pass  22: suminf.    1.51179 (5) obj. -29.7753 iterations 3
Cbc0038I Pass  23: suminf.    1.41738 (5) obj. -29.7753 iterations 3
Cbc0038I Pass  24: suminf.    1.41738 (5) obj. -29.7753 iterations 0
Cbc0038I Pass  25: suminf.    1.51300 (5) obj. -29.7753 iterations 4
Cbc0038I Pass  26: suminf.    2.74540 (11) obj. -29.7753 iterations 17
Cbc0038I Pass  27: suminf.    2.24309 (8) obj. -29.7753 iterations 6
Cbc0038I Pass  28: suminf.    1.85541 (5) obj. -29.7753 iterations 22
Cbc0038I Pass  29: suminf.    1.60133 (5) obj. -29.7753 iterations 4
Cbc0038I Pass  30: suminf.    1.60133 (5) obj. -29.7753 iterations 1
Cbc0038I Pass  31: suminf.    1.46928 (5) obj. -29.7753 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 69 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.2784 - took 0.05 seconds
Cbc0012I Integer solution of -27.27845 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 125 rows 69 columns, reduced to 55 rows 33 columns
Cbc0031I 25 added rows had average density of 38.56
Cbc0013I At root node, 25 cuts changed objective from -52.246152 to -43.223054 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9001 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1371 row cuts average 68.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 181 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -27.27845 best solution, best possible -43.223054 (0.70 seconds)
Cbc0001I Search completed - best objective -27.27845, took 8537 iterations and 48 nodes (0.85 seconds)
Cbc0032I Strong branching done 606 times (11101 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 18, 110 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.86

