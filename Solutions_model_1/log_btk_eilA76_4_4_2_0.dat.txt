Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 1.13142e-05 - average 8.25851e-08, 15 fixed columns
Coin0506I Presolve 109 (-28) rows, 61 (-15) columns and 332 (-86) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.379633 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 41.452986
Clp0000I Optimal - objective value 41.452986
Coin0511I After Postsolve, objective 41.452986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.452986
Clp0000I Optimal - objective value 41.452986
Clp0000I Optimal - objective value 41.452986
Coin0511I After Postsolve, objective 41.452986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.45298642 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.13939
Cbc0038I Solution found of 3.92856
Cbc0038I Relaxing continuous gives 2.04406
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 2.04406 to -12.6335 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.5156
Cbc0038I Pass   1: suminf.    2.19210 (18) obj. -15.5156 iterations 47
Cbc0038I Pass   2: suminf.    2.07955 (6) obj. -15.5156 iterations 30
Cbc0038I Pass   3: suminf.    0.95309 (4) obj. -15.5156 iterations 4
Cbc0038I Pass   4: suminf.    0.92483 (4) obj. -15.5156 iterations 1
Cbc0038I Pass   5: suminf.    1.69901 (5) obj. -15.5156 iterations 9
Cbc0038I Pass   6: suminf.    1.33272 (5) obj. -15.5156 iterations 9
Cbc0038I Pass   7: suminf.    1.03694 (5) obj. -15.5156 iterations 2
Cbc0038I Pass   8: suminf.    1.73359 (8) obj. -15.5156 iterations 19
Cbc0038I Pass   9: suminf.    1.53780 (8) obj. -15.5156 iterations 3
Cbc0038I Pass  10: suminf.    1.21932 (5) obj. -15.5156 iterations 10
Cbc0038I Pass  11: suminf.    1.14065 (4) obj. -15.5156 iterations 2
Cbc0038I Pass  12: suminf.    1.14899 (3) obj. -15.5156 iterations 4
Cbc0038I Pass  13: suminf.    0.82163 (2) obj. -15.5156 iterations 2
Cbc0038I Pass  14: suminf.    0.56035 (2) obj. -15.5156 iterations 3
Cbc0038I Pass  15: suminf.    0.82163 (2) obj. -15.5156 iterations 2
Cbc0038I Pass  16: suminf.    3.63409 (11) obj. -15.5156 iterations 16
Cbc0038I Pass  17: suminf.    1.43736 (4) obj. -15.5156 iterations 16
Cbc0038I Pass  18: suminf.    1.03377 (5) obj. -15.5156 iterations 3
Cbc0038I Pass  19: suminf.    1.55778 (4) obj. -15.5156 iterations 4
Cbc0038I Pass  20: suminf.    1.03058 (4) obj. -15.5156 iterations 1
Cbc0038I Pass  21: suminf.    1.03058 (4) obj. -15.5156 iterations 0
Cbc0038I Pass  22: suminf.    1.10266 (4) obj. -15.5156 iterations 2
Cbc0038I Pass  23: suminf.    1.10266 (4) obj. -15.5156 iterations 0
Cbc0038I Pass  24: suminf.    1.55778 (4) obj. -15.5156 iterations 2
Cbc0038I Pass  25: suminf.    1.03058 (4) obj. -15.5156 iterations 1
Cbc0038I Pass  26: suminf.    1.03058 (4) obj. -15.5156 iterations 0
Cbc0038I Pass  27: suminf.    1.10266 (4) obj. -15.5156 iterations 2
Cbc0038I Pass  28: suminf.    1.10266 (4) obj. -15.5156 iterations 0
Cbc0038I Pass  29: suminf.    1.55778 (4) obj. -15.5156 iterations 2
Cbc0038I Pass  30: suminf.    1.03058 (4) obj. -15.5156 iterations 1
Cbc0038I Rounding solution of -12.6422 is better than previous of -12.6335

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -20.7031
Cbc0038I Pass  30: suminf.    2.95466 (20) obj. -20.7031 iterations 5
Cbc0038I Pass  31: suminf.    2.35561 (8) obj. -20.7031 iterations 32
Cbc0038I Pass  32: suminf.    1.80355 (6) obj. -20.7031 iterations 4
Cbc0038I Pass  33: suminf.    2.19316 (7) obj. -20.7031 iterations 8
Cbc0038I Pass  34: suminf.    2.19316 (7) obj. -20.7031 iterations 0
Cbc0038I Pass  35: suminf.    2.16536 (7) obj. -20.7031 iterations 4
Cbc0038I Pass  36: suminf.    1.84683 (7) obj. -20.7031 iterations 2
Cbc0038I Pass  37: suminf.    1.78919 (5) obj. -20.7031 iterations 5
Cbc0038I Pass  38: suminf.    1.55845 (6) obj. -20.7031 iterations 3
Cbc0038I Pass  39: suminf.    2.45301 (6) obj. -20.7031 iterations 8
Cbc0038I Pass  40: suminf.    2.25984 (7) obj. -20.7031 iterations 9
Cbc0038I Pass  41: suminf.    1.62459 (5) obj. -20.7031 iterations 7
Cbc0038I Pass  42: suminf.    1.58963 (5) obj. -20.7031 iterations 1
Cbc0038I Pass  43: suminf.    1.80761 (5) obj. -20.7031 iterations 3
Cbc0038I Pass  44: suminf.    1.80842 (5) obj. -20.7031 iterations 1
Cbc0038I Pass  45: suminf.    1.62459 (5) obj. -20.7031 iterations 3
Cbc0038I Pass  46: suminf.    2.84000 (9) obj. -20.7031 iterations 19
Cbc0038I Pass  47: suminf.    1.95189 (7) obj. -20.7031 iterations 9
Cbc0038I Pass  48: suminf.    2.44964 (9) obj. -20.7031 iterations 18
Cbc0038I Pass  49: suminf.    2.44964 (9) obj. -20.7031 iterations 0
Cbc0038I Pass  50: suminf.    1.43253 (5) obj. -20.7031 iterations 10
Cbc0038I Pass  51: suminf.    1.16996 (5) obj. -20.7031 iterations 2
Cbc0038I Pass  52: suminf.    2.01454 (6) obj. -20.7031 iterations 11
Cbc0038I Pass  53: suminf.    2.01454 (6) obj. -20.7031 iterations 0
Cbc0038I Pass  54: suminf.    1.25623 (6) obj. -20.7031 iterations 6
Cbc0038I Pass  55: suminf.    2.99143 (13) obj. -20.7031 iterations 26
Cbc0038I Pass  56: suminf.    1.93774 (11) obj. -20.7031 iterations 15
Cbc0038I Pass  57: suminf.    1.93774 (11) obj. -20.7031 iterations 0
Cbc0038I Pass  58: suminf.    1.98412 (6) obj. -20.7031 iterations 13
Cbc0038I Pass  59: suminf.    1.81350 (5) obj. -20.7031 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 78 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -12.6422 - took 0.17 seconds
Cbc0012I Integer solution of -12.64223 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 66 rows 38 columns
Cbc0031I 19 added rows had average density of 57.210526
Cbc0013I At root node, 19 cuts changed objective from -41.452986 to -34.579516 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8618 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1782 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.64223 best solution, best possible -34.579516 (0.94 seconds)
Cbc0012I Integer solution of -12.74971 found by rounding after 6821 iterations and 24 nodes (1.11 seconds)
Cbc0012I Integer solution of -13.72056 found by rounding after 7315 iterations and 36 nodes (1.14 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 34 rows 21 columns
Cbc0012I Integer solution of -14.34877 found by RINS after 7494 iterations and 43 nodes (1.18 seconds)
Cbc0001I Search completed - best objective -14.34876999999999, took 8403 iterations and 80 nodes (1.23 seconds)
Cbc0032I Strong branching done 846 times (14813 iterations), fathomed 4 nodes and fixed 29 variables
Cbc0035I Maximum depth 30, 177 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.24

