Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-27) rows, 41 (-9) columns and 219 (-66) elements
Clp1000I sum of infeasibilities 0 - average 0, 12 fixed columns
Coin0506I Presolve 37 (-35) rows, 29 (-12) columns and 100 (-119) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 1.3301153 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 153195.99
Clp0000I Optimal - objective value 153195.99
Coin0511I After Postsolve, objective 153195.99, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 22.330611 - largest nonzero change 0.00013410007 ( 0.00091360227%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 153195.99
Clp0000I Optimal - objective value 153195.99
Clp0000I Optimal - objective value 153195.99
Coin0511I After Postsolve, objective 153195.99, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 153195.993 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 41 columns (40 integer (40 of which binary)) and 219 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.057%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.6414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -151493 iterations 23
Cbc0038I Solution found of -151493
Cbc0038I Relaxing continuous gives -151493
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -151663
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.33003 (3) obj. -151663 iterations 8
Cbc0038I Pass   3: suminf.    0.25068 (5) obj. -151663 iterations 2
Cbc0038I Pass   4: suminf.    1.00000 (4) obj. -151663 iterations 23
Cbc0038I Pass   5: suminf.    1.24510 (4) obj. -151663 iterations 13
Cbc0038I Pass   6: suminf.    0.25068 (5) obj. -151663 iterations 5
Cbc0038I Pass   7: suminf.    0.25068 (5) obj. -151663 iterations 0
Cbc0038I Pass   8: suminf.    1.00000 (4) obj. -151663 iterations 19
Cbc0038I Pass   9: suminf.    2.00000 (8) obj. -151663 iterations 7
Cbc0038I Pass  10: suminf.    1.00000 (7) obj. -151663 iterations 7
Cbc0038I Pass  11: suminf.    1.00000 (7) obj. -151663 iterations 0
Cbc0038I Pass  12: suminf.    0.86526 (4) obj. -151663 iterations 9
Cbc0038I Pass  13: suminf.    0.76467 (3) obj. -151663 iterations 1
Cbc0038I Pass  14: suminf.    0.25776 (3) obj. -151663 iterations 2
Cbc0038I Pass  15: suminf.    0.25776 (3) obj. -151663 iterations 0
Cbc0038I Pass  16: suminf.    1.03997 (3) obj. -151663 iterations 6
Cbc0038I Pass  17: suminf.    0.40710 (2) obj. -151663 iterations 6
Cbc0038I Pass  18: suminf.    0.39045 (2) obj. -151663 iterations 4
Cbc0038I Pass  19: suminf.    0.16530 (3) obj. -151663 iterations 4
Cbc0038I Pass  20: suminf.    0.39045 (2) obj. -151663 iterations 9
Cbc0038I Pass  21: suminf.    1.59302 (5) obj. -151663 iterations 15
Cbc0038I Pass  22: suminf.    1.59302 (5) obj. -151663 iterations 3
Cbc0038I Pass  23: suminf.    1.66779 (5) obj. -151663 iterations 17
Cbc0038I Pass  24: suminf.    1.57816 (5) obj. -151663 iterations 2
Cbc0038I Pass  25: suminf.    1.97547 (5) obj. -151663 iterations 4
Cbc0038I Pass  26: suminf.    1.97547 (5) obj. -151663 iterations 0
Cbc0038I Pass  27: suminf.    1.57816 (5) obj. -151663 iterations 5
Cbc0038I Pass  28: suminf.    2.61994 (9) obj. -151663 iterations 14
Cbc0038I Pass  29: suminf.    1.53637 (8) obj. -151663 iterations 7
Cbc0038I Pass  30: suminf.    1.53637 (8) obj. -151663 iterations 0
Cbc0038I Pass  31: suminf.    2.00000 (6) obj. -151663 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 41 columns, reduced to 27 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -151493 - took 0.02 seconds
Cbc0012I Integer solution of -151493.01 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 72 rows 41 columns, reduced to 20 rows 16 columns
Cbc0031I 9 added rows had average density of 15.333333
Cbc0013I At root node, 9 cuts changed objective from -153195.99 to -152062.09 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 218 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 26 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0012I Integer solution of -151567.14 found by DiveCoefficient after 260 iterations and 3 nodes (0.07 seconds)
Cbc0012I Integer solution of -151627.32 found by DiveCoefficient after 344 iterations and 3 nodes (0.07 seconds)
Cbc0016I Integer solution of -151686.58 found by strong branching after 395 iterations and 5 nodes (0.08 seconds)
Cbc0001I Search completed - best objective -151686.58, took 446 iterations and 8 nodes (0.08 seconds)
Cbc0032I Strong branching done 90 times (569 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

