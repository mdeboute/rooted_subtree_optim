Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 25 (-24) rows, 16 (-9) columns and 75 (-60) elements
Clp0000I Optimal - objective value 7486.8121
Coin0511I After Postsolve, objective 7486.8121, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7486.812069 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 25 rows, 16 columns (15 integer (15 of which binary)) and 75 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.356%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.986878
Cbc0038I Pass   1: suminf.    0.17368 (3) obj. -7345.46 iterations 8
Cbc0038I Solution found of -5283
Cbc0038I Relaxing continuous gives -5283
Cbc0038I Rounding solution of -6370.6 is better than previous of -5283

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6481.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17368 (3) obj. -7345.46 iterations 0
Cbc0038I Pass   3: suminf.    0.20061 (2) obj. -6481.1 iterations 2
Cbc0038I Pass   4: suminf.    0.20061 (2) obj. -6481.1 iterations 0
Cbc0038I Pass   5: suminf.    0.16975 (2) obj. -6481.1 iterations 1
Cbc0038I Pass   6: suminf.    0.47927 (4) obj. -7028.15 iterations 4
Cbc0038I Pass   7: suminf.    0.16975 (2) obj. -6481.1 iterations 3
Cbc0038I Pass   8: suminf.    0.16975 (2) obj. -6481.1 iterations 0
Cbc0038I Pass   9: suminf.    0.29502 (2) obj. -6481.1 iterations 4
Cbc0038I Pass  10: suminf.    0.29502 (2) obj. -6481.1 iterations 2
Cbc0038I Solution found of -7420.2
Cbc0038I Relaxing continuous gives -7420.2
Cbc0038I Rounding solution of -7437.2 is better than previous of -7420.2

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7444.68
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.42308 (1) obj. -7471.93 iterations 5
Cbc0038I Pass  12: suminf.    0.07642 (2) obj. -7444.68 iterations 4
Cbc0038I Pass  13: suminf.    0.29964 (2) obj. -7444.68 iterations 1
Cbc0038I Pass  14: suminf.    0.45810 (3) obj. -7444.68 iterations 1
Cbc0038I Pass  15: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  16: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  17: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  18: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  19: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  20: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  21: suminf.    0.29964 (2) obj. -7444.68 iterations 2
Cbc0038I Pass  22: suminf.    0.42308 (1) obj. -7444.68 iterations 4
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -7444.68 iterations 1
Cbc0038I Solution found of -7444.68
Cbc0038I Relaxing continuous gives -7457.2
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7462.31
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 4
Cbc0038I Pass  24: suminf.    0.42308 (1) obj. -7471.93 iterations 0
Cbc0038I Pass  25: suminf.    0.39710 (2) obj. -7462.31 iterations 4
Cbc0038I Pass  26: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  27: suminf.    0.63882 (2) obj. -7462.31 iterations 0
Cbc0038I Pass  28: suminf.    0.63882 (2) obj. -7462.31 iterations 2
Cbc0038I Pass  29: suminf.    0.63882 (2) obj. -7462.31 iterations 2
Cbc0038I Pass  30: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  31: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  32: suminf.    1.63411 (4) obj. -7462.31 iterations 0
Cbc0038I Pass  33: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  34: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  35: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  36: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  37: suminf.    0.39710 (2) obj. -7462.31 iterations 3
Cbc0038I Pass  38: suminf.    1.63411 (4) obj. -7462.31 iterations 3
Cbc0038I Pass  39: suminf.    0.39710 (2) obj. -7462.31 iterations 4
Cbc0038I Pass  40: suminf.    0.39710 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  41: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  42: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  43: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  44: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  45: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  46: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  47: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  48: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  49: suminf.    1.63411 (4) obj. -7462.31 iterations 0
Cbc0038I Pass  50: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  51: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  52: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  53: suminf.    1.63411 (4) obj. -7462.31 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7457.2 - took 0.01 seconds
Cbc0012I Integer solution of -7457.2 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7473.7765 to -7406.2 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7457.200000000001, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

