Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 419 (-34) elements
Clp1000I sum of infeasibilities 0.000103614 - average 7.50823e-07, 15 fixed columns
Coin0506I Presolve 114 (-24) rows, 60 (-15) columns and 341 (-78) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Coin0511I After Postsolve, objective 51.978485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Coin0511I After Postsolve, objective 51.978485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.97848479 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.18539
Cbc0038I Solution found of -2.12714
Cbc0038I Relaxing continuous gives -10.0822
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 79 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.0822 to -25.0553 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.7418
Cbc0038I Pass   1: suminf.    2.78407 (38) obj. -27.7418 iterations 31
Cbc0038I Pass   2: suminf.    1.59327 (7) obj. -27.7418 iterations 39
Cbc0038I Pass   3: suminf.    1.09995 (5) obj. -27.7418 iterations 7
Cbc0038I Pass   4: suminf.    1.96614 (9) obj. -27.7418 iterations 14
Cbc0038I Pass   5: suminf.    1.71796 (5) obj. -27.7418 iterations 3
Cbc0038I Pass   6: suminf.    0.80129 (4) obj. -27.7418 iterations 3
Cbc0038I Pass   7: suminf.    0.73407 (3) obj. -27.7418 iterations 2
Cbc0038I Pass   8: suminf.    1.10993 (4) obj. -27.7418 iterations 3
Cbc0038I Pass   9: suminf.    2.51481 (7) obj. -27.7418 iterations 18
Cbc0038I Pass  10: suminf.    2.15320 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  11: suminf.    2.15320 (6) obj. -27.7418 iterations 0
Cbc0038I Pass  12: suminf.    2.06827 (7) obj. -27.7418 iterations 11
Cbc0038I Pass  13: suminf.    2.25354 (7) obj. -27.7418 iterations 5
Cbc0038I Pass  14: suminf.    2.10172 (8) obj. -27.7418 iterations 6
Cbc0038I Pass  15: suminf.    2.49914 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  16: suminf.    1.93678 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  17: suminf.    1.76819 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  18: suminf.    2.39567 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  19: suminf.    1.70432 (5) obj. -27.7418 iterations 3
Cbc0038I Pass  20: suminf.    1.87141 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  21: suminf.    2.49086 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  22: suminf.    1.92947 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  23: suminf.    1.91726 (7) obj. -27.7418 iterations 4
Cbc0038I Pass  24: suminf.    2.29922 (7) obj. -27.7418 iterations 4
Cbc0038I Pass  25: suminf.    1.11760 (5) obj. -27.7418 iterations 5
Cbc0038I Pass  26: suminf.    1.10016 (5) obj. -27.7418 iterations 1
Cbc0038I Pass  27: suminf.    1.49860 (6) obj. -27.7418 iterations 6
Cbc0038I Pass  28: suminf.    1.27452 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  29: suminf.    2.48581 (7) obj. -27.7418 iterations 7
Cbc0038I Pass  30: suminf.    2.39432 (8) obj. -27.7418 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 93 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -25.0553 - took 0.08 seconds
Cbc0012I Integer solution of -25.05527 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 79 rows 42 columns
Cbc0031I 25 added rows had average density of 41.52
Cbc0013I At root node, 25 cuts changed objective from -51.919549 to -45.696282 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11679 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1685 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.05527 best solution, best possible -45.696282 (0.82 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 76 rows 42 columns
Cbc0001I Search completed - best objective -25.05526999999999, took 9559 iterations and 70 nodes (1.11 seconds)
Cbc0032I Strong branching done 912 times (15340 iterations), fathomed 8 nodes and fixed 50 variables
Cbc0035I Maximum depth 17, 179 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.12

