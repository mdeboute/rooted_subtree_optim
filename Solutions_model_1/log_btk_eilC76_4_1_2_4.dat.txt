Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 1.84607e-05 - average 1.32811e-07, 11 fixed columns
Coin0506I Presolve 119 (-20) rows, 65 (-11) columns and 360 (-62) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 2.6658696 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 36.858506
Clp0000I Optimal - objective value 36.858506
Coin0511I After Postsolve, objective 36.858506, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.858506
Clp0000I Optimal - objective value 36.858506
Clp0000I Optimal - objective value 36.858506
Coin0511I After Postsolve, objective 36.858506, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.85850575 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 426 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.238%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.50143
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.227 iterations 55
Cbc0038I Solution found of 13.227
Cbc0038I Relaxing continuous gives 13.227
Cbc0038I Rounding solution of 1.65167 is better than previous of 13.227

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 80 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 1.65167 to -2.90671 (0.06 seconds)
Cbc0038I Round again with cutoff of -6.30198
Cbc0038I Pass   2: suminf.    1.01890 (24) obj. -6.30198 iterations 31
Cbc0038I Pass   3: suminf.    0.93442 (39) obj. -6.30198 iterations 19
Cbc0038I Pass   4: suminf.    1.51311 (7) obj. -6.30198 iterations 41
Cbc0038I Pass   5: suminf.    0.70030 (4) obj. -6.30198 iterations 7
Cbc0038I Pass   6: suminf.    0.77186 (3) obj. -6.30198 iterations 8
Cbc0038I Pass   7: suminf.    1.23851 (4) obj. -6.30198 iterations 3
Cbc0038I Pass   8: suminf.    1.04045 (4) obj. -6.30198 iterations 2
Cbc0038I Pass   9: suminf.    1.60376 (5) obj. -6.30198 iterations 3
Cbc0038I Pass  10: suminf.    1.32092 (6) obj. -6.30198 iterations 2
Cbc0038I Pass  11: suminf.    1.09691 (5) obj. -6.30198 iterations 7
Cbc0038I Pass  12: suminf.    0.95342 (4) obj. -6.30198 iterations 1
Cbc0038I Pass  13: suminf.    1.23370 (5) obj. -6.30198 iterations 3
Cbc0038I Pass  14: suminf.    1.13036 (4) obj. -6.30198 iterations 1
Cbc0038I Pass  15: suminf.    1.20430 (3) obj. -6.30198 iterations 3
Cbc0038I Pass  16: suminf.    1.16291 (3) obj. -6.30198 iterations 1
Cbc0038I Pass  17: suminf.    2.97403 (8) obj. -6.30198 iterations 11
Cbc0038I Pass  18: suminf.    2.13525 (8) obj. -6.30198 iterations 8
Cbc0038I Pass  19: suminf.    2.13525 (8) obj. -6.30198 iterations 0
Cbc0038I Pass  20: suminf.    1.30777 (4) obj. -6.30198 iterations 9
Cbc0038I Pass  21: suminf.    1.19858 (4) obj. -6.30198 iterations 1
Cbc0038I Pass  22: suminf.    1.19858 (4) obj. -6.30198 iterations 0
Cbc0038I Pass  23: suminf.    1.53203 (4) obj. -6.30198 iterations 5
Cbc0038I Pass  24: suminf.    1.41782 (5) obj. -6.30198 iterations 2
Cbc0038I Pass  25: suminf.    1.31449 (4) obj. -6.30198 iterations 1
Cbc0038I Pass  26: suminf.    1.34603 (4) obj. -6.30198 iterations 3
Cbc0038I Pass  27: suminf.    1.34603 (4) obj. -6.30198 iterations 0
Cbc0038I Pass  28: suminf.    1.41782 (5) obj. -6.30198 iterations 3
Cbc0038I Pass  29: suminf.    2.26369 (8) obj. -6.30198 iterations 14
Cbc0038I Pass  30: suminf.    1.87908 (7) obj. -6.30198 iterations 8
Cbc0038I Pass  31: suminf.    1.88845 (6) obj. -6.30198 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 94 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -2.90671 to -4.14633 (0.13 seconds)
Cbc0038I Round again with cutoff of -12.4133
Cbc0038I Pass  31: suminf.    2.80658 (24) obj. -12.4133 iterations 0
Cbc0038I Pass  32: suminf.    2.57387 (39) obj. -12.4133 iterations 19
Cbc0038I Pass  33: suminf.    4.03089 (12) obj. -12.4133 iterations 47
Cbc0038I Pass  34: suminf.    1.69735 (7) obj. -12.4133 iterations 9
Cbc0038I Pass  35: suminf.    1.87372 (5) obj. -12.4133 iterations 9
Cbc0038I Pass  36: suminf.    1.27732 (5) obj. -12.4133 iterations 2
Cbc0038I Pass  37: suminf.    1.95361 (5) obj. -12.4133 iterations 4
Cbc0038I Pass  38: suminf.    1.95361 (5) obj. -12.4133 iterations 0
Cbc0038I Pass  39: suminf.    1.63263 (5) obj. -12.4133 iterations 4
Cbc0038I Pass  40: suminf.    1.51913 (5) obj. -12.4133 iterations 1
Cbc0038I Pass  41: suminf.    1.51913 (5) obj. -12.4133 iterations 0
Cbc0038I Pass  42: suminf.    1.95454 (5) obj. -12.4133 iterations 4
Cbc0038I Pass  43: suminf.    1.77878 (6) obj. -12.4133 iterations 1
Cbc0038I Pass  44: suminf.    1.77878 (6) obj. -12.4133 iterations 0
Cbc0038I Pass  45: suminf.    1.98331 (6) obj. -12.4133 iterations 4
Cbc0038I Pass  46: suminf.    4.72030 (15) obj. -12.4133 iterations 18
Cbc0038I Pass  47: suminf.    2.86676 (10) obj. -12.4133 iterations 8
Cbc0038I Pass  48: suminf.    2.86676 (10) obj. -12.4133 iterations 0
Cbc0038I Pass  49: suminf.    2.43973 (6) obj. -12.4133 iterations 11
Cbc0038I Pass  50: suminf.    1.81408 (5) obj. -12.4133 iterations 3
Cbc0038I Pass  51: suminf.    1.69667 (4) obj. -12.4133 iterations 1
Cbc0038I Pass  52: suminf.    1.34688 (7) obj. -12.4133 iterations 3
Cbc0038I Pass  53: suminf.    1.38047 (6) obj. -12.4133 iterations 12
Cbc0038I Pass  54: suminf.    1.36784 (7) obj. -12.4133 iterations 1
Cbc0038I Pass  55: suminf.    3.05498 (7) obj. -12.4133 iterations 9
Cbc0038I Pass  56: suminf.    2.41721 (7) obj. -12.4133 iterations 1
Cbc0038I Pass  57: suminf.    2.41721 (7) obj. -12.4133 iterations 0
Cbc0038I Pass  58: suminf.    2.57028 (7) obj. -12.4133 iterations 4
Cbc0038I Pass  59: suminf.    2.05689 (7) obj. -12.4133 iterations 1
Cbc0038I Pass  60: suminf.    2.00730 (7) obj. -12.4133 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 98 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -4.14633 - took 0.14 seconds
Cbc0012I Integer solution of -4.14633 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 81 rows 43 columns
Cbc0031I 26 added rows had average density of 54.115385
Cbc0013I At root node, 26 cuts changed objective from -36.858506 to -26.906846 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11224 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1173 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 84 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 181 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.14633 best solution, best possible -26.906846 (1.07 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 39 rows 27 columns
Cbc0012I Integer solution of -4.60033 found by RINS after 8635 iterations and 43 nodes (1.40 seconds)
Cbc0016I Integer solution of -4.60896 found by strong branching after 9044 iterations and 61 nodes (1.44 seconds)
Cbc0001I Search completed - best objective -4.608960000000003, took 9950 iterations and 76 nodes (1.48 seconds)
Cbc0032I Strong branching done 852 times (16768 iterations), fathomed 7 nodes and fixed 37 variables
Cbc0035I Maximum depth 23, 304 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.49

