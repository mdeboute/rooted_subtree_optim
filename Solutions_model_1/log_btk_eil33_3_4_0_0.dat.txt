Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 28 (-7) columns and 151 (-44) elements
Clp1000I sum of infeasibilities 4.67783e-05 - average 9.17222e-07, 5 fixed columns
Coin0506I Presolve 42 (-9) rows, 23 (-5) columns and 123 (-28) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 161.80884
Clp0000I Optimal - objective value 161.80884
Coin0511I After Postsolve, objective 161.80884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.80884
Clp0000I Optimal - objective value 161.80884
Clp0000I Optimal - objective value 161.80884
Coin0511I After Postsolve, objective 161.80884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.8088366 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 51 rows, 28 columns (27 integer (27 of which binary)) and 151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.070%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.50717
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -37.6315 iterations 15
Cbc0038I Solution found of -37.6315
Cbc0038I Relaxing continuous gives -37.6315
Cbc0038I Rounding solution of -60.6229 is better than previous of -37.6315

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -60.6229 to -80.7543 (0.02 seconds)
Cbc0038I Round again with cutoff of -88.8599
Cbc0038I Pass   2: suminf.    1.97741 (6) obj. -88.8599 iterations 10
Cbc0038I Pass   3: suminf.    1.04687 (3) obj. -88.8599 iterations 9
Cbc0038I Pass   4: suminf.    1.00072 (4) obj. -88.8599 iterations 2
Cbc0038I Pass   5: suminf.    1.52228 (4) obj. -88.8599 iterations 4
Cbc0038I Pass   6: suminf.    1.18882 (3) obj. -88.8599 iterations 1
Cbc0038I Pass   7: suminf.    1.07604 (4) obj. -88.8599 iterations 4
Cbc0038I Pass   8: suminf.    2.69582 (6) obj. -88.8599 iterations 5
Cbc0038I Pass   9: suminf.    1.66607 (5) obj. -88.8599 iterations 5
Cbc0038I Pass  10: suminf.    1.66607 (5) obj. -88.8599 iterations 0
Cbc0038I Pass  11: suminf.    1.40293 (3) obj. -88.8599 iterations 5
Cbc0038I Pass  12: suminf.    0.65423 (4) obj. -88.8599 iterations 2
Cbc0038I Pass  13: suminf.    0.55762 (3) obj. -88.8599 iterations 4
Cbc0038I Pass  14: suminf.    1.78316 (5) obj. -88.8599 iterations 4
Cbc0038I Pass  15: suminf.    0.66230 (3) obj. -88.8599 iterations 1
Cbc0038I Pass  16: suminf.    1.17596 (9) obj. -88.8599 iterations 4
Cbc0038I Pass  17: suminf.    1.09238 (7) obj. -88.8599 iterations 5
Cbc0038I Pass  18: suminf.    1.12058 (3) obj. -88.8599 iterations 8
Cbc0038I Pass  19: suminf.    0.94343 (2) obj. -88.8599 iterations 2
Cbc0038I Pass  20: suminf.    0.62665 (4) obj. -88.8599 iterations 4
Cbc0038I Pass  21: suminf.    0.86392 (2) obj. -88.8599 iterations 3
Cbc0038I Pass  22: suminf.    0.62332 (2) obj. -88.8599 iterations 1
Cbc0038I Pass  23: suminf.    0.53684 (2) obj. -88.8599 iterations 1
Cbc0038I Pass  24: suminf.    0.51836 (3) obj. -88.8599 iterations 1
Cbc0038I Pass  25: suminf.    0.96336 (3) obj. -88.8599 iterations 3
Cbc0038I Pass  26: suminf.    1.47004 (7) obj. -88.8599 iterations 11
Cbc0038I Pass  27: suminf.    1.00994 (5) obj. -88.8599 iterations 8
Cbc0038I Pass  28: suminf.    0.52987 (3) obj. -88.8599 iterations 8
Cbc0038I Pass  29: suminf.    0.26258 (2) obj. -88.8599 iterations 1
Cbc0038I Pass  30: suminf.    0.81493 (2) obj. -88.8599 iterations 4
Cbc0038I Pass  31: suminf.    0.71994 (2) obj. -88.8599 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -80.7543 to -81.4629 (0.04 seconds)
Cbc0038I Round again with cutoff of -103.45
Cbc0038I Pass  31: suminf.    2.57633 (10) obj. -103.45 iterations 1
Cbc0038I Pass  32: suminf.    0.84578 (4) obj. -103.45 iterations 13
Cbc0038I Pass  33: suminf.    0.73304 (3) obj. -103.45 iterations 1
Cbc0038I Pass  34: suminf.    0.71922 (4) obj. -103.45 iterations 6
Cbc0038I Pass  35: suminf.    0.68847 (3) obj. -103.45 iterations 2
Cbc0038I Pass  36: suminf.    1.16148 (3) obj. -103.45 iterations 4
Cbc0038I Pass  37: suminf.    1.01057 (3) obj. -103.45 iterations 2
Cbc0038I Pass  38: suminf.    1.28386 (4) obj. -103.45 iterations 2
Cbc0038I Pass  39: suminf.    0.60424 (2) obj. -103.45 iterations 1
Cbc0038I Pass  40: suminf.    0.66689 (2) obj. -103.45 iterations 2
Cbc0038I Pass  41: suminf.    1.25378 (5) obj. -103.45 iterations 11
Cbc0038I Pass  42: suminf.    0.99364 (3) obj. -103.45 iterations 6
Cbc0038I Pass  43: suminf.    0.99364 (3) obj. -103.45 iterations 0
Cbc0038I Pass  44: suminf.    1.36888 (7) obj. -103.45 iterations 5
Cbc0038I Pass  45: suminf.    1.19280 (9) obj. -103.45 iterations 2
Cbc0038I Pass  46: suminf.    2.45061 (6) obj. -103.45 iterations 8
Cbc0038I Pass  47: suminf.    2.20114 (7) obj. -103.45 iterations 3
Cbc0038I Pass  48: suminf.    2.19986 (9) obj. -103.45 iterations 2
Cbc0038I Pass  49: suminf.    2.90165 (7) obj. -103.45 iterations 8
Cbc0038I Pass  50: suminf.    0.98565 (4) obj. -103.45 iterations 5
Cbc0038I Pass  51: suminf.    0.84192 (3) obj. -103.45 iterations 2
Cbc0038I Pass  52: suminf.    1.03823 (3) obj. -103.45 iterations 2
Cbc0038I Pass  53: suminf.    0.87039 (5) obj. -103.45 iterations 3
Cbc0038I Pass  54: suminf.    1.87026 (5) obj. -103.45 iterations 4
Cbc0038I Pass  55: suminf.    0.95750 (7) obj. -103.45 iterations 4
Cbc0038I Pass  56: suminf.    1.41938 (4) obj. -103.45 iterations 7
Cbc0038I Pass  57: suminf.    1.41938 (4) obj. -103.45 iterations 0
Cbc0038I Pass  58: suminf.    0.88838 (4) obj. -103.45 iterations 5
Cbc0038I Pass  59: suminf.    0.88838 (4) obj. -103.45 iterations 0
Cbc0038I Pass  60: suminf.    1.47145 (4) obj. -103.45 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -81.4629 - took 0.05 seconds
Cbc0012I Integer solution of -81.4629 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 51 rows 28 columns, reduced to 34 rows 20 columns
Cbc0031I 11 added rows had average density of 24
Cbc0013I At root node, 11 cuts changed objective from -161.80884 to -119.60121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 973 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 611 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 52 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.749 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -81.4629 best solution, best possible -119.59666 (1.61 seconds)
Cbc0001I Search completed - best objective -81.46289999999999, took 2036 iterations and 6 nodes (1.87 seconds)
Cbc0032I Strong branching done 66 times (807 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.87

