Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 149 (-56) rows, 82 (-21) columns and 455 (-148) elements
Clp1000I sum of infeasibilities 0 - average 0, 78 fixed columns
Coin0506I Presolve 3 (-146) rows, 4 (-78) columns and 8 (-447) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 26399.54
Clp0000I Optimal - objective value 26399.54
Coin0511I After Postsolve, objective 26399.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3963611 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 26399.54
Clp0000I Optimal - objective value 26399.54
Clp0000I Optimal - objective value 26399.54
Coin0511I After Postsolve, objective 26399.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26399.54041 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 148 rows, 82 columns (81 integer (81 of which binary)) and 468 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.264%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.384248
Cbc0038I Pass   1: suminf.    0.30189 (2) obj. -25092.4 iterations 14
Cbc0038I Solution found of -15061.6
Cbc0038I Relaxing continuous gives -15061.5
Cbc0038I Rounding solution of -18842.4 is better than previous of -15061.5

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 82 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -18842.4 to -20988.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -21529.6
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.30189 (2) obj. -25092.4 iterations 0
Cbc0038I Pass   3: suminf.    0.27192 (1) obj. -21529.6 iterations 10
Cbc0038I Pass   4: suminf.    0.06897 (1) obj. -23743.3 iterations 4
Cbc0038I Pass   5: suminf.    0.14312 (1) obj. -21529.6 iterations 16
Cbc0038I Pass   6: suminf.    0.20690 (1) obj. -23987.1 iterations 13
Cbc0038I Pass   7: suminf.    1.46982 (6) obj. -21529.6 iterations 19
Cbc0038I Pass   8: suminf.    1.23030 (4) obj. -21529.6 iterations 11
Cbc0038I Pass   9: suminf.    0.98157 (3) obj. -21529.6 iterations 9
Cbc0038I Pass  10: suminf.    0.48276 (1) obj. -24407 iterations 7
Cbc0038I Solution found of -22581.8
Cbc0038I Relaxing continuous gives -22581.8
Cbc0038I Rounding solution of -24141.1 is better than previous of -22581.8

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 82 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24592.8
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.30189 (2) obj. -25092.4 iterations 0
Cbc0038I Pass  12: suminf.    0.33846 (2) obj. -24592.8 iterations 3
Cbc0038I Pass  13: suminf.    0.33846 (2) obj. -24592.8 iterations 1
Cbc0038I Pass  14: suminf.    0.42717 (2) obj. -24592.8 iterations 3
Cbc0038I Pass  15: suminf.    1.22281 (7) obj. -24592.8 iterations 11
Cbc0038I Pass  16: suminf.    0.60567 (2) obj. -24592.8 iterations 12
Cbc0038I Pass  17: suminf.    0.95190 (3) obj. -24592.8 iterations 11
Cbc0038I Pass  18: suminf.    0.60567 (2) obj. -24592.8 iterations 12
Cbc0038I Pass  19: suminf.    0.57924 (3) obj. -24592.8 iterations 20
Cbc0038I Pass  20: suminf.    0.57924 (3) obj. -24592.8 iterations 5
Cbc0038I Pass  21: suminf.    0.42717 (2) obj. -24592.8 iterations 15
Cbc0038I Pass  22: suminf.    0.42717 (2) obj. -24592.8 iterations 8
Cbc0038I Pass  23: suminf.    0.33846 (2) obj. -24592.8 iterations 3
Cbc0038I Pass  24: suminf.    1.04534 (4) obj. -24592.8 iterations 7
Cbc0038I Pass  25: suminf.    0.95087 (4) obj. -24592.8 iterations 4
Cbc0038I Pass  26: suminf.    0.26705 (2) obj. -25187.9 iterations 5
Cbc0038I Pass  27: suminf.    0.39641 (2) obj. -24592.8 iterations 12
Cbc0038I Pass  28: suminf.    0.39641 (2) obj. -24592.8 iterations 0
Cbc0038I Pass  29: suminf.    0.75263 (3) obj. -24592.8 iterations 9
Cbc0038I Pass  30: suminf.    0.48276 (1) obj. -24774.7 iterations 4
Cbc0038I Pass  31: suminf.    0.65464 (3) obj. -24592.8 iterations 7
Cbc0038I Pass  32: suminf.    0.48276 (1) obj. -24774.7 iterations 14
Cbc0038I Pass  33: suminf.    0.99566 (3) obj. -24592.8 iterations 13
Cbc0038I Pass  34: suminf.    0.48276 (1) obj. -24774.7 iterations 10
Cbc0038I Pass  35: suminf.    0.53858 (3) obj. -24592.8 iterations 7
Cbc0038I Pass  36: suminf.    0.52822 (2) obj. -24592.8 iterations 6
Cbc0038I Pass  37: suminf.    0.47264 (4) obj. -24592.8 iterations 11
Cbc0038I Pass  38: suminf.    0.26705 (2) obj. -25187.9 iterations 5
Cbc0038I Pass  39: suminf.    0.39641 (2) obj. -24592.8 iterations 12
Cbc0038I Pass  40: suminf.    0.39641 (2) obj. -24592.8 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 82 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -22581.8 to -24306.7 (0.04 seconds)
Cbc0038I Round again with cutoff of -25134.8
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 4
Cbc0038I Pass  40: suminf.    0.30456 (3) obj. -25134.8 iterations 1
Cbc0038I Pass  41: suminf.    0.62431 (2) obj. -25134.8 iterations 17
Cbc0038I Pass  42: suminf.    0.62431 (2) obj. -25134.8 iterations 11
Cbc0038I Pass  43: suminf.    0.51043 (2) obj. -25134.8 iterations 3
Cbc0038I Pass  44: suminf.    0.51043 (2) obj. -25134.8 iterations 6
Cbc0038I Pass  45: suminf.    0.51043 (2) obj. -25134.8 iterations 6
Cbc0038I Pass  46: suminf.    0.48911 (2) obj. -25134.8 iterations 7
Cbc0038I Pass  47: suminf.    0.48911 (2) obj. -25134.8 iterations 5
Cbc0038I Pass  48: suminf.    0.78967 (2) obj. -25134.8 iterations 2
Cbc0038I Pass  49: suminf.    0.78967 (2) obj. -25134.8 iterations 11
Cbc0038I Pass  50: suminf.    0.82476 (3) obj. -25134.8 iterations 13
Cbc0038I Pass  51: suminf.    0.40012 (7) obj. -25134.8 iterations 18
Cbc0038I Pass  52: suminf.    0.26204 (2) obj. -25134.8 iterations 13
Cbc0038I Pass  53: suminf.    0.51043 (2) obj. -25134.8 iterations 7
Cbc0038I Pass  54: suminf.    0.62431 (2) obj. -25134.8 iterations 3
Cbc0038I Pass  55: suminf.    0.54198 (2) obj. -25134.8 iterations 2
Cbc0038I Pass  56: suminf.    0.54198 (2) obj. -25134.8 iterations 8
Cbc0038I Pass  57: suminf.    0.98823 (3) obj. -25134.8 iterations 14
Cbc0038I Pass  58: suminf.    0.54198 (2) obj. -25134.8 iterations 15
Cbc0038I Pass  59: suminf.    1.00022 (3) obj. -25134.8 iterations 12
Cbc0038I Pass  60: suminf.    1.00022 (3) obj. -25134.8 iterations 7
Cbc0038I Pass  61: suminf.    0.54337 (2) obj. -25134.8 iterations 8
Cbc0038I Pass  62: suminf.    0.41379 (1) obj. -25510.2 iterations 2
Cbc0038I Pass  63: suminf.    0.48691 (1) obj. -25134.8 iterations 9
Cbc0038I Pass  64: suminf.    0.88050 (6) obj. -25134.8 iterations 17
Cbc0038I Pass  65: suminf.    0.46251 (2) obj. -25134.8 iterations 11
Cbc0038I Pass  66: suminf.    0.60314 (2) obj. -25134.8 iterations 2
Cbc0038I Pass  67: suminf.    0.92580 (3) obj. -25134.8 iterations 12
Cbc0038I Pass  68: suminf.    0.45482 (2) obj. -25134.8 iterations 9
Cbc0038I Pass  69: suminf.    0.25741 (2) obj. -25134.8 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 82 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -24306.7 to -24696 (0.05 seconds)
Cbc0038I Round again with cutoff of -25514.2
Cbc0038I Reduced cost fixing fixed 56 variables on major pass 5
Cbc0038I Pass  69: suminf.    0.38425 (2) obj. -26399.5 iterations 1
Cbc0038I Pass  70: suminf.    0.68852 (2) obj. -25514.2 iterations 14
Cbc0038I Pass  71: suminf.    0.88597 (2) obj. -25514.2 iterations 12
Cbc0038I Pass  72: suminf.    0.88597 (2) obj. -25514.2 iterations 3
Cbc0038I Pass  73: suminf.    0.90933 (2) obj. -25514.2 iterations 2
Cbc0038I Pass  74: suminf.    0.90933 (2) obj. -25514.2 iterations 1
Cbc0038I Pass  75: suminf.    0.90933 (2) obj. -25514.2 iterations 1
Cbc0038I Pass  76: suminf.    0.74913 (3) obj. -25514.2 iterations 11
Cbc0038I Pass  77: suminf.    0.30821 (2) obj. -25514.2 iterations 10
Cbc0038I Pass  78: suminf.    0.67357 (2) obj. -25514.2 iterations 5
Cbc0038I Pass  79: suminf.    0.67078 (2) obj. -25514.2 iterations 2
Cbc0038I Pass  80: suminf.    0.67078 (2) obj. -25514.2 iterations 11
Cbc0038I Pass  81: suminf.    0.92363 (2) obj. -26301.3 iterations 13
Cbc0038I Pass  82: suminf.    0.67078 (2) obj. -25514.2 iterations 6
Cbc0038I Pass  83: suminf.    0.67357 (2) obj. -25514.2 iterations 9
Cbc0038I Pass  84: suminf.    0.61247 (2) obj. -25514.2 iterations 6
Cbc0038I Pass  85: suminf.    0.38425 (2) obj. -26399.5 iterations 5
Cbc0038I Pass  86: suminf.    0.68852 (2) obj. -25514.2 iterations 14
Cbc0038I Pass  87: suminf.    0.68852 (2) obj. -25514.2 iterations 2
Cbc0038I Pass  88: suminf.    0.54100 (2) obj. -25514.2 iterations 10
Cbc0038I Pass  89: suminf.    0.54100 (2) obj. -25514.2 iterations 1
Cbc0038I Pass  90: suminf.    0.61247 (2) obj. -25514.2 iterations 8
Cbc0038I Pass  91: suminf.    0.61247 (2) obj. -25514.2 iterations 2
Cbc0038I Pass  92: suminf.    0.68852 (2) obj. -25514.2 iterations 14
Cbc0038I Pass  93: suminf.    0.88597 (2) obj. -25514.2 iterations 4
Cbc0038I Pass  94: suminf.    0.88597 (2) obj. -25514.2 iterations 12
Cbc0038I Pass  95: suminf.    0.90933 (2) obj. -25514.2 iterations 2
Cbc0038I Pass  96: suminf.    0.40174 (2) obj. -25514.2 iterations 6
Cbc0038I Pass  97: suminf.    0.38620 (2) obj. -25514.2 iterations 13
Cbc0038I Pass  98: suminf.    0.45107 (2) obj. -25705.3 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 82 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24696 - took 0.04 seconds
Cbc0012I Integer solution of -24695.95 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 148 rows 82 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 9.1428571
Cbc0013I At root node, 7 cuts changed objective from -26399.54 to -25070.557 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 2.5 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 81.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -24695.95, took 203 iterations and 4 nodes (0.09 seconds)
Cbc0032I Strong branching done 22 times (129 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

