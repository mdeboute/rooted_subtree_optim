Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 23 (-24) rows, 14 (-10) columns and 68 (-61) elements
Clp1000I sum of infeasibilities 1.2087e-05 - average 5.25522e-07, 2 fixed columns
Coin0506I Presolve 12 (-11) rows, 9 (-5) columns and 36 (-32) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Coin0511I After Postsolve, objective 81.631315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Coin0511I After Postsolve, objective 81.631315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.63131478 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 14 columns (13 integer (13 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.650%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.34164
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -39 iterations 7
Cbc0038I Solution found of -39
Cbc0038I Relaxing continuous gives -39
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -39 to -59.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.8633
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.40871 (1) obj. -61.8633 iterations 1
Cbc0038I Pass   3: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass   4: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass   5: suminf.    0.98579 (3) obj. -61.8633 iterations 2
Cbc0038I Pass   6: suminf.    0.76833 (2) obj. -61.8633 iterations 2
Cbc0038I Pass   7: suminf.    1.23680 (3) obj. -61.8633 iterations 3
Cbc0038I Pass   8: suminf.    1.37673 (5) obj. -61.8633 iterations 3
Cbc0038I Pass   9: suminf.    0.72239 (2) obj. -61.8633 iterations 3
Cbc0038I Pass  10: suminf.    0.55105 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  11: suminf.    0.40871 (1) obj. -61.8633 iterations 2
Cbc0038I Pass  12: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass  13: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  14: suminf.    0.74917 (3) obj. -61.8633 iterations 2
Cbc0038I Pass  15: suminf.    0.95992 (4) obj. -61.8633 iterations 1
Cbc0038I Pass  16: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  17: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  18: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  19: suminf.    0.95992 (4) obj. -61.8633 iterations 2
Cbc0038I Pass  20: suminf.    1.26008 (6) obj. -61.8633 iterations 5
Cbc0038I Pass  21: suminf.    0.97458 (3) obj. -61.8633 iterations 5
Cbc0038I Pass  22: suminf.    0.97458 (3) obj. -61.8633 iterations 0
Cbc0038I Pass  23: suminf.    0.40871 (1) obj. -61.8633 iterations 3
Cbc0038I Pass  24: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass  25: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  26: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  27: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  28: suminf.    0.74917 (3) obj. -61.8633 iterations 2
Cbc0038I Pass  29: suminf.    0.74917 (3) obj. -61.8633 iterations 0
Cbc0038I Pass  30: suminf.    0.95992 (4) obj. -61.8633 iterations 1
Cbc0038I Pass  31: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -59.6667 - took 0.01 seconds
Cbc0012I Integer solution of -59.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 14 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -81.631315 to -81.631315 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59.66669999999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

