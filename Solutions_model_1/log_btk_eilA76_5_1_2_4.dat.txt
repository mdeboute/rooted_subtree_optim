Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 74 (-4) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 8.90755e-05 - average 6.64742e-07, 21 fixed columns
Coin0506I Presolve 89 (-45) rows, 50 (-24) columns and 270 (-138) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 66.371157
Clp0000I Optimal - objective value 66.371157
Coin0511I After Postsolve, objective 66.371157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24614247 - largest nonzero change 0 ( 0%) - largest zero change 2.9413724e-05
Clp0000I Optimal - objective value 66.371157
Clp0000I Optimal - objective value 66.371157
Clp0000I Optimal - objective value 66.371157
Coin0511I After Postsolve, objective 66.371157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.37115657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 74 columns (73 integer (73 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.00551
Cbc0038I Solution found of 1.93295
Cbc0038I Relaxing continuous gives -7.87637
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -7.87637 to -30.1137 (0.04 seconds)
Cbc0038I Round again with cutoff of -33.7395
Cbc0038I Pass   1: suminf.    2.75993 (22) obj. -33.7395 iterations 45
Cbc0038I Pass   2: suminf.    1.76095 (6) obj. -33.7395 iterations 25
Cbc0038I Pass   3: suminf.    1.76095 (6) obj. -33.7395 iterations 0
Cbc0038I Pass   4: suminf.    2.03239 (7) obj. -33.7395 iterations 16
Cbc0038I Pass   5: suminf.    1.26468 (4) obj. -33.7395 iterations 7
Cbc0038I Pass   6: suminf.    0.77173 (5) obj. -33.7395 iterations 6
Cbc0038I Pass   7: suminf.    0.96890 (3) obj. -33.7395 iterations 6
Cbc0038I Pass   8: suminf.    0.92349 (3) obj. -33.7395 iterations 2
Cbc0038I Pass   9: suminf.    0.79329 (4) obj. -33.7395 iterations 5
Cbc0038I Pass  10: suminf.    1.71984 (5) obj. -33.7395 iterations 7
Cbc0038I Pass  11: suminf.    0.66094 (4) obj. -33.7395 iterations 9
Cbc0038I Pass  12: suminf.    0.66094 (4) obj. -33.7395 iterations 0
Cbc0038I Pass  13: suminf.    1.29922 (5) obj. -33.7395 iterations 10
Cbc0038I Pass  14: suminf.    0.94322 (3) obj. -33.7395 iterations 3
Cbc0038I Pass  15: suminf.    1.18645 (6) obj. -33.7395 iterations 8
Cbc0038I Pass  16: suminf.    1.08874 (7) obj. -33.7395 iterations 2
Cbc0038I Pass  17: suminf.    1.31526 (5) obj. -33.7395 iterations 10
Cbc0038I Pass  18: suminf.    1.14168 (4) obj. -33.7395 iterations 2
Cbc0038I Pass  19: suminf.    1.65955 (6) obj. -33.7395 iterations 7
Cbc0038I Pass  20: suminf.    1.55988 (5) obj. -33.7395 iterations 1
Cbc0038I Pass  21: suminf.    1.19201 (4) obj. -33.7395 iterations 9
Cbc0038I Pass  22: suminf.    1.46203 (7) obj. -33.7395 iterations 16
Cbc0038I Pass  23: suminf.    1.26342 (6) obj. -33.7395 iterations 6
Cbc0038I Pass  24: suminf.    0.99878 (3) obj. -33.7395 iterations 13
Cbc0038I Pass  25: suminf.    0.99595 (3) obj. -33.7395 iterations 2
Cbc0038I Pass  26: suminf.    0.72897 (3) obj. -33.7395 iterations 4
Cbc0038I Pass  27: suminf.    0.52913 (3) obj. -33.7395 iterations 3
Cbc0038I Pass  28: suminf.    1.13664 (3) obj. -33.7395 iterations 9
Cbc0038I Pass  29: suminf.    1.10300 (4) obj. -33.7395 iterations 1
Cbc0038I Pass  30: suminf.    0.66433 (4) obj. -33.7395 iterations 6
Cbc0038I Rounding solution of -34.8051 is better than previous of -30.1137

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -41.1184
Cbc0038I Pass  30: suminf.    3.30130 (22) obj. -41.1184 iterations 0
Cbc0038I Pass  31: suminf.    2.63414 (17) obj. -41.1184 iterations 13
Cbc0038I Pass  32: suminf.    1.72138 (6) obj. -41.1184 iterations 20
Cbc0038I Pass  33: suminf.    1.53592 (5) obj. -41.1184 iterations 4
Cbc0038I Pass  34: suminf.    0.98719 (3) obj. -41.1184 iterations 5
Cbc0038I Pass  35: suminf.    0.72955 (5) obj. -41.1184 iterations 4
Cbc0038I Pass  36: suminf.    0.72070 (5) obj. -41.1184 iterations 2
Cbc0038I Pass  37: suminf.    1.54004 (5) obj. -41.1184 iterations 10
Cbc0038I Pass  38: suminf.    1.07599 (4) obj. -41.1184 iterations 1
Cbc0038I Pass  39: suminf.    1.07599 (4) obj. -41.1184 iterations 0
Cbc0038I Pass  40: suminf.    1.46581 (5) obj. -41.1184 iterations 8
Cbc0038I Pass  41: suminf.    1.46581 (5) obj. -41.1184 iterations 0
Cbc0038I Pass  42: suminf.    1.42464 (5) obj. -41.1184 iterations 9
Cbc0038I Pass  43: suminf.    1.34727 (8) obj. -41.1184 iterations 7
Cbc0038I Pass  44: suminf.    2.52743 (7) obj. -41.1184 iterations 15
Cbc0038I Pass  45: suminf.    1.32777 (6) obj. -41.1184 iterations 7
Cbc0038I Pass  46: suminf.    1.09616 (5) obj. -41.1184 iterations 3
Cbc0038I Pass  47: suminf.    1.17667 (4) obj. -41.1184 iterations 10
Cbc0038I Pass  48: suminf.    1.07599 (4) obj. -41.1184 iterations 1
Cbc0038I Pass  49: suminf.    1.46581 (5) obj. -41.1184 iterations 8
Cbc0038I Pass  50: suminf.    1.46581 (5) obj. -41.1184 iterations 0
Cbc0038I Pass  51: suminf.    1.42464 (5) obj. -41.1184 iterations 9
Cbc0038I Pass  52: suminf.    1.34727 (8) obj. -41.1184 iterations 7
Cbc0038I Pass  53: suminf.    2.52743 (7) obj. -41.1184 iterations 15
Cbc0038I Pass  54: suminf.    1.32777 (6) obj. -41.1184 iterations 7
Cbc0038I Pass  55: suminf.    1.09616 (5) obj. -41.1184 iterations 3
Cbc0038I Pass  56: suminf.    1.17667 (4) obj. -41.1184 iterations 10
Cbc0038I Pass  57: suminf.    1.07599 (4) obj. -41.1184 iterations 1
Cbc0038I Pass  58: suminf.    1.46581 (5) obj. -41.1184 iterations 8
Cbc0038I Pass  59: suminf.    1.46581 (5) obj. -41.1184 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -34.8051 - took 0.09 seconds
Cbc0012I Integer solution of -34.80508 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 134 rows 74 columns, reduced to 60 rows 35 columns
Cbc0012I Integer solution of -35.64506 found by RINS after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 18 added rows had average density of 64.611111
Cbc0013I At root node, 18 cuts changed objective from -66.371157 to -57.756571 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8226 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1328 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 72.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -35.64506 best solution, best possible -57.756571 (0.70 seconds)
Cbc0004I Integer solution of -35.70381 found after 6182 iterations and 32 nodes (0.84 seconds)
Cbc0038I Full problem 134 rows 74 columns, reduced to 74 rows 43 columns
Cbc0012I Integer solution of -36.09903 found by RINS after 6637 iterations and 42 nodes (0.93 seconds)
Cbc0012I Integer solution of -37.66633 found by rounding after 7772 iterations and 82 nodes (1.13 seconds)
Cbc0038I Full problem 134 rows 74 columns, reduced to 18 rows 14 columns
Cbc0001I Search completed - best objective -37.66633, took 8324 iterations and 110 nodes (1.16 seconds)
Cbc0032I Strong branching done 1186 times (19176 iterations), fathomed 4 nodes and fixed 47 variables
Cbc0035I Maximum depth 25, 362 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.17

