Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 48 (-2) columns and 266 (-19) elements
Clp1000I sum of infeasibilities 0.000129555 - average 1.45567e-06, 1 fixed columns
Coin0506I Presolve 87 (-2) rows, 47 (-1) columns and 260 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.4774554 - largest nonzero change 0 ( 0%) - largest zero change 1.112934e-05
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Coin0511I After Postsolve, objective 175701.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Coin0511I After Postsolve, objective 175701.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 175701.5445 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 48 columns (47 integer (47 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 11.7444
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -79975.6 iterations 26
Cbc0038I Solution found of -79975.6
Cbc0038I Relaxing continuous gives -79975.6
Cbc0038I Rounding solution of -149608 is better than previous of -79975.6

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -149608 to -173632 (0.05 seconds)
Cbc0038I Round again with cutoff of -173839
Cbc0038I Pass   2: suminf.    4.81282 (12) obj. -173839 iterations 10
Cbc0038I Pass   3: suminf.    1.41403 (9) obj. -173839 iterations 12
Cbc0038I Pass   4: suminf.    1.15381 (10) obj. -173839 iterations 3
Cbc0038I Pass   5: suminf.    1.00000 (3) obj. -173839 iterations 23
Cbc0038I Pass   6: suminf.    0.84788 (3) obj. -173839 iterations 6
Cbc0038I Pass   7: suminf.    0.53092 (4) obj. -173839 iterations 3
Cbc0038I Pass   8: suminf.    1.00000 (3) obj. -173839 iterations 5
Cbc0038I Pass   9: suminf.    1.18482 (6) obj. -173839 iterations 7
Cbc0038I Pass  10: suminf.    1.00000 (6) obj. -173839 iterations 5
Cbc0038I Pass  11: suminf.    1.69507 (6) obj. -173839 iterations 17
Cbc0038I Pass  12: suminf.    1.19403 (8) obj. -173839 iterations 5
Cbc0038I Pass  13: suminf.    1.00000 (3) obj. -173839 iterations 11
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. -173839 iterations 3
Cbc0038I Pass  15: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  16: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  17: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  18: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  19: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  20: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  21: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  22: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  23: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  24: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  25: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  26: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  27: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  28: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  29: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  30: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  31: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -173632 to -173662 (0.10 seconds)
Cbc0038I Round again with cutoff of -174212
Cbc0038I Pass  31: suminf.    5.00898 (13) obj. -174212 iterations 1
Cbc0038I Pass  32: suminf.    1.55330 (7) obj. -174212 iterations 13
Cbc0038I Pass  33: suminf.    1.00000 (5) obj. -174212 iterations 10
Cbc0038I Pass  34: suminf.    3.03371 (12) obj. -174212 iterations 11
Cbc0038I Pass  35: suminf.    1.00000 (5) obj. -174212 iterations 7
Cbc0038I Pass  36: suminf.    1.13951 (8) obj. -174212 iterations 7
Cbc0038I Pass  37: suminf.    1.10114 (6) obj. -174212 iterations 6
Cbc0038I Pass  38: suminf.    1.00000 (5) obj. -174212 iterations 6
Cbc0038I Pass  39: suminf.    1.00000 (5) obj. -174212 iterations 3
Cbc0038I Pass  40: suminf.    3.03371 (12) obj. -174212 iterations 11
Cbc0038I Pass  41: suminf.    1.00000 (5) obj. -174212 iterations 7
Cbc0038I Pass  42: suminf.    3.13483 (8) obj. -174212 iterations 21
Cbc0038I Pass  43: suminf.    2.31822 (8) obj. -174212 iterations 5
Cbc0038I Pass  44: suminf.    1.73514 (7) obj. -174212 iterations 1
Cbc0038I Pass  45: suminf.    3.20634 (7) obj. -174212 iterations 6
Cbc0038I Pass  46: suminf.    2.29139 (7) obj. -174212 iterations 1
Cbc0038I Pass  47: suminf.    1.00000 (4) obj. -174212 iterations 4
Cbc0038I Pass  48: suminf.    1.00000 (4) obj. -174212 iterations 3
Cbc0038I Pass  49: suminf.    1.46154 (4) obj. -174212 iterations 9
Cbc0038I Pass  50: suminf.    0.97616 (3) obj. -174212 iterations 1
Cbc0038I Pass  51: suminf.    0.94738 (3) obj. -174212 iterations 2
Cbc0038I Pass  52: suminf.    0.97758 (3) obj. -174212 iterations 3
Cbc0038I Pass  53: suminf.    1.81584 (10) obj. -174212 iterations 22
Cbc0038I Pass  54: suminf.    1.81584 (10) obj. -174212 iterations 3
Cbc0038I Pass  55: suminf.    2.69531 (9) obj. -174212 iterations 17
Cbc0038I Pass  56: suminf.    1.05138 (9) obj. -174212 iterations 6
Cbc0038I Pass  57: suminf.    2.37428 (7) obj. -174212 iterations 6
Cbc0038I Pass  58: suminf.    2.37428 (7) obj. -174212 iterations 0
Cbc0038I Pass  59: suminf.    1.05295 (5) obj. -174212 iterations 7
Cbc0038I Pass  60: suminf.    4.89352 (17) obj. -174212 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -173662 - took 0.11 seconds
Cbc0012I Integer solution of -173661.7 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 32 columns
Cbc0031I 19 added rows had average density of 31.526316
Cbc0013I At root node, 19 cuts changed objective from -175701.54 to -174695.14 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5991 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1351 row cuts average 46.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 40.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 6 nodes, 7 on tree, -173661.7 best solution, best possible -174695.14 (0.70 seconds)
Cbc0016I Integer solution of -173699.8 found by strong branching after 5524 iterations and 20 nodes (0.74 seconds)
Cbc0001I Search completed - best objective -173699.8, took 5762 iterations and 26 nodes (0.74 seconds)
Cbc0032I Strong branching done 444 times (8894 iterations), fathomed 4 nodes and fixed 10 variables
Cbc0035I Maximum depth 11, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.75

