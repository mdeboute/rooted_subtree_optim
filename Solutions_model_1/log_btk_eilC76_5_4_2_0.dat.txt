Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 72 (-6) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 1.83674e-05 - average 1.43496e-07, 13 fixed columns
Coin0506I Presolve 102 (-26) rows, 59 (-13) columns and 314 (-78) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 33.159466
Clp0000I Optimal - objective value 33.159466
Coin0511I After Postsolve, objective 33.159466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.159466
Clp0000I Optimal - objective value 33.159466
Clp0000I Optimal - objective value 33.159466
Coin0511I After Postsolve, objective 33.159466, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.15946575 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 72 columns (71 integer (71 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.53834
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.65599 iterations 46
Cbc0038I Solution found of 1.65599
Cbc0038I Relaxing continuous gives 1.65599
Cbc0038I Rounding solution of 0.63804 is better than previous of 1.65599

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 0.63804 to -5.14637 (0.05 seconds)
Cbc0038I Round again with cutoff of -7.94777
Cbc0038I Pass   2: suminf.    1.58613 (7) obj. -7.94777 iterations 14
Cbc0038I Pass   3: suminf.    1.34859 (6) obj. -7.94777 iterations 8
Cbc0038I Pass   4: suminf.    1.04012 (5) obj. -7.94777 iterations 5
Cbc0038I Pass   5: suminf.    0.93260 (3) obj. -7.94777 iterations 11
Cbc0038I Pass   6: suminf.    0.87644 (3) obj. -7.94777 iterations 6
Cbc0038I Pass   7: suminf.    1.17980 (4) obj. -7.94777 iterations 4
Cbc0038I Pass   8: suminf.    1.04174 (5) obj. -7.94777 iterations 1
Cbc0038I Pass   9: suminf.    2.09493 (8) obj. -7.94777 iterations 17
Cbc0038I Pass  10: suminf.    1.82970 (7) obj. -7.94777 iterations 1
Cbc0038I Pass  11: suminf.    1.65929 (5) obj. -7.94777 iterations 13
Cbc0038I Pass  12: suminf.    1.45371 (5) obj. -7.94777 iterations 3
Cbc0038I Pass  13: suminf.    1.02069 (4) obj. -7.94777 iterations 8
Cbc0038I Pass  14: suminf.    0.87644 (3) obj. -7.94777 iterations 8
Cbc0038I Pass  15: suminf.    1.17980 (4) obj. -7.94777 iterations 4
Cbc0038I Pass  16: suminf.    1.04174 (5) obj. -7.94777 iterations 1
Cbc0038I Pass  17: suminf.    2.09493 (8) obj. -7.94777 iterations 15
Cbc0038I Pass  18: suminf.    1.82970 (7) obj. -7.94777 iterations 1
Cbc0038I Pass  19: suminf.    1.65929 (5) obj. -7.94777 iterations 13
Cbc0038I Pass  20: suminf.    1.45371 (5) obj. -7.94777 iterations 3
Cbc0038I Pass  21: suminf.    1.02069 (4) obj. -7.94777 iterations 8
Cbc0038I Pass  22: suminf.    0.87644 (3) obj. -7.94777 iterations 8
Cbc0038I Pass  23: suminf.    1.17980 (4) obj. -7.94777 iterations 4
Cbc0038I Pass  24: suminf.    1.04174 (5) obj. -7.94777 iterations 1
Cbc0038I Pass  25: suminf.    2.09493 (8) obj. -7.94777 iterations 15
Cbc0038I Pass  26: suminf.    1.82970 (7) obj. -7.94777 iterations 1
Cbc0038I Pass  27: suminf.    1.65929 (5) obj. -7.94777 iterations 13
Cbc0038I Pass  28: suminf.    1.45371 (5) obj. -7.94777 iterations 3
Cbc0038I Pass  29: suminf.    1.02069 (4) obj. -7.94777 iterations 8
Cbc0038I Pass  30: suminf.    0.87644 (3) obj. -7.94777 iterations 8
Cbc0038I Pass  31: suminf.    1.17980 (4) obj. -7.94777 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.14637 - took 0.08 seconds
Cbc0012I Integer solution of -5.14637 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 70 rows 41 columns
Cbc0031I 26 added rows had average density of 40.576923
Cbc0013I At root node, 26 cuts changed objective from -33.159466 to -24.751907 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13269 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1594 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.14637 best solution, best possible -24.751907 (1.05 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 18 rows 13 columns
Cbc0012I Integer solution of -5.47039 found by RINS after 9333 iterations and 41 nodes (1.32 seconds)
Cbc0004I Integer solution of -6.32592 found after 10090 iterations and 65 nodes (1.36 seconds)
Cbc0001I Search completed - best objective -6.325919999999996, took 10780 iterations and 78 nodes (1.38 seconds)
Cbc0032I Strong branching done 926 times (18072 iterations), fathomed 2 nodes and fixed 40 variables
Cbc0035I Maximum depth 30, 221 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.40

