Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 74 (-4) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 2.36332e-05 - average 1.71255e-07, 10 fixed columns
Coin0506I Presolve 116 (-22) rows, 63 (-11) columns and 350 (-66) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.4412238 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 68.172625
Clp0000I Optimal - objective value 68.172625
Coin0511I After Postsolve, objective 68.172625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.172625
Clp0000I Optimal - objective value 68.172625
Clp0000I Optimal - objective value 68.172625
Coin0511I After Postsolve, objective 68.172625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.1726246 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 74 columns (73 integer (73 of which binary)) and 434 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.85577
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.83097 iterations 51
Cbc0038I Solution found of -5.83097
Cbc0038I Relaxing continuous gives -5.83097
Cbc0038I Rounding solution of -25.0221 is better than previous of -5.83097

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 74 columns, reduced to 70 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -25.0221 to -41.2683 (0.04 seconds)
Cbc0038I Round again with cutoff of -43.9588
Cbc0038I Pass   2: suminf.    2.61745 (8) obj. -43.9588 iterations 15
Cbc0038I Pass   3: suminf.    2.42852 (6) obj. -43.9588 iterations 3
Cbc0038I Pass   4: suminf.    1.39873 (4) obj. -43.9588 iterations 10
Cbc0038I Pass   5: suminf.    1.17761 (4) obj. -43.9588 iterations 2
Cbc0038I Pass   6: suminf.    1.12942 (3) obj. -43.9588 iterations 3
Cbc0038I Pass   7: suminf.    1.20698 (3) obj. -43.9588 iterations 2
Cbc0038I Pass   8: suminf.    0.71309 (3) obj. -43.9588 iterations 2
Cbc0038I Pass   9: suminf.    1.20698 (3) obj. -43.9588 iterations 2
Cbc0038I Pass  10: suminf.    3.62925 (10) obj. -43.9588 iterations 13
Cbc0038I Pass  11: suminf.    1.90349 (6) obj. -43.9588 iterations 17
Cbc0038I Pass  12: suminf.    1.39873 (4) obj. -43.9588 iterations 9
Cbc0038I Pass  13: suminf.    1.17761 (4) obj. -43.9588 iterations 3
Cbc0038I Pass  14: suminf.    1.12942 (3) obj. -43.9588 iterations 3
Cbc0038I Pass  15: suminf.    1.20698 (3) obj. -43.9588 iterations 3
Cbc0038I Pass  16: suminf.    0.71309 (3) obj. -43.9588 iterations 3
Cbc0038I Pass  17: suminf.    1.20698 (3) obj. -43.9588 iterations 2
Cbc0038I Pass  18: suminf.    3.92757 (13) obj. -43.9588 iterations 17
Cbc0038I Pass  19: suminf.    1.98326 (7) obj. -43.9588 iterations 9
Cbc0038I Pass  20: suminf.    1.60740 (6) obj. -43.9588 iterations 1
Cbc0038I Pass  21: suminf.    1.51234 (6) obj. -43.9588 iterations 11
Cbc0038I Pass  22: suminf.    1.51234 (6) obj. -43.9588 iterations 1
Cbc0038I Pass  23: suminf.    1.49062 (5) obj. -43.9588 iterations 6
Cbc0038I Pass  24: suminf.    1.17761 (4) obj. -43.9588 iterations 4
Cbc0038I Pass  25: suminf.    1.12942 (3) obj. -43.9588 iterations 2
Cbc0038I Pass  26: suminf.    1.20698 (3) obj. -43.9588 iterations 2
Cbc0038I Pass  27: suminf.    0.71309 (3) obj. -43.9588 iterations 3
Cbc0038I Pass  28: suminf.    1.20698 (3) obj. -43.9588 iterations 1
Cbc0038I Pass  29: suminf.    2.11891 (6) obj. -43.9588 iterations 18
Cbc0038I Pass  30: suminf.    2.11891 (6) obj. -43.9588 iterations 5
Cbc0038I Pass  31: suminf.    1.62961 (6) obj. -43.9588 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 74 columns, reduced to 88 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -41.2683 to -41.7744 (0.08 seconds)
Cbc0038I Round again with cutoff of -48.8016
Cbc0038I Pass  31: suminf.    2.88795 (8) obj. -48.8016 iterations 0
Cbc0038I Pass  32: suminf.    1.45198 (6) obj. -48.8016 iterations 11
Cbc0038I Pass  33: suminf.    1.62594 (4) obj. -48.8016 iterations 3
Cbc0038I Pass  34: suminf.    1.48266 (4) obj. -48.8016 iterations 3
Cbc0038I Pass  35: suminf.    1.11264 (4) obj. -48.8016 iterations 3
Cbc0038I Pass  36: suminf.    1.07032 (4) obj. -48.8016 iterations 2
Cbc0038I Pass  37: suminf.    1.31691 (8) obj. -48.8016 iterations 10
Cbc0038I Pass  38: suminf.    0.62169 (3) obj. -48.8016 iterations 6
Cbc0038I Pass  39: suminf.    1.11264 (4) obj. -48.8016 iterations 10
Cbc0038I Pass  40: suminf.    2.89980 (13) obj. -48.8016 iterations 17
Cbc0038I Pass  41: suminf.    1.60446 (5) obj. -48.8016 iterations 15
Cbc0038I Pass  42: suminf.    1.10891 (5) obj. -48.8016 iterations 3
Cbc0038I Pass  43: suminf.    1.07032 (4) obj. -48.8016 iterations 4
Cbc0038I Pass  44: suminf.    1.62594 (4) obj. -48.8016 iterations 1
Cbc0038I Pass  45: suminf.    1.48266 (4) obj. -48.8016 iterations 2
Cbc0038I Pass  46: suminf.    1.11264 (4) obj. -48.8016 iterations 3
Cbc0038I Pass  47: suminf.    3.14786 (11) obj. -48.8016 iterations 12
Cbc0038I Pass  48: suminf.    2.37365 (7) obj. -48.8016 iterations 17
Cbc0038I Pass  49: suminf.    2.26788 (6) obj. -48.8016 iterations 3
Cbc0038I Pass  50: suminf.    1.64574 (5) obj. -48.8016 iterations 6
Cbc0038I Pass  51: suminf.    1.48266 (4) obj. -48.8016 iterations 3
Cbc0038I Pass  52: suminf.    1.11264 (4) obj. -48.8016 iterations 3
Cbc0038I Pass  53: suminf.    1.07032 (4) obj. -48.8016 iterations 2
Cbc0038I Pass  54: suminf.    1.62594 (4) obj. -48.8016 iterations 1
Cbc0038I Pass  55: suminf.    1.61752 (7) obj. -48.8016 iterations 12
Cbc0038I Pass  56: suminf.    1.38333 (5) obj. -48.8016 iterations 11
Cbc0038I Pass  57: suminf.    1.07032 (4) obj. -48.8016 iterations 5
Cbc0038I Pass  58: suminf.    2.99682 (12) obj. -48.8016 iterations 14
Cbc0038I Pass  59: suminf.    1.68253 (5) obj. -48.8016 iterations 13
Cbc0038I Pass  60: suminf.    1.68253 (5) obj. -48.8016 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 74 columns, reduced to 94 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -41.7744 - took 0.10 seconds
Cbc0012I Integer solution of -41.77437 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 74 columns, reduced to 72 rows 39 columns
Cbc0031I 19 added rows had average density of 53.421053
Cbc0013I At root node, 19 cuts changed objective from -68.172625 to -60.153135 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9276 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1138 row cuts average 66.6 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -41.77437 best solution, best possible -60.153135 (0.75 seconds)
Cbc0001I Search completed - best objective -41.77437, took 7814 iterations and 22 nodes (0.89 seconds)
Cbc0032I Strong branching done 404 times (6715 iterations), fathomed 4 nodes and fixed 24 variables
Cbc0035I Maximum depth 6, 84 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       0.90

