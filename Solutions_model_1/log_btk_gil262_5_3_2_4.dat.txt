Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 503 (-24) rows, 262 (-2) columns and 1498 (-47) elements
Clp1000I sum of infeasibilities 0.000156608 - average 3.11347e-07, 136 fixed columns
Coin0506I Presolve 220 (-283) rows, 119 (-143) columns and 655 (-843) elements
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 0.17923063 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 189.7928
Clp0000I Optimal - objective value 189.7928
Coin0511I After Postsolve, objective 189.7928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13596996 - largest nonzero change 1.5116327e-05 ( 0.0015116327%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 189.7928
Clp0000I Optimal - objective value 189.7928
Clp0000I Optimal - objective value 189.7928
Coin0511I After Postsolve, objective 189.7928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 189.792802 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 503 rows, 262 columns (261 integer (261 of which binary)) and 1498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 15.0088
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.1107 iterations 264
Cbc0038I Solution found of 17.1107
Cbc0038I Relaxing continuous gives 17.1107
Cbc0038I Rounding solution of 12.7792 is better than previous of 17.1107

Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 124 rows 70 columns
Cbc0038I Mini branch and bound improved solution from 12.7792 to -119.119 (0.14 seconds)
Cbc0038I Round again with cutoff of -126.187
Cbc0038I Pass   2: suminf.    4.20153 (21) obj. -126.187 iterations 67
Cbc0038I Pass   3: suminf.    2.05635 (7) obj. -126.187 iterations 44
Cbc0038I Pass   4: suminf.    1.78413 (7) obj. -126.187 iterations 22
Cbc0038I Pass   5: suminf.    2.09933 (7) obj. -126.187 iterations 31
Cbc0038I Pass   6: suminf.    1.87067 (8) obj. -126.187 iterations 5
Cbc0038I Pass   7: suminf.    1.87067 (8) obj. -126.187 iterations 0
Cbc0038I Pass   8: suminf.    2.23134 (7) obj. -126.187 iterations 13
Cbc0038I Pass   9: suminf.    1.54653 (6) obj. -126.187 iterations 9
Cbc0038I Pass  10: suminf.    1.49266 (6) obj. -126.187 iterations 3
Cbc0038I Pass  11: suminf.    2.70430 (8) obj. -126.187 iterations 28
Cbc0038I Pass  12: suminf.    1.40328 (6) obj. -126.187 iterations 16
Cbc0038I Pass  13: suminf.    1.33744 (6) obj. -126.187 iterations 7
Cbc0038I Pass  14: suminf.    2.45993 (6) obj. -126.187 iterations 21
Cbc0038I Pass  15: suminf.    1.96944 (5) obj. -126.187 iterations 25
Cbc0038I Pass  16: suminf.    1.07895 (5) obj. -126.187 iterations 33
Cbc0038I Pass  17: suminf.    1.71247 (7) obj. -126.187 iterations 24
Cbc0038I Pass  18: suminf.    1.26730 (5) obj. -126.187 iterations 6
Cbc0038I Pass  19: suminf.    1.15485 (5) obj. -126.187 iterations 1
Cbc0038I Pass  20: suminf.    2.20693 (7) obj. -126.187 iterations 23
Cbc0038I Pass  21: suminf.    1.52728 (5) obj. -126.187 iterations 21
Cbc0038I Pass  22: suminf.    1.40157 (5) obj. -126.187 iterations 7
Cbc0038I Pass  23: suminf.    2.04998 (6) obj. -126.187 iterations 28
Cbc0038I Pass  24: suminf.    1.38939 (6) obj. -126.187 iterations 21
Cbc0038I Pass  25: suminf.    1.07895 (5) obj. -126.187 iterations 17
Cbc0038I Pass  26: suminf.    1.71247 (7) obj. -126.187 iterations 24
Cbc0038I Pass  27: suminf.    1.26730 (5) obj. -126.187 iterations 6
Cbc0038I Pass  28: suminf.    1.15485 (5) obj. -126.187 iterations 1
Cbc0038I Pass  29: suminf.    2.20693 (7) obj. -126.187 iterations 23
Cbc0038I Pass  30: suminf.    1.52728 (5) obj. -126.187 iterations 21
Cbc0038I Pass  31: suminf.    1.40157 (5) obj. -126.187 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 148 rows 83 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -119.119 - took 0.24 seconds
Cbc0012I Integer solution of -119.11935 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 124 rows 70 columns
Cbc0031I 40 added rows had average density of 137.15
Cbc0013I At root node, 40 cuts changed objective from -189.7928 to -175.54211 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32466 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3291 row cuts average 257.7 elements, 0 column cuts (0 active)  in 0.977 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.966 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 251.5 elements, 0 column cuts (0 active)  in 0.347 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -119.11935 best solution, best possible -175.54211 (10.61 seconds)
Cbc0010I After 4 nodes, 5 on tree, -119.11935 best solution, best possible -175.54211 (11.43 seconds)
Cbc0010I After 18 nodes, 14 on tree, -119.11935 best solution, best possible -175.54211 (12.15 seconds)
Cbc0012I Integer solution of -126.47356 found by rounding after 19241 iterations and 33 nodes (12.46 seconds)
Cbc0012I Integer solution of -130.24841 found by rounding after 19299 iterations and 41 nodes (12.49 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 3 rows 4 columns
Cbc0038I Full problem 503 rows 262 columns, reduced to 3 rows 5 columns
Cbc0010I After 96 nodes, 37 on tree, -130.24841 best solution, best possible -175.54211 (12.85 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 6 rows 7 columns
Cbc0010I After 213 nodes, 33 on tree, -130.24841 best solution, best possible -175.54211 (13.55 seconds)
Cbc0004I Integer solution of -130.73546 found after 26176 iterations and 317 nodes (14.00 seconds)
Cbc0010I After 340 nodes, 16 on tree, -130.73546 best solution, best possible -175.54211 (14.28 seconds)
Cbc0010I After 387 nodes, 20 on tree, -130.73546 best solution, best possible -175.54211 (14.99 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 60 rows 35 columns
Cbc0010I After 483 nodes, 20 on tree, -130.73546 best solution, best possible -175.54211 (15.69 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 10 rows 11 columns
Cbc0010I After 622 nodes, 15 on tree, -130.73546 best solution, best possible -175.54211 (16.39 seconds)
Cbc0012I Integer solution of -131.18399 found by rounding after 36594 iterations and 669 nodes (16.54 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 2 rows 6 columns
Cbc0001I Search completed - best objective -131.18399, took 38325 iterations and 742 nodes (16.83 seconds)
Cbc0032I Strong branching done 3848 times (72464 iterations), fathomed 153 nodes and fixed 327 variables
Cbc0035I Maximum depth 63, 4264 variables fixed on reduced cost
Total time (CPU seconds):       15.94   (Wallclock seconds):       16.94

