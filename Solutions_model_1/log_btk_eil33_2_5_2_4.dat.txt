Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 32 (-3) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 4.11336e-05 - average 7.34529e-07, 2 fixed columns
Coin0506I Presolve 52 (-4) rows, 30 (-2) columns and 156 (-12) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 79.669188
Clp0000I Optimal - objective value 79.669188
Coin0511I After Postsolve, objective 79.669188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.669188
Clp0000I Optimal - objective value 79.669188
Clp0000I Optimal - objective value 79.669188
Coin0511I After Postsolve, objective 79.669188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.66918822 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 32 columns (31 integer (31 of which binary)) and 169 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.692%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.92875
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 25.5855 iterations 15
Cbc0038I Solution found of 25.5855
Cbc0038I Relaxing continuous gives 25.5855
Cbc0038I Rounding solution of -1.85323 is better than previous of 25.5855

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -1.85323 to -26.2098 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.2452
Cbc0038I Pass   2: suminf.    1.76113 (5) obj. -31.2452 iterations 5
Cbc0038I Pass   3: suminf.    0.12444 (1) obj. -31.2452 iterations 4
Cbc0038I Pass   4: suminf.    0.54686 (2) obj. -31.2452 iterations 2
Cbc0038I Pass   5: suminf.    0.96054 (5) obj. -31.2452 iterations 8
Cbc0038I Pass   6: suminf.    0.96054 (5) obj. -31.2452 iterations 1
Cbc0038I Pass   7: suminf.    1.25002 (4) obj. -31.2452 iterations 8
Cbc0038I Pass   8: suminf.    0.99019 (3) obj. -31.2452 iterations 3
Cbc0038I Pass   9: suminf.    0.75850 (3) obj. -31.2452 iterations 1
Cbc0038I Pass  10: suminf.    0.54686 (2) obj. -31.2452 iterations 1
Cbc0038I Pass  11: suminf.    0.12444 (1) obj. -31.2452 iterations 2
Cbc0038I Pass  12: suminf.    0.19131 (2) obj. -31.2452 iterations 4
Cbc0038I Pass  13: suminf.    0.19131 (2) obj. -31.2452 iterations 2
Cbc0038I Pass  14: suminf.    0.68764 (3) obj. -31.2452 iterations 3
Cbc0038I Pass  15: suminf.    0.58917 (2) obj. -31.2452 iterations 1
Cbc0038I Pass  16: suminf.    0.61772 (2) obj. -31.2452 iterations 1
Cbc0038I Pass  17: suminf.    1.61609 (6) obj. -31.2452 iterations 8
Cbc0038I Pass  18: suminf.    1.11681 (4) obj. -31.2452 iterations 4
Cbc0038I Pass  19: suminf.    0.86322 (4) obj. -31.2452 iterations 2
Cbc0038I Pass  20: suminf.    0.75444 (3) obj. -31.2452 iterations 2
Cbc0038I Pass  21: suminf.    1.12197 (3) obj. -31.2452 iterations 6
Cbc0038I Pass  22: suminf.    0.77421 (2) obj. -31.2452 iterations 2
Cbc0038I Pass  23: suminf.    0.77292 (3) obj. -31.2452 iterations 2
Cbc0038I Pass  24: suminf.    0.68749 (3) obj. -31.2452 iterations 5
Cbc0038I Pass  25: suminf.    0.86610 (3) obj. -31.2452 iterations 3
Cbc0038I Pass  26: suminf.    0.86997 (3) obj. -31.2452 iterations 1
Cbc0038I Pass  27: suminf.    0.57715 (3) obj. -31.2452 iterations 2
Cbc0038I Pass  28: suminf.    1.43620 (4) obj. -31.2452 iterations 4
Cbc0038I Pass  29: suminf.    1.43620 (4) obj. -31.2452 iterations 0
Cbc0038I Pass  30: suminf.    0.69373 (3) obj. -31.2452 iterations 4
Cbc0038I Pass  31: suminf.    0.72275 (2) obj. -31.2452 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -26.2098 to -27.1799 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.3087
Cbc0038I Pass  31: suminf.    2.29709 (7) obj. -40.3087 iterations 1
Cbc0038I Pass  32: suminf.    0.30162 (3) obj. -40.3087 iterations 8
Cbc0038I Pass  33: suminf.    0.26055 (3) obj. -40.3087 iterations 2
Cbc0038I Pass  34: suminf.    1.65017 (4) obj. -40.3087 iterations 4
Cbc0038I Pass  35: suminf.    1.51456 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  36: suminf.    1.68898 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  37: suminf.    1.29784 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  38: suminf.    1.29784 (4) obj. -40.3087 iterations 0
Cbc0038I Pass  39: suminf.    1.51458 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  40: suminf.    1.51456 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  41: suminf.    1.68898 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  42: suminf.    1.29784 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  43: suminf.    1.29784 (4) obj. -40.3087 iterations 0
Cbc0038I Pass  44: suminf.    1.51458 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  45: suminf.    1.51456 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  46: suminf.    1.68898 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  47: suminf.    1.29784 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  48: suminf.    1.29784 (4) obj. -40.3087 iterations 0
Cbc0038I Pass  49: suminf.    1.51458 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  50: suminf.    1.51456 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  51: suminf.    1.68898 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  52: suminf.    1.29784 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  53: suminf.    1.29784 (4) obj. -40.3087 iterations 0
Cbc0038I Pass  54: suminf.    1.51458 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  55: suminf.    1.51456 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  56: suminf.    1.68898 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  57: suminf.    1.29784 (4) obj. -40.3087 iterations 1
Cbc0038I Pass  58: suminf.    1.29784 (4) obj. -40.3087 iterations 0
Cbc0038I Pass  59: suminf.    1.51458 (4) obj. -40.3087 iterations 2
Cbc0038I Pass  60: suminf.    1.51456 (4) obj. -40.3087 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -27.1799 - took 0.05 seconds
Cbc0012I Integer solution of -27.17989 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 56 rows 32 columns, reduced to 29 rows 20 columns
Cbc0031I 12 added rows had average density of 20.166667
Cbc0013I At root node, 12 cuts changed objective from -76.562683 to -48.484685 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1585 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 527 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -27.17989, took 2963 iterations and 16 nodes (0.36 seconds)
Cbc0032I Strong branching done 184 times (1936 iterations), fathomed 0 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.36

