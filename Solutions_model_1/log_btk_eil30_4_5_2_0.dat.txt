Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 29 (-3) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 0.000366086 - average 7.47114e-06, 1 fixed columns
Coin0506I Presolve 44 (-5) rows, 27 (-2) columns and 135 (-13) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 63.993134
Clp0000I Optimal - objective value 63.993134
Coin0511I After Postsolve, objective 63.993134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.993134
Clp0000I Optimal - objective value 63.993134
Clp0000I Optimal - objective value 63.993134
Coin0511I After Postsolve, objective 63.993134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.99313369 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 29 columns (28 integer (28 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.981%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.63464
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.092 iterations 25
Cbc0038I Solution found of -19.092
Cbc0038I Relaxing continuous gives -19.092
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -19.092 to -20.8563 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.1701
Cbc0038I Pass   2: suminf.    0.23814 (2) obj. -25.1701 iterations 2
Cbc0038I Pass   3: suminf.    0.43619 (2) obj. -25.1701 iterations 4
Cbc0038I Pass   4: suminf.    0.61323 (4) obj. -25.1701 iterations 3
Cbc0038I Pass   5: suminf.    0.51500 (4) obj. -25.1701 iterations 11
Cbc0038I Pass   6: suminf.    0.51500 (4) obj. -25.1701 iterations 0
Cbc0038I Pass   7: suminf.    0.44822 (2) obj. -25.1701 iterations 5
Cbc0038I Pass   8: suminf.    1.89112 (6) obj. -25.1701 iterations 6
Cbc0038I Pass   9: suminf.    0.79458 (4) obj. -25.1701 iterations 3
Cbc0038I Pass  10: suminf.    0.76451 (3) obj. -25.1701 iterations 5
Cbc0038I Pass  11: suminf.    0.67696 (3) obj. -25.1701 iterations 2
Cbc0038I Pass  12: suminf.    0.78932 (4) obj. -25.1701 iterations 5
Cbc0038I Pass  13: suminf.    0.78684 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  14: suminf.    1.18887 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  15: suminf.    0.69475 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  16: suminf.    0.53585 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  17: suminf.    0.78932 (4) obj. -25.1701 iterations 4
Cbc0038I Pass  18: suminf.    0.78684 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  19: suminf.    1.18887 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  20: suminf.    0.69475 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  21: suminf.    0.53585 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  22: suminf.    0.78932 (4) obj. -25.1701 iterations 4
Cbc0038I Pass  23: suminf.    0.78684 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  24: suminf.    1.18887 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  25: suminf.    0.69475 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  26: suminf.    0.53585 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  27: suminf.    0.78932 (4) obj. -25.1701 iterations 4
Cbc0038I Pass  28: suminf.    0.78684 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  29: suminf.    1.18887 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  30: suminf.    0.69475 (3) obj. -25.1701 iterations 1
Cbc0038I Pass  31: suminf.    0.53585 (3) obj. -25.1701 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 40 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -20.8563 - took 0.05 seconds
Cbc0012I Integer solution of -20.8563 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 21 added rows had average density of 16.380952
Cbc0013I At root node, 21 cuts changed objective from -63.993134 to -33.273497 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2692 row cuts average 3.7 elements, 2 column cuts (2 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1055 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 250 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.763 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.8563 best solution, best possible -33.273497 (1.64 seconds)
Cbc0001I Search completed - best objective -20.85629999999999, took 3235 iterations and 26 nodes (1.69 seconds)
Cbc0032I Strong branching done 240 times (2964 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 7, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.70

