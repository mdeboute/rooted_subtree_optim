Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 261 (-3) columns and 1503 (-42) elements
Clp1000I sum of infeasibilities 3.55627e-05 - average 7.0282e-08, 143 fixed columns
Coin0506I Presolve 210 (-296) rows, 116 (-145) columns and 632 (-871) elements
Clp0029I End of values pass after 116 iterations
Clp0014I Perturbing problem by 0.001% of 2.8051742 - largest nonzero change 0 ( 0%) - largest zero change 2.9336649e-05
Clp0000I Optimal - objective value 192.92315
Clp0000I Optimal - objective value 192.92315
Coin0511I After Postsolve, objective 192.92315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13645076 - largest nonzero change 0 ( 0%) - largest zero change 2.9703616e-05
Clp0000I Optimal - objective value 192.92315
Clp0000I Optimal - objective value 192.92315
Clp0000I Optimal - objective value 192.92315
Coin0511I After Postsolve, objective 192.92315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 192.9231523 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 261 columns (260 integer (260 of which binary)) and 1503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 70 integers unsatisfied sum - 12.1726
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.90216 iterations 169
Cbc0038I Solution found of -7.90216
Cbc0038I Relaxing continuous gives -7.90216
Cbc0038I Rounding solution of -47.6487 is better than previous of -7.90216

Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 261 columns, reduced to 129 rows 71 columns
Cbc0038I Mini branch and bound improved solution from -47.6487 to -99.7942 (0.18 seconds)
Cbc0038I Round again with cutoff of -109.107
Cbc0038I Pass   2: suminf.    2.89942 (10) obj. -109.107 iterations 55
Cbc0038I Pass   3: suminf.    2.09673 (6) obj. -109.107 iterations 60
Cbc0038I Pass   4: suminf.    1.14664 (5) obj. -109.107 iterations 27
Cbc0038I Pass   5: suminf.    1.65633 (5) obj. -109.107 iterations 21
Cbc0038I Pass   6: suminf.    1.45575 (4) obj. -109.107 iterations 34
Cbc0038I Pass   7: suminf.    1.22727 (4) obj. -109.107 iterations 19
Cbc0038I Pass   8: suminf.    1.77503 (5) obj. -109.107 iterations 24
Cbc0038I Pass   9: suminf.    1.45382 (4) obj. -109.107 iterations 44
Cbc0038I Pass  10: suminf.    1.43006 (4) obj. -109.107 iterations 5
Cbc0038I Pass  11: suminf.    1.36271 (4) obj. -109.107 iterations 17
Cbc0038I Pass  12: suminf.    1.22727 (4) obj. -109.107 iterations 5
Cbc0038I Pass  13: suminf.    1.77503 (5) obj. -109.107 iterations 24
Cbc0038I Pass  14: suminf.    1.45382 (4) obj. -109.107 iterations 44
Cbc0038I Pass  15: suminf.    1.43006 (4) obj. -109.107 iterations 5
Cbc0038I Pass  16: suminf.    1.36271 (4) obj. -109.107 iterations 17
Cbc0038I Pass  17: suminf.    1.22727 (4) obj. -109.107 iterations 5
Cbc0038I Pass  18: suminf.    1.77503 (5) obj. -109.107 iterations 24
Cbc0038I Pass  19: suminf.    1.45382 (4) obj. -109.107 iterations 44
Cbc0038I Pass  20: suminf.    1.43006 (4) obj. -109.107 iterations 5
Cbc0038I Pass  21: suminf.    1.36271 (4) obj. -109.107 iterations 17
Cbc0038I Pass  22: suminf.    1.22727 (4) obj. -109.107 iterations 5
Cbc0038I Pass  23: suminf.    1.77503 (5) obj. -109.107 iterations 24
Cbc0038I Pass  24: suminf.    1.45382 (4) obj. -109.107 iterations 44
Cbc0038I Pass  25: suminf.    1.43006 (4) obj. -109.107 iterations 5
Cbc0038I Pass  26: suminf.    1.36271 (4) obj. -109.107 iterations 17
Cbc0038I Pass  27: suminf.    1.22727 (4) obj. -109.107 iterations 5
Cbc0038I Pass  28: suminf.    1.77503 (5) obj. -109.107 iterations 24
Cbc0038I Pass  29: suminf.    1.45382 (4) obj. -109.107 iterations 44
Cbc0038I Pass  30: suminf.    1.43006 (4) obj. -109.107 iterations 5
Cbc0038I Pass  31: suminf.    1.36271 (4) obj. -109.107 iterations 17
Cbc0038I Rounding solution of -104.794 is better than previous of -99.7942

Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 261 columns, reduced to 143 rows 79 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I Round again with cutoff of -125.87
Cbc0038I Pass  31: suminf.    3.63164 (15) obj. -125.87 iterations 2
Cbc0038I Pass  32: suminf.    2.96028 (8) obj. -125.87 iterations 52
Cbc0038I Pass  33: suminf.    2.08191 (7) obj. -125.87 iterations 30
Cbc0038I Pass  34: suminf.    2.03232 (6) obj. -125.87 iterations 25
Cbc0038I Pass  35: suminf.    1.85383 (7) obj. -125.87 iterations 23
Cbc0038I Pass  36: suminf.    2.64974 (8) obj. -125.87 iterations 32
Cbc0038I Pass  37: suminf.    2.45992 (7) obj. -125.87 iterations 5
Cbc0038I Pass  38: suminf.    2.35167 (7) obj. -125.87 iterations 7
Cbc0038I Pass  39: suminf.    2.03232 (6) obj. -125.87 iterations 25
Cbc0038I Pass  40: suminf.    1.85383 (7) obj. -125.87 iterations 22
Cbc0038I Pass  41: suminf.    2.64974 (8) obj. -125.87 iterations 30
Cbc0038I Pass  42: suminf.    2.45992 (7) obj. -125.87 iterations 5
Cbc0038I Pass  43: suminf.    2.35167 (7) obj. -125.87 iterations 6
Cbc0038I Pass  44: suminf.    2.03232 (6) obj. -125.87 iterations 23
Cbc0038I Pass  45: suminf.    1.85383 (7) obj. -125.87 iterations 23
Cbc0038I Pass  46: suminf.    2.64974 (8) obj. -125.87 iterations 30
Cbc0038I Pass  47: suminf.    2.45992 (7) obj. -125.87 iterations 4
Cbc0038I Pass  48: suminf.    2.35167 (7) obj. -125.87 iterations 7
Cbc0038I Pass  49: suminf.    2.03232 (6) obj. -125.87 iterations 24
Cbc0038I Pass  50: suminf.    1.85383 (7) obj. -125.87 iterations 23
Cbc0038I Pass  51: suminf.    2.64974 (8) obj. -125.87 iterations 29
Cbc0038I Pass  52: suminf.    2.45992 (7) obj. -125.87 iterations 4
Cbc0038I Pass  53: suminf.    2.35167 (7) obj. -125.87 iterations 7
Cbc0038I Pass  54: suminf.    2.03232 (6) obj. -125.87 iterations 23
Cbc0038I Pass  55: suminf.    1.85383 (7) obj. -125.87 iterations 24
Cbc0038I Pass  56: suminf.    2.64974 (8) obj. -125.87 iterations 29
Cbc0038I Pass  57: suminf.    2.45992 (7) obj. -125.87 iterations 5
Cbc0038I Pass  58: suminf.    2.35167 (7) obj. -125.87 iterations 6
Cbc0038I Pass  59: suminf.    2.03232 (6) obj. -125.87 iterations 24
Cbc0038I Pass  60: suminf.    1.85383 (7) obj. -125.87 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 261 columns, reduced to 145 rows 80 columns
Cbc0038I Mini branch and bound did not improve solution (0.58 seconds)
Cbc0038I After 0.58 seconds - Feasibility pump exiting with objective of -104.794 - took 0.51 seconds
Cbc0012I Integer solution of -104.79437 found by feasibility pump after 0 iterations and 0 nodes (0.58 seconds)
Cbc0038I Full problem 506 rows 261 columns, reduced to 131 rows 72 columns
Cbc0031I 33 added rows had average density of 173.72727
Cbc0013I At root node, 33 cuts changed objective from -192.92315 to -177.33954 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28642 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2765 row cuts average 257.5 elements, 0 column cuts (0 active)  in 0.923 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.921 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 251.4 elements, 0 column cuts (0 active)  in 0.310 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -104.79437 best solution, best possible -177.33954 (10.32 seconds)
Cbc0010I After 4 nodes, 5 on tree, -104.79437 best solution, best possible -177.33954 (11.02 seconds)
Cbc0010I After 21 nodes, 10 on tree, -104.79437 best solution, best possible -177.33954 (11.73 seconds)
Cbc0038I Full problem 506 rows 261 columns, reduced to 21 rows 19 columns
Cbc0012I Integer solution of -105.71426 found by rounding after 19322 iterations and 44 nodes (11.92 seconds)
Cbc0010I After 84 nodes, 13 on tree, -105.71426 best solution, best possible -177.33954 (12.45 seconds)
Cbc0038I Full problem 506 rows 261 columns, reduced to 28 rows 26 columns
Cbc0012I Integer solution of -106.73324 found by RINS after 21437 iterations and 94 nodes (12.62 seconds)
Cbc0010I After 165 nodes, 11 on tree, -106.73324 best solution, best possible -177.33954 (13.18 seconds)
Cbc0038I Full problem 506 rows 261 columns, reduced to 14 rows 17 columns
Cbc0012I Integer solution of -112.77949 found by RINS after 24513 iterations and 200 nodes (13.63 seconds)
Cbc0010I After 215 nodes, 12 on tree, -112.77949 best solution, best possible -177.33954 (13.90 seconds)
Cbc0012I Integer solution of -113.00813 found by rounding after 27377 iterations and 280 nodes (14.59 seconds)
Cbc0010I After 283 nodes, 20 on tree, -113.00813 best solution, best possible -177.33954 (14.60 seconds)
Cbc0016I Integer solution of -113.1059 found by strong branching after 27483 iterations and 290 nodes (14.63 seconds)
Cbc0038I Full problem 506 rows 261 columns, reduced to 5 rows 9 columns
Cbc0004I Integer solution of -114.13518 found after 27985 iterations and 320 nodes (14.76 seconds)
Cbc0004I Integer solution of -115.2591 found after 28839 iterations and 371 nodes (14.98 seconds)
Cbc0038I Full problem 506 rows 261 columns, reduced to 21 rows 17 columns
Cbc0012I Integer solution of -115.42694 found by RINS after 29868 iterations and 400 nodes (15.28 seconds)
Cbc0010I After 405 nodes, 11 on tree, -115.42694 best solution, best possible -177.33954 (15.30 seconds)
Cbc0016I Integer solution of -116.73175 found by strong branching after 30661 iterations and 433 nodes (15.47 seconds)
Cbc0001I Search completed - best objective -116.73175, took 32873 iterations and 495 nodes (15.88 seconds)
Cbc0032I Strong branching done 3692 times (66324 iterations), fathomed 110 nodes and fixed 334 variables
Cbc0035I Maximum depth 64, 3805 variables fixed on reduced cost
Total time (CPU seconds):       15.01   (Wallclock seconds):       15.98

