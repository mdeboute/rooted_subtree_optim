Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 71 (-7) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 6.02836e-05 - average 4.70965e-07, 19 fixed columns
Coin0506I Presolve 90 (-38) rows, 51 (-20) columns and 274 (-116) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 0.2639517 - largest nonzero change 0 ( 0%) - largest zero change 2.7410221e-05
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Coin0511I After Postsolve, objective 54.735199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22427318 - largest nonzero change 0 ( 0%) - largest zero change 2.8164545e-05
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Coin0511I After Postsolve, objective 54.735199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.73519864 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 71 columns (70 integer (70 of which binary)) and 417 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.862%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.06097
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.7465 iterations 46
Cbc0038I Solution found of -11.7465
Cbc0038I Relaxing continuous gives -11.7465
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -11.7465 to -27.3722 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.0751
Cbc0038I Pass   2: suminf.    1.17174 (8) obj. -30.0751 iterations 13
Cbc0038I Pass   3: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass   4: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass   5: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass   6: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass   7: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass   8: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass   9: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  10: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass  11: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass  12: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  13: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass  14: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  15: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass  16: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  17: suminf.    1.34747 (5) obj. -30.0751 iterations 17
Cbc0038I Pass  18: suminf.    1.25958 (5) obj. -30.0751 iterations 4
Cbc0038I Pass  19: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  20: suminf.    0.48304 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  21: suminf.    0.31670 (2) obj. -30.0751 iterations 5
Cbc0038I Pass  22: suminf.    1.38530 (4) obj. -30.0751 iterations 4
Cbc0038I Pass  23: suminf.    1.17174 (8) obj. -30.0751 iterations 13
Cbc0038I Pass  24: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass  25: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass  26: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  27: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass  28: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  29: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass  30: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  31: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -27.3722 - took 0.04 seconds
Cbc0012I Integer solution of -27.3722 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0031I 25 added rows had average density of 44.76
Cbc0013I At root node, 25 cuts changed objective from -54.399928 to -46.778398 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5783 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1381 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 70.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 20 nodes, 10 on tree, -27.3722 best solution, best possible -46.778398 (0.69 seconds)
Cbc0038I Full problem 121 rows 71 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -28.97205 found by RINS after 6422 iterations and 41 nodes (0.73 seconds)
Cbc0016I Integer solution of -29.24625 found by strong branching after 7089 iterations and 54 nodes (0.76 seconds)
Cbc0001I Search completed - best objective -29.24625, took 7093 iterations and 54 nodes (0.76 seconds)
Cbc0032I Strong branching done 620 times (11210 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 161 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.77

