Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 569 (-34) elements
Clp1000I sum of infeasibilities 5.17074e-07 - average 2.7651e-09, 23 fixed columns
Coin0506I Presolve 144 (-43) rows, 78 (-23) columns and 437 (-132) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 1.7732828 - largest nonzero change 0 ( 0%) - largest zero change 2.9556675e-05
Clp0000I Optimal - objective value 47.356441
Clp0000I Optimal - objective value 47.356441
Coin0511I After Postsolve, objective 47.356441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.356441
Clp0000I Optimal - objective value 47.356441
Clp0000I Optimal - objective value 47.356441
Coin0511I After Postsolve, objective 47.356441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.35644127 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 578 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.975%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 7.16596
Cbc0038I Solution found of 0.921841
Cbc0038I Relaxing continuous gives -4.15705
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 105 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -4.15705 to -23.0921 (0.06 seconds)
Cbc0038I Round again with cutoff of -25.5186
Cbc0038I Pass   1: suminf.    2.67038 (22) obj. -25.5186 iterations 53
Cbc0038I Pass   2: suminf.    3.05281 (8) obj. -25.5186 iterations 28
Cbc0038I Pass   3: suminf.    2.24721 (9) obj. -25.5186 iterations 22
Cbc0038I Pass   4: suminf.    2.13234 (8) obj. -25.5186 iterations 11
Cbc0038I Pass   5: suminf.    2.02187 (9) obj. -25.5186 iterations 7
Cbc0038I Pass   6: suminf.    1.86409 (5) obj. -25.5186 iterations 8
Cbc0038I Pass   7: suminf.    1.11442 (7) obj. -25.5186 iterations 4
Cbc0038I Pass   8: suminf.    1.11442 (7) obj. -25.5186 iterations 0
Cbc0038I Pass   9: suminf.    3.39316 (8) obj. -25.5186 iterations 8
Cbc0038I Pass  10: suminf.    2.53087 (9) obj. -25.5186 iterations 8
Cbc0038I Pass  11: suminf.    2.48692 (9) obj. -25.5186 iterations 2
Cbc0038I Pass  12: suminf.    1.31785 (6) obj. -25.5186 iterations 8
Cbc0038I Pass  13: suminf.    1.11442 (7) obj. -25.5186 iterations 5
Cbc0038I Pass  14: suminf.    3.39316 (8) obj. -25.5186 iterations 8
Cbc0038I Pass  15: suminf.    2.53087 (9) obj. -25.5186 iterations 8
Cbc0038I Pass  16: suminf.    2.48692 (9) obj. -25.5186 iterations 2
Cbc0038I Pass  17: suminf.    1.31785 (6) obj. -25.5186 iterations 8
Cbc0038I Pass  18: suminf.    1.11442 (7) obj. -25.5186 iterations 5
Cbc0038I Pass  19: suminf.    3.39316 (8) obj. -25.5186 iterations 8
Cbc0038I Pass  20: suminf.    2.53087 (9) obj. -25.5186 iterations 8
Cbc0038I Pass  21: suminf.    2.48692 (9) obj. -25.5186 iterations 2
Cbc0038I Pass  22: suminf.    1.31785 (6) obj. -25.5186 iterations 8
Cbc0038I Pass  23: suminf.    1.11442 (7) obj. -25.5186 iterations 5
Cbc0038I Pass  24: suminf.    3.39316 (8) obj. -25.5186 iterations 8
Cbc0038I Pass  25: suminf.    2.53087 (9) obj. -25.5186 iterations 8
Cbc0038I Pass  26: suminf.    2.48692 (9) obj. -25.5186 iterations 2
Cbc0038I Pass  27: suminf.    1.31785 (6) obj. -25.5186 iterations 8
Cbc0038I Pass  28: suminf.    1.11442 (7) obj. -25.5186 iterations 5
Cbc0038I Pass  29: suminf.    3.39316 (8) obj. -25.5186 iterations 8
Cbc0038I Pass  30: suminf.    2.53087 (9) obj. -25.5186 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 109 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -23.0921 to -23.8202 (0.12 seconds)
Cbc0038I Round again with cutoff of -29.8862
Cbc0038I Pass  30: suminf.    3.21637 (22) obj. -29.8862 iterations 0
Cbc0038I Pass  31: suminf.    3.42450 (13) obj. -29.8862 iterations 18
Cbc0038I Pass  32: suminf.    2.20737 (9) obj. -29.8862 iterations 16
Cbc0038I Pass  33: suminf.    2.01523 (8) obj. -29.8862 iterations 6
Cbc0038I Pass  34: suminf.    1.93221 (9) obj. -29.8862 iterations 6
Cbc0038I Pass  35: suminf.    2.28698 (7) obj. -29.8862 iterations 7
Cbc0038I Pass  36: suminf.    3.70609 (13) obj. -29.8862 iterations 32
Cbc0038I Pass  37: suminf.    2.57204 (13) obj. -29.8862 iterations 15
Cbc0038I Pass  38: suminf.    2.52490 (7) obj. -29.8862 iterations 25
Cbc0038I Pass  39: suminf.    2.11240 (8) obj. -29.8862 iterations 9
Cbc0038I Pass  40: suminf.    1.93221 (9) obj. -29.8862 iterations 3
Cbc0038I Pass  41: suminf.    2.28698 (7) obj. -29.8862 iterations 6
Cbc0038I Pass  42: suminf.    5.64784 (17) obj. -29.8862 iterations 24
Cbc0038I Pass  43: suminf.    2.83075 (9) obj. -29.8862 iterations 20
Cbc0038I Pass  44: suminf.    2.24779 (7) obj. -29.8862 iterations 22
Cbc0038I Pass  45: suminf.    2.18375 (7) obj. -29.8862 iterations 1
Cbc0038I Pass  46: suminf.    2.11240 (8) obj. -29.8862 iterations 3
Cbc0038I Pass  47: suminf.    1.93221 (9) obj. -29.8862 iterations 3
Cbc0038I Pass  48: suminf.    2.28698 (7) obj. -29.8862 iterations 6
Cbc0038I Pass  49: suminf.    3.59113 (12) obj. -29.8862 iterations 14
Cbc0038I Pass  50: suminf.    1.90626 (10) obj. -29.8862 iterations 18
Cbc0038I Pass  51: suminf.    3.46765 (10) obj. -29.8862 iterations 24
Cbc0038I Pass  52: suminf.    2.10955 (11) obj. -29.8862 iterations 21
Cbc0038I Pass  53: suminf.    1.63377 (6) obj. -29.8862 iterations 13
Cbc0038I Pass  54: suminf.    1.58018 (7) obj. -29.8862 iterations 9
Cbc0038I Pass  55: suminf.    2.51964 (7) obj. -29.8862 iterations 4
Cbc0038I Pass  56: suminf.    1.93221 (9) obj. -29.8862 iterations 5
Cbc0038I Pass  57: suminf.    1.93221 (9) obj. -29.8862 iterations 0
Cbc0038I Pass  58: suminf.    2.28698 (7) obj. -29.8862 iterations 6
Cbc0038I Pass  59: suminf.    2.80176 (9) obj. -29.8862 iterations 21
Cbc0038I Rounding solution of -24.91 is better than previous of -23.8202

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 117 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of -35.1273
Cbc0038I Pass  59: suminf.    3.75197 (22) obj. -35.1273 iterations 0
Cbc0038I Pass  60: suminf.    3.13761 (20) obj. -35.1273 iterations 21
Cbc0038I Pass  61: suminf.    3.52787 (14) obj. -35.1273 iterations 22
Cbc0038I Pass  62: suminf.    2.75998 (10) obj. -35.1273 iterations 12
Cbc0038I Pass  63: suminf.    2.68045 (12) obj. -35.1273 iterations 5
Cbc0038I Pass  64: suminf.    3.18324 (12) obj. -35.1273 iterations 8
Cbc0038I Pass  65: suminf.    2.86126 (18) obj. -35.1273 iterations 10
Cbc0038I Pass  66: suminf.    3.15109 (11) obj. -35.1273 iterations 20
Cbc0038I Pass  67: suminf.    2.55784 (14) obj. -35.1273 iterations 21
Cbc0038I Pass  68: suminf.    3.34714 (11) obj. -35.1273 iterations 24
Cbc0038I Pass  69: suminf.    4.14339 (17) obj. -35.1273 iterations 25
Cbc0038I Pass  70: suminf.    2.74258 (12) obj. -35.1273 iterations 12
Cbc0038I Pass  71: suminf.    3.26971 (12) obj. -35.1273 iterations 19
Cbc0038I Pass  72: suminf.    2.77684 (13) obj. -35.1273 iterations 10
Cbc0038I Pass  73: suminf.    3.51916 (12) obj. -35.1273 iterations 8
Cbc0038I Pass  74: suminf.    2.66446 (12) obj. -35.1273 iterations 6
Cbc0038I Pass  75: suminf.    2.54284 (12) obj. -35.1273 iterations 7
Cbc0038I Pass  76: suminf.    2.96803 (12) obj. -35.1273 iterations 7
Cbc0038I Pass  77: suminf.    2.86126 (18) obj. -35.1273 iterations 22
Cbc0038I Pass  78: suminf.    2.80734 (12) obj. -35.1273 iterations 15
Cbc0038I Pass  79: suminf.    4.75025 (18) obj. -35.1273 iterations 25
Cbc0038I Pass  80: suminf.    3.27731 (17) obj. -35.1273 iterations 19
Cbc0038I Pass  81: suminf.    3.85217 (16) obj. -35.1273 iterations 13
Cbc0038I Pass  82: suminf.    3.47520 (18) obj. -35.1273 iterations 11
Cbc0038I Pass  83: suminf.    2.80734 (12) obj. -35.1273 iterations 16
Cbc0038I Pass  84: suminf.    2.54284 (12) obj. -35.1273 iterations 5
Cbc0038I Pass  85: suminf.    3.12822 (12) obj. -35.1273 iterations 7
Cbc0038I Pass  86: suminf.    4.97456 (16) obj. -35.1273 iterations 38
Cbc0038I Pass  87: suminf.    2.46448 (11) obj. -35.1273 iterations 26
Cbc0038I Pass  88: suminf.    3.28631 (10) obj. -35.1273 iterations 8
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 122 rows 67 columns - 6 fixed gives 81, 61 - ok now
Cbc0038I Full problem 187 rows 101 columns, reduced to 20 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of -38.796
Cbc0038I Pass  88: suminf.    4.39500 (28) obj. -38.796 iterations 6
Cbc0038I Pass  89: suminf.    3.82640 (19) obj. -38.796 iterations 23
Cbc0038I Pass  90: suminf.    4.83381 (19) obj. -38.796 iterations 19
Cbc0038I Pass  91: suminf.    4.52323 (19) obj. -38.796 iterations 12
Cbc0038I Pass  92: suminf.    4.22471 (18) obj. -38.796 iterations 18
Cbc0038I Pass  93: suminf.    5.09665 (23) obj. -38.796 iterations 33
Cbc0038I Pass  94: suminf.    3.12945 (14) obj. -38.796 iterations 27
Cbc0038I Pass  95: suminf.    3.38615 (14) obj. -38.796 iterations 13
Cbc0038I Pass  96: suminf.    3.29380 (18) obj. -38.796 iterations 10
Cbc0038I Pass  97: suminf.    3.52762 (16) obj. -38.796 iterations 17
Cbc0038I Pass  98: suminf.    4.61600 (23) obj. -38.796 iterations 19
Cbc0038I Pass  99: suminf.    3.11436 (19) obj. -38.796 iterations 15
Cbc0038I Pass 100: suminf.    3.93433 (22) obj. -38.796 iterations 12
Cbc0038I Pass 101: suminf.    3.88247 (20) obj. -38.796 iterations 4
Cbc0038I Pass 102: suminf.    3.84004 (18) obj. -38.796 iterations 25
Cbc0038I Pass 103: suminf.    3.24834 (16) obj. -38.796 iterations 11
Cbc0038I Pass 104: suminf.    4.17088 (16) obj. -38.796 iterations 16
Cbc0038I Pass 105: suminf.    3.63515 (18) obj. -38.796 iterations 16
Cbc0038I Pass 106: suminf.    3.69989 (16) obj. -38.796 iterations 21
Cbc0038I Pass 107: suminf.    3.39211 (15) obj. -38.796 iterations 18
Cbc0038I Pass 108: suminf.    3.13619 (15) obj. -38.796 iterations 14
Cbc0038I Pass 109: suminf.    3.01009 (15) obj. -38.796 iterations 8
Cbc0038I Pass 110: suminf.    4.40743 (17) obj. -38.796 iterations 22
Cbc0038I Pass 111: suminf.    3.95043 (16) obj. -38.796 iterations 14
Cbc0038I Pass 112: suminf.    3.41677 (17) obj. -38.796 iterations 14
Cbc0038I Pass 113: suminf.    4.16297 (16) obj. -38.796 iterations 17
Cbc0038I Pass 114: suminf.    3.63515 (18) obj. -38.796 iterations 15
Cbc0038I Pass 115: suminf.    3.69989 (16) obj. -38.796 iterations 21
Cbc0038I Pass 116: suminf.    3.39211 (15) obj. -38.796 iterations 18
Cbc0038I Pass 117: suminf.    4.05979 (17) obj. -38.796 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 127 rows 70 columns - 6 fixed gives 83, 64 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -24.9101 - took 0.21 seconds
Cbc0012I Integer solution of -24.91005 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 107 rows 58 columns
Cbc0031I 22 added rows had average density of 70.590909
Cbc0013I At root node, 22 cuts changed objective from -47.356441 to -41.993479 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14933 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2299 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.91005 best solution, best possible -41.993479 (1.37 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 51 rows 31 columns
Cbc0001I Search completed - best objective -24.91005000000001, took 11080 iterations and 66 nodes (1.65 seconds)
Cbc0032I Strong branching done 762 times (14799 iterations), fathomed 8 nodes and fixed 34 variables
Cbc0035I Maximum depth 20, 206 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       1.66

