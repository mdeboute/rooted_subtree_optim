Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 48 (-2) columns and 258 (-27) elements
Clp1000I sum of infeasibilities 7.01933e-06 - average 8.25803e-08, 5 fixed columns
Coin0506I Presolve 76 (-9) rows, 43 (-5) columns and 230 (-28) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 22.719947 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Coin0511I After Postsolve, objective 162997.04, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Clp0000I Optimal - objective value 162997.04
Coin0511I After Postsolve, objective 162997.04, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 162997.0363 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 48 columns (47 integer (47 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.783%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 11.5296
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -128646 iterations 33
Cbc0038I Solution found of -128646
Cbc0038I Relaxing continuous gives -128646
Cbc0038I Rounding solution of -160987 is better than previous of -128646

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 48 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -160987 to -161542 (0.02 seconds)
Cbc0038I Round again with cutoff of -161687
Cbc0038I Pass   2: suminf.    1.55570 (5) obj. -161687 iterations 4
Cbc0038I Pass   3: suminf.    0.61550 (3) obj. -161687 iterations 5
Cbc0038I Pass   4: suminf.    1.00000 (3) obj. -161687 iterations 2
Cbc0038I Pass   5: suminf.    0.72566 (2) obj. -161687 iterations 3
Cbc0038I Pass   6: suminf.    1.13177 (5) obj. -161687 iterations 10
Cbc0038I Pass   7: suminf.    0.57658 (4) obj. -161687 iterations 5
Cbc0038I Pass   8: suminf.    1.61329 (5) obj. -161687 iterations 9
Cbc0038I Pass   9: suminf.    1.61329 (5) obj. -161687 iterations 0
Cbc0038I Pass  10: suminf.    1.47797 (6) obj. -161687 iterations 5
Cbc0038I Pass  11: suminf.    0.62457 (4) obj. -161687 iterations 3
Cbc0038I Pass  12: suminf.    2.31247 (13) obj. -161687 iterations 14
Cbc0038I Pass  13: suminf.    1.44578 (7) obj. -161687 iterations 7
Cbc0038I Pass  14: suminf.    1.77494 (6) obj. -161687 iterations 13
Cbc0038I Pass  15: suminf.    1.77033 (6) obj. -161687 iterations 1
Cbc0038I Pass  16: suminf.    1.39500 (4) obj. -161687 iterations 4
Cbc0038I Pass  17: suminf.    0.93040 (4) obj. -161687 iterations 2
Cbc0038I Pass  18: suminf.    0.93040 (4) obj. -161687 iterations 0
Cbc0038I Pass  19: suminf.    1.59265 (4) obj. -161687 iterations 3
Cbc0038I Pass  20: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  21: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I Pass  22: suminf.    0.94564 (4) obj. -161687 iterations 2
Cbc0038I Pass  23: suminf.    0.94564 (4) obj. -161687 iterations 0
Cbc0038I Pass  24: suminf.    1.59265 (4) obj. -161687 iterations 2
Cbc0038I Pass  25: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  26: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I Pass  27: suminf.    0.94564 (4) obj. -161687 iterations 2
Cbc0038I Pass  28: suminf.    0.94564 (4) obj. -161687 iterations 0
Cbc0038I Pass  29: suminf.    1.59265 (4) obj. -161687 iterations 2
Cbc0038I Pass  30: suminf.    1.59265 (4) obj. -161687 iterations 0
Cbc0038I Pass  31: suminf.    1.37012 (4) obj. -161687 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 48 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -161542 - took 0.03 seconds
Cbc0012I Integer solution of -161541.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 85 rows 48 columns, reduced to 56 rows 33 columns
Cbc0031I 18 added rows had average density of 33.944444
Cbc0013I At root node, 18 cuts changed objective from -162997.04 to -162176.34 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5621 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1486 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0012I Integer solution of -161550.9 found by DiveCoefficient after 5710 iterations and 17 nodes (0.60 seconds)
Cbc0001I Search completed - best objective -161550.9, took 5860 iterations and 20 nodes (0.60 seconds)
Cbc0032I Strong branching done 374 times (7682 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.61

