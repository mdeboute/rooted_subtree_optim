Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-23) rows, 41 (-9) columns and 226 (-59) elements
Clp1000I sum of infeasibilities 3.39328e-05 - average 4.46484e-07, 10 fixed columns
Coin0506I Presolve 56 (-20) rows, 31 (-10) columns and 166 (-60) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Coin0511I After Postsolve, objective 1216.9673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.61905 - largest nonzero change 0 ( 0%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Clp0000I Optimal - objective value 1216.9673
Coin0511I After Postsolve, objective 1216.9673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1216.967324 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 41 columns (40 integer (40 of which binary)) and 226 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.9916
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1152.05 iterations 22
Cbc0038I Solution found of 1152.05
Cbc0038I Relaxing continuous gives 1152.05
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 1152.05 to 0 (0.03 seconds)
Cbc0038I Round again with cutoff of -121.697
Cbc0038I Pass   2: suminf.    2.54785 (14) obj. -121.697 iterations 11
Cbc0038I Pass   3: suminf.    4.75584 (13) obj. -121.697 iterations 16
Cbc0038I Pass   4: suminf.    4.71453 (13) obj. -121.697 iterations 1
Cbc0038I Pass   5: suminf.    1.50293 (8) obj. -121.697 iterations 12
Cbc0038I Pass   6: suminf.    1.00000 (7) obj. -121.697 iterations 7
Cbc0038I Pass   7: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass   8: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass   9: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  10: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  11: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  12: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  13: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  14: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  15: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  16: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  17: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  18: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  19: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  20: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  21: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  22: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  23: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  24: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  25: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  26: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I Pass  27: suminf.    2.96331 (10) obj. -121.697 iterations 6
Cbc0038I Pass  28: suminf.    2.15486 (7) obj. -121.697 iterations 3
Cbc0038I Pass  29: suminf.    2.29026 (8) obj. -121.697 iterations 6
Cbc0038I Pass  30: suminf.    1.10256 (5) obj. -121.697 iterations 3
Cbc0038I Pass  31: suminf.    1.00000 (7) obj. -121.697 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 0 - took 0.04 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 41 columns, reduced to 50 rows 28 columns
Cbc0031I 14 added rows had average density of 27.571429
Cbc0013I At root node, 14 cuts changed objective from -1216.9673 to -167.49813 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3997 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 958 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective 0, took 3461 iterations and 4 nodes (0.32 seconds)
Cbc0032I Strong branching done 102 times (2252 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

