Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-39) rows, 34 (-16) columns and 151 (-134) elements
Clp1000I sum of infeasibilities 8.29151e-07 - average 1.38192e-08, 10 fixed columns
Coin0506I Presolve 32 (-28) rows, 24 (-10) columns and 85 (-66) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.356245 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 9806.4146
Clp0000I Optimal - objective value 9806.4146
Coin0511I After Postsolve, objective 9806.4146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 22.445701 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 9806.4146
Clp0000I Optimal - objective value 9806.4146
Clp0000I Optimal - objective value 9806.4146
Coin0511I After Postsolve, objective 9806.4146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9806.414632 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 60 rows, 34 columns (33 integer (33 of which binary)) and 151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.69357
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9175.38 iterations 14
Cbc0038I Solution found of -9175.38
Cbc0038I Relaxing continuous gives -9175.38
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -9238.48
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.03271 (1) obj. -9238.48 iterations 1
Cbc0038I Pass   3: suminf.    0.26559 (2) obj. -9238.48 iterations 2
Cbc0038I Pass   4: suminf.    1.00000 (6) obj. -9238.48 iterations 7
Cbc0038I Pass   5: suminf.    1.00000 (7) obj. -9238.48 iterations 8
Cbc0038I Pass   6: suminf.    1.11052 (5) obj. -9238.48 iterations 6
Cbc0038I Pass   7: suminf.    0.03271 (1) obj. -9238.48 iterations 6
Cbc0038I Pass   8: suminf.    2.36725 (9) obj. -9238.48 iterations 13
Cbc0038I Pass   9: suminf.    1.80710 (8) obj. -9238.48 iterations 5
Cbc0038I Pass  10: suminf.    2.85997 (9) obj. -9238.48 iterations 6
Cbc0038I Pass  11: suminf.    0.44080 (3) obj. -9238.48 iterations 8
Cbc0038I Pass  12: suminf.    0.03271 (1) obj. -9238.48 iterations 4
Cbc0038I Pass  13: suminf.    0.26559 (2) obj. -9238.48 iterations 2
Cbc0038I Pass  14: suminf.    0.92145 (5) obj. -9238.48 iterations 2
Cbc0038I Pass  15: suminf.    1.28816 (6) obj. -9238.48 iterations 9
Cbc0038I Pass  16: suminf.    1.00000 (6) obj. -9238.48 iterations 7
Cbc0038I Pass  17: suminf.    1.51707 (7) obj. -9238.48 iterations 5
Cbc0038I Pass  18: suminf.    1.00000 (7) obj. -9238.48 iterations 10
Cbc0038I Pass  19: suminf.    1.11052 (5) obj. -9238.48 iterations 6
Cbc0038I Pass  20: suminf.    0.03271 (1) obj. -9238.48 iterations 4
Cbc0038I Pass  21: suminf.    0.26559 (2) obj. -9238.48 iterations 2
Cbc0038I Pass  22: suminf.    2.26009 (8) obj. -9238.48 iterations 10
Cbc0038I Pass  23: suminf.    2.00000 (11) obj. -9238.48 iterations 13
Cbc0038I Pass  24: suminf.    1.50493 (12) obj. -9238.48 iterations 6
Cbc0038I Pass  25: suminf.    3.00000 (11) obj. -9238.48 iterations 8
Cbc0038I Pass  26: suminf.    3.00000 (12) obj. -9238.48 iterations 5
Cbc0038I Pass  27: suminf.    3.00000 (12) obj. -9238.48 iterations 0
Cbc0038I Pass  28: suminf.    3.00000 (12) obj. -9238.48 iterations 0
Cbc0038I Pass  29: suminf.    2.69128 (9) obj. -9238.48 iterations 8
Cbc0038I Pass  30: suminf.    1.00000 (5) obj. -9238.48 iterations 11
Cbc0038I Pass  31: suminf.    1.41983 (6) obj. -9238.48 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 30 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -9175.38 - took 0.01 seconds
Cbc0012I Integer solution of -9175.379 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 60 rows 34 columns, reduced to 18 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 2.8
Cbc0013I At root node, 5 cuts changed objective from -9806.4146 to -9179.0608 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 81 row cuts average 2.7 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9175.379000000001, took 5 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

