Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 259 (-5) columns and 1477 (-68) elements
Clp1000I sum of infeasibilities 1.90444e-06 - average 3.85515e-09, 193 fixed columns
Coin0506I Presolve 109 (-385) rows, 64 (-195) columns and 336 (-1141) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Coin0511I After Postsolve, objective 304.08608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13392346 - largest nonzero change 0 ( 0%) - largest zero change 2.9759554e-05
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Coin0511I After Postsolve, objective 304.08608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 304.0860825 - 0 iterations time 0.082, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 259 columns (258 integer (258 of which binary)) and 1477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 9.87132
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -106.719 iterations 96
Cbc0038I Solution found of -106.719
Cbc0038I Relaxing continuous gives -106.719
Cbc0038I Rounding solution of -203.042 is better than previous of -106.719

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 259 columns, reduced to 58 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -203.042 to -227.505 (0.09 seconds)
Cbc0038I Round again with cutoff of -235.163
Cbc0038I Pass   2: suminf.    2.22576 (9) obj. -235.163 iterations 25
Cbc0038I Pass   3: suminf.    1.93521 (9) obj. -235.163 iterations 16
Cbc0038I Pass   4: suminf.    1.33243 (6) obj. -235.163 iterations 41
Cbc0038I Pass   5: suminf.    0.92709 (6) obj. -235.163 iterations 7
Cbc0038I Pass   6: suminf.    2.77830 (8) obj. -235.163 iterations 19
Cbc0038I Pass   7: suminf.    2.77830 (8) obj. -235.163 iterations 0
Cbc0038I Pass   8: suminf.    1.35091 (8) obj. -235.163 iterations 26
Cbc0038I Pass   9: suminf.    5.27594 (14) obj. -235.163 iterations 51
Cbc0038I Pass  10: suminf.    3.44366 (13) obj. -235.163 iterations 30
Cbc0038I Pass  11: suminf.    2.40083 (9) obj. -235.163 iterations 44
Cbc0038I Pass  12: suminf.    2.31589 (11) obj. -235.163 iterations 16
Cbc0038I Pass  13: suminf.    4.00341 (11) obj. -235.163 iterations 36
Cbc0038I Pass  14: suminf.    3.41393 (12) obj. -235.163 iterations 33
Cbc0038I Pass  15: suminf.    1.78116 (10) obj. -235.163 iterations 35
Cbc0038I Pass  16: suminf.    1.71047 (8) obj. -235.163 iterations 12
Cbc0038I Pass  17: suminf.    2.80371 (8) obj. -235.163 iterations 24
Cbc0038I Pass  18: suminf.    2.44094 (8) obj. -235.163 iterations 8
Cbc0038I Pass  19: suminf.    2.05258 (7) obj. -235.163 iterations 16
Cbc0038I Pass  20: suminf.    2.33688 (6) obj. -235.163 iterations 20
Cbc0038I Pass  21: suminf.    1.72628 (6) obj. -235.163 iterations 40
Cbc0038I Pass  22: suminf.    1.53228 (10) obj. -235.163 iterations 9
Cbc0038I Pass  23: suminf.    1.41436 (7) obj. -235.163 iterations 12
Cbc0038I Pass  24: suminf.    2.54088 (7) obj. -235.163 iterations 25
Cbc0038I Pass  25: suminf.    1.88282 (6) obj. -235.163 iterations 20
Cbc0038I Pass  26: suminf.    2.15646 (6) obj. -235.163 iterations 25
Cbc0038I Pass  27: suminf.    1.72628 (6) obj. -235.163 iterations 8
Cbc0038I Pass  28: suminf.    1.53228 (10) obj. -235.163 iterations 9
Cbc0038I Pass  29: suminf.    1.41436 (7) obj. -235.163 iterations 11
Cbc0038I Pass  30: suminf.    2.54088 (7) obj. -235.163 iterations 24
Cbc0038I Pass  31: suminf.    1.88282 (6) obj. -235.163 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 259 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -227.505 - took 0.17 seconds
Cbc0012I Integer solution of -227.5048 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 494 rows 259 columns, reduced to 58 rows 35 columns
Cbc0031I 25 added rows had average density of 111.84
Cbc0013I At root node, 25 cuts changed objective from -304.08608 to -274.46269 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7782 row cuts average 3.3 elements, 5 column cuts (5 active)  in 0.844 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2015 row cuts average 246.9 elements, 0 column cuts (0 active)  in 0.507 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.367 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 242.8 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -227.5048 best solution, best possible -274.46216 (4.47 seconds)
Cbc0012I Integer solution of -230.4285 found by DiveCoefficient after 6444 iterations and 11 nodes (4.99 seconds)
Cbc0038I Full problem 494 rows 259 columns, reduced to 4 rows 8 columns
Cbc0010I After 53 nodes, 15 on tree, -230.4285 best solution, best possible -274.46216 (5.17 seconds)
Cbc0038I Full problem 494 rows 259 columns, reduced to 14 rows 14 columns
Cbc0012I Integer solution of -234.129 found by rounding after 8100 iterations and 100 nodes (5.42 seconds)
Cbc0001I Search completed - best objective -234.129, took 10039 iterations and 148 nodes (5.79 seconds)
Cbc0032I Strong branching done 800 times (12953 iterations), fathomed 39 nodes and fixed 87 variables
Cbc0035I Maximum depth 17, 870 variables fixed on reduced cost
Total time (CPU seconds):       5.45   (Wallclock seconds):       5.85

