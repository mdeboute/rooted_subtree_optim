Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 28 (-4) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 9.22079e-06 - average 1.77323e-07, 1 fixed columns
Coin0506I Presolve 50 (-2) rows, 27 (-1) columns and 146 (-6) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Coin0511I After Postsolve, objective 79.15983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31394075 - largest nonzero change 0 ( 0%) - largest zero change 2.4390152e-05
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Coin0511I After Postsolve, objective 79.15983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.15983042 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 28 columns (27 integer (27 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.321%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.60391
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.2417 iterations 21
Cbc0038I Solution found of -16.2417
Cbc0038I Relaxing continuous gives -16.2417
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -16.2417 to -17.3564 (0.02 seconds)
Cbc0038I Round again with cutoff of -23.5256
Cbc0038I Pass   2: suminf.    0.15437 (3) obj. -23.5256 iterations 3
Cbc0038I Pass   3: suminf.    0.18851 (1) obj. -23.5256 iterations 3
Cbc0038I Pass   4: suminf.    0.31478 (2) obj. -23.5256 iterations 2
Cbc0038I Pass   5: suminf.    0.47077 (1) obj. -23.5256 iterations 2
Cbc0038I Pass   6: suminf.    0.33699 (1) obj. -23.5256 iterations 1
Cbc0038I Pass   7: suminf.    2.23455 (9) obj. -23.5256 iterations 8
Cbc0038I Pass   8: suminf.    1.01547 (6) obj. -23.5256 iterations 5
Cbc0038I Pass   9: suminf.    0.35815 (3) obj. -23.5256 iterations 6
Cbc0038I Pass  10: suminf.    0.33054 (2) obj. -23.5256 iterations 5
Cbc0038I Pass  11: suminf.    0.56087 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  12: suminf.    0.33699 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  13: suminf.    0.47077 (1) obj. -23.5256 iterations 1
Cbc0038I Pass  14: suminf.    2.83330 (7) obj. -23.5256 iterations 6
Cbc0038I Pass  15: suminf.    0.81203 (2) obj. -23.5256 iterations 5
Cbc0038I Pass  16: suminf.    1.79624 (8) obj. -23.5256 iterations 9
Cbc0038I Pass  17: suminf.    0.34639 (2) obj. -23.5256 iterations 6
Cbc0038I Pass  18: suminf.    0.18548 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  19: suminf.    0.56761 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  20: suminf.    0.15323 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  21: suminf.    0.36004 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  22: suminf.    0.18851 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  23: suminf.    0.31478 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  24: suminf.    0.47077 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  25: suminf.    0.33699 (1) obj. -23.5256 iterations 1
Cbc0038I Pass  26: suminf.    1.25824 (8) obj. -23.5256 iterations 9
Cbc0038I Pass  27: suminf.    0.94029 (5) obj. -23.5256 iterations 3
Cbc0038I Pass  28: suminf.    0.57308 (2) obj. -23.5256 iterations 7
Cbc0038I Pass  29: suminf.    0.18851 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  30: suminf.    0.33054 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  31: suminf.    0.56087 (2) obj. -23.5256 iterations 2
Cbc0038I Rounding solution of -17.833 is better than previous of -17.3564

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -17.833 to -26.2446 (0.03 seconds)
Cbc0038I Round again with cutoff of -36.8054
Cbc0038I Pass  31: suminf.    0.68569 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  32: suminf.    0.90921 (2) obj. -36.8054 iterations 4
Cbc0038I Pass  33: suminf.    0.63940 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  34: suminf.    1.78465 (5) obj. -36.8054 iterations 6
Cbc0038I Pass  35: suminf.    0.31604 (3) obj. -36.8054 iterations 4
Cbc0038I Pass  36: suminf.    0.31604 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  37: suminf.    0.54159 (6) obj. -36.8054 iterations 6
Cbc0038I Pass  38: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  39: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I Pass  40: suminf.    2.47803 (10) obj. -36.8054 iterations 11
Cbc0038I Pass  41: suminf.    0.64624 (4) obj. -36.8054 iterations 11
Cbc0038I Pass  42: suminf.    0.43384 (3) obj. -36.8054 iterations 5
Cbc0038I Pass  43: suminf.    0.78714 (3) obj. -36.8054 iterations 5
Cbc0038I Pass  44: suminf.    0.77775 (5) obj. -36.8054 iterations 3
Cbc0038I Pass  45: suminf.    1.15062 (4) obj. -36.8054 iterations 6
Cbc0038I Pass  46: suminf.    0.65922 (2) obj. -36.8054 iterations 3
Cbc0038I Pass  47: suminf.    0.32283 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  48: suminf.    0.31604 (3) obj. -36.8054 iterations 3
Cbc0038I Pass  49: suminf.    0.31604 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  50: suminf.    0.54159 (6) obj. -36.8054 iterations 6
Cbc0038I Pass  51: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  52: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I Pass  53: suminf.    1.02939 (6) obj. -36.8054 iterations 5
Cbc0038I Pass  54: suminf.    0.72381 (4) obj. -36.8054 iterations 2
Cbc0038I Pass  55: suminf.    0.66464 (4) obj. -36.8054 iterations 6
Cbc0038I Pass  56: suminf.    0.52429 (2) obj. -36.8054 iterations 6
Cbc0038I Pass  57: suminf.    0.42992 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  58: suminf.    0.54159 (6) obj. -36.8054 iterations 4
Cbc0038I Pass  59: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  60: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.2446 - took 0.03 seconds
Cbc0012I Integer solution of -26.2446 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 28 columns, reduced to 31 rows 17 columns
Cbc0031I 13 added rows had average density of 22.384615
Cbc0013I At root node, 13 cuts changed objective from -79.048067 to -40.540147 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2301 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 825 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.2446, took 2793 iterations and 4 nodes (0.23 seconds)
Cbc0032I Strong branching done 64 times (1087 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

