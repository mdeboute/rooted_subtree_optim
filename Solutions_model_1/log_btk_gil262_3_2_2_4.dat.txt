Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 508 (-19) rows, 262 (-2) columns and 1508 (-37) elements
Clp1000I sum of infeasibilities 0.000103199 - average 2.03148e-07, 126 fixed columns
Coin0506I Presolve 245 (-263) rows, 130 (-132) columns and 728 (-780) elements
Clp0029I End of values pass after 130 iterations
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Coin0511I After Postsolve, objective 145.54651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13460114 - largest nonzero change 0 ( 0%) - largest zero change 2.9375418e-05
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Coin0511I After Postsolve, objective 145.54651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.5465126 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 508 rows, 262 columns (261 integer (261 of which binary)) and 1508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 87 integers unsatisfied sum - 12.9569
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.6981 iterations 292
Cbc0038I Solution found of 12.6981
Cbc0038I Relaxing continuous gives 12.6981
Cbc0038I Rounding solution of -17.1651 is better than previous of 12.6981

Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 156 rows 88 columns
Cbc0038I Mini branch and bound improved solution from -17.1651 to -76.3718 (0.23 seconds)
Cbc0038I Round again with cutoff of -83.2893
Cbc0038I Pass   2: suminf.    4.27101 (18) obj. -83.2893 iterations 50
Cbc0038I Pass   3: suminf.    3.00356 (11) obj. -83.2893 iterations 47
Cbc0038I Pass   4: suminf.    2.99629 (10) obj. -83.2893 iterations 1
Cbc0038I Pass   5: suminf.    1.80213 (7) obj. -83.2893 iterations 21
Cbc0038I Pass   6: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass   7: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass   8: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass   9: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  10: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  11: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I Pass  12: suminf.    1.51284 (5) obj. -83.2893 iterations 13
Cbc0038I Pass  13: suminf.    2.16122 (10) obj. -83.2893 iterations 25
Cbc0038I Pass  14: suminf.    2.15743 (9) obj. -83.2893 iterations 1
Cbc0038I Pass  15: suminf.    1.80213 (7) obj. -83.2893 iterations 18
Cbc0038I Pass  16: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass  17: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass  18: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass  19: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  20: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  21: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I Pass  22: suminf.    1.51284 (5) obj. -83.2893 iterations 13
Cbc0038I Pass  23: suminf.    2.16122 (10) obj. -83.2893 iterations 25
Cbc0038I Pass  24: suminf.    2.15743 (9) obj. -83.2893 iterations 1
Cbc0038I Pass  25: suminf.    1.80213 (7) obj. -83.2893 iterations 18
Cbc0038I Pass  26: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass  27: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass  28: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass  29: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  30: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  31: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 171 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -76.3718 to -77.5829 (0.50 seconds)
Cbc0038I Round again with cutoff of -95.7408
Cbc0038I Pass  31: suminf.    4.98800 (19) obj. -95.7408 iterations 15
Cbc0038I Pass  32: suminf.    3.97800 (12) obj. -95.7408 iterations 48
Cbc0038I Pass  33: suminf.    3.21831 (10) obj. -95.7408 iterations 27
Cbc0038I Pass  34: suminf.    3.05252 (10) obj. -95.7408 iterations 10
Cbc0038I Pass  35: suminf.    3.06406 (11) obj. -95.7408 iterations 22
Cbc0038I Pass  36: suminf.    2.48692 (10) obj. -95.7408 iterations 6
Cbc0038I Pass  37: suminf.    2.48306 (9) obj. -95.7408 iterations 2
Cbc0038I Pass  38: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  39: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  40: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  41: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  42: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  43: suminf.    2.90864 (10) obj. -95.7408 iterations 34
Cbc0038I Pass  44: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  45: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  46: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  47: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  48: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  49: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  50: suminf.    2.90864 (10) obj. -95.7408 iterations 34
Cbc0038I Pass  51: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  52: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  53: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  54: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  55: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  56: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  57: suminf.    2.90864 (10) obj. -95.7408 iterations 35
Cbc0038I Pass  58: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  59: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  60: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 171 rows 96 columns
Cbc0038I Mini branch and bound did not improve solution (0.81 seconds)
Cbc0038I After 0.81 seconds - Feasibility pump exiting with objective of -77.5829 - took 0.70 seconds
Cbc0012I Integer solution of -77.582887 found by feasibility pump after 0 iterations and 0 nodes (0.81 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 156 rows 88 columns
Cbc0031I 48 added rows had average density of 109.14583
Cbc0013I At root node, 48 cuts changed objective from -145.54651 to -131.56179 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44921 row cuts average 3.4 elements, 1 column cuts (1 active)  in 1.221 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3245 row cuts average 251.1 elements, 0 column cuts (0 active)  in 1.250 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.247 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.248 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 178.7 elements, 0 column cuts (0 active)  in 0.437 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -77.582887 best solution, best possible -131.56179 (13.73 seconds)
Cbc0010I After 4 nodes, 5 on tree, -77.582887 best solution, best possible -131.56179 (14.54 seconds)
Cbc0010I After 15 nodes, 11 on tree, -77.582887 best solution, best possible -131.56179 (15.27 seconds)
Cbc0012I Integer solution of -78.346787 found by rounding after 22549 iterations and 30 nodes (15.45 seconds)
Cbc0012I Integer solution of -80.137217 found by rounding after 22572 iterations and 33 nodes (15.47 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -80.541947 found by RINS after 22791 iterations and 41 nodes (15.53 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 5 rows 7 columns
Cbc0010I After 126 nodes, 22 on tree, -80.541947 best solution, best possible -131.56179 (15.98 seconds)
Cbc0004I Integer solution of -81.350487 found after 25466 iterations and 141 nodes (16.06 seconds)
Cbc0010I After 197 nodes, 15 on tree, -81.350487 best solution, best possible -131.56179 (16.70 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 182 rows 98 columns
Cbc0010I After 243 nodes, 17 on tree, -81.350487 best solution, best possible -131.56179 (17.43 seconds)
Cbc0012I Integer solution of -81.735387 found by rounding after 30039 iterations and 252 nodes (17.66 seconds)
Cbc0010I After 297 nodes, 16 on tree, -81.735387 best solution, best possible -131.56179 (18.18 seconds)
Cbc0010I After 326 nodes, 27 on tree, -81.735387 best solution, best possible -131.56179 (18.90 seconds)
Cbc0010I After 386 nodes, 18 on tree, -81.735387 best solution, best possible -131.56179 (19.61 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 11 rows 11 columns
Cbc0001I Search completed - best objective -81.735387, took 40066 iterations and 470 nodes (20.14 seconds)
Cbc0032I Strong branching done 3368 times (79220 iterations), fathomed 87 nodes and fixed 294 variables
Cbc0035I Maximum depth 78, 2020 variables fixed on reduced cost
Total time (CPU seconds):       18.99   (Wallclock seconds):       20.27

