Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.85061e-05 - average 3.70121e-07, 15 fixed columns
Coin0506I Presolve 19 (-31) rows, 11 (-17) columns and 54 (-94) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Coin0511I After Postsolve, objective 537.10829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Clp0000I Optimal - objective value 537.10829
Coin0511I After Postsolve, objective 537.10829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 537.1082925 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 2.01389
Cbc0038I Pass   1: suminf.    0.54692 (2) obj. -515.508 iterations 10
Cbc0038I Solution found of -162.138
Cbc0038I Relaxing continuous gives -162.138
Cbc0038I Rounding solution of -212.433 is better than previous of -162.138

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -212.433 to -358.607 (0.01 seconds)
Cbc0038I Round again with cutoff of -376.161
Cbc0038I Pass   2: suminf.    0.54692 (2) obj. -515.508 iterations 0
Cbc0038I Pass   3: suminf.    0.35786 (1) obj. -376.161 iterations 4
Cbc0038I Pass   4: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass   5: suminf.    0.34959 (1) obj. -396.332 iterations 7
Cbc0038I Pass   6: suminf.    0.34959 (1) obj. -396.332 iterations 2
Cbc0038I Pass   7: suminf.    0.41011 (1) obj. -376.161 iterations 1
Cbc0038I Pass   8: suminf.    0.37398 (1) obj. -413.683 iterations 6
Cbc0038I Pass   9: suminf.    0.37398 (1) obj. -413.683 iterations 2
Cbc0038I Pass  10: suminf.    0.48656 (1) obj. -376.161 iterations 1
Cbc0038I Pass  11: suminf.    0.60830 (2) obj. -376.161 iterations 4
Cbc0038I Pass  12: suminf.    0.60830 (2) obj. -376.161 iterations 2
Cbc0038I Pass  13: suminf.    0.37404 (1) obj. -376.161 iterations 1
Cbc0038I Pass  14: suminf.    0.43902 (1) obj. -438.465 iterations 1
Cbc0038I Pass  15: suminf.    1.18742 (3) obj. -376.161 iterations 9
Cbc0038I Pass  16: suminf.    1.05607 (3) obj. -376.161 iterations 3
Cbc0038I Pass  17: suminf.    0.42711 (2) obj. -376.161 iterations 2
Cbc0038I Pass  18: suminf.    0.65687 (2) obj. -376.161 iterations 2
Cbc0038I Pass  19: suminf.    0.26829 (1) obj. -393.477 iterations 1
Cbc0038I Pass  20: suminf.    0.32025 (1) obj. -376.161 iterations 1
Cbc0038I Pass  21: suminf.    0.28455 (1) obj. -492.882 iterations 4
Cbc0038I Pass  22: suminf.    0.36525 (1) obj. -376.161 iterations 1
Cbc0038I Pass  23: suminf.    0.28455 (1) obj. -492.882 iterations 1
Cbc0038I Pass  24: suminf.    0.39422 (4) obj. -471.51 iterations 6
Cbc0038I Pass  25: suminf.    0.08130 (1) obj. -458.853 iterations 4
Cbc0038I Pass  26: suminf.    0.32940 (1) obj. -376.161 iterations 1
Cbc0038I Pass  27: suminf.    1.62178 (7) obj. -376.161 iterations 10
Cbc0038I Pass  28: suminf.    0.49235 (1) obj. -376.161 iterations 8
Cbc0038I Pass  29: suminf.    0.47967 (1) obj. -385.485 iterations 1
Cbc0038I Pass  30: suminf.    0.49721 (3) obj. -376.161 iterations 12
Cbc0038I Pass  31: suminf.    0.49721 (3) obj. -376.161 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -358.607 to -379.756 (0.02 seconds)
Cbc0038I Round again with cutoff of -410.635
Cbc0038I Pass  31: suminf.    0.54692 (2) obj. -515.508 iterations 0
Cbc0038I Pass  32: suminf.    0.25443 (1) obj. -410.635 iterations 4
Cbc0038I Pass  33: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass  34: suminf.    1.70648 (4) obj. -410.635 iterations 16
Cbc0038I Pass  35: suminf.    0.45862 (2) obj. -410.635 iterations 7
Cbc0038I Pass  36: suminf.    0.45071 (2) obj. -410.635 iterations 2
Cbc0038I Pass  37: suminf.    0.45071 (2) obj. -410.635 iterations 0
Cbc0038I Pass  38: suminf.    0.73926 (2) obj. -450.139 iterations 1
Cbc0038I Pass  39: suminf.    0.60170 (2) obj. -410.635 iterations 1
Cbc0038I Pass  40: suminf.    0.44538 (2) obj. -410.635 iterations 12
Cbc0038I Pass  41: suminf.    0.40960 (2) obj. -410.635 iterations 4
Cbc0038I Pass  42: suminf.    0.26154 (1) obj. -410.635 iterations 3
Cbc0038I Pass  43: suminf.    0.14634 (1) obj. -449.029 iterations 1
Cbc0038I Pass  44: suminf.    0.08130 (1) obj. -467.37 iterations 7
Cbc0038I Pass  45: suminf.    0.08130 (1) obj. -467.37 iterations 2
Cbc0038I Pass  46: suminf.    0.25443 (1) obj. -410.635 iterations 2
Cbc0038I Pass  47: suminf.    0.73194 (2) obj. -410.635 iterations 3
Cbc0038I Pass  48: suminf.    0.27642 (1) obj. -423.265 iterations 2
Cbc0038I Pass  49: suminf.    0.31432 (1) obj. -410.635 iterations 1
Cbc0038I Pass  50: suminf.    0.60274 (2) obj. -447.738 iterations 2
Cbc0038I Pass  51: suminf.    1.21639 (3) obj. -410.635 iterations 8
Cbc0038I Pass  52: suminf.    1.21639 (3) obj. -410.635 iterations 2
Cbc0038I Pass  53: suminf.    0.84386 (2) obj. -410.635 iterations 3
Cbc0038I Pass  54: suminf.    0.48370 (2) obj. -410.635 iterations 1
Cbc0038I Pass  55: suminf.    0.35854 (5) obj. -410.635 iterations 6
Cbc0038I Pass  56: suminf.    0.22684 (2) obj. -410.635 iterations 7
Cbc0038I Pass  57: suminf.    0.03252 (1) obj. -477.924 iterations 4
Cbc0038I Pass  58: suminf.    0.03252 (1) obj. -477.924 iterations 0
Cbc0038I Pass  59: suminf.    0.23497 (1) obj. -410.635 iterations 2
Cbc0038I Pass  60: suminf.    0.03252 (1) obj. -477.924 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -379.756 - took 0.02 seconds
Cbc0012I Integer solution of -379.75625 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 11 rows 7 columns
Cbc0031I 9 added rows had average density of 13.666667
Cbc0013I At root node, 9 cuts changed objective from -534.1503 to -458.19989 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 349 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 291 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.75625, took 1867 iterations and 14 nodes (0.20 seconds)
Cbc0032I Strong branching done 138 times (1026 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

