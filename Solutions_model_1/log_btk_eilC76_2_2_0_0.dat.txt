Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 4.71134e-05 - average 3.5692e-07, 11 fixed columns
Coin0506I Presolve 109 (-23) rows, 63 (-13) columns and 337 (-72) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.7504631 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 31.030356
Clp0000I Optimal - objective value 31.030356
Coin0511I After Postsolve, objective 31.030356, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.030356
Clp0000I Optimal - objective value 31.030356
Clp0000I Optimal - objective value 31.030356
Coin0511I After Postsolve, objective 31.030356, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.03035642 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.81153
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.1635 iterations 52
Cbc0038I Solution found of 10.1635
Cbc0038I Relaxing continuous gives 10.1635
Cbc0038I Rounding solution of -7.18326 is better than previous of 10.1635

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -7.18326 to -8.85826 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.0756
Cbc0038I Pass   2: suminf.    2.74114 (9) obj. -11.0756 iterations 15
Cbc0038I Pass   3: suminf.    1.38955 (5) obj. -11.0756 iterations 7
Cbc0038I Pass   4: suminf.    1.34815 (4) obj. -11.0756 iterations 8
Cbc0038I Pass   5: suminf.    1.34815 (4) obj. -11.0756 iterations 0
Cbc0038I Pass   6: suminf.    0.89214 (4) obj. -11.0756 iterations 2
Cbc0038I Pass   7: suminf.    0.86446 (3) obj. -11.0756 iterations 1
Cbc0038I Pass   8: suminf.    0.74009 (4) obj. -11.0756 iterations 4
Cbc0038I Pass   9: suminf.    1.50469 (4) obj. -11.0756 iterations 5
Cbc0038I Pass  10: suminf.    1.34815 (4) obj. -11.0756 iterations 3
Cbc0038I Pass  11: suminf.    1.34815 (4) obj. -11.0756 iterations 0
Cbc0038I Pass  12: suminf.    0.89214 (4) obj. -11.0756 iterations 2
Cbc0038I Pass  13: suminf.    0.86446 (3) obj. -11.0756 iterations 1
Cbc0038I Pass  14: suminf.    0.74009 (4) obj. -11.0756 iterations 4
Cbc0038I Pass  15: suminf.    1.50469 (4) obj. -11.0756 iterations 5
Cbc0038I Pass  16: suminf.    1.34815 (4) obj. -11.0756 iterations 3
Cbc0038I Pass  17: suminf.    1.34815 (4) obj. -11.0756 iterations 0
Cbc0038I Pass  18: suminf.    0.89214 (4) obj. -11.0756 iterations 2
Cbc0038I Pass  19: suminf.    0.86446 (3) obj. -11.0756 iterations 1
Cbc0038I Pass  20: suminf.    0.74009 (4) obj. -11.0756 iterations 4
Cbc0038I Pass  21: suminf.    1.50469 (4) obj. -11.0756 iterations 5
Cbc0038I Pass  22: suminf.    1.34815 (4) obj. -11.0756 iterations 3
Cbc0038I Pass  23: suminf.    1.34815 (4) obj. -11.0756 iterations 0
Cbc0038I Pass  24: suminf.    0.89214 (4) obj. -11.0756 iterations 2
Cbc0038I Pass  25: suminf.    0.86446 (3) obj. -11.0756 iterations 1
Cbc0038I Pass  26: suminf.    0.74009 (4) obj. -11.0756 iterations 4
Cbc0038I Pass  27: suminf.    1.50469 (4) obj. -11.0756 iterations 5
Cbc0038I Pass  28: suminf.    1.34815 (4) obj. -11.0756 iterations 3
Cbc0038I Pass  29: suminf.    1.34815 (4) obj. -11.0756 iterations 0
Cbc0038I Pass  30: suminf.    0.89214 (4) obj. -11.0756 iterations 2
Cbc0038I Pass  31: suminf.    0.86446 (3) obj. -11.0756 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -8.85826 to -9.06409 (0.10 seconds)
Cbc0038I Round again with cutoff of -15.0665
Cbc0038I Pass  31: suminf.    3.62771 (9) obj. -15.0665 iterations 0
Cbc0038I Pass  32: suminf.    2.21859 (8) obj. -15.0665 iterations 4
Cbc0038I Pass  33: suminf.    1.77637 (5) obj. -15.0665 iterations 11
Cbc0038I Pass  34: suminf.    1.52143 (4) obj. -15.0665 iterations 3
Cbc0038I Pass  35: suminf.    1.49199 (4) obj. -15.0665 iterations 6
Cbc0038I Pass  36: suminf.    1.35293 (5) obj. -15.0665 iterations 3
Cbc0038I Pass  37: suminf.    1.34829 (5) obj. -15.0665 iterations 2
Cbc0038I Pass  38: suminf.    1.72294 (5) obj. -15.0665 iterations 6
Cbc0038I Pass  39: suminf.    1.31485 (4) obj. -15.0665 iterations 4
Cbc0038I Pass  40: suminf.    1.31485 (4) obj. -15.0665 iterations 1
Cbc0038I Pass  41: suminf.    1.49199 (4) obj. -15.0665 iterations 5
Cbc0038I Pass  42: suminf.    1.35293 (5) obj. -15.0665 iterations 3
Cbc0038I Pass  43: suminf.    1.34829 (5) obj. -15.0665 iterations 2
Cbc0038I Pass  44: suminf.    1.72294 (5) obj. -15.0665 iterations 6
Cbc0038I Pass  45: suminf.    1.31485 (4) obj. -15.0665 iterations 4
Cbc0038I Pass  46: suminf.    1.31485 (4) obj. -15.0665 iterations 1
Cbc0038I Pass  47: suminf.    1.49199 (4) obj. -15.0665 iterations 5
Cbc0038I Pass  48: suminf.    1.35293 (5) obj. -15.0665 iterations 3
Cbc0038I Pass  49: suminf.    1.34829 (5) obj. -15.0665 iterations 2
Cbc0038I Pass  50: suminf.    1.72294 (5) obj. -15.0665 iterations 6
Cbc0038I Pass  51: suminf.    1.31485 (4) obj. -15.0665 iterations 4
Cbc0038I Pass  52: suminf.    1.31485 (4) obj. -15.0665 iterations 1
Cbc0038I Pass  53: suminf.    1.49199 (4) obj. -15.0665 iterations 5
Cbc0038I Pass  54: suminf.    1.35293 (5) obj. -15.0665 iterations 3
Cbc0038I Pass  55: suminf.    1.34829 (5) obj. -15.0665 iterations 2
Cbc0038I Pass  56: suminf.    1.72294 (5) obj. -15.0665 iterations 6
Cbc0038I Pass  57: suminf.    1.31485 (4) obj. -15.0665 iterations 4
Cbc0038I Pass  58: suminf.    1.31485 (4) obj. -15.0665 iterations 1
Cbc0038I Pass  59: suminf.    1.49199 (4) obj. -15.0665 iterations 5
Cbc0038I Pass  60: suminf.    1.35293 (5) obj. -15.0665 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -9.06409 - took 0.12 seconds
Cbc0012I Integer solution of -9.0640944 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 73 rows 43 columns
Cbc0031I 30 added rows had average density of 45.166667
Cbc0013I At root node, 30 cuts changed objective from -31.030356 to -23.922709 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14589 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2103 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 183 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 61.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.0640944 best solution, best possible -23.922709 (0.96 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 56 rows 34 columns
Cbc0016I Integer solution of -9.4573144 found by strong branching after 10906 iterations and 68 nodes (1.43 seconds)
Cbc0001I Search completed - best objective -9.45731443, took 11792 iterations and 93 nodes (1.46 seconds)
Cbc0032I Strong branching done 976 times (16287 iterations), fathomed 3 nodes and fixed 38 variables
Cbc0035I Maximum depth 32, 125 variables fixed on reduced cost
Total time (CPU seconds):       1.42   (Wallclock seconds):       1.48

