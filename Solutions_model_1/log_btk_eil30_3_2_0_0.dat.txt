Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-10) rows, 29 (-3) columns and 156 (-21) elements
Clp1000I sum of infeasibilities 5.41481e-08 - average 1.02166e-09, 4 fixed columns
Coin0506I Presolve 43 (-10) rows, 24 (-5) columns and 127 (-29) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 107.64175
Clp0000I Optimal - objective value 107.64175
Coin0511I After Postsolve, objective 107.64175, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 107.64175
Clp0000I Optimal - objective value 107.64175
Clp0000I Optimal - objective value 107.64175
Coin0511I After Postsolve, objective 107.64175, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.6417482 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 53 rows, 29 columns (28 integer (28 of which binary)) and 156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.156%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.75015
Cbc0038I Pass   1: suminf.    0.37903 (1) obj. -6.49359 iterations 21
Cbc0038I Solution found of 2.78988
Cbc0038I Relaxing continuous gives 2.78988
Cbc0038I Rounding solution of -6.51106 is better than previous of 2.78988

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 29 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -6.51106 to -54.2794 (0.02 seconds)
Cbc0038I Round again with cutoff of -59.6157
Cbc0038I Pass   2: suminf.    0.93927 (3) obj. -59.6157 iterations 2
Cbc0038I Pass   3: suminf.    0.82276 (3) obj. -59.6157 iterations 1
Cbc0038I Pass   4: suminf.    0.38716 (3) obj. -59.6157 iterations 5
Cbc0038I Pass   5: suminf.    0.37308 (3) obj. -59.6157 iterations 1
Cbc0038I Pass   6: suminf.    0.19880 (1) obj. -59.6157 iterations 3
Cbc0038I Pass   7: suminf.    0.17742 (1) obj. -59.6157 iterations 1
Cbc0038I Pass   8: suminf.    0.37118 (3) obj. -59.6157 iterations 7
Cbc0038I Pass   9: suminf.    0.15339 (3) obj. -59.6157 iterations 5
Cbc0038I Pass  10: suminf.    0.41791 (2) obj. -59.6157 iterations 2
Cbc0038I Pass  11: suminf.    0.41791 (2) obj. -59.6157 iterations 0
Cbc0038I Pass  12: suminf.    0.38151 (2) obj. -59.6157 iterations 4
Cbc0038I Pass  13: suminf.    0.21516 (2) obj. -59.6157 iterations 1
Cbc0038I Pass  14: suminf.    0.23483 (3) obj. -59.6157 iterations 3
Cbc0038I Pass  15: suminf.    0.15339 (3) obj. -59.6157 iterations 1
Cbc0038I Pass  16: suminf.    0.41791 (2) obj. -59.6157 iterations 2
Cbc0038I Pass  17: suminf.    0.41791 (2) obj. -59.6157 iterations 0
Cbc0038I Pass  18: suminf.    0.38151 (2) obj. -59.6157 iterations 4
Cbc0038I Pass  19: suminf.    0.21516 (2) obj. -59.6157 iterations 1
Cbc0038I Pass  20: suminf.    0.23483 (3) obj. -59.6157 iterations 3
Cbc0038I Pass  21: suminf.    0.15339 (3) obj. -59.6157 iterations 1
Cbc0038I Pass  22: suminf.    0.41791 (2) obj. -59.6157 iterations 2
Cbc0038I Pass  23: suminf.    0.41791 (2) obj. -59.6157 iterations 0
Cbc0038I Pass  24: suminf.    0.38151 (2) obj. -59.6157 iterations 4
Cbc0038I Pass  25: suminf.    0.21516 (2) obj. -59.6157 iterations 1
Cbc0038I Pass  26: suminf.    0.23483 (3) obj. -59.6157 iterations 3
Cbc0038I Pass  27: suminf.    0.15339 (3) obj. -59.6157 iterations 1
Cbc0038I Pass  28: suminf.    0.41791 (2) obj. -59.6157 iterations 2
Cbc0038I Pass  29: suminf.    0.41791 (2) obj. -59.6157 iterations 0
Cbc0038I Pass  30: suminf.    0.38151 (2) obj. -59.6157 iterations 4
Cbc0038I Pass  31: suminf.    0.21516 (2) obj. -59.6157 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 29 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -54.2794 - took 0.02 seconds
Cbc0012I Integer solution of -54.279413 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 53 rows 29 columns, reduced to 37 rows 21 columns
Cbc0031I 14 added rows had average density of 14.642857
Cbc0013I At root node, 14 cuts changed objective from -107.64175 to -69.19533 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1493 row cuts average 3.8 elements, 4 column cuts (4 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 701 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 94 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0012I Integer solution of -55.319758 found by rounding after 2626 iterations and 2 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -55.31975818000001, took 2636 iterations and 4 nodes (0.18 seconds)
Cbc0032I Strong branching done 52 times (682 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

