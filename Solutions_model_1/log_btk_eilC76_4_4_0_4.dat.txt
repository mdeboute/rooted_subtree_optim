Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-37) rows, 66 (-12) columns and 362 (-91) elements
Clp1000I sum of infeasibilities 2.55989e-05 - average 2.16939e-07, 26 fixed columns
Coin0506I Presolve 40 (-78) rows, 35 (-31) columns and 144 (-218) elements
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 277.50973
Clp0000I Optimal - objective value 277.50973
Coin0511I After Postsolve, objective 277.50973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 277.50973
Clp0000I Optimal - objective value 277.50973
Clp0000I Optimal - objective value 277.50973
Coin0511I After Postsolve, objective 277.50973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 277.5097296 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 118 rows, 66 columns (65 integer (65 of which binary)) and 362 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.321%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 1.76398
Cbc0038I Pass   1: suminf.    0.40909 (2) obj. -254.199 iterations 10
Cbc0038I Solution found of -237.293
Cbc0038I Relaxing continuous gives -237.293
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 66 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -237.293 to -250.545 (0.01 seconds)
Cbc0038I Round again with cutoff of -253.241
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.40909 (2) obj. -254.199 iterations 0
Cbc0038I Pass   3: suminf.    0.38593 (2) obj. -253.241 iterations 5
Cbc0038I Pass   4: suminf.    2.91927 (11) obj. -253.241 iterations 9
Cbc0038I Pass   5: suminf.    2.90602 (11) obj. -253.241 iterations 3
Cbc0038I Pass   6: suminf.    1.66574 (5) obj. -253.241 iterations 19
Cbc0038I Pass   7: suminf.    0.88889 (4) obj. -267.114 iterations 8
Cbc0038I Pass   8: suminf.    1.30064 (4) obj. -253.241 iterations 5
Cbc0038I Pass   9: suminf.    1.14161 (4) obj. -253.241 iterations 15
Cbc0038I Pass  10: suminf.    4.30631 (12) obj. -253.241 iterations 15
Cbc0038I Pass  11: suminf.    0.83759 (7) obj. -253.241 iterations 7
Cbc0038I Pass  12: suminf.    0.83759 (7) obj. -253.241 iterations 0
Cbc0038I Pass  13: suminf.    0.42927 (2) obj. -253.241 iterations 20
Cbc0038I Pass  14: suminf.    0.42927 (2) obj. -253.241 iterations 0
Cbc0038I Pass  15: suminf.    0.65306 (2) obj. -259.937 iterations 5
Cbc0038I Pass  16: suminf.    3.03790 (8) obj. -253.241 iterations 16
Cbc0038I Pass  17: suminf.    1.03297 (5) obj. -253.241 iterations 12
Cbc0038I Pass  18: suminf.    0.06162 (2) obj. -253.241 iterations 13
Cbc0038I Pass  19: suminf.    0.84911 (4) obj. -253.241 iterations 8
Cbc0038I Pass  20: suminf.    1.37704 (6) obj. -253.241 iterations 16
Cbc0038I Pass  21: suminf.    0.72677 (4) obj. -253.241 iterations 13
Cbc0038I Pass  22: suminf.    0.16216 (3) obj. -267.064 iterations 9
Cbc0038I Solution found of -262.743
Cbc0038I Relaxing continuous gives -262.743
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 66 columns, reduced to 28 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -265.696
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  23: suminf.    1.25029 (5) obj. -265.696 iterations 2
Cbc0038I Pass  24: suminf.    1.05686 (4) obj. -265.696 iterations 9
Cbc0038I Pass  25: suminf.    0.84744 (4) obj. -265.696 iterations 11
Cbc0038I Pass  26: suminf.    0.69962 (5) obj. -265.696 iterations 6
Cbc0038I Pass  27: suminf.    1.69350 (6) obj. -265.696 iterations 9
Cbc0038I Pass  28: suminf.    0.09871 (2) obj. -265.696 iterations 3
Cbc0038I Pass  29: suminf.    0.16327 (2) obj. -267.627 iterations 5
Cbc0038I Pass  30: suminf.    1.58270 (6) obj. -265.696 iterations 12
Cbc0038I Pass  31: suminf.    1.30043 (7) obj. -265.696 iterations 4
Cbc0038I Pass  32: suminf.    1.58141 (6) obj. -265.696 iterations 7
Cbc0038I Pass  33: suminf.    1.36727 (9) obj. -265.696 iterations 7
Cbc0038I Pass  34: suminf.    1.76705 (8) obj. -265.696 iterations 13
Cbc0038I Pass  35: suminf.    1.44939 (7) obj. -265.696 iterations 6
Cbc0038I Pass  36: suminf.    1.66897 (9) obj. -265.696 iterations 3
Cbc0038I Pass  37: suminf.    1.44939 (7) obj. -265.696 iterations 3
Cbc0038I Pass  38: suminf.    1.58141 (6) obj. -265.696 iterations 12
Cbc0038I Pass  39: suminf.    1.36727 (9) obj. -265.696 iterations 7
Cbc0038I Pass  40: suminf.    1.76705 (8) obj. -265.696 iterations 13
Cbc0038I Pass  41: suminf.    1.58270 (6) obj. -265.696 iterations 10
Cbc0038I Pass  42: suminf.    1.30043 (7) obj. -265.696 iterations 5
Cbc0038I Pass  43: suminf.    1.30043 (7) obj. -265.696 iterations 1
Cbc0038I Pass  44: suminf.    1.30043 (7) obj. -265.696 iterations 1
Cbc0038I Pass  45: suminf.    1.58141 (6) obj. -265.696 iterations 7
Cbc0038I Pass  46: suminf.    1.36727 (9) obj. -265.696 iterations 7
Cbc0038I Pass  47: suminf.    1.76705 (8) obj. -265.696 iterations 13
Cbc0038I Pass  48: suminf.    1.44939 (7) obj. -265.696 iterations 6
Cbc0038I Pass  49: suminf.    1.44939 (7) obj. -265.696 iterations 1
Cbc0038I Pass  50: suminf.    1.44939 (7) obj. -265.696 iterations 1
Cbc0038I Pass  51: suminf.    1.58141 (6) obj. -265.696 iterations 12
Cbc0038I Pass  52: suminf.    1.36727 (9) obj. -265.696 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 66 columns, reduced to 17 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -262.743 - took 0.02 seconds
Cbc0012I Integer solution of -262.7426 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 118 rows 66 columns, reduced to 13 rows 11 columns
Cbc0031I 5 added rows had average density of 12.2
Cbc0013I At root node, 20 cuts changed objective from -277.50973 to -262.74269 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 36 row cuts average 3.0 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 28 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 9.4376092e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -262.7426, took 94 iterations and 0 nodes (0.22 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.22

