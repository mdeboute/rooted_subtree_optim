Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 199 (-7) rows, 102 (-2) columns and 497 (-12) elements
Clp1000I sum of infeasibilities 0.00455253 - average 2.2877e-05, 19 fixed columns
Coin0506I Presolve 152 (-47) rows, 83 (-19) columns and 384 (-113) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 1.1960329 - largest nonzero change 0 ( 0%) - largest zero change 1.8676438e-05
Clp0000I Optimal - objective value 3105.4307
Clp0000I Optimal - objective value 3105.4307
Coin0511I After Postsolve, objective 3105.4307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.49415809 - largest nonzero change 0 ( 0%) - largest zero change 2.9916438e-05
Clp0000I Optimal - objective value 3105.4307
Clp0000I Optimal - objective value 3105.4307
Clp0000I Optimal - objective value 3105.4307
Coin0511I After Postsolve, objective 3105.4307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3105.430688 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 199 rows, 102 columns (101 integer (101 of which binary)) and 497 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.947%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 81 integers unsatisfied sum - 27.9874
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 142.282 iterations 84
Cbc0038I Solution found of 142.282
Cbc0038I Relaxing continuous gives 142.282
Cbc0038I Rounding solution of 108.368 is better than previous of 142.282

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 199 rows 102 columns, reduced to 150 rows 82 columns - 14 fixed gives 87, 58 - ok now
Cbc0038I Full problem 199 rows 102 columns, reduced to 87 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 108.368 to -38.4543 (0.05 seconds)
Cbc0038I Round again with cutoff of -345.152
Cbc0038I Pass   2: suminf.    0.60208 (7) obj. -345.152 iterations 7
Cbc0038I Pass   3: suminf.    1.53040 (9) obj. -345.152 iterations 20
Cbc0038I Pass   4: suminf.    0.98913 (7) obj. -345.152 iterations 5
Cbc0038I Pass   5: suminf.    2.84274 (14) obj. -345.152 iterations 20
Cbc0038I Pass   6: suminf.    2.82688 (14) obj. -345.152 iterations 2
Cbc0038I Pass   7: suminf.    3.28882 (11) obj. -345.152 iterations 15
Cbc0038I Pass   8: suminf.    3.15441 (11) obj. -345.152 iterations 3
Cbc0038I Pass   9: suminf.    4.08903 (17) obj. -345.152 iterations 18
Cbc0038I Pass  10: suminf.    4.08187 (17) obj. -345.152 iterations 1
Cbc0038I Pass  11: suminf.    5.21535 (18) obj. -345.152 iterations 29
Cbc0038I Pass  12: suminf.    5.00874 (18) obj. -345.152 iterations 2
Cbc0038I Pass  13: suminf.    6.09322 (37) obj. -345.152 iterations 16
Cbc0038I Pass  14: suminf.    5.73722 (21) obj. -345.152 iterations 17
Cbc0038I Pass  15: suminf.    7.03649 (38) obj. -345.152 iterations 14
Cbc0038I Pass  16: suminf.    6.49769 (40) obj. -345.152 iterations 12
Cbc0038I Pass  17: suminf.    7.15418 (38) obj. -345.152 iterations 12
Cbc0038I Pass  18: suminf.    6.24826 (35) obj. -345.152 iterations 12
Cbc0038I Pass  19: suminf.    6.65168 (33) obj. -345.152 iterations 9
Cbc0038I Pass  20: suminf.   10.38783 (42) obj. -345.152 iterations 33
Cbc0038I Pass  21: suminf.    7.61573 (38) obj. -345.152 iterations 34
Cbc0038I Pass  22: suminf.    7.48209 (48) obj. -345.152 iterations 8
Cbc0038I Pass  23: suminf.   11.21875 (44) obj. -345.152 iterations 25
Cbc0038I Pass  24: suminf.    7.09093 (48) obj. -345.152 iterations 15
Cbc0038I Pass  25: suminf.    5.79396 (50) obj. -345.152 iterations 2
Cbc0038I Pass  26: suminf.    4.74594 (48) obj. -345.152 iterations 20
Cbc0038I Pass  27: suminf.   10.13408 (39) obj. -345.152 iterations 23
Cbc0038I Pass  28: suminf.    7.66864 (42) obj. -345.152 iterations 5
Cbc0038I Pass  29: suminf.    5.32254 (48) obj. -345.152 iterations 12
Cbc0038I Pass  30: suminf.   16.06901 (42) obj. -345.152 iterations 64
Cbc0038I Pass  31: suminf.    4.46521 (23) obj. -345.152 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 199 rows 102 columns, reduced to 182 rows 96 columns - 44 fixed gives 82, 50 - ok now
Cbc0038I Full problem 199 rows 102 columns, reduced to 82 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -38.4543 - took 0.08 seconds
Cbc0012I Integer solution of -38.45427 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 43 added rows had average density of 41.162791
Cbc0013I At root node, 43 cuts changed objective from -3105.4307 to -1407.8117 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23097 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.197 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2879 row cuts average 96.6 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 376 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 184 row cuts average 81.8 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.45427 best solution, best possible -1407.8117 (2.08 seconds)
Cbc0012I Integer solution of -41.7364 found by rounding after 12226 iterations and 17 nodes (2.31 seconds)
Cbc0001I Search completed - best objective -41.7364, took 13445 iterations and 36 nodes (2.44 seconds)
Cbc0032I Strong branching done 782 times (19930 iterations), fathomed 4 nodes and fixed 16 variables
Cbc0035I Maximum depth 6, 45 variables fixed on reduced cost
Total time (CPU seconds):       2.35   (Wallclock seconds):       2.46

