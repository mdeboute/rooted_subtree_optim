Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 493 (-34) rows, 261 (-3) columns and 1477 (-68) elements
Clp1000I sum of infeasibilities 1.75998e-05 - average 3.56993e-08, 51 fixed columns
Coin0506I Presolve 392 (-101) rows, 210 (-51) columns and 1177 (-300) elements
Clp0029I End of values pass after 210 iterations
Clp0014I Perturbing problem by 0.001% of 2.0234206 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Coin0511I After Postsolve, objective 165.6517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Clp0000I Optimal - objective value 165.6517
Coin0511I After Postsolve, objective 165.6517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.6516985 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 493 rows, 261 columns (260 integer (260 of which binary)) and 1477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.360%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 93 integers unsatisfied sum - 12.4654
Cbc0038I Solution found of -4.28348
Cbc0038I Relaxing continuous gives -20.3044
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 167 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -20.3044 to -56.6184 (0.15 seconds)
Cbc0038I Round again with cutoff of -67.5219
Cbc0038I Pass   1: suminf.    2.75151 (58) obj. -67.5219 iterations 181
Cbc0038I Pass   2: suminf.    1.56247 (5) obj. -67.5334 iterations 80
Cbc0038I Pass   3: suminf.    0.68671 (3) obj. -67.5219 iterations 12
Cbc0038I Pass   4: suminf.    0.46579 (3) obj. -67.5219 iterations 2
Cbc0038I Pass   5: suminf.    1.10220 (4) obj. -67.5219 iterations 15
Cbc0038I Pass   6: suminf.    1.05369 (3) obj. -67.5219 iterations 1
Cbc0038I Pass   7: suminf.    0.04082 (1) obj. -71.2135 iterations 9
Cbc0038I Pass   8: suminf.    0.65468 (2) obj. -67.5219 iterations 2
Cbc0038I Pass   9: suminf.    0.35336 (2) obj. -67.5219 iterations 1
Cbc0038I Pass  10: suminf.    2.46396 (10) obj. -67.5219 iterations 52
Cbc0038I Pass  11: suminf.    1.70658 (6) obj. -67.5219 iterations 32
Cbc0038I Pass  12: suminf.    0.38636 (4) obj. -67.5219 iterations 24
Cbc0038I Pass  13: suminf.    0.29717 (1) obj. -67.5219 iterations 2
Cbc0038I Pass  14: suminf.    0.48421 (1) obj. -70.5882 iterations 3
Cbc0038I Pass  15: suminf.    4.10353 (13) obj. -67.5219 iterations 36
Cbc0038I Pass  16: suminf.    2.20119 (11) obj. -67.5219 iterations 20
Cbc0038I Pass  17: suminf.    2.20119 (11) obj. -67.5219 iterations 2
Cbc0038I Pass  18: suminf.    1.49988 (5) obj. -67.5219 iterations 30
Cbc0038I Pass  19: suminf.    0.46553 (2) obj. -67.5219 iterations 6
Cbc0038I Pass  20: suminf.    0.15285 (3) obj. -67.5219 iterations 2
Cbc0038I Pass  21: suminf.    1.17721 (3) obj. -67.5219 iterations 7
Cbc0038I Pass  22: suminf.    0.20163 (1) obj. -67.5219 iterations 3
Cbc0038I Pass  23: suminf.    0.15294 (1) obj. -67.5219 iterations 3
Cbc0038I Pass  24: suminf.    2.44296 (10) obj. -67.5219 iterations 46
Cbc0038I Pass  25: suminf.    1.90108 (9) obj. -67.5219 iterations 23
Cbc0038I Pass  26: suminf.    1.63752 (5) obj. -67.5219 iterations 25
Cbc0038I Pass  27: suminf.    0.86885 (6) obj. -67.5219 iterations 13
Cbc0038I Pass  28: suminf.    1.40991 (4) obj. -67.5219 iterations 15
Cbc0038I Pass  29: suminf.    1.27516 (5) obj. -67.5219 iterations 14
Cbc0038I Pass  30: suminf.    1.27516 (5) obj. -67.5219 iterations 0
Cbc0038I Rounding solution of -76.4042 is better than previous of -56.6184

Cbc0038I Before mini branch and bound, 125 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 246 rows 136 columns - 6 fixed gives 200, 130 - ok now
Cbc0038I Full problem 493 rows 261 columns, reduced to 196 rows 128 columns
Cbc0038I Mini branch and bound improved solution from -76.4042 to -77.8384 (0.32 seconds)
Cbc0038I Round again with cutoff of -95.4012
Cbc0038I Pass  30: suminf.    4.37612 (58) obj. -95.4012 iterations 0
Cbc0038I Pass  31: suminf.    1.79736 (6) obj. -95.4012 iterations 81
Cbc0038I Pass  32: suminf.    1.24349 (6) obj. -95.4012 iterations 8
Cbc0038I Pass  33: suminf.    1.85193 (7) obj. -95.4012 iterations 22
Cbc0038I Pass  34: suminf.    1.79116 (10) obj. -95.4012 iterations 9
Cbc0038I Pass  35: suminf.    3.82786 (10) obj. -95.4012 iterations 23
Cbc0038I Pass  36: suminf.    3.22473 (10) obj. -95.4012 iterations 11
Cbc0038I Pass  37: suminf.    2.51900 (10) obj. -95.4012 iterations 28
Cbc0038I Pass  38: suminf.    1.89539 (7) obj. -95.4012 iterations 12
Cbc0038I Pass  39: suminf.    1.84296 (7) obj. -95.4012 iterations 3
Cbc0038I Pass  40: suminf.    2.37359 (9) obj. -95.4012 iterations 19
Cbc0038I Pass  41: suminf.    2.09382 (8) obj. -95.4012 iterations 5
Cbc0038I Pass  42: suminf.    2.09382 (8) obj. -95.4012 iterations 2
Cbc0038I Pass  43: suminf.    3.19913 (8) obj. -95.4012 iterations 17
Cbc0038I Pass  44: suminf.    2.11641 (9) obj. -95.4012 iterations 10
Cbc0038I Pass  45: suminf.    2.09788 (10) obj. -95.4012 iterations 4
Cbc0038I Pass  46: suminf.    3.65893 (10) obj. -95.4012 iterations 24
Cbc0038I Pass  47: suminf.    3.04050 (9) obj. -95.4012 iterations 1
Cbc0038I Pass  48: suminf.    2.92007 (9) obj. -95.4012 iterations 9
Cbc0038I Pass  49: suminf.    2.90951 (9) obj. -95.4012 iterations 7
Cbc0038I Pass  50: suminf.    2.86644 (9) obj. -95.4012 iterations 16
Cbc0038I Pass  51: suminf.    2.11641 (9) obj. -95.4012 iterations 18
Cbc0038I Pass  52: suminf.    2.09788 (10) obj. -95.4012 iterations 7
Cbc0038I Pass  53: suminf.    3.65893 (10) obj. -95.4012 iterations 24
Cbc0038I Pass  54: suminf.    3.04050 (9) obj. -95.4012 iterations 1
Cbc0038I Pass  55: suminf.    2.92007 (9) obj. -95.4012 iterations 9
Cbc0038I Pass  56: suminf.    2.90951 (9) obj. -95.4012 iterations 7
Cbc0038I Pass  57: suminf.    2.86644 (9) obj. -95.4012 iterations 16
Cbc0038I Pass  58: suminf.    2.11641 (9) obj. -95.4012 iterations 18
Cbc0038I Pass  59: suminf.    2.09788 (10) obj. -95.4012 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 223 rows 123 columns
Cbc0038I Mini branch and bound improved solution from -77.8384 to -83.9253 (0.57 seconds)
Cbc0038I Round again with cutoff of -116.476
Cbc0038I Pass  59: suminf.    5.60424 (58) obj. -116.476 iterations 0
Cbc0038I Pass  60: suminf.    5.84852 (15) obj. -116.476 iterations 81
Cbc0038I Pass  61: suminf.    4.31656 (15) obj. -116.476 iterations 21
Cbc0038I Pass  62: suminf.    4.01356 (14) obj. -116.476 iterations 7
Cbc0038I Pass  63: suminf.    4.01356 (14) obj. -116.476 iterations 0
Cbc0038I Pass  64: suminf.    5.33518 (15) obj. -116.476 iterations 41
Cbc0038I Pass  65: suminf.    4.59024 (16) obj. -116.476 iterations 9
Cbc0038I Pass  66: suminf.    5.63752 (22) obj. -116.476 iterations 39
Cbc0038I Pass  67: suminf.    4.84939 (14) obj. -116.476 iterations 13
Cbc0038I Pass  68: suminf.    4.75895 (15) obj. -116.476 iterations 6
Cbc0038I Pass  69: suminf.    6.11020 (17) obj. -116.476 iterations 46
Cbc0038I Pass  70: suminf.    5.21176 (14) obj. -116.476 iterations 15
Cbc0038I Pass  71: suminf.    4.95280 (14) obj. -116.476 iterations 6
Cbc0038I Pass  72: suminf.    5.04548 (17) obj. -116.476 iterations 28
Cbc0038I Pass  73: suminf.    4.45842 (15) obj. -116.476 iterations 9
Cbc0038I Pass  74: suminf.    4.45055 (14) obj. -116.476 iterations 6
Cbc0038I Pass  75: suminf.    5.26269 (18) obj. -116.476 iterations 47
Cbc0038I Pass  76: suminf.    4.78735 (22) obj. -116.476 iterations 20
Cbc0038I Pass  77: suminf.    5.77463 (19) obj. -116.476 iterations 36
Cbc0038I Pass  78: suminf.    4.88900 (18) obj. -116.476 iterations 18
Cbc0038I Pass  79: suminf.    4.82026 (16) obj. -116.476 iterations 7
Cbc0038I Pass  80: suminf.    4.98583 (17) obj. -116.476 iterations 41
Cbc0038I Pass  81: suminf.    4.17143 (14) obj. -116.476 iterations 13
Cbc0038I Pass  82: suminf.    4.71956 (15) obj. -116.476 iterations 30
Cbc0038I Pass  83: suminf.    4.52899 (15) obj. -116.476 iterations 7
Cbc0038I Pass  84: suminf.    5.75210 (16) obj. -116.476 iterations 23
Cbc0038I Pass  85: suminf.    5.64048 (17) obj. -116.476 iterations 5
Cbc0038I Pass  86: suminf.    5.62153 (16) obj. -116.476 iterations 3
Cbc0038I Pass  87: suminf.    6.13184 (15) obj. -116.476 iterations 21
Cbc0038I Pass  88: suminf.    5.38708 (16) obj. -116.476 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 493 rows 261 columns, reduced to 223 rows 123 columns
Cbc0038I Mini branch and bound did not improve solution (0.88 seconds)
Cbc0038I After 0.88 seconds - Feasibility pump exiting with objective of -83.9253 - took 0.81 seconds
Cbc0012I Integer solution of -83.92534 found by feasibility pump after 0 iterations and 0 nodes (0.88 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 167 rows 94 columns
Cbc0012I Integer solution of -83.98731 found by RINS after 0 iterations and 0 nodes (1.07 seconds)
Cbc0031I 42 added rows had average density of 171.2381
Cbc0013I At root node, 42 cuts changed objective from -165.6517 to -153.78614 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44733 row cuts average 3.3 elements, 1 column cuts (1 active)  in 1.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3844 row cuts average 256.4 elements, 0 column cuts (0 active)  in 1.125 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.364 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 256 row cuts average 251.6 elements, 0 column cuts (0 active)  in 0.506 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -83.98731 best solution, best possible -153.78614 (11.99 seconds)
Cbc0010I After 3 nodes, 4 on tree, -83.98731 best solution, best possible -153.78614 (12.70 seconds)
Cbc0010I After 7 nodes, 8 on tree, -83.98731 best solution, best possible -153.78614 (13.44 seconds)
Cbc0010I After 29 nodes, 13 on tree, -83.98731 best solution, best possible -153.78614 (14.17 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 26 rows 23 columns
Cbc0012I Integer solution of -86.47684 found by RINS after 20442 iterations and 41 nodes (14.48 seconds)
Cbc0010I After 54 nodes, 13 on tree, -86.47684 best solution, best possible -153.78614 (14.87 seconds)
Cbc0010I After 84 nodes, 13 on tree, -86.47684 best solution, best possible -153.78614 (15.57 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 179 rows 100 columns
Cbc0012I Integer solution of -87.45847 found by RINS after 23530 iterations and 91 nodes (16.00 seconds)
Cbc0010I After 103 nodes, 24 on tree, -87.45847 best solution, best possible -153.78614 (16.28 seconds)
Cbc0012I Integer solution of -88.62487 found by rounding after 24982 iterations and 116 nodes (16.51 seconds)
Cbc0010I After 152 nodes, 20 on tree, -88.62487 best solution, best possible -153.78614 (16.99 seconds)
Cbc0038I Full problem 493 rows 261 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -90.19988 found by RINS after 29182 iterations and 200 nodes (17.67 seconds)
Cbc0010I After 201 nodes, 19 on tree, -90.19988 best solution, best possible -153.78614 (17.70 seconds)
Cbc0010I After 288 nodes, 4 on tree, -90.19988 best solution, best possible -153.78614 (18.42 seconds)
Cbc0001I Search completed - best objective -90.19988000000001, took 33248 iterations and 294 nodes (18.62 seconds)
Cbc0032I Strong branching done 3060 times (66532 iterations), fathomed 33 nodes and fixed 171 variables
Cbc0035I Maximum depth 75, 2103 variables fixed on reduced cost
Total time (CPU seconds):       17.79   (Wallclock seconds):       18.76

