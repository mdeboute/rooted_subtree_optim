Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 73 (-5) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 2.40928e-05 - average 1.77153e-07, 16 fixed columns
Coin0506I Presolve 104 (-32) rows, 57 (-16) columns and 314 (-96) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Coin0511I After Postsolve, objective 58.033866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22788992 - largest nonzero change 0 ( 0%) - largest zero change 2.6927956e-05
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Coin0511I After Postsolve, objective 58.033866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.03386559 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 73 columns (72 integer (72 of which binary)) and 462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.31465
Cbc0038I Solution found of 2.01887
Cbc0038I Relaxing continuous gives -4.50633
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 78 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.50633 to -27.4971 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.4876
Cbc0038I Pass   1: suminf.    2.07255 (16) obj. -30.4876 iterations 43
Cbc0038I Pass   2: suminf.    1.29079 (8) obj. -30.4876 iterations 22
Cbc0038I Pass   3: suminf.    0.99534 (3) obj. -30.4876 iterations 19
Cbc0038I Pass   4: suminf.    0.72769 (2) obj. -30.4876 iterations 3
Cbc0038I Pass   5: suminf.    0.82203 (2) obj. -30.4876 iterations 2
Cbc0038I Pass   6: suminf.    2.19000 (6) obj. -30.4876 iterations 15
Cbc0038I Pass   7: suminf.    0.60837 (2) obj. -30.4876 iterations 17
Cbc0038I Pass   8: suminf.    1.11320 (3) obj. -30.4876 iterations 3
Cbc0038I Pass   9: suminf.    0.60539 (2) obj. -30.4876 iterations 2
Cbc0038I Pass  10: suminf.    0.60837 (2) obj. -30.4876 iterations 1
Cbc0038I Pass  11: suminf.    1.07533 (4) obj. -30.4876 iterations 11
Cbc0038I Pass  12: suminf.    0.88537 (3) obj. -30.4876 iterations 5
Cbc0038I Pass  13: suminf.    0.49973 (2) obj. -30.4876 iterations 9
Cbc0038I Pass  14: suminf.    0.49973 (2) obj. -30.4876 iterations 0
Cbc0038I Pass  15: suminf.    0.67694 (2) obj. -30.4876 iterations 2
Cbc0038I Pass  16: suminf.    3.47566 (11) obj. -30.4876 iterations 17
Cbc0038I Pass  17: suminf.    2.48973 (7) obj. -30.4876 iterations 12
Cbc0038I Pass  18: suminf.    2.14290 (5) obj. -30.4876 iterations 6
Cbc0038I Pass  19: suminf.    1.15085 (3) obj. -30.4876 iterations 4
Cbc0038I Pass  20: suminf.    0.60539 (2) obj. -30.4876 iterations 3
Cbc0038I Pass  21: suminf.    0.60837 (2) obj. -30.4876 iterations 1
Cbc0038I Pass  22: suminf.    0.60837 (2) obj. -30.4876 iterations 0
Cbc0038I Pass  23: suminf.    1.11320 (3) obj. -30.4876 iterations 3
Cbc0038I Pass  24: suminf.    2.79153 (10) obj. -30.4876 iterations 14
Cbc0038I Pass  25: suminf.    1.50467 (5) obj. -30.4876 iterations 12
Cbc0038I Pass  26: suminf.    1.77609 (6) obj. -30.4876 iterations 14
Cbc0038I Pass  27: suminf.    1.45503 (4) obj. -30.4876 iterations 3
Cbc0038I Pass  28: suminf.    1.02822 (4) obj. -30.4876 iterations 6
Cbc0038I Pass  29: suminf.    1.02822 (4) obj. -30.4876 iterations 1
Cbc0038I Pass  30: suminf.    0.60837 (2) obj. -30.4876 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 92 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -27.4971 to -28.437 (0.07 seconds)
Cbc0038I Round again with cutoff of -35.8704
Cbc0038I Pass  30: suminf.    2.29476 (16) obj. -35.8704 iterations 0
Cbc0038I Pass  31: suminf.    1.71233 (11) obj. -35.8704 iterations 12
Cbc0038I Pass  32: suminf.    1.53483 (5) obj. -35.8704 iterations 21
Cbc0038I Pass  33: suminf.    1.14061 (4) obj. -35.8704 iterations 6
Cbc0038I Pass  34: suminf.    1.63753 (4) obj. -35.8704 iterations 4
Cbc0038I Pass  35: suminf.    0.85479 (3) obj. -35.8704 iterations 5
Cbc0038I Pass  36: suminf.    0.77385 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  37: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  38: suminf.    1.94328 (7) obj. -35.8704 iterations 15
Cbc0038I Pass  39: suminf.    1.06522 (4) obj. -35.8704 iterations 14
Cbc0038I Pass  40: suminf.    0.88991 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  41: suminf.    1.11976 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  42: suminf.    0.77385 (3) obj. -35.8704 iterations 11
Cbc0038I Pass  43: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  44: suminf.    2.28720 (9) obj. -35.8704 iterations 9
Cbc0038I Pass  45: suminf.    0.85479 (3) obj. -35.8704 iterations 12
Cbc0038I Pass  46: suminf.    2.72236 (8) obj. -35.8704 iterations 16
Cbc0038I Pass  47: suminf.    1.27729 (4) obj. -35.8704 iterations 15
Cbc0038I Pass  48: suminf.    1.08982 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  49: suminf.    1.07071 (4) obj. -35.8704 iterations 2
Cbc0038I Pass  50: suminf.    0.84801 (5) obj. -35.8704 iterations 4
Cbc0038I Pass  51: suminf.    1.83815 (6) obj. -35.8704 iterations 9
Cbc0038I Pass  52: suminf.    1.63343 (6) obj. -35.8704 iterations 6
Cbc0038I Pass  53: suminf.    1.58038 (5) obj. -35.8704 iterations 9
Cbc0038I Pass  54: suminf.    0.85479 (3) obj. -35.8704 iterations 5
Cbc0038I Pass  55: suminf.    0.77385 (3) obj. -35.8704 iterations 2
Cbc0038I Pass  56: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  57: suminf.    1.91973 (8) obj. -35.8704 iterations 12
Cbc0038I Pass  58: suminf.    0.80044 (3) obj. -35.8704 iterations 10
Cbc0038I Pass  59: suminf.    0.78133 (2) obj. -35.8704 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 94 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -28.437 - took 0.09 seconds
Cbc0012I Integer solution of -28.43702 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 80 rows 41 columns
Cbc0031I 21 added rows had average density of 44.428571
Cbc0013I At root node, 21 cuts changed objective from -57.401468 to -48.916518 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8137 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2084 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.43702 best solution, best possible -48.916518 (0.70 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 7 rows 6 columns
Cbc0001I Search completed - best objective -28.43702, took 7789 iterations and 52 nodes (0.88 seconds)
Cbc0032I Strong branching done 614 times (11938 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 17, 175 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       0.89

