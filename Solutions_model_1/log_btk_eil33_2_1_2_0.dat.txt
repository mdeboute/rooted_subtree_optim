Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 1.09654e-05 - average 1.85854e-07, 4 fixed columns
Coin0506I Presolve 50 (-9) rows, 29 (-4) columns and 150 (-26) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Coin0511I After Postsolve, objective 73.365568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Coin0511I After Postsolve, objective 73.365568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.36556756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.43681
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.57827 iterations 23
Cbc0038I Solution found of -1.57827
Cbc0038I Relaxing continuous gives -1.57827
Cbc0038I Rounding solution of -29.4903 is better than previous of -1.57827

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -29.4903 to -30.679 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.4235
Cbc0038I Pass   2: suminf.    1.38256 (6) obj. -34.4235 iterations 5
Cbc0038I Pass   3: suminf.    1.17243 (5) obj. -34.4235 iterations 1
Cbc0038I Pass   4: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass   5: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass   6: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass   7: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass   8: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass   9: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  10: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  11: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  12: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  13: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  14: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  15: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  16: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  17: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  18: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  19: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  20: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  21: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  22: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  23: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  24: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  25: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  26: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  27: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  28: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  29: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  30: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  31: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30.679 - took 0.02 seconds
Cbc0012I Integer solution of -30.678975 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 27.833333
Cbc0013I At root node, 12 cuts changed objective from -68.122996 to -50.145941 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2849 row cuts average 3.7 elements, 2 column cuts (2 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 800 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30.67897499999999, took 3342 iterations and 8 nodes (0.27 seconds)
Cbc0032I Strong branching done 140 times (2063 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.27

