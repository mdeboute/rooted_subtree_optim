Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 54 (-11) rows, 28 (-5) columns and 144 (-26) elements
Clp0000I Optimal - objective value 1207750.8
Coin0511I After Postsolve, objective 1207750.8, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1207750.8 - 19 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 28 columns (27 integer (27 of which binary)) and 151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.947%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.7541
Cbc0038I Pass   1: suminf.    0.25000 (1) obj. -714949 iterations 18
Cbc0038I Pass   2: suminf.    0.25000 (1) obj. -714949 iterations 0
Cbc0038I Solution found of -280587
Cbc0038I Relaxing continuous gives -280587
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 28 columns, reduced to 14 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -280587 to -862212 (0.01 seconds)
Cbc0038I Round again with cutoff of -896750
Cbc0038I Pass   3: suminf.    1.42092 (3) obj. -896750 iterations 4
Cbc0038I Pass   4: suminf.    0.16330 (2) obj. -896750 iterations 9
Cbc0038I Pass   5: suminf.    0.16330 (2) obj. -896750 iterations 0
Cbc0038I Pass   6: suminf.    0.68664 (4) obj. -896750 iterations 5
Cbc0038I Pass   7: suminf.    0.16330 (2) obj. -896750 iterations 11
Cbc0038I Pass   8: suminf.    0.57692 (3) obj. -906695 iterations 6
Cbc0038I Pass   9: suminf.    0.51136 (3) obj. -900068 iterations 4
Cbc0038I Pass  10: suminf.    2.95044 (7) obj. -896750 iterations 8
Cbc0038I Pass  11: suminf.    2.23306 (6) obj. -896750 iterations 3
Cbc0038I Pass  12: suminf.    1.34705 (3) obj. -896750 iterations 7
Cbc0038I Pass  13: suminf.    0.10909 (3) obj. -1.13574e+06 iterations 3
Cbc0038I Pass  14: suminf.    0.76364 (3) obj. -1.00318e+06 iterations 2
Cbc0038I Pass  15: suminf.    0.76364 (3) obj. -1.00318e+06 iterations 0
Cbc0038I Pass  16: suminf.    1.31494 (3) obj. -896750 iterations 1
Cbc0038I Pass  17: suminf.    2.79956 (7) obj. -896750 iterations 5
Cbc0038I Pass  18: suminf.    1.31494 (3) obj. -896750 iterations 5
Cbc0038I Pass  19: suminf.    1.42432 (4) obj. -896750 iterations 4
Cbc0038I Pass  20: suminf.    0.10909 (3) obj. -1.13574e+06 iterations 5
Cbc0038I Pass  21: suminf.    0.10909 (3) obj. -1.13574e+06 iterations 0
Cbc0038I Pass  22: suminf.    1.34705 (3) obj. -896750 iterations 1
Cbc0038I Pass  23: suminf.    0.10829 (1) obj. -896750 iterations 8
Cbc0038I Pass  24: suminf.    0.10829 (1) obj. -896750 iterations 1
Cbc0038I Pass  25: suminf.    0.38182 (3) obj. -1.07616e+06 iterations 3
Cbc0038I Pass  26: suminf.    1.31118 (3) obj. -896750 iterations 1
Cbc0038I Pass  27: suminf.    2.01199 (5) obj. -896750 iterations 6
Cbc0038I Pass  28: suminf.    0.76364 (3) obj. -1.00318e+06 iterations 6
Cbc0038I Pass  29: suminf.    1.31494 (3) obj. -896750 iterations 1
Cbc0038I Pass  30: suminf.    0.24147 (5) obj. -896750 iterations 7
Cbc0038I Pass  31: suminf.    0.22405 (4) obj. -896750 iterations 3
Cbc0038I Pass  32: suminf.    0.19608 (2) obj. -1.18765e+06 iterations 9
Cbc0038I Rounding solution of -1.1591e+06 is better than previous of -862212

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 28 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1.1688e+06
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.00528 (10) obj. -1.1688e+06 iterations 4
Cbc0038I Pass  33: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 8
Cbc0038I Pass  34: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 2
Cbc0038I Pass  35: suminf.    2.00528 (10) obj. -1.1688e+06 iterations 9
Cbc0038I Pass  36: suminf.    2.81541 (7) obj. -1.1688e+06 iterations 8
Cbc0038I Pass  37: suminf.    3.07414 (7) obj. -1.1688e+06 iterations 3
Cbc0038I Pass  38: suminf.    2.81541 (7) obj. -1.1688e+06 iterations 2
Cbc0038I Pass  39: suminf.    3.23095 (7) obj. -1.1688e+06 iterations 3
Cbc0038I Pass  40: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  41: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  42: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  43: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  44: suminf.    0.26870 (7) obj. -1.1688e+06 iterations 3
Cbc0038I Pass  45: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 3
Cbc0038I Pass  46: suminf.    0.26870 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  47: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 2
Cbc0038I Pass  48: suminf.    2.00528 (10) obj. -1.1688e+06 iterations 8
Cbc0038I Pass  49: suminf.    2.00528 (10) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  50: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 8
Cbc0038I Pass  51: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 2
Cbc0038I Pass  52: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  53: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  54: suminf.    2.00528 (10) obj. -1.1688e+06 iterations 9
Cbc0038I Pass  55: suminf.    2.00528 (10) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  56: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 8
Cbc0038I Pass  57: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 2
Cbc0038I Pass  58: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  59: suminf.    0.26870 (7) obj. -1.1688e+06 iterations 2
Cbc0038I Pass  60: suminf.    0.11923 (7) obj. -1.1688e+06 iterations 1
Cbc0038I Pass  61: suminf.    0.66183 (7) obj. -1.1688e+06 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 28 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1.1591e+06 - took 0.02 seconds
Cbc0012I Integer solution of -1159099 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 54 rows 28 columns, reduced to 14 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -1207585.8 to -1207585.8 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1159099, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

