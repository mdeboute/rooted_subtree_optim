Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-8) rows, 33 (-2) columns and 180 (-15) elements
Clp1000I sum of infeasibilities 1.50901e-05 - average 2.47379e-07, 5 fixed columns
Coin0506I Presolve 38 (-23) rows, 26 (-7) columns and 121 (-59) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Coin0511I After Postsolve, objective 95.371008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Coin0511I After Postsolve, objective 95.371008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.37100818 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 33 columns (32 integer (32 of which binary)) and 187 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.42165
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.1926 iterations 24
Cbc0038I Solution found of -20.1926
Cbc0038I Relaxing continuous gives -20.1926
Cbc0038I Rounding solution of -25.3262 is better than previous of -20.1926

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -25.3262 to -41.1021 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.3274
Cbc0038I Pass   2: suminf.    0.83042 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   3: suminf.    0.56860 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   4: suminf.    0.56860 (2) obj. -46.3274 iterations 1
Cbc0038I Pass   5: suminf.    0.46064 (3) obj. -46.3274 iterations 7
Cbc0038I Pass   6: suminf.    0.32539 (3) obj. -46.3274 iterations 3
Cbc0038I Pass   7: suminf.    0.48667 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   8: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass   9: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  10: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  11: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  12: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  13: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  14: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  15: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  16: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  17: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  18: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  19: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  20: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  21: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  22: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  23: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  24: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  25: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  26: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  27: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  28: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  29: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  30: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  31: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Rounding solution of -42.1587 is better than previous of -41.1021

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -55.7326
Cbc0038I Pass  31: suminf.    1.29493 (6) obj. -55.7326 iterations 4
Cbc0038I Pass  32: suminf.    1.23569 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  33: suminf.    1.27526 (3) obj. -55.7326 iterations 4
Cbc0038I Pass  34: suminf.    0.97835 (4) obj. -55.7326 iterations 8
Cbc0038I Pass  35: suminf.    0.98646 (3) obj. -55.7326 iterations 8
Cbc0038I Pass  36: suminf.    0.54928 (3) obj. -55.7326 iterations 2
Cbc0038I Pass  37: suminf.    0.52913 (6) obj. -55.7326 iterations 3
Cbc0038I Pass  38: suminf.    1.69610 (5) obj. -55.7326 iterations 4
Cbc0038I Pass  39: suminf.    0.98541 (3) obj. -55.7326 iterations 9
Cbc0038I Pass  40: suminf.    2.17745 (7) obj. -55.7326 iterations 11
Cbc0038I Pass  41: suminf.    1.00256 (4) obj. -55.7326 iterations 3
Cbc0038I Pass  42: suminf.    0.71002 (3) obj. -55.7326 iterations 5
Cbc0038I Pass  43: suminf.    0.51822 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  44: suminf.    0.83301 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  45: suminf.    0.51961 (2) obj. -55.7326 iterations 1
Cbc0038I Pass  46: suminf.    0.57073 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  47: suminf.    0.49553 (2) obj. -55.7326 iterations 1
Cbc0038I Pass  48: suminf.    0.57986 (2) obj. -55.7326 iterations 3
Cbc0038I Pass  49: suminf.    0.77646 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  50: suminf.    1.29301 (6) obj. -55.7326 iterations 6
Cbc0038I Pass  51: suminf.    1.25656 (3) obj. -55.7326 iterations 4
Cbc0038I Pass  52: suminf.    0.93296 (3) obj. -55.7326 iterations 3
Cbc0038I Pass  53: suminf.    0.93296 (3) obj. -55.7326 iterations 2
Cbc0038I Pass  54: suminf.    1.04580 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  55: suminf.    1.04580 (3) obj. -55.7326 iterations 0
Cbc0038I Pass  56: suminf.    3.23698 (8) obj. -55.7326 iterations 15
Cbc0038I Pass  57: suminf.    0.72262 (3) obj. -55.7326 iterations 7
Cbc0038I Pass  58: suminf.    0.85485 (2) obj. -55.7326 iterations 4
Cbc0038I Pass  59: suminf.    0.65221 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  60: suminf.    0.63432 (2) obj. -55.7326 iterations 1
Cbc0038I Rounding solution of -57.5367 is better than previous of -42.1587

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -68.2818
Cbc0038I Pass  60: suminf.    1.95203 (8) obj. -68.2818 iterations 2
Cbc0038I Pass  61: suminf.    2.16670 (6) obj. -68.2818 iterations 12
Cbc0038I Pass  62: suminf.    2.14546 (7) obj. -68.2818 iterations 7
Cbc0038I Pass  63: suminf.    2.10783 (6) obj. -68.2818 iterations 9
Cbc0038I Pass  64: suminf.    1.78269 (5) obj. -68.2818 iterations 7
Cbc0038I Pass  65: suminf.    1.70868 (5) obj. -68.2818 iterations 3
Cbc0038I Pass  66: suminf.    2.19773 (7) obj. -68.2818 iterations 7
Cbc0038I Pass  67: suminf.    1.67106 (4) obj. -68.2818 iterations 2
Cbc0038I Pass  68: suminf.    1.62528 (4) obj. -68.2818 iterations 4
Cbc0038I Pass  69: suminf.    3.01962 (13) obj. -68.2818 iterations 16
Cbc0038I Pass  70: suminf.    2.34699 (11) obj. -68.2818 iterations 5
Cbc0038I Pass  71: suminf.    2.34699 (11) obj. -68.2818 iterations 0
Cbc0038I Pass  72: suminf.    1.97512 (7) obj. -68.2818 iterations 11
Cbc0038I Pass  73: suminf.    1.86376 (6) obj. -68.2818 iterations 2
Cbc0038I Pass  74: suminf.    1.61635 (4) obj. -68.2818 iterations 10
Cbc0038I Pass  75: suminf.    1.59790 (4) obj. -68.2818 iterations 3
Cbc0038I Pass  76: suminf.    2.16646 (7) obj. -68.2818 iterations 5
Cbc0038I Pass  77: suminf.    1.66954 (4) obj. -68.2818 iterations 2
Cbc0038I Pass  78: suminf.    2.60496 (12) obj. -68.2818 iterations 15
Cbc0038I Pass  79: suminf.    1.96993 (9) obj. -68.2818 iterations 5
Cbc0038I Pass  80: suminf.    1.91953 (9) obj. -68.2818 iterations 1
Cbc0038I Pass  81: suminf.    2.16526 (5) obj. -68.2818 iterations 9
Cbc0038I Pass  82: suminf.    1.84255 (5) obj. -68.2818 iterations 2
Cbc0038I Pass  83: suminf.    1.70931 (5) obj. -68.2818 iterations 2
Cbc0038I Pass  84: suminf.    1.21601 (3) obj. -68.2818 iterations 3
Cbc0038I Pass  85: suminf.    1.18953 (4) obj. -68.2818 iterations 3
Cbc0038I Pass  86: suminf.    1.18953 (4) obj. -68.2818 iterations 1
Cbc0038I Pass  87: suminf.    1.85634 (6) obj. -68.2818 iterations 4
Cbc0038I Pass  88: suminf.    2.25100 (7) obj. -68.2818 iterations 6
Cbc0038I Pass  89: suminf.    2.25100 (7) obj. -68.2818 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 40 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -57.5367 - took 0.08 seconds
Cbc0012I Integer solution of -57.536713 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 60 rows 33 columns, reduced to 36 rows 23 columns
Cbc0031I 14 added rows had average density of 20.928571
Cbc0013I At root node, 14 cuts changed objective from -93.353481 to -70.523938 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3071 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 871 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -57.53671300000001, took 2722 iterations and 8 nodes (0.35 seconds)
Cbc0032I Strong branching done 130 times (1840 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.35

