Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 2.48453e-05 - average 4.35883e-07, 4 fixed columns
Coin0506I Presolve 49 (-8) rows, 29 (-4) columns and 148 (-24) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 3.2479454 - largest nonzero change 2.5072329e-05 ( 0.0018070543%) - largest zero change 0
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Coin0511I After Postsolve, objective 85.770903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Coin0511I After Postsolve, objective 85.770903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.77090262 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.03572
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.052 iterations 27
Cbc0038I Solution found of -10.052
Cbc0038I Relaxing continuous gives -10.052
Cbc0038I Rounding solution of -24.4939 is better than previous of -10.052

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -24.4939 to -33.6475 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.8599
Cbc0038I Pass   2: suminf.    1.56557 (9) obj. -38.8599 iterations 11
Cbc0038I Pass   3: suminf.    1.39598 (5) obj. -38.8599 iterations 9
Cbc0038I Pass   4: suminf.    0.82620 (5) obj. -38.8599 iterations 3
Cbc0038I Pass   5: suminf.    0.64337 (4) obj. -38.8599 iterations 6
Cbc0038I Pass   6: suminf.    1.63505 (5) obj. -38.8599 iterations 8
Cbc0038I Pass   7: suminf.    1.37909 (6) obj. -38.8599 iterations 1
Cbc0038I Pass   8: suminf.    0.84970 (5) obj. -38.8599 iterations 3
Cbc0038I Pass   9: suminf.    1.17913 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  10: suminf.    1.64148 (5) obj. -38.8599 iterations 11
Cbc0038I Pass  11: suminf.    0.88334 (3) obj. -38.8599 iterations 4
Cbc0038I Pass  12: suminf.    1.09968 (3) obj. -38.8599 iterations 3
Cbc0038I Pass  13: suminf.    1.06431 (4) obj. -38.8599 iterations 1
Cbc0038I Pass  14: suminf.    1.01180 (5) obj. -38.8599 iterations 6
Cbc0038I Pass  15: suminf.    0.91258 (3) obj. -38.8599 iterations 3
Cbc0038I Pass  16: suminf.    1.33515 (5) obj. -38.8599 iterations 3
Cbc0038I Pass  17: suminf.    1.21846 (6) obj. -38.8599 iterations 1
Cbc0038I Pass  18: suminf.    0.84970 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  19: suminf.    1.17913 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  20: suminf.    1.56270 (5) obj. -38.8599 iterations 7
Cbc0038I Pass  21: suminf.    1.24165 (4) obj. -38.8599 iterations 6
Cbc0038I Pass  22: suminf.    1.06098 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  23: suminf.    1.24774 (3) obj. -38.8599 iterations 6
Cbc0038I Pass  24: suminf.    1.23350 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  25: suminf.    1.21915 (6) obj. -38.8599 iterations 3
Cbc0038I Pass  26: suminf.    0.84970 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  27: suminf.    1.17913 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  28: suminf.    1.86157 (7) obj. -38.8599 iterations 11
Cbc0038I Pass  29: suminf.    1.37487 (6) obj. -38.8599 iterations 6
Cbc0038I Pass  30: suminf.    2.07520 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  31: suminf.    1.47417 (6) obj. -38.8599 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -33.6475 - took 0.05 seconds
Cbc0012I Integer solution of -33.64749 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 21 columns
Cbc0031I 15 added rows had average density of 23.6
Cbc0013I At root node, 15 cuts changed objective from -85.770903 to -58.523443 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2590 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 857 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.64749, took 3774 iterations and 14 nodes (0.49 seconds)
Cbc0032I Strong branching done 226 times (2806 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 5, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.49

