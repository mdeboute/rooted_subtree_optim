Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 2.10773e-05 - average 1.53849e-07, 8 fixed columns
Coin0506I Presolve 121 (-16) rows, 68 (-8) columns and 370 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 0.28536968 - largest nonzero change 0 ( 0%) - largest zero change 2.7184261e-05
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Coin0511I After Postsolve, objective 34.845576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Clp0000I Optimal - objective value 34.845576
Coin0511I After Postsolve, objective 34.845576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.84557603 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.27213
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.53764 iterations 58
Cbc0038I Solution found of 8.53764
Cbc0038I Relaxing continuous gives 8.53764
Cbc0038I Rounding solution of 3.70482 is better than previous of 8.53764

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 3.70482 to -3.99791 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.08277
Cbc0038I Pass   2: suminf.    0.97898 (21) obj. -7.08277 iterations 31
Cbc0038I Pass   3: suminf.    0.89630 (39) obj. -7.08277 iterations 20
Cbc0038I Pass   4: suminf.    1.38776 (5) obj. -7.08277 iterations 45
Cbc0038I Pass   5: suminf.    1.38776 (5) obj. -7.08277 iterations 0
Cbc0038I Pass   6: suminf.    1.59314 (5) obj. -7.08277 iterations 15
Cbc0038I Pass   7: suminf.    1.26121 (4) obj. -7.08277 iterations 3
Cbc0038I Pass   8: suminf.    1.16015 (5) obj. -7.08277 iterations 1
Cbc0038I Pass   9: suminf.    1.31990 (6) obj. -7.08277 iterations 10
Cbc0038I Pass  10: suminf.    1.30818 (5) obj. -7.08277 iterations 4
Cbc0038I Pass  11: suminf.    1.38917 (4) obj. -7.08277 iterations 10
Cbc0038I Pass  12: suminf.    2.29986 (8) obj. -7.08277 iterations 20
Cbc0038I Pass  13: suminf.    1.82778 (6) obj. -7.08277 iterations 6
Cbc0038I Pass  14: suminf.    2.14849 (6) obj. -7.08277 iterations 14
Cbc0038I Pass  15: suminf.    2.12215 (7) obj. -7.08277 iterations 2
Cbc0038I Pass  16: suminf.    2.12215 (7) obj. -7.08277 iterations 0
Cbc0038I Pass  17: suminf.    1.69480 (4) obj. -7.08277 iterations 6
Cbc0038I Pass  18: suminf.    1.45386 (6) obj. -7.08277 iterations 2
Cbc0038I Pass  19: suminf.    1.31990 (6) obj. -7.08277 iterations 7
Cbc0038I Pass  20: suminf.    1.30818 (5) obj. -7.08277 iterations 3
Cbc0038I Pass  21: suminf.    1.38917 (4) obj. -7.08277 iterations 10
Cbc0038I Pass  22: suminf.    1.16015 (5) obj. -7.08277 iterations 5
Cbc0038I Pass  23: suminf.    1.31990 (6) obj. -7.08277 iterations 10
Cbc0038I Pass  24: suminf.    1.75152 (9) obj. -7.08277 iterations 18
Cbc0038I Pass  25: suminf.    1.56978 (8) obj. -7.08277 iterations 8
Cbc0038I Pass  26: suminf.    1.61461 (6) obj. -7.08277 iterations 11
Cbc0038I Pass  27: suminf.    1.61461 (6) obj. -7.08277 iterations 0
Cbc0038I Pass  28: suminf.    1.64988 (6) obj. -7.08277 iterations 4
Cbc0038I Pass  29: suminf.    1.41978 (6) obj. -7.08277 iterations 2
Cbc0038I Pass  30: suminf.    2.63877 (10) obj. -7.08277 iterations 26
Cbc0038I Pass  31: suminf.    1.27444 (5) obj. -7.08277 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -3.99791 to -4.03776 (0.11 seconds)
Cbc0038I Round again with cutoff of -12.6353
Cbc0038I Pass  31: suminf.    2.74108 (21) obj. -12.6353 iterations 0
Cbc0038I Pass  32: suminf.    2.50960 (39) obj. -12.6353 iterations 20
Cbc0038I Pass  33: suminf.    1.72411 (8) obj. -12.6353 iterations 42
Cbc0038I Pass  34: suminf.    1.72411 (8) obj. -12.6353 iterations 0
Cbc0038I Pass  35: suminf.    3.04212 (13) obj. -12.6353 iterations 17
Cbc0038I Pass  36: suminf.    2.87036 (13) obj. -12.6353 iterations 3
Cbc0038I Pass  37: suminf.    2.55967 (9) obj. -12.6353 iterations 15
Cbc0038I Pass  38: suminf.    2.29838 (9) obj. -12.6353 iterations 1
Cbc0038I Pass  39: suminf.    2.30062 (6) obj. -12.6353 iterations 9
Cbc0038I Pass  40: suminf.    2.30062 (6) obj. -12.6353 iterations 0
Cbc0038I Pass  41: suminf.    2.47318 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  42: suminf.    2.47318 (6) obj. -12.6353 iterations 0
Cbc0038I Pass  43: suminf.    2.30062 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  44: suminf.    2.77534 (9) obj. -12.6353 iterations 17
Cbc0038I Pass  45: suminf.    2.35538 (8) obj. -12.6353 iterations 7
Cbc0038I Pass  46: suminf.    2.28492 (9) obj. -12.6353 iterations 13
Cbc0038I Pass  47: suminf.    2.28492 (9) obj. -12.6353 iterations 0
Cbc0038I Pass  48: suminf.    1.60897 (6) obj. -12.6353 iterations 7
Cbc0038I Pass  49: suminf.    1.60897 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  50: suminf.    2.19137 (6) obj. -12.6353 iterations 6
Cbc0038I Pass  51: suminf.    1.37439 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  52: suminf.    1.35814 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  53: suminf.    2.38394 (7) obj. -12.6353 iterations 5
Cbc0038I Pass  54: suminf.    1.62635 (6) obj. -12.6353 iterations 1
Cbc0038I Pass  55: suminf.    1.60897 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  56: suminf.    2.19137 (6) obj. -12.6353 iterations 6
Cbc0038I Pass  57: suminf.    1.37439 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  58: suminf.    1.35814 (6) obj. -12.6353 iterations 2
Cbc0038I Pass  59: suminf.    2.38394 (7) obj. -12.6353 iterations 5
Cbc0038I Pass  60: suminf.    1.62635 (6) obj. -12.6353 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -4.03776 - took 0.13 seconds
Cbc0012I Integer solution of -4.03776 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 74 rows 42 columns
Cbc0031I 33 added rows had average density of 43.181818
Cbc0013I At root node, 33 cuts changed objective from -34.845576 to -27.526605 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15519 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1631 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.03776 best solution, best possible -27.526605 (1.29 seconds)
Cbc0012I Integer solution of -4.07728 found by rounding after 10136 iterations and 24 nodes (1.54 seconds)
Cbc0012I Integer solution of -4.43917 found by rounding after 10232 iterations and 33 nodes (1.55 seconds)
Cbc0012I Integer solution of -4.44112 found by rounding after 10246 iterations and 34 nodes (1.55 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 45 rows 29 columns
Cbc0012I Integer solution of -5.1336 found by RINS after 10348 iterations and 44 nodes (1.57 seconds)
Cbc0001I Search completed - best objective -5.133599999999998, took 12013 iterations and 90 nodes (1.69 seconds)
Cbc0032I Strong branching done 972 times (16843 iterations), fathomed 7 nodes and fixed 85 variables
Cbc0035I Maximum depth 20, 163 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       1.71

