Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.9551e-05 - average 1.42708e-07, 8 fixed columns
Coin0506I Presolve 121 (-16) rows, 67 (-8) columns and 368 (-48) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 36.658712
Clp0000I Optimal - objective value 36.658712
Coin0511I After Postsolve, objective 36.658712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.658712
Clp0000I Optimal - objective value 36.658712
Clp0000I Optimal - objective value 36.658712
Coin0511I After Postsolve, objective 36.658712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.65871198 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.03831
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.61927 iterations 58
Cbc0038I Solution found of 9.61927
Cbc0038I Relaxing continuous gives 9.61927
Cbc0038I Rounding solution of -9.13237 is better than previous of 9.61927

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -11.8851
Cbc0038I Pass   2: suminf.    2.17735 (17) obj. -11.8851 iterations 20
Cbc0038I Pass   3: suminf.    1.75599 (25) obj. -11.8851 iterations 16
Cbc0038I Pass   4: suminf.    2.05551 (8) obj. -11.8851 iterations 30
Cbc0038I Pass   5: suminf.    1.83630 (7) obj. -11.8851 iterations 4
Cbc0038I Pass   6: suminf.    1.95462 (6) obj. -11.8851 iterations 11
Cbc0038I Pass   7: suminf.    1.95462 (6) obj. -11.8851 iterations 0
Cbc0038I Pass   8: suminf.    0.70221 (3) obj. -11.8851 iterations 5
Cbc0038I Pass   9: suminf.    0.70221 (3) obj. -11.8851 iterations 1
Cbc0038I Pass  10: suminf.    1.30521 (3) obj. -11.8851 iterations 4
Cbc0038I Pass  11: suminf.    0.67326 (2) obj. -11.8851 iterations 5
Cbc0038I Pass  12: suminf.    0.91783 (2) obj. -11.8851 iterations 1
Cbc0038I Pass  13: suminf.    2.79501 (9) obj. -11.8851 iterations 16
Cbc0038I Pass  14: suminf.    1.65947 (5) obj. -11.8851 iterations 8
Cbc0038I Pass  15: suminf.    0.84014 (2) obj. -11.8851 iterations 6
Cbc0038I Pass  16: suminf.    1.06455 (4) obj. -11.8851 iterations 6
Cbc0038I Pass  17: suminf.    1.75609 (8) obj. -11.8851 iterations 12
Cbc0038I Pass  18: suminf.    1.26018 (7) obj. -11.8851 iterations 5
Cbc0038I Pass  19: suminf.    1.43658 (7) obj. -11.8851 iterations 14
Cbc0038I Pass  20: suminf.    1.31095 (5) obj. -11.8851 iterations 2
Cbc0038I Pass  21: suminf.    1.17871 (3) obj. -11.8851 iterations 6
Cbc0038I Pass  22: suminf.    1.15332 (4) obj. -11.8851 iterations 3
Cbc0038I Pass  23: suminf.    1.24052 (3) obj. -11.8851 iterations 5
Cbc0038I Pass  24: suminf.    1.18237 (3) obj. -11.8851 iterations 26
Cbc0038I Pass  25: suminf.    0.66931 (4) obj. -11.8851 iterations 8
Cbc0038I Pass  26: suminf.    0.83864 (2) obj. -11.8851 iterations 4
Cbc0038I Pass  27: suminf.    0.85529 (3) obj. -11.8851 iterations 3
Cbc0038I Pass  28: suminf.    0.49655 (1) obj. -11.8851 iterations 3
Cbc0038I Pass  29: suminf.    0.37790 (2) obj. -11.8851 iterations 2
Cbc0038I Pass  30: suminf.    0.75887 (3) obj. -11.8851 iterations 3
Cbc0038I Pass  31: suminf.    0.75887 (3) obj. -11.8851 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 9.61927 to -9.63483 (0.07 seconds)
Cbc0038I Round again with cutoff of -16.8398
Cbc0038I Pass  31: suminf.    3.38840 (17) obj. -16.8398 iterations 0
Cbc0038I Pass  32: suminf.    2.40960 (7) obj. -16.8398 iterations 14
Cbc0038I Pass  33: suminf.    1.90512 (8) obj. -16.8398 iterations 3
Cbc0038I Pass  34: suminf.    2.16064 (7) obj. -16.8398 iterations 9
Cbc0038I Pass  35: suminf.    1.49759 (4) obj. -16.8398 iterations 7
Cbc0038I Pass  36: suminf.    1.10648 (5) obj. -16.8398 iterations 4
Cbc0038I Pass  37: suminf.    1.74141 (10) obj. -16.8398 iterations 13
Cbc0038I Pass  38: suminf.    1.74141 (10) obj. -16.8398 iterations 0
Cbc0038I Pass  39: suminf.    2.73063 (7) obj. -16.8398 iterations 10
Cbc0038I Pass  40: suminf.    1.92896 (5) obj. -16.8398 iterations 2
Cbc0038I Pass  41: suminf.    1.88992 (8) obj. -16.8398 iterations 4
Cbc0038I Pass  42: suminf.    1.43457 (6) obj. -16.8398 iterations 6
Cbc0038I Pass  43: suminf.    1.42696 (5) obj. -16.8398 iterations 1
Cbc0038I Pass  44: suminf.    2.10623 (5) obj. -16.8398 iterations 2
Cbc0038I Pass  45: suminf.    1.57044 (4) obj. -16.8398 iterations 3
Cbc0038I Pass  46: suminf.    1.26074 (5) obj. -16.8398 iterations 4
Cbc0038I Pass  47: suminf.    1.74141 (10) obj. -16.8398 iterations 11
Cbc0038I Pass  48: suminf.    1.74141 (10) obj. -16.8398 iterations 0
Cbc0038I Pass  49: suminf.    2.73063 (7) obj. -16.8398 iterations 10
Cbc0038I Pass  50: suminf.    1.92896 (5) obj. -16.8398 iterations 2
Cbc0038I Pass  51: suminf.    1.88992 (8) obj. -16.8398 iterations 4
Cbc0038I Pass  52: suminf.    1.43457 (6) obj. -16.8398 iterations 6
Cbc0038I Pass  53: suminf.    1.42696 (5) obj. -16.8398 iterations 1
Cbc0038I Pass  54: suminf.    2.10623 (5) obj. -16.8398 iterations 2
Cbc0038I Pass  55: suminf.    1.57044 (4) obj. -16.8398 iterations 3
Cbc0038I Pass  56: suminf.    1.26074 (5) obj. -16.8398 iterations 4
Cbc0038I Pass  57: suminf.    1.74141 (10) obj. -16.8398 iterations 11
Cbc0038I Pass  58: suminf.    1.74141 (10) obj. -16.8398 iterations 0
Cbc0038I Pass  59: suminf.    2.73063 (7) obj. -16.8398 iterations 10
Cbc0038I Pass  60: suminf.    1.92896 (5) obj. -16.8398 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -9.63483 - took 0.08 seconds
Cbc0012I Integer solution of -9.634829 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 82 rows 47 columns
Cbc0031I 28 added rows had average density of 49.571429
Cbc0013I At root node, 28 cuts changed objective from -36.658712 to -30.693496 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14683 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2079 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 108 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 199 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.634829 best solution, best possible -30.693496 (1.08 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 45 rows 31 columns
Cbc0012I Integer solution of -10.233159 found by RINS after 12075 iterations and 44 nodes (1.44 seconds)
Cbc0004I Integer solution of -11.629129 found after 13193 iterations and 90 nodes (1.54 seconds)
Cbc0001I Search completed - best objective -11.629129, took 13965 iterations and 106 nodes (1.55 seconds)
Cbc0032I Strong branching done 1156 times (20694 iterations), fathomed 4 nodes and fixed 31 variables
Cbc0035I Maximum depth 31, 156 variables fixed on reduced cost
Total time (CPU seconds):       1.51   (Wallclock seconds):       1.56

