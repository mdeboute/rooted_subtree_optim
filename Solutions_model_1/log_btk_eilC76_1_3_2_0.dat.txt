Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 3.00234e-05 - average 2.24056e-07, 11 fixed columns
Coin0506I Presolve 112 (-22) rows, 64 (-12) columns and 344 (-68) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 2.5476923 - largest nonzero change 0 ( 0%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 50.426046
Clp0000I Optimal - objective value 50.426046
Coin0511I After Postsolve, objective 50.426046, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.426046
Clp0000I Optimal - objective value 50.426046
Clp0000I Optimal - objective value 50.426046
Coin0511I After Postsolve, objective 50.426046, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.42604562 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 9.80529
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.1226 iterations 46
Cbc0038I Solution found of 14.1226
Cbc0038I Relaxing continuous gives 14.1226
Cbc0038I Rounding solution of -14.0493 is better than previous of 14.1226

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 64 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -14.0493 to -20.8134 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.7748
Cbc0038I Pass   2: suminf.    4.10113 (20) obj. -23.7748 iterations 30
Cbc0038I Pass   3: suminf.    3.74535 (36) obj. -23.7748 iterations 18
Cbc0038I Pass   4: suminf.    0.79507 (4) obj. -23.7748 iterations 44
Cbc0038I Pass   5: suminf.    0.60191 (4) obj. -23.7748 iterations 3
Cbc0038I Pass   6: suminf.    0.69466 (4) obj. -23.7748 iterations 6
Cbc0038I Pass   7: suminf.    0.69466 (4) obj. -23.7748 iterations 0
Cbc0038I Pass   8: suminf.    0.78590 (3) obj. -23.7748 iterations 6
Cbc0038I Pass   9: suminf.    0.68026 (3) obj. -23.7748 iterations 5
Cbc0038I Pass  10: suminf.    0.68026 (3) obj. -23.7748 iterations 0
Cbc0038I Pass  11: suminf.    0.57914 (4) obj. -23.7748 iterations 5
Cbc0038I Pass  12: suminf.    1.65843 (5) obj. -23.7748 iterations 8
Cbc0038I Pass  13: suminf.    0.71024 (4) obj. -23.7748 iterations 4
Cbc0038I Pass  14: suminf.    1.22478 (4) obj. -23.7748 iterations 4
Cbc0038I Pass  15: suminf.    1.21073 (3) obj. -23.7748 iterations 1
Cbc0038I Pass  16: suminf.    1.01755 (3) obj. -23.7748 iterations 3
Cbc0038I Pass  17: suminf.    1.01755 (3) obj. -23.7748 iterations 0
Cbc0038I Pass  18: suminf.    1.21073 (3) obj. -23.7748 iterations 1
Cbc0038I Pass  19: suminf.    4.17009 (11) obj. -23.7748 iterations 22
Cbc0038I Pass  20: suminf.    3.41911 (12) obj. -23.7748 iterations 9
Cbc0038I Pass  21: suminf.    2.13873 (8) obj. -23.7748 iterations 14
Cbc0038I Pass  22: suminf.    1.79579 (7) obj. -23.7748 iterations 1
Cbc0038I Pass  23: suminf.    1.81889 (5) obj. -23.7748 iterations 10
Cbc0038I Pass  24: suminf.    1.31120 (5) obj. -23.7748 iterations 4
Cbc0038I Pass  25: suminf.    1.98175 (6) obj. -23.7748 iterations 3
Cbc0038I Pass  26: suminf.    1.98175 (6) obj. -23.7748 iterations 0
Cbc0038I Pass  27: suminf.    1.72601 (6) obj. -23.7748 iterations 5
Cbc0038I Pass  28: suminf.    1.71997 (6) obj. -23.7748 iterations 2
Cbc0038I Pass  29: suminf.    2.22242 (6) obj. -23.7748 iterations 3
Cbc0038I Pass  30: suminf.    1.78218 (6) obj. -23.7748 iterations 2
Cbc0038I Pass  31: suminf.    1.95516 (5) obj. -23.7748 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 83 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -20.8134 - took 0.08 seconds
Cbc0012I Integer solution of -20.813423 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 64 rows 37 columns
Cbc0031I 18 added rows had average density of 55.666667
Cbc0013I At root node, 18 cuts changed objective from -50.426046 to -42.226829 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9774 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1424 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 245 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.813423 best solution, best possible -42.226829 (0.78 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 23 rows 19 columns
Cbc0012I Integer solution of -21.34074 found by RINS after 8933 iterations and 41 nodes (1.08 seconds)
Cbc0012I Integer solution of -22.57167 found by rounding after 8968 iterations and 43 nodes (1.09 seconds)
Cbc0004I Integer solution of -23.34074 found after 9141 iterations and 53 nodes (1.12 seconds)
Cbc0001I Search completed - best objective -23.34074, took 9699 iterations and 64 nodes (1.15 seconds)
Cbc0032I Strong branching done 726 times (14522 iterations), fathomed 0 nodes and fixed 33 variables
Cbc0035I Maximum depth 26, 265 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.16

