Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 119 (-87) rows, 61 (-43) columns and 296 (-213) elements
Clp0000I Optimal - objective value 3263.7672
Coin0511I After Postsolve, objective 3263.7672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3263.767158 - 63 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 119 rows, 61 columns (60 integer (60 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.573%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 20.9456
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1483.33 iterations 65
Cbc0038I Solution found of 1483.33
Cbc0038I Relaxing continuous gives 1483.33
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound improved solution from 1483.33 to -141.666 (0.03 seconds)
Cbc0038I Round again with cutoff of -453.876
Cbc0038I Pass   2: suminf.    2.25514 (15) obj. -453.876 iterations 14
Cbc0038I Pass   3: suminf.    1.03190 (10) obj. -453.876 iterations 26
Cbc0038I Pass   4: suminf.    1.03190 (10) obj. -453.876 iterations 0
Cbc0038I Pass   5: suminf.    1.83942 (11) obj. -453.876 iterations 24
Cbc0038I Pass   6: suminf.    1.68272 (8) obj. -453.876 iterations 12
Cbc0038I Pass   7: suminf.    1.29710 (8) obj. -453.876 iterations 2
Cbc0038I Pass   8: suminf.    1.20506 (9) obj. -453.876 iterations 20
Cbc0038I Pass   9: suminf.    1.20506 (9) obj. -453.876 iterations 1
Cbc0038I Pass  10: suminf.    0.89441 (4) obj. -453.876 iterations 17
Cbc0038I Solution found of -453.876
Cbc0038I Relaxing continuous gives -658.33
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 116 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -658.33 to -1683.33 (0.03 seconds)
Cbc0038I Round again with cutoff of -1999.42
Cbc0038I Pass  11: suminf.    5.49916 (22) obj. -1999.42 iterations 9
Cbc0038I Pass  12: suminf.    4.83332 (22) obj. -1999.42 iterations 4
Cbc0038I Pass  13: suminf.    4.02615 (24) obj. -1999.42 iterations 2
Cbc0038I Pass  14: suminf.    4.01237 (24) obj. -1999.42 iterations 1
Cbc0038I Pass  15: suminf.    6.02627 (23) obj. -1999.42 iterations 46
Cbc0038I Pass  16: suminf.    5.12661 (19) obj. -1999.42 iterations 11
Cbc0038I Pass  17: suminf.    4.79750 (19) obj. -1999.42 iterations 1
Cbc0038I Pass  18: suminf.    7.41191 (23) obj. -1999.42 iterations 29
Cbc0038I Pass  19: suminf.    7.38032 (23) obj. -1999.42 iterations 2
Cbc0038I Pass  20: suminf.    7.24568 (23) obj. -1999.42 iterations 20
Cbc0038I Pass  21: suminf.    2.67668 (10) obj. -1999.42 iterations 10
Cbc0038I Pass  22: suminf.    0.92408 (3) obj. -1999.42 iterations 13
Cbc0038I Pass  23: suminf.    0.52681 (2) obj. -1999.42 iterations 3
Cbc0038I Solution found of -1999.42
Cbc0038I Relaxing continuous gives -2883.33
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 119 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2997.46
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  24: suminf.   12.11391 (39) obj. -2997.46 iterations 11
Cbc0038I Pass  25: suminf.   10.48028 (38) obj. -2997.46 iterations 8
Cbc0038I Pass  26: suminf.    9.72015 (38) obj. -2997.46 iterations 6
Cbc0038I Pass  27: suminf.   11.96555 (37) obj. -2997.46 iterations 16
Cbc0038I Pass  28: suminf.   10.31516 (37) obj. -2997.46 iterations 10
Cbc0038I Pass  29: suminf.    9.72015 (38) obj. -2997.46 iterations 4
Cbc0038I Pass  30: suminf.   12.99831 (40) obj. -2997.46 iterations 22
Cbc0038I Pass  31: suminf.   12.43796 (39) obj. -2997.46 iterations 7
Cbc0038I Pass  32: suminf.   12.09154 (37) obj. -2997.46 iterations 5
Cbc0038I Pass  33: suminf.   10.52572 (37) obj. -2997.46 iterations 3
Cbc0038I Pass  34: suminf.   13.12481 (38) obj. -2997.46 iterations 21
Cbc0038I Pass  35: suminf.    9.87884 (37) obj. -2997.46 iterations 17
Cbc0038I Pass  36: suminf.    9.80567 (37) obj. -2997.46 iterations 1
Cbc0038I Pass  37: suminf.   12.44889 (39) obj. -2997.46 iterations 31
Cbc0038I Pass  38: suminf.   11.51240 (35) obj. -2997.46 iterations 12
Cbc0038I Pass  39: suminf.   10.02082 (35) obj. -2997.46 iterations 11
Cbc0038I Pass  40: suminf.    9.94217 (35) obj. -2997.46 iterations 2
Cbc0038I Pass  41: suminf.   11.80033 (38) obj. -2997.46 iterations 20
Cbc0038I Pass  42: suminf.   12.43237 (39) obj. -2997.46 iterations 22
Cbc0038I Pass  43: suminf.    9.94217 (35) obj. -2997.46 iterations 21
Cbc0038I Pass  44: suminf.   17.05915 (44) obj. -2997.46 iterations 39
Cbc0038I Pass  45: suminf.   13.30988 (43) obj. -2997.46 iterations 23
Cbc0038I Pass  46: suminf.   13.16019 (41) obj. -2997.46 iterations 5
Cbc0038I Pass  47: suminf.   11.99444 (38) obj. -2997.46 iterations 8
Cbc0038I Pass  48: suminf.   10.03385 (38) obj. -2997.46 iterations 2
Cbc0038I Pass  49: suminf.    9.72015 (38) obj. -2997.46 iterations 4
Cbc0038I Pass  50: suminf.   11.70016 (36) obj. -2997.46 iterations 19
Cbc0038I Pass  51: suminf.   10.73355 (35) obj. -2997.46 iterations 10
Cbc0038I Pass  52: suminf.    9.91729 (36) obj. -2997.46 iterations 6
Cbc0038I Pass  53: suminf.    9.91729 (36) obj. -2997.46 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2883.33 - took 0.04 seconds
Cbc0012I Integer solution of -2883.33 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -3263.7672 to -3263.7672 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2883.33, took 0 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

