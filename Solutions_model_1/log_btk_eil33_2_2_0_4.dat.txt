Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-43) rows, 15 (-20) columns and 76 (-119) elements
Clp1000I sum of infeasibilities 2.43132e-07 - average 9.35122e-09, 0 fixed columns
Coin0506I Presolve 26 (0) rows, 15 (0) columns and 76 (0) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Coin0511I After Postsolve, objective 91.620412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Coin0511I After Postsolve, objective 91.620412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.62041157 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 15 columns (14 integer (14 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.022%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.45636
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.6667 iterations 14
Cbc0038I Solution found of -21.6667
Cbc0038I Relaxing continuous gives -21.6667
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 15 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -21.6667 to -53.6667 (0.00 seconds)
Cbc0038I Round again with cutoff of -57.4414
Cbc0038I Pass   2: suminf.    0.44198 (8) obj. -57.4414 iterations 8
Cbc0038I Pass   3: suminf.    0.40490 (10) obj. -57.4414 iterations 2
Cbc0038I Pass   4: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass   5: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass   6: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass   7: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass   8: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass   9: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  10: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  11: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  12: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  13: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  14: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  15: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  16: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  17: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  18: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  19: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  20: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  21: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  22: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  23: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  24: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  25: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  26: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  27: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  28: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  29: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  30: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  31: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 15 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53.6667 - took 0.01 seconds
Cbc0012I Integer solution of -53.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -91.412347 to -91.412347 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -53.6667, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

