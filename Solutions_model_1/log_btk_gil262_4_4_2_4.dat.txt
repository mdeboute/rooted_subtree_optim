Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.63617e-05 - average 3.24637e-08, 66 fixed columns
Coin0506I Presolve 373 (-131) rows, 196 (-66) columns and 1109 (-391) elements
Clp0029I End of values pass after 196 iterations
Clp0014I Perturbing problem by 0.001% of 2.0267577 - largest nonzero change 0 ( 0%) - largest zero change 2.9689391e-05
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Coin0511I After Postsolve, objective 148.47336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Coin0511I After Postsolve, objective 148.47336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.4733606 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 64 integers unsatisfied sum - 13.5896
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.7021 iterations 142
Cbc0038I Solution found of 14.7021
Cbc0038I Relaxing continuous gives 14.7021
Cbc0038I Rounding solution of -44.742 is better than previous of 14.7021

Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 118 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -44.742 to -77.4034 (0.19 seconds)
Cbc0038I Round again with cutoff of -84.5105
Cbc0038I Pass   2: suminf.    2.40368 (9) obj. -84.5105 iterations 27
Cbc0038I Pass   3: suminf.    1.89365 (6) obj. -84.5105 iterations 21
Cbc0038I Pass   4: suminf.    1.85916 (6) obj. -84.5105 iterations 21
Cbc0038I Pass   5: suminf.    1.85839 (5) obj. -84.5105 iterations 3
Cbc0038I Pass   6: suminf.    2.24794 (5) obj. -84.5105 iterations 14
Cbc0038I Pass   7: suminf.    4.78470 (13) obj. -84.5105 iterations 52
Cbc0038I Pass   8: suminf.    1.55068 (6) obj. -84.5105 iterations 43
Cbc0038I Pass   9: suminf.    1.55068 (6) obj. -84.5105 iterations 2
Cbc0038I Pass  10: suminf.    1.84567 (5) obj. -84.5105 iterations 30
Cbc0038I Pass  11: suminf.    1.84567 (5) obj. -84.5105 iterations 0
Cbc0038I Pass  12: suminf.    0.99964 (3) obj. -84.5105 iterations 10
Cbc0038I Pass  13: suminf.    0.95777 (4) obj. -84.5105 iterations 5
Cbc0038I Pass  14: suminf.    1.84969 (5) obj. -84.5105 iterations 10
Cbc0038I Pass  15: suminf.    1.81441 (5) obj. -84.5105 iterations 8
Cbc0038I Pass  16: suminf.    4.09930 (18) obj. -84.5105 iterations 42
Cbc0038I Pass  17: suminf.    2.15920 (10) obj. -84.5105 iterations 28
Cbc0038I Pass  18: suminf.    1.92851 (9) obj. -84.5105 iterations 3
Cbc0038I Pass  19: suminf.    1.95147 (9) obj. -84.5105 iterations 3
Cbc0038I Pass  20: suminf.    1.27315 (4) obj. -84.5105 iterations 34
Cbc0038I Pass  21: suminf.    1.16235 (3) obj. -84.5105 iterations 11
Cbc0038I Pass  22: suminf.    1.39650 (4) obj. -84.5105 iterations 11
Cbc0038I Pass  23: suminf.    1.39144 (4) obj. -84.5105 iterations 1
Cbc0038I Pass  24: suminf.    1.81251 (4) obj. -84.5105 iterations 13
Cbc0038I Pass  25: suminf.    1.81251 (4) obj. -84.5105 iterations 0
Cbc0038I Pass  26: suminf.    1.45917 (4) obj. -84.5105 iterations 8
Cbc0038I Pass  27: suminf.    1.41827 (4) obj. -84.5105 iterations 6
Cbc0038I Pass  28: suminf.    1.41442 (4) obj. -84.5105 iterations 1
Cbc0038I Pass  29: suminf.    1.81251 (4) obj. -84.5105 iterations 12
Cbc0038I Pass  30: suminf.    1.81251 (4) obj. -84.5105 iterations 0
Cbc0038I Pass  31: suminf.    1.45917 (4) obj. -84.5105 iterations 8
Cbc0038I Rounding solution of -77.7849 is better than previous of -77.4034

Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 158 rows 87 columns
Cbc0038I Mini branch and bound improved solution from -77.7849 to -79.9327 (0.46 seconds)
Cbc0038I Round again with cutoff of -97.3031
Cbc0038I Pass  31: suminf.    3.06522 (10) obj. -97.3031 iterations 8
Cbc0038I Pass  32: suminf.    2.21468 (7) obj. -97.3031 iterations 38
Cbc0038I Pass  33: suminf.    1.75150 (7) obj. -97.3031 iterations 23
Cbc0038I Pass  34: suminf.    2.52532 (7) obj. -97.3031 iterations 25
Cbc0038I Pass  35: suminf.    6.01589 (23) obj. -97.3031 iterations 50
Cbc0038I Pass  36: suminf.    2.36866 (14) obj. -97.3031 iterations 45
Cbc0038I Pass  37: suminf.    2.34119 (12) obj. -97.3031 iterations 6
Cbc0038I Pass  38: suminf.    3.10435 (8) obj. -97.3031 iterations 18
Cbc0038I Pass  39: suminf.    3.08112 (10) obj. -97.3031 iterations 10
Cbc0038I Pass  40: suminf.    3.35610 (12) obj. -97.3031 iterations 13
Cbc0038I Pass  41: suminf.    2.16856 (7) obj. -97.3031 iterations 12
Cbc0038I Pass  42: suminf.    1.84436 (7) obj. -97.3031 iterations 7
Cbc0038I Pass  43: suminf.    1.60366 (6) obj. -97.3031 iterations 4
Cbc0038I Pass  44: suminf.    1.41940 (7) obj. -97.3031 iterations 8
Cbc0038I Pass  45: suminf.    2.31765 (9) obj. -97.3031 iterations 21
Cbc0038I Pass  46: suminf.    2.29953 (7) obj. -97.3031 iterations 6
Cbc0038I Pass  47: suminf.    2.43127 (9) obj. -97.3031 iterations 10
Cbc0038I Pass  48: suminf.    2.40854 (8) obj. -97.3031 iterations 4
Cbc0038I Pass  49: suminf.    2.31998 (8) obj. -97.3031 iterations 15
Cbc0038I Pass  50: suminf.    7.47688 (24) obj. -97.3031 iterations 49
Cbc0038I Pass  51: suminf.    3.64487 (11) obj. -97.3031 iterations 53
Cbc0038I Pass  52: suminf.    2.90507 (11) obj. -97.3031 iterations 13
Cbc0038I Pass  53: suminf.    2.88089 (9) obj. -97.3031 iterations 9
Cbc0038I Pass  54: suminf.    2.33764 (7) obj. -97.3031 iterations 11
Cbc0038I Pass  55: suminf.    1.63809 (5) obj. -97.3031 iterations 10
Cbc0038I Pass  56: suminf.    1.62412 (6) obj. -97.3031 iterations 5
Cbc0038I Pass  57: suminf.    2.19118 (8) obj. -97.3031 iterations 10
Cbc0038I Pass  58: suminf.    1.73735 (7) obj. -97.3031 iterations 1
Cbc0038I Pass  59: suminf.    1.73369 (7) obj. -97.3031 iterations 3
Cbc0038I Pass  60: suminf.    2.91636 (8) obj. -97.3031 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 165 rows 90 columns
Cbc0038I Mini branch and bound improved solution from -79.9327 to -86.7623 (0.65 seconds)
Cbc0038I Round again with cutoff of -112.654
Cbc0038I Pass  60: suminf.    3.80096 (18) obj. -112.654 iterations 16
Cbc0038I Pass  61: suminf.    3.18987 (14) obj. -112.654 iterations 22
Cbc0038I Pass  62: suminf.    4.25263 (12) obj. -112.654 iterations 22
Cbc0038I Pass  63: suminf.    3.53785 (12) obj. -112.654 iterations 13
Cbc0038I Pass  64: suminf.    3.03983 (11) obj. -112.654 iterations 4
Cbc0038I Pass  65: suminf.    3.03983 (11) obj. -112.654 iterations 3
Cbc0038I Pass  66: suminf.    4.27023 (11) obj. -112.654 iterations 18
Cbc0038I Pass  67: suminf.    2.89791 (12) obj. -112.654 iterations 12
Cbc0038I Pass  68: suminf.    3.19731 (11) obj. -112.654 iterations 13
Cbc0038I Pass  69: suminf.    8.41558 (27) obj. -112.654 iterations 43
Cbc0038I Pass  70: suminf.    4.44698 (14) obj. -112.654 iterations 57
Cbc0038I Pass  71: suminf.    3.66034 (12) obj. -112.654 iterations 13
Cbc0038I Pass  72: suminf.    3.58025 (12) obj. -112.654 iterations 11
Cbc0038I Pass  73: suminf.    4.67537 (16) obj. -112.654 iterations 34
Cbc0038I Pass  74: suminf.    3.96610 (15) obj. -112.654 iterations 8
Cbc0038I Pass  75: suminf.    4.99136 (14) obj. -112.654 iterations 16
Cbc0038I Pass  76: suminf.    3.41278 (11) obj. -112.654 iterations 8
Cbc0038I Pass  77: suminf.    3.05790 (9) obj. -112.654 iterations 11
Cbc0038I Pass  78: suminf.    3.50329 (10) obj. -112.654 iterations 14
Cbc0038I Pass  79: suminf.    2.94453 (9) obj. -112.654 iterations 9
Cbc0038I Pass  80: suminf.    3.84528 (11) obj. -112.654 iterations 16
Cbc0038I Pass  81: suminf.    2.80449 (10) obj. -112.654 iterations 22
Cbc0038I Pass  82: suminf.    3.95485 (11) obj. -112.654 iterations 11
Cbc0038I Pass  83: suminf.    3.80229 (10) obj. -112.654 iterations 4
Cbc0038I Pass  84: suminf.    3.75954 (10) obj. -112.654 iterations 9
Cbc0038I Pass  85: suminf.    3.37702 (10) obj. -112.654 iterations 9
Cbc0038I Pass  86: suminf.    3.37702 (10) obj. -112.654 iterations 0
Cbc0038I Pass  87: suminf.    3.71863 (10) obj. -112.654 iterations 11
Cbc0038I Pass  88: suminf.    3.27289 (10) obj. -112.654 iterations 17
Cbc0038I Pass  89: suminf.    3.26562 (12) obj. -112.654 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 149 rows 82 columns
Cbc0038I Mini branch and bound did not improve solution (0.87 seconds)
Cbc0038I After 0.87 seconds - Feasibility pump exiting with objective of -86.7623 - took 0.76 seconds
Cbc0012I Integer solution of -86.76229 found by feasibility pump after 0 iterations and 0 nodes (0.87 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 121 rows 67 columns
Cbc0031I 39 added rows had average density of 160.28205
Cbc0013I At root node, 39 cuts changed objective from -148.47336 to -133.40822 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26054 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2051 row cuts average 257.0 elements, 0 column cuts (0 active)  in 1.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 4.3 elements, 0 column cuts (0 active)  in 1.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 254.5 elements, 0 column cuts (0 active)  in 0.381 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -86.76229 best solution, best possible -133.40822 (10.73 seconds)
Cbc0010I After 3 nodes, 4 on tree, -86.76229 best solution, best possible -133.40822 (11.56 seconds)
Cbc0010I After 8 nodes, 9 on tree, -86.76229 best solution, best possible -133.40822 (12.26 seconds)
Cbc0010I After 37 nodes, 10 on tree, -86.76229 best solution, best possible -133.40822 (12.97 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 60 rows 42 columns
Cbc0010I After 71 nodes, 12 on tree, -86.76229 best solution, best possible -133.40822 (13.67 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 66 rows 41 columns
Cbc0010I After 103 nodes, 18 on tree, -86.76229 best solution, best possible -133.40822 (14.38 seconds)
Cbc0010I After 157 nodes, 12 on tree, -86.76229 best solution, best possible -133.40822 (15.09 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 18 rows 16 columns
Cbc0010I After 241 nodes, 15 on tree, -86.76229 best solution, best possible -133.40822 (15.79 seconds)
Cbc0010I After 329 nodes, 12 on tree, -86.76229 best solution, best possible -133.40822 (16.50 seconds)
Cbc0001I Search completed - best objective -86.76228999999998, took 31631 iterations and 354 nodes (16.71 seconds)
Cbc0032I Strong branching done 3124 times (74868 iterations), fathomed 35 nodes and fixed 161 variables
Cbc0035I Maximum depth 85, 1900 variables fixed on reduced cost
Total time (CPU seconds):       15.86   (Wallclock seconds):       16.78

