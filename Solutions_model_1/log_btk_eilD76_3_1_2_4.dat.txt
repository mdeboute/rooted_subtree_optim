Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 1.71158e-05 - average 1.2773e-07, 11 fixed columns
Coin0506I Presolve 114 (-20) rows, 65 (-11) columns and 350 (-62) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 2.2783693 - largest nonzero change 0 ( 0%) - largest zero change 2.8733339e-05
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Coin0511I After Postsolve, objective 62.863772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Coin0511I After Postsolve, objective 62.863772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.86377226 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.21327
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.5073 iterations 51
Cbc0038I Solution found of -10.5073
Cbc0038I Relaxing continuous gives -10.5073
Cbc0038I Rounding solution of -15.2736 is better than previous of -10.5073

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -15.2736 to -35.1497 (0.06 seconds)
Cbc0038I Round again with cutoff of -37.9212
Cbc0038I Pass   2: suminf.    3.42353 (12) obj. -37.9212 iterations 26
Cbc0038I Pass   3: suminf.    1.77314 (9) obj. -37.9212 iterations 7
Cbc0038I Pass   4: suminf.    1.69648 (8) obj. -37.9212 iterations 1
Cbc0038I Pass   5: suminf.    1.62473 (5) obj. -37.9212 iterations 17
Cbc0038I Pass   6: suminf.    1.60907 (6) obj. -37.9212 iterations 6
Cbc0038I Pass   7: suminf.    1.33647 (6) obj. -37.9212 iterations 10
Cbc0038I Pass   8: suminf.    1.11088 (4) obj. -37.9212 iterations 7
Cbc0038I Pass   9: suminf.    1.06876 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  10: suminf.    1.23414 (5) obj. -37.9212 iterations 17
Cbc0038I Pass  11: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  12: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  13: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  14: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  15: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  16: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  17: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  18: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  19: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  20: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  21: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  22: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  23: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  24: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  25: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  26: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  27: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  28: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  29: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  30: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  31: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.1497 to -36.2811 (0.10 seconds)
Cbc0038I Round again with cutoff of -42.9097
Cbc0038I Pass  31: suminf.    4.13965 (16) obj. -42.9097 iterations 1
Cbc0038I Pass  32: suminf.    2.28498 (10) obj. -42.9097 iterations 12
Cbc0038I Pass  33: suminf.    1.45302 (7) obj. -42.9097 iterations 13
Cbc0038I Pass  34: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  35: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  36: suminf.    1.45461 (7) obj. -42.9097 iterations 10
Cbc0038I Pass  37: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  38: suminf.    3.76841 (11) obj. -42.9097 iterations 18
Cbc0038I Pass  39: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  40: suminf.    1.45302 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  41: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  42: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  43: suminf.    1.45461 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  44: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  45: suminf.    3.76841 (11) obj. -42.9097 iterations 17
Cbc0038I Pass  46: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  47: suminf.    1.45302 (7) obj. -42.9097 iterations 11
Cbc0038I Pass  48: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  49: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  50: suminf.    1.45461 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  51: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  52: suminf.    3.76841 (11) obj. -42.9097 iterations 17
Cbc0038I Pass  53: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  54: suminf.    1.45302 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  55: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  56: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  57: suminf.    1.45461 (7) obj. -42.9097 iterations 10
Cbc0038I Pass  58: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  59: suminf.    3.76841 (11) obj. -42.9097 iterations 18
Cbc0038I Pass  60: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -36.2811 - took 0.11 seconds
Cbc0012I Integer solution of -36.28106 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0031I 27 added rows had average density of 52.555556
Cbc0013I At root node, 27 cuts changed objective from -62.863772 to -55.071086 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14832 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2812 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.28106 best solution, best possible -55.071086 (1.01 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 28 rows 20 columns
Cbc0012I Integer solution of -37.233 found by RINS after 10027 iterations and 41 nodes (1.27 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 31 rows 25 columns
Cbc0001I Search completed - best objective -37.23299999999999, took 12189 iterations and 126 nodes (1.42 seconds)
Cbc0032I Strong branching done 1344 times (18840 iterations), fathomed 17 nodes and fixed 91 variables
Cbc0035I Maximum depth 22, 434 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.44

