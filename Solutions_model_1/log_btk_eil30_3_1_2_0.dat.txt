Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 29 (-3) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 0.00454275 - average 9.27091e-05, 9 fixed columns
Coin0506I Presolve 29 (-20) rows, 20 (-9) columns and 90 (-58) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 0.47265421 - largest nonzero change 0 ( 0%) - largest zero change 1.0711317e-05
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Coin0511I After Postsolve, objective 145.29565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Coin0511I After Postsolve, objective 145.29565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.2956472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 29 columns (28 integer (28 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.56797
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -86.1025 iterations 14
Cbc0038I Solution found of -86.1025
Cbc0038I Relaxing continuous gives -86.1025
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -92.0219
Cbc0038I Pass   2: suminf.    0.09171 (1) obj. -92.0219 iterations 1
Cbc0038I Pass   3: suminf.    0.32500 (1) obj. -92.0219 iterations 1
Cbc0038I Pass   4: suminf.    1.19798 (4) obj. -92.0219 iterations 9
Cbc0038I Pass   5: suminf.    0.22682 (3) obj. -92.0219 iterations 3
Cbc0038I Pass   6: suminf.    0.53534 (3) obj. -92.0219 iterations 3
Cbc0038I Pass   7: suminf.    0.17338 (1) obj. -92.0219 iterations 2
Cbc0038I Pass   8: suminf.    0.39668 (2) obj. -92.0219 iterations 2
Cbc0038I Pass   9: suminf.    0.55939 (3) obj. -92.0219 iterations 5
Cbc0038I Pass  10: suminf.    0.55939 (3) obj. -92.0219 iterations 0
Cbc0038I Pass  11: suminf.    0.71576 (2) obj. -92.0219 iterations 3
Cbc0038I Pass  12: suminf.    0.10468 (1) obj. -92.0219 iterations 1
Cbc0038I Pass  13: suminf.    0.53605 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  14: suminf.    0.73195 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  15: suminf.    1.16801 (5) obj. -92.0219 iterations 9
Cbc0038I Pass  16: suminf.    1.16801 (5) obj. -92.0219 iterations 1
Cbc0038I Pass  17: suminf.    0.75948 (3) obj. -92.0219 iterations 4
Cbc0038I Pass  18: suminf.    0.25932 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  19: suminf.    1.80818 (5) obj. -92.0219 iterations 10
Cbc0038I Pass  20: suminf.    1.57188 (6) obj. -92.0219 iterations 2
Cbc0038I Pass  21: suminf.    1.27658 (3) obj. -92.0219 iterations 6
Cbc0038I Pass  22: suminf.    0.66964 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  23: suminf.    0.61965 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  24: suminf.    0.61965 (2) obj. -92.0219 iterations 0
Cbc0038I Pass  25: suminf.    0.27038 (2) obj. -92.0219 iterations 3
Cbc0038I Pass  26: suminf.    0.59143 (3) obj. -92.0219 iterations 2
Cbc0038I Pass  27: suminf.    1.76128 (7) obj. -92.0219 iterations 7
Cbc0038I Pass  28: suminf.    0.53154 (2) obj. -92.0219 iterations 4
Cbc0038I Pass  29: suminf.    0.92341 (3) obj. -92.0219 iterations 3
Cbc0038I Pass  30: suminf.    0.66388 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  31: suminf.    1.78133 (5) obj. -92.0219 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 24 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -86.1025 to -92.9622 (0.02 seconds)
Cbc0038I Round again with cutoff of -103.429
Cbc0038I Pass  31: suminf.    0.26845 (1) obj. -103.429 iterations 0
Cbc0038I Pass  32: suminf.    0.42879 (1) obj. -103.429 iterations 1
Cbc0038I Pass  33: suminf.    1.02199 (5) obj. -103.429 iterations 6
Cbc0038I Pass  34: suminf.    0.98866 (5) obj. -103.429 iterations 1
Cbc0038I Pass  35: suminf.    1.61598 (4) obj. -103.429 iterations 3
Cbc0038I Pass  36: suminf.    1.12531 (3) obj. -103.429 iterations 1
Cbc0038I Pass  37: suminf.    0.77624 (3) obj. -103.429 iterations 2
Cbc0038I Pass  38: suminf.    1.12531 (3) obj. -103.429 iterations 4
Cbc0038I Pass  39: suminf.    1.11372 (5) obj. -103.429 iterations 8
Cbc0038I Pass  40: suminf.    1.11372 (5) obj. -103.429 iterations 0
Cbc0038I Pass  41: suminf.    2.20599 (5) obj. -103.429 iterations 4
Cbc0038I Pass  42: suminf.    1.39251 (6) obj. -103.429 iterations 2
Cbc0038I Pass  43: suminf.    1.31536 (5) obj. -103.429 iterations 1
Cbc0038I Pass  44: suminf.    1.25310 (4) obj. -103.429 iterations 1
Cbc0038I Pass  45: suminf.    1.13546 (5) obj. -103.429 iterations 7
Cbc0038I Pass  46: suminf.    0.96866 (3) obj. -103.429 iterations 1
Cbc0038I Pass  47: suminf.    0.88728 (3) obj. -103.429 iterations 1
Cbc0038I Pass  48: suminf.    0.77730 (4) obj. -103.429 iterations 1
Cbc0038I Pass  49: suminf.    1.15159 (5) obj. -103.429 iterations 4
Cbc0038I Pass  50: suminf.    1.07255 (3) obj. -103.429 iterations 1
Cbc0038I Pass  51: suminf.    1.17466 (5) obj. -103.429 iterations 11
Cbc0038I Pass  52: suminf.    1.14298 (6) obj. -103.429 iterations 1
Cbc0038I Pass  53: suminf.    1.48091 (4) obj. -103.429 iterations 8
Cbc0038I Pass  54: suminf.    0.89034 (4) obj. -103.429 iterations 2
Cbc0038I Pass  55: suminf.    0.89034 (4) obj. -103.429 iterations 0
Cbc0038I Pass  56: suminf.    1.55992 (4) obj. -103.429 iterations 6
Cbc0038I Pass  57: suminf.    1.52644 (4) obj. -103.429 iterations 2
Cbc0038I Pass  58: suminf.    1.49194 (4) obj. -103.429 iterations 7
Cbc0038I Pass  59: suminf.    0.90253 (4) obj. -103.429 iterations 3
Cbc0038I Pass  60: suminf.    0.50228 (2) obj. -103.429 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 25 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -92.9622 - took 0.02 seconds
Cbc0012I Integer solution of -92.96217 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 29 columns, reduced to 19 rows 15 columns
Cbc0031I 14 added rows had average density of 24.071429
Cbc0013I At root node, 14 cuts changed objective from -145.29565 to -106.78483 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1370 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -93.83933 found by DiveCoefficient after 1988 iterations and 10 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -93.83932999999999, took 2004 iterations and 10 nodes (0.22 seconds)
Cbc0032I Strong branching done 94 times (1030 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.23

