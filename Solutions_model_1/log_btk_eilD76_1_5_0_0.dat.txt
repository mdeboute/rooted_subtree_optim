Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 5.95228e-05 - average 4.37668e-07, 8 fixed columns
Coin0506I Presolve 120 (-16) rows, 68 (-8) columns and 368 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Coin0511I After Postsolve, objective 39.054354, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Coin0511I After Postsolve, objective 39.054354, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.05435383 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 11.2333
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.30841 iterations 57
Cbc0038I Solution found of 1.30841
Cbc0038I Relaxing continuous gives 1.30841
Cbc0038I Rounding solution of -3.04278 is better than previous of 1.30841

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -3.04278 to -11.7785 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.5062
Cbc0038I Pass   2: suminf.    2.60656 (12) obj. -14.5062 iterations 15
Cbc0038I Pass   3: suminf.    1.43658 (5) obj. -14.5062 iterations 13
Cbc0038I Pass   4: suminf.    1.43658 (5) obj. -14.5062 iterations 1
Cbc0038I Pass   5: suminf.    1.12324 (4) obj. -14.5062 iterations 8
Cbc0038I Pass   6: suminf.    1.03322 (3) obj. -14.5062 iterations 1
Cbc0038I Pass   7: suminf.    0.88669 (3) obj. -14.5062 iterations 3
Cbc0038I Pass   8: suminf.    1.63606 (6) obj. -14.5062 iterations 7
Cbc0038I Pass   9: suminf.    1.58729 (5) obj. -14.5062 iterations 1
Cbc0038I Pass  10: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  11: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  12: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  13: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  14: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  15: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  16: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  17: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  18: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  19: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  20: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  21: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  22: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  23: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  24: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  25: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  26: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  27: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  28: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  29: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  30: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  31: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -11.7785 to -13.7913 (0.17 seconds)
Cbc0038I Round again with cutoff of -19.4158
Cbc0038I Pass  31: suminf.    3.56159 (13) obj. -19.4158 iterations 1
Cbc0038I Pass  32: suminf.    1.73845 (6) obj. -19.4158 iterations 14
Cbc0038I Pass  33: suminf.    1.73845 (6) obj. -19.4158 iterations 0
Cbc0038I Pass  34: suminf.    2.71798 (8) obj. -19.4158 iterations 11
Cbc0038I Pass  35: suminf.    1.83841 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  36: suminf.    1.73997 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  37: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  38: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  39: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  40: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  41: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  42: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  43: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  44: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  45: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  46: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  47: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  48: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  49: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  50: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  51: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  52: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  53: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  54: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  55: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  56: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  57: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  58: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  59: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  60: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -13.7913 - took 0.17 seconds
Cbc0012I Integer solution of -13.79135 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0031I 31 added rows had average density of 44.903226
Cbc0013I At root node, 31 cuts changed objective from -39.054354 to -31.263946 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17099 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2080 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.79135 best solution, best possible -31.263946 (1.49 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 67 rows 41 columns
Cbc0038I Full problem 136 rows 76 columns, reduced to 11 rows 12 columns
Cbc0001I Search completed - best objective -13.79135, took 12621 iterations and 122 nodes (2.00 seconds)
Cbc0032I Strong branching done 1180 times (21315 iterations), fathomed 8 nodes and fixed 36 variables
Cbc0035I Maximum depth 32, 283 variables fixed on reduced cost
Total time (CPU seconds):       1.88   (Wallclock seconds):       2.01

