Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 19 (-6) columns and 99 (-36) elements
Clp1000I sum of infeasibilities 6.50743e-09 - average 1.91395e-10, 17 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-19) columns and 0 (-99) elements
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Coin0511I After Postsolve, objective 10776.432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1936216 - largest nonzero change 1.2037643e-05 ( 0.0012037643%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Clp0000I Optimal - objective value 10776.432
Coin0511I After Postsolve, objective 10776.432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10776.43171 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 19 columns (18 integer (18 of which binary)) and 99 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.208%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.275641
Cbc0038I Solution found of -7579.5
Cbc0038I Relaxing continuous gives -7579.5
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 19 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7728.63
Cbc0038I Pass   1: suminf.    0.02765 (1) obj. -7728.63 iterations 7
Cbc0038I Pass   2: suminf.    0.27564 (1) obj. -9066.31 iterations 1
Cbc0038I Pass   3: suminf.    0.01411 (1) obj. -7728.63 iterations 3
Cbc0038I Pass   4: suminf.    0.01411 (1) obj. -7728.63 iterations 1
Cbc0038I Pass   5: suminf.    0.12179 (1) obj. -8309.46 iterations 1
Cbc0038I Pass   6: suminf.    1.62109 (4) obj. -7728.63 iterations 3
Cbc0038I Pass   7: suminf.    0.11559 (3) obj. -7728.63 iterations 11
Cbc0038I Pass   8: suminf.    0.05327 (2) obj. -7728.63 iterations 3
Cbc0038I Pass   9: suminf.    0.66305 (2) obj. -7728.63 iterations 2
Cbc0038I Pass  10: suminf.    0.11538 (1) obj. -8407.88 iterations 1
Cbc0038I Solution found of -7785.5
Cbc0038I Relaxing continuous gives -7785.5
Cbc0038I Rounding solution of -7856.5 is better than previous of -7785.5

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8098.86
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.09629 (1) obj. -8098.86 iterations 0
Cbc0038I Pass  12: suminf.    0.27564 (1) obj. -9066.31 iterations 1
Cbc0038I Pass  13: suminf.    0.08943 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  14: suminf.    0.24487 (1) obj. -8937.34 iterations 1
Cbc0038I Pass  15: suminf.    0.08943 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  16: suminf.    0.21728 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  17: suminf.    0.07367 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  18: suminf.    0.09103 (1) obj. -8192.49 iterations 1
Cbc0038I Pass  19: suminf.    0.14865 (2) obj. -8098.86 iterations 9
Cbc0038I Pass  20: suminf.    0.14865 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  21: suminf.    0.14103 (1) obj. -8463.19 iterations 3
Cbc0038I Pass  22: suminf.    0.07348 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  23: suminf.    0.57427 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  24: suminf.    0.07348 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  25: suminf.    0.22237 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  26: suminf.    0.52545 (3) obj. -8098.86 iterations 1
Cbc0038I Pass  27: suminf.    0.22237 (2) obj. -8098.86 iterations 1
Cbc0038I Pass  28: suminf.    0.82429 (3) obj. -8098.86 iterations 7
Cbc0038I Pass  29: suminf.    0.82429 (3) obj. -8098.86 iterations 2
Cbc0038I Pass  30: suminf.    0.14103 (1) obj. -8463.19 iterations 3
Cbc0038I Pass  31: suminf.    0.06662 (1) obj. -8098.86 iterations 3
Cbc0038I Pass  32: suminf.    0.06662 (1) obj. -8098.86 iterations 1
Cbc0038I Pass  33: suminf.    0.11026 (1) obj. -8334.22 iterations 1
Cbc0038I Pass  34: suminf.    0.28592 (2) obj. -8098.86 iterations 5
Cbc0038I Pass  35: suminf.    0.05123 (1) obj. -8098.86 iterations 2
Cbc0038I Pass  36: suminf.    0.08462 (1) obj. -8278.92 iterations 1
Cbc0038I Pass  37: suminf.    0.35392 (2) obj. -8098.86 iterations 6
Cbc0038I Pass  38: suminf.    0.35392 (2) obj. -8098.86 iterations 7
Cbc0038I Pass  39: suminf.    0.35881 (3) obj. -8098.86 iterations 10
Cbc0038I Pass  40: suminf.    0.14588 (2) obj. -8098.86 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 19 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7856.5 - took 0.01 seconds
Cbc0012I Integer solution of -7856.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 3 added rows had average density of 3
Cbc0013I At root node, 14 cuts changed objective from -7903.2677 to -7856.5 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 4.3 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7856.5, took 4 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

