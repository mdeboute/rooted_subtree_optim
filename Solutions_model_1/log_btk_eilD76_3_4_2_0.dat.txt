Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 2.93786e-05 - average 2.11357e-07, 6 fixed columns
Coin0506I Presolve 126 (-13) rows, 69 (-7) columns and 382 (-40) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 2.8090846 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Coin0511I After Postsolve, objective 45.649359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Coin0511I After Postsolve, objective 45.649359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.64935871 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.2352
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.62373 iterations 54
Cbc0038I Solution found of 1.62373
Cbc0038I Relaxing continuous gives 1.62373
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 1.62373 to -11.5888 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.9949
Cbc0038I Pass   2: suminf.    2.24767 (11) obj. -14.9949 iterations 17
Cbc0038I Pass   3: suminf.    0.89283 (5) obj. -14.9949 iterations 20
Cbc0038I Pass   4: suminf.    0.74250 (7) obj. -14.9949 iterations 6
Cbc0038I Pass   5: suminf.    2.90819 (8) obj. -14.9949 iterations 19
Cbc0038I Pass   6: suminf.    2.91128 (8) obj. -14.9949 iterations 2
Cbc0038I Pass   7: suminf.    0.56443 (4) obj. -14.9949 iterations 13
Cbc0038I Pass   8: suminf.    0.56443 (4) obj. -14.9949 iterations 0
Cbc0038I Pass   9: suminf.    2.21096 (6) obj. -14.9949 iterations 12
Cbc0038I Pass  10: suminf.    2.21096 (6) obj. -14.9949 iterations 0
Cbc0038I Pass  11: suminf.    2.83176 (10) obj. -14.9949 iterations 20
Cbc0038I Pass  12: suminf.    2.35431 (7) obj. -14.9949 iterations 8
Cbc0038I Pass  13: suminf.    0.87686 (4) obj. -14.9949 iterations 11
Cbc0038I Pass  14: suminf.    1.05408 (4) obj. -14.9949 iterations 10
Cbc0038I Pass  15: suminf.    1.05408 (4) obj. -14.9949 iterations 0
Cbc0038I Pass  16: suminf.    0.91608 (3) obj. -14.9949 iterations 9
Cbc0038I Pass  17: suminf.    0.53142 (2) obj. -14.9949 iterations 2
Cbc0038I Pass  18: suminf.    1.54803 (7) obj. -14.9949 iterations 17
Cbc0038I Pass  19: suminf.    1.32640 (6) obj. -14.9949 iterations 4
Cbc0038I Pass  20: suminf.    1.38004 (4) obj. -14.9949 iterations 14
Cbc0038I Pass  21: suminf.    1.46123 (4) obj. -14.9949 iterations 5
Cbc0038I Pass  22: suminf.    1.46123 (4) obj. -14.9949 iterations 0
Cbc0038I Pass  23: suminf.    1.87121 (4) obj. -14.9949 iterations 4
Cbc0038I Pass  24: suminf.    3.52119 (13) obj. -14.9949 iterations 24
Cbc0038I Pass  25: suminf.    2.30395 (11) obj. -14.9949 iterations 6
Cbc0038I Pass  26: suminf.    2.26252 (10) obj. -14.9949 iterations 2
Cbc0038I Pass  27: suminf.    2.22824 (7) obj. -14.9949 iterations 24
Cbc0038I Pass  28: suminf.    2.22824 (7) obj. -14.9949 iterations 0
Cbc0038I Pass  29: suminf.    1.09672 (5) obj. -14.9949 iterations 13
Cbc0038I Pass  30: suminf.    0.79940 (4) obj. -14.9949 iterations 4
Cbc0038I Pass  31: suminf.    1.68120 (4) obj. -14.9949 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -11.5888 to -12.9814 (0.12 seconds)
Cbc0038I Round again with cutoff of -21.1258
Cbc0038I Pass  31: suminf.    3.44816 (13) obj. -21.1258 iterations 5
Cbc0038I Pass  32: suminf.    1.27984 (6) obj. -21.1258 iterations 21
Cbc0038I Pass  33: suminf.    1.95741 (6) obj. -21.1258 iterations 10
Cbc0038I Pass  34: suminf.    1.04063 (4) obj. -21.1258 iterations 2
Cbc0038I Pass  35: suminf.    1.04063 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  36: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  37: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  38: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  39: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  40: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  41: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  42: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  43: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  44: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  45: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  46: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  47: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  48: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  49: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  50: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  51: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  52: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  53: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  54: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  55: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  56: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  57: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  58: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  59: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  60: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 88 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -12.9814 - took 0.15 seconds
Cbc0012I Integer solution of -12.98145 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 86 rows 48 columns
Cbc0031I 23 added rows had average density of 66.608696
Cbc0013I At root node, 23 cuts changed objective from -45.649359 to -36.701057 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11141 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.98145 best solution, best possible -36.701057 (1.00 seconds)
Cbc0012I Integer solution of -13.152073 found by DiveCoefficient after 7572 iterations and 9 nodes (1.18 seconds)
Cbc0012I Integer solution of -14.728213 found by rounding after 8197 iterations and 28 nodes (1.26 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 15 rows 13 columns
Cbc0016I Integer solution of -14.824153 found by strong branching after 9732 iterations and 91 nodes (1.37 seconds)
Cbc0001I Search completed - best objective -14.824153, took 10159 iterations and 100 nodes (1.38 seconds)
Cbc0032I Strong branching done 1000 times (20061 iterations), fathomed 9 nodes and fixed 51 variables
Cbc0035I Maximum depth 31, 192 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.40

