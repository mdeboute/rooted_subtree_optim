Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 23 (-40) rows, 15 (-17) columns and 58 (-119) elements
Clp0000I Optimal - objective value 222.92288
Coin0511I After Postsolve, objective 222.92288, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 222.9228771 - 15 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 23 rows, 15 columns (14 integer (14 of which binary)) and 58 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.19928
Cbc0038I Pass   1: suminf.    0.80556 (2) obj. -203.111 iterations 11
Cbc0038I Pass   2: suminf.    0.48333 (1) obj. -198.283 iterations 4
Cbc0038I Solution found of -174
Cbc0038I Relaxing continuous gives -174
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -179.792
Cbc0038I Pass   3: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass   4: suminf.    0.48333 (1) obj. -198.283 iterations 3
Cbc0038I Pass   5: suminf.    0.06034 (1) obj. -179.792 iterations 2
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -198 iterations 1
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -198 iterations 2
Cbc0038I Pass   8: suminf.    0.61941 (3) obj. -179.792 iterations 6
Cbc0038I Pass   9: suminf.    0.61941 (3) obj. -179.792 iterations 0
Cbc0038I Pass  10: suminf.    0.51301 (4) obj. -179.792 iterations 5
Cbc0038I Pass  11: suminf.    0.18586 (2) obj. -179.792 iterations 2
Cbc0038I Pass  12: suminf.    0.40681 (3) obj. -179.792 iterations 3
Cbc0038I Pass  13: suminf.    0.62599 (2) obj. -179.792 iterations 4
Cbc0038I Pass  14: suminf.    0.62599 (2) obj. -179.792 iterations 1
Cbc0038I Pass  15: suminf.    0.88619 (3) obj. -179.792 iterations 3
Cbc0038I Pass  16: suminf.    0.44860 (2) obj. -179.792 iterations 4
Cbc0038I Pass  17: suminf.    0.44860 (2) obj. -179.792 iterations 1
Cbc0038I Pass  18: suminf.    0.80181 (3) obj. -179.792 iterations 3
Cbc0038I Pass  19: suminf.    1.20803 (5) obj. -179.792 iterations 2
Cbc0038I Pass  20: suminf.    1.17385 (4) obj. -179.792 iterations 1
Cbc0038I Pass  21: suminf.    0.98501 (4) obj. -179.792 iterations 2
Cbc0038I Pass  22: suminf.    0.46384 (2) obj. -179.792 iterations 2
Cbc0038I Pass  23: suminf.    0.52498 (3) obj. -179.792 iterations 4
Cbc0038I Pass  24: suminf.    0.41696 (3) obj. -179.792 iterations 1
Cbc0038I Pass  25: suminf.    0.68562 (3) obj. -179.792 iterations 1
Cbc0038I Pass  26: suminf.    0.84952 (3) obj. -179.792 iterations 4
Cbc0038I Pass  27: suminf.    0.89160 (4) obj. -179.792 iterations 8
Cbc0038I Pass  28: suminf.    0.88081 (4) obj. -179.792 iterations 4
Cbc0038I Pass  29: suminf.    0.27100 (2) obj. -179.792 iterations 5
Cbc0038I Pass  30: suminf.    0.27100 (2) obj. -179.792 iterations 0
Cbc0038I Pass  31: suminf.    0.57637 (3) obj. -179.792 iterations 3
Cbc0038I Pass  32: suminf.    0.57637 (3) obj. -179.792 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -174 to -175 (0.01 seconds)
Cbc0038I Round again with cutoff of -188.418
Cbc0038I Pass  32: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass  33: suminf.    0.48333 (1) obj. -198.283 iterations 3
Cbc0038I Pass  34: suminf.    0.15019 (1) obj. -188.418 iterations 2
Cbc0038I Pass  35: suminf.    0.25000 (1) obj. -198 iterations 1
Cbc0038I Pass  36: suminf.    0.22850 (3) obj. -188.418 iterations 3
Cbc0038I Pass  37: suminf.    0.22850 (3) obj. -188.418 iterations 0
Cbc0038I Pass  38: suminf.    0.54364 (5) obj. -188.418 iterations 5
Cbc0038I Pass  39: suminf.    0.54364 (5) obj. -188.418 iterations 0
Cbc0038I Pass  40: suminf.    1.72908 (5) obj. -188.418 iterations 3
Cbc0038I Pass  41: suminf.    1.94889 (6) obj. -188.418 iterations 3
Cbc0038I Pass  42: suminf.    0.25915 (2) obj. -188.418 iterations 5
Cbc0038I Pass  43: suminf.    0.06619 (2) obj. -188.418 iterations 3
Cbc0038I Pass  44: suminf.    0.50060 (3) obj. -188.418 iterations 2
Cbc0038I Pass  45: suminf.    1.27535 (6) obj. -188.418 iterations 7
Cbc0038I Pass  46: suminf.    0.54174 (3) obj. -188.418 iterations 6
Cbc0038I Pass  47: suminf.    1.39448 (4) obj. -188.418 iterations 4
Cbc0038I Pass  48: suminf.    0.69612 (3) obj. -188.418 iterations 4
Cbc0038I Pass  49: suminf.    0.68644 (4) obj. -188.418 iterations 1
Cbc0038I Pass  50: suminf.    0.54364 (5) obj. -188.418 iterations 4
Cbc0038I Pass  51: suminf.    1.72908 (5) obj. -188.418 iterations 3
Cbc0038I Pass  52: suminf.    1.71187 (5) obj. -188.418 iterations 1
Cbc0038I Pass  53: suminf.    1.67943 (5) obj. -188.418 iterations 1
Cbc0038I Pass  54: suminf.    0.63036 (4) obj. -188.418 iterations 3
Cbc0038I Pass  55: suminf.    0.55433 (5) obj. -188.418 iterations 1
Cbc0038I Pass  56: suminf.    1.71187 (5) obj. -188.418 iterations 3
Cbc0038I Pass  57: suminf.    3.15963 (10) obj. -188.418 iterations 12
Cbc0038I Pass  58: suminf.    2.35173 (7) obj. -188.418 iterations 4
Cbc0038I Pass  59: suminf.    0.34541 (6) obj. -188.418 iterations 7
Cbc0038I Pass  60: suminf.    0.34541 (6) obj. -188.418 iterations 0
Cbc0038I Pass  61: suminf.    1.46514 (5) obj. -188.418 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -175 to -184 (0.01 seconds)
Cbc0038I Round again with cutoff of -198.77
Cbc0038I Pass  61: suminf.    0.80556 (2) obj. -203.111 iterations 0
Cbc0038I Pass  62: suminf.    0.48693 (2) obj. -198.77 iterations 3
Cbc0038I Pass  63: suminf.    0.43100 (3) obj. -198.77 iterations 3
Cbc0038I Pass  64: suminf.    0.26543 (2) obj. -198.77 iterations 2
Cbc0038I Pass  65: suminf.    0.74746 (3) obj. -198.77 iterations 2
Cbc0038I Pass  66: suminf.    3.66123 (10) obj. -198.77 iterations 8
Cbc0038I Pass  67: suminf.    1.07314 (6) obj. -198.77 iterations 5
Cbc0038I Pass  68: suminf.    1.07314 (6) obj. -198.77 iterations 0
Cbc0038I Pass  69: suminf.    2.07011 (5) obj. -198.77 iterations 5
Cbc0038I Pass  70: suminf.    1.09719 (5) obj. -198.77 iterations 3
Cbc0038I Pass  71: suminf.    1.79295 (9) obj. -198.77 iterations 7
Cbc0038I Pass  72: suminf.    1.37593 (6) obj. -198.77 iterations 3
Cbc0038I Pass  73: suminf.    1.37593 (6) obj. -198.77 iterations 1
Cbc0038I Pass  74: suminf.    1.80617 (5) obj. -198.77 iterations 3
Cbc0038I Pass  75: suminf.    1.73940 (5) obj. -198.77 iterations 1
Cbc0038I Pass  76: suminf.    0.23852 (2) obj. -198.77 iterations 4
Cbc0038I Pass  77: suminf.    0.58725 (3) obj. -198.77 iterations 3
Cbc0038I Pass  78: suminf.    0.44682 (2) obj. -198.77 iterations 2
Cbc0038I Pass  79: suminf.    0.83500 (3) obj. -198.77 iterations 2
Cbc0038I Pass  80: suminf.    2.17488 (7) obj. -198.77 iterations 6
Cbc0038I Pass  81: suminf.    1.10039 (4) obj. -198.77 iterations 3
Cbc0038I Pass  82: suminf.    1.05520 (4) obj. -198.77 iterations 1
Cbc0038I Pass  83: suminf.    0.26543 (2) obj. -198.77 iterations 2
Cbc0038I Pass  84: suminf.    0.74746 (3) obj. -198.77 iterations 2
Cbc0038I Pass  85: suminf.    1.74853 (6) obj. -198.77 iterations 6
Cbc0038I Pass  86: suminf.    1.07314 (6) obj. -198.77 iterations 5
Cbc0038I Pass  87: suminf.    1.07314 (6) obj. -198.77 iterations 1
Cbc0038I Pass  88: suminf.    2.07011 (5) obj. -198.77 iterations 5
Cbc0038I Pass  89: suminf.    1.09719 (5) obj. -198.77 iterations 3
Cbc0038I Pass  90: suminf.    1.09719 (5) obj. -198.77 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 15 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -184 - took 0.04 seconds
Cbc0012I Integer solution of -184 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 4 added rows had average density of 3.75
Cbc0013I At root node, 17 cuts changed objective from -222.92288 to -180.19486 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.5 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -184, took 3 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

