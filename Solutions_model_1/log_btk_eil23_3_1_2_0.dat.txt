Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 18 fixed columns
Coin0506I Presolve 4 (-34) rows, 3 (-19) columns and 8 (-104) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 10529.18
Clp0000I Optimal - objective value 10529.18
Coin0511I After Postsolve, objective 10529.18, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 10529.18
Clp0000I Optimal - objective value 10529.18
Clp0000I Optimal - objective value 10529.18
Coin0511I After Postsolve, objective 10529.18, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10529.17964 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.848%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.238095
Cbc0038I Pass   1: suminf.    0.08501 (1) obj. -10259.4 iterations 3
Cbc0038I Solution found of -5041.77
Cbc0038I Relaxing continuous gives -5052.61
Cbc0038I Rounding solution of -5318.72 is better than previous of -5052.61

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -5815.8
Cbc0038I Pass   2: suminf.    0.08501 (1) obj. -10259.4 iterations 0
Cbc0038I Pass   3: suminf.    0.13384 (1) obj. -5815.8 iterations 2
Cbc0038I Pass   4: suminf.    0.35141 (3) obj. -5815.8 iterations 7
Cbc0038I Pass   5: suminf.    0.35141 (3) obj. -5815.8 iterations 2
Cbc0038I Pass   6: suminf.    0.17001 (1) obj. -9879.12 iterations 6
Cbc0038I Pass   7: suminf.    0.11695 (1) obj. -5815.8 iterations 2
Cbc0038I Pass   8: suminf.    0.26129 (2) obj. -5815.8 iterations 2
Cbc0038I Pass   9: suminf.    0.26129 (2) obj. -5815.8 iterations 0
Cbc0038I Pass  10: suminf.    0.08501 (1) obj. -10259.4 iterations 3
Cbc0038I Pass  11: suminf.    0.13384 (1) obj. -5815.8 iterations 2
Cbc0038I Pass  12: suminf.    0.11361 (1) obj. -5815.8 iterations 2
Cbc0038I Pass  13: suminf.    0.30942 (1) obj. -9105.87 iterations 1
Cbc0038I Pass  14: suminf.    0.11361 (1) obj. -5815.8 iterations 1
Cbc0038I Pass  15: suminf.    0.42262 (4) obj. -5815.8 iterations 6
Cbc0038I Pass  16: suminf.    0.42262 (4) obj. -5815.8 iterations 0
Cbc0038I Pass  17: suminf.    0.41142 (1) obj. -8504.47 iterations 4
Cbc0038I Pass  18: suminf.    0.11707 (1) obj. -5815.8 iterations 1
Cbc0038I Pass  19: suminf.    0.11550 (3) obj. -5815.8 iterations 9
Cbc0038I Pass  20: suminf.    0.11550 (3) obj. -5815.8 iterations 1
Cbc0038I Pass  21: suminf.    0.14655 (1) obj. -6344.43 iterations 3
Cbc0038I Pass  22: suminf.    0.05385 (1) obj. -5815.8 iterations 1
Cbc0038I Pass  23: suminf.    0.09511 (2) obj. -5815.8 iterations 3
Cbc0038I Pass  24: suminf.    0.09511 (2) obj. -5815.8 iterations 1
Cbc0038I Pass  25: suminf.    0.08705 (1) obj. -6058.32 iterations 2
Cbc0038I Pass  26: suminf.    0.04452 (1) obj. -5815.8 iterations 1
Cbc0038I Pass  27: suminf.    0.04697 (1) obj. -5815.8 iterations 3
Cbc0038I Pass  28: suminf.    0.04697 (1) obj. -5815.8 iterations 1
Cbc0038I Pass  29: suminf.    0.16525 (1) obj. -6490.27 iterations 1
Cbc0038I Pass  30: suminf.    0.14810 (2) obj. -5815.8 iterations 6
Cbc0038I Pass  31: suminf.    0.14810 (2) obj. -5815.8 iterations 1
Cbc0038I Rounding solution of -5715.43 is better than previous of -5318.72

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6710.55
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.08501 (1) obj. -10259.4 iterations 0
Cbc0038I Pass  32: suminf.    0.29075 (1) obj. -6710.55 iterations 2
Cbc0038I Pass  33: suminf.    0.74473 (3) obj. -6710.55 iterations 6
Cbc0038I Pass  34: suminf.    0.29836 (1) obj. -6710.55 iterations 3
Cbc0038I Pass  35: suminf.    0.34342 (1) obj. -8753.25 iterations 1
Cbc0038I Pass  36: suminf.    0.94991 (4) obj. -6710.55 iterations 9
Cbc0038I Pass  37: suminf.    0.94991 (4) obj. -6710.55 iterations 3
Cbc0038I Pass  38: suminf.    0.27576 (1) obj. -6896.89 iterations 4
Cbc0038I Pass  39: suminf.    0.24308 (1) obj. -6710.55 iterations 1
Cbc0038I Pass  40: suminf.    1.21919 (5) obj. -6710.55 iterations 8
Cbc0038I Pass  41: suminf.    0.41823 (1) obj. -8507.11 iterations 4
Cbc0038I Pass  42: suminf.    0.26672 (1) obj. -6710.55 iterations 1
Cbc0038I Pass  43: suminf.    0.48688 (2) obj. -6710.55 iterations 8
Cbc0038I Pass  44: suminf.    0.48688 (2) obj. -6710.55 iterations 2
Cbc0038I Pass  45: suminf.    0.44883 (1) obj. -8479.14 iterations 2
Cbc0038I Pass  46: suminf.    0.24102 (1) obj. -6710.55 iterations 1
Cbc0038I Pass  47: suminf.    0.83236 (4) obj. -6710.55 iterations 4
Cbc0038I Pass  48: suminf.    0.83236 (4) obj. -6710.55 iterations 1
Cbc0038I Pass  49: suminf.    0.44917 (1) obj. -7940.74 iterations 3
Cbc0038I Pass  50: suminf.    0.23343 (1) obj. -6710.55 iterations 1
Cbc0038I Pass  51: suminf.    0.51412 (2) obj. -6710.55 iterations 6
Cbc0038I Pass  52: suminf.    0.28732 (1) obj. -9240.17 iterations 2
Cbc0038I Pass  53: suminf.    0.26907 (1) obj. -6710.55 iterations 1
Cbc0038I Pass  54: suminf.    0.25139 (1) obj. -6710.55 iterations 4
Cbc0038I Pass  55: suminf.    0.25139 (1) obj. -6710.55 iterations 1
Cbc0038I Pass  56: suminf.    0.39816 (1) obj. -7547.5 iterations 1
Cbc0038I Pass  57: suminf.    0.70678 (3) obj. -6710.55 iterations 3
Cbc0038I Pass  58: suminf.    0.70678 (3) obj. -6710.55 iterations 0
Cbc0038I Pass  59: suminf.    0.37776 (1) obj. -7435.29 iterations 2
Cbc0038I Pass  60: suminf.    0.25067 (1) obj. -6710.55 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5715.43 - took 0.03 seconds
Cbc0012I Integer solution of -5715.43 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5724.305 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -5732.605 found by DiveCoefficient after 846 iterations and 0 nodes (0.11 seconds)
Cbc0031I 12 added rows had average density of 16.25
Cbc0013I At root node, 12 cuts changed objective from -10289.562 to -5800.5792 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 338 row cuts average 5.1 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 223 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -5749.355 found by DiveCoefficient after 849 iterations and 1 nodes (0.12 seconds)
Cbc0016I Integer solution of -5769.605 found by strong branching after 1054 iterations and 5 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -5769.605, took 1138 iterations and 12 nodes (0.14 seconds)
Cbc0032I Strong branching done 94 times (542 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.14

