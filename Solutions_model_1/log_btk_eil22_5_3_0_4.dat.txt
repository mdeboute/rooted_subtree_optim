Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-23) rows, 14 (-10) columns and 69 (-60) elements
Clp1000I sum of infeasibilities 7.26042e-06 - average 3.02517e-07, 4 fixed columns
Coin0506I Presolve 12 (-12) rows, 8 (-6) columns and 34 (-35) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 160.79155
Clp0000I Optimal - objective value 160.79155
Coin0511I After Postsolve, objective 160.79155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 160.79155
Clp0000I Optimal - objective value 160.79155
Clp0000I Optimal - objective value 160.79155
Coin0511I After Postsolve, objective 160.79155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 160.7915479 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 14 columns (13 integer (13 of which binary)) and 74 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.00978
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -129.5 iterations 5
Cbc0038I Solution found of -129.5
Cbc0038I Relaxing continuous gives -129.5
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 14 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -132.771
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04811 (1) obj. -132.771 iterations 1
Cbc0038I Pass   3: suminf.    0.38095 (1) obj. -155.405 iterations 1
Cbc0038I Pass   4: suminf.    0.63192 (2) obj. -132.771 iterations 2
Cbc0038I Pass   5: suminf.    0.57493 (2) obj. -132.771 iterations 1
Cbc0038I Pass   6: suminf.    0.58769 (3) obj. -132.771 iterations 1
Cbc0038I Pass   7: suminf.    0.57493 (2) obj. -132.771 iterations 1
Cbc0038I Pass   8: suminf.    0.57493 (2) obj. -132.771 iterations 0
Cbc0038I Pass   9: suminf.    0.57493 (2) obj. -132.771 iterations 2
Cbc0038I Pass  10: suminf.    0.38095 (1) obj. -132.771 iterations 3
Cbc0038I Pass  11: suminf.    0.04811 (1) obj. -132.771 iterations 3
Cbc0038I Pass  12: suminf.    0.49907 (2) obj. -132.771 iterations 3
Cbc0038I Pass  13: suminf.    0.47086 (2) obj. -132.771 iterations 1
Cbc0038I Pass  14: suminf.    0.68464 (2) obj. -132.771 iterations 1
Cbc0038I Pass  15: suminf.    0.91120 (4) obj. -132.771 iterations 2
Cbc0038I Pass  16: suminf.    0.57413 (3) obj. -132.771 iterations 1
Cbc0038I Pass  17: suminf.    0.95959 (4) obj. -132.771 iterations 4
Cbc0038I Pass  18: suminf.    0.70905 (3) obj. -132.771 iterations 1
Cbc0038I Pass  19: suminf.    0.47086 (2) obj. -132.771 iterations 4
Cbc0038I Pass  20: suminf.    0.68464 (2) obj. -132.771 iterations 1
Cbc0038I Pass  21: suminf.    1.38695 (4) obj. -132.771 iterations 3
Cbc0038I Pass  22: suminf.    0.68464 (2) obj. -132.771 iterations 4
Cbc0038I Pass  23: suminf.    0.68464 (2) obj. -132.771 iterations 1
Cbc0038I Pass  24: suminf.    0.47086 (2) obj. -132.771 iterations 1
Cbc0038I Pass  25: suminf.    0.68464 (2) obj. -132.771 iterations 1
Cbc0038I Pass  26: suminf.    1.19277 (3) obj. -132.771 iterations 2
Cbc0038I Pass  27: suminf.    0.68464 (2) obj. -132.771 iterations 2
Cbc0038I Pass  28: suminf.    0.04811 (1) obj. -132.771 iterations 4
Cbc0038I Pass  29: suminf.    0.38095 (1) obj. -155.405 iterations 1
Cbc0038I Pass  30: suminf.    0.04811 (1) obj. -132.771 iterations 1
Cbc0038I Pass  31: suminf.    0.72283 (2) obj. -132.771 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 14 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -129.5 - took 0.01 seconds
Cbc0012I Integer solution of -129.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 14 columns, reduced to 7 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -157.7149 to -157.7149 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -129.5, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

