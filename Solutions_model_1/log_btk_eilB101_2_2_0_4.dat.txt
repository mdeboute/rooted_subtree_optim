Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 158 (-47) rows, 88 (-15) columns and 485 (-118) elements
Clp1000I sum of infeasibilities 2.66551e-06 - average 1.68703e-08, 83 fixed columns
Coin0506I Presolve 6 (-152) rows, 5 (-83) columns and 16 (-469) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 23776.544
Clp0000I Optimal - objective value 23776.544
Coin0511I After Postsolve, objective 23776.544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20720085 - largest nonzero change 0 ( 0%) - largest zero change 2.9610069e-05
Clp0000I Optimal - objective value 23776.544
Clp0000I Optimal - objective value 23776.544
Clp0000I Optimal - objective value 23776.544
Coin0511I After Postsolve, objective 23776.544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 23776.54446 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 158 rows, 88 columns (87 integer (87 of which binary)) and 486 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.014%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.565443
Cbc0038I Pass   1: suminf.    0.50398 (2) obj. -23613.9 iterations 11
Cbc0038I Solution found of -16553.6
Cbc0038I Relaxing continuous gives -16553.6
Cbc0038I Rounding solution of -20126.5 is better than previous of -16553.6

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 88 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -20126.5 to -22748.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -22851.5
Cbc0038I Reduced cost fixing fixed 55 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50398 (2) obj. -23613.9 iterations 0
Cbc0038I Pass   3: suminf.    0.48449 (2) obj. -22851.5 iterations 1
Cbc0038I Pass   4: suminf.    0.36679 (2) obj. -22851.5 iterations 2
Cbc0038I Pass   5: suminf.    0.75000 (2) obj. -23117.1 iterations 5
Cbc0038I Pass   6: suminf.    1.06247 (5) obj. -22851.5 iterations 12
Cbc0038I Pass   7: suminf.    0.75766 (3) obj. -22851.5 iterations 7
Cbc0038I Pass   8: suminf.    1.10827 (4) obj. -22851.5 iterations 9
Cbc0038I Pass   9: suminf.    0.68940 (2) obj. -22851.5 iterations 4
Cbc0038I Pass  10: suminf.    0.75766 (3) obj. -22851.5 iterations 5
Cbc0038I Pass  11: suminf.    0.54815 (2) obj. -22851.5 iterations 10
Cbc0038I Pass  12: suminf.    0.54815 (2) obj. -22851.5 iterations 1
Cbc0038I Pass  13: suminf.    0.52238 (2) obj. -22851.5 iterations 5
Cbc0038I Pass  14: suminf.    0.49138 (2) obj. -22851.5 iterations 5
Cbc0038I Pass  15: suminf.    1.33275 (3) obj. -22851.5 iterations 6
Cbc0038I Pass  16: suminf.    0.49138 (2) obj. -22851.5 iterations 6
Cbc0038I Pass  17: suminf.    1.02884 (4) obj. -22851.5 iterations 15
Cbc0038I Pass  18: suminf.    0.45268 (2) obj. -22851.5 iterations 8
Cbc0038I Pass  19: suminf.    0.42987 (2) obj. -22851.5 iterations 8
Cbc0038I Pass  20: suminf.    0.88112 (5) obj. -22851.5 iterations 11
Cbc0038I Pass  21: suminf.    0.74004 (3) obj. -22851.5 iterations 7
Cbc0038I Pass  22: suminf.    0.45268 (2) obj. -22851.5 iterations 7
Cbc0038I Pass  23: suminf.    0.57807 (4) obj. -22851.5 iterations 5
Cbc0038I Pass  24: suminf.    0.92660 (4) obj. -22851.5 iterations 13
Cbc0038I Pass  25: suminf.    1.47284 (5) obj. -22851.5 iterations 14
Cbc0038I Pass  26: suminf.    0.33722 (2) obj. -22851.5 iterations 10
Cbc0038I Pass  27: suminf.    0.84023 (3) obj. -22851.5 iterations 5
Cbc0038I Pass  28: suminf.    0.84023 (3) obj. -22851.5 iterations 2
Cbc0038I Pass  29: suminf.    1.71793 (5) obj. -22851.5 iterations 9
Cbc0038I Pass  30: suminf.    1.40712 (6) obj. -22851.5 iterations 10
Cbc0038I Pass  31: suminf.    0.61346 (4) obj. -22851.5 iterations 15
Cbc0038I Rounding solution of -23063.7 is better than previous of -22748.7

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 88 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -23063.7 to -23101.9 (0.02 seconds)
Cbc0038I Round again with cutoff of -23236.8
Cbc0038I Reduced cost fixing fixed 65 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.50398 (2) obj. -23613.9 iterations 0
Cbc0038I Pass  32: suminf.    0.61456 (2) obj. -23236.8 iterations 1
Cbc0038I Pass  33: suminf.    0.04449 (4) obj. -23236.8 iterations 6
Cbc0038I Pass  34: suminf.    0.04449 (4) obj. -23236.8 iterations 0
Cbc0038I Pass  35: suminf.    0.71180 (5) obj. -23236.8 iterations 20
Cbc0038I Pass  36: suminf.    0.44191 (4) obj. -23236.8 iterations 1
Cbc0038I Pass  37: suminf.    0.73462 (3) obj. -23236.8 iterations 10
Cbc0038I Pass  38: suminf.    0.59992 (2) obj. -23236.8 iterations 2
Cbc0038I Pass  39: suminf.    0.79154 (3) obj. -23236.8 iterations 2
Cbc0038I Pass  40: suminf.    1.24084 (6) obj. -23236.8 iterations 6
Cbc0038I Pass  41: suminf.    0.66023 (3) obj. -23236.8 iterations 4
Cbc0038I Pass  42: suminf.    0.57587 (2) obj. -23236.8 iterations 2
Cbc0038I Pass  43: suminf.    0.63436 (2) obj. -23236.8 iterations 1
Cbc0038I Pass  44: suminf.    0.45030 (3) obj. -23236.8 iterations 7
Cbc0038I Pass  45: suminf.    0.24846 (3) obj. -23236.8 iterations 3
Cbc0038I Pass  46: suminf.    1.51685 (4) obj. -23236.8 iterations 7
Cbc0038I Pass  47: suminf.    0.79154 (3) obj. -23236.8 iterations 3
Cbc0038I Pass  48: suminf.    0.59992 (2) obj. -23236.8 iterations 3
Cbc0038I Pass  49: suminf.    0.87173 (3) obj. -23236.8 iterations 2
Cbc0038I Pass  50: suminf.    0.59992 (2) obj. -23236.8 iterations 2
Cbc0038I Pass  51: suminf.    0.59992 (2) obj. -23236.8 iterations 6
Cbc0038I Pass  52: suminf.    0.04449 (4) obj. -23236.8 iterations 15
Cbc0038I Pass  53: suminf.    0.04449 (4) obj. -23236.8 iterations 2
Cbc0038I Pass  54: suminf.    0.71180 (5) obj. -23236.8 iterations 18
Cbc0038I Pass  55: suminf.    0.44191 (4) obj. -23236.8 iterations 1
Cbc0038I Pass  56: suminf.    0.73462 (3) obj. -23236.8 iterations 10
Cbc0038I Pass  57: suminf.    0.59992 (2) obj. -23236.8 iterations 2
Cbc0038I Pass  58: suminf.    0.79154 (3) obj. -23236.8 iterations 2
Cbc0038I Pass  59: suminf.    0.83589 (3) obj. -23236.8 iterations 6
Cbc0038I Pass  60: suminf.    0.83589 (3) obj. -23236.8 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 158 rows 88 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23101.9 - took 0.02 seconds
Cbc0012I Integer solution of -23101.898 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 158 rows 88 columns, reduced to 8 rows 6 columns
Cbc0031I 8 added rows had average density of 13
Cbc0013I At root node, 8 cuts changed objective from -23776.544 to -23510.204 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 2.4 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 86.3 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23101.898, took 155 iterations and 2 nodes (0.37 seconds)
Cbc0032I Strong branching done 20 times (110 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.37

