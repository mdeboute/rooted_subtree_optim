Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 21 (-4) columns and 110 (-25) elements
Clp1000I sum of infeasibilities 2.36991e-06 - average 6.23662e-08, 2 fixed columns
Coin0506I Presolve 31 (-7) rows, 19 (-2) columns and 92 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 3.1288597 - largest nonzero change 0 ( 0%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Coin0511I After Postsolve, objective 161.69355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Coin0511I After Postsolve, objective 161.69355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.6935457 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.980%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.76787
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.8727 iterations 21
Cbc0038I Solution found of 14.8727
Cbc0038I Relaxing continuous gives 14.8727
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 14.8727 to -77.3117 (0.03 seconds)
Cbc0038I Round again with cutoff of -84.3623
Cbc0038I Pass   2: suminf.    1.36918 (5) obj. -84.3623 iterations 7
Cbc0038I Pass   3: suminf.    1.36918 (5) obj. -84.3623 iterations 0
Cbc0038I Pass   4: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass   5: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass   6: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass   7: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass   8: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass   9: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  10: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  11: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  12: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  13: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  14: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  15: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass  16: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass  17: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  18: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  19: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  20: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  21: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  22: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  23: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass  24: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass  25: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  26: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  27: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  28: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  29: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  30: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  31: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -77.3117 - took 0.04 seconds
Cbc0012I Integer solution of -77.31167 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 11 added rows had average density of 10.636364
Cbc0013I At root node, 11 cuts changed objective from -147.81729 to -78.887624 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 980 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 587 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 134 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -77.31167000000005, took 1693 iterations and 14 nodes (0.18 seconds)
Cbc0032I Strong branching done 86 times (398 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

