Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 3.82687e-05 - average 7.57796e-08, 142 fixed columns
Coin0506I Presolve 215 (-290) rows, 119 (-143) columns and 645 (-857) elements
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 0.16768406 - largest nonzero change 0 ( 0%) - largest zero change 2.9227548e-05
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Coin0511I After Postsolve, objective 155.9043, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13376464 - largest nonzero change 0 ( 0%) - largest zero change 2.9755385e-05
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Coin0511I After Postsolve, objective 155.9043, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 155.9043009 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 11.3013
Cbc0038I Solution found of -9.45514
Cbc0038I Relaxing continuous gives -18.024
Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 107 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -18.024 to -73.9997 (0.08 seconds)
Cbc0038I Round again with cutoff of -82.1903
Cbc0038I Pass   1: suminf.    3.35040 (30) obj. -82.1903 iterations 189
Cbc0038I Pass   2: suminf.    2.85649 (10) obj. -82.1903 iterations 59
Cbc0038I Pass   3: suminf.    2.24942 (9) obj. -82.1903 iterations 12
Cbc0038I Pass   4: suminf.    2.46313 (8) obj. -82.1903 iterations 48
Cbc0038I Pass   5: suminf.    2.06933 (8) obj. -82.1903 iterations 15
Cbc0038I Pass   6: suminf.    2.74397 (9) obj. -82.1903 iterations 26
Cbc0038I Pass   7: suminf.    2.15284 (7) obj. -82.1903 iterations 7
Cbc0038I Pass   8: suminf.    1.80524 (7) obj. -82.1903 iterations 7
Cbc0038I Pass   9: suminf.    2.33681 (6) obj. -82.1903 iterations 39
Cbc0038I Pass  10: suminf.    1.82159 (6) obj. -82.1903 iterations 11
Cbc0038I Pass  11: suminf.    1.58613 (7) obj. -82.1903 iterations 29
Cbc0038I Pass  12: suminf.    1.54462 (7) obj. -82.1903 iterations 6
Cbc0038I Pass  13: suminf.    2.32221 (7) obj. -82.1903 iterations 25
Cbc0038I Pass  14: suminf.    1.58036 (7) obj. -82.1903 iterations 25
Cbc0038I Pass  15: suminf.    1.38839 (6) obj. -82.1903 iterations 5
Cbc0038I Pass  16: suminf.    1.87041 (9) obj. -82.1903 iterations 37
Cbc0038I Pass  17: suminf.    1.64414 (6) obj. -82.1903 iterations 11
Cbc0038I Pass  18: suminf.    2.58499 (8) obj. -82.1903 iterations 42
Cbc0038I Pass  19: suminf.    1.93632 (7) obj. -82.1903 iterations 1
Cbc0038I Pass  20: suminf.    2.09629 (9) obj. -82.1903 iterations 29
Cbc0038I Pass  21: suminf.    2.05586 (9) obj. -82.1903 iterations 3
Cbc0038I Pass  22: suminf.    3.16706 (9) obj. -82.1903 iterations 23
Cbc0038I Pass  23: suminf.    2.30747 (9) obj. -82.1903 iterations 12
Cbc0038I Pass  24: suminf.    2.30747 (9) obj. -82.1903 iterations 2
Cbc0038I Pass  25: suminf.    2.88635 (9) obj. -82.1903 iterations 40
Cbc0038I Pass  26: suminf.    2.37359 (8) obj. -82.1903 iterations 12
Cbc0038I Pass  27: suminf.    2.06933 (8) obj. -82.1903 iterations 19
Cbc0038I Pass  28: suminf.    2.74397 (9) obj. -82.1903 iterations 26
Cbc0038I Pass  29: suminf.    2.15284 (7) obj. -82.1903 iterations 7
Cbc0038I Pass  30: suminf.    1.80524 (7) obj. -82.1903 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 136 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -73.9997 to -75.4219 (0.17 seconds)
Cbc0038I Round again with cutoff of -96.9331
Cbc0038I Pass  30: suminf.    4.25668 (38) obj. -96.9331 iterations 9
Cbc0038I Pass  31: suminf.    3.73821 (11) obj. -96.9331 iterations 73
Cbc0038I Pass  32: suminf.    2.90004 (10) obj. -96.9331 iterations 47
Cbc0038I Pass  33: suminf.    3.42709 (9) obj. -96.9331 iterations 35
Cbc0038I Pass  34: suminf.    2.90866 (13) obj. -96.9331 iterations 25
Cbc0038I Pass  35: suminf.    3.54514 (12) obj. -96.9331 iterations 33
Cbc0038I Pass  36: suminf.    2.98835 (10) obj. -96.9331 iterations 7
Cbc0038I Pass  37: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  38: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  39: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  40: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  41: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  42: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  43: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  44: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  45: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  46: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  47: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  48: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  49: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  50: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  51: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  52: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  53: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  54: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  55: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  56: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  57: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  58: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  59: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 138 rows 80 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -75.4219 - took 0.23 seconds
Cbc0012I Integer solution of -75.4219 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 108 rows 64 columns
Cbc0031I 28 added rows had average density of 141.25
Cbc0013I At root node, 28 cuts changed objective from -155.9043 to -135.70914 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17217 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.422 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1743 row cuts average 259.3 elements, 0 column cuts (0 active)  in 0.318 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 252.1 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -75.4219 best solution, best possible -135.70914 (3.13 seconds)
Cbc0010I After 36 nodes, 12 on tree, -75.4219 best solution, best possible -135.70914 (3.84 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 12 columns
Cbc0012I Integer solution of -75.7902 found by RINS after 13174 iterations and 41 nodes (3.88 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -76.09019 found by rounding after 15556 iterations and 119 nodes (4.13 seconds)
Cbc0012I Integer solution of -78.098233 found by rounding after 19053 iterations and 240 nodes (4.42 seconds)
Cbc0010I After 269 nodes, 12 on tree, -78.098233 best solution, best possible -135.70914 (4.55 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -78.11832 found by rounding after 22416 iterations and 352 nodes (4.78 seconds)
Cbc0012I Integer solution of -78.78661 found by rounding after 22517 iterations and 354 nodes (4.79 seconds)
Cbc0012I Integer solution of -81.00763 found by rounding after 23465 iterations and 385 nodes (4.91 seconds)
Cbc0012I Integer solution of -81.0545 found by rounding after 23772 iterations and 395 nodes (4.93 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 0 rows 0 columns
Cbc0010I After 467 nodes, 11 on tree, -81.0545 best solution, best possible -135.70914 (5.26 seconds)
Cbc0001I Search completed - best objective -81.05449999999999, took 27810 iterations and 504 nodes (5.41 seconds)
Cbc0032I Strong branching done 3112 times (58184 iterations), fathomed 144 nodes and fixed 238 variables
Cbc0035I Maximum depth 51, 3599 variables fixed on reduced cost
Total time (CPU seconds):       5.26   (Wallclock seconds):       5.44

