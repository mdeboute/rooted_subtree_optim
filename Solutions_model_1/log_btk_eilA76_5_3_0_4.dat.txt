Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-35) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 3.36846e-06 - average 2.80705e-08, 58 fixed columns
Coin0506I Presolve 7 (-113) rows, 8 (-59) columns and 24 (-344) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 16625.29
Clp0000I Optimal - objective value 16625.29
Coin0511I After Postsolve, objective 16625.29, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9151119 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 16625.29
Clp0000I Optimal - objective value 16625.29
Clp0000I Optimal - objective value 16625.29
Coin0511I After Postsolve, objective 16625.29, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16625.29005 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 120 rows, 67 columns (66 integer (66 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.305%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.438911
Cbc0038I Pass   1: suminf.    0.29787 (2) obj. -16543.3 iterations 13
Cbc0038I Solution found of -11252.8
Cbc0038I Relaxing continuous gives -11253.8
Cbc0038I Rounding solution of -11257 is better than previous of -11253.8

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -11793.9
Cbc0038I Pass   2: suminf.    0.29787 (2) obj. -16543.3 iterations 0
Cbc0038I Pass   3: suminf.    0.17376 (2) obj. -11793.9 iterations 8
Cbc0038I Pass   4: suminf.    1.37538 (5) obj. -11793.9 iterations 17
Cbc0038I Pass   5: suminf.    0.67046 (4) obj. -11793.9 iterations 3
Cbc0038I Pass   6: suminf.    0.58391 (2) obj. -11793.9 iterations 5
Cbc0038I Pass   7: suminf.    0.44828 (1) obj. -13009.2 iterations 7
Cbc0038I Solution found of -12264
Cbc0038I Relaxing continuous gives -12264
Cbc0038I Rounding solution of -13099.6 is better than previous of -12264

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -13099.6 to -14567.7 (0.02 seconds)
Cbc0038I Round again with cutoff of -14979.3
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.29787 (2) obj. -16543.3 iterations 0
Cbc0038I Pass   9: suminf.    0.80138 (2) obj. -14979.3 iterations 6
Cbc0038I Pass  10: suminf.    0.87962 (3) obj. -14979.3 iterations 11
Cbc0038I Pass  11: suminf.    0.19231 (1) obj. -15929.5 iterations 6
Cbc0038I Solution found of -15541
Cbc0038I Relaxing continuous gives -15541
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15866.3
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 4
Cbc0038I Pass  12: suminf.    0.29787 (2) obj. -16543.3 iterations 0
Cbc0038I Pass  13: suminf.    0.51598 (2) obj. -15866.3 iterations 6
Cbc0038I Pass  14: suminf.    0.95903 (3) obj. -15866.3 iterations 11
Cbc0038I Pass  15: suminf.    2.09460 (5) obj. -15866.3 iterations 18
Cbc0038I Pass  16: suminf.    1.23817 (3) obj. -15866.3 iterations 11
Cbc0038I Pass  17: suminf.    0.98218 (3) obj. -15866.3 iterations 9
Cbc0038I Pass  18: suminf.    0.24854 (2) obj. -15866.3 iterations 5
Cbc0038I Pass  19: suminf.    0.04255 (2) obj. -16501 iterations 4
Cbc0038I Pass  20: suminf.    1.05054 (3) obj. -15866.3 iterations 10
Cbc0038I Pass  21: suminf.    0.58846 (2) obj. -15866.3 iterations 8
Cbc0038I Pass  22: suminf.    0.58846 (2) obj. -15866.3 iterations 6
Cbc0038I Pass  23: suminf.    0.58846 (2) obj. -15866.3 iterations 4
Cbc0038I Pass  24: suminf.    0.58846 (2) obj. -15866.3 iterations 4
Cbc0038I Pass  25: suminf.    0.52523 (2) obj. -15866.3 iterations 2
Cbc0038I Pass  26: suminf.    0.52523 (2) obj. -15866.3 iterations 6
Cbc0038I Pass  27: suminf.    0.98218 (3) obj. -15866.3 iterations 14
Cbc0038I Pass  28: suminf.    0.24854 (2) obj. -15866.3 iterations 6
Cbc0038I Pass  29: suminf.    0.04255 (2) obj. -16501 iterations 5
Cbc0038I Pass  30: suminf.    0.04255 (2) obj. -16501 iterations 3
Cbc0038I Pass  31: suminf.    0.04255 (2) obj. -16501 iterations 3
Cbc0038I Pass  32: suminf.    0.04255 (2) obj. -16501 iterations 2
Cbc0038I Pass  33: suminf.    0.32366 (3) obj. -15866.3 iterations 8
Cbc0038I Pass  34: suminf.    0.78429 (3) obj. -15866.3 iterations 16
Cbc0038I Pass  35: suminf.    0.58846 (2) obj. -15866.3 iterations 11
Cbc0038I Pass  36: suminf.    0.58846 (2) obj. -15866.3 iterations 6
Cbc0038I Pass  37: suminf.    1.90575 (5) obj. -15866.3 iterations 7
Cbc0038I Pass  38: suminf.    1.85000 (4) obj. -15866.3 iterations 1
Cbc0038I Pass  39: suminf.    1.23817 (3) obj. -15866.3 iterations 9
Cbc0038I Pass  40: suminf.    0.98218 (3) obj. -15866.3 iterations 7
Cbc0038I Pass  41: suminf.    0.24854 (2) obj. -15866.3 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 67 columns, reduced to 9 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15541 - took 0.02 seconds
Cbc0012I Integer solution of -15541.021 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 120 rows 67 columns, reduced to 5 rows 6 columns
Cbc0031I 7 added rows had average density of 12.428571
Cbc0013I At root node, 7 cuts changed objective from -16625.29 to -15744.451 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.9 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15541.021, took 138 iterations and 4 nodes (0.38 seconds)
Cbc0032I Strong branching done 38 times (142 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.39

