Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.78492e-06 - average 3.46733e-08, 11 fixed columns
Coin0506I Presolve 116 (-22) rows, 65 (-11) columns and 354 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Coin0511I After Postsolve, objective 62.063977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Coin0511I After Postsolve, objective 62.063977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.06397678 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 12.2594
Cbc0038I Solution found of 11.9736
Cbc0038I Relaxing continuous gives -2.88416
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.88416 to -26.3902 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.9576
Cbc0038I Pass   1: suminf.    4.83634 (34) obj. -29.9576 iterations 33
Cbc0038I Pass   2: suminf.    2.64792 (10) obj. -29.9576 iterations 36
Cbc0038I Pass   3: suminf.    2.64792 (10) obj. -29.9576 iterations 2
Cbc0038I Pass   4: suminf.    3.29116 (9) obj. -29.9576 iterations 17
Cbc0038I Pass   5: suminf.    2.00726 (7) obj. -29.9576 iterations 3
Cbc0038I Pass   6: suminf.    0.79731 (4) obj. -29.9576 iterations 6
Cbc0038I Pass   7: suminf.    0.79044 (4) obj. -29.9576 iterations 1
Cbc0038I Pass   8: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass   9: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  10: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  11: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  12: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  13: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  14: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  15: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  16: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  17: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  18: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  19: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  20: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  21: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  22: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  23: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  24: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  25: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  26: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  27: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  28: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  29: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  30: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -26.3902 to -26.9804 (0.10 seconds)
Cbc0038I Round again with cutoff of -36.3789
Cbc0038I Pass  30: suminf.    5.98342 (34) obj. -36.3789 iterations 0
Cbc0038I Pass  31: suminf.    2.10498 (7) obj. -36.3789 iterations 29
Cbc0038I Pass  32: suminf.    2.99436 (9) obj. -36.3789 iterations 9
Cbc0038I Pass  33: suminf.    2.99436 (9) obj. -36.3789 iterations 0
Cbc0038I Pass  34: suminf.    2.94115 (8) obj. -36.3789 iterations 7
Cbc0038I Pass  35: suminf.    2.70370 (7) obj. -36.3789 iterations 1
Cbc0038I Pass  36: suminf.    2.70370 (7) obj. -36.3789 iterations 0
Cbc0038I Pass  37: suminf.    2.50437 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  38: suminf.    2.50017 (7) obj. -36.3789 iterations 1
Cbc0038I Pass  39: suminf.    2.70266 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  40: suminf.    2.70266 (7) obj. -36.3789 iterations 0
Cbc0038I Pass  41: suminf.    2.28621 (13) obj. -36.3789 iterations 14
Cbc0038I Pass  42: suminf.    2.10960 (10) obj. -36.3789 iterations 7
Cbc0038I Pass  43: suminf.    4.24508 (13) obj. -36.3789 iterations 21
Cbc0038I Pass  44: suminf.    3.92226 (11) obj. -36.3789 iterations 2
Cbc0038I Pass  45: suminf.    3.14828 (8) obj. -36.3789 iterations 3
Cbc0038I Pass  46: suminf.    1.65841 (7) obj. -36.3789 iterations 3
Cbc0038I Pass  47: suminf.    1.54594 (6) obj. -36.3789 iterations 1
Cbc0038I Pass  48: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  49: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I Pass  50: suminf.    2.33901 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  51: suminf.    1.54594 (6) obj. -36.3789 iterations 3
Cbc0038I Pass  52: suminf.    1.54594 (6) obj. -36.3789 iterations 0
Cbc0038I Pass  53: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  54: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I Pass  55: suminf.    2.33901 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  56: suminf.    1.54594 (6) obj. -36.3789 iterations 3
Cbc0038I Pass  57: suminf.    1.54594 (6) obj. -36.3789 iterations 0
Cbc0038I Pass  58: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  59: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -26.9804 - took 0.14 seconds
Cbc0012I Integer solution of -26.980405 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 41 columns
Cbc0031I 32 added rows had average density of 62.59375
Cbc0013I At root node, 32 cuts changed objective from -62.063977 to -52.891958 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11388 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2109 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.980405 best solution, best possible -52.891958 (0.97 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 13 rows 18 columns
Cbc0038I Full problem 138 rows 76 columns, reduced to 20 rows 19 columns
Cbc0012I Integer solution of -27.049195 found by RINS after 9601 iterations and 91 nodes (1.24 seconds)
Cbc0012I Integer solution of -28.631955 found by rounding after 9771 iterations and 113 nodes (1.26 seconds)
Cbc0001I Search completed - best objective -28.631955, took 11346 iterations and 170 nodes (1.39 seconds)
Cbc0032I Strong branching done 1574 times (23311 iterations), fathomed 23 nodes and fixed 76 variables
Cbc0035I Maximum depth 30, 514 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.40

