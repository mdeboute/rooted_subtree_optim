Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 6.13939e-05 - average 4.61608e-07, 15 fixed columns
Coin0506I Presolve 105 (-28) rows, 61 (-15) columns and 325 (-85) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.25717936 - largest nonzero change 0 ( 0%) - largest zero change 2.855382e-05
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Coin0511I After Postsolve, objective 44.513845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Coin0511I After Postsolve, objective 44.513845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.51384505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.204%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.99271
Cbc0038I Solution found of -2.58158
Cbc0038I Relaxing continuous gives -12.623
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -12.623 to -13.9154 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.9741
Cbc0038I Pass   1: suminf.    0.84840 (35) obj. -16.9741 iterations 27
Cbc0038I Pass   2: suminf.    1.29194 (6) obj. -16.9741 iterations 41
Cbc0038I Pass   3: suminf.    0.98815 (5) obj. -16.9741 iterations 5
Cbc0038I Pass   4: suminf.    1.32373 (5) obj. -16.9741 iterations 8
Cbc0038I Pass   5: suminf.    0.69852 (6) obj. -16.9741 iterations 3
Cbc0038I Pass   6: suminf.    0.61125 (5) obj. -16.9741 iterations 1
Cbc0038I Pass   7: suminf.    0.88945 (3) obj. -16.9741 iterations 7
Cbc0038I Pass   8: suminf.    0.65211 (3) obj. -16.9741 iterations 4
Cbc0038I Pass   9: suminf.    0.25272 (2) obj. -16.9741 iterations 2
Cbc0038I Pass  10: suminf.    0.48825 (3) obj. -16.9741 iterations 4
Cbc0038I Pass  11: suminf.    0.47962 (2) obj. -16.9741 iterations 1
Cbc0038I Pass  12: suminf.    0.93750 (3) obj. -16.9741 iterations 2
Cbc0038I Pass  13: suminf.    1.11746 (6) obj. -16.9741 iterations 14
Cbc0038I Pass  14: suminf.    1.11746 (6) obj. -16.9741 iterations 2
Cbc0038I Pass  15: suminf.    1.63997 (7) obj. -16.9741 iterations 19
Cbc0038I Pass  16: suminf.    1.21105 (3) obj. -16.9741 iterations 14
Cbc0038I Pass  17: suminf.    0.94111 (3) obj. -16.9741 iterations 5
Cbc0038I Pass  18: suminf.    0.78933 (3) obj. -16.9741 iterations 3
Cbc0038I Pass  19: suminf.    1.40404 (5) obj. -16.9741 iterations 5
Cbc0038I Pass  20: suminf.    1.30905 (6) obj. -16.9741 iterations 5
Cbc0038I Pass  21: suminf.    1.89003 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  22: suminf.    1.32958 (6) obj. -16.9741 iterations 3
Cbc0038I Pass  23: suminf.    1.32958 (6) obj. -16.9741 iterations 0
Cbc0038I Pass  24: suminf.    1.80653 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  25: suminf.    1.38935 (5) obj. -16.9741 iterations 2
Cbc0038I Pass  26: suminf.    1.30905 (6) obj. -16.9741 iterations 1
Cbc0038I Pass  27: suminf.    1.89003 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  28: suminf.    1.32958 (6) obj. -16.9741 iterations 3
Cbc0038I Pass  29: suminf.    1.32958 (6) obj. -16.9741 iterations 0
Cbc0038I Pass  30: suminf.    1.80653 (5) obj. -16.9741 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 76 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -13.9154 to -14.5172 (0.06 seconds)
Cbc0038I Round again with cutoff of -22.4798
Cbc0038I Pass  30: suminf.    1.92191 (35) obj. -22.4798 iterations 0
Cbc0038I Pass  31: suminf.    0.85134 (6) obj. -22.4798 iterations 48
Cbc0038I Pass  32: suminf.    0.84763 (5) obj. -22.4798 iterations 2
Cbc0038I Pass  33: suminf.    1.16264 (6) obj. -22.4798 iterations 11
Cbc0038I Pass  34: suminf.    0.95984 (5) obj. -22.4798 iterations 2
Cbc0038I Pass  35: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  36: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  37: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  38: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  39: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  40: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  41: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  42: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  43: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  44: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  45: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  46: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  47: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  48: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  49: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  50: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  51: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  52: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  53: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  54: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  55: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  56: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  57: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  58: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  59: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -14.5172 - took 0.08 seconds
Cbc0012I Integer solution of -14.5172 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 61 rows 36 columns
Cbc0031I 35 added rows had average density of 45.514286
Cbc0013I At root node, 35 cuts changed objective from -44.502431 to -37.366759 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15356 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1656 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.5172 best solution, best possible -37.366759 (1.03 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 52 rows 34 columns
Cbc0038I Full problem 133 rows 76 columns, reduced to 9 rows 12 columns
Cbc0016I Integer solution of -14.69714 found by strong branching after 11515 iterations and 92 nodes (1.38 seconds)
Cbc0012I Integer solution of -14.80712 found by rounding after 12151 iterations and 149 nodes (1.43 seconds)
Cbc0001I Search completed - best objective -14.80712, took 12897 iterations and 168 nodes (1.45 seconds)
Cbc0032I Strong branching done 1192 times (20158 iterations), fathomed 14 nodes and fixed 69 variables
Cbc0035I Maximum depth 37, 363 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.47

