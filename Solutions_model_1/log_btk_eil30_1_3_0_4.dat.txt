Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 29 (-34) rows, 16 (-16) columns and 84 (-93) elements
Clp0000I Optimal - objective value 230.26835
Coin0511I After Postsolve, objective 230.26835, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 230.2683495 - 16 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 16 columns (15 integer (15 of which binary)) and 86 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.56988
Cbc0038I Pass   1: suminf.    0.26761 (2) obj. -168.613 iterations 8
Cbc0038I Solution found of -1.43662
Cbc0038I Relaxing continuous gives -16
Cbc0038I Rounding solution of -54.4366 is better than previous of -16

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 16 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -71.9249
Cbc0038I Pass   2: suminf.    0.26761 (2) obj. -168.613 iterations 0
Cbc0038I Pass   3: suminf.    0.39663 (1) obj. -71.9249 iterations 4
Cbc0038I Pass   4: suminf.    0.00806 (1) obj. -147.363 iterations 2
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -122 iterations 2
Cbc0038I Solution found of -122
Cbc0038I Relaxing continuous gives -122
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 16 columns, reduced to 17 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -142.464
Cbc0038I Pass   6: suminf.    0.26761 (2) obj. -168.613 iterations 0
Cbc0038I Pass   7: suminf.    0.20894 (2) obj. -142.464 iterations 4
Cbc0038I Pass   8: suminf.    0.00806 (1) obj. -147.363 iterations 2
Cbc0038I Pass   9: suminf.    1.14268 (3) obj. -142.464 iterations 7
Cbc0038I Pass  10: suminf.    1.14268 (3) obj. -142.464 iterations 1
Cbc0038I Pass  11: suminf.    0.85905 (2) obj. -168.902 iterations 2
Cbc0038I Pass  12: suminf.    0.55813 (2) obj. -142.464 iterations 1
Cbc0038I Pass  13: suminf.    0.83850 (3) obj. -142.464 iterations 5
Cbc0038I Pass  14: suminf.    0.83850 (3) obj. -142.464 iterations 0
Cbc0038I Pass  15: suminf.    0.75694 (3) obj. -142.464 iterations 2
Cbc0038I Pass  16: suminf.    0.75694 (3) obj. -142.464 iterations 0
Cbc0038I Pass  17: suminf.    0.85905 (2) obj. -142.464 iterations 1
Cbc0038I Pass  18: suminf.    0.55813 (2) obj. -142.464 iterations 1
Cbc0038I Pass  19: suminf.    0.55813 (2) obj. -142.464 iterations 0
Cbc0038I Pass  20: suminf.    1.12215 (4) obj. -142.464 iterations 6
Cbc0038I Pass  21: suminf.    0.82433 (3) obj. -142.464 iterations 1
Cbc0038I Pass  22: suminf.    0.55813 (2) obj. -142.464 iterations 3
Cbc0038I Pass  23: suminf.    0.67501 (2) obj. -142.464 iterations 4
Cbc0038I Pass  24: suminf.    0.67501 (2) obj. -142.464 iterations 0
Cbc0038I Pass  25: suminf.    0.27331 (1) obj. -142.464 iterations 2
Cbc0038I Pass  26: suminf.    0.23387 (1) obj. -148.024 iterations 1
Cbc0038I Pass  27: suminf.    1.01697 (3) obj. -142.464 iterations 6
Cbc0038I Pass  28: suminf.    0.82433 (3) obj. -142.464 iterations 1
Cbc0038I Pass  29: suminf.    0.82433 (3) obj. -142.464 iterations 0
Cbc0038I Pass  30: suminf.    0.55813 (2) obj. -142.464 iterations 3
Cbc0038I Pass  31: suminf.    0.55813 (2) obj. -142.464 iterations 0
Cbc0038I Pass  32: suminf.    0.85905 (2) obj. -168.902 iterations 1
Cbc0038I Pass  33: suminf.    0.68437 (2) obj. -142.464 iterations 1
Cbc0038I Pass  34: suminf.    0.85905 (2) obj. -168.902 iterations 1
Cbc0038I Pass  35: suminf.    1.44915 (4) obj. -195.173 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 16 columns, reduced to 21 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -122 - took 0.01 seconds
Cbc0012I Integer solution of -122 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -158 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 16 columns, reduced to 13 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 7.6666667
Cbc0013I At root node, 3 cuts changed objective from -220.32032 to -165.86328 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.2 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -158, took 14 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

