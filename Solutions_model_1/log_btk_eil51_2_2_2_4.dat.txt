Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 3.92628e-06 - average 4.3146e-08, 3 fixed columns
Coin0506I Presolve 85 (-6) rows, 48 (-3) columns and 258 (-18) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Coin0511I After Postsolve, objective 35.304621, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Coin0511I After Postsolve, objective 35.304621, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.30462065 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.20335
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.00462 iterations 38
Cbc0038I Solution found of 3.00462
Cbc0038I Relaxing continuous gives 3.00462
Cbc0038I Rounding solution of 0.59987 is better than previous of 3.00462

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 0.59987 to -3.58757 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.75937
Cbc0038I Pass   2: suminf.    1.54506 (13) obj. -6.75937 iterations 13
Cbc0038I Pass   3: suminf.    1.25659 (6) obj. -6.75937 iterations 18
Cbc0038I Pass   4: suminf.    1.24059 (7) obj. -6.75937 iterations 1
Cbc0038I Pass   5: suminf.    1.94235 (5) obj. -6.75937 iterations 11
Cbc0038I Pass   6: suminf.    1.77645 (6) obj. -6.75937 iterations 4
Cbc0038I Pass   7: suminf.    0.92532 (5) obj. -6.75937 iterations 5
Cbc0038I Pass   8: suminf.    0.89689 (5) obj. -6.75937 iterations 3
Cbc0038I Pass   9: suminf.    1.84279 (5) obj. -6.75937 iterations 8
Cbc0038I Pass  10: suminf.    1.67784 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  11: suminf.    1.53133 (5) obj. -6.75937 iterations 3
Cbc0038I Pass  12: suminf.    1.42778 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  13: suminf.    1.17041 (5) obj. -6.75937 iterations 8
Cbc0038I Pass  14: suminf.    2.18732 (6) obj. -6.75937 iterations 12
Cbc0038I Pass  15: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  16: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  17: suminf.    1.32094 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  18: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  19: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  20: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  21: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  22: suminf.    1.32094 (5) obj. -6.75937 iterations 6
Cbc0038I Pass  23: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  24: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  25: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  26: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  27: suminf.    1.32094 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  28: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  29: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  30: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  31: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -3.58757 - took 0.06 seconds
Cbc0012I Integer solution of -3.587572 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0031I 19 added rows had average density of 33.947368
Cbc0013I At root node, 19 cuts changed objective from -35.304621 to -24.791303 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8396 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1724 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 201 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0010I After 9 nodes, 10 on tree, -3.587572 best solution, best possible -24.791303 (0.68 seconds)
Cbc0012I Integer solution of -3.914414 found by rounding after 6929 iterations and 41 nodes (0.75 seconds)
Cbc0001I Search completed - best objective -3.914414000000001, took 7376 iterations and 58 nodes (0.76 seconds)
Cbc0032I Strong branching done 656 times (12972 iterations), fathomed 3 nodes and fixed 30 variables
Cbc0035I Maximum depth 21, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.77

