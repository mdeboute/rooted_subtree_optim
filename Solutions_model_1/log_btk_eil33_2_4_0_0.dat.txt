Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 32 (-3) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 0.00023244 - average 3.93966e-06, 5 fixed columns
Coin0506I Presolve 50 (-9) rows, 27 (-5) columns and 146 (-28) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 110.39902
Clp0000I Optimal - objective value 110.39902
Coin0511I After Postsolve, objective 110.39902, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 110.39902
Clp0000I Optimal - objective value 110.39902
Clp0000I Optimal - objective value 110.39902
Coin0511I After Postsolve, objective 110.39902, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 110.3990169 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 32 columns (31 integer (31 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.077%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.25199
Cbc0038I Pass   1: suminf.    0.75000 (2) obj. -57.5869 iterations 16
Cbc0038I Pass   2: suminf.    0.75000 (2) obj. -57.5869 iterations 0
Cbc0038I Solution found of -27.6937
Cbc0038I Relaxing continuous gives -27.6937
Cbc0038I Rounding solution of -43.8641 is better than previous of -27.6937

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 37 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -43.8641 to -46.0309 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.4678
Cbc0038I Pass   3: suminf.    0.75000 (2) obj. -57.5869 iterations 0
Cbc0038I Pass   4: suminf.    0.75000 (2) obj. -57.5869 iterations 0
Cbc0038I Pass   5: suminf.    0.61539 (2) obj. -52.4678 iterations 5
Cbc0038I Pass   6: suminf.    0.74465 (2) obj. -52.4678 iterations 2
Cbc0038I Pass   7: suminf.    1.57114 (8) obj. -52.4678 iterations 7
Cbc0038I Pass   8: suminf.    1.36402 (7) obj. -52.4678 iterations 5
Cbc0038I Pass   9: suminf.    1.84056 (6) obj. -52.4678 iterations 14
Cbc0038I Pass  10: suminf.    1.58896 (6) obj. -52.4678 iterations 2
Cbc0038I Pass  11: suminf.    0.36564 (2) obj. -52.4678 iterations 5
Cbc0038I Pass  12: suminf.    0.55227 (2) obj. -52.4678 iterations 2
Cbc0038I Pass  13: suminf.    0.31610 (1) obj. -52.4678 iterations 2
Cbc0038I Pass  14: suminf.    0.31610 (1) obj. -52.4678 iterations 0
Cbc0038I Pass  15: suminf.    0.41110 (1) obj. -52.4678 iterations 2
Cbc0038I Pass  16: suminf.    0.60281 (4) obj. -52.4678 iterations 11
Cbc0038I Pass  17: suminf.    0.28534 (2) obj. -52.4678 iterations 8
Cbc0038I Pass  18: suminf.    0.45345 (2) obj. -52.4678 iterations 4
Cbc0038I Pass  19: suminf.    0.45345 (2) obj. -52.4678 iterations 0
Cbc0038I Pass  20: suminf.    0.71051 (2) obj. -52.4678 iterations 3
Cbc0038I Pass  21: suminf.    1.14220 (5) obj. -52.4678 iterations 9
Cbc0038I Pass  22: suminf.    0.51512 (4) obj. -52.4678 iterations 5
Cbc0038I Pass  23: suminf.    1.33779 (4) obj. -52.4678 iterations 9
Cbc0038I Pass  24: suminf.    1.15312 (4) obj. -52.4678 iterations 1
Cbc0038I Pass  25: suminf.    0.45345 (2) obj. -52.4678 iterations 4
Cbc0038I Pass  26: suminf.    0.71051 (2) obj. -52.4678 iterations 3
Cbc0038I Pass  27: suminf.    1.96654 (6) obj. -52.4678 iterations 6
Cbc0038I Pass  28: suminf.    1.23067 (3) obj. -52.4678 iterations 2
Cbc0038I Pass  29: suminf.    0.88060 (4) obj. -52.4678 iterations 4
Cbc0038I Pass  30: suminf.    1.50512 (5) obj. -52.4678 iterations 9
Cbc0038I Pass  31: suminf.    1.01089 (3) obj. -52.4678 iterations 4
Cbc0038I Pass  32: suminf.    0.54122 (2) obj. -52.4678 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 51 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -46.0309 to -49.8561 (0.05 seconds)
Cbc0038I Round again with cutoff of -64.0541
Cbc0038I Pass  32: suminf.    0.78889 (3) obj. -64.0541 iterations 1
Cbc0038I Pass  33: suminf.    0.78889 (3) obj. -64.0541 iterations 0
Cbc0038I Pass  34: suminf.    1.22659 (5) obj. -64.0541 iterations 7
Cbc0038I Pass  35: suminf.    1.20260 (6) obj. -64.0541 iterations 3
Cbc0038I Pass  36: suminf.    0.42034 (4) obj. -64.0541 iterations 5
Cbc0038I Pass  37: suminf.    0.41773 (3) obj. -64.0541 iterations 1
Cbc0038I Pass  38: suminf.    0.72756 (8) obj. -64.0541 iterations 5
Cbc0038I Pass  39: suminf.    0.72756 (8) obj. -64.0541 iterations 0
Cbc0038I Pass  40: suminf.    2.68805 (9) obj. -64.0541 iterations 14
Cbc0038I Pass  41: suminf.    1.71176 (7) obj. -64.0541 iterations 3
Cbc0038I Pass  42: suminf.    0.66012 (3) obj. -64.0541 iterations 3
Cbc0038I Pass  43: suminf.    0.77239 (3) obj. -64.0541 iterations 4
Cbc0038I Pass  44: suminf.    0.77239 (3) obj. -64.0541 iterations 1
Cbc0038I Pass  45: suminf.    0.91996 (4) obj. -64.0541 iterations 3
Cbc0038I Pass  46: suminf.    1.80344 (5) obj. -64.0541 iterations 4
Cbc0038I Pass  47: suminf.    0.82148 (2) obj. -64.0541 iterations 3
Cbc0038I Pass  48: suminf.    1.78217 (7) obj. -64.0541 iterations 12
Cbc0038I Pass  49: suminf.    1.33345 (6) obj. -64.0541 iterations 2
Cbc0038I Pass  50: suminf.    1.77313 (7) obj. -64.0541 iterations 7
Cbc0038I Pass  51: suminf.    0.73436 (2) obj. -64.0541 iterations 4
Cbc0038I Pass  52: suminf.    0.84441 (2) obj. -64.0541 iterations 1
Cbc0038I Pass  53: suminf.    0.84441 (2) obj. -64.0541 iterations 0
Cbc0038I Pass  54: suminf.    0.86007 (4) obj. -64.0541 iterations 2
Cbc0038I Pass  55: suminf.    0.91649 (5) obj. -64.0541 iterations 5
Cbc0038I Pass  56: suminf.    0.91649 (5) obj. -64.0541 iterations 0
Cbc0038I Pass  57: suminf.    1.28120 (4) obj. -64.0541 iterations 2
Cbc0038I Pass  58: suminf.    0.92648 (3) obj. -64.0541 iterations 1
Cbc0038I Pass  59: suminf.    0.86429 (4) obj. -64.0541 iterations 2
Cbc0038I Pass  60: suminf.    0.76933 (4) obj. -64.0541 iterations 5
Cbc0038I Pass  61: suminf.    0.62186 (4) obj. -64.0541 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -49.8561 - took 0.06 seconds
Cbc0012I Integer solution of -49.85608 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 59 rows 32 columns, reduced to 39 rows 21 columns
Cbc0031I 9 added rows had average density of 22.888889
Cbc0013I At root node, 9 cuts changed objective from -110.39902 to -83.144711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1211 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 757 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -52.46769 found by rounding after 3353 iterations and 11 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -52.46769, took 3444 iterations and 20 nodes (0.30 seconds)
Cbc0032I Strong branching done 176 times (2049 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 5, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.30

