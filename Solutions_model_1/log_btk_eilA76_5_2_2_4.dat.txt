Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 3.22936e-05 - average 2.35719e-07, 30 fixed columns
Coin0506I Presolve 79 (-58) rows, 46 (-30) columns and 244 (-174) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Coin0511I After Postsolve, objective 67.024948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24612527 - largest nonzero change 0 ( 0%) - largest zero change 2.8820022e-05
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Coin0511I After Postsolve, objective 67.024948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.02494782 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.31765
Cbc0038I Solution found of -9.89183
Cbc0038I Relaxing continuous gives -9.89183
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -9.89183 to -35.0432 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.2415
Cbc0038I Pass   1: suminf.    2.16309 (7) obj. -38.2415 iterations 25
Cbc0038I Pass   2: suminf.    1.00820 (3) obj. -38.2415 iterations 11
Cbc0038I Pass   3: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass   4: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass   5: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass   6: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass   7: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass   8: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass   9: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  10: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  11: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  12: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  13: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  14: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  15: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  16: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  17: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  18: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  19: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  20: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  21: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  22: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  23: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  24: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  25: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  26: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  27: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  28: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  29: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  30: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -35.0432 to -36.0882 (0.05 seconds)
Cbc0038I Round again with cutoff of -43.9982
Cbc0038I Pass  30: suminf.    2.48686 (11) obj. -43.9982 iterations 2
Cbc0038I Pass  31: suminf.    2.48686 (11) obj. -43.9982 iterations 0
Cbc0038I Pass  32: suminf.    1.31598 (4) obj. -43.9982 iterations 11
Cbc0038I Pass  33: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  34: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  35: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  36: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  37: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  38: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  39: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  40: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  41: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  42: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  43: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  44: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  45: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  46: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  47: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  48: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  49: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  50: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  51: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  52: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  53: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  54: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  55: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  56: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  57: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  58: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  59: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -36.0882 - took 0.05 seconds
Cbc0012I Integer solution of -36.088186 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0031I 13 added rows had average density of 59.384615
Cbc0013I At root node, 13 cuts changed objective from -67.024948 to -54.212683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3655 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 942 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0012I Integer solution of -37.187744 found by rounding after 3446 iterations and 5 nodes (0.43 seconds)
Cbc0012I Integer solution of -37.648376 found by rounding after 3554 iterations and 8 nodes (0.44 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 17 rows 14 columns
Cbc0012I Integer solution of -38.424406 found by RINS after 4050 iterations and 43 nodes (0.48 seconds)
Cbc0012I Integer solution of -38.795246 found by rounding after 4435 iterations and 74 nodes (0.50 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 11 rows 10 columns
Cbc0004I Integer solution of -38.918306 found after 4632 iterations and 94 nodes (0.52 seconds)
Cbc0001I Search completed - best objective -38.918306, took 5187 iterations and 110 nodes (0.54 seconds)
Cbc0032I Strong branching done 532 times (5549 iterations), fathomed 9 nodes and fixed 28 variables
Cbc0035I Maximum depth 17, 381 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.55

