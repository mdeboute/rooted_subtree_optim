Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 72 (-6) columns and 382 (-71) elements
Clp1000I sum of infeasibilities 9.90541e-05 - average 8.05318e-07, 11 fixed columns
Coin0506I Presolve 100 (-23) rows, 60 (-12) columns and 313 (-69) elements
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 2.0206184 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 37.64711
Clp0000I Optimal - objective value 37.64711
Coin0511I After Postsolve, objective 37.64711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.64711
Clp0000I Optimal - objective value 37.64711
Clp0000I Optimal - objective value 37.64711
Coin0511I After Postsolve, objective 37.64711, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.64711038 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 72 columns (71 integer (71 of which binary)) and 384 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 7.33499
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.41981 iterations 49
Cbc0038I Solution found of 5.41981
Cbc0038I Relaxing continuous gives 5.41981
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 72 columns, reduced to 47 rows 30 columns
Cbc0038I Mini branch and bound improved solution from 5.41981 to -11.3258 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.958
Cbc0038I Pass   2: suminf.    2.10655 (6) obj. -13.958 iterations 16
Cbc0038I Pass   3: suminf.    2.10655 (6) obj. -13.958 iterations 0
Cbc0038I Pass   4: suminf.    0.37398 (5) obj. -13.958 iterations 19
Cbc0038I Pass   5: suminf.    0.37398 (5) obj. -13.958 iterations 0
Cbc0038I Pass   6: suminf.    1.14696 (3) obj. -13.958 iterations 13
Cbc0038I Pass   7: suminf.    0.84940 (3) obj. -13.958 iterations 2
Cbc0038I Pass   8: suminf.    1.38830 (4) obj. -13.958 iterations 4
Cbc0038I Pass   9: suminf.    0.97805 (3) obj. -13.958 iterations 8
Cbc0038I Pass  10: suminf.    0.97805 (3) obj. -13.958 iterations 0
Cbc0038I Pass  11: suminf.    1.58352 (4) obj. -13.958 iterations 4
Cbc0038I Pass  12: suminf.    0.38197 (6) obj. -13.958 iterations 19
Cbc0038I Pass  13: suminf.    0.37687 (3) obj. -13.958 iterations 12
Cbc0038I Pass  14: suminf.    0.60622 (3) obj. -13.958 iterations 6
Cbc0038I Pass  15: suminf.    0.60622 (3) obj. -13.958 iterations 0
Cbc0038I Pass  16: suminf.    1.36022 (4) obj. -13.958 iterations 4
Cbc0038I Pass  17: suminf.    0.99848 (3) obj. -13.958 iterations 1
Cbc0038I Pass  18: suminf.    1.15385 (5) obj. -13.958 iterations 21
Cbc0038I Pass  19: suminf.    1.15076 (5) obj. -13.958 iterations 2
Cbc0038I Pass  20: suminf.    0.95003 (3) obj. -13.958 iterations 15
Cbc0038I Pass  21: suminf.    0.73826 (4) obj. -13.958 iterations 8
Cbc0038I Pass  22: suminf.    0.66336 (3) obj. -13.958 iterations 1
Cbc0038I Pass  23: suminf.    0.58355 (3) obj. -13.958 iterations 8
Cbc0038I Pass  24: suminf.    2.14158 (8) obj. -13.958 iterations 20
Cbc0038I Pass  25: suminf.    2.14158 (8) obj. -13.958 iterations 4
Cbc0038I Pass  26: suminf.    1.86523 (21) obj. -13.958 iterations 29
Cbc0038I Pass  27: suminf.    1.78927 (31) obj. -13.958 iterations 12
Cbc0038I Pass  28: suminf.    0.95848 (4) obj. -13.958 iterations 42
Cbc0038I Pass  29: suminf.    0.77501 (3) obj. -13.958 iterations 3
Cbc0038I Pass  30: suminf.    0.66764 (3) obj. -13.958 iterations 3
Cbc0038I Pass  31: suminf.    0.76169 (2) obj. -13.958 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 72 columns, reduced to 80 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -11.3258 to -13.2335 (0.09 seconds)
Cbc0038I Round again with cutoff of -18.6958
Cbc0038I Pass  31: suminf.    2.80567 (13) obj. -18.6958 iterations 4
Cbc0038I Pass  32: suminf.    2.80567 (13) obj. -18.6958 iterations 0
Cbc0038I Pass  33: suminf.    1.59804 (7) obj. -18.6958 iterations 17
Cbc0038I Pass  34: suminf.    1.48845 (5) obj. -18.6958 iterations 2
Cbc0038I Pass  35: suminf.    1.15784 (4) obj. -18.6958 iterations 12
Cbc0038I Pass  36: suminf.    1.15784 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  37: suminf.    1.73713 (4) obj. -18.6958 iterations 8
Cbc0038I Pass  38: suminf.    1.73713 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  39: suminf.    1.50304 (4) obj. -18.6958 iterations 5
Cbc0038I Pass  40: suminf.    1.15784 (4) obj. -18.6958 iterations 4
Cbc0038I Pass  41: suminf.    1.15784 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  42: suminf.    1.73713 (4) obj. -18.6958 iterations 8
Cbc0038I Pass  43: suminf.    1.73713 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  44: suminf.    1.50304 (4) obj. -18.6958 iterations 5
Cbc0038I Pass  45: suminf.    1.15784 (4) obj. -18.6958 iterations 4
Cbc0038I Pass  46: suminf.    1.15784 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  47: suminf.    1.73713 (4) obj. -18.6958 iterations 8
Cbc0038I Pass  48: suminf.    1.73713 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  49: suminf.    1.50304 (4) obj. -18.6958 iterations 5
Cbc0038I Pass  50: suminf.    1.15784 (4) obj. -18.6958 iterations 4
Cbc0038I Pass  51: suminf.    1.15784 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  52: suminf.    1.73713 (4) obj. -18.6958 iterations 8
Cbc0038I Pass  53: suminf.    1.73713 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  54: suminf.    1.50304 (4) obj. -18.6958 iterations 5
Cbc0038I Pass  55: suminf.    1.15784 (4) obj. -18.6958 iterations 4
Cbc0038I Pass  56: suminf.    1.15784 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  57: suminf.    1.73713 (4) obj. -18.6958 iterations 8
Cbc0038I Pass  58: suminf.    1.73713 (4) obj. -18.6958 iterations 0
Cbc0038I Pass  59: suminf.    1.50304 (4) obj. -18.6958 iterations 5
Cbc0038I Pass  60: suminf.    1.15784 (4) obj. -18.6958 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 72 columns, reduced to 48 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -13.2335 - took 0.09 seconds
Cbc0012I Integer solution of -13.23353 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 123 rows 72 columns, reduced to 48 rows 31 columns
Cbc0031I 25 added rows had average density of 49.48
Cbc0013I At root node, 25 cuts changed objective from -37.64711 to -30.740447 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9947 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1471 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.23353 best solution, best possible -30.740447 (0.78 seconds)
Cbc0001I Search completed - best objective -13.23353, took 8139 iterations and 40 nodes (0.98 seconds)
Cbc0032I Strong branching done 580 times (12150 iterations), fathomed 4 nodes and fixed 25 variables
Cbc0035I Maximum depth 16, 179 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.99

