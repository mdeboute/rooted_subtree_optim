Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 1.26137e-08 - average 3.70992e-10, 5 fixed columns
Coin0506I Presolve 21 (-13) rows, 16 (-5) columns and 66 (-36) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Coin0511I After Postsolve, objective 423.28131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Coin0511I After Postsolve, objective 423.28131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 423.2813117 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.540%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.30161
Cbc0038I Pass   1: suminf.    0.44420 (1) obj. -291.281 iterations 13
Cbc0038I Solution found of -139.315
Cbc0038I Relaxing continuous gives -139.315
Cbc0038I Rounding solution of -218.924 is better than previous of -139.315

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -218.924 to -263.807 (0.01 seconds)
Cbc0038I Round again with cutoff of -276.017
Cbc0038I Pass   2: suminf.    0.44420 (1) obj. -291.281 iterations 0
Cbc0038I Pass   3: suminf.    0.49998 (1) obj. -276.017 iterations 1
Cbc0038I Pass   4: suminf.    1.64277 (5) obj. -276.017 iterations 8
Cbc0038I Pass   5: suminf.    0.81293 (3) obj. -276.017 iterations 1
Cbc0038I Pass   6: suminf.    0.57899 (2) obj. -276.017 iterations 3
Cbc0038I Pass   7: suminf.    0.57899 (2) obj. -276.017 iterations 0
Cbc0038I Pass   8: suminf.    0.63037 (2) obj. -276.017 iterations 1
Cbc0038I Pass   9: suminf.    0.60438 (3) obj. -276.017 iterations 1
Cbc0038I Pass  10: suminf.    1.32407 (3) obj. -276.017 iterations 2
Cbc0038I Pass  11: suminf.    1.24056 (4) obj. -276.017 iterations 7
Cbc0038I Pass  12: suminf.    0.71797 (2) obj. -276.017 iterations 3
Cbc0038I Pass  13: suminf.    0.86438 (2) obj. -276.017 iterations 1
Cbc0038I Pass  14: suminf.    1.10727 (3) obj. -276.017 iterations 2
Cbc0038I Pass  15: suminf.    1.10727 (3) obj. -276.017 iterations 0
Cbc0038I Pass  16: suminf.    0.40224 (2) obj. -276.017 iterations 3
Cbc0038I Pass  17: suminf.    0.40036 (3) obj. -276.017 iterations 1
Cbc0038I Pass  18: suminf.    0.57807 (3) obj. -276.017 iterations 4
Cbc0038I Pass  19: suminf.    0.57414 (2) obj. -276.017 iterations 1
Cbc0038I Pass  20: suminf.    0.49367 (2) obj. -276.017 iterations 3
Cbc0038I Pass  21: suminf.    0.49367 (2) obj. -276.017 iterations 0
Cbc0038I Pass  22: suminf.    0.57807 (3) obj. -276.017 iterations 3
Cbc0038I Pass  23: suminf.    0.44165 (2) obj. -276.017 iterations 12
Cbc0038I Pass  24: suminf.    0.50580 (3) obj. -276.017 iterations 3
Cbc0038I Pass  25: suminf.    0.47786 (2) obj. -276.017 iterations 1
Cbc0038I Pass  26: suminf.    0.45268 (1) obj. -285.26 iterations 3
Cbc0038I Pass  27: suminf.    0.41888 (1) obj. -276.017 iterations 1
Cbc0038I Pass  28: suminf.    1.60275 (4) obj. -276.017 iterations 7
Cbc0038I Pass  29: suminf.    0.40098 (1) obj. -295.389 iterations 4
Cbc0038I Pass  30: suminf.    0.47183 (1) obj. -276.017 iterations 1
Cbc0038I Pass  31: suminf.    0.68111 (3) obj. -276.017 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -263.807 to -278.401 (0.02 seconds)
Cbc0038I Round again with cutoff of -299.902
Cbc0038I Pass  31: suminf.    0.50748 (2) obj. -299.902 iterations 1
Cbc0038I Pass  32: suminf.    0.65418 (3) obj. -299.902 iterations 3
Cbc0038I Pass  33: suminf.    0.65418 (3) obj. -299.902 iterations 0
Cbc0038I Pass  34: suminf.    0.43393 (2) obj. -299.902 iterations 3
Cbc0038I Pass  35: suminf.    0.43393 (2) obj. -299.902 iterations 0
Cbc0038I Pass  36: suminf.    0.47162 (2) obj. -299.902 iterations 1
Cbc0038I Pass  37: suminf.    0.44563 (3) obj. -299.902 iterations 1
Cbc0038I Pass  38: suminf.    1.21041 (3) obj. -299.902 iterations 3
Cbc0038I Pass  39: suminf.    0.77205 (3) obj. -299.902 iterations 6
Cbc0038I Pass  40: suminf.    0.77205 (3) obj. -299.902 iterations 0
Cbc0038I Pass  41: suminf.    0.68243 (3) obj. -299.902 iterations 4
Cbc0038I Pass  42: suminf.    0.60194 (3) obj. -299.902 iterations 2
Cbc0038I Pass  43: suminf.    0.69514 (3) obj. -299.902 iterations 3
Cbc0038I Pass  44: suminf.    0.69514 (3) obj. -299.902 iterations 0
Cbc0038I Pass  45: suminf.    0.32746 (2) obj. -299.902 iterations 3
Cbc0038I Pass  46: suminf.    0.32394 (2) obj. -299.902 iterations 1
Cbc0038I Pass  47: suminf.    0.63886 (3) obj. -299.902 iterations 16
Cbc0038I Pass  48: suminf.    0.61963 (4) obj. -299.902 iterations 1
Cbc0038I Pass  49: suminf.    0.86525 (3) obj. -299.902 iterations 8
Cbc0038I Pass  50: suminf.    0.85971 (3) obj. -299.902 iterations 1
Cbc0038I Pass  51: suminf.    0.53372 (2) obj. -299.902 iterations 3
Cbc0038I Pass  52: suminf.    0.53372 (2) obj. -299.902 iterations 0
Cbc0038I Pass  53: suminf.    0.65754 (2) obj. -299.902 iterations 3
Cbc0038I Pass  54: suminf.    0.42476 (1) obj. -299.902 iterations 2
Cbc0038I Pass  55: suminf.    0.38878 (1) obj. -299.902 iterations 1
Cbc0038I Pass  56: suminf.    0.90568 (4) obj. -299.902 iterations 5
Cbc0038I Pass  57: suminf.    0.61009 (2) obj. -299.902 iterations 5
Cbc0038I Pass  58: suminf.    0.61009 (2) obj. -299.902 iterations 0
Cbc0038I Pass  59: suminf.    0.25045 (2) obj. -299.902 iterations 2
Cbc0038I Pass  60: suminf.    0.24856 (2) obj. -299.902 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -278.401 - took 0.02 seconds
Cbc0012I Integer solution of -278.40082 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 9 added rows had average density of 11.444444
Cbc0013I At root node, 9 cuts changed objective from -385.90622 to -279.8913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 506 row cuts average 4.2 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 523 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 67 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -278.400822, took 1345 iterations and 2 nodes (0.14 seconds)
Cbc0032I Strong branching done 24 times (132 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

