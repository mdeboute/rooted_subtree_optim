Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 0.000181492 - average 1.37494e-06, 19 fixed columns
Coin0506I Presolve 90 (-42) rows, 54 (-22) columns and 280 (-128) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 35.521515
Clp0000I Optimal - objective value 35.521515
Coin0511I After Postsolve, objective 35.521515, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2756093 - largest nonzero change 0 ( 0%) - largest zero change 2.789631e-05
Clp0000I Optimal - objective value 35.521515
Clp0000I Optimal - objective value 35.521515
Clp0000I Optimal - objective value 35.521515
Coin0511I After Postsolve, objective 35.521515, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.5215148 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.1406
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.07718 iterations 39
Cbc0038I Solution found of 5.07718
Cbc0038I Relaxing continuous gives 5.07718
Cbc0038I Rounding solution of -5.54314 is better than previous of 5.07718

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -5.54314 to -8.76848 (0.04 seconds)
Cbc0038I Round again with cutoff of -11.4439
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.10823 (8) obj. -11.4439 iterations 10
Cbc0038I Pass   3: suminf.    1.33946 (7) obj. -11.4439 iterations 11
Cbc0038I Pass   4: suminf.    1.33786 (7) obj. -11.4439 iterations 3
Cbc0038I Pass   5: suminf.    1.02906 (3) obj. -11.4439 iterations 13
Cbc0038I Pass   6: suminf.    0.88821 (4) obj. -11.4439 iterations 3
Cbc0038I Pass   7: suminf.    1.24105 (4) obj. -11.4439 iterations 4
Cbc0038I Pass   8: suminf.    1.21942 (4) obj. -11.4439 iterations 2
Cbc0038I Pass   9: suminf.    1.02906 (3) obj. -11.4439 iterations 4
Cbc0038I Pass  10: suminf.    2.09646 (8) obj. -11.4439 iterations 17
Cbc0038I Pass  11: suminf.    1.32398 (5) obj. -11.4439 iterations 10
Cbc0038I Pass  12: suminf.    1.31724 (5) obj. -11.4439 iterations 1
Cbc0038I Pass  13: suminf.    1.75492 (6) obj. -11.4439 iterations 11
Cbc0038I Pass  14: suminf.    2.00186 (7) obj. -11.4439 iterations 6
Cbc0038I Pass  15: suminf.    1.82773 (6) obj. -11.4439 iterations 1
Cbc0038I Pass  16: suminf.    1.26208 (4) obj. -11.4439 iterations 8
Cbc0038I Pass  17: suminf.    1.26208 (4) obj. -11.4439 iterations 0
Cbc0038I Pass  18: suminf.    1.87543 (6) obj. -11.4439 iterations 4
Cbc0038I Pass  19: suminf.    1.82138 (8) obj. -11.4439 iterations 3
Cbc0038I Pass  20: suminf.    1.75479 (6) obj. -11.4439 iterations 8
Cbc0038I Pass  21: suminf.    1.75479 (6) obj. -11.4439 iterations 1
Cbc0038I Pass  22: suminf.    1.37927 (6) obj. -11.4439 iterations 9
Cbc0038I Pass  23: suminf.    1.37927 (6) obj. -11.4439 iterations 0
Cbc0038I Pass  24: suminf.    1.97218 (6) obj. -11.4439 iterations 4
Cbc0038I Pass  25: suminf.    1.26228 (5) obj. -11.4439 iterations 3
Cbc0038I Pass  26: suminf.    1.26228 (5) obj. -11.4439 iterations 1
Cbc0038I Pass  27: suminf.    1.37927 (6) obj. -11.4439 iterations 6
Cbc0038I Pass  28: suminf.    1.37927 (6) obj. -11.4439 iterations 0
Cbc0038I Pass  29: suminf.    1.97218 (6) obj. -11.4439 iterations 4
Cbc0038I Pass  30: suminf.    1.26228 (5) obj. -11.4439 iterations 3
Cbc0038I Pass  31: suminf.    1.26228 (5) obj. -11.4439 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 50 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -8.76848 to -9.00676 (0.09 seconds)
Cbc0038I Round again with cutoff of -16.2594
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.02150 (11) obj. -16.2594 iterations 5
Cbc0038I Pass  32: suminf.    0.64707 (4) obj. -16.2594 iterations 13
Cbc0038I Pass  33: suminf.    0.64707 (4) obj. -16.2594 iterations 1
Cbc0038I Pass  34: suminf.    0.94448 (4) obj. -16.2594 iterations 6
Cbc0038I Pass  35: suminf.    0.89734 (4) obj. -16.2594 iterations 2
Cbc0038I Pass  36: suminf.    1.95080 (6) obj. -16.2594 iterations 6
Cbc0038I Pass  37: suminf.    0.93690 (4) obj. -16.2594 iterations 5
Cbc0038I Pass  38: suminf.    2.17554 (7) obj. -16.2594 iterations 20
Cbc0038I Pass  39: suminf.    1.90286 (6) obj. -16.2594 iterations 8
Cbc0038I Pass  40: suminf.    1.90286 (6) obj. -16.2594 iterations 0
Cbc0038I Pass  41: suminf.    2.02408 (6) obj. -16.2594 iterations 11
Cbc0038I Pass  42: suminf.    2.01741 (6) obj. -16.2594 iterations 2
Cbc0038I Pass  43: suminf.    2.38798 (7) obj. -16.2594 iterations 7
Cbc0038I Pass  44: suminf.    2.00874 (5) obj. -16.2594 iterations 4
Cbc0038I Pass  45: suminf.    1.93930 (5) obj. -16.2594 iterations 2
Cbc0038I Pass  46: suminf.    1.93529 (6) obj. -16.2594 iterations 1
Cbc0038I Pass  47: suminf.    3.01665 (7) obj. -16.2594 iterations 9
Cbc0038I Pass  48: suminf.    2.00874 (5) obj. -16.2594 iterations 5
Cbc0038I Pass  49: suminf.    6.41112 (17) obj. -16.2594 iterations 34
Cbc0038I Pass  50: suminf.    2.63557 (9) obj. -16.2594 iterations 30
Cbc0038I Pass  51: suminf.    2.63557 (9) obj. -16.2594 iterations 0
Cbc0038I Pass  52: suminf.    1.99083 (6) obj. -16.2594 iterations 10
Cbc0038I Pass  53: suminf.    1.99083 (6) obj. -16.2594 iterations 1
Cbc0038I Pass  54: suminf.    2.01575 (6) obj. -16.2594 iterations 4
Cbc0038I Pass  55: suminf.    1.88451 (5) obj. -16.2594 iterations 3
Cbc0038I Pass  56: suminf.    1.88451 (5) obj. -16.2594 iterations 1
Cbc0038I Pass  57: suminf.    2.11298 (5) obj. -16.2594 iterations 4
Cbc0038I Pass  58: suminf.    1.99083 (6) obj. -16.2594 iterations 3
Cbc0038I Pass  59: suminf.    1.99083 (6) obj. -16.2594 iterations 0
Cbc0038I Pass  60: suminf.    2.01575 (6) obj. -16.2594 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 65 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.00676 - took 0.11 seconds
Cbc0012I Integer solution of -9.0067593 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 47 rows 31 columns
Cbc0031I 21 added rows had average density of 44.52381
Cbc0013I At root node, 21 cuts changed objective from -35.521515 to -26.095293 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10394 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1865 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.0067593 best solution, best possible -26.095293 (0.85 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 4 rows 9 columns
Cbc0012I Integer solution of -9.2793793 found by rounding after 7350 iterations and 65 nodes (1.04 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 29 rows 21 columns
Cbc0001I Search completed - best objective -9.279379329999998, took 9526 iterations and 170 nodes (1.22 seconds)
Cbc0032I Strong branching done 1198 times (17045 iterations), fathomed 18 nodes and fixed 61 variables
Cbc0035I Maximum depth 21, 438 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.24

