Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-30) rows, 68 (-10) columns and 378 (-75) elements
Clp1000I sum of infeasibilities 3.33093e-05 - average 2.66474e-07, 9 fixed columns
Coin0506I Presolve 107 (-18) rows, 58 (-10) columns and 322 (-56) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.34607747 - largest nonzero change 0 ( 0%) - largest zero change 2.9770415e-05
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Coin0511I After Postsolve, objective 50.805234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Clp0000I Optimal - objective value 50.805234
Coin0511I After Postsolve, objective 50.805234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.80523389 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 120 rows, 68 columns (67 integer (67 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.48397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.1815 iterations 37
Cbc0038I Solution found of -11.1815
Cbc0038I Relaxing continuous gives -11.1815
Cbc0038I Rounding solution of -15.6669 is better than previous of -11.1815

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 49 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -15.6669 to -21.0805 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.9928
Cbc0038I Pass   2: suminf.    0.92919 (5) obj. -23.9928 iterations 9
Cbc0038I Pass   3: suminf.    1.00470 (4) obj. -23.9928 iterations 9
Cbc0038I Pass   4: suminf.    0.79343 (4) obj. -23.9928 iterations 9
Cbc0038I Pass   5: suminf.    0.92919 (5) obj. -23.9928 iterations 9
Cbc0038I Pass   6: suminf.    1.76218 (6) obj. -23.9928 iterations 12
Cbc0038I Pass   7: suminf.    0.77561 (5) obj. -23.9928 iterations 10
Cbc0038I Pass   8: suminf.    0.76857 (5) obj. -23.9928 iterations 2
Cbc0038I Pass   9: suminf.    0.54020 (4) obj. -23.9928 iterations 12
Cbc0038I Pass  10: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  11: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  12: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  13: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  14: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  15: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  16: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  17: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  18: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  19: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  20: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  21: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  22: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  23: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  24: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  25: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I Pass  26: suminf.    0.82449 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  27: suminf.    0.54020 (4) obj. -23.9928 iterations 8
Cbc0038I Pass  28: suminf.    0.54020 (4) obj. -23.9928 iterations 0
Cbc0038I Pass  29: suminf.    0.43021 (4) obj. -23.9928 iterations 6
Cbc0038I Pass  30: suminf.    0.42051 (3) obj. -23.9928 iterations 1
Cbc0038I Pass  31: suminf.    0.82449 (4) obj. -23.9928 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -21.0805 to -21.1001 (0.09 seconds)
Cbc0038I Round again with cutoff of -29.2348
Cbc0038I Pass  31: suminf.    1.42688 (11) obj. -29.2348 iterations 3
Cbc0038I Pass  32: suminf.    1.80951 (5) obj. -29.2348 iterations 16
Cbc0038I Pass  33: suminf.    1.41454 (5) obj. -29.2348 iterations 3
Cbc0038I Pass  34: suminf.    1.41454 (5) obj. -29.2348 iterations 1
Cbc0038I Pass  35: suminf.    1.75010 (4) obj. -29.2348 iterations 11
Cbc0038I Pass  36: suminf.    1.74543 (6) obj. -29.2348 iterations 2
Cbc0038I Pass  37: suminf.    1.53067 (6) obj. -29.2348 iterations 5
Cbc0038I Pass  38: suminf.    1.51706 (6) obj. -29.2348 iterations 5
Cbc0038I Pass  39: suminf.    1.64471 (4) obj. -29.2348 iterations 6
Cbc0038I Pass  40: suminf.    1.15220 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  41: suminf.    1.14561 (6) obj. -29.2348 iterations 2
Cbc0038I Pass  42: suminf.    1.48835 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  43: suminf.    1.24761 (3) obj. -29.2348 iterations 4
Cbc0038I Pass  44: suminf.    1.24376 (3) obj. -29.2348 iterations 1
Cbc0038I Pass  45: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  46: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  47: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  48: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I Pass  49: suminf.    1.24376 (3) obj. -29.2348 iterations 5
Cbc0038I Pass  50: suminf.    1.24376 (3) obj. -29.2348 iterations 0
Cbc0038I Pass  51: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  52: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  53: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  54: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I Pass  55: suminf.    1.24376 (3) obj. -29.2348 iterations 5
Cbc0038I Pass  56: suminf.    1.24376 (3) obj. -29.2348 iterations 0
Cbc0038I Pass  57: suminf.    1.42162 (3) obj. -29.2348 iterations 2
Cbc0038I Pass  58: suminf.    1.26993 (4) obj. -29.2348 iterations 2
Cbc0038I Pass  59: suminf.    1.30877 (4) obj. -29.2348 iterations 5
Cbc0038I Pass  60: suminf.    1.24307 (4) obj. -29.2348 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 68 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -21.1001 - took 0.09 seconds
Cbc0012I Integer solution of -21.1001 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 120 rows 68 columns, reduced to 50 rows 28 columns
Cbc0031I 13 added rows had average density of 44.153846
Cbc0013I At root node, 13 cuts changed objective from -50.202787 to -43.529209 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5477 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1132 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0010I After 19 nodes, 11 on tree, -21.1001 best solution, best possible -43.529209 (0.68 seconds)
Cbc0016I Integer solution of -22.48839 found by strong branching after 6117 iterations and 29 nodes (0.70 seconds)
Cbc0001I Search completed - best objective -22.48839, took 7011 iterations and 46 nodes (0.74 seconds)
Cbc0032I Strong branching done 574 times (10313 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 18, 140 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.75

