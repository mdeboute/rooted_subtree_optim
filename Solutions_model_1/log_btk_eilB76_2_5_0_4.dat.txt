Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 66 (-12) columns and 356 (-97) elements
Clp1000I sum of infeasibilities 1.0235e-05 - average 8.90003e-08, 59 fixed columns
Coin0506I Presolve 8 (-107) rows, 7 (-59) columns and 24 (-332) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 15593.828
Clp0000I Optimal - objective value 15593.828
Coin0511I After Postsolve, objective 15593.828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.32387023 - largest nonzero change 0 ( 0%) - largest zero change 2.6670448e-05
Clp0000I Optimal - objective value 15593.828
Clp0000I Optimal - objective value 15593.828
Clp0000I Optimal - objective value 15593.828
Coin0511I After Postsolve, objective 15593.828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15593.82773 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 112 rows, 66 columns (65 integer (65 of which binary)) and 362 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.470%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.09091
Cbc0038I Solution found of -12734.3
Cbc0038I Relaxing continuous gives -12734.3
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 66 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13020.2
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.07528 (1) obj. -13020.2 iterations 8
Cbc0038I Pass   2: suminf.    0.32258 (1) obj. -14987.9 iterations 4
Cbc0038I Pass   3: suminf.    0.26501 (1) obj. -13020.2 iterations 1
Cbc0038I Pass   4: suminf.    1.23871 (5) obj. -13020.2 iterations 8
Cbc0038I Pass   5: suminf.    0.33561 (2) obj. -13020.2 iterations 9
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -14087.4 iterations 3
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -14087.4 iterations 0
Cbc0038I Pass   8: suminf.    0.58947 (3) obj. -13932.4 iterations 7
Cbc0038I Solution found of -13583
Cbc0038I Relaxing continuous gives -13583
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 66 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -13583 to -14869.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -15014.6
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.39972 (1) obj. -15014.6 iterations 0
Cbc0038I Pass  10: suminf.    0.32730 (2) obj. -15014.6 iterations 4
Cbc0038I Pass  11: suminf.    0.39972 (1) obj. -15014.6 iterations 3
Cbc0038I Pass  12: suminf.    0.51877 (7) obj. -15014.6 iterations 9
Cbc0038I Pass  13: suminf.    0.28975 (5) obj. -15014.6 iterations 4
Cbc0038I Pass  14: suminf.    2.10595 (6) obj. -15014.6 iterations 8
Cbc0038I Pass  15: suminf.    2.10595 (6) obj. -15014.6 iterations 1
Cbc0038I Pass  16: suminf.    2.91619 (7) obj. -15014.6 iterations 3
Cbc0038I Pass  17: suminf.    2.23720 (6) obj. -15014.6 iterations 2
Cbc0038I Pass  18: suminf.    0.47163 (2) obj. -15014.6 iterations 5
Cbc0038I Pass  19: suminf.    0.32730 (2) obj. -15014.6 iterations 7
Cbc0038I Pass  20: suminf.    0.39972 (1) obj. -15014.6 iterations 3
Cbc0038I Pass  21: suminf.    0.42098 (2) obj. -15014.6 iterations 4
Cbc0038I Pass  22: suminf.    0.47163 (2) obj. -15014.6 iterations 9
Cbc0038I Pass  23: suminf.    0.24136 (5) obj. -15014.6 iterations 7
Cbc0038I Pass  24: suminf.    2.81638 (6) obj. -15014.6 iterations 7
Cbc0038I Pass  25: suminf.    0.82642 (5) obj. -15014.6 iterations 5
Cbc0038I Pass  26: suminf.    0.82642 (5) obj. -15014.6 iterations 0
Cbc0038I Pass  27: suminf.    0.82642 (5) obj. -15014.6 iterations 0
Cbc0038I Pass  28: suminf.    1.33394 (4) obj. -15014.6 iterations 5
Cbc0038I Pass  29: suminf.    0.93140 (3) obj. -15014.6 iterations 4
Cbc0038I Pass  30: suminf.    0.53964 (2) obj. -15014.6 iterations 4
Cbc0038I Pass  31: suminf.    0.53203 (6) obj. -15014.6 iterations 5
Cbc0038I Pass  32: suminf.    2.27950 (6) obj. -15014.6 iterations 5
Cbc0038I Pass  33: suminf.    2.25081 (6) obj. -15014.6 iterations 2
Cbc0038I Pass  34: suminf.    0.09677 (1) obj. -15380.5 iterations 5
Cbc0038I Pass  35: suminf.    0.17347 (1) obj. -15014.6 iterations 1
Cbc0038I Pass  36: suminf.    0.09677 (1) obj. -15380.5 iterations 4
Cbc0038I Pass  37: suminf.    0.85714 (2) obj. -15052.8 iterations 4
Cbc0038I Pass  38: suminf.    0.85714 (2) obj. -15052.8 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 66 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -14869.7 to -14906.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -15188.3
Cbc0038I Reduced cost fixing fixed 49 variables on major pass 4
Cbc0038I Pass  38: suminf.    0.40135 (5) obj. -15188.3 iterations 1
Cbc0038I Pass  39: suminf.    0.40143 (6) obj. -15188.3 iterations 3
Cbc0038I Pass  40: suminf.    0.99952 (5) obj. -15188.3 iterations 5
Cbc0038I Pass  41: suminf.    0.26839 (3) obj. -15188.3 iterations 8
Cbc0038I Pass  42: suminf.    0.09677 (1) obj. -15380.5 iterations 4
Cbc0038I Pass  43: suminf.    0.13705 (1) obj. -15188.3 iterations 1
Cbc0038I Pass  44: suminf.    1.26158 (5) obj. -15188.3 iterations 5
Cbc0038I Pass  45: suminf.    0.13705 (1) obj. -15188.3 iterations 4
Cbc0038I Pass  46: suminf.    0.37054 (2) obj. -15188.3 iterations 7
Cbc0038I Pass  47: suminf.    0.37054 (2) obj. -15188.3 iterations 2
Cbc0038I Pass  48: suminf.    1.90954 (6) obj. -15188.3 iterations 8
Cbc0038I Pass  49: suminf.    0.46803 (2) obj. -15188.3 iterations 3
Cbc0038I Pass  50: suminf.    0.42320 (1) obj. -15188.3 iterations 4
Cbc0038I Pass  51: suminf.    0.50456 (2) obj. -15188.3 iterations 2
Cbc0038I Pass  52: suminf.    1.55369 (5) obj. -15188.3 iterations 7
Cbc0038I Pass  53: suminf.    1.51910 (5) obj. -15188.3 iterations 7
Cbc0038I Pass  54: suminf.    0.69666 (5) obj. -15188.3 iterations 3
Cbc0038I Pass  55: suminf.    0.69666 (5) obj. -15188.3 iterations 2
Cbc0038I Pass  56: suminf.    1.51910 (5) obj. -15188.3 iterations 6
Cbc0038I Pass  57: suminf.    1.91135 (6) obj. -15188.3 iterations 11
Cbc0038I Pass  58: suminf.    1.69897 (5) obj. -15188.3 iterations 5
Cbc0038I Pass  59: suminf.    1.76822 (5) obj. -15188.3 iterations 4
Cbc0038I Pass  60: suminf.    1.51943 (5) obj. -15188.3 iterations 3
Cbc0038I Pass  61: suminf.    1.37923 (5) obj. -15188.3 iterations 3
Cbc0038I Pass  62: suminf.    1.53174 (5) obj. -15188.3 iterations 5
Cbc0038I Pass  63: suminf.    1.71750 (6) obj. -15188.3 iterations 7
Cbc0038I Pass  64: suminf.    0.40135 (5) obj. -15188.3 iterations 3
Cbc0038I Pass  65: suminf.    0.40143 (6) obj. -15188.3 iterations 3
Cbc0038I Pass  66: suminf.    0.99952 (5) obj. -15188.3 iterations 5
Cbc0038I Pass  67: suminf.    0.40135 (5) obj. -15188.3 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 66 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14906.2 - took 0.02 seconds
Cbc0012I Integer solution of -14906.19 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 112 rows 66 columns, reduced to 0 rows 0 columns
Cbc0031I 8 added rows had average density of 11.375
Cbc0013I At root node, 8 cuts changed objective from -15593.828 to -14937.295 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.9 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 65 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -14906.19, took 78 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 12 times (64 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

