Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 48 (-2) columns and 274 (-11) elements
Clp1000I sum of infeasibilities 2.87542e-05 - average 3.09185e-07, 6 fixed columns
Coin0506I Presolve 81 (-12) rows, 42 (-6) columns and 238 (-36) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 24.810696 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Coin0511I After Postsolve, objective 2171.7199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Coin0511I After Postsolve, objective 2171.7199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2171.719906 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 48 columns (47 integer (47 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.80438
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -147.058 iterations 32
Cbc0038I Solution found of -147.058
Cbc0038I Relaxing continuous gives -147.058
Cbc0038I Rounding solution of -521.413 is better than previous of -147.058

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -521.413 to -651.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -803.28
Cbc0038I Pass   2: suminf.    0.92615 (5) obj. -803.28 iterations 4
Cbc0038I Pass   3: suminf.    0.86264 (4) obj. -803.28 iterations 1
Cbc0038I Pass   4: suminf.    1.18361 (3) obj. -803.28 iterations 4
Cbc0038I Pass   5: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass   6: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass   7: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass   8: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass   9: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  10: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  11: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  12: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  13: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  14: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  15: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  16: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  17: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  18: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  19: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  20: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  21: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  22: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  23: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  24: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  25: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  26: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  27: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  28: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  29: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  30: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  31: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -651.23 - took 0.04 seconds
Cbc0012I Integer solution of -651.23047 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0031I 21 added rows had average density of 31.619048
Cbc0013I At root node, 21 cuts changed objective from -2171.7199 to -1480.223 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6577 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2105 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 307 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 42.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -651.23047 best solution, best possible -1480.223 (0.71 seconds)
Cbc0001I Search completed - best objective -651.2304684999999, took 8849 iterations and 28 nodes (0.80 seconds)
Cbc0032I Strong branching done 468 times (9593 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.81

