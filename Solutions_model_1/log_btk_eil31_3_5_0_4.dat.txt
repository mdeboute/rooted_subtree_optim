Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-37) rows, 17 (-16) columns and 83 (-100) elements
Clp1000I sum of infeasibilities 2.19358e-05 - average 7.83421e-07, 13 fixed columns
Coin0506I Presolve 3 (-25) rows, 3 (-14) columns and 7 (-76) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 4447.9214
Clp0000I Optimal - objective value 4447.9214
Coin0511I After Postsolve, objective 4447.9214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6744794 - largest nonzero change 0 ( 0%) - largest zero change 1.9083096e-05
Clp0000I Optimal - objective value 4447.9214
Clp0000I Optimal - objective value 4447.9214
Clp0000I Optimal - objective value 4447.9214
Coin0511I After Postsolve, objective 4447.9214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4447.921439 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 17 columns (16 integer (16 of which binary)) and 87 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.908%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.12904
Cbc0038I Pass   1: suminf.    0.81201 (2) obj. -4280.11 iterations 2
Cbc0038I Solution found of -1958.4
Cbc0038I Relaxing continuous gives -1958.4
Cbc0038I Rounding solution of -1961.4 is better than previous of -1958.4

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2210.2
Cbc0038I Pass   2: suminf.    0.81201 (2) obj. -4280.11 iterations 0
Cbc0038I Pass   3: suminf.    0.12871 (2) obj. -2210.2 iterations 3
Cbc0038I Pass   4: suminf.    0.83937 (2) obj. -3955.81 iterations 2
Cbc0038I Pass   5: suminf.    0.39837 (1) obj. -3130.61 iterations 1
Cbc0038I Pass   6: suminf.    0.35772 (1) obj. -2235.11 iterations 3
Cbc0038I Pass   7: suminf.    0.35772 (1) obj. -2235.11 iterations 1
Cbc0038I Pass   8: suminf.    0.62692 (2) obj. -2210.2 iterations 2
Cbc0038I Pass   9: suminf.    0.74603 (2) obj. -3436.96 iterations 1
Cbc0038I Pass  10: suminf.    0.49206 (2) obj. -2956.13 iterations 6
Cbc0038I Pass  11: suminf.    0.49206 (2) obj. -2956.13 iterations 1
Cbc0038I Pass  12: suminf.    0.87334 (2) obj. -2210.2 iterations 2
Cbc0038I Pass  13: suminf.    0.44546 (4) obj. -2210.2 iterations 8
Cbc0038I Pass  14: suminf.    0.44546 (4) obj. -2210.2 iterations 2
Cbc0038I Pass  15: suminf.    0.70696 (2) obj. -2743.85 iterations 4
Cbc0038I Pass  16: suminf.    0.43474 (2) obj. -2210.2 iterations 1
Cbc0038I Pass  17: suminf.    0.63592 (2) obj. -2210.2 iterations 2
Cbc0038I Pass  18: suminf.    0.63611 (2) obj. -2210.2 iterations 1
Cbc0038I Pass  19: suminf.    0.63045 (2) obj. -2573.19 iterations 1
Cbc0038I Pass  20: suminf.    0.63045 (2) obj. -2573.19 iterations 0
Cbc0038I Pass  21: suminf.    0.13261 (2) obj. -2210.2 iterations 4
Cbc0038I Pass  22: suminf.    0.13261 (2) obj. -2210.2 iterations 0
Cbc0038I Pass  23: suminf.    0.47056 (2) obj. -2693.36 iterations 2
Cbc0038I Pass  24: suminf.    0.51812 (2) obj. -2210.2 iterations 6
Cbc0038I Pass  25: suminf.    0.51812 (2) obj. -2210.2 iterations 1
Cbc0038I Pass  26: suminf.    0.43474 (2) obj. -2210.2 iterations 5
Cbc0038I Pass  27: suminf.    0.63592 (2) obj. -2210.2 iterations 2
Cbc0038I Pass  28: suminf.    0.63611 (2) obj. -2210.2 iterations 1
Cbc0038I Pass  29: suminf.    0.63045 (2) obj. -2573.19 iterations 1
Cbc0038I Pass  30: suminf.    0.70289 (2) obj. -2790.88 iterations 2
Cbc0038I Pass  31: suminf.    0.70289 (2) obj. -2790.88 iterations 1
Cbc0038I Rounding solution of -2944.1 is better than previous of -1961.4

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2944.1 to -3902.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -4012
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.81201 (2) obj. -4280.11 iterations 0
Cbc0038I Pass  32: suminf.    0.86455 (3) obj. -4012 iterations 2
Cbc0038I Pass  33: suminf.    0.84797 (2) obj. -4012 iterations 1
Cbc0038I Pass  34: suminf.    0.81328 (2) obj. -4012 iterations 2
Cbc0038I Pass  35: suminf.    1.15384 (4) obj. -4012 iterations 2
Cbc0038I Pass  36: suminf.    1.15384 (4) obj. -4012 iterations 0
Cbc0038I Pass  37: suminf.    0.88454 (2) obj. -4012 iterations 5
Cbc0038I Pass  38: suminf.    0.46359 (2) obj. -4012 iterations 1
Cbc0038I Pass  39: suminf.    0.88454 (2) obj. -4012 iterations 1
Cbc0038I Pass  40: suminf.    0.93504 (3) obj. -4012 iterations 3
Cbc0038I Pass  41: suminf.    0.64614 (2) obj. -4012 iterations 3
Cbc0038I Pass  42: suminf.    0.71381 (2) obj. -4012 iterations 1
Cbc0038I Pass  43: suminf.    1.22342 (5) obj. -4012 iterations 4
Cbc0038I Pass  44: suminf.    1.12342 (4) obj. -4012 iterations 1
Cbc0038I Pass  45: suminf.    1.12342 (4) obj. -4012 iterations 0
Cbc0038I Pass  46: suminf.    0.88454 (2) obj. -4012 iterations 3
Cbc0038I Pass  47: suminf.    0.46359 (2) obj. -4012 iterations 1
Cbc0038I Pass  48: suminf.    0.44301 (2) obj. -4012 iterations 2
Cbc0038I Pass  49: suminf.    0.41730 (2) obj. -4062.53 iterations 1
Cbc0038I Pass  50: suminf.    0.44326 (2) obj. -4012 iterations 2
Cbc0038I Pass  51: suminf.    0.44301 (2) obj. -4012 iterations 4
Cbc0038I Pass  52: suminf.    2.02053 (7) obj. -4012 iterations 6
Cbc0038I Pass  53: suminf.    1.34608 (5) obj. -4012 iterations 3
Cbc0038I Pass  54: suminf.    1.34608 (5) obj. -4012 iterations 0
Cbc0038I Pass  55: suminf.    1.12638 (3) obj. -4012 iterations 3
Cbc0038I Pass  56: suminf.    0.81328 (2) obj. -4012 iterations 1
Cbc0038I Pass  57: suminf.    0.84797 (2) obj. -4012 iterations 1
Cbc0038I Pass  58: suminf.    0.55679 (5) obj. -4012 iterations 7
Cbc0038I Pass  59: suminf.    0.41730 (2) obj. -4062.53 iterations 3
Cbc0038I Pass  60: suminf.    0.44326 (2) obj. -4012 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3902.8 - took 0.01 seconds
Cbc0012I Integer solution of -3902.8 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 28 rows 17 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -4447.9214 to -4447.9214 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3902.8, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

