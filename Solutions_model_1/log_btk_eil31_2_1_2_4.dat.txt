Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.9633e-05 - average 3.92661e-07, 3 fixed columns
Coin0506I Presolve 43 (-7) rows, 24 (-4) columns and 126 (-22) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Coin0511I After Postsolve, objective 68.879096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Clp0000I Optimal - objective value 68.879096
Coin0511I After Postsolve, objective 68.879096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.87909649 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.99571
Cbc0038I Solution found of 0.893823
Cbc0038I Relaxing continuous gives 0.27723
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 0.27723 to -36.2875 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.4862
Cbc0038I Pass   1: suminf.    1.39153 (4) obj. -39.4862 iterations 22
Cbc0038I Pass   2: suminf.    0.56705 (2) obj. -39.4862 iterations 8
Cbc0038I Pass   3: suminf.    0.40405 (2) obj. -39.4862 iterations 5
Cbc0038I Pass   4: suminf.    0.94925 (3) obj. -39.4862 iterations 3
Cbc0038I Pass   5: suminf.    1.42067 (6) obj. -39.4862 iterations 7
Cbc0038I Pass   6: suminf.    1.21565 (7) obj. -39.4862 iterations 7
Cbc0038I Pass   7: suminf.    0.61538 (2) obj. -39.4862 iterations 8
Cbc0038I Pass   8: suminf.    0.53356 (2) obj. -39.4862 iterations 1
Cbc0038I Pass   9: suminf.    0.72908 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  10: suminf.    0.65364 (5) obj. -39.4862 iterations 6
Cbc0038I Pass  11: suminf.    0.65364 (5) obj. -39.4862 iterations 2
Cbc0038I Pass  12: suminf.    1.27877 (5) obj. -39.4862 iterations 13
Cbc0038I Pass  13: suminf.    1.22640 (3) obj. -39.4862 iterations 6
Cbc0038I Pass  14: suminf.    0.71399 (2) obj. -45.3879 iterations 2
Cbc0038I Pass  15: suminf.    0.60474 (3) obj. -39.4862 iterations 2
Cbc0038I Pass  16: suminf.    0.59855 (3) obj. -39.4862 iterations 2
Cbc0038I Pass  17: suminf.    0.65228 (3) obj. -39.4862 iterations 6
Cbc0038I Pass  18: suminf.    0.45515 (4) obj. -39.4862 iterations 4
Cbc0038I Pass  19: suminf.    0.60609 (2) obj. -39.4862 iterations 5
Cbc0038I Pass  20: suminf.    0.41282 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  21: suminf.    0.74520 (2) obj. -39.4862 iterations 1
Cbc0038I Pass  22: suminf.    1.05340 (5) obj. -39.4862 iterations 10
Cbc0038I Pass  23: suminf.    1.05340 (5) obj. -39.4862 iterations 3
Cbc0038I Pass  24: suminf.    0.66408 (2) obj. -39.4862 iterations 8
Cbc0038I Pass  25: suminf.    0.70897 (2) obj. -39.4862 iterations 2
Cbc0038I Pass  26: suminf.    1.21755 (5) obj. -39.4862 iterations 8
Cbc0038I Pass  27: suminf.    1.04487 (5) obj. -39.4862 iterations 5
Cbc0038I Pass  28: suminf.    0.82003 (3) obj. -39.4862 iterations 7
Cbc0038I Pass  29: suminf.    0.82003 (3) obj. -39.4862 iterations 0
Cbc0038I Pass  30: suminf.    0.85117 (3) obj. -39.4862 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -36.2875 to -39.126 (0.05 seconds)
Cbc0038I Round again with cutoff of -45.2437
Cbc0038I Pass  30: suminf.    1.42972 (4) obj. -45.2437 iterations 0
Cbc0038I Pass  31: suminf.    1.18413 (4) obj. -45.2437 iterations 9
Cbc0038I Pass  32: suminf.    0.70543 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  33: suminf.    0.50628 (2) obj. -45.2437 iterations 2
Cbc0038I Pass  34: suminf.    0.94624 (3) obj. -45.2437 iterations 2
Cbc0038I Pass  35: suminf.    0.93728 (3) obj. -45.2437 iterations 2
Cbc0038I Pass  36: suminf.    2.80924 (10) obj. -45.2437 iterations 16
Cbc0038I Pass  37: suminf.    1.02492 (5) obj. -45.2437 iterations 9
Cbc0038I Pass  38: suminf.    0.55343 (2) obj. -45.2437 iterations 6
Cbc0038I Pass  39: suminf.    1.06183 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  40: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I Pass  41: suminf.    0.71428 (3) obj. -45.2437 iterations 5
Cbc0038I Pass  42: suminf.    1.02837 (4) obj. -45.2437 iterations 9
Cbc0038I Pass  43: suminf.    1.02837 (4) obj. -45.2437 iterations 1
Cbc0038I Pass  44: suminf.    0.55343 (2) obj. -45.2437 iterations 3
Cbc0038I Pass  45: suminf.    1.06183 (3) obj. -45.2437 iterations 3
Cbc0038I Pass  46: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I Pass  47: suminf.    1.30789 (7) obj. -45.2437 iterations 12
Cbc0038I Pass  48: suminf.    1.08135 (6) obj. -45.2437 iterations 4
Cbc0038I Pass  49: suminf.    1.00734 (4) obj. -45.2437 iterations 10
Cbc0038I Pass  50: suminf.    0.98458 (4) obj. -45.2437 iterations 2
Cbc0038I Pass  51: suminf.    1.08420 (5) obj. -45.2437 iterations 10
Cbc0038I Pass  52: suminf.    1.02692 (4) obj. -45.2437 iterations 5
Cbc0038I Pass  53: suminf.    1.13538 (3) obj. -45.2437 iterations 5
Cbc0038I Pass  54: suminf.    1.13538 (3) obj. -45.2437 iterations 0
Cbc0038I Pass  55: suminf.    1.16773 (4) obj. -45.2437 iterations 6
Cbc0038I Pass  56: suminf.    1.00445 (4) obj. -45.2437 iterations 5
Cbc0038I Pass  57: suminf.    1.06183 (3) obj. -45.2437 iterations 7
Cbc0038I Pass  58: suminf.    1.06183 (3) obj. -45.2437 iterations 0
Cbc0038I Pass  59: suminf.    0.55343 (2) obj. -45.4664 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.126 - took 0.05 seconds
Cbc0012I Integer solution of -39.12596 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 34 rows 20 columns
Cbc0031I 11 added rows had average density of 17.727273
Cbc0013I At root node, 11 cuts changed objective from -68.273458 to -50.579992 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1349 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 494 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -39.12596000000001, took 2486 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 100 times (1040 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

