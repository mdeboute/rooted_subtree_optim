Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 65 (-34) rows, 36 (-14) columns and 163 (-122) elements
Clp0000I Optimal - objective value 6811.0284
Coin0511I After Postsolve, objective 6811.0284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6811.028434 - 33 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 36 columns (35 integer (35 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.435%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.76754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3160.49 iterations 21
Cbc0038I Solution found of -3160.49
Cbc0038I Relaxing continuous gives -3160.49
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -3160.49 to -5446.71 (0.01 seconds)
Cbc0038I Round again with cutoff of -5583.14
Cbc0038I Pass   2: suminf.    1.46961 (6) obj. -5583.14 iterations 6
Cbc0038I Pass   3: suminf.    0.51599 (3) obj. -5583.14 iterations 5
Cbc0038I Pass   4: suminf.    1.26986 (3) obj. -5583.14 iterations 2
Cbc0038I Pass   5: suminf.    2.71475 (9) obj. -5583.14 iterations 13
Cbc0038I Pass   6: suminf.    1.00000 (6) obj. -5583.14 iterations 13
Cbc0038I Pass   7: suminf.    1.00000 (6) obj. -5583.14 iterations 0
Cbc0038I Pass   8: suminf.    1.57148 (6) obj. -5583.14 iterations 6
Cbc0038I Pass   9: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  10: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  11: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I Pass  12: suminf.    0.64832 (3) obj. -5583.14 iterations 3
Cbc0038I Pass  13: suminf.    0.86756 (3) obj. -5583.14 iterations 2
Cbc0038I Pass  14: suminf.    1.00000 (6) obj. -5583.14 iterations 8
Cbc0038I Pass  15: suminf.    1.00000 (5) obj. -5583.14 iterations 5
Cbc0038I Pass  16: suminf.    1.54121 (6) obj. -5583.14 iterations 5
Cbc0038I Pass  17: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  18: suminf.    1.03486 (5) obj. -5583.14 iterations 8
Cbc0038I Pass  19: suminf.    1.01198 (7) obj. -5583.14 iterations 2
Cbc0038I Pass  20: suminf.    1.57148 (6) obj. -5583.14 iterations 4
Cbc0038I Pass  21: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  22: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  23: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I Pass  24: suminf.    0.64832 (3) obj. -5583.14 iterations 3
Cbc0038I Pass  25: suminf.    0.86756 (3) obj. -5583.14 iterations 2
Cbc0038I Pass  26: suminf.    1.55909 (8) obj. -5583.14 iterations 14
Cbc0038I Pass  27: suminf.    1.55909 (8) obj. -5583.14 iterations 1
Cbc0038I Pass  28: suminf.    1.57148 (6) obj. -5583.14 iterations 9
Cbc0038I Pass  29: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  30: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  31: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 27 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5446.71 - took 0.01 seconds
Cbc0012I Integer solution of -5446.708 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5449.636 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 65 rows 36 columns, reduced to 22 rows 17 columns
Cbc0031I 3 added rows had average density of 9.3333333
Cbc0013I At root node, 13 cuts changed objective from -6811.0284 to -5449.636 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 144 row cuts average 3.6 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5449.636, took 102 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

