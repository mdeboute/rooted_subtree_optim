Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-8) rows, 29 (-3) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 0.00184313 - average 3.35114e-05, 6 fixed columns
Coin0506I Presolve 38 (-17) rows, 23 (-6) columns and 114 (-46) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 0.263493 - largest nonzero change 0 ( 0%) - largest zero change 1.9765705e-05
Clp0000I Optimal - objective value 100.8349
Clp0000I Optimal - objective value 100.8349
Coin0511I After Postsolve, objective 100.8349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.8349
Clp0000I Optimal - objective value 100.8349
Clp0000I Optimal - objective value 100.8349
Coin0511I After Postsolve, objective 100.8349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.8349044 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 29 columns (28 integer (28 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.565%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.4985
Cbc0038I Pass   1: suminf.    0.26667 (1) obj. -37.7497 iterations 14
Cbc0038I Solution found of -30.4166
Cbc0038I Relaxing continuous gives -30.4166
Cbc0038I Rounding solution of -33.8485 is better than previous of -30.4166

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 29 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -33.8485 to -46.415 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.857
Cbc0038I Pass   2: suminf.    0.59043 (3) obj. -51.857 iterations 2
Cbc0038I Pass   3: suminf.    0.59043 (3) obj. -51.857 iterations 1
Cbc0038I Pass   4: suminf.    0.21449 (1) obj. -51.857 iterations 7
Cbc0038I Pass   5: suminf.    0.27158 (1) obj. -51.857 iterations 3
Cbc0038I Pass   6: suminf.    0.79180 (2) obj. -51.857 iterations 7
Cbc0038I Pass   7: suminf.    0.64636 (3) obj. -51.857 iterations 8
Cbc0038I Pass   8: suminf.    0.18470 (2) obj. -51.857 iterations 2
Cbc0038I Pass   9: suminf.    0.94682 (3) obj. -51.857 iterations 4
Cbc0038I Pass  10: suminf.    0.45538 (3) obj. -51.857 iterations 2
Cbc0038I Pass  11: suminf.    0.85927 (4) obj. -51.857 iterations 6
Cbc0038I Pass  12: suminf.    1.23702 (3) obj. -51.857 iterations 6
Cbc0038I Pass  13: suminf.    1.03183 (5) obj. -51.857 iterations 3
Cbc0038I Pass  14: suminf.    1.55582 (5) obj. -51.857 iterations 6
Cbc0038I Pass  15: suminf.    1.55582 (5) obj. -51.857 iterations 0
Cbc0038I Pass  16: suminf.    2.57971 (8) obj. -51.857 iterations 8
Cbc0038I Pass  17: suminf.    1.96858 (6) obj. -51.857 iterations 3
Cbc0038I Pass  18: suminf.    1.96858 (6) obj. -51.857 iterations 0
Cbc0038I Pass  19: suminf.    1.61258 (5) obj. -51.857 iterations 8
Cbc0038I Pass  20: suminf.    1.58582 (5) obj. -51.857 iterations 1
Cbc0038I Pass  21: suminf.    1.27199 (4) obj. -51.857 iterations 4
Cbc0038I Pass  22: suminf.    1.52227 (5) obj. -51.857 iterations 7
Cbc0038I Pass  23: suminf.    1.82892 (5) obj. -51.857 iterations 5
Cbc0038I Pass  24: suminf.    2.43900 (7) obj. -51.857 iterations 8
Cbc0038I Pass  25: suminf.    1.65639 (5) obj. -51.857 iterations 3
Cbc0038I Pass  26: suminf.    1.65639 (5) obj. -51.857 iterations 0
Cbc0038I Pass  27: suminf.    1.65047 (5) obj. -51.857 iterations 9
Cbc0038I Pass  28: suminf.    1.65047 (5) obj. -51.857 iterations 1
Cbc0038I Pass  29: suminf.    1.10691 (3) obj. -51.857 iterations 5
Cbc0038I Pass  30: suminf.    0.96166 (3) obj. -51.857 iterations 2
Cbc0038I Pass  31: suminf.    1.03183 (5) obj. -51.857 iterations 7
Cbc0038I Rounding solution of -47.0794 is better than previous of -46.415

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 29 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -47.0794 to -48.5325 (0.02 seconds)
Cbc0038I Round again with cutoff of -61.6526
Cbc0038I Pass  31: suminf.    1.01508 (4) obj. -61.6526 iterations 1
Cbc0038I Pass  32: suminf.    0.90642 (6) obj. -61.6526 iterations 9
Cbc0038I Pass  33: suminf.    0.88225 (5) obj. -61.6526 iterations 1
Cbc0038I Pass  34: suminf.    1.09677 (4) obj. -61.6526 iterations 4
Cbc0038I Pass  35: suminf.    1.07167 (4) obj. -61.6526 iterations 1
Cbc0038I Pass  36: suminf.    1.62870 (4) obj. -61.6526 iterations 6
Cbc0038I Pass  37: suminf.    0.90642 (6) obj. -61.6526 iterations 3
Cbc0038I Pass  38: suminf.    0.88225 (5) obj. -61.6526 iterations 1
Cbc0038I Pass  39: suminf.    1.09677 (4) obj. -61.6526 iterations 4
Cbc0038I Pass  40: suminf.    1.07167 (4) obj. -61.6526 iterations 1
Cbc0038I Pass  41: suminf.    1.62870 (4) obj. -61.6526 iterations 6
Cbc0038I Pass  42: suminf.    0.90642 (6) obj. -61.6526 iterations 3
Cbc0038I Pass  43: suminf.    0.88225 (5) obj. -61.6526 iterations 1
Cbc0038I Pass  44: suminf.    1.09677 (4) obj. -61.6526 iterations 4
Cbc0038I Pass  45: suminf.    1.07167 (4) obj. -61.6526 iterations 1
Cbc0038I Pass  46: suminf.    1.62870 (4) obj. -61.6526 iterations 6
Cbc0038I Pass  47: suminf.    0.90642 (6) obj. -61.6526 iterations 3
Cbc0038I Pass  48: suminf.    0.88225 (5) obj. -61.6526 iterations 1
Cbc0038I Pass  49: suminf.    1.09677 (4) obj. -61.6526 iterations 4
Cbc0038I Pass  50: suminf.    1.07167 (4) obj. -61.6526 iterations 1
Cbc0038I Pass  51: suminf.    1.62870 (4) obj. -61.6526 iterations 6
Cbc0038I Pass  52: suminf.    0.90642 (6) obj. -61.6526 iterations 3
Cbc0038I Pass  53: suminf.    0.88225 (5) obj. -61.6526 iterations 1
Cbc0038I Pass  54: suminf.    1.09677 (4) obj. -61.6526 iterations 4
Cbc0038I Pass  55: suminf.    1.07167 (4) obj. -61.6526 iterations 1
Cbc0038I Pass  56: suminf.    1.62870 (4) obj. -61.6526 iterations 6
Cbc0038I Pass  57: suminf.    0.90642 (6) obj. -61.6526 iterations 3
Cbc0038I Pass  58: suminf.    0.88225 (5) obj. -61.6526 iterations 1
Cbc0038I Pass  59: suminf.    1.09677 (4) obj. -61.6526 iterations 4
Cbc0038I Pass  60: suminf.    1.07167 (4) obj. -61.6526 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 29 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5325 - took 0.02 seconds
Cbc0012I Integer solution of -48.53245 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 29 columns, reduced to 22 rows 15 columns
Cbc0031I 13 added rows had average density of 16.923077
Cbc0013I At root node, 13 cuts changed objective from -100.8349 to -62.212692 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1647 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1005 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -50.54027 found by strong branching after 2324 iterations and 3 nodes (0.18 seconds)
Cbc0016I Integer solution of -51.91845 found by strong branching after 2324 iterations and 3 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -51.91844999999999, took 2417 iterations and 6 nodes (0.18 seconds)
Cbc0032I Strong branching done 70 times (751 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

