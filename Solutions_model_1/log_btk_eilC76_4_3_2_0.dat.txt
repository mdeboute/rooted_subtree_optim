Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 411 (-42) elements
Clp1000I sum of infeasibilities 4.15869e-05 - average 3.1035e-07, 5 fixed columns
Coin0506I Presolve 124 (-10) rows, 70 (-5) columns and 381 (-30) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 2.6164616 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 62.915246
Clp0000I Optimal - objective value 62.915246
Coin0511I After Postsolve, objective 62.915246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.915246
Clp0000I Optimal - objective value 62.915246
Clp0000I Optimal - objective value 62.915246
Coin0511I After Postsolve, objective 62.915246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.91524647 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.183%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.27967
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.8106 iterations 54
Cbc0038I Solution found of -5.8106
Cbc0038I Relaxing continuous gives -5.8106
Cbc0038I Rounding solution of -22.3907 is better than previous of -5.8106

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 75 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -22.3907 to -30.055 (0.05 seconds)
Cbc0038I Round again with cutoff of -33.3411
Cbc0038I Pass   2: suminf.    2.83255 (11) obj. -33.3411 iterations 13
Cbc0038I Pass   3: suminf.    1.81567 (7) obj. -33.3411 iterations 12
Cbc0038I Pass   4: suminf.    1.81567 (7) obj. -33.3411 iterations 0
Cbc0038I Pass   5: suminf.    2.85669 (12) obj. -33.3411 iterations 10
Cbc0038I Pass   6: suminf.    2.75987 (14) obj. -33.3411 iterations 5
Cbc0038I Pass   7: suminf.    2.04729 (7) obj. -33.3411 iterations 17
Cbc0038I Pass   8: suminf.    1.68995 (6) obj. -33.3411 iterations 2
Cbc0038I Pass   9: suminf.    2.27674 (6) obj. -33.3411 iterations 7
Cbc0038I Pass  10: suminf.    2.27674 (6) obj. -33.3411 iterations 0
Cbc0038I Pass  11: suminf.    1.52307 (5) obj. -33.3411 iterations 5
Cbc0038I Pass  12: suminf.    1.46114 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  13: suminf.    1.46114 (5) obj. -33.3411 iterations 0
Cbc0038I Pass  14: suminf.    1.55622 (5) obj. -33.3411 iterations 5
Cbc0038I Pass  15: suminf.    1.17404 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  16: suminf.    1.17404 (5) obj. -33.3411 iterations 0
Cbc0038I Pass  17: suminf.    1.89437 (6) obj. -33.3411 iterations 4
Cbc0038I Pass  18: suminf.    1.46428 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  19: suminf.    1.46114 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  20: suminf.    1.55622 (5) obj. -33.3411 iterations 5
Cbc0038I Pass  21: suminf.    1.17404 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  22: suminf.    1.17404 (5) obj. -33.3411 iterations 0
Cbc0038I Pass  23: suminf.    1.89437 (6) obj. -33.3411 iterations 4
Cbc0038I Pass  24: suminf.    1.46428 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  25: suminf.    1.46114 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  26: suminf.    1.55622 (5) obj. -33.3411 iterations 5
Cbc0038I Pass  27: suminf.    1.17404 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  28: suminf.    1.17404 (5) obj. -33.3411 iterations 0
Cbc0038I Pass  29: suminf.    1.89437 (6) obj. -33.3411 iterations 4
Cbc0038I Pass  30: suminf.    1.46428 (5) obj. -33.3411 iterations 1
Cbc0038I Pass  31: suminf.    1.46114 (5) obj. -33.3411 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 75 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -30.055 - took 0.08 seconds
Cbc0012I Integer solution of -30.05498 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 75 rows 43 columns
Cbc0031I 21 added rows had average density of 47.904762
Cbc0013I At root node, 21 cuts changed objective from -62.915246 to -55.745979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11182 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1649 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 153 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30.05498 best solution, best possible -55.745979 (0.80 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 60 rows 36 columns
Cbc0012I Integer solution of -32.18223 found by RINS after 8700 iterations and 41 nodes (1.07 seconds)
Cbc0001I Search completed - best objective -32.18223, took 9889 iterations and 76 nodes (1.14 seconds)
Cbc0032I Strong branching done 846 times (15668 iterations), fathomed 5 nodes and fixed 44 variables
Cbc0035I Maximum depth 26, 198 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.15

