Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 48 (-2) columns and 271 (-14) elements
Clp1000I sum of infeasibilities 0.023092 - average 0.000253759, 12 fixed columns
Coin0506I Presolve 62 (-29) rows, 36 (-12) columns and 189 (-82) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 1.5483678 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Coin0511I After Postsolve, objective 2140.2531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.89401492 - largest nonzero change 0 ( 0%) - largest zero change 2.9487244e-05
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Coin0511I After Postsolve, objective 2140.2531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2140.253124 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 48 columns (47 integer (47 of which binary)) and 271 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.912%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 9.00942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 226.712 iterations 31
Cbc0038I Solution found of 226.712
Cbc0038I Relaxing continuous gives 226.712
Cbc0038I Rounding solution of -145.521 is better than previous of 226.712

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -344.994
Cbc0038I Pass   2: suminf.    0.78892 (6) obj. -344.994 iterations 5
Cbc0038I Pass   3: suminf.    0.98736 (4) obj. -344.994 iterations 6
Cbc0038I Pass   4: suminf.    0.97609 (4) obj. -344.994 iterations 2
Cbc0038I Pass   5: suminf.    1.48693 (6) obj. -344.994 iterations 5
Cbc0038I Pass   6: suminf.    1.48882 (7) obj. -344.994 iterations 1
Cbc0038I Pass   7: suminf.    2.40439 (8) obj. -344.994 iterations 8
Cbc0038I Pass   8: suminf.    2.07300 (9) obj. -344.994 iterations 3
Cbc0038I Pass   9: suminf.    2.04183 (10) obj. -344.994 iterations 1
Cbc0038I Pass  10: suminf.    2.36445 (6) obj. -344.994 iterations 10
Cbc0038I Pass  11: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  12: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  13: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  14: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  15: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  16: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  17: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I Pass  18: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  19: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  20: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  21: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  22: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  23: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  24: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I Pass  25: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  26: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  27: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  28: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  29: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  30: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  31: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -145.521 - took 0.04 seconds
Cbc0012I Integer solution of -145.5212 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 91 rows 48 columns, reduced to 52 rows 31 columns
Cbc0012I Integer solution of -165.6362 found by RINS after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 23 added rows had average density of 27.391304
Cbc0013I At root node, 23 cuts changed objective from -2140.2531 to -1176.0526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8177 row cuts average 4.8 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2071 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 242 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 7 nodes, 8 on tree, -165.6362 best solution, best possible -1176.0526 (0.68 seconds)
Cbc0001I Search completed - best objective -165.6361999999999, took 7854 iterations and 28 nodes (0.75 seconds)
Cbc0032I Strong branching done 480 times (9194 iterations), fathomed 2 nodes and fixed 16 variables
Cbc0035I Maximum depth 10, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.73   (Wallclock seconds):       0.76

