Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 2.7991e-05 - average 1.99936e-07, 14 fixed columns
Coin0506I Presolve 110 (-30) rows, 61 (-15) columns and 336 (-88) elements
Clp0029I End of values pass after 61 iterations
Clp0000I Optimal - objective value 56.98986
Clp0000I Optimal - objective value 56.98986
Coin0511I After Postsolve, objective 56.98986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.98986
Clp0000I Optimal - objective value 56.98986
Clp0000I Optimal - objective value 56.98986
Coin0511I After Postsolve, objective 56.98986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.9898601 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.4133
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.87155 iterations 59
Cbc0038I Solution found of -8.87155
Cbc0038I Relaxing continuous gives -8.87155
Cbc0038I Rounding solution of -13.0682 is better than previous of -8.87155

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 77 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -13.0682 to -27.5698 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.5119
Cbc0038I Pass   2: suminf.    1.50690 (6) obj. -30.5119 iterations 6
Cbc0038I Pass   3: suminf.    1.41556 (5) obj. -30.5119 iterations 1
Cbc0038I Pass   4: suminf.    1.23011 (4) obj. -30.5119 iterations 1
Cbc0038I Pass   5: suminf.    0.95227 (4) obj. -30.5119 iterations 5
Cbc0038I Pass   6: suminf.    0.86086 (4) obj. -30.5119 iterations 2
Cbc0038I Pass   7: suminf.    1.23011 (4) obj. -30.5119 iterations 4
Cbc0038I Pass   8: suminf.    3.35885 (9) obj. -30.5119 iterations 18
Cbc0038I Pass   9: suminf.    1.35647 (6) obj. -30.5119 iterations 5
Cbc0038I Pass  10: suminf.    1.62246 (7) obj. -30.5119 iterations 11
Cbc0038I Pass  11: suminf.    1.33497 (4) obj. -30.5119 iterations 3
Cbc0038I Pass  12: suminf.    1.25720 (4) obj. -30.5119 iterations 1
Cbc0038I Pass  13: suminf.    1.52120 (4) obj. -30.5119 iterations 2
Cbc0038I Pass  14: suminf.    1.52120 (4) obj. -30.5119 iterations 0
Cbc0038I Pass  15: suminf.    1.33088 (4) obj. -30.5119 iterations 2
Cbc0038I Pass  16: suminf.    2.68749 (10) obj. -30.5119 iterations 17
Cbc0038I Pass  17: suminf.    1.25877 (4) obj. -30.5119 iterations 11
Cbc0038I Pass  18: suminf.    1.14700 (5) obj. -30.5119 iterations 1
Cbc0038I Pass  19: suminf.    0.64702 (3) obj. -30.5119 iterations 8
Cbc0038I Pass  20: suminf.    0.64702 (3) obj. -30.5119 iterations 1
Cbc0038I Pass  21: suminf.    1.15855 (3) obj. -30.5119 iterations 2
Cbc0038I Pass  22: suminf.    1.15855 (3) obj. -30.5119 iterations 1
Cbc0038I Pass  23: suminf.    0.80446 (3) obj. -30.5119 iterations 4
Cbc0038I Pass  24: suminf.    5.15321 (17) obj. -30.5119 iterations 28
Cbc0038I Pass  25: suminf.    3.21923 (11) obj. -30.5119 iterations 15
Cbc0038I Pass  26: suminf.    1.88920 (7) obj. -30.5119 iterations 21
Cbc0038I Pass  27: suminf.    1.86999 (7) obj. -30.5119 iterations 1
Cbc0038I Pass  28: suminf.    2.14868 (6) obj. -30.5119 iterations 5
Cbc0038I Pass  29: suminf.    1.01514 (5) obj. -30.5119 iterations 4
Cbc0038I Pass  30: suminf.    1.47297 (6) obj. -30.5119 iterations 4
Cbc0038I Pass  31: suminf.    1.47297 (6) obj. -30.5119 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -27.5698 to -29.5375 (0.10 seconds)
Cbc0038I Round again with cutoff of -35.8075
Cbc0038I Pass  31: suminf.    2.16384 (8) obj. -35.8075 iterations 3
Cbc0038I Pass  32: suminf.    2.06491 (7) obj. -35.8075 iterations 1
Cbc0038I Pass  33: suminf.    1.68426 (6) obj. -35.8075 iterations 1
Cbc0038I Pass  34: suminf.    1.68426 (6) obj. -35.8075 iterations 0
Cbc0038I Pass  35: suminf.    2.02340 (6) obj. -35.8075 iterations 8
Cbc0038I Pass  36: suminf.    1.98081 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  37: suminf.    1.86200 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  38: suminf.    1.68426 (6) obj. -35.8075 iterations 6
Cbc0038I Pass  39: suminf.    1.68426 (6) obj. -35.8075 iterations 0
Cbc0038I Pass  40: suminf.    2.02340 (6) obj. -35.8075 iterations 8
Cbc0038I Pass  41: suminf.    1.98081 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  42: suminf.    1.86200 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  43: suminf.    1.68426 (6) obj. -35.8075 iterations 6
Cbc0038I Pass  44: suminf.    1.68426 (6) obj. -35.8075 iterations 0
Cbc0038I Pass  45: suminf.    2.02340 (6) obj. -35.8075 iterations 8
Cbc0038I Pass  46: suminf.    1.98081 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  47: suminf.    1.86200 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  48: suminf.    1.68426 (6) obj. -35.8075 iterations 6
Cbc0038I Pass  49: suminf.    1.68426 (6) obj. -35.8075 iterations 0
Cbc0038I Pass  50: suminf.    2.02340 (6) obj. -35.8075 iterations 8
Cbc0038I Pass  51: suminf.    1.98081 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  52: suminf.    1.86200 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  53: suminf.    1.68426 (6) obj. -35.8075 iterations 6
Cbc0038I Pass  54: suminf.    1.68426 (6) obj. -35.8075 iterations 0
Cbc0038I Pass  55: suminf.    2.02340 (6) obj. -35.8075 iterations 8
Cbc0038I Pass  56: suminf.    1.98081 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  57: suminf.    1.86200 (5) obj. -35.8075 iterations 1
Cbc0038I Pass  58: suminf.    1.68426 (6) obj. -35.8075 iterations 6
Cbc0038I Pass  59: suminf.    1.68426 (6) obj. -35.8075 iterations 0
Cbc0038I Pass  60: suminf.    2.02340 (6) obj. -35.8075 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -29.5375 - took 0.12 seconds
Cbc0012I Integer solution of -29.53753 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 79 rows 45 columns
Cbc0031I 29 added rows had average density of 58.241379
Cbc0013I At root node, 29 cuts changed objective from -56.98986 to -45.44213 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13000 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2605 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 171 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 229 row cuts average 74.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.53753 best solution, best possible -45.44213 (1.07 seconds)
Cbc0001I Search completed - best objective -29.53753, took 9730 iterations and 34 nodes (1.29 seconds)
Cbc0032I Strong branching done 556 times (12579 iterations), fathomed 2 nodes and fixed 21 variables
Cbc0035I Maximum depth 14, 73 variables fixed on reduced cost
Total time (CPU seconds):       1.25   (Wallclock seconds):       1.30

