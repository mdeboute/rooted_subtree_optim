Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 75 (-3) columns and 398 (-55) elements
Clp1000I sum of infeasibilities 3.02076e-05 - average 2.35997e-07, 17 fixed columns
Coin0506I Presolve 96 (-32) rows, 57 (-18) columns and 298 (-100) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 58.437893
Clp0000I Optimal - objective value 58.437893
Coin0511I After Postsolve, objective 58.437893, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.437893
Clp0000I Optimal - objective value 58.437893
Clp0000I Optimal - objective value 58.437893
Coin0511I After Postsolve, objective 58.437893, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.4378935 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 75 columns (74 integer (74 of which binary)) and 399 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.85855
Cbc0038I Solution found of -8.22606
Cbc0038I Relaxing continuous gives -17.1743
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 75 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -17.1743 to -22.1469 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.7761
Cbc0038I Pass   1: suminf.    1.29525 (23) obj. -25.7761 iterations 37
Cbc0038I Pass   2: suminf.    1.42044 (6) obj. -25.7761 iterations 30
Cbc0038I Pass   3: suminf.    1.27218 (6) obj. -25.7761 iterations 2
Cbc0038I Pass   4: suminf.    1.23358 (4) obj. -25.7761 iterations 12
Cbc0038I Pass   5: suminf.    0.54577 (3) obj. -25.7761 iterations 10
Cbc0038I Pass   6: suminf.    0.41490 (3) obj. -25.7761 iterations 7
Cbc0038I Pass   7: suminf.    0.35502 (3) obj. -25.7761 iterations 10
Cbc0038I Pass   8: suminf.    2.00697 (6) obj. -25.7761 iterations 17
Cbc0038I Pass   9: suminf.    2.00697 (6) obj. -25.7761 iterations 4
Cbc0038I Pass  10: suminf.    1.57377 (5) obj. -25.7761 iterations 12
Cbc0038I Pass  11: suminf.    3.10870 (9) obj. -25.7761 iterations 18
Cbc0038I Pass  12: suminf.    1.61016 (6) obj. -25.7761 iterations 9
Cbc0038I Pass  13: suminf.    1.72341 (5) obj. -25.7761 iterations 17
Cbc0038I Pass  14: suminf.    1.50303 (6) obj. -25.7761 iterations 3
Cbc0038I Pass  15: suminf.    0.80551 (3) obj. -25.7761 iterations 10
Cbc0038I Pass  16: suminf.    0.80551 (3) obj. -25.7761 iterations 0
Cbc0038I Pass  17: suminf.    1.00683 (3) obj. -25.7761 iterations 5
Cbc0038I Pass  18: suminf.    0.86229 (3) obj. -25.7761 iterations 8
Cbc0038I Pass  19: suminf.    0.86229 (3) obj. -25.7761 iterations 0
Cbc0038I Pass  20: suminf.    0.98666 (3) obj. -25.7761 iterations 6
Cbc0038I Pass  21: suminf.    0.98666 (3) obj. -25.7761 iterations 0
Cbc0038I Pass  22: suminf.    2.23898 (7) obj. -25.7761 iterations 21
Cbc0038I Pass  23: suminf.    2.10588 (8) obj. -25.7761 iterations 10
Cbc0038I Pass  24: suminf.    1.93876 (5) obj. -25.7761 iterations 12
Cbc0038I Pass  25: suminf.    1.01011 (5) obj. -25.7761 iterations 4
Cbc0038I Pass  26: suminf.    1.04071 (3) obj. -25.7761 iterations 11
Cbc0038I Pass  27: suminf.    0.81506 (3) obj. -25.7761 iterations 3
Cbc0038I Pass  28: suminf.    0.80862 (2) obj. -25.7761 iterations 2
Cbc0038I Pass  29: suminf.    0.83841 (3) obj. -25.7761 iterations 3
Cbc0038I Pass  30: suminf.    0.43790 (2) obj. -25.7761 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 75 columns, reduced to 82 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -22.1469 - took 0.10 seconds
Cbc0012I Integer solution of -22.14692 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 128 rows 75 columns, reduced to 69 rows 41 columns
Cbc0031I 24 added rows had average density of 66.208333
Cbc0013I At root node, 24 cuts changed objective from -58.437893 to -49.001411 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10115 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1808 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.14692 best solution, best possible -49.001411 (0.73 seconds)
Cbc0038I Full problem 128 rows 75 columns, reduced to 40 rows 26 columns
Cbc0012I Integer solution of -22.20929 found by RINS after 7448 iterations and 41 nodes (0.97 seconds)
Cbc0038I Full problem 128 rows 75 columns, reduced to 10 rows 11 columns
Cbc0004I Integer solution of -22.21539 found after 9690 iterations and 148 nodes (1.11 seconds)
Cbc0001I Search completed - best objective -22.21539019999999, took 10145 iterations and 160 nodes (1.13 seconds)
Cbc0032I Strong branching done 1154 times (18451 iterations), fathomed 12 nodes and fixed 47 variables
Cbc0035I Maximum depth 33, 435 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.14

