Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 67 (-11) columns and 384 (-69) elements
Clp1000I sum of infeasibilities 7.53197e-05 - average 5.83874e-07, 13 fixed columns
Coin0506I Presolve 96 (-33) rows, 53 (-14) columns and 291 (-93) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 2.0032158 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Coin0511I After Postsolve, objective 54.785146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Coin0511I After Postsolve, objective 54.785146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.78514623 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 67 columns (66 integer (66 of which binary)) and 453 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.996%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 3.50946
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.6211 iterations 42
Cbc0038I Solution found of -14.6211
Cbc0038I Relaxing continuous gives -14.6211
Cbc0038I Rounding solution of -19.556 is better than previous of -14.6211

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 45 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -19.556 to -20.9195 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.1759
Cbc0038I Pass   2: suminf.    0.57144 (5) obj. -24.1759 iterations 5
Cbc0038I Pass   3: suminf.    0.93050 (3) obj. -24.1759 iterations 7
Cbc0038I Pass   4: suminf.    0.39139 (3) obj. -24.1759 iterations 2
Cbc0038I Pass   5: suminf.    0.51370 (2) obj. -24.1759 iterations 4
Cbc0038I Pass   6: suminf.    0.49253 (2) obj. -24.1759 iterations 1
Cbc0038I Pass   7: suminf.    0.41401 (1) obj. -24.1759 iterations 2
Cbc0038I Pass   8: suminf.    0.13162 (1) obj. -24.1759 iterations 1
Cbc0038I Pass   9: suminf.    3.38733 (9) obj. -24.1759 iterations 16
Cbc0038I Pass  10: suminf.    1.22606 (5) obj. -24.1759 iterations 22
Cbc0038I Pass  11: suminf.    1.50741 (5) obj. -24.1759 iterations 5
Cbc0038I Pass  12: suminf.    1.35467 (5) obj. -24.1759 iterations 2
Cbc0038I Pass  13: suminf.    0.98076 (5) obj. -24.1759 iterations 3
Cbc0038I Pass  14: suminf.    0.83701 (5) obj. -24.1759 iterations 5
Cbc0038I Pass  15: suminf.    1.47825 (5) obj. -24.1759 iterations 6
Cbc0038I Pass  16: suminf.    1.78191 (10) obj. -24.1759 iterations 16
Cbc0038I Pass  17: suminf.    0.91922 (4) obj. -24.1759 iterations 15
Cbc0038I Pass  18: suminf.    0.41512 (5) obj. -24.1759 iterations 9
Cbc0038I Pass  19: suminf.    0.71590 (3) obj. -24.1759 iterations 7
Cbc0038I Pass  20: suminf.    0.14286 (1) obj. -24.1759 iterations 2
Cbc0038I Pass  21: suminf.    0.24851 (2) obj. -24.1759 iterations 3
Cbc0038I Pass  22: suminf.    0.68877 (2) obj. -24.1759 iterations 2
Cbc0038I Pass  23: suminf.    4.54413 (18) obj. -24.1759 iterations 20
Cbc0038I Pass  24: suminf.    1.22451 (7) obj. -24.1759 iterations 27
Cbc0038I Pass  25: suminf.    0.93050 (3) obj. -24.1759 iterations 9
Cbc0038I Pass  26: suminf.    0.39139 (3) obj. -24.1759 iterations 2
Cbc0038I Pass  27: suminf.    0.51370 (2) obj. -24.1759 iterations 4
Cbc0038I Pass  28: suminf.    0.49253 (2) obj. -24.1759 iterations 1
Cbc0038I Pass  29: suminf.    0.41401 (1) obj. -24.1759 iterations 2
Cbc0038I Pass  30: suminf.    0.13162 (1) obj. -24.1759 iterations 1
Cbc0038I Pass  31: suminf.    1.54304 (8) obj. -24.1759 iterations 7
Cbc0038I Rounding solution of -25.0749 is better than previous of -20.9195

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 83 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -30.7566
Cbc0038I Pass  31: suminf.    0.98706 (6) obj. -30.7566 iterations 2
Cbc0038I Pass  32: suminf.    0.78378 (3) obj. -30.7566 iterations 11
Cbc0038I Pass  33: suminf.    0.70483 (3) obj. -30.7566 iterations 1
Cbc0038I Pass  34: suminf.    0.82193 (5) obj. -30.7566 iterations 7
Cbc0038I Pass  35: suminf.    0.82193 (5) obj. -30.7566 iterations 0
Cbc0038I Pass  36: suminf.    1.59950 (5) obj. -30.7566 iterations 16
Cbc0038I Pass  37: suminf.    0.81322 (3) obj. -30.7566 iterations 11
Cbc0038I Pass  38: suminf.    0.50356 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  39: suminf.    0.58132 (2) obj. -30.7566 iterations 4
Cbc0038I Pass  40: suminf.    0.24104 (2) obj. -30.7566 iterations 1
Cbc0038I Pass  41: suminf.    0.57472 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  42: suminf.    0.57472 (3) obj. -30.7566 iterations 0
Cbc0038I Pass  43: suminf.    0.58132 (2) obj. -30.7566 iterations 2
Cbc0038I Pass  44: suminf.    1.57666 (7) obj. -30.7566 iterations 10
Cbc0038I Pass  45: suminf.    0.58244 (4) obj. -30.7566 iterations 8
Cbc0038I Pass  46: suminf.    1.29804 (4) obj. -30.7566 iterations 5
Cbc0038I Pass  47: suminf.    1.29804 (4) obj. -30.7566 iterations 0
Cbc0038I Pass  48: suminf.    0.90279 (4) obj. -30.7566 iterations 3
Cbc0038I Pass  49: suminf.    0.90279 (4) obj. -30.7566 iterations 0
Cbc0038I Pass  50: suminf.    1.11737 (4) obj. -30.7566 iterations 3
Cbc0038I Pass  51: suminf.    1.11227 (4) obj. -30.7566 iterations 2
Cbc0038I Pass  52: suminf.    1.00167 (4) obj. -30.7566 iterations 2
Cbc0038I Pass  53: suminf.    0.75899 (4) obj. -30.7566 iterations 12
Cbc0038I Pass  54: suminf.    0.50356 (3) obj. -30.7566 iterations 7
Cbc0038I Pass  55: suminf.    0.58132 (2) obj. -30.7566 iterations 4
Cbc0038I Pass  56: suminf.    0.24104 (2) obj. -30.7566 iterations 1
Cbc0038I Pass  57: suminf.    0.57472 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  58: suminf.    0.57472 (3) obj. -30.7566 iterations 0
Cbc0038I Pass  59: suminf.    0.58132 (2) obj. -30.7566 iterations 2
Cbc0038I Pass  60: suminf.    0.46534 (2) obj. -30.7566 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -25.0749 - took 0.05 seconds
Cbc0012I Integer solution of -25.07486 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 122 rows 67 columns, reduced to 46 rows 25 columns
Cbc0031I 18 added rows had average density of 40.055556
Cbc0013I At root node, 18 cuts changed objective from -53.482955 to -37.775913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4269 row cuts average 7.8 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1359 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 295 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 60.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.07486, took 5136 iterations and 40 nodes (0.64 seconds)
Cbc0032I Strong branching done 618 times (9829 iterations), fathomed 1 nodes and fixed 15 variables
Cbc0035I Maximum depth 10, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.65

