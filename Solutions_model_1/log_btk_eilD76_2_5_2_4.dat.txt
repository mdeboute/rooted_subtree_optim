Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 75 (-3) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 6.59673e-09 - average 4.71195e-11, 3 fixed columns
Coin0506I Presolve 134 (-6) rows, 72 (-3) columns and 404 (-18) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.542308 - largest nonzero change 0 ( 0%) - largest zero change 1.124072e-05
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Coin0511I After Postsolve, objective 32.435267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Coin0511I After Postsolve, objective 32.435267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.43526746 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 75 columns (74 integer (74 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 11.8214
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.1137 iterations 72
Cbc0038I Solution found of 10.1137
Cbc0038I Relaxing continuous gives 10.1137
Cbc0038I Rounding solution of 1.97537 is better than previous of 10.1137

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 1.97537 to -2.40571 (0.05 seconds)
Cbc0038I Round again with cutoff of -5.40876
Cbc0038I Pass   2: suminf.    1.19052 (13) obj. -5.40876 iterations 16
Cbc0038I Pass   3: suminf.    1.18879 (13) obj. -5.40876 iterations 3
Cbc0038I Pass   4: suminf.    2.72709 (9) obj. -5.40876 iterations 12
Cbc0038I Pass   5: suminf.    1.94670 (8) obj. -5.40876 iterations 7
Cbc0038I Pass   6: suminf.    1.93198 (6) obj. -5.40876 iterations 2
Cbc0038I Pass   7: suminf.    1.61871 (6) obj. -5.40876 iterations 8
Cbc0038I Pass   8: suminf.    1.41083 (6) obj. -5.40876 iterations 6
Cbc0038I Pass   9: suminf.    2.27155 (9) obj. -5.40876 iterations 14
Cbc0038I Pass  10: suminf.    1.66554 (10) obj. -5.40876 iterations 2
Cbc0038I Pass  11: suminf.    2.04847 (8) obj. -5.40876 iterations 19
Cbc0038I Pass  12: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  13: suminf.    2.12633 (8) obj. -5.40876 iterations 10
Cbc0038I Pass  14: suminf.    2.12633 (8) obj. -5.40876 iterations 0
Cbc0038I Pass  15: suminf.    3.06982 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  16: suminf.    2.16212 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  17: suminf.    2.16212 (6) obj. -5.40876 iterations 0
Cbc0038I Pass  18: suminf.    2.50968 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  19: suminf.    2.08694 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  20: suminf.    2.08694 (6) obj. -5.40876 iterations 0
Cbc0038I Pass  21: suminf.    2.68732 (7) obj. -5.40876 iterations 4
Cbc0038I Pass  22: suminf.    2.35568 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  23: suminf.    2.06943 (9) obj. -5.40876 iterations 1
Cbc0038I Pass  24: suminf.    1.90065 (9) obj. -5.40876 iterations 2
Cbc0038I Pass  25: suminf.    2.29582 (9) obj. -5.40876 iterations 18
Cbc0038I Pass  26: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  27: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  28: suminf.    2.12633 (8) obj. -5.40876 iterations 10
Cbc0038I Pass  29: suminf.    2.12633 (8) obj. -5.40876 iterations 0
Cbc0038I Pass  30: suminf.    3.06982 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  31: suminf.    2.16212 (6) obj. -5.40876 iterations 4
Cbc0038I Rounding solution of -2.99386 is better than previous of -2.40571

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -2.99386 to -3.44603 (0.11 seconds)
Cbc0038I Round again with cutoff of -10.8141
Cbc0038I Pass  31: suminf.    2.61081 (30) obj. -10.8141 iterations 21
Cbc0038I Pass  32: suminf.    2.61081 (30) obj. -10.8141 iterations 0
Cbc0038I Pass  33: suminf.    2.59374 (8) obj. -10.8141 iterations 25
Cbc0038I Pass  34: suminf.    2.19525 (8) obj. -10.8141 iterations 14
Cbc0038I Pass  35: suminf.    2.19525 (8) obj. -10.8141 iterations 0
Cbc0038I Pass  36: suminf.    3.60426 (10) obj. -10.8141 iterations 13
Cbc0038I Pass  37: suminf.    2.34992 (6) obj. -10.8141 iterations 6
Cbc0038I Pass  38: suminf.    2.25742 (7) obj. -10.8141 iterations 4
Cbc0038I Pass  39: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  40: suminf.    3.06416 (7) obj. -10.8141 iterations 8
Cbc0038I Pass  41: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  42: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  43: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  44: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I Pass  45: suminf.    2.34992 (6) obj. -10.8141 iterations 3
Cbc0038I Pass  46: suminf.    2.25742 (7) obj. -10.8141 iterations 4
Cbc0038I Pass  47: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  48: suminf.    3.06416 (7) obj. -10.8141 iterations 8
Cbc0038I Pass  49: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  50: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  51: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  52: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I Pass  53: suminf.    2.34992 (6) obj. -10.8141 iterations 4
Cbc0038I Pass  54: suminf.    2.25742 (7) obj. -10.8141 iterations 5
Cbc0038I Pass  55: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  56: suminf.    3.06416 (7) obj. -10.8141 iterations 10
Cbc0038I Pass  57: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  58: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  59: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  60: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -3.44603 - took 0.13 seconds
Cbc0012I Integer solution of -3.44603 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0031I 33 added rows had average density of 44.939394
Cbc0013I At root node, 33 cuts changed objective from -32.435267 to -24.870579 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22300 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3426 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.44603 best solution, best possible -24.870579 (1.45 seconds)
Cbc0012I Integer solution of -4.68391 found by rounding after 12851 iterations and 29 nodes (1.67 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 93 rows 51 columns
Cbc0038I Full problem 140 rows 75 columns, reduced to 15 rows 15 columns
Cbc0001I Search completed - best objective -4.683909999999997, took 15811 iterations and 108 nodes (1.93 seconds)
Cbc0032I Strong branching done 1236 times (23880 iterations), fathomed 9 nodes and fixed 58 variables
Cbc0035I Maximum depth 33, 327 variables fixed on reduced cost
Total time (CPU seconds):       1.88   (Wallclock seconds):       1.95

