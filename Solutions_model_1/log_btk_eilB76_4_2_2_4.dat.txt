Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 72 (-6) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 6.07217e-05 - average 4.60013e-07, 13 fixed columns
Coin0506I Presolve 100 (-32) rows, 56 (-16) columns and 304 (-96) elements
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 39.768097
Clp0000I Optimal - objective value 39.768097
Coin0511I After Postsolve, objective 39.768097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.768097
Clp0000I Optimal - objective value 39.768097
Clp0000I Optimal - objective value 39.768097
Coin0511I After Postsolve, objective 39.768097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.76809721 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 72 columns (71 integer (71 of which binary)) and 427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.743%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.39128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.89359 iterations 46
Cbc0038I Solution found of -1.89359
Cbc0038I Relaxing continuous gives -1.89359
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -1.89359 to -18.1204 (0.03 seconds)
Cbc0038I Round again with cutoff of -20.2848
Cbc0038I Pass   2: suminf.    1.29188 (5) obj. -20.2848 iterations 7
Cbc0038I Pass   3: suminf.    1.51803 (5) obj. -20.2848 iterations 8
Cbc0038I Pass   4: suminf.    1.00913 (3) obj. -20.2848 iterations 2
Cbc0038I Pass   5: suminf.    0.88268 (3) obj. -20.2848 iterations 3
Cbc0038I Pass   6: suminf.    0.87168 (3) obj. -20.2848 iterations 2
Cbc0038I Pass   7: suminf.    1.03742 (4) obj. -20.2848 iterations 4
Cbc0038I Pass   8: suminf.    2.54970 (8) obj. -20.2848 iterations 13
Cbc0038I Pass   9: suminf.    2.45752 (8) obj. -20.2848 iterations 9
Cbc0038I Pass  10: suminf.    1.03742 (4) obj. -20.2848 iterations 7
Cbc0038I Pass  11: suminf.    1.00913 (3) obj. -20.2848 iterations 2
Cbc0038I Pass  12: suminf.    0.88268 (3) obj. -20.2848 iterations 3
Cbc0038I Pass  13: suminf.    0.87168 (3) obj. -20.2848 iterations 2
Cbc0038I Pass  14: suminf.    1.03742 (4) obj. -20.2848 iterations 4
Cbc0038I Pass  15: suminf.    2.24718 (8) obj. -20.2848 iterations 15
Cbc0038I Pass  16: suminf.    1.62858 (7) obj. -20.2848 iterations 6
Cbc0038I Pass  17: suminf.    1.03742 (4) obj. -20.2848 iterations 7
Cbc0038I Pass  18: suminf.    1.00913 (3) obj. -20.2848 iterations 1
Cbc0038I Pass  19: suminf.    0.88268 (3) obj. -20.2848 iterations 3
Cbc0038I Pass  20: suminf.    0.87168 (3) obj. -20.2848 iterations 2
Cbc0038I Pass  21: suminf.    1.03742 (4) obj. -20.2848 iterations 4
Cbc0038I Pass  22: suminf.    2.37421 (11) obj. -20.2848 iterations 17
Cbc0038I Pass  23: suminf.    0.98327 (4) obj. -20.2848 iterations 19
Cbc0038I Pass  24: suminf.    4.03623 (13) obj. -20.2848 iterations 17
Cbc0038I Pass  25: suminf.    1.56074 (6) obj. -20.2848 iterations 27
Cbc0038I Pass  26: suminf.    1.29188 (5) obj. -20.2848 iterations 2
Cbc0038I Pass  27: suminf.    1.51803 (5) obj. -20.2848 iterations 8
Cbc0038I Pass  28: suminf.    1.00913 (3) obj. -20.2848 iterations 2
Cbc0038I Pass  29: suminf.    0.88268 (3) obj. -20.2848 iterations 3
Cbc0038I Pass  30: suminf.    0.87168 (3) obj. -20.2848 iterations 2
Cbc0038I Pass  31: suminf.    1.03742 (4) obj. -20.2848 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 72 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -18.1204 - took 0.04 seconds
Cbc0012I Integer solution of -18.12039 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 129 rows 72 columns, reduced to 54 rows 31 columns
Cbc0031I 29 added rows had average density of 31
Cbc0013I At root node, 29 cuts changed objective from -39.763473 to -29.839304 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6909 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1577 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 7 nodes, 8 on tree, -18.12039 best solution, best possible -29.839304 (0.68 seconds)
Cbc0001I Search completed - best objective -18.12039, took 6328 iterations and 24 nodes (0.70 seconds)
Cbc0032I Strong branching done 394 times (8398 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 10, 61 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.71

