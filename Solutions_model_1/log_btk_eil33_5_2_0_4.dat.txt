Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 34 (-35) rows, 18 (-17) columns and 98 (-97) elements
Clp0000I Optimal - objective value 106.66279
Coin0511I After Postsolve, objective 106.66279, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.6627869 - 23 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 18 columns (17 integer (17 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.661%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.52691
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -34 iterations 6
Cbc0038I Solution found of -34
Cbc0038I Relaxing continuous gives -34
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -40.4782
Cbc0038I Pass   2: suminf.    0.03833 (1) obj. -40.4782 iterations 1
Cbc0038I Solution found of -40.4782
Cbc0038I Relaxing continuous gives -42
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -52.3564
Cbc0038I Pass   3: suminf.    0.24560 (2) obj. -52.3564 iterations 1
Cbc0038I Pass   4: suminf.    0.46367 (1) obj. -52.3564 iterations 5
Cbc0038I Pass   5: suminf.    0.10153 (1) obj. -52.3564 iterations 1
Cbc0038I Pass   6: suminf.    0.39805 (2) obj. -52.3564 iterations 1
Cbc0038I Pass   7: suminf.    0.39805 (2) obj. -52.3564 iterations 0
Cbc0038I Pass   8: suminf.    0.73745 (5) obj. -52.3564 iterations 3
Cbc0038I Pass   9: suminf.    0.39805 (2) obj. -52.3564 iterations 3
Cbc0038I Pass  10: suminf.    0.39805 (2) obj. -52.3564 iterations 0
Cbc0038I Pass  11: suminf.    0.10153 (1) obj. -52.3564 iterations 1
Cbc0038I Pass  12: suminf.    0.88609 (2) obj. -52.3564 iterations 2
Cbc0038I Pass  13: suminf.    0.88609 (2) obj. -52.3564 iterations 0
Cbc0038I Pass  14: suminf.    0.10143 (2) obj. -52.3564 iterations 2
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -52.3564 iterations 2
Cbc0038I Solution found of -52.3564
Cbc0038I Relaxing continuous gives -59
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 23 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -68.9347
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  16: suminf.    0.57090 (3) obj. -68.9347 iterations 2
Cbc0038I Pass  17: suminf.    1.36413 (3) obj. -68.9347 iterations 4
Cbc0038I Pass  18: suminf.    0.62555 (3) obj. -68.9347 iterations 2
Cbc0038I Pass  19: suminf.    0.28921 (3) obj. -68.9347 iterations 5
Cbc0038I Pass  20: suminf.    0.28921 (3) obj. -68.9347 iterations 0
Cbc0038I Pass  21: suminf.    1.21348 (3) obj. -68.9347 iterations 3
Cbc0038I Pass  22: suminf.    1.35329 (4) obj. -68.9347 iterations 5
Cbc0038I Pass  23: suminf.    1.35329 (4) obj. -68.9347 iterations 0
Cbc0038I Pass  24: suminf.    1.36205 (4) obj. -68.9347 iterations 3
Cbc0038I Pass  25: suminf.    1.18094 (4) obj. -68.9347 iterations 2
Cbc0038I Pass  26: suminf.    1.82032 (5) obj. -68.9347 iterations 2
Cbc0038I Pass  27: suminf.    1.82032 (5) obj. -68.9347 iterations 1
Cbc0038I Pass  28: suminf.    0.28921 (3) obj. -68.9347 iterations 7
Cbc0038I Pass  29: suminf.    0.28921 (3) obj. -68.9347 iterations 0
Cbc0038I Pass  30: suminf.    1.21348 (3) obj. -68.9347 iterations 3
Cbc0038I Pass  31: suminf.    0.62555 (3) obj. -68.9347 iterations 1
Cbc0038I Pass  32: suminf.    1.93114 (5) obj. -68.9347 iterations 2
Cbc0038I Pass  33: suminf.    1.93114 (5) obj. -68.9347 iterations 0
Cbc0038I Pass  34: suminf.    0.28921 (3) obj. -68.9347 iterations 7
Cbc0038I Pass  35: suminf.    0.28921 (3) obj. -68.9347 iterations 0
Cbc0038I Pass  36: suminf.    1.21348 (3) obj. -68.9347 iterations 3
Cbc0038I Pass  37: suminf.    0.62555 (3) obj. -68.9347 iterations 1
Cbc0038I Pass  38: suminf.    1.51796 (4) obj. -68.9347 iterations 2
Cbc0038I Pass  39: suminf.    1.51796 (4) obj. -68.9347 iterations 1
Cbc0038I Pass  40: suminf.    0.28921 (3) obj. -68.9347 iterations 6
Cbc0038I Pass  41: suminf.    0.28921 (3) obj. -68.9347 iterations 0
Cbc0038I Pass  42: suminf.    1.21348 (3) obj. -68.9347 iterations 3
Cbc0038I Pass  43: suminf.    0.62555 (3) obj. -68.9347 iterations 1
Cbc0038I Pass  44: suminf.    2.47442 (8) obj. -68.9347 iterations 4
Cbc0038I Pass  45: suminf.    1.27938 (4) obj. -68.9347 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 22 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -59 - took 0.02 seconds
Cbc0012I Integer solution of -59 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 18 columns, reduced to 21 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -89.782454 to -89.782454 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

