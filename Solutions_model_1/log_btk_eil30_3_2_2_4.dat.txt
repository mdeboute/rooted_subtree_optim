Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 28 (-4) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 0.00912153 - average 0.000186154, 6 fixed columns
Coin0506I Presolve 36 (-13) rows, 22 (-6) columns and 110 (-38) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 97.769919
Clp0000I Optimal - objective value 97.769919
Coin0511I After Postsolve, objective 97.769919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 97.769919
Clp0000I Optimal - objective value 97.769919
Clp0000I Optimal - objective value 97.769919
Coin0511I After Postsolve, objective 97.769919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.7699189 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.070%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.38409
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.1905 iterations 15
Cbc0038I Solution found of -18.1905
Cbc0038I Relaxing continuous gives -18.1905
Cbc0038I Rounding solution of -26.0952 is better than previous of -18.1905

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -26.0952 to -35.3334 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.5771
Cbc0038I Pass   2: suminf.    0.62417 (3) obj. -41.5771 iterations 3
Cbc0038I Pass   3: suminf.    0.55687 (2) obj. -41.5771 iterations 2
Cbc0038I Pass   4: suminf.    0.35094 (3) obj. -41.5771 iterations 2
Cbc0038I Pass   5: suminf.    0.35094 (3) obj. -41.5771 iterations 0
Cbc0038I Pass   6: suminf.    0.56341 (2) obj. -41.5771 iterations 3
Cbc0038I Pass   7: suminf.    0.42838 (3) obj. -41.5771 iterations 2
Cbc0038I Pass   8: suminf.    0.67350 (2) obj. -41.5771 iterations 3
Cbc0038I Pass   9: suminf.    0.34334 (2) obj. -41.5771 iterations 2
Cbc0038I Pass  10: suminf.    1.25445 (7) obj. -41.5771 iterations 8
Cbc0038I Pass  11: suminf.    1.19166 (5) obj. -41.5771 iterations 1
Cbc0038I Pass  12: suminf.    0.81183 (3) obj. -41.5771 iterations 5
Cbc0038I Pass  13: suminf.    0.74962 (3) obj. -41.5771 iterations 2
Cbc0038I Pass  14: suminf.    0.82434 (2) obj. -41.5771 iterations 2
Cbc0038I Pass  15: suminf.    0.71757 (3) obj. -41.5771 iterations 2
Cbc0038I Pass  16: suminf.    0.60023 (2) obj. -41.5771 iterations 3
Cbc0038I Pass  17: suminf.    0.45877 (2) obj. -41.5771 iterations 1
Cbc0038I Pass  18: suminf.    0.72396 (2) obj. -41.5771 iterations 2
Cbc0038I Pass  19: suminf.    1.39249 (5) obj. -41.5771 iterations 6
Cbc0038I Pass  20: suminf.    1.39249 (5) obj. -41.5771 iterations 0
Cbc0038I Pass  21: suminf.    0.99856 (3) obj. -41.5771 iterations 2
Cbc0038I Pass  22: suminf.    0.61189 (3) obj. -41.5771 iterations 4
Cbc0038I Pass  23: suminf.    1.98142 (6) obj. -41.5771 iterations 12
Cbc0038I Pass  24: suminf.    1.21646 (3) obj. -41.5771 iterations 3
Cbc0038I Pass  25: suminf.    0.53914 (3) obj. -41.5771 iterations 4
Cbc0038I Pass  26: suminf.    0.53914 (3) obj. -41.5771 iterations 0
Cbc0038I Pass  27: suminf.    0.78031 (2) obj. -41.5771 iterations 3
Cbc0038I Pass  28: suminf.    0.70423 (3) obj. -41.5771 iterations 2
Cbc0038I Pass  29: suminf.    0.73510 (2) obj. -41.5771 iterations 3
Cbc0038I Pass  30: suminf.    0.46620 (3) obj. -41.5771 iterations 2
Cbc0038I Pass  31: suminf.    0.72396 (2) obj. -41.5771 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 35 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -35.3334 to -37.5238 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.8157
Cbc0038I Pass  31: suminf.    0.91639 (3) obj. -52.8157 iterations 0
Cbc0038I Pass  32: suminf.    0.79702 (3) obj. -52.8157 iterations 2
Cbc0038I Pass  33: suminf.    1.33233 (4) obj. -52.8157 iterations 4
Cbc0038I Pass  34: suminf.    0.81113 (4) obj. -52.8157 iterations 7
Cbc0038I Pass  35: suminf.    0.76508 (4) obj. -52.8157 iterations 1
Cbc0038I Pass  36: suminf.    1.06266 (3) obj. -52.8157 iterations 3
Cbc0038I Pass  37: suminf.    0.84921 (3) obj. -52.8157 iterations 1
Cbc0038I Pass  38: suminf.    0.93128 (4) obj. -52.8157 iterations 6
Cbc0038I Pass  39: suminf.    0.66277 (3) obj. -52.8157 iterations 2
Cbc0038I Pass  40: suminf.    1.07349 (4) obj. -52.8157 iterations 6
Cbc0038I Pass  41: suminf.    1.04509 (3) obj. -52.8157 iterations 1
Cbc0038I Pass  42: suminf.    0.65916 (4) obj. -52.8157 iterations 3
Cbc0038I Pass  43: suminf.    0.65916 (4) obj. -52.8157 iterations 0
Cbc0038I Pass  44: suminf.    1.14737 (3) obj. -52.8157 iterations 4
Cbc0038I Pass  45: suminf.    0.43326 (2) obj. -52.8157 iterations 3
Cbc0038I Pass  46: suminf.    0.90636 (4) obj. -52.8157 iterations 4
Cbc0038I Pass  47: suminf.    0.67228 (3) obj. -52.8157 iterations 2
Cbc0038I Pass  48: suminf.    1.35549 (5) obj. -52.8157 iterations 6
Cbc0038I Pass  49: suminf.    1.33595 (5) obj. -52.8157 iterations 1
Cbc0038I Pass  50: suminf.    0.69735 (3) obj. -52.8157 iterations 4
Cbc0038I Pass  51: suminf.    2.09857 (8) obj. -52.8157 iterations 5
Cbc0038I Pass  52: suminf.    0.83133 (3) obj. -52.8157 iterations 5
Cbc0038I Pass  53: suminf.    0.86968 (4) obj. -52.8157 iterations 6
Cbc0038I Pass  54: suminf.    0.75255 (4) obj. -52.8157 iterations 1
Cbc0038I Pass  55: suminf.    1.03648 (3) obj. -52.8157 iterations 3
Cbc0038I Pass  56: suminf.    0.99301 (3) obj. -52.8157 iterations 1
Cbc0038I Pass  57: suminf.    0.79449 (3) obj. -52.8157 iterations 6
Cbc0038I Pass  58: suminf.    0.76772 (3) obj. -52.8157 iterations 1
Cbc0038I Pass  59: suminf.    1.98333 (7) obj. -52.8157 iterations 10
Cbc0038I Pass  60: suminf.    1.61720 (6) obj. -52.8157 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -37.5238 - took 0.03 seconds
Cbc0012I Integer solution of -37.52385 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 21 rows 15 columns
Cbc0031I 12 added rows had average density of 24.083333
Cbc0013I At root node, 12 cuts changed objective from -97.769919 to -58.950366 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1126 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 721 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 131 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -37.52384999999998, took 2227 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 114 times (1126 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

