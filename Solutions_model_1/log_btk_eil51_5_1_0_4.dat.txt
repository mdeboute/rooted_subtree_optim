Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-33) rows, 40 (-13) columns and 218 (-85) elements
Clp1000I sum of infeasibilities 5.95628e-05 - average 8.27261e-07, 4 fixed columns
Coin0506I Presolve 51 (-21) rows, 35 (-5) columns and 166 (-52) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 76.412618
Clp0000I Optimal - objective value 76.412618
Coin0511I After Postsolve, objective 76.412618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.412618
Clp0000I Optimal - objective value 76.412618
Clp0000I Optimal - objective value 76.412618
Coin0511I After Postsolve, objective 76.412618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.4126182 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 40 columns (39 integer (39 of which binary)) and 218 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 5.05948
Cbc0038I Pass   1: suminf.    0.75472 (3) obj. -33.8804 iterations 17
Cbc0038I Pass   2: suminf.    0.23256 (2) obj. -28.171 iterations 2
Cbc0038I Solution found of -12.0186
Cbc0038I Relaxing continuous gives -12.0186
Cbc0038I Rounding solution of -42.559 is better than previous of -12.0186

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 17 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -42.559 to -60.8448 (0.01 seconds)
Cbc0038I Round again with cutoff of -62.4017
Cbc0038I Pass   3: suminf.    1.85447 (7) obj. -62.4017 iterations 5
Cbc0038I Pass   4: suminf.    1.47798 (5) obj. -62.4017 iterations 4
Cbc0038I Pass   5: suminf.    1.49641 (7) obj. -62.4017 iterations 8
Cbc0038I Pass   6: suminf.    1.41014 (5) obj. -62.4017 iterations 6
Cbc0038I Pass   7: suminf.    1.96346 (5) obj. -62.4017 iterations 10
Cbc0038I Pass   8: suminf.    0.96298 (4) obj. -62.4017 iterations 5
Cbc0038I Pass   9: suminf.    1.59433 (4) obj. -62.4017 iterations 5
Cbc0038I Pass  10: suminf.    1.20887 (5) obj. -62.4017 iterations 3
Cbc0038I Pass  11: suminf.    2.59774 (6) obj. -62.4017 iterations 7
Cbc0038I Pass  12: suminf.    4.22528 (11) obj. -62.4017 iterations 9
Cbc0038I Pass  13: suminf.    3.09242 (8) obj. -62.4017 iterations 6
Cbc0038I Pass  14: suminf.    2.22924 (8) obj. -62.4017 iterations 3
Cbc0038I Pass  15: suminf.    2.15712 (7) obj. -62.4017 iterations 3
Cbc0038I Pass  16: suminf.    2.43432 (6) obj. -62.4017 iterations 3
Cbc0038I Pass  17: suminf.    1.38443 (5) obj. -62.4017 iterations 3
Cbc0038I Pass  18: suminf.    1.01212 (5) obj. -62.4017 iterations 8
Cbc0038I Pass  19: suminf.    1.63487 (8) obj. -62.4017 iterations 4
Cbc0038I Pass  20: suminf.    0.77079 (5) obj. -62.4017 iterations 9
Cbc0038I Pass  21: suminf.    2.32025 (7) obj. -62.4017 iterations 6
Cbc0038I Pass  22: suminf.    4.55912 (13) obj. -62.4017 iterations 13
Cbc0038I Pass  23: suminf.    2.63982 (8) obj. -62.4017 iterations 12
Cbc0038I Pass  24: suminf.    2.02148 (6) obj. -62.4017 iterations 5
Cbc0038I Pass  25: suminf.    1.94658 (6) obj. -62.4017 iterations 6
Cbc0038I Pass  26: suminf.    0.90991 (7) obj. -62.4017 iterations 5
Cbc0038I Pass  27: suminf.    2.47007 (6) obj. -62.4017 iterations 7
Cbc0038I Pass  28: suminf.    2.09746 (6) obj. -62.4017 iterations 4
Cbc0038I Pass  29: suminf.    2.09746 (6) obj. -62.4017 iterations 1
Cbc0038I Pass  30: suminf.    2.12108 (6) obj. -62.4017 iterations 6
Cbc0038I Pass  31: suminf.    2.02148 (6) obj. -62.4017 iterations 3
Cbc0038I Pass  32: suminf.    1.94658 (6) obj. -62.4017 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 40 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -60.8448 - took 0.02 seconds
Cbc0012I Integer solution of -60.84481 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 72 rows 40 columns, reduced to 17 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 6.4
Cbc0013I At root node, 8 cuts changed objective from -76.412618 to -60.84481 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 70 row cuts average 3.6 elements, 4 column cuts (4 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -60.84481, took 49 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

