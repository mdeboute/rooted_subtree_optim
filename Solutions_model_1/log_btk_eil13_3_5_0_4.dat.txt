Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 14 (-15) rows, 8 (-7) columns and 37 (-38) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 14 (0) rows, 8 (0) columns and 37 (0) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Coin0511I After Postsolve, objective 18.709829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Coin0511I After Postsolve, objective 18.709829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18.70982914 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 14 rows, 8 columns (7 integer (7 of which binary)) and 37 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.824%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.23989
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0 iterations 6
Cbc0038I Solution found of 0
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 8 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2.77089
Cbc0038I Pass   2: suminf.    0.10657 (1) obj. -2.77089 iterations 1
Cbc0038I Pass   3: suminf.    0.33786 (1) obj. -2.77089 iterations 2
Cbc0038I Pass   4: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass   5: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass   6: suminf.    0.21347 (4) obj. -2.77089 iterations 3
Cbc0038I Pass   7: suminf.    0.16173 (2) obj. -2.77089 iterations 1
Cbc0038I Pass   8: suminf.    0.16173 (2) obj. -2.77089 iterations 0
Cbc0038I Pass   9: suminf.    0.21347 (4) obj. -2.77089 iterations 1
Cbc0038I Pass  10: suminf.    0.16173 (2) obj. -2.77089 iterations 1
Cbc0038I Pass  11: suminf.    0.33786 (1) obj. -2.77089 iterations 3
Cbc0038I Pass  12: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  13: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass  14: suminf.    0.98303 (4) obj. -2.77089 iterations 3
Cbc0038I Pass  15: suminf.    0.98303 (4) obj. -2.77089 iterations 0
Cbc0038I Pass  16: suminf.    0.98303 (4) obj. -2.77089 iterations 0
Cbc0038I Pass  17: suminf.    1.16833 (5) obj. -2.77089 iterations 2
Cbc0038I Pass  18: suminf.    1.15388 (5) obj. -2.77089 iterations 1
Cbc0038I Pass  19: suminf.    0.33842 (1) obj. -2.77089 iterations 6
Cbc0038I Pass  20: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  21: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass  22: suminf.    0.61575 (2) obj. -2.77089 iterations 3
Cbc0038I Pass  23: suminf.    0.10657 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  24: suminf.    0.33786 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  25: suminf.    0.33786 (1) obj. -2.77089 iterations 0
Cbc0038I Pass  26: suminf.    0.33786 (1) obj. -2.77089 iterations 0
Cbc0038I Pass  27: suminf.    0.72753 (2) obj. -2.77089 iterations 2
Cbc0038I Pass  28: suminf.    1.28645 (4) obj. -2.77089 iterations 2
Cbc0038I Pass  29: suminf.    0.72753 (2) obj. -2.77089 iterations 2
Cbc0038I Pass  30: suminf.    1.09685 (4) obj. -2.77089 iterations 1
Cbc0038I Pass  31: suminf.    0.72753 (2) obj. -2.77089 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 8 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 0 - took 0.01 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -5 found by DiveCoefficient after 7 iterations and 0 nodes (0.01 seconds)
Cbc0013I At root node, 0 cuts changed objective from -18.709829 to -5 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5, took 7 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

