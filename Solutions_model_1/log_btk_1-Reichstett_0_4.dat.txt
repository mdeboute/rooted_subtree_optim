Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 244 (-249) rows, 123 (-124) columns and 605 (-850) elements
Clp0000I Optimal - objective value 105508.09
Coin0511I After Postsolve, objective 105508.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105508.0914 - 125 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 244 rows, 123 columns (122 integer (122 of which binary)) and 605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.800%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 37.6741
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15046 iterations 73
Cbc0038I Solution found of -15046
Cbc0038I Relaxing continuous gives -15046
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 223 rows 113 columns - 1 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24092.2
Cbc0038I Pass   2: suminf.    0.07608 (1) obj. -24092.2 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -24092.2 iterations 1
Cbc0038I Solution found of -24092.2
Cbc0038I Relaxing continuous gives -35605.9
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 223 rows 113 columns - 1 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -49586.3
Cbc0038I Pass   4: suminf.    0.29199 (2) obj. -49586.3 iterations 1
Cbc0038I Pass   5: suminf.    0.44638 (3) obj. -49586.3 iterations 4
Cbc0038I Pass   6: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass   7: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass   8: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass   9: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  10: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  11: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  12: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  13: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  14: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  15: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass  16: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass  17: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  18: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  19: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  20: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  21: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  22: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  23: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  24: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass  25: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass  26: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  27: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  28: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  29: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  30: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  31: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  32: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  33: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 232 rows 117 columns - 5 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -35605.9 - took 0.01 seconds
Cbc0012I Integer solution of -35605.9 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -37140.8 found by DiveCoefficient after 45 iterations and 0 nodes (0.03 seconds)
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 1 cuts changed objective from -105508.09 to -37140.8 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 2.6 elements, 15 column cuts (15 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37140.79999999999, took 45 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

