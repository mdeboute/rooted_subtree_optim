Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.98889e-05 - average 1.45175e-07, 13 fixed columns
Coin0506I Presolve 110 (-27) rows, 61 (-14) columns and 335 (-81) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.4207249 - largest nonzero change 0 ( 0%) - largest zero change 2.8358213e-05
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Coin0511I After Postsolve, objective 38.896925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Coin0511I After Postsolve, objective 38.896925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.89692482 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.91271
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.4003 iterations 41
Cbc0038I Solution found of 11.4003
Cbc0038I Relaxing continuous gives 11.4003
Cbc0038I Rounding solution of -3.93533 is better than previous of 11.4003

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 53 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.93533 to -10.2383 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.1043
Cbc0038I Pass   2: suminf.    2.91006 (11) obj. -13.1043 iterations 13
Cbc0038I Pass   3: suminf.    1.09815 (3) obj. -13.1043 iterations 16
Cbc0038I Pass   4: suminf.    1.09815 (3) obj. -13.1043 iterations 1
Cbc0038I Pass   5: suminf.    1.48658 (6) obj. -13.1043 iterations 7
Cbc0038I Pass   6: suminf.    1.45228 (5) obj. -13.1043 iterations 1
Cbc0038I Pass   7: suminf.    0.58234 (4) obj. -13.1043 iterations 6
Cbc0038I Pass   8: suminf.    0.54177 (5) obj. -13.1043 iterations 3
Cbc0038I Pass   9: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  10: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  11: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  12: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  13: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  14: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  15: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  16: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  17: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  18: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  19: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  20: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  21: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  22: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  23: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  24: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  25: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  26: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  27: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  28: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  29: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  30: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  31: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 55 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.2383 - took 0.09 seconds
Cbc0012I Integer solution of -10.23834 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 53 rows 33 columns
Cbc0031I 25 added rows had average density of 40.96
Cbc0013I At root node, 25 cuts changed objective from -38.896925 to -30.052781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9833 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1354 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.23834 best solution, best possible -30.052781 (0.74 seconds)
Cbc0012I Integer solution of -10.24866 found by rounding after 7602 iterations and 39 nodes (0.86 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -10.24866, took 8895 iterations and 70 nodes (1.02 seconds)
Cbc0032I Strong branching done 812 times (11313 iterations), fathomed 11 nodes and fixed 35 variables
Cbc0035I Maximum depth 13, 231 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.02

