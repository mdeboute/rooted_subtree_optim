Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 575 (-28) elements
Clp1000I sum of infeasibilities 5.3371e-05 - average 2.809e-07, 13 fixed columns
Coin0506I Presolve 162 (-28) rows, 87 (-14) columns and 491 (-84) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Coin0511I After Postsolve, objective 37.278682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Clp0000I Optimal - objective value 37.278682
Coin0511I After Postsolve, objective 37.278682, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.27868215 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 575 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 59 integers unsatisfied sum - 14.1475
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.8908 iterations 87
Cbc0038I Solution found of 12.8908
Cbc0038I Relaxing continuous gives 12.8908
Cbc0038I Rounding solution of -6.80628 is better than previous of 12.8908

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -6.80628 to -8.05359 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.9762
Cbc0038I Pass   2: suminf.    4.08108 (15) obj. -10.9762 iterations 15
Cbc0038I Pass   3: suminf.    3.18559 (11) obj. -10.9762 iterations 14
Cbc0038I Pass   4: suminf.    2.66523 (9) obj. -10.9762 iterations 2
Cbc0038I Pass   5: suminf.    2.13723 (7) obj. -10.9762 iterations 11
Cbc0038I Pass   6: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass   7: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass   8: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass   9: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  10: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  11: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  12: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  13: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  14: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  15: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  16: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  17: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  18: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  19: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  20: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  21: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  22: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  23: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  24: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  25: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I Pass  26: suminf.    1.24257 (7) obj. -10.9762 iterations 3
Cbc0038I Pass  27: suminf.    2.23573 (7) obj. -10.9762 iterations 8
Cbc0038I Pass  28: suminf.    1.98414 (7) obj. -10.9762 iterations 1
Cbc0038I Pass  29: suminf.    2.13723 (7) obj. -10.9762 iterations 10
Cbc0038I Pass  30: suminf.    2.13723 (7) obj. -10.9762 iterations 0
Cbc0038I Pass  31: suminf.    1.88419 (9) obj. -10.9762 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -8.05359 - took 0.11 seconds
Cbc0012I Integer solution of -8.053587 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 109 rows 60 columns
Cbc0031I 38 added rows had average density of 60.184211
Cbc0013I At root node, 38 cuts changed objective from -37.278682 to -29.050666 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24929 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2996 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.053587 best solution, best possible -29.050666 (1.66 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 56 columns
Cbc0012I Integer solution of -9.535565 found by RINS after 13238 iterations and 43 nodes (2.01 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 57 columns
Cbc0010I After 154 nodes, 2 on tree, -9.535565 best solution, best possible -23.513623 (2.36 seconds)
Cbc0001I Search completed - best objective -9.535564999999998, took 16614 iterations and 156 nodes (2.36 seconds)
Cbc0032I Strong branching done 1746 times (33588 iterations), fathomed 8 nodes and fixed 43 variables
Cbc0035I Maximum depth 50, 71 variables fixed on reduced cost
Total time (CPU seconds):       2.32   (Wallclock seconds):       2.39

