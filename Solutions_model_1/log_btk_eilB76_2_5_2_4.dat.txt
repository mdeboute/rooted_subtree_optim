Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 2.75591e-05 - average 2.07212e-07, 11 fixed columns
Coin0506I Presolve 109 (-24) rows, 62 (-13) columns and 335 (-74) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.8740368 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Coin0511I After Postsolve, objective 63.163676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Clp0000I Optimal - objective value 63.163676
Coin0511I After Postsolve, objective 63.163676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.16367624 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.28983
Cbc0038I Solution found of 3.30599
Cbc0038I Relaxing continuous gives -3.75163
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -3.75163 to -28.9958 (0.05 seconds)
Cbc0038I Round again with cutoff of -32.3053
Cbc0038I Pass   1: suminf.    2.30315 (22) obj. -32.3053 iterations 27
Cbc0038I Pass   2: suminf.    1.94199 (6) obj. -32.3053 iterations 27
Cbc0038I Pass   3: suminf.    1.94199 (6) obj. -32.3053 iterations 1
Cbc0038I Pass   4: suminf.    2.21409 (7) obj. -32.3053 iterations 17
Cbc0038I Pass   5: suminf.    1.87573 (6) obj. -32.3053 iterations 4
Cbc0038I Pass   6: suminf.    1.55831 (4) obj. -32.3053 iterations 6
Cbc0038I Pass   7: suminf.    1.21820 (4) obj. -32.3053 iterations 9
Cbc0038I Pass   8: suminf.    1.49818 (5) obj. -32.3053 iterations 8
Cbc0038I Pass   9: suminf.    1.21820 (4) obj. -32.3053 iterations 11
Cbc0038I Pass  10: suminf.    1.05669 (4) obj. -32.3053 iterations 12
Cbc0038I Pass  11: suminf.    1.05669 (4) obj. -32.3053 iterations 4
Cbc0038I Pass  12: suminf.    0.88081 (3) obj. -32.3053 iterations 13
Cbc0038I Pass  13: suminf.    0.88081 (3) obj. -32.3053 iterations 0
Cbc0038I Pass  14: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  15: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  16: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  17: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  18: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  19: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  20: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  21: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  22: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  23: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  24: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  25: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  26: suminf.    1.40155 (4) obj. -32.3053 iterations 0
Cbc0038I Pass  27: suminf.    1.15375 (4) obj. -32.3053 iterations 8
Cbc0038I Pass  28: suminf.    0.88081 (3) obj. -32.3053 iterations 7
Cbc0038I Pass  29: suminf.    0.68501 (3) obj. -32.3053 iterations 10
Cbc0038I Pass  30: suminf.    1.40155 (4) obj. -32.3053 iterations 8
Cbc0038I Rounding solution of -29.4451 is better than previous of -28.9958

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -38.2623
Cbc0038I Pass  30: suminf.    2.78364 (22) obj. -38.2623 iterations 0
Cbc0038I Pass  31: suminf.    2.50738 (11) obj. -38.2623 iterations 39
Cbc0038I Pass  32: suminf.    2.02443 (8) obj. -38.2623 iterations 6
Cbc0038I Pass  33: suminf.    1.96251 (8) obj. -38.2623 iterations 1
Cbc0038I Pass  34: suminf.    2.32178 (7) obj. -38.2623 iterations 16
Cbc0038I Pass  35: suminf.    2.03750 (5) obj. -38.2623 iterations 7
Cbc0038I Pass  36: suminf.    1.97147 (5) obj. -38.2623 iterations 3
Cbc0038I Pass  37: suminf.    1.97147 (5) obj. -38.2623 iterations 0
Cbc0038I Pass  38: suminf.    1.63029 (8) obj. -38.2623 iterations 17
Cbc0038I Pass  39: suminf.    1.31524 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  40: suminf.    1.26130 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  41: suminf.    1.26130 (4) obj. -38.2623 iterations 0
Cbc0038I Pass  42: suminf.    1.88990 (6) obj. -38.2623 iterations 12
Cbc0038I Pass  43: suminf.    1.88990 (6) obj. -38.2623 iterations 10
Cbc0038I Pass  44: suminf.    1.35151 (4) obj. -38.2623 iterations 7
Cbc0038I Pass  45: suminf.    0.85098 (3) obj. -38.2623 iterations 4
Cbc0038I Pass  46: suminf.    1.49954 (4) obj. -38.2623 iterations 3
Cbc0038I Pass  47: suminf.    0.84271 (3) obj. -38.2623 iterations 1
Cbc0038I Pass  48: suminf.    1.21988 (3) obj. -38.2623 iterations 4
Cbc0038I Pass  49: suminf.    2.93503 (9) obj. -38.2623 iterations 20
Cbc0038I Pass  50: suminf.    2.13381 (8) obj. -38.2623 iterations 10
Cbc0038I Pass  51: suminf.    2.06448 (7) obj. -38.2623 iterations 1
Cbc0038I Pass  52: suminf.    1.22201 (7) obj. -38.2623 iterations 12
Cbc0038I Pass  53: suminf.    1.04456 (4) obj. -38.2623 iterations 4
Cbc0038I Pass  54: suminf.    1.90830 (5) obj. -38.2623 iterations 7
Cbc0038I Pass  55: suminf.    1.89514 (5) obj. -38.2623 iterations 2
Cbc0038I Pass  56: suminf.    1.59384 (4) obj. -38.2623 iterations 5
Cbc0038I Pass  57: suminf.    2.45351 (9) obj. -38.2623 iterations 11
Cbc0038I Pass  58: suminf.    1.56546 (5) obj. -38.2623 iterations 14
Cbc0038I Pass  59: suminf.    1.08413 (5) obj. -38.2623 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.4451 - took 0.09 seconds
Cbc0012I Integer solution of -29.44513 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 62 rows 36 columns
Cbc0012I Integer solution of -29.8432 found by RINS after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 8 added rows had average density of 66.25
Cbc0013I At root node, 8 cuts changed objective from -62.089959 to -52.552234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3299 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 746 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 74.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -29.8432 best solution, best possible -52.442776 (0.69 seconds)
Cbc0001I Search completed - best objective -29.8432, took 3990 iterations and 22 nodes (0.80 seconds)
Cbc0032I Strong branching done 206 times (2855 iterations), fathomed 2 nodes and fixed 30 variables
Cbc0035I Maximum depth 6, 114 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.81

