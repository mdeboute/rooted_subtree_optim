Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 4.41936e-06 - average 3.1794e-08, 9 fixed columns
Coin0506I Presolve 121 (-18) rows, 67 (-9) columns and 368 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.6478019 - largest nonzero change 0 ( 0%) - largest zero change 2.8242177e-05
Clp0000I Optimal - objective value 47.95916
Clp0000I Optimal - objective value 47.95916
Coin0511I After Postsolve, objective 47.95916, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.95916
Clp0000I Optimal - objective value 47.95916
Clp0000I Optimal - objective value 47.95916
Coin0511I After Postsolve, objective 47.95916, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.95915997 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 11.7758
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.3519 iterations 76
Cbc0038I Solution found of 15.3519
Cbc0038I Relaxing continuous gives 15.3519
Cbc0038I Rounding solution of 4.60557 is better than previous of 15.3519

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 4.60557 to -24.3184 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.6825
Cbc0038I Pass   2: suminf.    6.46464 (27) obj. -26.6825 iterations 40
Cbc0038I Pass   3: suminf.    6.16617 (51) obj. -26.6825 iterations 22
Cbc0038I Pass   4: suminf.    0.34258 (4) obj. -26.6825 iterations 57
Cbc0038I Pass   5: suminf.    0.19876 (3) obj. -26.6825 iterations 3
Cbc0038I Pass   6: suminf.    1.16694 (4) obj. -26.6825 iterations 5
Cbc0038I Pass   7: suminf.    1.60783 (5) obj. -26.6825 iterations 2
Cbc0038I Pass   8: suminf.    1.59906 (4) obj. -26.6825 iterations 1
Cbc0038I Pass   9: suminf.    1.16694 (4) obj. -26.6825 iterations 1
Cbc0038I Pass  10: suminf.    2.40710 (11) obj. -26.6825 iterations 15
Cbc0038I Pass  11: suminf.    1.28806 (5) obj. -26.6825 iterations 11
Cbc0038I Pass  12: suminf.    1.27058 (4) obj. -26.6825 iterations 1
Cbc0038I Pass  13: suminf.    1.35438 (7) obj. -26.6825 iterations 11
Cbc0038I Pass  14: suminf.    0.96810 (5) obj. -26.6825 iterations 3
Cbc0038I Pass  15: suminf.    0.82367 (5) obj. -26.6825 iterations 4
Cbc0038I Pass  16: suminf.    1.39769 (8) obj. -26.6825 iterations 7
Cbc0038I Pass  17: suminf.    1.17676 (6) obj. -26.6825 iterations 3
Cbc0038I Pass  18: suminf.    2.10212 (8) obj. -26.6825 iterations 7
Cbc0038I Pass  19: suminf.    2.09472 (6) obj. -26.6825 iterations 1
Cbc0038I Pass  20: suminf.    1.76634 (7) obj. -26.6825 iterations 6
Cbc0038I Pass  21: suminf.    1.18227 (6) obj. -26.6825 iterations 6
Cbc0038I Pass  22: suminf.    1.17676 (6) obj. -26.6825 iterations 1
Cbc0038I Pass  23: suminf.    2.10212 (8) obj. -26.6825 iterations 7
Cbc0038I Pass  24: suminf.    2.09472 (6) obj. -26.6825 iterations 1
Cbc0038I Pass  25: suminf.    1.76634 (7) obj. -26.6825 iterations 6
Cbc0038I Pass  26: suminf.    1.18227 (6) obj. -26.6825 iterations 6
Cbc0038I Pass  27: suminf.    1.17676 (6) obj. -26.6825 iterations 1
Cbc0038I Pass  28: suminf.    2.10212 (8) obj. -26.6825 iterations 7
Cbc0038I Pass  29: suminf.    2.09472 (6) obj. -26.6825 iterations 1
Cbc0038I Pass  30: suminf.    1.76634 (7) obj. -26.6825 iterations 6
Cbc0038I Pass  31: suminf.    1.18227 (6) obj. -26.6825 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 106 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -24.3184 to -24.7623 (0.10 seconds)
Cbc0038I Round again with cutoff of -30.9379
Cbc0038I Pass  31: suminf.    7.35585 (27) obj. -30.9379 iterations 0
Cbc0038I Pass  32: suminf.    1.13258 (4) obj. -30.9379 iterations 39
Cbc0038I Pass  33: suminf.    0.66011 (3) obj. -30.9379 iterations 3
Cbc0038I Pass  34: suminf.    1.22728 (4) obj. -30.9379 iterations 2
Cbc0038I Pass  35: suminf.    1.22728 (4) obj. -30.9379 iterations 0
Cbc0038I Pass  36: suminf.    1.39348 (6) obj. -30.9379 iterations 3
Cbc0038I Pass  37: suminf.    1.39121 (5) obj. -30.9379 iterations 1
Cbc0038I Pass  38: suminf.    1.89757 (7) obj. -30.9379 iterations 5
Cbc0038I Pass  39: suminf.    1.87861 (6) obj. -30.9379 iterations 1
Cbc0038I Pass  40: suminf.    2.24751 (6) obj. -30.9379 iterations 8
Cbc0038I Pass  41: suminf.    2.24751 (6) obj. -30.9379 iterations 0
Cbc0038I Pass  42: suminf.    1.83268 (7) obj. -30.9379 iterations 10
Cbc0038I Pass  43: suminf.    1.81030 (6) obj. -30.9379 iterations 1
Cbc0038I Pass  44: suminf.    2.31815 (7) obj. -30.9379 iterations 3
Cbc0038I Pass  45: suminf.    1.32382 (6) obj. -30.9379 iterations 2
Cbc0038I Pass  46: suminf.    1.31412 (5) obj. -30.9379 iterations 1
Cbc0038I Pass  47: suminf.    1.83268 (7) obj. -30.9379 iterations 4
Cbc0038I Pass  48: suminf.    1.81030 (6) obj. -30.9379 iterations 1
Cbc0038I Pass  49: suminf.    2.31815 (7) obj. -30.9379 iterations 3
Cbc0038I Pass  50: suminf.    1.32382 (6) obj. -30.9379 iterations 2
Cbc0038I Pass  51: suminf.    1.31412 (5) obj. -30.9379 iterations 1
Cbc0038I Pass  52: suminf.    1.83268 (7) obj. -30.9379 iterations 4
Cbc0038I Pass  53: suminf.    1.81030 (6) obj. -30.9379 iterations 1
Cbc0038I Pass  54: suminf.    2.31815 (7) obj. -30.9379 iterations 3
Cbc0038I Pass  55: suminf.    1.32382 (6) obj. -30.9379 iterations 2
Cbc0038I Pass  56: suminf.    1.31412 (5) obj. -30.9379 iterations 1
Cbc0038I Pass  57: suminf.    1.83268 (7) obj. -30.9379 iterations 4
Cbc0038I Pass  58: suminf.    1.81030 (6) obj. -30.9379 iterations 1
Cbc0038I Pass  59: suminf.    2.31815 (7) obj. -30.9379 iterations 3
Cbc0038I Pass  60: suminf.    1.32382 (6) obj. -30.9379 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 84 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -24.7623 - took 0.12 seconds
Cbc0012I Integer solution of -24.762266 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 70 rows 40 columns
Cbc0012I Integer solution of -24.797996 found by RINS after 0 iterations and 0 nodes (0.17 seconds)
Cbc0031I 32 added rows had average density of 53.6875
Cbc0013I At root node, 32 cuts changed objective from -47.95916 to -39.264603 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17172 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2360 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.797996 best solution, best possible -39.264603 (1.21 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 36 rows 27 columns
Cbc0012I Integer solution of -24.818726 found by RINS after 11511 iterations and 46 nodes (1.45 seconds)
Cbc0012I Integer solution of -24.822376 found by DiveCoefficient after 11918 iterations and 68 nodes (1.50 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 6 rows 12 columns
Cbc0012I Integer solution of -24.823686 found by rounding after 13168 iterations and 193 nodes (1.64 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 7 rows 9 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 16 rows 17 columns
Cbc0010I After 449 nodes, 9 on tree, -24.823686 best solution, best possible -36.780166 (1.91 seconds)
Cbc0004I Integer solution of -24.836356 found after 16124 iterations and 473 nodes (1.94 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 3 rows 9 columns
Cbc0001I Search completed - best objective -24.83635575, took 18527 iterations and 814 nodes (2.15 seconds)
Cbc0032I Strong branching done 2652 times (22475 iterations), fathomed 110 nodes and fixed 147 variables
Cbc0041I Maximum depth 22, 1551 variables fixed on reduced cost (complete fathoming 3 times, 130 nodes taking 575 iterations)
Total time (CPU seconds):       2.07   (Wallclock seconds):       2.16

