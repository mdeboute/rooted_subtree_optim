Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 5.67558e-06 - average 1.11286e-07, 5 fixed columns
Coin0506I Presolve 39 (-12) rows, 23 (-6) columns and 116 (-36) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Coin0511I After Postsolve, objective 88.308968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Coin0511I After Postsolve, objective 88.308968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.30896805 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.01381
Cbc0038I Pass   1: suminf.    0.41129 (1) obj. -42.0382 iterations 17
Cbc0038I Solution found of -15.93
Cbc0038I Relaxing continuous gives -15.93
Cbc0038I Rounding solution of -32.7844 is better than previous of -15.93

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -32.7844 to -36.058 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.8339
Cbc0038I Pass   2: suminf.    0.41129 (1) obj. -42.0382 iterations 0
Cbc0038I Pass   3: suminf.    0.43845 (1) obj. -40.8339 iterations 1
Cbc0038I Pass   4: suminf.    2.27888 (6) obj. -40.8339 iterations 8
Cbc0038I Pass   5: suminf.    2.15270 (6) obj. -40.8339 iterations 4
Cbc0038I Pass   6: suminf.    0.50595 (2) obj. -40.8339 iterations 8
Cbc0038I Pass   7: suminf.    0.50595 (2) obj. -40.8339 iterations 0
Cbc0038I Pass   8: suminf.    0.64359 (4) obj. -40.8339 iterations 4
Cbc0038I Pass   9: suminf.    0.58553 (3) obj. -40.8339 iterations 2
Cbc0038I Pass  10: suminf.    0.62025 (2) obj. -40.8339 iterations 4
Cbc0038I Pass  11: suminf.    0.54057 (2) obj. -40.8339 iterations 1
Cbc0038I Pass  12: suminf.    0.41129 (1) obj. -42.0382 iterations 2
Cbc0038I Pass  13: suminf.    0.43845 (1) obj. -40.8339 iterations 1
Cbc0038I Pass  14: suminf.    1.95244 (5) obj. -40.8339 iterations 7
Cbc0038I Pass  15: suminf.    0.35236 (3) obj. -40.8339 iterations 4
Cbc0038I Pass  16: suminf.    0.34605 (3) obj. -40.8339 iterations 1
Cbc0038I Pass  17: suminf.    0.87904 (3) obj. -40.8339 iterations 5
Cbc0038I Pass  18: suminf.    0.67951 (3) obj. -40.8339 iterations 1
Cbc0038I Pass  19: suminf.    0.11458 (1) obj. -40.8339 iterations 4
Cbc0038I Pass  20: suminf.    0.11458 (1) obj. -40.8339 iterations 0
Cbc0038I Pass  21: suminf.    0.27965 (1) obj. -40.8339 iterations 2
Cbc0038I Pass  22: suminf.    1.05825 (7) obj. -40.8339 iterations 12
Cbc0038I Pass  23: suminf.    0.33790 (6) obj. -40.8339 iterations 8
Cbc0038I Pass  24: suminf.    2.29662 (6) obj. -40.8339 iterations 7
Cbc0038I Pass  25: suminf.    2.17290 (5) obj. -40.8339 iterations 1
Cbc0038I Pass  26: suminf.    0.59408 (4) obj. -40.8339 iterations 4
Cbc0038I Pass  27: suminf.    0.41129 (5) obj. -40.8339 iterations 3
Cbc0038I Pass  28: suminf.    0.69934 (3) obj. -40.8339 iterations 7
Cbc0038I Pass  29: suminf.    0.41997 (2) obj. -40.8339 iterations 3
Cbc0038I Pass  30: suminf.    0.37314 (2) obj. -40.8339 iterations 5
Cbc0038I Pass  31: suminf.    0.37314 (2) obj. -40.8339 iterations 2
Cbc0038I Rounding solution of -36.9798 is better than previous of -36.058

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -49.4302
Cbc0038I Pass  31: suminf.    0.85267 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  32: suminf.    1.41644 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  33: suminf.    1.00064 (5) obj. -49.4302 iterations 2
Cbc0038I Pass  34: suminf.    0.98619 (4) obj. -49.4302 iterations 1
Cbc0038I Pass  35: suminf.    1.14473 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  36: suminf.    1.00419 (4) obj. -49.4302 iterations 1
Cbc0038I Pass  37: suminf.    1.01094 (4) obj. -49.4302 iterations 5
Cbc0038I Pass  38: suminf.    0.79299 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  39: suminf.    0.67079 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  40: suminf.    0.55481 (2) obj. -49.4302 iterations 3
Cbc0038I Pass  41: suminf.    0.45086 (2) obj. -49.4302 iterations 1
Cbc0038I Pass  42: suminf.    0.72350 (6) obj. -49.4302 iterations 3
Cbc0038I Pass  43: suminf.    0.55481 (2) obj. -49.4302 iterations 4
Cbc0038I Pass  44: suminf.    2.35102 (7) obj. -49.4302 iterations 8
Cbc0038I Pass  45: suminf.    1.42481 (5) obj. -49.4302 iterations 3
Cbc0038I Pass  46: suminf.    0.53635 (3) obj. -49.4302 iterations 2
Cbc0038I Pass  47: suminf.    0.98483 (5) obj. -49.4302 iterations 7
Cbc0038I Pass  48: suminf.    0.80876 (8) obj. -49.4302 iterations 3
Cbc0038I Pass  49: suminf.    0.80876 (8) obj. -49.4302 iterations 0
Cbc0038I Pass  50: suminf.    2.47865 (6) obj. -49.4302 iterations 7
Cbc0038I Pass  51: suminf.    2.04109 (5) obj. -49.4302 iterations 3
Cbc0038I Pass  52: suminf.    2.04026 (5) obj. -49.4302 iterations 1
Cbc0038I Pass  53: suminf.    2.18549 (7) obj. -49.4302 iterations 6
Cbc0038I Pass  54: suminf.    1.23051 (5) obj. -49.4302 iterations 2
Cbc0038I Pass  55: suminf.    0.86003 (4) obj. -49.4302 iterations 2
Cbc0038I Pass  56: suminf.    0.75813 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  57: suminf.    1.21655 (4) obj. -49.4302 iterations 2
Cbc0038I Pass  58: suminf.    1.96511 (6) obj. -49.4302 iterations 6
Cbc0038I Pass  59: suminf.    0.63748 (4) obj. -49.4302 iterations 5
Cbc0038I Pass  60: suminf.    0.59944 (4) obj. -49.4302 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.9798 - took 0.04 seconds
Cbc0012I Integer solution of -36.9798 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 31 rows 20 columns
Cbc0031I 13 added rows had average density of 15.846154
Cbc0013I At root node, 13 cuts changed objective from -83.815714 to -49.507685 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1562 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1222 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -36.9798, took 2913 iterations and 6 nodes (0.23 seconds)
Cbc0032I Strong branching done 76 times (769 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.23

