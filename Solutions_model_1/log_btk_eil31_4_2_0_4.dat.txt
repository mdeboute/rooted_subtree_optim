Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-34) rows, 18 (-15) columns and 92 (-91) elements
Clp1000I sum of infeasibilities 1.11022e-16 - average 3.58136e-18, 12 fixed columns
Coin0506I Presolve 6 (-25) rows, 5 (-13) columns and 18 (-74) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 2431.7228
Clp0000I Optimal - objective value 2431.7228
Coin0511I After Postsolve, objective 2431.7228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2431.7228
Clp0000I Optimal - objective value 2431.7228
Clp0000I Optimal - objective value 2431.7228
Coin0511I After Postsolve, objective 2431.7228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2431.72282 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 18 columns (17 integer (17 of which binary)) and 93 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.29217
Cbc0038I Pass   1: suminf.    0.27368 (1) obj. -2192.18 iterations 9
Cbc0038I Solution found of -1424.53
Cbc0038I Relaxing continuous gives -1424.53
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -1424.53 to -1615.34 (0.01 seconds)
Cbc0038I Round again with cutoff of -1681.05
Cbc0038I Pass   2: suminf.    0.27368 (1) obj. -2192.18 iterations 0
Cbc0038I Pass   3: suminf.    0.24271 (1) obj. -1681.05 iterations 1
Cbc0038I Pass   4: suminf.    0.33479 (2) obj. -1681.05 iterations 2
Cbc0038I Pass   5: suminf.    0.18095 (1) obj. -1701.82 iterations 2
Cbc0038I Pass   6: suminf.    0.16740 (1) obj. -1681.05 iterations 1
Cbc0038I Pass   7: suminf.    0.99373 (2) obj. -1681.05 iterations 3
Cbc0038I Pass   8: suminf.    0.51650 (2) obj. -1681.05 iterations 3
Cbc0038I Pass   9: suminf.    0.51650 (2) obj. -1681.05 iterations 0
Cbc0038I Pass  10: suminf.    0.41457 (2) obj. -1681.05 iterations 1
Cbc0038I Pass  11: suminf.    0.35403 (2) obj. -1681.05 iterations 2
Cbc0038I Pass  12: suminf.    0.51446 (2) obj. -2075.63 iterations 3
Cbc0038I Pass  13: suminf.    0.26196 (1) obj. -1681.05 iterations 6
Cbc0038I Pass  14: suminf.    0.08889 (1) obj. -1788.76 iterations 1
Cbc0038I Pass  15: suminf.    0.13975 (2) obj. -1785.88 iterations 2
Cbc0038I Pass  16: suminf.    0.08889 (1) obj. -1788.76 iterations 2
Cbc0038I Pass  17: suminf.    0.08889 (1) obj. -1788.76 iterations 0
Cbc0038I Pass  18: suminf.    0.08889 (1) obj. -1788.76 iterations 0
Cbc0038I Pass  19: suminf.    0.54469 (3) obj. -1681.05 iterations 7
Cbc0038I Pass  20: suminf.    0.43100 (2) obj. -1681.05 iterations 3
Cbc0038I Pass  21: suminf.    0.16250 (1) obj. -1935.43 iterations 2
Cbc0038I Pass  22: suminf.    0.16250 (1) obj. -1935.43 iterations 0
Cbc0038I Pass  23: suminf.    0.16250 (1) obj. -1935.43 iterations 0
Cbc0038I Pass  24: suminf.    0.16250 (1) obj. -1935.43 iterations 0
Cbc0038I Pass  25: suminf.    0.16250 (1) obj. -1935.43 iterations 0
Cbc0038I Pass  26: suminf.    0.44655 (5) obj. -1681.05 iterations 7
Cbc0038I Pass  27: suminf.    0.30623 (2) obj. -1681.05 iterations 6
Cbc0038I Pass  28: suminf.    0.46962 (3) obj. -1681.05 iterations 4
Cbc0038I Pass  29: suminf.    0.30623 (2) obj. -1681.05 iterations 4
Cbc0038I Pass  30: suminf.    0.16250 (1) obj. -1935.43 iterations 3
Cbc0038I Pass  31: suminf.    2.23529 (6) obj. -1965.69 iterations 6
Cbc0038I Rounding solution of -1846.08 is better than previous of -1615.34

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -1846.08 to -1937.01 (0.01 seconds)
Cbc0038I Round again with cutoff of -2004.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27368 (1) obj. -2192.18 iterations 0
Cbc0038I Pass  32: suminf.    0.45164 (1) obj. -2004.1 iterations 1
Cbc0038I Pass  33: suminf.    0.45164 (1) obj. -2004.1 iterations 0
Cbc0038I Pass  34: suminf.    0.75758 (3) obj. -2004.1 iterations 8
Cbc0038I Pass  35: suminf.    0.75758 (3) obj. -2004.1 iterations 2
Cbc0038I Pass  36: suminf.    0.62472 (2) obj. -2004.1 iterations 4
Cbc0038I Pass  37: suminf.    0.51446 (2) obj. -2075.63 iterations 1
Cbc0038I Pass  38: suminf.    0.56025 (2) obj. -2004.1 iterations 2
Cbc0038I Pass  39: suminf.    0.56025 (2) obj. -2004.1 iterations 0
Cbc0038I Pass  40: suminf.    1.17036 (6) obj. -2004.1 iterations 7
Cbc0038I Pass  41: suminf.    0.42454 (1) obj. -2004.1 iterations 5
Cbc0038I Pass  42: suminf.    0.47368 (1) obj. -2056.04 iterations 1
Cbc0038I Pass  43: suminf.    2.38150 (8) obj. -2004.1 iterations 10
Cbc0038I Pass  44: suminf.    0.92873 (4) obj. -2004.1 iterations 3
Cbc0038I Pass  45: suminf.    0.86432 (4) obj. -2004.1 iterations 2
Cbc0038I Pass  46: suminf.    1.03044 (3) obj. -2004.1 iterations 6
Cbc0038I Pass  47: suminf.    0.51446 (2) obj. -2075.63 iterations 4
Cbc0038I Pass  48: suminf.    0.56025 (2) obj. -2004.1 iterations 2
Cbc0038I Pass  49: suminf.    0.56025 (2) obj. -2004.1 iterations 0
Cbc0038I Pass  50: suminf.    0.62472 (2) obj. -2004.1 iterations 3
Cbc0038I Pass  51: suminf.    0.50463 (2) obj. -2004.1 iterations 5
Cbc0038I Pass  52: suminf.    0.22105 (1) obj. -2045 iterations 1
Cbc0038I Pass  53: suminf.    0.25975 (1) obj. -2004.1 iterations 1
Cbc0038I Pass  54: suminf.    1.74124 (5) obj. -2004.1 iterations 6
Cbc0038I Pass  55: suminf.    0.46753 (3) obj. -2041.95 iterations 4
Cbc0038I Pass  56: suminf.    0.46753 (3) obj. -2041.95 iterations 0
Cbc0038I Pass  57: suminf.    0.61643 (3) obj. -2004.1 iterations 3
Cbc0038I Pass  58: suminf.    0.59168 (4) obj. -2004.1 iterations 5
Cbc0038I Pass  59: suminf.    0.43636 (3) obj. -2004.1 iterations 2
Cbc0038I Pass  60: suminf.    1.08153 (3) obj. -2004.1 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 18 columns, reduced to 20 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1937.01 - took 0.01 seconds
Cbc0012I Integer solution of -1937.014 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 18 columns, reduced to 9 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 8.1428571
Cbc0013I At root node, 7 cuts changed objective from -2272.4425 to -1950.9587 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 4.1 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1937.014, took 123 iterations and 0 nodes (0.27 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.28

