Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 30 (-5) columns and 163 (-32) elements
Clp1000I sum of infeasibilities 5.77034e-05 - average 1.04915e-06, 1 fixed columns
Coin0506I Presolve 54 (-1) rows, 29 (-1) columns and 159 (-4) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Coin0511I After Postsolve, objective 87.228915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Coin0511I After Postsolve, objective 87.228915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.22891545 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 170 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.825%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.2985
Cbc0038I Solution found of -7.77244
Cbc0038I Relaxing continuous gives -15.1058
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -15.1058 to -20.842 (0.02 seconds)
Cbc0038I Round again with cutoff of -27.0553
Cbc0038I Pass   1: suminf.    0.61537 (4) obj. -27.0553 iterations 29
Cbc0038I Pass   2: suminf.    0.34929 (1) obj. -27.0553 iterations 7
Cbc0038I Pass   3: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass   4: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass   5: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass   6: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass   7: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass   8: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass   9: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  10: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  11: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  12: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  13: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  14: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  15: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  16: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  17: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  18: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  19: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  20: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  21: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  22: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  23: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  24: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  25: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  26: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  27: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  28: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  29: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  30: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20.842 - took 0.02 seconds
Cbc0012I Integer solution of -20.84196 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 10 added rows had average density of 24.2
Cbc0013I At root node, 10 cuts changed objective from -82.974129 to -52.832621 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2049 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 973 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.84196, took 3262 iterations and 10 nodes (0.27 seconds)
Cbc0032I Strong branching done 158 times (2357 iterations), fathomed 0 nodes and fixed 15 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.28

