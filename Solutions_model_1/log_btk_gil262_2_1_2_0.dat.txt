Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 262 (-2) columns and 1507 (-38) elements
Clp1000I sum of infeasibilities 0.000195145 - average 3.84902e-07, 85 fixed columns
Coin0506I Presolve 332 (-175) rows, 174 (-88) columns and 984 (-523) elements
Clp0029I End of values pass after 174 iterations
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Coin0511I After Postsolve, objective 167.81899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Coin0511I After Postsolve, objective 167.81899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.8189857 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 262 columns (261 integer (261 of which binary)) and 1507 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 107 integers unsatisfied sum - 12.1292
Cbc0038I Solution found of 9.71428
Cbc0038I Relaxing continuous gives -1.67061
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 201 rows 108 columns
Cbc0038I Mini branch and bound improved solution from -1.67061 to -97.9897 (0.09 seconds)
Cbc0038I Round again with cutoff of -104.973
Cbc0038I Pass   1: suminf.    4.72776 (46) obj. -104.973 iterations 220
Cbc0038I Pass   2: suminf.    4.40270 (37) obj. -104.973 iterations 25
Cbc0038I Pass   3: suminf.    2.43876 (9) obj. -104.973 iterations 73
Cbc0038I Pass   4: suminf.    2.01423 (9) obj. -104.973 iterations 28
Cbc0038I Pass   5: suminf.    3.48015 (10) obj. -104.973 iterations 30
Cbc0038I Pass   6: suminf.    1.96900 (7) obj. -104.973 iterations 19
Cbc0038I Pass   7: suminf.    1.88243 (7) obj. -104.973 iterations 7
Cbc0038I Pass   8: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass   9: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  10: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  11: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  12: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  13: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  14: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  15: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  16: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  17: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  18: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  19: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  20: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  21: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  22: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  23: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  24: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  25: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  26: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  27: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  28: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  29: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  30: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 143 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 223 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -97.9897 to -103.723 (0.20 seconds)
Cbc0038I Round again with cutoff of -117.542
Cbc0038I Pass  30: suminf.    5.18133 (46) obj. -117.542 iterations 0
Cbc0038I Pass  31: suminf.    5.04897 (43) obj. -117.542 iterations 14
Cbc0038I Pass  32: suminf.    5.35656 (14) obj. -117.542 iterations 69
Cbc0038I Pass  33: suminf.    4.36507 (14) obj. -117.542 iterations 37
Cbc0038I Pass  34: suminf.    4.93535 (12) obj. -117.542 iterations 27
Cbc0038I Pass  35: suminf.    4.48023 (15) obj. -117.542 iterations 40
Cbc0038I Pass  36: suminf.    4.48023 (15) obj. -117.542 iterations 0
Cbc0038I Pass  37: suminf.    3.72951 (13) obj. -117.542 iterations 35
Cbc0038I Pass  38: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  39: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  40: suminf.    3.55394 (14) obj. -117.542 iterations 31
Cbc0038I Pass  41: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  42: suminf.    3.72951 (13) obj. -117.542 iterations 33
Cbc0038I Pass  43: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  44: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  45: suminf.    3.55394 (14) obj. -117.542 iterations 29
Cbc0038I Pass  46: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  47: suminf.    3.72951 (13) obj. -117.542 iterations 33
Cbc0038I Pass  48: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  49: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  50: suminf.    3.55394 (14) obj. -117.542 iterations 29
Cbc0038I Pass  51: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  52: suminf.    4.29834 (13) obj. -117.542 iterations 37
Cbc0038I Pass  53: suminf.    3.93282 (12) obj. -117.542 iterations 22
Cbc0038I Pass  54: suminf.    3.77513 (11) obj. -117.542 iterations 20
Cbc0038I Pass  55: suminf.    3.06287 (12) obj. -117.542 iterations 26
Cbc0038I Pass  56: suminf.    4.34133 (13) obj. -117.542 iterations 32
Cbc0038I Pass  57: suminf.    5.00601 (20) obj. -117.542 iterations 59
Cbc0038I Pass  58: suminf.    3.30203 (13) obj. -117.542 iterations 53
Cbc0038I Pass  59: suminf.    3.06024 (15) obj. -117.542 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 233 rows 124 columns
Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
Cbc0038I After 0.35 seconds - Feasibility pump exiting with objective of -103.723 - took 0.33 seconds
Cbc0012I Integer solution of -103.72331 found by feasibility pump after 0 iterations and 0 nodes (0.35 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 201 rows 108 columns
Cbc0012I Integer solution of -104.65038 found by RINS after 0 iterations and 0 nodes (0.43 seconds)
Cbc0031I 46 added rows had average density of 110.28261
Cbc0013I At root node, 46 cuts changed objective from -167.81899 to -159.85328 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 69286 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.619 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3613 row cuts average 260.6 elements, 0 column cuts (0 active)  in 0.677 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.819 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 222 row cuts average 258.6 elements, 0 column cuts (0 active)  in 0.299 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -104.65038 best solution, best possible -159.85328 (7.52 seconds)
Cbc0010I After 8 nodes, 9 on tree, -104.65038 best solution, best possible -159.85328 (8.25 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 238 rows 125 columns
Cbc0012I Integer solution of -104.67831 found by RINS after 26519 iterations and 41 nodes (8.87 seconds)
Cbc0010I After 45 nodes, 17 on tree, -104.67831 best solution, best possible -159.85328 (8.96 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 109 rows 64 columns
Cbc0012I Integer solution of -105.35648 found by RINS after 29576 iterations and 93 nodes (9.50 seconds)
Cbc0010I After 115 nodes, 30 on tree, -105.35648 best solution, best possible -159.85328 (9.66 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 29 rows 20 columns
Cbc0012I Integer solution of -108.22298 found by rounding after 35047 iterations and 213 nodes (10.09 seconds)
Cbc0010I After 270 nodes, 24 on tree, -108.22298 best solution, best possible -159.85328 (10.37 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 19 rows 17 columns
Cbc0010I After 439 nodes, 9 on tree, -108.22298 best solution, best possible -159.85328 (11.07 seconds)
Cbc0001I Search completed - best objective -108.22298, took 44789 iterations and 464 nodes (11.30 seconds)
Cbc0032I Strong branching done 4172 times (96449 iterations), fathomed 64 nodes and fixed 244 variables
Cbc0035I Maximum depth 95, 1822 variables fixed on reduced cost
Total time (CPU seconds):       10.99   (Wallclock seconds):       11.37

