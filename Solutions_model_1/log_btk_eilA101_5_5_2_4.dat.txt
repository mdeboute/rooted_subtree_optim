Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 9.65748e-05 - average 5.13696e-07, 16 fixed columns
Coin0506I Presolve 156 (-32) rows, 84 (-17) columns and 472 (-98) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 0.26858507 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Coin0511I After Postsolve, objective 34.262848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24373901 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Clp0000I Optimal - objective value 34.262848
Coin0511I After Postsolve, objective 34.262848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.26284845 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 13.7525
Cbc0038I Solution found of 8.08819
Cbc0038I Relaxing continuous gives 8.00114
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 87 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 8.00114 to 0.853417 (0.07 seconds)
Cbc0038I Round again with cutoff of -2.6583
Cbc0038I Pass   1: suminf.    1.69986 (13) obj. -2.6583 iterations 99
Cbc0038I Pass   2: suminf.    1.64580 (10) obj. -2.6583 iterations 13
Cbc0038I Pass   3: suminf.    1.15367 (7) obj. -2.6583 iterations 2
Cbc0038I Pass   4: suminf.    2.25764 (7) obj. -2.6583 iterations 8
Cbc0038I Pass   5: suminf.    2.78720 (7) obj. -2.6583 iterations 3
Cbc0038I Pass   6: suminf.    2.53484 (7) obj. -2.6583 iterations 4
Cbc0038I Pass   7: suminf.    2.49086 (6) obj. -2.6583 iterations 1
Cbc0038I Pass   8: suminf.    2.69246 (7) obj. -2.6583 iterations 2
Cbc0038I Pass   9: suminf.    2.39826 (8) obj. -2.6583 iterations 26
Cbc0038I Pass  10: suminf.    2.39826 (8) obj. -2.6583 iterations 5
Cbc0038I Pass  11: suminf.    1.85729 (6) obj. -2.6583 iterations 19
Cbc0038I Pass  12: suminf.    1.64960 (6) obj. -2.6583 iterations 3
Cbc0038I Pass  13: suminf.    1.53748 (4) obj. -2.6583 iterations 1
Cbc0038I Pass  14: suminf.    1.41230 (4) obj. -2.6583 iterations 3
Cbc0038I Pass  15: suminf.    1.64960 (6) obj. -2.6583 iterations 3
Cbc0038I Pass  16: suminf.    4.26201 (20) obj. -2.6583 iterations 37
Cbc0038I Pass  17: suminf.    2.12513 (8) obj. -2.6583 iterations 20
Cbc0038I Pass  18: suminf.    1.35639 (6) obj. -2.6583 iterations 12
Cbc0038I Pass  19: suminf.    1.18671 (4) obj. -2.6583 iterations 2
Cbc0038I Pass  20: suminf.    2.11618 (7) obj. -2.6583 iterations 4
Cbc0038I Pass  21: suminf.    2.80012 (12) obj. -2.6583 iterations 23
Cbc0038I Pass  22: suminf.    1.39671 (9) obj. -2.6583 iterations 11
Cbc0038I Pass  23: suminf.    1.17481 (6) obj. -2.6583 iterations 5
Cbc0038I Pass  24: suminf.    1.42197 (6) obj. -2.6583 iterations 10
Cbc0038I Pass  25: suminf.    1.22723 (3) obj. -2.6583 iterations 2
Cbc0038I Pass  26: suminf.    0.80995 (3) obj. -2.6583 iterations 2
Cbc0038I Pass  27: suminf.    0.84724 (6) obj. -2.6583 iterations 17
Cbc0038I Pass  28: suminf.    0.84724 (6) obj. -2.6583 iterations 2
Cbc0038I Pass  29: suminf.    1.80749 (7) obj. -2.6583 iterations 11
Cbc0038I Pass  30: suminf.    1.43176 (5) obj. -2.6583 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 121 rows 72 columns - 1 fixed gives 118, 71 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 118 rows 71 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 0.853417 - took 0.07 seconds
Cbc0012I Integer solution of 0.853417 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 87 rows 54 columns
Cbc0012I Integer solution of -3.290182 found by RINS after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 30 added rows had average density of 65.333333
Cbc0013I At root node, 30 cuts changed objective from -34.262848 to -26.964564 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21177 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2840 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.290182 best solution, best possible -26.964564 (1.60 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 70 rows 45 columns
Cbc0012I Integer solution of -3.529783 found by RINS after 14527 iterations and 42 nodes (2.02 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 68 rows 44 columns
Cbc0010I After 141 nodes, 8 on tree, -3.529783 best solution, best possible -26.964564 (2.30 seconds)
Cbc0001I Search completed - best objective -3.529782999999995, took 18916 iterations and 168 nodes (2.39 seconds)
Cbc0032I Strong branching done 1818 times (34744 iterations), fathomed 17 nodes and fixed 109 variables
Cbc0035I Maximum depth 38, 665 variables fixed on reduced cost
Total time (CPU seconds):       2.33   (Wallclock seconds):       2.41

