Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 20 (-43) rows, 13 (-19) columns and 50 (-127) elements
Clp0000I Optimal - objective value 94.611657
Coin0511I After Postsolve, objective 94.611657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.61165668 - 14 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.92005
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.5 iterations 8
Cbc0038I Solution found of -51.5
Cbc0038I Relaxing continuous gives -51.5
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -55.8732
Cbc0038I Pass   2: suminf.    0.03629 (1) obj. -55.8732 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -55.8732 iterations 1
Cbc0038I Solution found of -55.8732
Cbc0038I Relaxing continuous gives -62
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -68.1465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.13815 (1) obj. -68.1465 iterations 0
Cbc0038I Pass   5: suminf.    0.17917 (3) obj. -68.1465 iterations 4
Cbc0038I Pass   6: suminf.    1.16118 (4) obj. -68.1465 iterations 6
Cbc0038I Pass   7: suminf.    0.56857 (4) obj. -68.1465 iterations 2
Cbc0038I Pass   8: suminf.    1.11938 (4) obj. -68.1465 iterations 3
Cbc0038I Pass   9: suminf.    0.61439 (3) obj. -68.1465 iterations 2
Cbc0038I Pass  10: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  11: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  12: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  13: suminf.    1.18989 (5) obj. -68.1465 iterations 2
Cbc0038I Pass  14: suminf.    1.81871 (5) obj. -68.1465 iterations 6
Cbc0038I Pass  15: suminf.    1.57903 (6) obj. -68.1465 iterations 5
Cbc0038I Pass  16: suminf.    1.57903 (6) obj. -68.1465 iterations 0
Cbc0038I Pass  17: suminf.    0.61439 (3) obj. -68.1465 iterations 5
Cbc0038I Pass  18: suminf.    0.61439 (3) obj. -68.1465 iterations 0
Cbc0038I Pass  19: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  20: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  21: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  22: suminf.    1.81871 (5) obj. -68.1465 iterations 6
Cbc0038I Pass  23: suminf.    1.81871 (5) obj. -68.1465 iterations 0
Cbc0038I Pass  24: suminf.    1.57903 (6) obj. -68.1465 iterations 5
Cbc0038I Pass  25: suminf.    1.57903 (6) obj. -68.1465 iterations 0
Cbc0038I Pass  26: suminf.    0.61439 (3) obj. -68.1465 iterations 5
Cbc0038I Pass  27: suminf.    0.61439 (3) obj. -68.1465 iterations 0
Cbc0038I Pass  28: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  29: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  30: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  31: suminf.    0.67712 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  32: suminf.    0.67712 (4) obj. -68.1465 iterations 0
Cbc0038I Pass  33: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -62 - took 0.01 seconds
Cbc0012I Integer solution of -62 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0031I 5 added rows had average density of 3.8
Cbc0013I At root node, 43 cuts changed objective from -90.733083 to -41.382114 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -62, took 3 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

