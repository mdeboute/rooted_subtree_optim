Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 262 (-2) columns and 1504 (-41) elements
Clp1000I sum of infeasibilities 9.02252e-05 - average 1.78311e-07, 122 fixed columns
Coin0506I Presolve 260 (-246) rows, 138 (-124) columns and 771 (-733) elements
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 0.16890778 - largest nonzero change 0 ( 0%) - largest zero change 2.9214168e-05
Clp0000I Optimal - objective value 192.18869
Clp0000I Optimal - objective value 192.18869
Coin0511I After Postsolve, objective 192.18869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13623612 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 192.18869
Clp0000I Optimal - objective value 192.18869
Clp0000I Optimal - objective value 192.18869
Coin0511I After Postsolve, objective 192.18869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 192.1886931 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 262 columns (261 integer (261 of which binary)) and 1504 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 64 integers unsatisfied sum - 12.6746
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.36952 iterations 187
Cbc0038I Solution found of 7.36952
Cbc0038I Relaxing continuous gives 7.36952
Cbc0038I Rounding solution of 0.249579 is better than previous of 7.36952

Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 118 rows 65 columns
Cbc0038I Mini branch and bound improved solution from 0.249579 to -109.365 (0.11 seconds)
Cbc0038I Round again with cutoff of -117.648
Cbc0038I Pass   2: suminf.    3.62206 (14) obj. -117.648 iterations 37
Cbc0038I Pass   3: suminf.    1.60209 (6) obj. -117.648 iterations 37
Cbc0038I Pass   4: suminf.    2.25040 (6) obj. -117.648 iterations 6
Cbc0038I Pass   5: suminf.    2.18014 (8) obj. -117.648 iterations 6
Cbc0038I Pass   6: suminf.    1.71610 (5) obj. -117.648 iterations 11
Cbc0038I Pass   7: suminf.    0.95711 (4) obj. -117.648 iterations 7
Cbc0038I Pass   8: suminf.    1.28511 (6) obj. -117.648 iterations 9
Cbc0038I Pass   9: suminf.    1.22080 (4) obj. -117.648 iterations 8
Cbc0038I Pass  10: suminf.    0.98194 (4) obj. -117.648 iterations 6
Cbc0038I Pass  11: suminf.    4.20655 (15) obj. -117.648 iterations 49
Cbc0038I Pass  12: suminf.    2.72998 (10) obj. -117.648 iterations 56
Cbc0038I Pass  13: suminf.    2.32614 (6) obj. -117.648 iterations 18
Cbc0038I Pass  14: suminf.    2.04167 (7) obj. -117.648 iterations 16
Cbc0038I Pass  15: suminf.    1.37345 (6) obj. -117.648 iterations 7
Cbc0038I Pass  16: suminf.    0.90517 (7) obj. -117.648 iterations 7
Cbc0038I Pass  17: suminf.    1.47101 (4) obj. -117.648 iterations 11
Cbc0038I Pass  18: suminf.    1.07242 (4) obj. -117.648 iterations 11
Cbc0038I Pass  19: suminf.    1.57603 (6) obj. -117.648 iterations 11
Cbc0038I Pass  20: suminf.    1.41050 (6) obj. -117.648 iterations 1
Cbc0038I Pass  21: suminf.    2.89757 (7) obj. -117.648 iterations 11
Cbc0038I Pass  22: suminf.    1.62624 (5) obj. -117.648 iterations 5
Cbc0038I Pass  23: suminf.    1.07242 (4) obj. -117.648 iterations 10
Cbc0038I Pass  24: suminf.    1.57603 (6) obj. -117.648 iterations 11
Cbc0038I Pass  25: suminf.    1.41050 (6) obj. -117.648 iterations 1
Cbc0038I Pass  26: suminf.    2.89757 (7) obj. -117.648 iterations 11
Cbc0038I Pass  27: suminf.    1.62624 (5) obj. -117.648 iterations 5
Cbc0038I Pass  28: suminf.    1.07242 (4) obj. -117.648 iterations 10
Cbc0038I Pass  29: suminf.    1.57603 (6) obj. -117.648 iterations 11
Cbc0038I Pass  30: suminf.    1.41050 (6) obj. -117.648 iterations 1
Cbc0038I Pass  31: suminf.    2.89757 (7) obj. -117.648 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 141 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -109.365 to -116.542 (0.30 seconds)
Cbc0038I Round again with cutoff of -132.556
Cbc0038I Pass  31: suminf.    4.24090 (16) obj. -132.556 iterations 26
Cbc0038I Pass  32: suminf.    1.95678 (8) obj. -132.556 iterations 59
Cbc0038I Pass  33: suminf.    1.72562 (8) obj. -132.556 iterations 9
Cbc0038I Pass  34: suminf.    3.11272 (9) obj. -132.556 iterations 20
Cbc0038I Pass  35: suminf.    2.77353 (10) obj. -132.556 iterations 13
Cbc0038I Pass  36: suminf.    1.62218 (7) obj. -132.556 iterations 17
Cbc0038I Pass  37: suminf.    3.08379 (10) obj. -132.556 iterations 26
Cbc0038I Pass  38: suminf.    3.02085 (9) obj. -132.556 iterations 4
Cbc0038I Pass  39: suminf.    1.72562 (8) obj. -132.556 iterations 19
Cbc0038I Pass  40: suminf.    3.11272 (9) obj. -132.556 iterations 21
Cbc0038I Pass  41: suminf.    2.77353 (10) obj. -132.556 iterations 13
Cbc0038I Pass  42: suminf.    1.62218 (7) obj. -132.556 iterations 17
Cbc0038I Pass  43: suminf.    3.08379 (10) obj. -132.556 iterations 26
Cbc0038I Pass  44: suminf.    3.02085 (9) obj. -132.556 iterations 4
Cbc0038I Pass  45: suminf.    1.72562 (8) obj. -132.556 iterations 19
Cbc0038I Pass  46: suminf.    3.11272 (9) obj. -132.556 iterations 21
Cbc0038I Pass  47: suminf.    2.77353 (10) obj. -132.556 iterations 13
Cbc0038I Pass  48: suminf.    1.62218 (7) obj. -132.556 iterations 17
Cbc0038I Pass  49: suminf.    3.08379 (10) obj. -132.556 iterations 26
Cbc0038I Pass  50: suminf.    3.02085 (9) obj. -132.556 iterations 4
Cbc0038I Pass  51: suminf.    1.72562 (8) obj. -132.556 iterations 19
Cbc0038I Pass  52: suminf.    3.11272 (9) obj. -132.556 iterations 21
Cbc0038I Pass  53: suminf.    2.77353 (10) obj. -132.556 iterations 13
Cbc0038I Pass  54: suminf.    1.62218 (7) obj. -132.556 iterations 17
Cbc0038I Pass  55: suminf.    3.08379 (10) obj. -132.556 iterations 26
Cbc0038I Pass  56: suminf.    3.02085 (9) obj. -132.556 iterations 4
Cbc0038I Pass  57: suminf.    1.72562 (8) obj. -132.556 iterations 19
Cbc0038I Pass  58: suminf.    3.11272 (9) obj. -132.556 iterations 21
Cbc0038I Pass  59: suminf.    2.77353 (10) obj. -132.556 iterations 13
Cbc0038I Pass  60: suminf.    1.62218 (7) obj. -132.556 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 188 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 133 rows 74 columns
Cbc0038I Mini branch and bound improved solution from -116.542 to -119.742 (0.53 seconds)
Cbc0038I Round again with cutoff of -150.446
Cbc0038I Pass  60: suminf.    4.73987 (18) obj. -150.446 iterations 8
Cbc0038I Pass  61: suminf.    3.44287 (16) obj. -150.446 iterations 71
Cbc0038I Pass  62: suminf.    3.39050 (14) obj. -150.446 iterations 4
Cbc0038I Pass  63: suminf.    4.11484 (14) obj. -150.446 iterations 53
Cbc0038I Pass  64: suminf.    4.02502 (14) obj. -150.446 iterations 12
Cbc0038I Pass  65: suminf.    4.03163 (14) obj. -150.446 iterations 3
Cbc0038I Pass  66: suminf.    4.40959 (15) obj. -150.446 iterations 30
Cbc0038I Pass  67: suminf.    3.08337 (12) obj. -150.446 iterations 24
Cbc0038I Pass  68: suminf.    3.07309 (11) obj. -150.446 iterations 4
Cbc0038I Pass  69: suminf.    4.43721 (14) obj. -150.446 iterations 24
Cbc0038I Pass  70: suminf.    3.63674 (14) obj. -150.446 iterations 26
Cbc0038I Pass  71: suminf.    4.26519 (15) obj. -150.446 iterations 17
Cbc0038I Pass  72: suminf.    3.45812 (13) obj. -150.446 iterations 20
Cbc0038I Pass  73: suminf.    3.38579 (14) obj. -150.446 iterations 13
Cbc0038I Pass  74: suminf.    3.82259 (13) obj. -150.446 iterations 24
Cbc0038I Pass  75: suminf.    3.63674 (14) obj. -150.446 iterations 24
Cbc0038I Pass  76: suminf.    4.26519 (15) obj. -150.446 iterations 17
Cbc0038I Pass  77: suminf.    3.45812 (13) obj. -150.446 iterations 20
Cbc0038I Pass  78: suminf.    3.38579 (14) obj. -150.446 iterations 13
Cbc0038I Pass  79: suminf.    3.82259 (13) obj. -150.446 iterations 23
Cbc0038I Pass  80: suminf.    3.63674 (14) obj. -150.446 iterations 23
Cbc0038I Pass  81: suminf.    4.26519 (15) obj. -150.446 iterations 17
Cbc0038I Pass  82: suminf.    3.45812 (13) obj. -150.446 iterations 20
Cbc0038I Pass  83: suminf.    3.38579 (14) obj. -150.446 iterations 13
Cbc0038I Pass  84: suminf.    3.82259 (13) obj. -150.446 iterations 24
Cbc0038I Pass  85: suminf.    3.63674 (14) obj. -150.446 iterations 24
Cbc0038I Pass  86: suminf.    4.26519 (15) obj. -150.446 iterations 17
Cbc0038I Pass  87: suminf.    3.45812 (13) obj. -150.446 iterations 20
Cbc0038I Pass  88: suminf.    3.38579 (14) obj. -150.446 iterations 13
Cbc0038I Pass  89: suminf.    3.82259 (13) obj. -150.446 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 185 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 139 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (0.78 seconds)
Cbc0038I After 0.78 seconds - Feasibility pump exiting with objective of -119.742 - took 0.69 seconds
Cbc0012I Integer solution of -119.74162 found by feasibility pump after 0 iterations and 0 nodes (0.78 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 121 rows 67 columns
Cbc0031I 44 added rows had average density of 130.86364
Cbc0013I At root node, 44 cuts changed objective from -192.18869 to -174.86705 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41451 row cuts average 3.3 elements, 1 column cuts (1 active)  in 1.167 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3019 row cuts average 258.1 elements, 0 column cuts (0 active)  in 1.199 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 4.9 elements, 0 column cuts (0 active)  in 1.372 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 212 row cuts average 252.5 elements, 0 column cuts (0 active)  in 0.430 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -119.74162 best solution, best possible -174.86705 (12.95 seconds)
Cbc0010I After 5 nodes, 6 on tree, -119.74162 best solution, best possible -174.86705 (13.77 seconds)
Cbc0010I After 19 nodes, 15 on tree, -119.74162 best solution, best possible -174.86705 (14.50 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 29 rows 21 columns
Cbc0010I After 80 nodes, 27 on tree, -119.74162 best solution, best possible -174.86705 (15.20 seconds)
Cbc0012I Integer solution of -121.3614 found by rounding after 23014 iterations and 82 nodes (15.20 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 1 rows 2 columns
Cbc0038I Full problem 506 rows 262 columns, reduced to 7 rows 11 columns
Cbc0012I Integer solution of -122.53722 found by RINS after 25802 iterations and 200 nodes (15.78 seconds)
Cbc0010I After 229 nodes, 13 on tree, -122.53722 best solution, best possible -174.86705 (15.90 seconds)
Cbc0010I After 290 nodes, 25 on tree, -122.53722 best solution, best possible -174.86705 (16.60 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 8 rows 9 columns
Cbc0012I Integer solution of -123.5642 found by rounding after 31141 iterations and 385 nodes (17.12 seconds)
Cbc0012I Integer solution of -126.9079 found by rounding after 31469 iterations and 406 nodes (17.21 seconds)
Cbc0010I After 442 nodes, 13 on tree, -126.9079 best solution, best possible -174.86705 (17.32 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 62 rows 37 columns
Cbc0010I After 501 nodes, 13 on tree, -126.9079 best solution, best possible -174.86705 (18.03 seconds)
Cbc0010I After 584 nodes, 6 on tree, -126.9079 best solution, best possible -150.5068 (18.74 seconds)
Cbc0001I Search completed - best objective -126.907901, took 40701 iterations and 644 nodes (19.21 seconds)
Cbc0032I Strong branching done 4344 times (75476 iterations), fathomed 144 nodes and fixed 511 variables
Cbc0035I Maximum depth 45, 3178 variables fixed on reduced cost
Total time (CPU seconds):       18.37   (Wallclock seconds):       19.31

