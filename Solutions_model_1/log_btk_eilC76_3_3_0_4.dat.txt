Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-35) rows, 65 (-13) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 2.68981e-05 - average 2.24151e-07, 25 fixed columns
Coin0506I Presolve 61 (-59) rows, 33 (-32) columns and 182 (-182) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 382.44804
Clp0000I Optimal - objective value 382.44804
Coin0511I After Postsolve, objective 382.44804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 382.44804
Clp0000I Optimal - objective value 382.44804
Clp0000I Optimal - objective value 382.44804
Coin0511I After Postsolve, objective 382.44804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 382.4480431 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 120 rows, 65 columns (64 integer (64 of which binary)) and 364 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.07646
Cbc0038I Pass   1: suminf.    0.37896 (2) obj. -353.464 iterations 19
Cbc0038I Pass   2: suminf.    0.18919 (1) obj. -344.006 iterations 1
Cbc0038I Solution found of -303.426
Cbc0038I Relaxing continuous gives -303.426
Cbc0038I Rounding solution of -315.031 is better than previous of -303.426

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 65 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -315.031 to -346.537 (0.01 seconds)
Cbc0038I Round again with cutoff of -350.128
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.37896 (2) obj. -353.464 iterations 0
Cbc0038I Pass   4: suminf.    0.31203 (2) obj. -350.128 iterations 1
Cbc0038I Pass   5: suminf.    0.82311 (4) obj. -350.128 iterations 4
Cbc0038I Pass   6: suminf.    0.91049 (3) obj. -350.128 iterations 12
Cbc0038I Pass   7: suminf.    0.91049 (3) obj. -350.128 iterations 0
Cbc0038I Pass   8: suminf.    0.37896 (2) obj. -353.464 iterations 8
Cbc0038I Pass   9: suminf.    0.31203 (2) obj. -350.128 iterations 1
Cbc0038I Pass  10: suminf.    0.82311 (4) obj. -350.128 iterations 6
Cbc0038I Pass  11: suminf.    0.91049 (3) obj. -350.128 iterations 12
Cbc0038I Pass  12: suminf.    0.91049 (3) obj. -350.128 iterations 0
Cbc0038I Pass  13: suminf.    0.37896 (2) obj. -353.464 iterations 8
Cbc0038I Pass  14: suminf.    0.31203 (2) obj. -350.128 iterations 1
Cbc0038I Pass  15: suminf.    0.82311 (4) obj. -350.128 iterations 6
Cbc0038I Pass  16: suminf.    0.91049 (3) obj. -350.128 iterations 12
Cbc0038I Pass  17: suminf.    0.91049 (3) obj. -350.128 iterations 0
Cbc0038I Pass  18: suminf.    0.37896 (2) obj. -353.464 iterations 8
Cbc0038I Pass  19: suminf.    0.31203 (2) obj. -350.128 iterations 1
Cbc0038I Pass  20: suminf.    0.82311 (4) obj. -350.128 iterations 6
Cbc0038I Pass  21: suminf.    0.91049 (3) obj. -350.128 iterations 12
Cbc0038I Pass  22: suminf.    0.91049 (3) obj. -350.128 iterations 0
Cbc0038I Pass  23: suminf.    0.37896 (2) obj. -353.464 iterations 8
Cbc0038I Pass  24: suminf.    0.31203 (2) obj. -350.128 iterations 1
Cbc0038I Pass  25: suminf.    0.82311 (4) obj. -350.128 iterations 6
Cbc0038I Pass  26: suminf.    0.91049 (3) obj. -350.128 iterations 12
Cbc0038I Pass  27: suminf.    0.91049 (3) obj. -350.128 iterations 0
Cbc0038I Pass  28: suminf.    0.37896 (2) obj. -353.464 iterations 8
Cbc0038I Pass  29: suminf.    0.31203 (2) obj. -350.128 iterations 1
Cbc0038I Pass  30: suminf.    0.82311 (4) obj. -350.128 iterations 5
Cbc0038I Pass  31: suminf.    0.91049 (3) obj. -350.128 iterations 12
Cbc0038I Pass  32: suminf.    0.91049 (3) obj. -350.128 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 65 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -346.537 - took 0.01 seconds
Cbc0012I Integer solution of -346.5372 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 120 rows 65 columns, reduced to 13 rows 11 columns
Cbc0031I 6 added rows had average density of 38.833333
Cbc0013I At root node, 6 cuts changed objective from -382.44804 to -365.98872 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0004I Integer solution of -346.9928 found after 122 iterations and 1 nodes (0.23 seconds)
Cbc0001I Search completed - best objective -346.9928, took 273 iterations and 4 nodes (0.44 seconds)
Cbc0032I Strong branching done 24 times (225 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.45

