Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-7) rows, 22 (-2) columns and 117 (-12) elements
Clp1000I sum of infeasibilities 6.60165e-05 - average 1.65041e-06, 4 fixed columns
Coin0506I Presolve 33 (-7) rows, 18 (-4) columns and 95 (-22) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 54.315291
Clp0000I Optimal - objective value 54.315291
Coin0511I After Postsolve, objective 54.315291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.315291
Clp0000I Optimal - objective value 54.315291
Clp0000I Optimal - objective value 54.315291
Coin0511I After Postsolve, objective 54.315291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.31529062 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 22 columns (21 integer (21 of which binary)) and 121 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.7822
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.71403 iterations 17
Cbc0038I Solution found of 9.71403
Cbc0038I Relaxing continuous gives 9.71403
Cbc0038I Rounding solution of 1.13855 is better than previous of 9.71403

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 1.13855 to -22.68 (0.02 seconds)
Cbc0038I Round again with cutoff of -25.8437
Cbc0038I Pass   2: suminf.    1.80422 (6) obj. -25.8437 iterations 8
Cbc0038I Pass   3: suminf.    1.17356 (4) obj. -25.8437 iterations 7
Cbc0038I Pass   4: suminf.    0.86235 (4) obj. -25.8437 iterations 1
Cbc0038I Pass   5: suminf.    1.18953 (5) obj. -25.8437 iterations 2
Cbc0038I Pass   6: suminf.    1.18953 (5) obj. -25.8437 iterations 0
Cbc0038I Pass   7: suminf.    1.51552 (4) obj. -25.8437 iterations 11
Cbc0038I Pass   8: suminf.    1.51552 (4) obj. -25.8437 iterations 1
Cbc0038I Pass   9: suminf.    1.01444 (4) obj. -25.8437 iterations 4
Cbc0038I Pass  10: suminf.    0.99959 (3) obj. -25.8437 iterations 4
Cbc0038I Pass  11: suminf.    0.99984 (3) obj. -25.8437 iterations 1
Cbc0038I Pass  12: suminf.    1.41931 (4) obj. -25.8437 iterations 4
Cbc0038I Pass  13: suminf.    1.01596 (3) obj. -25.8437 iterations 2
Cbc0038I Pass  14: suminf.    1.23258 (5) obj. -25.8437 iterations 10
Cbc0038I Pass  15: suminf.    0.94232 (7) obj. -25.8437 iterations 4
Cbc0038I Pass  16: suminf.    0.92511 (4) obj. -25.8437 iterations 9
Cbc0038I Pass  17: suminf.    0.88611 (5) obj. -25.8437 iterations 2
Cbc0038I Pass  18: suminf.    1.39451 (4) obj. -25.8437 iterations 5
Cbc0038I Pass  19: suminf.    1.00514 (3) obj. -25.8437 iterations 4
Cbc0038I Pass  20: suminf.    0.99585 (3) obj. -25.8437 iterations 5
Cbc0038I Pass  21: suminf.    0.99984 (3) obj. -25.8437 iterations 4
Cbc0038I Pass  22: suminf.    1.41931 (4) obj. -25.8437 iterations 4
Cbc0038I Pass  23: suminf.    1.01596 (3) obj. -25.8437 iterations 2
Cbc0038I Pass  24: suminf.    0.99959 (3) obj. -25.8437 iterations 3
Cbc0038I Pass  25: suminf.    1.17253 (5) obj. -25.8437 iterations 4
Cbc0038I Pass  26: suminf.    1.17253 (5) obj. -25.8437 iterations 0
Cbc0038I Pass  27: suminf.    1.54599 (4) obj. -25.8437 iterations 3
Cbc0038I Pass  28: suminf.    1.21898 (4) obj. -25.8437 iterations 1
Cbc0038I Pass  29: suminf.    1.17253 (5) obj. -25.8437 iterations 2
Cbc0038I Pass  30: suminf.    1.26830 (5) obj. -25.8437 iterations 13
Cbc0038I Pass  31: suminf.    1.26830 (5) obj. -25.8437 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 39 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.68 - took 0.03 seconds
Cbc0012I Integer solution of -22.680038 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 19.333333
Cbc0013I At root node, 9 cuts changed objective from -54.315291 to -36.27929 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1052 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 687 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -22.680038, took 2048 iterations and 2 nodes (0.16 seconds)
Cbc0032I Strong branching done 34 times (326 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.17

