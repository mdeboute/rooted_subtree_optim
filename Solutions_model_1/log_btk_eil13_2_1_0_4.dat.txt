Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 10 (-5) columns and 48 (-27) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 17 (0) rows, 10 (0) columns and 48 (0) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 36.13147
Clp0000I Optimal - objective value 36.13147
Coin0511I After Postsolve, objective 36.13147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.13147
Clp0000I Optimal - objective value 36.13147
Clp0000I Optimal - objective value 36.13147
Coin0511I After Postsolve, objective 36.13147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.13146965 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 10 columns (9 integer (9 of which binary)) and 50 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.571%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.0023
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6 iterations 6
Cbc0038I Solution found of 6
Cbc0038I Relaxing continuous gives 6
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 10 columns, reduced to 12 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 6 to -12 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.8233
Cbc0038I Pass   2: suminf.    0.37047 (2) obj. -14.8233 iterations 2
Cbc0038I Pass   3: suminf.    0.10457 (1) obj. -14.8233 iterations 1
Cbc0038I Pass   4: suminf.    0.37256 (1) obj. -14.8233 iterations 1
Cbc0038I Pass   5: suminf.    0.48761 (6) obj. -14.8233 iterations 6
Cbc0038I Pass   6: suminf.    0.26148 (4) obj. -14.8233 iterations 2
Cbc0038I Pass   7: suminf.    1.03411 (4) obj. -14.8233 iterations 5
Cbc0038I Pass   8: suminf.    1.03411 (4) obj. -14.8233 iterations 0
Cbc0038I Pass   9: suminf.    1.03411 (4) obj. -14.8233 iterations 0
Cbc0038I Pass  10: suminf.    1.03411 (4) obj. -14.8233 iterations 0
Cbc0038I Pass  11: suminf.    1.03411 (4) obj. -14.8233 iterations 0
Cbc0038I Pass  12: suminf.    1.03411 (4) obj. -14.8233 iterations 0
Cbc0038I Pass  13: suminf.    1.98268 (6) obj. -14.8233 iterations 5
Cbc0038I Pass  14: suminf.    0.93451 (5) obj. -14.8233 iterations 2
Cbc0038I Pass  15: suminf.    0.66325 (2) obj. -14.8233 iterations 6
Cbc0038I Pass  16: suminf.    0.11765 (3) obj. -14.8233 iterations 4
Cbc0038I Pass  17: suminf.    0.26148 (4) obj. -14.8233 iterations 4
Cbc0038I Pass  18: suminf.    1.03411 (4) obj. -14.8233 iterations 6
Cbc0038I Pass  19: suminf.    1.03411 (4) obj. -14.8233 iterations 0
Cbc0038I Pass  20: suminf.    1.03411 (4) obj. -14.8233 iterations 1
Cbc0038I Pass  21: suminf.    1.03411 (4) obj. -14.8233 iterations 1
Cbc0038I Pass  22: suminf.    1.03411 (4) obj. -14.8233 iterations 2
Cbc0038I Pass  23: suminf.    0.93750 (2) obj. -14.8233 iterations 3
Cbc0038I Pass  24: suminf.    0.37256 (1) obj. -14.8233 iterations 3
Cbc0038I Pass  25: suminf.    0.10457 (1) obj. -14.8233 iterations 1
Cbc0038I Pass  26: suminf.    0.48256 (2) obj. -14.8233 iterations 4
Cbc0038I Pass  27: suminf.    0.43041 (3) obj. -14.8233 iterations 2
Cbc0038I Pass  28: suminf.    0.88187 (3) obj. -14.8233 iterations 4
Cbc0038I Pass  29: suminf.    0.27158 (5) obj. -14.8233 iterations 6
Cbc0038I Pass  30: suminf.    0.26148 (4) obj. -14.8233 iterations 1
Cbc0038I Pass  31: suminf.    1.03411 (4) obj. -14.8233 iterations 6
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 10 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -12 to -12.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -19.0055
Cbc0038I Pass  31: suminf.    0.52537 (2) obj. -19.0055 iterations 0
Cbc0038I Pass  32: suminf.    0.26385 (3) obj. -19.0055 iterations 2
Cbc0038I Pass  33: suminf.    1.03873 (4) obj. -19.0055 iterations 3
Cbc0038I Pass  34: suminf.    0.73217 (4) obj. -19.0055 iterations 3
Cbc0038I Pass  35: suminf.    0.73217 (4) obj. -19.0055 iterations 0
Cbc0038I Pass  36: suminf.    0.77119 (6) obj. -19.0055 iterations 2
Cbc0038I Pass  37: suminf.    0.73217 (4) obj. -19.0055 iterations 2
Cbc0038I Pass  38: suminf.    0.73217 (4) obj. -19.0055 iterations 0
Cbc0038I Pass  39: suminf.    0.84798 (6) obj. -19.0055 iterations 2
Cbc0038I Pass  40: suminf.    0.94118 (3) obj. -19.0055 iterations 7
Cbc0038I Pass  41: suminf.    0.76046 (5) obj. -19.0055 iterations 4
Cbc0038I Pass  42: suminf.    0.75320 (6) obj. -19.0055 iterations 2
Cbc0038I Pass  43: suminf.    1.36587 (4) obj. -19.0055 iterations 7
Cbc0038I Pass  44: suminf.    0.34588 (2) obj. -19.0055 iterations 6
Cbc0038I Pass  45: suminf.    0.26385 (3) obj. -19.0055 iterations 2
Cbc0038I Pass  46: suminf.    1.03873 (4) obj. -19.0055 iterations 3
Cbc0038I Pass  47: suminf.    0.73217 (4) obj. -19.0055 iterations 4
Cbc0038I Pass  48: suminf.    0.85074 (8) obj. -19.0055 iterations 3
Cbc0038I Pass  49: suminf.    0.73217 (4) obj. -19.0055 iterations 2
Cbc0038I Pass  50: suminf.    0.73217 (4) obj. -19.0055 iterations 0
Cbc0038I Pass  51: suminf.    0.76046 (5) obj. -19.0055 iterations 1
Cbc0038I Pass  52: suminf.    0.94272 (6) obj. -19.0055 iterations 5
Cbc0038I Pass  53: suminf.    2.70089 (8) obj. -19.0055 iterations 6
Cbc0038I Pass  54: suminf.    0.76046 (5) obj. -19.0055 iterations 5
Cbc0038I Pass  55: suminf.    2.72698 (7) obj. -19.0055 iterations 6
Cbc0038I Pass  56: suminf.    0.34588 (2) obj. -19.0055 iterations 6
Cbc0038I Pass  57: suminf.    0.26385 (3) obj. -19.0055 iterations 2
Cbc0038I Pass  58: suminf.    1.03873 (4) obj. -19.0055 iterations 3
Cbc0038I Pass  59: suminf.    0.73217 (4) obj. -19.0055 iterations 3
Cbc0038I Pass  60: suminf.    1.87893 (6) obj. -19.0055 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 10 columns, reduced to 17 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -12.5 - took 0.01 seconds
Cbc0012I Integer solution of -12.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 10 columns, reduced to 13 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -35.734055 to -35.734055 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -12.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

