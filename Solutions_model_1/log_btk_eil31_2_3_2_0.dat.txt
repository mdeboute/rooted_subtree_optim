Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 26 (-7) columns and 130 (-53) elements
Clp1000I sum of infeasibilities 4.44339e-06 - average 1.03335e-07, 4 fixed columns
Coin0506I Presolve 32 (-11) rows, 22 (-4) columns and 101 (-29) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 138.60955
Clp0000I Optimal - objective value 138.60955
Coin0511I After Postsolve, objective 138.60955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 138.60955
Clp0000I Optimal - objective value 138.60955
Clp0000I Optimal - objective value 138.60955
Coin0511I After Postsolve, objective 138.60955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.6095457 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 26 columns (25 integer (25 of which binary)) and 130 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.991%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.7179
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -60.7011 iterations 12
Cbc0038I Solution found of -60.7011
Cbc0038I Relaxing continuous gives -60.7011
Cbc0038I Rounding solution of -73.0966 is better than previous of -60.7011

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -73.0966 to -97.7114 (0.01 seconds)
Cbc0038I Round again with cutoff of -101.801
Cbc0038I Pass   2: suminf.    0.38356 (1) obj. -101.801 iterations 1
Cbc0038I Pass   3: suminf.    0.25263 (1) obj. -110.531 iterations 1
Cbc0038I Pass   4: suminf.    1.02096 (3) obj. -101.801 iterations 8
Cbc0038I Pass   5: suminf.    0.47431 (3) obj. -101.801 iterations 2
Cbc0038I Pass   6: suminf.    0.71573 (3) obj. -101.801 iterations 8
Cbc0038I Pass   7: suminf.    0.35984 (2) obj. -101.801 iterations 4
Cbc0038I Pass   8: suminf.    0.62591 (2) obj. -101.801 iterations 3
Cbc0038I Pass   9: suminf.    0.34220 (2) obj. -101.801 iterations 2
Cbc0038I Pass  10: suminf.    0.71526 (2) obj. -101.801 iterations 2
Cbc0038I Pass  11: suminf.    1.09902 (5) obj. -101.801 iterations 12
Cbc0038I Pass  12: suminf.    0.85596 (3) obj. -101.801 iterations 4
Cbc0038I Pass  13: suminf.    0.44167 (2) obj. -101.801 iterations 4
Cbc0038I Pass  14: suminf.    0.41339 (3) obj. -101.801 iterations 2
Cbc0038I Pass  15: suminf.    0.64093 (2) obj. -101.801 iterations 4
Cbc0038I Pass  16: suminf.    0.47614 (2) obj. -113.141 iterations 1
Cbc0038I Pass  17: suminf.    0.25252 (1) obj. -101.801 iterations 2
Cbc0038I Pass  18: suminf.    0.25252 (1) obj. -101.801 iterations 1
Cbc0038I Pass  19: suminf.    1.17022 (6) obj. -101.801 iterations 9
Cbc0038I Pass  20: suminf.    1.05891 (4) obj. -101.801 iterations 2
Cbc0038I Pass  21: suminf.    0.98156 (3) obj. -101.801 iterations 5
Cbc0038I Pass  22: suminf.    0.26990 (2) obj. -101.801 iterations 3
Cbc0038I Pass  23: suminf.    1.70197 (6) obj. -101.801 iterations 8
Cbc0038I Pass  24: suminf.    0.24211 (1) obj. -106.17 iterations 6
Cbc0038I Pass  25: suminf.    0.30764 (1) obj. -101.801 iterations 1
Cbc0038I Pass  26: suminf.    0.92711 (3) obj. -101.801 iterations 4
Cbc0038I Pass  27: suminf.    0.56618 (2) obj. -101.801 iterations 4
Cbc0038I Pass  28: suminf.    0.69408 (2) obj. -101.801 iterations 3
Cbc0038I Pass  29: suminf.    1.35244 (4) obj. -101.801 iterations 3
Cbc0038I Pass  30: suminf.    0.64216 (2) obj. -101.801 iterations 3
Cbc0038I Pass  31: suminf.    0.12632 (1) obj. -102.405 iterations 2
Cbc0038I Rounding solution of -101.986 is better than previous of -97.7114

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -101.986 to -110.524 (0.02 seconds)
Cbc0038I Round again with cutoff of -116.141
Cbc0038I Pass  31: suminf.    0.54692 (3) obj. -116.141 iterations 3
Cbc0038I Pass  32: suminf.    0.53295 (3) obj. -116.141 iterations 2
Cbc0038I Pass  33: suminf.    0.94623 (3) obj. -116.141 iterations 5
Cbc0038I Pass  34: suminf.    0.58048 (2) obj. -117.583 iterations 2
Cbc0038I Pass  35: suminf.    0.94623 (3) obj. -116.141 iterations 3
Cbc0038I Pass  36: suminf.    1.37992 (6) obj. -116.141 iterations 21
Cbc0038I Pass  37: suminf.    1.20584 (5) obj. -116.141 iterations 3
Cbc0038I Pass  38: suminf.    1.04044 (4) obj. -116.141 iterations 4
Cbc0038I Pass  39: suminf.    1.04044 (4) obj. -116.141 iterations 0
Cbc0038I Pass  40: suminf.    0.70927 (3) obj. -116.141 iterations 6
Cbc0038I Pass  41: suminf.    0.63908 (3) obj. -116.141 iterations 2
Cbc0038I Pass  42: suminf.    0.56922 (3) obj. -116.141 iterations 4
Cbc0038I Pass  43: suminf.    0.28791 (2) obj. -116.487 iterations 2
Cbc0038I Pass  44: suminf.    1.18217 (4) obj. -116.141 iterations 5
Cbc0038I Pass  45: suminf.    1.17244 (3) obj. -116.141 iterations 1
Cbc0038I Pass  46: suminf.    0.83816 (2) obj. -116.141 iterations 3
Cbc0038I Pass  47: suminf.    0.80299 (2) obj. -116.141 iterations 2
Cbc0038I Pass  48: suminf.    0.83908 (2) obj. -116.141 iterations 2
Cbc0038I Pass  49: suminf.    0.88236 (5) obj. -116.141 iterations 14
Cbc0038I Pass  50: suminf.    0.86822 (3) obj. -116.141 iterations 4
Cbc0038I Pass  51: suminf.    1.17810 (4) obj. -116.141 iterations 3
Cbc0038I Pass  52: suminf.    1.17810 (4) obj. -116.141 iterations 1
Cbc0038I Pass  53: suminf.    1.19457 (3) obj. -116.141 iterations 3
Cbc0038I Pass  54: suminf.    1.19457 (3) obj. -116.141 iterations 0
Cbc0038I Pass  55: suminf.    1.55731 (4) obj. -116.141 iterations 3
Cbc0038I Pass  56: suminf.    0.37931 (3) obj. -116.141 iterations 4
Cbc0038I Pass  57: suminf.    0.74149 (4) obj. -116.141 iterations 5
Cbc0038I Pass  58: suminf.    0.74149 (4) obj. -116.141 iterations 0
Cbc0038I Pass  59: suminf.    0.81613 (3) obj. -116.141 iterations 3
Cbc0038I Pass  60: suminf.    0.25247 (3) obj. -116.141 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -110.524 - took 0.02 seconds
Cbc0012I Integer solution of -110.5239 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 42 rows 26 columns, reduced to 14 rows 11 columns
Cbc0031I 9 added rows had average density of 16.222222
Cbc0013I At root node, 9 cuts changed objective from -138.60955 to -123.82073 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 656 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 448 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -110.5239, took 1716 iterations and 6 nodes (0.18 seconds)
Cbc0032I Strong branching done 80 times (482 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

