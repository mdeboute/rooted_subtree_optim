Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 74 (-4) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 8.07957e-06 - average 6.31216e-08, 13 fixed columns
Coin0506I Presolve 103 (-25) rows, 60 (-14) columns and 318 (-78) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 41.417447
Clp0000I Optimal - objective value 41.417447
Coin0511I After Postsolve, objective 41.417447, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.417447
Clp0000I Optimal - objective value 41.417447
Clp0000I Optimal - objective value 41.417447
Coin0511I After Postsolve, objective 41.417447, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.41744667 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 74 columns (73 integer (73 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 10.9312
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.0112 iterations 34
Cbc0038I Solution found of 11.0112
Cbc0038I Relaxing continuous gives 11.0112
Cbc0038I Rounding solution of -7.36699 is better than previous of 11.0112

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -7.36699 to -10.6215 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.7012
Cbc0038I Pass   2: suminf.    3.39148 (8) obj. -13.7012 iterations 18
Cbc0038I Pass   3: suminf.    2.81456 (7) obj. -13.7012 iterations 2
Cbc0038I Pass   4: suminf.    1.28679 (3) obj. -13.7012 iterations 10
Cbc0038I Pass   5: suminf.    0.59425 (3) obj. -13.7012 iterations 3
Cbc0038I Pass   6: suminf.    0.27121 (2) obj. -13.7012 iterations 2
Cbc0038I Pass   7: suminf.    1.12378 (3) obj. -13.7012 iterations 5
Cbc0038I Pass   8: suminf.    0.73418 (3) obj. -13.7012 iterations 3
Cbc0038I Pass   9: suminf.    1.46392 (4) obj. -13.7012 iterations 4
Cbc0038I Pass  10: suminf.    0.64770 (3) obj. -13.7012 iterations 1
Cbc0038I Pass  11: suminf.    0.27121 (2) obj. -13.7012 iterations 1
Cbc0038I Pass  12: suminf.    1.12378 (3) obj. -13.7012 iterations 5
Cbc0038I Pass  13: suminf.    0.73418 (3) obj. -13.7012 iterations 3
Cbc0038I Pass  14: suminf.    1.46392 (4) obj. -13.7012 iterations 4
Cbc0038I Pass  15: suminf.    0.64770 (3) obj. -13.7012 iterations 1
Cbc0038I Pass  16: suminf.    0.27121 (2) obj. -13.7012 iterations 1
Cbc0038I Pass  17: suminf.    1.12378 (3) obj. -13.7012 iterations 5
Cbc0038I Pass  18: suminf.    0.73418 (3) obj. -13.7012 iterations 3
Cbc0038I Pass  19: suminf.    1.46392 (4) obj. -13.7012 iterations 4
Cbc0038I Pass  20: suminf.    0.64770 (3) obj. -13.7012 iterations 1
Cbc0038I Pass  21: suminf.    0.27121 (2) obj. -13.7012 iterations 1
Cbc0038I Pass  22: suminf.    1.12378 (3) obj. -13.7012 iterations 5
Cbc0038I Pass  23: suminf.    0.73418 (3) obj. -13.7012 iterations 3
Cbc0038I Pass  24: suminf.    1.46392 (4) obj. -13.7012 iterations 4
Cbc0038I Pass  25: suminf.    0.64770 (3) obj. -13.7012 iterations 1
Cbc0038I Pass  26: suminf.    0.27121 (2) obj. -13.7012 iterations 1
Cbc0038I Pass  27: suminf.    1.12378 (3) obj. -13.7012 iterations 5
Cbc0038I Pass  28: suminf.    0.73418 (3) obj. -13.7012 iterations 3
Cbc0038I Pass  29: suminf.    1.46392 (4) obj. -13.7012 iterations 4
Cbc0038I Pass  30: suminf.    0.64770 (3) obj. -13.7012 iterations 1
Cbc0038I Pass  31: suminf.    0.27121 (2) obj. -13.7012 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -10.6215 to -10.7033 (0.09 seconds)
Cbc0038I Round again with cutoff of -19.2444
Cbc0038I Pass  31: suminf.    4.39006 (13) obj. -19.2444 iterations 1
Cbc0038I Pass  32: suminf.    3.80998 (12) obj. -19.2444 iterations 2
Cbc0038I Pass  33: suminf.    1.87513 (5) obj. -19.2444 iterations 14
Cbc0038I Pass  34: suminf.    1.37063 (4) obj. -19.2444 iterations 1
Cbc0038I Pass  35: suminf.    1.05036 (3) obj. -19.2444 iterations 6
Cbc0038I Pass  36: suminf.    1.23241 (3) obj. -19.2444 iterations 1
Cbc0038I Pass  37: suminf.    1.22770 (4) obj. -19.2444 iterations 1
Cbc0038I Pass  38: suminf.    1.53831 (4) obj. -19.2444 iterations 2
Cbc0038I Pass  39: suminf.    1.36587 (5) obj. -19.2444 iterations 3
Cbc0038I Pass  40: suminf.    1.32464 (4) obj. -19.2444 iterations 7
Cbc0038I Pass  41: suminf.    1.32464 (4) obj. -19.2444 iterations 0
Cbc0038I Pass  42: suminf.    1.53195 (4) obj. -19.2444 iterations 2
Cbc0038I Pass  43: suminf.    1.53195 (4) obj. -19.2444 iterations 0
Cbc0038I Pass  44: suminf.    1.32464 (4) obj. -19.2444 iterations 2
Cbc0038I Pass  45: suminf.    4.76387 (13) obj. -19.2444 iterations 24
Cbc0038I Pass  46: suminf.    3.22701 (12) obj. -19.2444 iterations 12
Cbc0038I Pass  47: suminf.    1.90357 (5) obj. -19.2444 iterations 12
Cbc0038I Pass  48: suminf.    1.90357 (5) obj. -19.2444 iterations 1
Cbc0038I Pass  49: suminf.    0.74911 (4) obj. -19.2444 iterations 7
Cbc0038I Pass  50: suminf.    1.47756 (4) obj. -19.2444 iterations 6
Cbc0038I Pass  51: suminf.    1.41330 (4) obj. -19.2444 iterations 3
Cbc0038I Pass  52: suminf.    1.32464 (4) obj. -19.2444 iterations 1
Cbc0038I Pass  53: suminf.    1.53195 (4) obj. -19.2444 iterations 2
Cbc0038I Pass  54: suminf.    1.53195 (4) obj. -19.2444 iterations 0
Cbc0038I Pass  55: suminf.    1.32464 (4) obj. -19.2444 iterations 2
Cbc0038I Pass  56: suminf.    2.44676 (11) obj. -19.2444 iterations 23
Cbc0038I Pass  57: suminf.    2.18169 (8) obj. -19.2444 iterations 8
Cbc0038I Pass  58: suminf.    1.98135 (7) obj. -19.2444 iterations 13
Cbc0038I Pass  59: suminf.    1.98135 (7) obj. -19.2444 iterations 0
Cbc0038I Pass  60: suminf.    1.54804 (4) obj. -19.2444 iterations 8
Cbc0038I Rounding solution of -13.9961 is better than previous of -10.7033

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 75 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -13.9961 to -14.1356 (0.13 seconds)
Cbc0038I Round again with cutoff of -25.8963
Cbc0038I Pass  60: suminf.    5.60099 (14) obj. -25.8963 iterations 1
Cbc0038I Pass  61: suminf.    5.01631 (13) obj. -25.8963 iterations 2
Cbc0038I Pass  62: suminf.    2.27262 (8) obj. -25.8963 iterations 15
Cbc0038I Pass  63: suminf.    1.64065 (6) obj. -25.8963 iterations 4
Cbc0038I Pass  64: suminf.    2.56626 (7) obj. -25.8963 iterations 12
Cbc0038I Pass  65: suminf.    2.56626 (7) obj. -25.8963 iterations 0
Cbc0038I Pass  66: suminf.    1.87262 (6) obj. -25.8963 iterations 6
Cbc0038I Pass  67: suminf.    1.64946 (6) obj. -25.8963 iterations 1
Cbc0038I Pass  68: suminf.    2.56626 (7) obj. -25.8963 iterations 9
Cbc0038I Pass  69: suminf.    6.16314 (19) obj. -25.8963 iterations 39
Cbc0038I Pass  70: suminf.    2.90387 (13) obj. -25.8963 iterations 18
Cbc0038I Pass  71: suminf.    3.14481 (9) obj. -25.8963 iterations 20
Cbc0038I Pass  72: suminf.    2.00006 (7) obj. -25.8963 iterations 3
Cbc0038I Pass  73: suminf.    2.00006 (7) obj. -25.8963 iterations 0
Cbc0038I Pass  74: suminf.    1.60531 (4) obj. -25.8963 iterations 6
Cbc0038I Pass  75: suminf.    1.30883 (4) obj. -25.8963 iterations 2
Cbc0038I Pass  76: suminf.    1.52360 (5) obj. -25.8963 iterations 5
Cbc0038I Pass  77: suminf.    1.49568 (4) obj. -25.8963 iterations 1
Cbc0038I Pass  78: suminf.    1.87262 (6) obj. -25.8963 iterations 4
Cbc0038I Pass  79: suminf.    1.64946 (6) obj. -25.8963 iterations 1
Cbc0038I Pass  80: suminf.    2.56626 (7) obj. -25.8963 iterations 7
Cbc0038I Pass  81: suminf.    2.56626 (7) obj. -25.8963 iterations 0
Cbc0038I Pass  82: suminf.    1.87262 (6) obj. -25.8963 iterations 6
Cbc0038I Pass  83: suminf.    3.76099 (11) obj. -25.8963 iterations 9
Cbc0038I Pass  84: suminf.    2.24789 (7) obj. -25.8963 iterations 10
Cbc0038I Pass  85: suminf.    2.24789 (7) obj. -25.8963 iterations 0
Cbc0038I Pass  86: suminf.    2.07059 (5) obj. -25.8963 iterations 8
Cbc0038I Pass  87: suminf.    2.07059 (5) obj. -25.8963 iterations 0
Cbc0038I Pass  88: suminf.    1.87262 (6) obj. -25.8963 iterations 4
Cbc0038I Pass  89: suminf.    1.64946 (6) obj. -25.8963 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -14.1356 - took 0.14 seconds
Cbc0012I Integer solution of -14.135571 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 64 rows 37 columns
Cbc0031I 24 added rows had average density of 48.083333
Cbc0013I At root node, 24 cuts changed objective from -41.417447 to -28.660039 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9440 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1638 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.135571 best solution, best possible -28.660039 (0.75 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 15 rows 17 columns
Cbc0012I Integer solution of -14.492531 found by DiveCoefficient after 7842 iterations and 47 nodes (0.95 seconds)
Cbc0016I Integer solution of -14.500771 found by strong branching after 7910 iterations and 58 nodes (0.96 seconds)
Cbc0004I Integer solution of -14.609881 found after 7928 iterations and 61 nodes (0.96 seconds)
Cbc0012I Integer solution of -14.640891 found by rounding after 8091 iterations and 87 nodes (0.98 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -14.640891, took 8345 iterations and 112 nodes (1.00 seconds)
Cbc0032I Strong branching done 814 times (12744 iterations), fathomed 14 nodes and fixed 16 variables
Cbc0035I Maximum depth 18, 271 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.01

