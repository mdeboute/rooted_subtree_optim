Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.35724e-05 - average 2.41528e-07, 25 fixed columns
Coin0506I Presolve 90 (-49) rows, 50 (-26) columns and 272 (-150) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 2.1060821 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 74.247866
Clp0000I Optimal - objective value 74.247866
Coin0511I After Postsolve, objective 74.247866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.247866
Clp0000I Optimal - objective value 74.247866
Clp0000I Optimal - objective value 74.247866
Coin0511I After Postsolve, objective 74.247866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.24786599 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.677%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.97866
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.31038 iterations 33
Cbc0038I Solution found of -8.31038
Cbc0038I Relaxing continuous gives -8.31038
Cbc0038I Rounding solution of -31.4953 is better than previous of -8.31038

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.4953 to -39.5537 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.004
Cbc0038I Pass   2: suminf.    0.53562 (2) obj. -43.004 iterations 7
Cbc0038I Pass   3: suminf.    0.53562 (2) obj. -43.004 iterations 1
Cbc0038I Pass   4: suminf.    0.41530 (1) obj. -43.004 iterations 4
Cbc0038I Pass   5: suminf.    0.22038 (1) obj. -43.004 iterations 2
Cbc0038I Pass   6: suminf.    1.03990 (5) obj. -43.004 iterations 13
Cbc0038I Pass   7: suminf.    0.73010 (4) obj. -43.004 iterations 6
Cbc0038I Pass   8: suminf.    0.89884 (2) obj. -43.004 iterations 6
Cbc0038I Pass   9: suminf.    0.38832 (3) obj. -43.004 iterations 3
Cbc0038I Pass  10: suminf.    0.53562 (2) obj. -43.004 iterations 10
Cbc0038I Pass  11: suminf.    0.53562 (2) obj. -43.004 iterations 1
Cbc0038I Pass  12: suminf.    0.41530 (1) obj. -43.004 iterations 4
Cbc0038I Pass  13: suminf.    0.22038 (1) obj. -43.004 iterations 2
Cbc0038I Pass  14: suminf.    0.95064 (5) obj. -43.004 iterations 18
Cbc0038I Pass  15: suminf.    0.83736 (3) obj. -43.004 iterations 9
Cbc0038I Pass  16: suminf.    1.10467 (3) obj. -43.004 iterations 1
Cbc0038I Pass  17: suminf.    2.07775 (12) obj. -43.004 iterations 22
Cbc0038I Pass  18: suminf.    0.99764 (5) obj. -43.004 iterations 19
Cbc0038I Pass  19: suminf.    0.43205 (4) obj. -43.004 iterations 8
Cbc0038I Pass  20: suminf.    2.06218 (5) obj. -43.004 iterations 6
Cbc0038I Pass  21: suminf.    1.29986 (4) obj. -43.004 iterations 1
Cbc0038I Pass  22: suminf.    0.81229 (3) obj. -43.004 iterations 3
Cbc0038I Pass  23: suminf.    1.66847 (4) obj. -43.004 iterations 3
Cbc0038I Pass  24: suminf.    3.25312 (12) obj. -43.004 iterations 20
Cbc0038I Pass  25: suminf.    0.55188 (2) obj. -43.004 iterations 18
Cbc0038I Pass  26: suminf.    0.55188 (2) obj. -43.004 iterations 0
Cbc0038I Pass  27: suminf.    0.89884 (2) obj. -43.004 iterations 4
Cbc0038I Pass  28: suminf.    0.38832 (3) obj. -43.004 iterations 3
Cbc0038I Pass  29: suminf.    0.53562 (2) obj. -43.004 iterations 9
Cbc0038I Pass  30: suminf.    0.53562 (2) obj. -43.004 iterations 1
Cbc0038I Pass  31: suminf.    0.41530 (1) obj. -43.004 iterations 2
Cbc0038I Rounding solution of -42.0712 is better than previous of -39.5537

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -49.2143
Cbc0038I Pass  31: suminf.    0.80973 (3) obj. -49.2143 iterations 1
Cbc0038I Pass  32: suminf.    0.52764 (5) obj. -49.2143 iterations 5
Cbc0038I Pass  33: suminf.    1.39813 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  34: suminf.    0.49599 (3) obj. -49.2143 iterations 4
Cbc0038I Pass  35: suminf.    0.86904 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  36: suminf.    0.80973 (3) obj. -49.2143 iterations 2
Cbc0038I Pass  37: suminf.    0.52764 (5) obj. -49.2143 iterations 3
Cbc0038I Pass  38: suminf.    1.39813 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  39: suminf.    0.49599 (3) obj. -49.2143 iterations 4
Cbc0038I Pass  40: suminf.    0.86904 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  41: suminf.    0.80973 (3) obj. -49.2143 iterations 2
Cbc0038I Pass  42: suminf.    0.52764 (5) obj. -49.2143 iterations 3
Cbc0038I Pass  43: suminf.    1.39813 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  44: suminf.    0.49599 (3) obj. -49.2143 iterations 4
Cbc0038I Pass  45: suminf.    0.86904 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  46: suminf.    0.80973 (3) obj. -49.2143 iterations 2
Cbc0038I Pass  47: suminf.    0.52764 (5) obj. -49.2143 iterations 2
Cbc0038I Pass  48: suminf.    1.39813 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  49: suminf.    0.49599 (3) obj. -49.2143 iterations 4
Cbc0038I Pass  50: suminf.    0.86904 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  51: suminf.    0.80973 (3) obj. -49.2143 iterations 2
Cbc0038I Pass  52: suminf.    0.52764 (5) obj. -49.2143 iterations 3
Cbc0038I Pass  53: suminf.    1.39813 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  54: suminf.    0.49599 (3) obj. -49.2143 iterations 4
Cbc0038I Pass  55: suminf.    0.86904 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  56: suminf.    0.80973 (3) obj. -49.2143 iterations 2
Cbc0038I Pass  57: suminf.    0.52764 (5) obj. -49.2143 iterations 3
Cbc0038I Pass  58: suminf.    1.39813 (4) obj. -49.2143 iterations 5
Cbc0038I Pass  59: suminf.    0.49599 (3) obj. -49.2143 iterations 4
Cbc0038I Pass  60: suminf.    0.86904 (4) obj. -49.2143 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -42.0712 - took 0.05 seconds
Cbc0012I Integer solution of -42.07116 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 34 rows 20 columns
Cbc0031I 21 added rows had average density of 45.619048
Cbc0013I At root node, 21 cuts changed objective from -74.055737 to -61.589375 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5926 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1199 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0038I Full problem 136 rows 76 columns, reduced to 9 rows 7 columns
Cbc0010I After 43 nodes, 3 on tree, -42.07116 best solution, best possible -61.589375 (0.69 seconds)
Cbc0001I Search completed - best objective -42.07115999999999, took 5806 iterations and 46 nodes (0.69 seconds)
Cbc0032I Strong branching done 634 times (12208 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 20, 67 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.70

