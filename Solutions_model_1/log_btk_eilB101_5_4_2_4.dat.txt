Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 171 (-34) rows, 99 (-4) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 3.70882e-05 - average 2.1689e-07, 18 fixed columns
Coin0506I Presolve 133 (-38) rows, 80 (-19) columns and 418 (-114) elements
Clp0029I End of values pass after 80 iterations
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Coin0511I After Postsolve, objective 50.319984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Clp0000I Optimal - objective value 50.319984
Coin0511I After Postsolve, objective 50.319984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.31998426 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 171 rows, 99 columns (98 integer (98 of which binary)) and 535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.03029
Cbc0038I Solution found of -0.762541
Cbc0038I Relaxing continuous gives -8.75341
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 67 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -8.75341 to -20.9045 (0.06 seconds)
Cbc0038I Round again with cutoff of -23.8461
Cbc0038I Pass   1: suminf.    2.22192 (25) obj. -23.8461 iterations 66
Cbc0038I Pass   2: suminf.    0.77402 (4) obj. -23.8461 iterations 38
Cbc0038I Pass   3: suminf.    0.77402 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   4: suminf.    1.77316 (5) obj. -23.8461 iterations 8
Cbc0038I Pass   5: suminf.    1.61984 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   6: suminf.    1.33590 (4) obj. -23.8461 iterations 1
Cbc0038I Pass   7: suminf.    1.20575 (4) obj. -23.8461 iterations 2
Cbc0038I Pass   8: suminf.    1.20575 (4) obj. -23.8461 iterations 0
Cbc0038I Pass   9: suminf.    1.61984 (4) obj. -23.8461 iterations 4
Cbc0038I Pass  10: suminf.    3.00813 (10) obj. -23.8461 iterations 21
Cbc0038I Pass  11: suminf.    2.22548 (8) obj. -23.8461 iterations 9
Cbc0038I Pass  12: suminf.    1.58633 (6) obj. -23.8461 iterations 5
Cbc0038I Pass  13: suminf.    1.55386 (4) obj. -23.8461 iterations 12
Cbc0038I Pass  14: suminf.    1.25971 (5) obj. -23.8461 iterations 4
Cbc0038I Pass  15: suminf.    1.13018 (5) obj. -23.8461 iterations 3
Cbc0038I Pass  16: suminf.    1.58917 (5) obj. -23.8461 iterations 12
Cbc0038I Pass  17: suminf.    1.58917 (5) obj. -23.8461 iterations 0
Cbc0038I Pass  18: suminf.    1.59268 (5) obj. -23.8461 iterations 7
Cbc0038I Pass  19: suminf.    1.57986 (5) obj. -23.8461 iterations 2
Cbc0038I Pass  20: suminf.    1.62170 (5) obj. -23.8461 iterations 4
Cbc0038I Pass  21: suminf.    1.59095 (8) obj. -23.8461 iterations 29
Cbc0038I Pass  22: suminf.    1.41641 (5) obj. -23.8461 iterations 12
Cbc0038I Pass  23: suminf.    1.01086 (4) obj. -23.8461 iterations 14
Cbc0038I Pass  24: suminf.    1.01086 (4) obj. -23.8461 iterations 1
Cbc0038I Pass  25: suminf.    1.20890 (4) obj. -23.8461 iterations 5
Cbc0038I Pass  26: suminf.    1.08522 (3) obj. -23.8461 iterations 3
Cbc0038I Pass  27: suminf.    1.01086 (4) obj. -23.8461 iterations 2
Cbc0038I Pass  28: suminf.    3.14297 (9) obj. -23.8461 iterations 18
Cbc0038I Pass  29: suminf.    2.12983 (6) obj. -23.8461 iterations 11
Cbc0038I Pass  30: suminf.    0.96641 (5) obj. -23.8461 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 97 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -20.9045 to -20.9333 (0.11 seconds)
Cbc0038I Round again with cutoff of -29.1409
Cbc0038I Pass  30: suminf.    3.00141 (25) obj. -29.1409 iterations 0
Cbc0038I Pass  31: suminf.    2.69727 (8) obj. -29.1409 iterations 28
Cbc0038I Pass  32: suminf.    2.69727 (8) obj. -29.1409 iterations 0
Cbc0038I Pass  33: suminf.    3.05632 (10) obj. -29.1409 iterations 18
Cbc0038I Pass  34: suminf.    2.96892 (10) obj. -29.1409 iterations 5
Cbc0038I Pass  35: suminf.    2.29271 (10) obj. -29.1409 iterations 34
Cbc0038I Pass  36: suminf.    1.68474 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  37: suminf.    1.68474 (5) obj. -29.1409 iterations 0
Cbc0038I Pass  38: suminf.    1.89208 (5) obj. -29.1409 iterations 10
Cbc0038I Pass  39: suminf.    1.85960 (5) obj. -29.1409 iterations 3
Cbc0038I Pass  40: suminf.    1.68474 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  41: suminf.    2.44874 (9) obj. -29.1409 iterations 26
Cbc0038I Pass  42: suminf.    2.21029 (8) obj. -29.1409 iterations 9
Cbc0038I Pass  43: suminf.    1.70001 (8) obj. -29.1409 iterations 13
Cbc0038I Pass  44: suminf.    1.70001 (8) obj. -29.1409 iterations 0
Cbc0038I Pass  45: suminf.    2.01399 (5) obj. -29.1409 iterations 8
Cbc0038I Pass  46: suminf.    1.59094 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  47: suminf.    1.50919 (5) obj. -29.1409 iterations 7
Cbc0038I Pass  48: suminf.    1.50919 (5) obj. -29.1409 iterations 1
Cbc0038I Pass  49: suminf.    1.94657 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  50: suminf.    1.39237 (5) obj. -29.1409 iterations 2
Cbc0038I Pass  51: suminf.    1.50919 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  52: suminf.    4.09063 (11) obj. -29.1409 iterations 19
Cbc0038I Pass  53: suminf.    2.21244 (8) obj. -29.1409 iterations 13
Cbc0038I Pass  54: suminf.    2.03782 (7) obj. -29.1409 iterations 13
Cbc0038I Pass  55: suminf.    1.89124 (5) obj. -29.1409 iterations 5
Cbc0038I Pass  56: suminf.    1.51816 (5) obj. -29.1409 iterations 4
Cbc0038I Pass  57: suminf.    1.48397 (5) obj. -29.1409 iterations 8
Cbc0038I Pass  58: suminf.    1.69211 (5) obj. -29.1409 iterations 9
Cbc0038I Pass  59: suminf.    1.68115 (5) obj. -29.1409 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 171 rows 99 columns, reduced to 97 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -20.9333 - took 0.13 seconds
Cbc0012I Integer solution of -20.933287 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 69 rows 44 columns
Cbc0031I 28 added rows had average density of 61.75
Cbc0013I At root node, 28 cuts changed objective from -50.319984 to -44.290403 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11939 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1895 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.933287 best solution, best possible -44.290403 (0.98 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 16 rows 16 columns
Cbc0038I Full problem 171 rows 99 columns, reduced to 9 rows 12 columns
Cbc0012I Integer solution of -21.21006 found by rounding after 9405 iterations and 95 nodes (1.32 seconds)
Cbc0038I Full problem 171 rows 99 columns, reduced to 19 rows 18 columns
Cbc0001I Search completed - best objective -21.21006000000001, took 12814 iterations and 214 nodes (1.57 seconds)
Cbc0032I Strong branching done 1590 times (24460 iterations), fathomed 29 nodes and fixed 105 variables
Cbc0035I Maximum depth 40, 921 variables fixed on reduced cost
Total time (CPU seconds):       1.52   (Wallclock seconds):       1.58

