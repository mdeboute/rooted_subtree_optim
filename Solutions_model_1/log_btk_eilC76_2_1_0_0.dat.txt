Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 65 (-13) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 1.56798e-05 - average 1.29586e-07, 12 fixed columns
Coin0506I Presolve 97 (-24) rows, 53 (-12) columns and 294 (-72) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 2.9092099 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Coin0511I After Postsolve, objective 71.8008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Coin0511I After Postsolve, objective 71.8008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.80079954 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 121 rows, 65 columns (64 integer (64 of which binary)) and 366 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.21521
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -27.2461 iterations 24
Cbc0038I Solution found of -27.2461
Cbc0038I Relaxing continuous gives -27.2461
Cbc0038I Rounding solution of -33.2427 is better than previous of -27.2461

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -33.2427 to -45.0084 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.6877
Cbc0038I Pass   2: suminf.    0.76538 (5) obj. -47.6877 iterations 5
Cbc0038I Pass   3: suminf.    0.76538 (5) obj. -47.6877 iterations 0
Cbc0038I Pass   4: suminf.    1.17308 (3) obj. -47.6877 iterations 11
Cbc0038I Pass   5: suminf.    0.60602 (2) obj. -47.6877 iterations 4
Cbc0038I Pass   6: suminf.    0.60602 (2) obj. -47.6877 iterations 0
Cbc0038I Pass   7: suminf.    0.59132 (2) obj. -47.6877 iterations 1
Cbc0038I Pass   8: suminf.    1.61867 (6) obj. -47.6877 iterations 6
Cbc0038I Pass   9: suminf.    0.85431 (5) obj. -47.6877 iterations 5
Cbc0038I Pass  10: suminf.    0.93551 (3) obj. -47.6877 iterations 7
Cbc0038I Pass  11: suminf.    0.93551 (3) obj. -47.6877 iterations 0
Cbc0038I Pass  12: suminf.    0.60602 (2) obj. -47.6877 iterations 4
Cbc0038I Pass  13: suminf.    0.59132 (2) obj. -47.6877 iterations 1
Cbc0038I Pass  14: suminf.    1.53189 (5) obj. -47.6877 iterations 7
Cbc0038I Pass  15: suminf.    1.16189 (5) obj. -47.6877 iterations 4
Cbc0038I Pass  16: suminf.    3.37750 (11) obj. -47.6877 iterations 12
Cbc0038I Pass  17: suminf.    2.55698 (9) obj. -47.6877 iterations 3
Cbc0038I Pass  18: suminf.    2.65613 (8) obj. -47.6877 iterations 13
Cbc0038I Pass  19: suminf.    1.71330 (5) obj. -47.6877 iterations 4
Cbc0038I Pass  20: suminf.    1.05239 (4) obj. -47.6877 iterations 8
Cbc0038I Pass  21: suminf.    1.05239 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  22: suminf.    1.32435 (4) obj. -47.6877 iterations 5
Cbc0038I Pass  23: suminf.    0.94823 (4) obj. -47.6877 iterations 1
Cbc0038I Pass  24: suminf.    0.94823 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  25: suminf.    1.36380 (4) obj. -47.6877 iterations 3
Cbc0038I Pass  26: suminf.    1.05239 (4) obj. -47.6877 iterations 2
Cbc0038I Pass  27: suminf.    1.05239 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  28: suminf.    1.32435 (4) obj. -47.6877 iterations 5
Cbc0038I Pass  29: suminf.    0.94823 (4) obj. -47.6877 iterations 1
Cbc0038I Pass  30: suminf.    0.94823 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  31: suminf.    1.36380 (4) obj. -47.6877 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -45.0084 to -45.3574 (0.04 seconds)
Cbc0038I Round again with cutoff of -52.5103
Cbc0038I Pass  31: suminf.    1.16401 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  32: suminf.    1.16401 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  33: suminf.    1.22438 (3) obj. -52.5103 iterations 11
Cbc0038I Pass  34: suminf.    0.56178 (2) obj. -52.5103 iterations 4
Cbc0038I Pass  35: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  36: suminf.    3.78683 (12) obj. -52.5103 iterations 17
Cbc0038I Pass  37: suminf.    1.37224 (7) obj. -52.5103 iterations 10
Cbc0038I Pass  38: suminf.    2.54475 (8) obj. -52.5103 iterations 12
Cbc0038I Pass  39: suminf.    1.13065 (6) obj. -52.5103 iterations 5
Cbc0038I Pass  40: suminf.    1.59696 (6) obj. -52.5103 iterations 3
Cbc0038I Pass  41: suminf.    1.13065 (6) obj. -52.5103 iterations 2
Cbc0038I Pass  42: suminf.    2.30233 (6) obj. -52.5103 iterations 5
Cbc0038I Pass  43: suminf.    2.13619 (9) obj. -52.5103 iterations 12
Cbc0038I Pass  44: suminf.    1.86609 (7) obj. -52.5103 iterations 9
Cbc0038I Pass  45: suminf.    1.02881 (4) obj. -52.5103 iterations 12
Cbc0038I Pass  46: suminf.    0.91399 (3) obj. -52.5103 iterations 4
Cbc0038I Pass  47: suminf.    1.30401 (3) obj. -52.5103 iterations 3
Cbc0038I Pass  48: suminf.    0.56178 (2) obj. -52.5103 iterations 2
Cbc0038I Pass  49: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  50: suminf.    0.56178 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  51: suminf.    2.28529 (9) obj. -52.5103 iterations 9
Cbc0038I Pass  52: suminf.    1.01761 (5) obj. -52.5103 iterations 5
Cbc0038I Pass  53: suminf.    1.01761 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  54: suminf.    1.04981 (4) obj. -52.5103 iterations 7
Cbc0038I Pass  55: suminf.    0.91399 (3) obj. -52.5103 iterations 4
Cbc0038I Pass  56: suminf.    1.30401 (3) obj. -52.5103 iterations 3
Cbc0038I Pass  57: suminf.    0.56178 (2) obj. -52.5103 iterations 2
Cbc0038I Pass  58: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  59: suminf.    0.56178 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  60: suminf.    2.60657 (11) obj. -52.5103 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -45.3574 - took 0.04 seconds
Cbc0012I Integer solution of -45.357387 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 65 columns, reduced to 39 rows 22 columns
Cbc0031I 10 added rows had average density of 40.8
Cbc0013I At root node, 10 cuts changed objective from -71.8008 to -55.112928 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1142 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 564 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -45.357387, took 2299 iterations and 12 nodes (0.29 seconds)
Cbc0032I Strong branching done 96 times (973 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 87 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.30

