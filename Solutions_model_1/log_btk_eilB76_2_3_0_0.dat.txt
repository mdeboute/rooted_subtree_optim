Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 70 (-8) columns and 384 (-69) elements
Clp1000I sum of infeasibilities 1.95311e-05 - average 1.55008e-07, 19 fixed columns
Coin0506I Presolve 88 (-38) rows, 50 (-20) columns and 270 (-114) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Coin0511I After Postsolve, objective 61.667225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Coin0511I After Postsolve, objective 61.667225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.66722484 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 70 columns (69 integer (69 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.895%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.99492
Cbc0038I Solution found of -7.41688
Cbc0038I Relaxing continuous gives -14.9786
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -14.9786 to -28.0491 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.3884
Cbc0038I Pass   1: suminf.    1.41969 (22) obj. -31.3884 iterations 32
Cbc0038I Pass   2: suminf.    1.26212 (5) obj. -31.3884 iterations 25
Cbc0038I Pass   3: suminf.    1.05666 (5) obj. -31.3884 iterations 6
Cbc0038I Pass   4: suminf.    0.87996 (3) obj. -31.3884 iterations 8
Cbc0038I Pass   5: suminf.    0.64352 (3) obj. -31.3884 iterations 3
Cbc0038I Pass   6: suminf.    1.32228 (5) obj. -31.3884 iterations 8
Cbc0038I Pass   7: suminf.    1.32228 (5) obj. -31.3884 iterations 0
Cbc0038I Pass   8: suminf.    1.14769 (3) obj. -31.3884 iterations 7
Cbc0038I Pass   9: suminf.    1.09817 (3) obj. -31.3884 iterations 3
Cbc0038I Pass  10: suminf.    2.01416 (6) obj. -31.3884 iterations 12
Cbc0038I Pass  11: suminf.    1.59689 (4) obj. -31.3884 iterations 13
Cbc0038I Pass  12: suminf.    1.36292 (5) obj. -31.3884 iterations 4
Cbc0038I Pass  13: suminf.    1.32228 (5) obj. -31.3884 iterations 2
Cbc0038I Pass  14: suminf.    1.14769 (3) obj. -31.3884 iterations 6
Cbc0038I Pass  15: suminf.    1.09817 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  16: suminf.    1.32228 (5) obj. -31.3884 iterations 7
Cbc0038I Pass  17: suminf.    1.29829 (7) obj. -31.3884 iterations 12
Cbc0038I Pass  18: suminf.    0.64352 (3) obj. -31.3884 iterations 10
Cbc0038I Pass  19: suminf.    1.87591 (5) obj. -31.3884 iterations 12
Cbc0038I Pass  20: suminf.    1.21844 (3) obj. -31.3884 iterations 11
Cbc0038I Pass  21: suminf.    1.02646 (3) obj. -31.3884 iterations 4
Cbc0038I Pass  22: suminf.    1.00198 (4) obj. -31.3884 iterations 1
Cbc0038I Pass  23: suminf.    1.09694 (3) obj. -31.3884 iterations 5
Cbc0038I Pass  24: suminf.    1.05082 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  25: suminf.    1.67020 (5) obj. -31.3884 iterations 4
Cbc0038I Pass  26: suminf.    1.32228 (5) obj. -31.3884 iterations 1
Cbc0038I Pass  27: suminf.    1.14769 (3) obj. -31.3884 iterations 6
Cbc0038I Pass  28: suminf.    1.09817 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  29: suminf.    1.32228 (5) obj. -31.3884 iterations 7
Cbc0038I Pass  30: suminf.    1.14218 (6) obj. -31.3884 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -28.0491 - took 0.05 seconds
Cbc0012I Integer solution of -28.04907 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 70 columns, reduced to 62 rows 36 columns
Cbc0031I 20 added rows had average density of 56.25
Cbc0013I At root node, 20 cuts changed objective from -61.441787 to -50.697987 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6320 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1235 row cuts average 68.9 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 8 nodes, 9 on tree, -28.04907 best solution, best possible -50.697987 (0.69 seconds)
Cbc0016I Integer solution of -29.60487 found by strong branching after 5794 iterations and 32 nodes (0.74 seconds)
Cbc0001I Search completed - best objective -29.60487, took 6170 iterations and 42 nodes (0.75 seconds)
Cbc0032I Strong branching done 510 times (8194 iterations), fathomed 2 nodes and fixed 26 variables
Cbc0035I Maximum depth 17, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.76

