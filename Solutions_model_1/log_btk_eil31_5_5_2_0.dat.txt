Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 5.15721e-07 - average 9.91772e-09, 6 fixed columns
Coin0506I Presolve 39 (-13) rows, 22 (-6) columns and 115 (-38) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Coin0511I After Postsolve, objective 83.254455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Coin0511I After Postsolve, objective 83.254455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.25445476 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.75937
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.4201 iterations 16
Cbc0038I Solution found of -20.4201
Cbc0038I Relaxing continuous gives -20.4201
Cbc0038I Rounding solution of -20.5213 is better than previous of -20.4201

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -20.5213 to -51.3896 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.7383
Cbc0038I Pass   2: suminf.    1.32259 (4) obj. -53.7383 iterations 5
Cbc0038I Pass   3: suminf.    0.41124 (2) obj. -53.7383 iterations 4
Cbc0038I Pass   4: suminf.    0.41124 (2) obj. -53.7383 iterations 0
Cbc0038I Pass   5: suminf.    0.19494 (2) obj. -53.7383 iterations 3
Cbc0038I Pass   6: suminf.    0.03750 (1) obj. -53.7383 iterations 1
Cbc0038I Pass   7: suminf.    1.74250 (6) obj. -53.7383 iterations 4
Cbc0038I Pass   8: suminf.    1.40727 (5) obj. -53.7383 iterations 4
Cbc0038I Pass   9: suminf.    1.12334 (4) obj. -53.7383 iterations 3
Cbc0038I Pass  10: suminf.    1.47586 (6) obj. -53.7383 iterations 5
Cbc0038I Pass  11: suminf.    1.40605 (8) obj. -53.7383 iterations 2
Cbc0038I Pass  12: suminf.    1.42793 (4) obj. -53.7383 iterations 13
Cbc0038I Pass  13: suminf.    0.86026 (3) obj. -53.7383 iterations 4
Cbc0038I Pass  14: suminf.    0.78165 (3) obj. -53.7383 iterations 3
Cbc0038I Pass  15: suminf.    0.11373 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  16: suminf.    0.02500 (1) obj. -53.7383 iterations 1
Cbc0038I Pass  17: suminf.    2.20487 (6) obj. -53.7383 iterations 5
Cbc0038I Pass  18: suminf.    1.10173 (3) obj. -53.7383 iterations 3
Cbc0038I Pass  19: suminf.    0.03750 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  20: suminf.    0.19494 (2) obj. -53.7383 iterations 1
Cbc0038I Pass  21: suminf.    0.98261 (4) obj. -53.7383 iterations 7
Cbc0038I Pass  22: suminf.    0.98261 (4) obj. -53.7383 iterations 1
Cbc0038I Pass  23: suminf.    0.80293 (5) obj. -53.7383 iterations 5
Cbc0038I Pass  24: suminf.    0.60617 (5) obj. -53.7383 iterations 2
Cbc0038I Pass  25: suminf.    1.05147 (4) obj. -53.7383 iterations 6
Cbc0038I Pass  26: suminf.    0.91900 (2) obj. -53.7383 iterations 4
Cbc0038I Pass  27: suminf.    0.02500 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  28: suminf.    0.11373 (1) obj. -53.7383 iterations 1
Cbc0038I Pass  29: suminf.    1.13953 (4) obj. -53.7383 iterations 3
Cbc0038I Pass  30: suminf.    0.92609 (3) obj. -53.7383 iterations 5
Cbc0038I Pass  31: suminf.    0.61602 (2) obj. -53.7383 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -51.3896 - took 0.02 seconds
Cbc0012I Integer solution of -51.3896 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0031I 8 added rows had average density of 20.5
Cbc0013I At root node, 8 cuts changed objective from -74.876173 to -63.685182 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 504 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -51.38959999999999, took 2292 iterations and 22 nodes (0.25 seconds)
Cbc0032I Strong branching done 176 times (1247 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.25

