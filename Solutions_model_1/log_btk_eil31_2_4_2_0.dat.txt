Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 22 (-11) columns and 110 (-73) elements
Clp1000I sum of infeasibilities 2.19234e-05 - average 5.92523e-07, 5 fixed columns
Coin0506I Presolve 27 (-10) rows, 17 (-5) columns and 81 (-29) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 2.0506687 - largest nonzero change 0 ( 0%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Coin0511I After Postsolve, objective 170.39371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Clp0000I Optimal - objective value 170.39371
Coin0511I After Postsolve, objective 170.39371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.3937145 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.25466
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -75.4046 iterations 14
Cbc0038I Solution found of -75.4046
Cbc0038I Relaxing continuous gives -75.4046
Cbc0038I Rounding solution of -86.9603 is better than previous of -75.4046

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -86.9603 to -115.409 (0.01 seconds)
Cbc0038I Round again with cutoff of -120.518
Cbc0038I Pass   2: suminf.    0.99577 (3) obj. -120.518 iterations 3
Cbc0038I Pass   3: suminf.    0.42650 (2) obj. -120.518 iterations 4
Cbc0038I Pass   4: suminf.    0.42650 (2) obj. -120.518 iterations 1
Cbc0038I Pass   5: suminf.    0.31579 (1) obj. -120.518 iterations 2
Cbc0038I Pass   6: suminf.    0.50906 (2) obj. -120.518 iterations 3
Cbc0038I Pass   7: suminf.    1.23501 (4) obj. -120.518 iterations 8
Cbc0038I Pass   8: suminf.    0.84724 (4) obj. -120.518 iterations 3
Cbc0038I Pass   9: suminf.    1.09105 (3) obj. -120.518 iterations 6
Cbc0038I Pass  10: suminf.    0.65604 (3) obj. -120.518 iterations 6
Cbc0038I Pass  11: suminf.    1.34213 (4) obj. -120.518 iterations 4
Cbc0038I Pass  12: suminf.    1.34213 (4) obj. -120.518 iterations 0
Cbc0038I Pass  13: suminf.    0.81444 (2) obj. -125.13 iterations 5
Cbc0038I Pass  14: suminf.    0.71609 (2) obj. -120.518 iterations 1
Cbc0038I Pass  15: suminf.    0.96091 (2) obj. -120.518 iterations 3
Cbc0038I Pass  16: suminf.    0.91142 (2) obj. -120.518 iterations 2
Cbc0038I Pass  17: suminf.    0.91142 (2) obj. -120.518 iterations 0
Cbc0038I Pass  18: suminf.    0.91235 (2) obj. -120.518 iterations 1
Cbc0038I Pass  19: suminf.    1.32608 (6) obj. -120.518 iterations 9
Cbc0038I Pass  20: suminf.    1.19418 (6) obj. -120.518 iterations 1
Cbc0038I Pass  21: suminf.    1.45899 (3) obj. -120.518 iterations 11
Cbc0038I Pass  22: suminf.    0.82414 (4) obj. -120.518 iterations 3
Cbc0038I Pass  23: suminf.    0.38742 (3) obj. -120.518 iterations 7
Cbc0038I Pass  24: suminf.    0.38742 (3) obj. -120.518 iterations 0
Cbc0038I Pass  25: suminf.    0.61993 (2) obj. -120.518 iterations 1
Cbc0038I Pass  26: suminf.    0.42105 (1) obj. -120.518 iterations 1
Cbc0038I Pass  27: suminf.    0.42579 (1) obj. -120.518 iterations 1
Cbc0038I Pass  28: suminf.    0.44824 (3) obj. -120.518 iterations 4
Cbc0038I Pass  29: suminf.    0.35892 (4) obj. -120.518 iterations 4
Cbc0038I Pass  30: suminf.    1.02476 (4) obj. -120.518 iterations 9
Cbc0038I Pass  31: suminf.    0.99577 (3) obj. -120.518 iterations 1
Cbc0038I Rounding solution of -133.595 is better than previous of -115.409

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -140.176
Cbc0038I Pass  31: suminf.    1.62612 (5) obj. -140.176 iterations 2
Cbc0038I Pass  32: suminf.    1.24812 (5) obj. -140.176 iterations 3
Cbc0038I Pass  33: suminf.    1.24359 (5) obj. -140.176 iterations 1
Cbc0038I Pass  34: suminf.    1.28923 (5) obj. -140.176 iterations 6
Cbc0038I Pass  35: suminf.    0.74416 (3) obj. -140.176 iterations 3
Cbc0038I Pass  36: suminf.    0.85686 (4) obj. -140.176 iterations 5
Cbc0038I Pass  37: suminf.    0.70334 (4) obj. -140.176 iterations 1
Cbc0038I Pass  38: suminf.    1.04521 (4) obj. -140.176 iterations 1
Cbc0038I Pass  39: suminf.    0.70334 (4) obj. -140.176 iterations 1
Cbc0038I Pass  40: suminf.    0.90576 (5) obj. -140.176 iterations 2
Cbc0038I Pass  41: suminf.    0.86414 (4) obj. -143.156 iterations 12
Cbc0038I Pass  42: suminf.    0.47012 (4) obj. -140.176 iterations 4
Cbc0038I Pass  43: suminf.    0.47682 (6) obj. -140.176 iterations 4
Cbc0038I Pass  44: suminf.    0.45095 (6) obj. -140.176 iterations 2
Cbc0038I Pass  45: suminf.    0.33899 (5) obj. -140.176 iterations 5
Cbc0038I Pass  46: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  47: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  48: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I Pass  49: suminf.    0.90073 (5) obj. -140.176 iterations 3
Cbc0038I Pass  50: suminf.    0.88342 (5) obj. -140.176 iterations 1
Cbc0038I Pass  51: suminf.    0.33899 (5) obj. -140.176 iterations 4
Cbc0038I Pass  52: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  53: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  54: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I Pass  55: suminf.    0.90073 (5) obj. -140.176 iterations 3
Cbc0038I Pass  56: suminf.    0.88342 (5) obj. -140.176 iterations 1
Cbc0038I Pass  57: suminf.    0.33899 (5) obj. -140.176 iterations 4
Cbc0038I Pass  58: suminf.    0.32798 (4) obj. -140.176 iterations 2
Cbc0038I Pass  59: suminf.    1.13214 (3) obj. -140.176 iterations 2
Cbc0038I Pass  60: suminf.    1.09605 (4) obj. -140.176 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -133.595 to -134.177 (0.03 seconds)
Cbc0038I Round again with cutoff of -148.073
Cbc0038I Pass  60: suminf.    1.89575 (5) obj. -148.073 iterations 0
Cbc0038I Pass  61: suminf.    1.76873 (5) obj. -148.073 iterations 3
Cbc0038I Pass  62: suminf.    1.75339 (6) obj. -148.073 iterations 1
Cbc0038I Pass  63: suminf.    1.53360 (5) obj. -148.073 iterations 3
Cbc0038I Pass  64: suminf.    1.48710 (5) obj. -148.073 iterations 3
Cbc0038I Pass  65: suminf.    2.29414 (7) obj. -148.073 iterations 8
Cbc0038I Pass  66: suminf.    1.77150 (6) obj. -148.073 iterations 4
Cbc0038I Pass  67: suminf.    1.70123 (6) obj. -148.073 iterations 1
Cbc0038I Pass  68: suminf.    1.49552 (5) obj. -148.073 iterations 7
Cbc0038I Pass  69: suminf.    1.49633 (6) obj. -148.073 iterations 1
Cbc0038I Pass  70: suminf.    1.73488 (6) obj. -148.073 iterations 4
Cbc0038I Pass  71: suminf.    1.47425 (5) obj. -148.073 iterations 1
Cbc0038I Pass  72: suminf.    1.75488 (4) obj. -151.036 iterations 5
Cbc0038I Pass  73: suminf.    1.46683 (5) obj. -148.073 iterations 2
Cbc0038I Pass  74: suminf.    1.54920 (5) obj. -148.073 iterations 4
Cbc0038I Pass  75: suminf.    1.22961 (5) obj. -148.073 iterations 2
Cbc0038I Pass  76: suminf.    1.31273 (5) obj. -148.073 iterations 4
Cbc0038I Pass  77: suminf.    1.27328 (6) obj. -148.073 iterations 2
Cbc0038I Pass  78: suminf.    1.54920 (5) obj. -148.073 iterations 4
Cbc0038I Pass  79: suminf.    2.76116 (8) obj. -148.073 iterations 13
Cbc0038I Pass  80: suminf.    1.48010 (5) obj. -148.073 iterations 9
Cbc0038I Pass  81: suminf.    1.92399 (5) obj. -148.073 iterations 5
Cbc0038I Pass  82: suminf.    1.70932 (5) obj. -148.073 iterations 2
Cbc0038I Pass  83: suminf.    2.02717 (5) obj. -148.073 iterations 2
Cbc0038I Pass  84: suminf.    1.37145 (7) obj. -148.073 iterations 13
Cbc0038I Pass  85: suminf.    1.05426 (6) obj. -148.073 iterations 1
Cbc0038I Pass  86: suminf.    1.49009 (5) obj. -148.073 iterations 13
Cbc0038I Pass  87: suminf.    1.48010 (5) obj. -148.073 iterations 2
Cbc0038I Pass  88: suminf.    1.92399 (5) obj. -148.073 iterations 5
Cbc0038I Pass  89: suminf.    1.70932 (5) obj. -148.073 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -134.177 - took 0.05 seconds
Cbc0012I Integer solution of -134.17686 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 22 rows 14 columns
Cbc0031I 10 added rows had average density of 18.1
Cbc0013I At root node, 10 cuts changed objective from -166.49927 to -144.57841 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 448 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 357 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -134.17686, took 1391 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 46 times (403 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.14

