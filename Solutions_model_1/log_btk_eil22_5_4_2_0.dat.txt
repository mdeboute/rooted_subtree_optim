Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 3.01641e-05 - average 8.37892e-07, 0 fixed columns
Coin0506I Presolve 36 (0) rows, 22 (0) columns and 108 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Coin0511I After Postsolve, objective 64.498719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Clp0000I Optimal - objective value 64.498719
Coin0511I After Postsolve, objective 64.498719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.49871871 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.1829
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.1141 iterations 18
Cbc0038I Solution found of 2.1141
Cbc0038I Relaxing continuous gives 2.1141
Cbc0038I Rounding solution of -17.2041 is better than previous of 2.1141

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -17.2041 to -28.2827 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.8727
Cbc0038I Pass   2: suminf.    1.59710 (5) obj. -31.8727 iterations 8
Cbc0038I Pass   3: suminf.    0.80903 (3) obj. -31.8727 iterations 6
Cbc0038I Pass   4: suminf.    0.74163 (2) obj. -31.8727 iterations 1
Cbc0038I Pass   5: suminf.    0.95037 (2) obj. -31.8727 iterations 2
Cbc0038I Pass   6: suminf.    0.70537 (2) obj. -31.8727 iterations 2
Cbc0038I Pass   7: suminf.    0.64178 (3) obj. -31.8727 iterations 4
Cbc0038I Pass   8: suminf.    0.32778 (1) obj. -31.8727 iterations 2
Cbc0038I Pass   9: suminf.    0.49678 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  10: suminf.    0.61090 (2) obj. -31.8727 iterations 8
Cbc0038I Pass  11: suminf.    0.61090 (2) obj. -31.8727 iterations 0
Cbc0038I Pass  12: suminf.    0.55251 (3) obj. -31.8727 iterations 6
Cbc0038I Pass  13: suminf.    0.48510 (2) obj. -31.8727 iterations 1
Cbc0038I Pass  14: suminf.    0.81363 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  15: suminf.    0.81363 (2) obj. -31.8727 iterations 0
Cbc0038I Pass  16: suminf.    2.15915 (5) obj. -31.8727 iterations 6
Cbc0038I Pass  17: suminf.    1.13317 (4) obj. -31.8727 iterations 3
Cbc0038I Pass  18: suminf.    1.03027 (4) obj. -31.8727 iterations 1
Cbc0038I Pass  19: suminf.    1.21685 (4) obj. -31.8727 iterations 7
Cbc0038I Pass  20: suminf.    0.55251 (3) obj. -31.8727 iterations 1
Cbc0038I Pass  21: suminf.    0.48510 (2) obj. -31.8727 iterations 1
Cbc0038I Pass  22: suminf.    0.81363 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  23: suminf.    1.19631 (4) obj. -31.8727 iterations 8
Cbc0038I Pass  24: suminf.    0.99170 (4) obj. -31.8727 iterations 1
Cbc0038I Pass  25: suminf.    0.60716 (3) obj. -31.8727 iterations 7
Cbc0038I Pass  26: suminf.    0.40364 (2) obj. -31.8727 iterations 3
Cbc0038I Pass  27: suminf.    0.50397 (4) obj. -31.8727 iterations 2
Cbc0038I Pass  28: suminf.    0.40364 (2) obj. -31.8727 iterations 2
Cbc0038I Pass  29: suminf.    0.79937 (3) obj. -31.8727 iterations 2
Cbc0038I Pass  30: suminf.    0.64190 (2) obj. -31.8727 iterations 4
Cbc0038I Pass  31: suminf.    0.92275 (2) obj. -31.8727 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.2827 - took 0.02 seconds
Cbc0012I Integer solution of -28.28265 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 18.333333
Cbc0013I At root node, 12 cuts changed objective from -64.182123 to -45.333465 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1845 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 841 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.28265000000002, took 2720 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 62 times (642 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

