Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 407 (-46) elements
Clp1000I sum of infeasibilities 0.000374533 - average 2.81604e-06, 63 fixed columns
Coin0506I Presolve 17 (-116) rows, 11 (-63) columns and 50 (-357) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Coin0511I After Postsolve, objective 3846.279, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30343977 - largest nonzero change 0 ( 0%) - largest zero change 2.7133081e-05
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Coin0511I After Postsolve, objective 3846.279, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3846.279021 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 74 columns (73 integer (73 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.74014
Cbc0038I Pass   1: suminf.    1.60262 (5) obj. -3711.85 iterations 16
Cbc0038I Pass   2: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Solution found of -2435.49
Cbc0038I Relaxing continuous gives -2440.37
Cbc0038I Rounding solution of -3311.84 is better than previous of -2440.37

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3311.84 to -3649.57 (0.01 seconds)
Cbc0038I Round again with cutoff of -3669.24
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Pass   4: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Pass   5: suminf.    0.42558 (1) obj. -3669.24 iterations 15
Cbc0038I Pass   6: suminf.    0.42558 (1) obj. -3669.24 iterations 0
Cbc0038I Pass   7: suminf.    0.29730 (1) obj. -3746.9 iterations 6
Cbc0038I Pass   8: suminf.    0.43053 (1) obj. -3669.24 iterations 1
Cbc0038I Pass   9: suminf.    2.57931 (8) obj. -3669.24 iterations 21
Cbc0038I Pass  10: suminf.    1.79749 (10) obj. -3669.24 iterations 12
Cbc0038I Pass  11: suminf.    1.46838 (4) obj. -3669.24 iterations 10
Cbc0038I Pass  12: suminf.    0.67650 (2) obj. -3669.24 iterations 11
Cbc0038I Pass  13: suminf.    0.38546 (2) obj. -3669.24 iterations 5
Cbc0038I Pass  14: suminf.    0.11800 (1) obj. -3669.24 iterations 7
Cbc0038I Pass  15: suminf.    0.11800 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  16: suminf.    0.40541 (1) obj. -3707.98 iterations 5
Cbc0038I Pass  17: suminf.    0.33893 (1) obj. -3669.24 iterations 1
Cbc0038I Pass  18: suminf.    0.55740 (6) obj. -3669.24 iterations 8
Cbc0038I Pass  19: suminf.    0.55740 (6) obj. -3669.24 iterations 4
Cbc0038I Pass  20: suminf.    3.93655 (9) obj. -3669.24 iterations 12
Cbc0038I Pass  21: suminf.    1.44584 (3) obj. -3669.24 iterations 12
Cbc0038I Pass  22: suminf.    1.44584 (3) obj. -3669.24 iterations 1
Cbc0038I Pass  23: suminf.    0.11800 (1) obj. -3669.24 iterations 6
Cbc0038I Pass  24: suminf.    0.11800 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  25: suminf.    0.40541 (1) obj. -3707.98 iterations 5
Cbc0038I Pass  26: suminf.    0.33893 (1) obj. -3669.24 iterations 1
Cbc0038I Pass  27: suminf.    2.31662 (10) obj. -3669.24 iterations 20
Cbc0038I Pass  28: suminf.    1.69915 (4) obj. -3673.31 iterations 12
Cbc0038I Pass  29: suminf.    1.13701 (4) obj. -3669.24 iterations 7
Cbc0038I Pass  30: suminf.    0.42558 (1) obj. -3669.24 iterations 9
Cbc0038I Pass  31: suminf.    0.42558 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  32: suminf.    0.29730 (1) obj. -3746.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -3649.57 to -3721.81 (0.03 seconds)
Cbc0038I Round again with cutoff of -3746.7
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.17380 (5) obj. -3746.7 iterations 3
Cbc0038I Pass  33: suminf.    0.86842 (3) obj. -3746.7 iterations 4
Cbc0038I Pass  34: suminf.    0.39710 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  35: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  36: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  37: suminf.    0.60793 (2) obj. -3746.7 iterations 14
Cbc0038I Pass  38: suminf.    0.48649 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  39: suminf.    0.45339 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  40: suminf.    1.23268 (10) obj. -3746.7 iterations 14
Cbc0038I Pass  41: suminf.    0.87204 (4) obj. -3746.7 iterations 9
Cbc0038I Pass  42: suminf.    0.39710 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  43: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  44: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  45: suminf.    1.42079 (7) obj. -3746.7 iterations 9
Cbc0038I Pass  46: suminf.    0.03636 (2) obj. -3746.7 iterations 8
Cbc0038I Pass  47: suminf.    0.03636 (2) obj. -3746.7 iterations 0
Cbc0038I Pass  48: suminf.    0.39710 (1) obj. -3746.7 iterations 8
Cbc0038I Pass  49: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  50: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  51: suminf.    1.48549 (5) obj. -3746.7 iterations 17
Cbc0038I Pass  52: suminf.    0.90303 (3) obj. -3746.7 iterations 8
Cbc0038I Pass  53: suminf.    0.39723 (3) obj. -3746.7 iterations 9
Cbc0038I Pass  54: suminf.    0.55106 (3) obj. -3746.7 iterations 8
Cbc0038I Pass  55: suminf.    0.40837 (3) obj. -3746.7 iterations 7
Cbc0038I Pass  56: suminf.    0.38631 (2) obj. -3746.7 iterations 5
Cbc0038I Pass  57: suminf.    0.38631 (2) obj. -3746.7 iterations 0
Cbc0038I Pass  58: suminf.    0.29730 (1) obj. -3746.7 iterations 3
Cbc0038I Pass  59: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  60: suminf.    1.14030 (4) obj. -3746.7 iterations 12
Cbc0038I Pass  61: suminf.    0.80951 (4) obj. -3746.7 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3721.81 - took 0.03 seconds
Cbc0012I Integer solution of -3721.808 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 133 rows 74 columns, reduced to 15 rows 12 columns
Cbc0031I 6 added rows had average density of 38
Cbc0013I At root node, 6 cuts changed objective from -3846.279 to -3801.902 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 3.8 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3721.808, took 462 iterations and 18 nodes (0.11 seconds)
Cbc0032I Strong branching done 128 times (719 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 113 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

