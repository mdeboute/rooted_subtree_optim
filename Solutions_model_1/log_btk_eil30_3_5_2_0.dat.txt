Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 29 (-3) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 5.47565e-05 - average 1.11748e-06, 4 fixed columns
Coin0506I Presolve 43 (-6) rows, 25 (-4) columns and 128 (-20) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Coin0511I After Postsolve, objective 66.593293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Coin0511I After Postsolve, objective 66.593293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.59329314 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 29 columns (28 integer (28 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.864%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.79749
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.3875 iterations 25
Cbc0038I Solution found of 5.3875
Cbc0038I Relaxing continuous gives 5.3875
Cbc0038I Rounding solution of 2.9125 is better than previous of 5.3875

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 39 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 2.9125 to -26.9062 (0.05 seconds)
Cbc0038I Round again with cutoff of -30.875
Cbc0038I Pass   2: suminf.    1.80996 (6) obj. -30.875 iterations 7
Cbc0038I Pass   3: suminf.    1.51333 (5) obj. -30.875 iterations 6
Cbc0038I Pass   4: suminf.    2.37725 (6) obj. -30.875 iterations 10
Cbc0038I Pass   5: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass   6: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass   7: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass   8: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass   9: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  10: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  11: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  12: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  13: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  14: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  15: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  16: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  17: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  18: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  19: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  20: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  21: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  22: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  23: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  24: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  25: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  26: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  27: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  28: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  29: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  30: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  31: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 39 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -26.9062 - took 0.09 seconds
Cbc0012I Integer solution of -26.9062 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 15 added rows had average density of 22.4
Cbc0013I At root node, 15 cuts changed objective from -66.593293 to -40.496546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2519 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1334 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 196 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.767 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.9062 best solution, best possible -40.496546 (1.65 seconds)
Cbc0001I Search completed - best objective -26.90620000000001, took 3292 iterations and 10 nodes (1.69 seconds)
Cbc0032I Strong branching done 146 times (1316 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.70

