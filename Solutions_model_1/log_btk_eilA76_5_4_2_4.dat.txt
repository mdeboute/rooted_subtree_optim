Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 74 (-4) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 1.4471e-05 - average 1.13945e-07, 12 fixed columns
Coin0506I Presolve 104 (-23) rows, 62 (-12) columns and 324 (-70) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Coin0511I After Postsolve, objective 47.523215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Coin0511I After Postsolve, objective 47.523215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.52321489 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 74 columns (73 integer (73 of which binary)) and 411 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.351%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.79905
Cbc0038I Solution found of 2.77311
Cbc0038I Relaxing continuous gives -6.53204
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 52 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -6.53204 to -15.3853 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.5992
Cbc0038I Pass   1: suminf.    1.72992 (20) obj. -18.5992 iterations 37
Cbc0038I Pass   2: suminf.    1.26650 (5) obj. -18.5992 iterations 19
Cbc0038I Pass   3: suminf.    0.76054 (5) obj. -18.5992 iterations 3
Cbc0038I Pass   4: suminf.    1.02794 (4) obj. -18.5992 iterations 6
Cbc0038I Pass   5: suminf.    1.89786 (5) obj. -18.5992 iterations 4
Cbc0038I Pass   6: suminf.    1.10968 (4) obj. -18.5992 iterations 3
Cbc0038I Pass   7: suminf.    1.30618 (4) obj. -18.5992 iterations 4
Cbc0038I Pass   8: suminf.    2.38793 (8) obj. -18.5992 iterations 10
Cbc0038I Pass   9: suminf.    1.81187 (7) obj. -18.5992 iterations 2
Cbc0038I Pass  10: suminf.    1.69339 (6) obj. -18.5992 iterations 12
Cbc0038I Pass  11: suminf.    1.69339 (6) obj. -18.5992 iterations 0
Cbc0038I Pass  12: suminf.    0.78972 (4) obj. -18.5992 iterations 10
Cbc0038I Pass  13: suminf.    0.78972 (4) obj. -18.5992 iterations 0
Cbc0038I Pass  14: suminf.    1.69339 (6) obj. -18.5992 iterations 5
Cbc0038I Pass  15: suminf.    1.37423 (7) obj. -18.5992 iterations 19
Cbc0038I Pass  16: suminf.    1.32315 (5) obj. -18.5992 iterations 4
Cbc0038I Pass  17: suminf.    1.06688 (4) obj. -18.5992 iterations 15
Cbc0038I Pass  18: suminf.    1.05539 (5) obj. -18.5992 iterations 1
Cbc0038I Pass  19: suminf.    1.22146 (4) obj. -18.5992 iterations 7
Cbc0038I Pass  20: suminf.    0.97010 (3) obj. -18.5992 iterations 4
Cbc0038I Pass  21: suminf.    0.88437 (3) obj. -18.5992 iterations 2
Cbc0038I Pass  22: suminf.    1.75973 (6) obj. -18.5992 iterations 24
Cbc0038I Pass  23: suminf.    1.75973 (6) obj. -18.5992 iterations 4
Cbc0038I Pass  24: suminf.    1.40417 (5) obj. -18.5992 iterations 21
Cbc0038I Pass  25: suminf.    1.22146 (4) obj. -18.5992 iterations 8
Cbc0038I Pass  26: suminf.    0.97010 (3) obj. -18.5992 iterations 4
Cbc0038I Pass  27: suminf.    0.88437 (3) obj. -18.5992 iterations 2
Cbc0038I Pass  28: suminf.    3.53474 (10) obj. -18.5992 iterations 18
Cbc0038I Pass  29: suminf.    2.90243 (10) obj. -18.5992 iterations 4
Cbc0038I Pass  30: suminf.    1.22146 (4) obj. -18.5992 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 77 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -15.3853 to -15.6087 (0.11 seconds)
Cbc0038I Round again with cutoff of -24.384
Cbc0038I Pass  30: suminf.    2.55921 (20) obj. -24.384 iterations 0
Cbc0038I Pass  31: suminf.    1.40836 (5) obj. -24.384 iterations 22
Cbc0038I Pass  32: suminf.    1.40836 (5) obj. -24.384 iterations 1
Cbc0038I Pass  33: suminf.    2.35422 (6) obj. -24.384 iterations 8
Cbc0038I Pass  34: suminf.    1.21688 (4) obj. -24.384 iterations 3
Cbc0038I Pass  35: suminf.    0.97869 (4) obj. -24.384 iterations 2
Cbc0038I Pass  36: suminf.    1.83637 (7) obj. -24.384 iterations 10
Cbc0038I Pass  37: suminf.    1.16068 (5) obj. -24.384 iterations 8
Cbc0038I Pass  38: suminf.    2.35946 (10) obj. -24.384 iterations 8
Cbc0038I Pass  39: suminf.    2.35946 (10) obj. -24.384 iterations 0
Cbc0038I Pass  40: suminf.    1.23704 (6) obj. -24.384 iterations 13
Cbc0038I Pass  41: suminf.    0.84562 (4) obj. -24.384 iterations 2
Cbc0038I Pass  42: suminf.    1.43659 (5) obj. -24.384 iterations 6
Cbc0038I Pass  43: suminf.    1.02319 (4) obj. -24.384 iterations 3
Cbc0038I Pass  44: suminf.    0.95390 (4) obj. -24.384 iterations 4
Cbc0038I Pass  45: suminf.    2.16993 (7) obj. -24.384 iterations 14
Cbc0038I Pass  46: suminf.    2.07276 (9) obj. -24.384 iterations 5
Cbc0038I Pass  47: suminf.    2.06629 (5) obj. -24.384 iterations 12
Cbc0038I Pass  48: suminf.    2.06629 (5) obj. -24.384 iterations 0
Cbc0038I Pass  49: suminf.    1.78309 (6) obj. -24.384 iterations 4
Cbc0038I Pass  50: suminf.    2.58116 (6) obj. -24.384 iterations 4
Cbc0038I Pass  51: suminf.    1.15396 (5) obj. -24.384 iterations 4
Cbc0038I Pass  52: suminf.    0.97650 (5) obj. -24.384 iterations 2
Cbc0038I Pass  53: suminf.    1.85677 (6) obj. -24.384 iterations 7
Cbc0038I Pass  54: suminf.    1.63371 (5) obj. -24.384 iterations 2
Cbc0038I Pass  55: suminf.    2.45727 (8) obj. -24.384 iterations 12
Cbc0038I Pass  56: suminf.    2.03436 (7) obj. -24.384 iterations 9
Cbc0038I Pass  57: suminf.    1.92538 (7) obj. -24.384 iterations 3
Cbc0038I Pass  58: suminf.    1.73476 (5) obj. -24.384 iterations 7
Cbc0038I Pass  59: suminf.    1.73476 (5) obj. -24.384 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -15.6087 - took 0.13 seconds
Cbc0012I Integer solution of -15.60873 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 55 rows 36 columns
Cbc0031I 21 added rows had average density of 57.380952
Cbc0013I At root node, 21 cuts changed objective from -47.523215 to -39.041537 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8571 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1315 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.60873 best solution, best possible -39.041537 (0.78 seconds)
Cbc0016I Integer solution of -15.71598 found by strong branching after 5846 iterations and 27 nodes (0.87 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 5 rows 8 columns
Cbc0038I Full problem 127 rows 74 columns, reduced to 54 rows 33 columns
Cbc0012I Integer solution of -16.00027 found by RINS after 7388 iterations and 91 nodes (1.13 seconds)
Cbc0001I Search completed - best objective -16.00027, took 9939 iterations and 186 nodes (1.33 seconds)
Cbc0032I Strong branching done 1438 times (17515 iterations), fathomed 18 nodes and fixed 89 variables
Cbc0035I Maximum depth 31, 748 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.34

