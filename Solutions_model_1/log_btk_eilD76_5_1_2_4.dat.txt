Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 0.000180495 - average 1.30793e-06, 10 fixed columns
Coin0506I Presolve 116 (-22) rows, 65 (-11) columns and 354 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 3.0010913 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 55.551486
Clp0000I Optimal - objective value 55.551486
Coin0511I After Postsolve, objective 55.551486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.551486
Clp0000I Optimal - objective value 55.551486
Clp0000I Optimal - objective value 55.551486
Coin0511I After Postsolve, objective 55.551486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.55148593 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.0885
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.59356 iterations 55
Cbc0038I Solution found of 6.59356
Cbc0038I Relaxing continuous gives 6.59356
Cbc0038I Rounding solution of -20.5674 is better than previous of 6.59356

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -20.5674 to -28.6061 (0.06 seconds)
Cbc0038I Round again with cutoff of -31.3007
Cbc0038I Pass   2: suminf.    4.91193 (14) obj. -31.3007 iterations 19
Cbc0038I Pass   3: suminf.    2.79253 (8) obj. -31.3007 iterations 8
Cbc0038I Pass   4: suminf.    1.70737 (5) obj. -31.3007 iterations 7
Cbc0038I Pass   5: suminf.    1.70737 (5) obj. -31.3007 iterations 0
Cbc0038I Pass   6: suminf.    1.67308 (5) obj. -31.3007 iterations 6
Cbc0038I Pass   7: suminf.    1.65701 (5) obj. -31.3007 iterations 1
Cbc0038I Pass   8: suminf.    1.87482 (6) obj. -31.3007 iterations 7
Cbc0038I Pass   9: suminf.    1.13634 (6) obj. -31.3007 iterations 4
Cbc0038I Pass  10: suminf.    2.79253 (8) obj. -31.3007 iterations 8
Cbc0038I Pass  11: suminf.    1.70737 (5) obj. -31.3007 iterations 7
Cbc0038I Pass  12: suminf.    1.70737 (5) obj. -31.3007 iterations 0
Cbc0038I Pass  13: suminf.    1.67308 (5) obj. -31.3007 iterations 6
Cbc0038I Pass  14: suminf.    1.65701 (5) obj. -31.3007 iterations 1
Cbc0038I Pass  15: suminf.    1.87482 (6) obj. -31.3007 iterations 7
Cbc0038I Pass  16: suminf.    1.13634 (6) obj. -31.3007 iterations 4
Cbc0038I Pass  17: suminf.    2.79253 (8) obj. -31.3007 iterations 8
Cbc0038I Pass  18: suminf.    1.70737 (5) obj. -31.3007 iterations 7
Cbc0038I Pass  19: suminf.    1.70737 (5) obj. -31.3007 iterations 0
Cbc0038I Pass  20: suminf.    1.67308 (5) obj. -31.3007 iterations 6
Cbc0038I Pass  21: suminf.    1.65701 (5) obj. -31.3007 iterations 1
Cbc0038I Pass  22: suminf.    1.87482 (6) obj. -31.3007 iterations 7
Cbc0038I Pass  23: suminf.    1.13634 (6) obj. -31.3007 iterations 4
Cbc0038I Pass  24: suminf.    2.79253 (8) obj. -31.3007 iterations 8
Cbc0038I Pass  25: suminf.    1.70737 (5) obj. -31.3007 iterations 7
Cbc0038I Pass  26: suminf.    1.70737 (5) obj. -31.3007 iterations 0
Cbc0038I Pass  27: suminf.    1.67308 (5) obj. -31.3007 iterations 6
Cbc0038I Pass  28: suminf.    1.65701 (5) obj. -31.3007 iterations 1
Cbc0038I Pass  29: suminf.    1.87482 (6) obj. -31.3007 iterations 7
Cbc0038I Pass  30: suminf.    1.13634 (6) obj. -31.3007 iterations 4
Cbc0038I Pass  31: suminf.    2.79253 (8) obj. -31.3007 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -28.6061 - took 0.08 seconds
Cbc0012I Integer solution of -28.60609 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 43 columns
Cbc0031I 33 added rows had average density of 38.727273
Cbc0013I At root node, 33 cuts changed objective from -55.551486 to -47.57525 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13018 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2352 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.60609 best solution, best possible -47.57525 (0.97 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 13 rows 13 columns
Cbc0038I Full problem 138 rows 76 columns, reduced to 2 rows 2 columns
Cbc0001I Search completed - best objective -28.60608999999999, took 10841 iterations and 104 nodes (1.34 seconds)
Cbc0032I Strong branching done 1028 times (19100 iterations), fathomed 10 nodes and fixed 40 variables
Cbc0035I Maximum depth 33, 323 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       1.35

