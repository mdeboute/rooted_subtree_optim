Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-11) rows, 51 (-2) columns and 282 (-21) elements
Clp1000I sum of infeasibilities 1.08841e-05 - average 1.15788e-07, 1 fixed columns
Coin0506I Presolve 92 (-2) rows, 50 (-1) columns and 276 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Coin0511I After Postsolve, objective 37.91556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Coin0511I After Postsolve, objective 37.91556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.91556009 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 51 columns (50 integer (50 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.22051
Cbc0038I Solution found of 2.14814
Cbc0038I Relaxing continuous gives 0.23471
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 0.23471 to -5.35356 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.60985
Cbc0038I Pass   1: suminf.    1.16927 (8) obj. -8.60985 iterations 36
Cbc0038I Pass   2: suminf.    1.85185 (7) obj. -8.60985 iterations 9
Cbc0038I Pass   3: suminf.    1.39913 (7) obj. -8.60985 iterations 2
Cbc0038I Pass   4: suminf.    1.34864 (5) obj. -8.60985 iterations 11
Cbc0038I Pass   5: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass   6: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass   7: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass   8: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass   9: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  10: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  11: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  12: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  13: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  14: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  15: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  16: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  17: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  18: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  19: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  20: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  21: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  22: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  23: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  24: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  25: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  26: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  27: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  28: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  29: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  30: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -5.35356 - took 0.08 seconds
Cbc0012I Integer solution of -5.35356 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0031I 28 added rows had average density of 35.821429
Cbc0013I At root node, 28 cuts changed objective from -37.91556 to -27.115235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11143 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2044 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 215 row cuts average 45.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.35356 best solution, best possible -27.115235 (0.71 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 15 rows 15 columns
Cbc0012I Integer solution of -6.11771 found by RINS after 8721 iterations and 41 nodes (0.92 seconds)
Cbc0001I Search completed - best objective -6.117710000000002, took 9207 iterations and 50 nodes (0.94 seconds)
Cbc0032I Strong branching done 626 times (10896 iterations), fathomed 4 nodes and fixed 29 variables
Cbc0035I Maximum depth 15, 116 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.95

