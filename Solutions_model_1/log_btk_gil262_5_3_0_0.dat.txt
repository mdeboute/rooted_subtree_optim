Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 488 (-39) rows, 251 (-13) columns and 1455 (-90) elements
Clp1000I sum of infeasibilities 8.74408e-05 - average 1.79182e-07, 200 fixed columns
Coin0506I Presolve 94 (-394) rows, 51 (-200) columns and 278 (-1177) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Coin0511I After Postsolve, objective 524.35467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13484167 - largest nonzero change 0 ( 0%) - largest zero change 2.9783652e-05
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Coin0511I After Postsolve, objective 524.35467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 524.354671 - 0 iterations time 0.082, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 488 rows, 251 columns (250 integer (250 of which binary)) and 1455 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.385%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.9056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -260.779 iterations 82
Cbc0038I Solution found of -260.779
Cbc0038I Relaxing continuous gives -260.779
Cbc0038I Rounding solution of -355.412 is better than previous of -260.779

Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 88 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -355.412 to -394.374 (0.12 seconds)
Cbc0038I Round again with cutoff of -407.372
Cbc0038I Pass   2: suminf.    1.26282 (14) obj. -407.372 iterations 51
Cbc0038I Pass   3: suminf.    1.26282 (14) obj. -407.372 iterations 0
Cbc0038I Pass   4: suminf.    3.02800 (13) obj. -407.372 iterations 44
Cbc0038I Pass   5: suminf.    2.18160 (8) obj. -407.372 iterations 17
Cbc0038I Pass   6: suminf.    3.68874 (13) obj. -407.372 iterations 35
Cbc0038I Pass   7: suminf.    3.03487 (9) obj. -407.372 iterations 28
Cbc0038I Pass   8: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass   9: suminf.    2.47332 (7) obj. -407.372 iterations 13
Cbc0038I Pass  10: suminf.    1.26206 (7) obj. -407.372 iterations 22
Cbc0038I Pass  11: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  12: suminf.    3.68874 (13) obj. -407.372 iterations 37
Cbc0038I Pass  13: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  14: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass  15: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  16: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  17: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  18: suminf.    3.68874 (13) obj. -407.372 iterations 37
Cbc0038I Pass  19: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  20: suminf.    2.90077 (7) obj. -407.372 iterations 40
Cbc0038I Pass  21: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  22: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  23: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  24: suminf.    3.68874 (13) obj. -407.372 iterations 36
Cbc0038I Pass  25: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  26: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass  27: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  28: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  29: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  30: suminf.    3.68874 (13) obj. -407.372 iterations 36
Cbc0038I Pass  31: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 97 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -394.374 to -401.427 (0.29 seconds)
Cbc0038I Round again with cutoff of -430.769
Cbc0038I Pass  31: suminf.    1.98915 (14) obj. -430.769 iterations 12
Cbc0038I Pass  32: suminf.    1.98915 (14) obj. -430.769 iterations 0
Cbc0038I Pass  33: suminf.    5.22611 (14) obj. -430.769 iterations 45
Cbc0038I Pass  34: suminf.    2.96674 (13) obj. -430.769 iterations 29
Cbc0038I Pass  35: suminf.    2.95924 (13) obj. -430.769 iterations 1
Cbc0038I Pass  36: suminf.    3.49479 (21) obj. -430.769 iterations 63
Cbc0038I Pass  37: suminf.    3.33256 (12) obj. -430.769 iterations 8
Cbc0038I Pass  38: suminf.    4.06723 (10) obj. -430.769 iterations 44
Cbc0038I Pass  39: suminf.    3.05634 (16) obj. -430.769 iterations 42
Cbc0038I Pass  40: suminf.    2.52921 (9) obj. -430.769 iterations 10
Cbc0038I Pass  41: suminf.    2.52921 (9) obj. -430.769 iterations 0
Cbc0038I Pass  42: suminf.    3.19031 (9) obj. -430.769 iterations 37
Cbc0038I Pass  43: suminf.    2.75942 (10) obj. -430.769 iterations 32
Cbc0038I Pass  44: suminf.    3.71802 (11) obj. -430.769 iterations 52
Cbc0038I Pass  45: suminf.    3.54657 (13) obj. -430.769 iterations 30
Cbc0038I Pass  46: suminf.    2.16370 (11) obj. -430.769 iterations 36
Cbc0038I Pass  47: suminf.    1.98915 (14) obj. -430.769 iterations 16
Cbc0038I Pass  48: suminf.    5.22611 (14) obj. -430.769 iterations 48
Cbc0038I Pass  49: suminf.    2.96674 (13) obj. -430.769 iterations 30
Cbc0038I Pass  50: suminf.    2.95924 (13) obj. -430.769 iterations 1
Cbc0038I Pass  51: suminf.    3.49479 (21) obj. -430.769 iterations 64
Cbc0038I Pass  52: suminf.    3.33256 (12) obj. -430.769 iterations 8
Cbc0038I Pass  53: suminf.    4.06723 (10) obj. -430.769 iterations 44
Cbc0038I Pass  54: suminf.    3.05634 (16) obj. -430.769 iterations 42
Cbc0038I Pass  55: suminf.    2.52921 (9) obj. -430.769 iterations 10
Cbc0038I Pass  56: suminf.    2.52921 (9) obj. -430.769 iterations 0
Cbc0038I Pass  57: suminf.    3.19031 (9) obj. -430.769 iterations 37
Cbc0038I Pass  58: suminf.    2.75942 (10) obj. -430.769 iterations 32
Cbc0038I Pass  59: suminf.    3.71802 (11) obj. -430.769 iterations 52
Cbc0038I Pass  60: suminf.    3.54657 (13) obj. -430.769 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 97 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of -401.427 - took 0.41 seconds
Cbc0012I Integer solution of -401.42675 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 488 rows 251 columns, reduced to 90 rows 49 columns
Cbc0031I 15 added rows had average density of 147.86667
Cbc0013I At root node, 15 cuts changed objective from -524.35467 to -487.30478 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6686 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.720 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1009 row cuts average 242.9 elements, 0 column cuts (0 active)  in 0.367 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.263 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 241.0 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -401.42675 best solution, best possible -487.30448 (3.65 seconds)
Cbc0010I After 5 nodes, 6 on tree, -401.42675 best solution, best possible -487.30448 (4.40 seconds)
Cbc0012I Integer solution of -415.22745 found by rounding after 5976 iterations and 33 nodes (4.86 seconds)
Cbc0001I Search completed - best objective -415.22745, took 6778 iterations and 50 nodes (5.01 seconds)
Cbc0032I Strong branching done 662 times (16405 iterations), fathomed 6 nodes and fixed 32 variables
Cbc0035I Maximum depth 20, 667 variables fixed on reduced cost
Total time (CPU seconds):       4.75   (Wallclock seconds):       5.06

