Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 329 (-15) rows, 166 (-7) columns and 821 (-33) elements
Clp1000I sum of infeasibilities 0.163149 - average 0.000495893, 39 fixed columns
Coin0506I Presolve 249 (-80) rows, 127 (-39) columns and 622 (-199) elements
Clp0029I End of values pass after 127 iterations
Clp0014I Perturbing problem by 0.001% of 0.17826427 - largest nonzero change 0 ( 0%) - largest zero change 2.3711855e-05
Clp0000I Optimal - objective value 31614.336
Clp0000I Optimal - objective value 31614.336
Coin0511I After Postsolve, objective 31614.336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.17121339 - largest nonzero change 2.1373729e-05 ( 0.0021373729%) - largest zero change 2.9675387e-05
Clp0000I Optimal - objective value 31614.336
Clp0000I Optimal - objective value 31614.336
Clp0000I Optimal - objective value 31614.336
Coin0511I After Postsolve, objective 31614.336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31614.33627 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 329 rows, 166 columns (165 integer (165 of which binary)) and 821 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.593%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 126 integers unsatisfied sum - 29.4038
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 546.515 iterations 113
Cbc0038I Solution found of 546.515
Cbc0038I Relaxing continuous gives 546.515
Cbc0038I Rounding solution of -2223.26 is better than previous of 546.515

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 329 rows 166 columns, reduced to 249 rows 127 columns - 1 fixed gives 247, 126 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -5162.37
Cbc0038I Pass   2: suminf.    2.71341 (40) obj. -5162.37 iterations 25
Cbc0038I Pass   3: suminf.    3.83455 (10) obj. -5162.37 iterations 54
Cbc0038I Pass   4: suminf.    3.35860 (11) obj. -5162.37 iterations 7
Cbc0038I Pass   5: suminf.    3.04278 (31) obj. -5162.37 iterations 2
Cbc0038I Pass   6: suminf.    3.03496 (31) obj. -5162.37 iterations 3
Cbc0038I Pass   7: suminf.    3.01536 (10) obj. -5162.37 iterations 29
Cbc0038I Pass   8: suminf.    3.01536 (10) obj. -5162.37 iterations 0
Cbc0038I Pass   9: suminf.    4.82729 (10) obj. -5162.37 iterations 10
Cbc0038I Pass  10: suminf.    2.09234 (9) obj. -5162.37 iterations 21
Cbc0038I Pass  11: suminf.    3.31654 (12) obj. -5162.37 iterations 20
Cbc0038I Pass  12: suminf.    2.69889 (12) obj. -5162.37 iterations 9
Cbc0038I Pass  13: suminf.    5.27213 (12) obj. -5162.37 iterations 17
Cbc0038I Pass  14: suminf.    9.44985 (26) obj. -5162.37 iterations 47
Cbc0038I Pass  15: suminf.    1.12362 (17) obj. -5162.37 iterations 33
Cbc0038I Pass  16: suminf.    1.12362 (17) obj. -5162.37 iterations 0
Cbc0038I Pass  17: suminf.    2.25929 (8) obj. -5162.37 iterations 32
Cbc0038I Pass  18: suminf.    2.25929 (8) obj. -5162.37 iterations 0
Cbc0038I Pass  19: suminf.    2.27466 (8) obj. -5162.37 iterations 17
Cbc0038I Pass  20: suminf.    2.83479 (10) obj. -5162.37 iterations 14
Cbc0038I Pass  21: suminf.    1.17967 (16) obj. -5162.37 iterations 12
Cbc0038I Pass  22: suminf.    1.17967 (16) obj. -5162.37 iterations 0
Cbc0038I Pass  23: suminf.    2.52187 (8) obj. -5162.37 iterations 30
Cbc0038I Pass  24: suminf.    2.42014 (8) obj. -5162.37 iterations 2
Cbc0038I Pass  25: suminf.    2.45712 (11) obj. -5162.37 iterations 11
Cbc0038I Pass  26: suminf.    2.17014 (8) obj. -5162.37 iterations 2
Cbc0038I Pass  27: suminf.    2.73968 (8) obj. -5162.37 iterations 4
Cbc0038I Pass  28: suminf.    1.88119 (16) obj. -5162.37 iterations 15
Cbc0038I Pass  29: suminf.    2.41217 (8) obj. -5162.37 iterations 33
Cbc0038I Pass  30: suminf.    2.30654 (8) obj. -5162.37 iterations 2
Cbc0038I Pass  31: suminf.    2.45712 (11) obj. -5162.37 iterations 11
Cbc0038I Rounding solution of -2836.24 is better than previous of -2223.26

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 329 rows 166 columns, reduced to 251 rows 128 columns - 1 fixed gives 239, 124 - still too large
Cbc0038I Full problem 329 rows 166 columns, reduced to 239 rows 124 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -10452.8
Cbc0038I Pass  31: suminf.    5.82684 (53) obj. -10452.8 iterations 8
Cbc0038I Pass  32: suminf.    3.95279 (30) obj. -10452.8 iterations 39
Cbc0038I Pass  33: suminf.    3.95279 (30) obj. -10452.8 iterations 0
Cbc0038I Pass  34: suminf.    5.32350 (25) obj. -10452.8 iterations 15
Cbc0038I Pass  35: suminf.    4.72195 (33) obj. -10452.8 iterations 9
Cbc0038I Pass  36: suminf.    5.23089 (23) obj. -10452.8 iterations 28
Cbc0038I Pass  37: suminf.    3.36585 (12) obj. -10452.8 iterations 13
Cbc0038I Pass  38: suminf.    2.58179 (15) obj. -10452.8 iterations 31
Cbc0038I Pass  39: suminf.    2.55532 (14) obj. -10452.8 iterations 2
Cbc0038I Pass  40: suminf.    2.88899 (8) obj. -10452.8 iterations 24
Cbc0038I Pass  41: suminf.    2.79254 (8) obj. -10452.8 iterations 2
Cbc0038I Pass  42: suminf.    2.91568 (11) obj. -10452.8 iterations 11
Cbc0038I Pass  43: suminf.    2.80457 (12) obj. -10452.8 iterations 5
Cbc0038I Pass  44: suminf.    4.02803 (12) obj. -10452.8 iterations 16
Cbc0038I Pass  45: suminf.    2.88899 (8) obj. -10452.8 iterations 11
Cbc0038I Pass  46: suminf.    2.79254 (8) obj. -10452.8 iterations 2
Cbc0038I Pass  47: suminf.    2.91568 (11) obj. -10452.8 iterations 11
Cbc0038I Pass  48: suminf.    2.80457 (12) obj. -10452.8 iterations 5
Cbc0038I Pass  49: suminf.    4.02803 (12) obj. -10452.8 iterations 16
Cbc0038I Pass  50: suminf.    2.88899 (8) obj. -10452.8 iterations 11
Cbc0038I Pass  51: suminf.    2.79254 (8) obj. -10452.8 iterations 2
Cbc0038I Pass  52: suminf.    2.91568 (11) obj. -10452.8 iterations 11
Cbc0038I Pass  53: suminf.    2.80457 (12) obj. -10452.8 iterations 5
Cbc0038I Pass  54: suminf.    4.02803 (12) obj. -10452.8 iterations 16
Cbc0038I Pass  55: suminf.    2.88899 (8) obj. -10452.8 iterations 11
Cbc0038I Pass  56: suminf.    2.79254 (8) obj. -10452.8 iterations 2
Cbc0038I Pass  57: suminf.    2.91568 (11) obj. -10452.8 iterations 11
Cbc0038I Pass  58: suminf.    2.80457 (12) obj. -10452.8 iterations 5
Cbc0038I Pass  59: suminf.    3.72512 (11) obj. -10452.8 iterations 13
Cbc0038I Pass  60: suminf.    2.88899 (8) obj. -10452.8 iterations 10
Cbc0038I Rounding solution of -11362.1 is better than previous of -2836.24

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 329 rows 166 columns, reduced to 249 rows 127 columns - 0 fixed gives 249, 127 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -17437.8
Cbc0038I Pass  60: suminf.    9.60339 (54) obj. -17437.8 iterations 12
Cbc0038I Pass  61: suminf.    8.69794 (51) obj. -17437.8 iterations 6
Cbc0038I Pass  62: suminf.    6.15621 (31) obj. -17437.8 iterations 35
Cbc0038I Pass  63: suminf.    5.92697 (31) obj. -17437.8 iterations 3
Cbc0038I Pass  64: suminf.    4.12010 (19) obj. -17437.8 iterations 35
Cbc0038I Pass  65: suminf.    3.14126 (12) obj. -17437.8 iterations 8
Cbc0038I Pass  66: suminf.    5.13750 (12) obj. -17437.8 iterations 17
Cbc0038I Pass  67: suminf.    3.79477 (11) obj. -17437.8 iterations 8
Cbc0038I Pass  68: suminf.    4.91825 (13) obj. -17437.8 iterations 33
Cbc0038I Pass  69: suminf.    4.02555 (15) obj. -17437.8 iterations 9
Cbc0038I Pass  70: suminf.    4.02555 (15) obj. -17437.8 iterations 0
Cbc0038I Pass  71: suminf.    4.09401 (14) obj. -17437.8 iterations 28
Cbc0038I Pass  72: suminf.    4.07489 (13) obj. -17437.8 iterations 6
Cbc0038I Pass  73: suminf.    3.93152 (11) obj. -17437.8 iterations 23
Cbc0038I Pass  74: suminf.    3.63531 (13) obj. -17437.8 iterations 9
Cbc0038I Pass  75: suminf.    4.17776 (12) obj. -17437.8 iterations 20
Cbc0038I Pass  76: suminf.    3.79477 (11) obj. -17437.8 iterations 5
Cbc0038I Pass  77: suminf.    4.91825 (13) obj. -17437.8 iterations 33
Cbc0038I Pass  78: suminf.    4.02555 (15) obj. -17437.8 iterations 9
Cbc0038I Pass  79: suminf.    4.02555 (15) obj. -17437.8 iterations 0
Cbc0038I Pass  80: suminf.    3.49707 (10) obj. -17437.8 iterations 19
Cbc0038I Pass  81: suminf.    2.96734 (11) obj. -17437.8 iterations 7
Cbc0038I Pass  82: suminf.    4.91939 (11) obj. -17437.8 iterations 20
Cbc0038I Pass  83: suminf.    3.64207 (15) obj. -17437.8 iterations 12
Cbc0038I Pass  84: suminf.    3.63531 (13) obj. -17437.8 iterations 2
Cbc0038I Pass  85: suminf.    4.17776 (12) obj. -17437.8 iterations 20
Cbc0038I Pass  86: suminf.    3.79477 (11) obj. -17437.8 iterations 5
Cbc0038I Pass  87: suminf.    4.91825 (13) obj. -17437.8 iterations 33
Cbc0038I Pass  88: suminf.    4.02555 (15) obj. -17437.8 iterations 9
Cbc0038I Pass  89: suminf.    4.02555 (15) obj. -17437.8 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 329 rows 166 columns, reduced to 249 rows 127 columns - 0 fixed gives 249, 127 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -11362.1 - took 0.09 seconds
Cbc0012I Integer solution of -11987.113 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 329 rows 166 columns, reduced to 256 rows 131 columns - 4 fixed gives 244, 127 - still too large
Cbc0038I Full problem 329 rows 166 columns, reduced to 244 rows 127 columns - too large
Cbc0031I 20 added rows had average density of 91.55
Cbc0013I At root node, 20 cuts changed objective from -31614.336 to -26305.807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 38627 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.384 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1910 row cuts average 159.3 elements, 0 column cuts (0 active)  in 0.236 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 106 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 128.8 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11987.113 best solution, best possible -26305.807 (2.82 seconds)
Cbc0012I Integer solution of -12119.831 found by DiveCoefficient after 9963 iterations and 1 nodes (3.08 seconds)
Cbc0012I Integer solution of -12387.738 found by DiveCoefficient after 10246 iterations and 10 nodes (3.40 seconds)
Cbc0012I Integer solution of -16396.972 found by rounding after 10609 iterations and 17 nodes (3.46 seconds)
Cbc0010I After 22 nodes, 15 on tree, -16396.972 best solution, best possible -26305.807 (3.52 seconds)
Cbc0012I Integer solution of -16777.591 found by rounding after 11364 iterations and 30 nodes (3.58 seconds)
Cbc0012I Integer solution of -17290.139 found by rounding after 11486 iterations and 33 nodes (3.59 seconds)
Cbc0038I Full problem 329 rows 166 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -18298 found by rounding after 12018 iterations and 62 nodes (3.67 seconds)
Cbc0012I Integer solution of -18691.274 found by rounding after 13429 iterations and 91 nodes (3.80 seconds)
Cbc0038I Full problem 329 rows 166 columns, reduced to 2 rows 3 columns
Cbc0016I Integer solution of -18717.646 found by strong branching after 13825 iterations and 119 nodes (3.91 seconds)
Cbc0012I Integer solution of -18755.277 found by rounding after 14042 iterations and 135 nodes (3.97 seconds)
Cbc0012I Integer solution of -18929.398 found by rounding after 14082 iterations and 137 nodes (3.98 seconds)
Cbc0004I Integer solution of -19246.792 found after 14496 iterations and 152 nodes (4.02 seconds)
Cbc0001I Search completed - best objective -19246.7916, took 14496 iterations and 152 nodes (4.02 seconds)
Cbc0032I Strong branching done 1112 times (25775 iterations), fathomed 31 nodes and fixed 24 variables
Cbc0035I Maximum depth 21, 483 variables fixed on reduced cost
Total time (CPU seconds):       3.96   (Wallclock seconds):       4.06

