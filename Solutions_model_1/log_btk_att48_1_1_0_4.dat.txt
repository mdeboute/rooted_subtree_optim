Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-32) rows, 37 (-13) columns and 168 (-117) elements
Clp1000I sum of infeasibilities 1.06202e-07 - average 1.58511e-09, 25 fixed columns
Coin0506I Presolve 15 (-52) rows, 12 (-25) columns and 39 (-129) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 17373.788
Clp0000I Optimal - objective value 17373.788
Coin0511I After Postsolve, objective 17373.788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3513541 - largest nonzero change 0 ( 0%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 17373.788
Clp0000I Optimal - objective value 17373.788
Clp0000I Optimal - objective value 17373.788
Coin0511I After Postsolve, objective 17373.788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17373.7877 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 67 rows, 37 columns (36 integer (36 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.378%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14160.3 iterations 23
Cbc0038I Solution found of -14160.3
Cbc0038I Relaxing continuous gives -14160.3
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 15 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -14160.3 to -16389.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -16487.5
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.00000 (9) obj. -16487.5 iterations 11
Cbc0038I Pass   3: suminf.    1.00000 (9) obj. -16487.5 iterations 0
Cbc0038I Pass   4: suminf.    1.94246 (9) obj. -16487.5 iterations 14
Cbc0038I Pass   5: suminf.    1.48741 (5) obj. -16487.5 iterations 4
Cbc0038I Pass   6: suminf.    0.98665 (5) obj. -16487.5 iterations 17
Cbc0038I Pass   7: suminf.    0.14033 (2) obj. -16487.5 iterations 10
Cbc0038I Pass   8: suminf.    1.00000 (6) obj. -16487.5 iterations 15
Cbc0038I Pass   9: suminf.    2.07944 (9) obj. -16487.5 iterations 12
Cbc0038I Pass  10: suminf.    1.57954 (5) obj. -16487.5 iterations 3
Cbc0038I Pass  11: suminf.    1.48741 (5) obj. -16487.5 iterations 7
Cbc0038I Pass  12: suminf.    0.98665 (5) obj. -16487.5 iterations 14
Cbc0038I Pass  13: suminf.    0.14033 (2) obj. -16487.5 iterations 7
Cbc0038I Pass  14: suminf.    1.00000 (6) obj. -16487.5 iterations 12
Cbc0038I Pass  15: suminf.    0.63949 (7) obj. -16487.5 iterations 5
Cbc0038I Pass  16: suminf.    0.48805 (4) obj. -16487.5 iterations 9
Cbc0038I Pass  17: suminf.    1.48741 (5) obj. -16487.5 iterations 7
Cbc0038I Pass  18: suminf.    0.98665 (5) obj. -16487.5 iterations 14
Cbc0038I Pass  19: suminf.    0.14033 (2) obj. -16487.5 iterations 8
Cbc0038I Pass  20: suminf.    1.00000 (6) obj. -16487.5 iterations 11
Cbc0038I Pass  21: suminf.    2.00000 (9) obj. -16487.5 iterations 6
Cbc0038I Pass  22: suminf.    0.98665 (5) obj. -16487.5 iterations 8
Cbc0038I Pass  23: suminf.    2.01398 (8) obj. -16487.5 iterations 12
Cbc0038I Pass  24: suminf.    2.56007 (12) obj. -16487.5 iterations 6
Cbc0038I Pass  25: suminf.    0.69083 (5) obj. -16487.5 iterations 11
Cbc0038I Pass  26: suminf.    0.69083 (5) obj. -16487.5 iterations 0
Cbc0038I Pass  27: suminf.    0.98665 (5) obj. -16487.5 iterations 15
Cbc0038I Pass  28: suminf.    0.14033 (2) obj. -16487.5 iterations 8
Cbc0038I Pass  29: suminf.    1.00000 (6) obj. -16487.5 iterations 11
Cbc0038I Pass  30: suminf.    0.98665 (5) obj. -16487.5 iterations 5
Cbc0038I Pass  31: suminf.    3.55192 (13) obj. -16487.5 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 34 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -16389.1 to -16463.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -16664.8
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.00000 (9) obj. -16664.8 iterations 3
Cbc0038I Pass  32: suminf.    1.00000 (9) obj. -16664.8 iterations 0
Cbc0038I Pass  33: suminf.    2.12218 (9) obj. -16664.8 iterations 12
Cbc0038I Pass  34: suminf.    1.66713 (5) obj. -16664.8 iterations 4
Cbc0038I Pass  35: suminf.    0.77536 (9) obj. -16664.8 iterations 14
Cbc0038I Pass  36: suminf.    0.47665 (5) obj. -16664.8 iterations 6
Cbc0038I Pass  37: suminf.    1.66713 (5) obj. -16664.8 iterations 12
Cbc0038I Pass  38: suminf.    2.00000 (10) obj. -16664.8 iterations 15
Cbc0038I Pass  39: suminf.    1.00000 (9) obj. -16664.8 iterations 8
Cbc0038I Pass  40: suminf.    1.00000 (9) obj. -16664.8 iterations 0
Cbc0038I Pass  41: suminf.    2.12218 (9) obj. -16664.8 iterations 11
Cbc0038I Pass  42: suminf.    1.66713 (5) obj. -16664.8 iterations 4
Cbc0038I Pass  43: suminf.    0.77536 (9) obj. -16664.8 iterations 15
Cbc0038I Pass  44: suminf.    0.47665 (5) obj. -16664.8 iterations 5
Cbc0038I Pass  45: suminf.    1.66713 (5) obj. -16664.8 iterations 11
Cbc0038I Pass  46: suminf.    1.13082 (9) obj. -16664.8 iterations 12
Cbc0038I Pass  47: suminf.    1.08161 (9) obj. -16664.8 iterations 4
Cbc0038I Pass  48: suminf.    1.85276 (7) obj. -16664.8 iterations 7
Cbc0038I Pass  49: suminf.    1.66713 (5) obj. -16664.8 iterations 3
Cbc0038I Pass  50: suminf.    0.77536 (9) obj. -16664.8 iterations 14
Cbc0038I Pass  51: suminf.    0.47665 (5) obj. -16664.8 iterations 5
Cbc0038I Pass  52: suminf.    1.66713 (5) obj. -16664.8 iterations 11
Cbc0038I Pass  53: suminf.    1.92203 (8) obj. -16664.8 iterations 12
Cbc0038I Pass  54: suminf.    1.84434 (9) obj. -16664.8 iterations 3
Cbc0038I Pass  55: suminf.    1.66713 (5) obj. -16664.8 iterations 13
Cbc0038I Pass  56: suminf.    1.66713 (5) obj. -16664.8 iterations 0
Cbc0038I Pass  57: suminf.    0.77536 (9) obj. -16664.8 iterations 15
Cbc0038I Pass  58: suminf.    0.47665 (5) obj. -16664.8 iterations 6
Cbc0038I Pass  59: suminf.    1.66713 (5) obj. -16664.8 iterations 13
Cbc0038I Pass  60: suminf.    4.19708 (13) obj. -16664.8 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 37 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16463.1 - took 0.02 seconds
Cbc0012I Integer solution of -16463.086 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 67 rows 37 columns, reduced to 18 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from -17373.788 to -16463.086 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 91 row cuts average 3.3 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16463.086, took 53 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

