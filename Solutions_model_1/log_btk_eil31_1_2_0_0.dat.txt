Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-18) rows, 28 (-5) columns and 142 (-41) elements
Clp1000I sum of infeasibilities 5.43323e-05 - average 1.15601e-06, 0 fixed columns
Coin0506I Presolve 47 (0) rows, 28 (0) columns and 142 (0) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Coin0511I After Postsolve, objective 51.419144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Clp0000I Optimal - objective value 51.419144
Coin0511I After Postsolve, objective 51.419144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.41914369 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.574%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.31158
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.5 iterations 16
Cbc0038I Solution found of -14.5
Cbc0038I Relaxing continuous gives -14.5
Cbc0038I Rounding solution of -22 is better than previous of -14.5

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -22 to -29 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.4315
Cbc0038I Pass   2: suminf.    0.80992 (3) obj. -31.4315 iterations 5
Cbc0038I Pass   3: suminf.    0.56210 (2) obj. -31.4315 iterations 1
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -35.1951 iterations 5
Cbc0038I Pass   5: suminf.    0.28105 (1) obj. -31.4315 iterations 1
Cbc0038I Pass   6: suminf.    0.82282 (5) obj. -31.4315 iterations 9
Cbc0038I Pass   7: suminf.    0.56843 (2) obj. -31.4315 iterations 4
Cbc0038I Pass   8: suminf.    0.56714 (2) obj. -31.4315 iterations 4
Cbc0038I Pass   9: suminf.    0.21068 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  10: suminf.    0.98072 (3) obj. -31.4315 iterations 3
Cbc0038I Pass  11: suminf.    0.91116 (3) obj. -31.4315 iterations 3
Cbc0038I Pass  12: suminf.    0.38791 (2) obj. -34.157 iterations 5
Cbc0038I Pass  13: suminf.    1.28771 (4) obj. -31.4315 iterations 7
Cbc0038I Pass  14: suminf.    0.48279 (2) obj. -31.4315 iterations 4
Cbc0038I Pass  15: suminf.    0.81765 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  16: suminf.    1.84117 (7) obj. -31.4315 iterations 11
Cbc0038I Pass  17: suminf.    1.38827 (5) obj. -31.4315 iterations 4
Cbc0038I Pass  18: suminf.    0.51508 (2) obj. -31.4315 iterations 5
Cbc0038I Pass  19: suminf.    0.45500 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  20: suminf.    0.86259 (5) obj. -31.4315 iterations 6
Cbc0038I Pass  21: suminf.    0.51875 (2) obj. -31.4315 iterations 6
Cbc0038I Pass  22: suminf.    0.09447 (1) obj. -31.4315 iterations 3
Cbc0038I Pass  23: suminf.    0.07778 (1) obj. -31.4315 iterations 2
Cbc0038I Pass  24: suminf.    0.93216 (4) obj. -31.4315 iterations 6
Cbc0038I Pass  25: suminf.    0.72381 (2) obj. -31.4315 iterations 6
Cbc0038I Pass  26: suminf.    0.07778 (1) obj. -31.4315 iterations 3
Cbc0038I Pass  27: suminf.    0.72381 (2) obj. -31.4315 iterations 2
Cbc0038I Pass  28: suminf.    0.48001 (4) obj. -31.4315 iterations 6
Cbc0038I Pass  29: suminf.    0.31679 (2) obj. -31.4315 iterations 4
Cbc0038I Pass  30: suminf.    0.40650 (1) obj. -31.4315 iterations 2
Cbc0038I Pass  31: suminf.    0.28105 (1) obj. -31.4315 iterations 1
Cbc0038I Rounding solution of -30 is better than previous of -29

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -35.3583
Cbc0038I Pass  31: suminf.    1.07171 (3) obj. -35.3583 iterations 0
Cbc0038I Pass  32: suminf.    0.82388 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  33: suminf.    0.42082 (2) obj. -35.3583 iterations 5
Cbc0038I Pass  34: suminf.    0.41874 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  35: suminf.    0.86701 (3) obj. -35.3583 iterations 4
Cbc0038I Pass  36: suminf.    0.71456 (3) obj. -35.3583 iterations 3
Cbc0038I Pass  37: suminf.    1.32850 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  38: suminf.    0.27642 (1) obj. -35.3583 iterations 2
Cbc0038I Pass  39: suminf.    0.30472 (1) obj. -35.3583 iterations 1
Cbc0038I Pass  40: suminf.    0.95709 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  41: suminf.    0.68381 (2) obj. -35.3583 iterations 3
Cbc0038I Pass  42: suminf.    0.82137 (2) obj. -35.3583 iterations 2
Cbc0038I Pass  43: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  44: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  45: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  46: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  47: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  48: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  49: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  50: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  51: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  52: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  53: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  54: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  55: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I Pass  56: suminf.    0.50870 (3) obj. -35.3583 iterations 2
Cbc0038I Pass  57: suminf.    0.82137 (2) obj. -35.3583 iterations 4
Cbc0038I Pass  58: suminf.    0.68269 (2) obj. -35.3583 iterations 1
Cbc0038I Pass  59: suminf.    1.13555 (3) obj. -35.3583 iterations 5
Cbc0038I Pass  60: suminf.    0.50870 (3) obj. -35.3583 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 28 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30 - took 0.05 seconds
Cbc0012I Integer solution of -30 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 46 rows 28 columns, reduced to 31 rows 18 columns
Cbc0031I 11 added rows had average density of 20.272727
Cbc0013I At root node, 11 cuts changed objective from -51.065486 to -41.527252 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1330 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 677 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30, took 2433 iterations and 14 nodes (0.22 seconds)
Cbc0032I Strong branching done 128 times (1029 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.22

