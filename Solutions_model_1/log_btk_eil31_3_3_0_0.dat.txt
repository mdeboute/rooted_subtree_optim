Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 23 (-10) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 6.8676e-07 - average 1.7169e-08, 16 fixed columns
Coin0506I Presolve 11 (-29) rows, 7 (-16) columns and 29 (-89) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2548.2376
Clp0000I Optimal - objective value 2548.2376
Coin0511I After Postsolve, objective 2548.2376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1110835 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2548.2376
Clp0000I Optimal - objective value 2548.2376
Clp0000I Optimal - objective value 2548.2376
Coin0511I After Postsolve, objective 2548.2376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2548.237564 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 23 columns (22 integer (22 of which binary)) and 119 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.57538
Cbc0038I Pass   1: suminf.    0.13333 (1) obj. -1442.64 iterations 7
Cbc0038I Solution found of -1016.94
Cbc0038I Relaxing continuous gives -1016.94
Cbc0038I Rounding solution of -1258.75 is better than previous of -1016.94

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -1258.75 to -1419.95 (0.01 seconds)
Cbc0038I Round again with cutoff of -1464.18
Cbc0038I Pass   2: suminf.    0.16078 (2) obj. -1464.18 iterations 2
Cbc0038I Pass   3: suminf.    0.41250 (1) obj. -1702.86 iterations 5
Cbc0038I Pass   4: suminf.    0.30273 (1) obj. -1464.18 iterations 4
Cbc0038I Pass   5: suminf.    0.49474 (1) obj. -1747.85 iterations 3
Cbc0038I Pass   6: suminf.    0.67229 (2) obj. -1464.18 iterations 6
Cbc0038I Pass   7: suminf.    0.30820 (1) obj. -1464.18 iterations 2
Cbc0038I Pass   8: suminf.    0.35556 (1) obj. -1532.83 iterations 1
Cbc0038I Pass   9: suminf.    0.41250 (1) obj. -1702.86 iterations 6
Cbc0038I Pass  10: suminf.    0.41250 (1) obj. -1702.86 iterations 0
Cbc0038I Pass  11: suminf.    0.30273 (1) obj. -1464.18 iterations 3
Cbc0038I Pass  12: suminf.    0.49474 (1) obj. -1747.85 iterations 2
Cbc0038I Pass  13: suminf.    0.21286 (2) obj. -1464.18 iterations 2
Cbc0038I Pass  14: suminf.    0.16078 (2) obj. -1464.18 iterations 1
Cbc0038I Pass  15: suminf.    0.16078 (2) obj. -1464.18 iterations 1
Cbc0038I Pass  16: suminf.    0.16078 (2) obj. -1464.18 iterations 1
Cbc0038I Pass  17: suminf.    0.41250 (1) obj. -1702.86 iterations 4
Cbc0038I Pass  18: suminf.    0.30273 (1) obj. -1464.18 iterations 3
Cbc0038I Pass  19: suminf.    0.49474 (1) obj. -1747.85 iterations 2
Cbc0038I Pass  20: suminf.    2.72172 (8) obj. -1464.18 iterations 7
Cbc0038I Pass  21: suminf.    0.32088 (2) obj. -1464.18 iterations 10
Cbc0038I Pass  22: suminf.    0.15658 (1) obj. -1464.18 iterations 1
Cbc0038I Pass  23: suminf.    0.25556 (1) obj. -1607.65 iterations 1
Cbc0038I Pass  24: suminf.    0.32088 (2) obj. -1464.18 iterations 3
Cbc0038I Pass  25: suminf.    1.21486 (3) obj. -1464.18 iterations 8
Cbc0038I Pass  26: suminf.    0.39301 (2) obj. -1464.18 iterations 2
Cbc0038I Pass  27: suminf.    0.27778 (1) obj. -1547.05 iterations 3
Cbc0038I Pass  28: suminf.    0.22061 (1) obj. -1464.18 iterations 1
Cbc0038I Pass  29: suminf.    1.46099 (6) obj. -1464.18 iterations 13
Cbc0038I Pass  30: suminf.    1.17949 (3) obj. -1464.18 iterations 4
Cbc0038I Pass  31: suminf.    0.42847 (1) obj. -1464.18 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 17 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -1419.95 to -1481.19 (0.02 seconds)
Cbc0038I Round again with cutoff of -1557.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27957 (2) obj. -1557.4 iterations 0
Cbc0038I Pass  32: suminf.    0.41250 (1) obj. -1702.86 iterations 4
Cbc0038I Pass  33: suminf.    0.36582 (1) obj. -1557.4 iterations 4
Cbc0038I Pass  34: suminf.    0.49474 (1) obj. -1747.85 iterations 3
Cbc0038I Pass  35: suminf.    0.49474 (1) obj. -1747.85 iterations 0
Cbc0038I Pass  36: suminf.    0.27444 (2) obj. -1705.97 iterations 4
Cbc0038I Pass  37: suminf.    0.09482 (1) obj. -1557.4 iterations 4
Cbc0038I Pass  38: suminf.    0.18889 (1) obj. -1693.76 iterations 1
Cbc0038I Pass  39: suminf.    0.42778 (2) obj. -1664.87 iterations 6
Cbc0038I Pass  40: suminf.    0.29854 (1) obj. -1557.4 iterations 4
Cbc0038I Pass  41: suminf.    0.36667 (1) obj. -1656.15 iterations 1
Cbc0038I Pass  42: suminf.    0.14922 (2) obj. -1557.4 iterations 5
Cbc0038I Pass  43: suminf.    0.06667 (1) obj. -1574.76 iterations 4
Cbc0038I Pass  44: suminf.    0.07864 (1) obj. -1557.4 iterations 1
Cbc0038I Pass  45: suminf.    0.53897 (2) obj. -1557.4 iterations 5
Cbc0038I Pass  46: suminf.    0.34444 (1) obj. -1574.22 iterations 5
Cbc0038I Pass  47: suminf.    0.35605 (1) obj. -1557.4 iterations 1
Cbc0038I Pass  48: suminf.    0.53897 (2) obj. -1557.4 iterations 2
Cbc0038I Pass  49: suminf.    0.22222 (1) obj. -1573.4 iterations 7
Cbc0038I Pass  50: suminf.    0.22222 (1) obj. -1573.4 iterations 1
Cbc0038I Pass  51: suminf.    0.28492 (1) obj. -1557.4 iterations 4
Cbc0038I Pass  52: suminf.    0.38889 (1) obj. -1708.12 iterations 1
Cbc0038I Pass  53: suminf.    0.43750 (1) obj. -1655.18 iterations 1
Cbc0038I Pass  54: suminf.    0.57169 (2) obj. -1557.4 iterations 7
Cbc0038I Pass  55: suminf.    0.53667 (2) obj. -1614.23 iterations 3
Cbc0038I Pass  56: suminf.    0.49746 (2) obj. -1557.4 iterations 1
Cbc0038I Pass  57: suminf.    0.60711 (2) obj. -1557.4 iterations 3
Cbc0038I Pass  58: suminf.    0.57169 (2) obj. -1557.4 iterations 1
Cbc0038I Pass  59: suminf.    0.82118 (2) obj. -1557.4 iterations 8
Cbc0038I Pass  60: suminf.    0.82118 (2) obj. -1557.4 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1481.19 to -1625.83 (0.03 seconds)
Cbc0038I Round again with cutoff of -1696.76
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.45716 (2) obj. -1696.76 iterations 0
Cbc0038I Pass  61: suminf.    0.41250 (1) obj. -1702.86 iterations 5
Cbc0038I Pass  62: suminf.    0.46015 (1) obj. -1696.76 iterations 4
Cbc0038I Pass  63: suminf.    0.49474 (1) obj. -1747.85 iterations 3
Cbc0038I Pass  64: suminf.    0.86163 (3) obj. -1696.76 iterations 4
Cbc0038I Pass  65: suminf.    0.86163 (3) obj. -1696.76 iterations 0
Cbc0038I Pass  66: suminf.    0.41250 (1) obj. -1702.86 iterations 5
Cbc0038I Pass  67: suminf.    0.41250 (1) obj. -1702.86 iterations 0
Cbc0038I Pass  68: suminf.    0.46015 (1) obj. -1696.76 iterations 4
Cbc0038I Pass  69: suminf.    0.49474 (1) obj. -1747.85 iterations 3
Cbc0038I Pass  70: suminf.    1.17710 (3) obj. -1696.76 iterations 7
Cbc0038I Pass  71: suminf.    0.53706 (3) obj. -1696.76 iterations 5
Cbc0038I Pass  72: suminf.    0.45048 (2) obj. -1696.76 iterations 5
Cbc0038I Pass  73: suminf.    0.33333 (1) obj. -1710.26 iterations 4
Cbc0038I Pass  74: suminf.    0.34264 (1) obj. -1696.76 iterations 1
Cbc0038I Pass  75: suminf.    0.37500 (1) obj. -1701.96 iterations 6
Cbc0038I Pass  76: suminf.    0.37500 (1) obj. -1701.96 iterations 0
Cbc0038I Pass  77: suminf.    0.49980 (1) obj. -1696.76 iterations 2
Cbc0038I Pass  78: suminf.    0.44444 (1) obj. -1777.59 iterations 1
Cbc0038I Pass  79: suminf.    0.76815 (3) obj. -1696.76 iterations 3
Cbc0038I Pass  80: suminf.    0.76815 (3) obj. -1696.76 iterations 0
Cbc0038I Pass  81: suminf.    0.45837 (3) obj. -1696.76 iterations 2
Cbc0038I Pass  82: suminf.    0.45837 (3) obj. -1696.76 iterations 0
Cbc0038I Pass  83: suminf.    0.31148 (1) obj. -1696.76 iterations 5
Cbc0038I Pass  84: suminf.    0.24444 (1) obj. -1793.94 iterations 1
Cbc0038I Pass  85: suminf.    0.24444 (1) obj. -1793.54 iterations 2
Cbc0038I Pass  86: suminf.    0.24444 (1) obj. -1793.54 iterations 1
Cbc0038I Pass  87: suminf.    0.31121 (1) obj. -1696.76 iterations 1
Cbc0038I Pass  88: suminf.    1.17603 (3) obj. -1696.76 iterations 3
Cbc0038I Pass  89: suminf.    1.02092 (3) obj. -1696.76 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -1625.83 to -1718.8 (0.04 seconds)
Cbc0038I Round again with cutoff of -1761.84
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 5
Cbc0038I Pass  89: suminf.    0.54009 (2) obj. -1761.84 iterations 0
Cbc0038I Pass  90: suminf.    0.88045 (2) obj. -1761.84 iterations 4
Cbc0038I Pass  91: suminf.    0.58336 (2) obj. -1761.84 iterations 3
Cbc0038I Pass  92: suminf.    0.60054 (2) obj. -1761.84 iterations 4
Cbc0038I Pass  93: suminf.    1.12319 (4) obj. -1761.84 iterations 6
Cbc0038I Pass  94: suminf.    0.39679 (2) obj. -1761.84 iterations 3
Cbc0038I Pass  95: suminf.    0.46189 (1) obj. -1761.84 iterations 3
Cbc0038I Pass  96: suminf.    0.48750 (1) obj. -1820.93 iterations 1
Cbc0038I Pass  97: suminf.    0.48750 (1) obj. -1820.93 iterations 1
Cbc0038I Pass  98: suminf.    0.48750 (1) obj. -1820.93 iterations 1
Cbc0038I Pass  99: suminf.    0.64647 (2) obj. -1761.84 iterations 3
Cbc0038I Pass 100: suminf.    0.37168 (1) obj. -1761.84 iterations 5
Cbc0038I Pass 101: suminf.    0.40000 (1) obj. -1802.89 iterations 1
Cbc0038I Pass 102: suminf.    0.77695 (3) obj. -1761.84 iterations 6
Cbc0038I Pass 103: suminf.    0.77695 (3) obj. -1761.84 iterations 1
Cbc0038I Pass 104: suminf.    0.53562 (2) obj. -1761.84 iterations 10
Cbc0038I Pass 105: suminf.    0.26659 (1) obj. -1761.84 iterations 3
Cbc0038I Pass 106: suminf.    0.24444 (1) obj. -1793.94 iterations 1
Cbc0038I Pass 107: suminf.    0.82483 (3) obj. -1761.84 iterations 6
Cbc0038I Pass 108: suminf.    0.40125 (2) obj. -1761.84 iterations 3
Cbc0038I Pass 109: suminf.    0.80117 (2) obj. -1761.84 iterations 3
Cbc0038I Pass 110: suminf.    0.45739 (1) obj. -1761.84 iterations 2
Cbc0038I Pass 111: suminf.    0.47778 (1) obj. -1791.4 iterations 1
Cbc0038I Pass 112: suminf.    0.64505 (2) obj. -1761.84 iterations 6
Cbc0038I Pass 113: suminf.    0.44444 (1) obj. -1777.18 iterations 4
Cbc0038I Pass 114: suminf.    0.45503 (1) obj. -1761.84 iterations 1
Cbc0038I Pass 115: suminf.    1.40911 (3) obj. -1761.84 iterations 6
Cbc0038I Pass 116: suminf.    1.29746 (3) obj. -1761.84 iterations 2
Cbc0038I Pass 117: suminf.    1.44400 (3) obj. -1761.84 iterations 2
Cbc0038I Pass 118: suminf.    0.32295 (1) obj. -1761.84 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 23 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1718.8 - took 0.04 seconds
Cbc0012I Integer solution of -1718.8021 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 23 columns, reduced to 20 rows 12 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 2.75
Cbc0013I At root node, 4 cuts changed objective from -1862.2667 to -1770.1387 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.5 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1718.8021, took 15 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

