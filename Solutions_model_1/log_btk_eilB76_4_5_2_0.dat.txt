Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 1.77554e-05 - average 1.44353e-07, 10 fixed columns
Coin0506I Presolve 103 (-20) rows, 58 (-10) columns and 315 (-59) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 0.34609985 - largest nonzero change 0 ( 0%) - largest zero change 2.971114e-05
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Coin0511I After Postsolve, objective 54.499189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Coin0511I After Postsolve, objective 54.499189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.49918879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 68 columns (67 integer (67 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.64853
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.8147 iterations 33
Cbc0038I Solution found of -0.8147
Cbc0038I Relaxing continuous gives -0.8147
Cbc0038I Rounding solution of -28.809 is better than previous of -0.8147

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -31.2828
Cbc0038I Pass   2: suminf.    1.29513 (6) obj. -31.2828 iterations 6
Cbc0038I Pass   3: suminf.    0.98916 (5) obj. -31.2828 iterations 1
Cbc0038I Pass   4: suminf.    0.98916 (5) obj. -31.2828 iterations 0
Cbc0038I Pass   5: suminf.    0.90510 (4) obj. -31.2828 iterations 8
Cbc0038I Pass   6: suminf.    0.44293 (2) obj. -31.2828 iterations 4
Cbc0038I Pass   7: suminf.    0.44293 (2) obj. -31.2828 iterations 0
Cbc0038I Pass   8: suminf.    0.65665 (2) obj. -31.2828 iterations 2
Cbc0038I Pass   9: suminf.    2.01415 (10) obj. -31.2828 iterations 18
Cbc0038I Pass  10: suminf.    1.27540 (8) obj. -31.2828 iterations 11
Cbc0038I Pass  11: suminf.    0.90510 (4) obj. -31.2828 iterations 13
Cbc0038I Pass  12: suminf.    0.44293 (2) obj. -31.2828 iterations 4
Cbc0038I Pass  13: suminf.    0.44293 (2) obj. -31.2828 iterations 0
Cbc0038I Pass  14: suminf.    0.65665 (2) obj. -31.2828 iterations 2
Cbc0038I Pass  15: suminf.    1.19451 (6) obj. -31.2828 iterations 9
Cbc0038I Pass  16: suminf.    0.68434 (3) obj. -31.2828 iterations 5
Cbc0038I Pass  17: suminf.    0.78648 (2) obj. -31.2828 iterations 5
Cbc0038I Pass  18: suminf.    0.65130 (2) obj. -31.2828 iterations 1
Cbc0038I Pass  19: suminf.    0.65130 (2) obj. -31.2828 iterations 0
Cbc0038I Pass  20: suminf.    3.62529 (13) obj. -31.2828 iterations 15
Cbc0038I Pass  21: suminf.    1.69485 (7) obj. -31.2828 iterations 13
Cbc0038I Pass  22: suminf.    1.27283 (5) obj. -31.2828 iterations 13
Cbc0038I Pass  23: suminf.    0.92094 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  24: suminf.    1.26429 (3) obj. -31.2828 iterations 5
Cbc0038I Pass  25: suminf.    0.61590 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  26: suminf.    0.61590 (3) obj. -31.2828 iterations 0
Cbc0038I Pass  27: suminf.    1.03480 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  28: suminf.    0.86576 (3) obj. -31.2828 iterations 1
Cbc0038I Pass  29: suminf.    1.26429 (3) obj. -31.2828 iterations 4
Cbc0038I Pass  30: suminf.    0.61590 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  31: suminf.    0.61590 (3) obj. -31.2828 iterations 0
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -35.7353
Cbc0038I Pass  31: suminf.    1.59667 (6) obj. -35.7353 iterations 0
Cbc0038I Pass  32: suminf.    1.32047 (6) obj. -35.7353 iterations 2
Cbc0038I Pass  33: suminf.    1.32047 (6) obj. -35.7353 iterations 1
Cbc0038I Pass  34: suminf.    0.76929 (3) obj. -35.7353 iterations 7
Cbc0038I Pass  35: suminf.    0.67683 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  36: suminf.    1.39503 (5) obj. -35.7353 iterations 7
Cbc0038I Pass  37: suminf.    1.35710 (5) obj. -35.7353 iterations 2
Cbc0038I Pass  38: suminf.    1.40571 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  39: suminf.    1.32205 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  40: suminf.    1.15235 (4) obj. -35.7353 iterations 6
Cbc0038I Pass  41: suminf.    0.96723 (5) obj. -35.7353 iterations 2
Cbc0038I Pass  42: suminf.    2.58398 (9) obj. -35.7353 iterations 11
Cbc0038I Pass  43: suminf.    2.36723 (19) obj. -35.7353 iterations 14
Cbc0038I Pass  44: suminf.    1.18378 (5) obj. -35.7353 iterations 24
Cbc0038I Pass  45: suminf.    0.91226 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  46: suminf.    0.82886 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  47: suminf.    1.13822 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  48: suminf.    1.06443 (3) obj. -35.7353 iterations 2
Cbc0038I Pass  49: suminf.    0.96070 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  50: suminf.    0.91953 (3) obj. -35.7353 iterations 1
Cbc0038I Pass  51: suminf.    1.08492 (4) obj. -35.7353 iterations 3
Cbc0038I Pass  52: suminf.    2.22380 (8) obj. -35.7353 iterations 13
Cbc0038I Pass  53: suminf.    1.56013 (5) obj. -35.7353 iterations 11
Cbc0038I Pass  54: suminf.    1.56013 (5) obj. -35.7353 iterations 1
Cbc0038I Pass  55: suminf.    1.60504 (4) obj. -35.7353 iterations 6
Cbc0038I Pass  56: suminf.    1.33445 (7) obj. -35.7353 iterations 5
Cbc0038I Pass  57: suminf.    1.06828 (4) obj. -35.7353 iterations 9
Cbc0038I Pass  58: suminf.    0.62171 (4) obj. -35.7353 iterations 5
Cbc0038I Pass  59: suminf.    2.11825 (6) obj. -35.7353 iterations 8
Cbc0038I Pass  60: suminf.    1.33017 (5) obj. -35.7353 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -28.809 - took 0.05 seconds
Cbc0012I Integer solution of -28.80904 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 115 rows 68 columns, reduced to 39 rows 23 columns
Cbc0031I 21 added rows had average density of 26.333333
Cbc0013I At root node, 21 cuts changed objective from -53.545302 to -44.074022 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5829 row cuts average 4.8 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1835 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 13 nodes, 6 on tree, -28.80904 best solution, best possible -44.074022 (0.69 seconds)
Cbc0001I Search completed - best objective -28.80904, took 5563 iterations and 26 nodes (0.71 seconds)
Cbc0032I Strong branching done 358 times (5461 iterations), fathomed 1 nodes and fixed 43 variables
Cbc0035I Maximum depth 6, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.72

