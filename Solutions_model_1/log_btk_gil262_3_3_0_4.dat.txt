Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 380 (-147) rows, 200 (-64) columns and 1145 (-400) elements
Clp1000I sum of infeasibilities 8.60253e-06 - average 2.26382e-08, 191 fixed columns
Coin0506I Presolve 9 (-371) rows, 9 (-191) columns and 28 (-1117) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 187579.19
Clp0000I Optimal - objective value 187579.19
Coin0511I After Postsolve, objective 187579.19, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14552289 - largest nonzero change 0 ( 0%) - largest zero change 2.9980196e-05
Clp0000I Optimal - objective value 187579.19
Clp0000I Optimal - objective value 187579.19
Clp0000I Optimal - objective value 187579.19
Coin0511I After Postsolve, objective 187579.19, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 187579.1916 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 380 rows, 200 columns (199 integer (199 of which binary)) and 1145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.471%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.99626
Cbc0038I Solution found of -137822
Cbc0038I Relaxing continuous gives -137822
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 380 rows 200 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -137822 to -163302 (0.04 seconds)
Cbc0038I Round again with cutoff of -165730
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.02566 (1) obj. -165730 iterations 65
Cbc0038I Pass   2: suminf.    0.02566 (1) obj. -165730 iterations 0
Cbc0038I Pass   3: suminf.    0.36559 (1) obj. -182884 iterations 7
Cbc0038I Solution found of -168648
Cbc0038I Relaxing continuous gives -168648
Cbc0038I Rounding solution of -170192 is better than previous of -168648

Cbc0038I Before mini branch and bound, 188 integers at bound fixed and 0 continuous
Cbc0038I Full problem 380 rows 200 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -173669
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.33074 (1) obj. -173669 iterations 0
Cbc0038I Pass   5: suminf.    0.33074 (1) obj. -173669 iterations 0
Cbc0038I Pass   6: suminf.    0.36559 (1) obj. -182884 iterations 8
Cbc0038I Pass   7: suminf.    0.22378 (1) obj. -173669 iterations 18
Cbc0038I Pass   8: suminf.    0.76876 (4) obj. -173669 iterations 45
Cbc0038I Pass   9: suminf.    0.25258 (6) obj. -173669 iterations 30
Cbc0038I Pass  10: suminf.    0.88529 (2) obj. -173669 iterations 32
Cbc0038I Pass  11: suminf.    0.49795 (2) obj. -173669 iterations 7
Cbc0038I Pass  12: suminf.    0.26204 (2) obj. -173669 iterations 8
Cbc0038I Pass  13: suminf.    0.61280 (2) obj. -173669 iterations 16
Cbc0038I Pass  14: suminf.    0.26204 (2) obj. -173669 iterations 22
Cbc0038I Pass  15: suminf.    0.62850 (6) obj. -173669 iterations 24
Cbc0038I Pass  16: suminf.    0.43827 (6) obj. -173669 iterations 14
Cbc0038I Pass  17: suminf.    0.95669 (7) obj. -173669 iterations 27
Cbc0038I Pass  18: suminf.    0.95669 (7) obj. -173669 iterations 0
Cbc0038I Pass  19: suminf.    1.98056 (6) obj. -173669 iterations 26
Cbc0038I Pass  20: suminf.    1.98056 (6) obj. -173669 iterations 0
Cbc0038I Pass  21: suminf.    1.20332 (7) obj. -173669 iterations 24
Cbc0038I Pass  22: suminf.    1.20332 (7) obj. -173669 iterations 0
Cbc0038I Pass  23: suminf.    1.16027 (6) obj. -173669 iterations 26
Cbc0038I Pass  24: suminf.    0.88773 (5) obj. -173669 iterations 26
Cbc0038I Pass  25: suminf.    0.31127 (4) obj. -173669 iterations 33
Cbc0038I Pass  26: suminf.    0.15056 (1) obj. -173669 iterations 15
Cbc0038I Pass  27: suminf.    0.16000 (1) obj. -173926 iterations 5
Cbc0038I Pass  28: suminf.    0.99604 (6) obj. -173669 iterations 28
Cbc0038I Pass  29: suminf.    0.99604 (6) obj. -173669 iterations 3
Cbc0038I Pass  30: suminf.    1.69612 (7) obj. -173669 iterations 25
Cbc0038I Pass  31: suminf.    1.69612 (7) obj. -173669 iterations 0
Cbc0038I Pass  32: suminf.    1.59609 (6) obj. -173669 iterations 27
Cbc0038I Pass  33: suminf.    0.98956 (7) obj. -173669 iterations 19
Cbc0038I Rounding solution of -173854 is better than previous of -170192

Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 380 rows 200 columns, reduced to 49 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -173854 to -179621 (0.12 seconds)
Cbc0038I Round again with cutoff of -182009
Cbc0038I Reduced cost fixing fixed 97 variables on major pass 4
Cbc0038I Pass  33: suminf.    0.70372 (7) obj. -182009 iterations 13
Cbc0038I Pass  34: suminf.    0.36559 (1) obj. -182884 iterations 35
Cbc0038I Pass  35: suminf.    0.40458 (1) obj. -182009 iterations 17
Cbc0038I Pass  36: suminf.    0.93103 (5) obj. -182009 iterations 34
Cbc0038I Pass  37: suminf.    0.62015 (3) obj. -182009 iterations 37
Cbc0038I Pass  38: suminf.    0.40458 (1) obj. -182009 iterations 47
Cbc0038I Pass  39: suminf.    0.95454 (10) obj. -182009 iterations 38
Cbc0038I Pass  40: suminf.    0.91460 (9) obj. -182009 iterations 31
Cbc0038I Pass  41: suminf.    0.43079 (2) obj. -182009 iterations 41
Cbc0038I Pass  42: suminf.    0.42238 (8) obj. -182009 iterations 27
Cbc0038I Pass  43: suminf.    1.84095 (5) obj. -182009 iterations 36
Cbc0038I Pass  44: suminf.    1.01577 (4) obj. -182009 iterations 18
Cbc0038I Pass  45: suminf.    0.98436 (5) obj. -182009 iterations 18
Cbc0038I Pass  46: suminf.    1.44225 (8) obj. -182009 iterations 26
Cbc0038I Pass  47: suminf.    1.44225 (8) obj. -182009 iterations 0
Cbc0038I Pass  48: suminf.    1.84095 (5) obj. -182009 iterations 31
Cbc0038I Pass  49: suminf.    1.01577 (4) obj. -182009 iterations 18
Cbc0038I Pass  50: suminf.    0.98436 (5) obj. -182009 iterations 19
Cbc0038I Pass  51: suminf.    1.44225 (8) obj. -182009 iterations 27
Cbc0038I Pass  52: suminf.    1.44225 (8) obj. -182009 iterations 0
Cbc0038I Pass  53: suminf.    1.84095 (5) obj. -182009 iterations 33
Cbc0038I Pass  54: suminf.    1.01577 (4) obj. -182009 iterations 18
Cbc0038I Pass  55: suminf.    0.98436 (5) obj. -182009 iterations 18
Cbc0038I Pass  56: suminf.    1.44225 (8) obj. -182009 iterations 25
Cbc0038I Pass  57: suminf.    1.44225 (8) obj. -182009 iterations 0
Cbc0038I Pass  58: suminf.    1.84095 (5) obj. -182009 iterations 31
Cbc0038I Pass  59: suminf.    1.01577 (4) obj. -182009 iterations 18
Cbc0038I Pass  60: suminf.    0.98436 (5) obj. -182009 iterations 19
Cbc0038I Pass  61: suminf.    1.44225 (8) obj. -182009 iterations 27
Cbc0038I Pass  62: suminf.    1.44225 (8) obj. -182009 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 380 rows 200 columns, reduced to 29 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -179621 - took 0.14 seconds
Cbc0012I Integer solution of -179621.19 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 380 rows 200 columns, reduced to 10 rows 13 columns
Cbc0031I 9 added rows had average density of 73.333333
Cbc0013I At root node, 9 cuts changed objective from -187579.19 to -184059.79 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 3.2 elements, 12 column cuts (12 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 34.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 194.9 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -179621.19 best solution, best possible -184059.48 (0.68 seconds)
Cbc0010I After 8 nodes, 1 on tree, -179621.19 best solution, best possible -182317.65 (1.61 seconds)
Cbc0001I Search completed - best objective -179621.19, took 523 iterations and 12 nodes (1.97 seconds)
Cbc0032I Strong branching done 106 times (1084 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 133 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.99

