Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 74 (-4) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000128636 - average 9.52859e-07, 9 fixed columns
Coin0506I Presolve 118 (-17) rows, 65 (-9) columns and 358 (-52) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Coin0511I After Postsolve, objective 47.78555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Coin0511I After Postsolve, objective 47.78555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.78555005 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 74 columns (73 integer (73 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.388%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.92867
Cbc0038I Solution found of -0.376493
Cbc0038I Relaxing continuous gives -8.45356
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 78 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -8.45356 to -20.966 (0.06 seconds)
Cbc0038I Round again with cutoff of -23.6116
Cbc0038I Pass   1: suminf.    1.87825 (25) obj. -23.6116 iterations 42
Cbc0038I Pass   2: suminf.    1.30633 (14) obj. -23.6116 iterations 24
Cbc0038I Pass   3: suminf.    2.20268 (8) obj. -23.6116 iterations 24
Cbc0038I Pass   4: suminf.    1.61265 (5) obj. -23.6116 iterations 4
Cbc0038I Pass   5: suminf.    1.38462 (6) obj. -23.6116 iterations 2
Cbc0038I Pass   6: suminf.    0.50428 (4) obj. -23.6116 iterations 8
Cbc0038I Pass   7: suminf.    0.44708 (1) obj. -23.6116 iterations 4
Cbc0038I Pass   8: suminf.    0.45791 (2) obj. -23.6116 iterations 3
Cbc0038I Pass   9: suminf.    0.78735 (3) obj. -23.6116 iterations 4
Cbc0038I Pass  10: suminf.    0.78735 (3) obj. -23.6116 iterations 0
Cbc0038I Pass  11: suminf.    0.92327 (3) obj. -23.6116 iterations 2
Cbc0038I Pass  12: suminf.    0.84489 (2) obj. -23.6116 iterations 2
Cbc0038I Pass  13: suminf.    1.97095 (6) obj. -23.6116 iterations 12
Cbc0038I Pass  14: suminf.    1.36715 (6) obj. -23.6116 iterations 7
Cbc0038I Pass  15: suminf.    1.95272 (7) obj. -23.6116 iterations 12
Cbc0038I Pass  16: suminf.    1.88574 (14) obj. -23.6116 iterations 13
Cbc0038I Pass  17: suminf.    2.20268 (8) obj. -23.6116 iterations 25
Cbc0038I Pass  18: suminf.    1.61265 (5) obj. -23.6116 iterations 4
Cbc0038I Pass  19: suminf.    1.38462 (6) obj. -23.6116 iterations 2
Cbc0038I Pass  20: suminf.    0.50428 (4) obj. -23.6116 iterations 8
Cbc0038I Pass  21: suminf.    0.44708 (1) obj. -23.6116 iterations 4
Cbc0038I Pass  22: suminf.    0.45791 (2) obj. -23.6116 iterations 3
Cbc0038I Pass  23: suminf.    0.78735 (3) obj. -23.6116 iterations 4
Cbc0038I Pass  24: suminf.    0.78735 (3) obj. -23.6116 iterations 0
Cbc0038I Pass  25: suminf.    0.92327 (3) obj. -23.6116 iterations 2
Cbc0038I Pass  26: suminf.    0.84489 (2) obj. -23.6116 iterations 2
Cbc0038I Pass  27: suminf.    3.56632 (12) obj. -23.6116 iterations 13
Cbc0038I Pass  28: suminf.    0.76444 (8) obj. -23.6116 iterations 17
Cbc0038I Pass  29: suminf.    0.71545 (7) obj. -23.6116 iterations 2
Cbc0038I Pass  30: suminf.    0.79235 (2) obj. -23.6116 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -20.966 to -21.2171 (0.12 seconds)
Cbc0038I Round again with cutoff of -28.3733
Cbc0038I Pass  30: suminf.    2.15414 (25) obj. -28.3733 iterations 0
Cbc0038I Pass  31: suminf.    1.98378 (20) obj. -28.3733 iterations 10
Cbc0038I Pass  32: suminf.    1.70693 (9) obj. -28.3733 iterations 36
Cbc0038I Pass  33: suminf.    1.46083 (8) obj. -28.3733 iterations 7
Cbc0038I Pass  34: suminf.    1.09038 (3) obj. -28.3733 iterations 14
Cbc0038I Pass  35: suminf.    0.78892 (3) obj. -28.3733 iterations 3
Cbc0038I Pass  36: suminf.    1.09038 (3) obj. -28.3733 iterations 4
Cbc0038I Pass  37: suminf.    5.81722 (16) obj. -28.3733 iterations 36
Cbc0038I Pass  38: suminf.    1.87421 (6) obj. -28.3733 iterations 22
Cbc0038I Pass  39: suminf.    1.87421 (6) obj. -28.3733 iterations 0
Cbc0038I Pass  40: suminf.    1.15933 (6) obj. -28.3733 iterations 9
Cbc0038I Pass  41: suminf.    1.07415 (6) obj. -28.3733 iterations 1
Cbc0038I Pass  42: suminf.    1.07415 (6) obj. -28.3733 iterations 2
Cbc0038I Pass  43: suminf.    1.86811 (6) obj. -28.3733 iterations 12
Cbc0038I Pass  44: suminf.    1.48402 (5) obj. -28.3733 iterations 3
Cbc0038I Pass  45: suminf.    1.72789 (5) obj. -28.3733 iterations 6
Cbc0038I Pass  46: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  47: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  48: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  49: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I Pass  50: suminf.    1.72789 (5) obj. -28.3733 iterations 5
Cbc0038I Pass  51: suminf.    1.50119 (4) obj. -28.3733 iterations 3
Cbc0038I Pass  52: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  53: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  54: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I Pass  55: suminf.    1.72789 (5) obj. -28.3733 iterations 5
Cbc0038I Pass  56: suminf.    1.50119 (4) obj. -28.3733 iterations 3
Cbc0038I Pass  57: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  58: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  59: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 90 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -21.2171 - took 0.13 seconds
Cbc0012I Integer solution of -21.21711 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 79 rows 44 columns
Cbc0031I 22 added rows had average density of 58.272727
Cbc0013I At root node, 22 cuts changed objective from -47.420319 to -40.438342 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9332 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1137 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.21711 best solution, best possible -40.438342 (0.75 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -21.21711000000001, took 8089 iterations and 58 nodes (0.95 seconds)
Cbc0032I Strong branching done 646 times (12723 iterations), fathomed 7 nodes and fixed 16 variables
Cbc0035I Maximum depth 21, 160 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.96

