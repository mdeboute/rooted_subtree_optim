Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 33 (-2) columns and 170 (-25) elements
Clp1000I sum of infeasibilities 9.70208e-06 - average 1.73251e-07, 2 fixed columns
Coin0506I Presolve 52 (-4) rows, 31 (-2) columns and 158 (-12) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 3.3409661 - largest nonzero change 0 ( 0%) - largest zero change 1.5935982e-05
Clp0000I Optimal - objective value 70.890461
Clp0000I Optimal - objective value 70.890461
Coin0511I After Postsolve, objective 70.890461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.890461
Clp0000I Optimal - objective value 70.890461
Clp0000I Optimal - objective value 70.890461
Coin0511I After Postsolve, objective 70.890461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.89046091 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 56 rows, 33 columns (32 integer (32 of which binary)) and 170 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.442%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.77927
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.320996 iterations 22
Cbc0038I Solution found of -0.320996
Cbc0038I Relaxing continuous gives -0.320996
Cbc0038I Rounding solution of -14.3514 is better than previous of -0.320996

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -14.3514 to -30.8759 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.8775
Cbc0038I Pass   2: suminf.    2.18040 (7) obj. -34.8775 iterations 10
Cbc0038I Pass   3: suminf.    0.79960 (4) obj. -34.8775 iterations 8
Cbc0038I Pass   4: suminf.    1.21075 (5) obj. -34.8775 iterations 7
Cbc0038I Pass   5: suminf.    1.18241 (9) obj. -34.8775 iterations 1
Cbc0038I Pass   6: suminf.    1.66310 (5) obj. -34.8775 iterations 13
Cbc0038I Pass   7: suminf.    1.21452 (8) obj. -34.8775 iterations 5
Cbc0038I Pass   8: suminf.    2.80302 (8) obj. -34.8775 iterations 12
Cbc0038I Pass   9: suminf.    1.68934 (6) obj. -34.8775 iterations 6
Cbc0038I Pass  10: suminf.    1.67020 (6) obj. -34.8775 iterations 2
Cbc0038I Pass  11: suminf.    1.82572 (10) obj. -34.8775 iterations 12
Cbc0038I Pass  12: suminf.    1.82572 (10) obj. -34.8775 iterations 0
Cbc0038I Pass  13: suminf.    1.95617 (5) obj. -34.8775 iterations 16
Cbc0038I Pass  14: suminf.    1.19537 (6) obj. -34.8775 iterations 4
Cbc0038I Pass  15: suminf.    1.19442 (5) obj. -34.8775 iterations 2
Cbc0038I Pass  16: suminf.    1.32206 (4) obj. -34.8775 iterations 6
Cbc0038I Pass  17: suminf.    1.32206 (4) obj. -34.8775 iterations 0
Cbc0038I Pass  18: suminf.    1.46715 (7) obj. -34.8775 iterations 5
Cbc0038I Pass  19: suminf.    1.21452 (8) obj. -34.8775 iterations 3
Cbc0038I Pass  20: suminf.    2.80302 (8) obj. -34.8775 iterations 12
Cbc0038I Pass  21: suminf.    1.68934 (6) obj. -34.8775 iterations 6
Cbc0038I Pass  22: suminf.    1.67020 (6) obj. -34.8775 iterations 2
Cbc0038I Pass  23: suminf.    1.82572 (10) obj. -34.8775 iterations 10
Cbc0038I Pass  24: suminf.    1.82572 (10) obj. -34.8775 iterations 0
Cbc0038I Pass  25: suminf.    1.95617 (5) obj. -34.8775 iterations 16
Cbc0038I Pass  26: suminf.    1.19537 (6) obj. -34.8775 iterations 4
Cbc0038I Pass  27: suminf.    1.19442 (5) obj. -34.8775 iterations 2
Cbc0038I Pass  28: suminf.    1.32206 (4) obj. -34.8775 iterations 6
Cbc0038I Pass  29: suminf.    1.32206 (4) obj. -34.8775 iterations 0
Cbc0038I Pass  30: suminf.    1.46715 (7) obj. -34.8775 iterations 5
Cbc0038I Pass  31: suminf.    1.21452 (8) obj. -34.8775 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30.8759 - took 0.03 seconds
Cbc0012I Integer solution of -30.875936 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 56 rows 33 columns, reduced to 34 rows 21 columns
Cbc0031I 16 added rows had average density of 22.5625
Cbc0013I At root node, 16 cuts changed objective from -70.890461 to -49.5782 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2110 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 759 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.875936, took 3707 iterations and 12 nodes (0.33 seconds)
Cbc0032I Strong branching done 196 times (2709 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

