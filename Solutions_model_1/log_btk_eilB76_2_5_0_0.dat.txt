Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 5.27015e-05 - average 4.28468e-07, 14 fixed columns
Coin0506I Presolve 96 (-27) rows, 54 (-14) columns and 292 (-82) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Coin0511I After Postsolve, objective 59.590716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Clp0000I Optimal - objective value 59.590716
Coin0511I After Postsolve, objective 59.590716, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.59071649 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 119 rows, 68 columns (67 integer (67 of which binary)) and 474 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.963%
Cgl0015I Clique Strengthening extended 3 cliques, 4 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.69303
Cbc0038I Solution found of -5.55202
Cbc0038I Relaxing continuous gives -13.742
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -13.742 to -23.9408 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4209
Cbc0038I Pass   1: suminf.    1.16535 (16) obj. -27.4209 iterations 37
Cbc0038I Pass   2: suminf.    0.85828 (3) obj. -27.4209 iterations 19
Cbc0038I Pass   3: suminf.    0.45533 (1) obj. -27.4209 iterations 3
Cbc0038I Pass   4: suminf.    0.45489 (1) obj. -27.4209 iterations 2
Cbc0038I Pass   5: suminf.    1.60682 (6) obj. -27.4209 iterations 12
Cbc0038I Pass   6: suminf.    0.83760 (2) obj. -27.4209 iterations 5
Cbc0038I Pass   7: suminf.    0.72663 (2) obj. -27.4209 iterations 3
Cbc0038I Pass   8: suminf.    0.76780 (3) obj. -27.4209 iterations 4
Cbc0038I Pass   9: suminf.    0.73827 (2) obj. -27.4209 iterations 1
Cbc0038I Pass  10: suminf.    0.41802 (6) obj. -27.4209 iterations 5
Cbc0038I Pass  11: suminf.    1.16535 (16) obj. -27.4209 iterations 22
Cbc0038I Pass  12: suminf.    1.62598 (6) obj. -27.4209 iterations 15
Cbc0038I Pass  13: suminf.    1.62598 (6) obj. -27.4209 iterations 2
Cbc0038I Pass  14: suminf.    0.81534 (5) obj. -27.4209 iterations 11
Cbc0038I Pass  15: suminf.    0.62369 (5) obj. -27.4209 iterations 4
Cbc0038I Pass  16: suminf.    0.84643 (4) obj. -27.4209 iterations 13
Cbc0038I Pass  17: suminf.    0.84643 (4) obj. -27.4209 iterations 1
Cbc0038I Pass  18: suminf.    0.51564 (2) obj. -27.4209 iterations 4
Cbc0038I Pass  19: suminf.    0.51564 (2) obj. -27.4209 iterations 0
Cbc0038I Pass  20: suminf.    1.19426 (3) obj. -27.4209 iterations 3
Cbc0038I Pass  21: suminf.    1.69617 (8) obj. -27.4209 iterations 17
Cbc0038I Pass  22: suminf.    1.34897 (6) obj. -27.4209 iterations 11
Cbc0038I Pass  23: suminf.    1.19845 (10) obj. -27.4209 iterations 12
Cbc0038I Pass  24: suminf.    1.16535 (16) obj. -27.4209 iterations 8
Cbc0038I Pass  25: suminf.    1.62598 (6) obj. -27.4209 iterations 15
Cbc0038I Pass  26: suminf.    1.62598 (6) obj. -27.4209 iterations 2
Cbc0038I Pass  27: suminf.    1.30780 (7) obj. -27.4209 iterations 4
Cbc0038I Pass  28: suminf.    1.29550 (6) obj. -27.4209 iterations 3
Cbc0038I Pass  29: suminf.    1.29550 (6) obj. -27.4209 iterations 1
Cbc0038I Pass  30: suminf.    1.29550 (6) obj. -27.4209 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 68 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.9408 - took 0.05 seconds
Cbc0012I Integer solution of -23.94082 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 59 rows 34 columns
Cbc0031I 17 added rows had average density of 30.764706
Cbc0013I At root node, 17 cuts changed objective from -58.740714 to -50.631024 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7542 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1702 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 1 nodes, 2 on tree, -23.94082 best solution, best possible -50.631024 (0.69 seconds)
Cbc0001I Search completed - best objective -23.94082, took 7068 iterations and 40 nodes (0.81 seconds)
Cbc0032I Strong branching done 526 times (8619 iterations), fathomed 5 nodes and fixed 23 variables
Cbc0035I Maximum depth 11, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.83

