Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 49 (-61) rows, 27 (-29) columns and 98 (-171) elements
Clp0000I Optimal - objective value 2874.3861
Coin0511I After Postsolve, objective 2874.3861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2874.386089 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 27 columns (26 integer (26 of which binary)) and 98 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 8.3704
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 475 iterations 26
Cbc0038I Solution found of 475
Cbc0038I Relaxing continuous gives 475
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 27 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 475 to -1475 (0.01 seconds)
Cbc0038I Round again with cutoff of -1615.84
Cbc0038I Pass   2: suminf.    0.62983 (4) obj. -1615.84 iterations 10
Cbc0038I Pass   3: suminf.    0.03275 (1) obj. -1615.84 iterations 6
Cbc0038I Pass   4: suminf.    0.25258 (2) obj. -1615.84 iterations 2
Cbc0038I Pass   5: suminf.    0.25258 (2) obj. -1615.84 iterations 6
Cbc0038I Pass   6: suminf.    0.92781 (4) obj. -1615.84 iterations 10
Cbc0038I Pass   7: suminf.    0.03275 (1) obj. -1615.84 iterations 6
Cbc0038I Pass   8: suminf.    0.21838 (1) obj. -1615.84 iterations 2
Cbc0038I Pass   9: suminf.    0.55659 (4) obj. -1615.84 iterations 3
Cbc0038I Pass  10: suminf.    0.08495 (2) obj. -1615.84 iterations 2
Cbc0038I Pass  11: suminf.    1.34043 (13) obj. -1615.84 iterations 11
Cbc0038I Pass  12: suminf.    0.84668 (7) obj. -1615.84 iterations 8
Cbc0038I Pass  13: suminf.    2.15719 (8) obj. -1615.84 iterations 11
Cbc0038I Pass  14: suminf.    2.09625 (7) obj. -1615.84 iterations 1
Cbc0038I Pass  15: suminf.    2.20701 (6) obj. -1615.84 iterations 9
Cbc0038I Pass  16: suminf.    1.89483 (7) obj. -1615.84 iterations 5
Cbc0038I Pass  17: suminf.    2.01375 (10) obj. -1615.84 iterations 11
Cbc0038I Pass  18: suminf.    1.96227 (9) obj. -1615.84 iterations 2
Cbc0038I Pass  19: suminf.    2.05648 (5) obj. -1615.84 iterations 10
Cbc0038I Pass  20: suminf.    1.85548 (5) obj. -1615.84 iterations 2
Cbc0038I Pass  21: suminf.    1.80947 (9) obj. -1615.84 iterations 8
Cbc0038I Pass  22: suminf.    0.50863 (4) obj. -1615.84 iterations 10
Cbc0038I Pass  23: suminf.    0.50863 (4) obj. -1615.84 iterations 0
Cbc0038I Pass  24: suminf.    1.99190 (8) obj. -1615.84 iterations 7
Cbc0038I Pass  25: suminf.    1.98103 (7) obj. -1615.84 iterations 1
Cbc0038I Pass  26: suminf.    2.10080 (5) obj. -1615.84 iterations 9
Cbc0038I Pass  27: suminf.    1.85548 (5) obj. -1615.84 iterations 4
Cbc0038I Pass  28: suminf.    1.80947 (9) obj. -1615.84 iterations 8
Cbc0038I Pass  29: suminf.    0.50863 (4) obj. -1615.84 iterations 10
Cbc0038I Pass  30: suminf.    0.50863 (4) obj. -1615.84 iterations 0
Cbc0038I Pass  31: suminf.    1.99190 (8) obj. -1615.84 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 27 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -1475 - took 0.01 seconds
Cbc0012I Integer solution of -1475 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 49 rows 27 columns, reduced to 28 rows 16 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -2874.3861 to -2874.3861 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1475, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

