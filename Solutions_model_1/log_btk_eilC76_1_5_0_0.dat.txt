Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.04077e-05 - average 2.18761e-07, 12 fixed columns
Coin0506I Presolve 111 (-28) rows, 62 (-14) columns and 338 (-84) elements
Clp0014I Perturbing problem by 0.001% of 2.462257 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Coin0511I After Postsolve, objective 40.411876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Clp0000I Optimal - objective value 40.411876
Coin0511I After Postsolve, objective 40.411876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.41187583 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.92685
Cbc0038I Solution found of 3.63958
Cbc0038I Relaxing continuous gives -5.64838
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 79 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.64838 to -11.1042 (0.05 seconds)
Cbc0038I Round again with cutoff of -14.0351
Cbc0038I Pass   1: suminf.    1.92291 (37) obj. -14.0351 iterations 30
Cbc0038I Pass   2: suminf.    1.25970 (7) obj. -14.0351 iterations 33
Cbc0038I Pass   3: suminf.    1.05923 (6) obj. -14.0351 iterations 3
Cbc0038I Pass   4: suminf.    1.40202 (4) obj. -14.0351 iterations 10
Cbc0038I Pass   5: suminf.    1.19066 (3) obj. -14.0351 iterations 1
Cbc0038I Pass   6: suminf.    0.89591 (5) obj. -14.0351 iterations 3
Cbc0038I Pass   7: suminf.    1.14469 (4) obj. -14.0351 iterations 5
Cbc0038I Pass   8: suminf.    1.14469 (4) obj. -14.0351 iterations 0
Cbc0038I Pass   9: suminf.    1.14360 (4) obj. -14.0351 iterations 4
Cbc0038I Pass  10: suminf.    1.38866 (4) obj. -14.0351 iterations 3
Cbc0038I Pass  11: suminf.    1.31152 (5) obj. -14.0351 iterations 16
Cbc0038I Pass  12: suminf.    0.77645 (3) obj. -14.0351 iterations 6
Cbc0038I Pass  13: suminf.    0.85877 (3) obj. -14.0351 iterations 5
Cbc0038I Pass  14: suminf.    0.85877 (3) obj. -14.0351 iterations 0
Cbc0038I Pass  15: suminf.    1.14942 (3) obj. -14.0351 iterations 2
Cbc0038I Pass  16: suminf.    1.03598 (4) obj. -14.0351 iterations 1
Cbc0038I Pass  17: suminf.    1.38337 (4) obj. -14.0351 iterations 4
Cbc0038I Pass  18: suminf.    1.38337 (4) obj. -14.0351 iterations 0
Cbc0038I Pass  19: suminf.    1.33237 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  20: suminf.    1.26070 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  21: suminf.    1.33708 (4) obj. -14.0351 iterations 5
Cbc0038I Pass  22: suminf.    1.24438 (4) obj. -14.0351 iterations 3
Cbc0038I Pass  23: suminf.    1.14999 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  24: suminf.    1.30193 (5) obj. -14.0351 iterations 7
Cbc0038I Pass  25: suminf.    1.29329 (7) obj. -14.0351 iterations 1
Cbc0038I Pass  26: suminf.    1.70535 (4) obj. -14.0351 iterations 8
Cbc0038I Pass  27: suminf.    1.50160 (5) obj. -14.0351 iterations 4
Cbc0038I Pass  28: suminf.    1.64108 (5) obj. -14.0351 iterations 2
Cbc0038I Pass  29: suminf.    1.40524 (4) obj. -14.0351 iterations 2
Cbc0038I Pass  30: suminf.    2.37519 (8) obj. -14.0351 iterations 14
Cbc0038I Rounding solution of -12.4505 is better than previous of -11.1042

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -12.4505 to -14.7299 (0.09 seconds)
Cbc0038I Round again with cutoff of -19.8664
Cbc0038I Pass  30: suminf.    3.25992 (37) obj. -19.8664 iterations 0
Cbc0038I Pass  31: suminf.    2.35987 (8) obj. -19.8664 iterations 30
Cbc0038I Pass  32: suminf.    1.22167 (5) obj. -19.8664 iterations 12
Cbc0038I Pass  33: suminf.    1.01800 (7) obj. -19.8664 iterations 7
Cbc0038I Pass  34: suminf.    1.01800 (7) obj. -19.8664 iterations 1
Cbc0038I Pass  35: suminf.    3.53640 (10) obj. -19.8664 iterations 12
Cbc0038I Pass  36: suminf.    2.60537 (9) obj. -19.8664 iterations 3
Cbc0038I Pass  37: suminf.    2.17838 (8) obj. -19.8664 iterations 8
Cbc0038I Pass  38: suminf.    2.09088 (7) obj. -19.8664 iterations 2
Cbc0038I Pass  39: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  40: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  41: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  42: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  43: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  44: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  45: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  46: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  47: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  48: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  49: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  50: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  51: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  52: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  53: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  54: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I Pass  55: suminf.    2.04858 (8) obj. -19.8664 iterations 2
Cbc0038I Pass  56: suminf.    2.04858 (8) obj. -19.8664 iterations 1
Cbc0038I Pass  57: suminf.    2.18111 (9) obj. -19.8664 iterations 7
Cbc0038I Pass  58: suminf.    2.09088 (7) obj. -19.8664 iterations 3
Cbc0038I Pass  59: suminf.    2.37512 (7) obj. -19.8664 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 89 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -14.7299 - took 0.12 seconds
Cbc0012I Integer solution of -14.72989 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 81 rows 46 columns
Cbc0031I 23 added rows had average density of 57.478261
Cbc0013I At root node, 23 cuts changed objective from -40.411876 to -32.47232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11866 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1537 row cuts average 72.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.72989 best solution, best possible -32.47232 (0.89 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 52 rows 32 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 5 rows 7 columns
Cbc0004I Integer solution of -14.81852 found after 10961 iterations and 104 nodes (1.42 seconds)
Cbc0001I Search completed - best objective -14.81852, took 11213 iterations and 110 nodes (1.43 seconds)
Cbc0032I Strong branching done 1200 times (19742 iterations), fathomed 2 nodes and fixed 20 variables
Cbc0035I Maximum depth 34, 263 variables fixed on reduced cost
Total time (CPU seconds):       1.38   (Wallclock seconds):       1.44

