Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 502 (-25) rows, 262 (-2) columns and 1496 (-49) elements
Clp1000I sum of infeasibilities 2.03456e-05 - average 4.0529e-08, 152 fixed columns
Coin0506I Presolve 202 (-300) rows, 110 (-152) columns and 598 (-898) elements
Clp0029I End of values pass after 110 iterations
Clp0014I Perturbing problem by 0.001% of 0.17900991 - largest nonzero change 0 ( 0%) - largest zero change 2.9365872e-05
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Coin0511I After Postsolve, objective 146.64838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13334639 - largest nonzero change 0 ( 0%) - largest zero change 2.9744408e-05
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Coin0511I After Postsolve, objective 146.64838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 146.6483849 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 502 rows, 262 columns (261 integer (261 of which binary)) and 1496 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 10.9035
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.6836 iterations 77
Cbc0038I Solution found of -31.6836
Cbc0038I Relaxing continuous gives -31.6836
Cbc0038I Rounding solution of -68.9755 is better than previous of -31.6836

Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 92 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -68.9755 to -72.428 (0.06 seconds)
Cbc0038I Round again with cutoff of -79.8501
Cbc0038I Pass   2: suminf.    2.08932 (8) obj. -79.8501 iterations 24
Cbc0038I Pass   3: suminf.    2.03532 (6) obj. -79.8501 iterations 25
Cbc0038I Pass   4: suminf.    1.76333 (7) obj. -79.8501 iterations 25
Cbc0038I Pass   5: suminf.    2.18591 (6) obj. -79.8501 iterations 15
Cbc0038I Pass   6: suminf.    1.78376 (5) obj. -79.8501 iterations 10
Cbc0038I Pass   7: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass   8: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass   9: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  10: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  11: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  12: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  13: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  14: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  15: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass  16: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass  17: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  18: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  19: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  20: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  21: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  22: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  23: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass  24: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass  25: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  26: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  27: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  28: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  29: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  30: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  31: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Rounding solution of -75.2791 is better than previous of -72.428

Cbc0038I Before mini branch and bound, 209 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -93.2098
Cbc0038I Pass  31: suminf.    2.73639 (10) obj. -93.2098 iterations 3
Cbc0038I Pass  32: suminf.    3.22379 (9) obj. -93.2098 iterations 26
Cbc0038I Pass  33: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  34: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  35: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  36: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  37: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  38: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  39: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  40: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  41: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  42: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  43: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  44: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  45: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  46: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  47: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  48: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  49: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  50: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  51: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  52: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  53: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  54: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  55: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  56: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  57: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  58: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  59: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  60: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 207 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -75.2791 - took 0.13 seconds
Cbc0012I Integer solution of -75.27911 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 95 rows 55 columns
Cbc0031I 37 added rows had average density of 100.86486
Cbc0013I At root node, 37 cuts changed objective from -146.64838 to -128.08711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25624 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.499 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2627 row cuts average 257.6 elements, 0 column cuts (0 active)  in 0.459 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.478 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 254.6 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -75.27911 best solution, best possible -128.08711 (4.28 seconds)
Cbc0010I After 17 nodes, 10 on tree, -75.27911 best solution, best possible -128.08711 (4.98 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 177 rows 97 columns
Cbc0012I Integer solution of -75.55581 found by RINS after 15682 iterations and 42 nodes (5.29 seconds)
Cbc0012I Integer solution of -76.936783 found by rounding after 17741 iterations and 73 nodes (5.62 seconds)
Cbc0012I Integer solution of -77.845393 found by rounding after 17759 iterations and 74 nodes (5.63 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -78.607313 found by RINS after 18470 iterations and 91 nodes (5.69 seconds)
Cbc0010I After 91 nodes, 18 on tree, -78.607313 best solution, best possible -128.08711 (5.69 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 73 rows 48 columns
Cbc0010I After 222 nodes, 17 on tree, -78.607313 best solution, best possible -128.08711 (6.39 seconds)
Cbc0010I After 351 nodes, 10 on tree, -78.607313 best solution, best possible -128.08711 (7.09 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 16 rows 16 columns
Cbc0004I Integer solution of -78.6656 found after 31566 iterations and 433 nodes (7.54 seconds)
Cbc0010I After 537 nodes, 12 on tree, -78.6656 best solution, best possible -128.08711 (7.80 seconds)
Cbc0012I Integer solution of -79.193743 found by rounding after 35365 iterations and 576 nodes (7.89 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -79.85167 found by rounding after 38379 iterations and 660 nodes (8.28 seconds)
Cbc0012I Integer solution of -81.8525 found by rounding after 39690 iterations and 718 nodes (8.38 seconds)
Cbc0010I After 739 nodes, 14 on tree, -81.8525 best solution, best possible -128.08711 (8.50 seconds)
Cbc0012I Integer solution of -82.07571 found by rounding after 41113 iterations and 771 nodes (8.60 seconds)
Cbc0001I Search completed - best objective -82.07571000000002, took 43450 iterations and 818 nodes (8.69 seconds)
Cbc0032I Strong branching done 5794 times (125922 iterations), fathomed 65 nodes and fixed 261 variables
Cbc0035I Maximum depth 68, 3697 variables fixed on reduced cost
Total time (CPU seconds):       8.41   (Wallclock seconds):       8.74

