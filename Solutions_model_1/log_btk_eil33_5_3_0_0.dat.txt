Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 30 (-5) columns and 160 (-35) elements
Clp1000I sum of infeasibilities 9.67136e-06 - average 1.79099e-07, 4 fixed columns
Coin0506I Presolve 44 (-10) rows, 25 (-5) columns and 130 (-30) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 92.734594
Clp0000I Optimal - objective value 92.734594
Coin0511I After Postsolve, objective 92.734594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.734594
Clp0000I Optimal - objective value 92.734594
Clp0000I Optimal - objective value 92.734594
Coin0511I After Postsolve, objective 92.734594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.73459367 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.060%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.97305
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.8125 iterations 21
Cbc0038I Solution found of -5.8125
Cbc0038I Relaxing continuous gives -5.8125
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -5.8125 to -35.0624 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.746
Cbc0038I Pass   2: suminf.    0.88135 (4) obj. -40.746 iterations 3
Cbc0038I Pass   3: suminf.    0.97942 (3) obj. -40.746 iterations 3
Cbc0038I Pass   4: suminf.    0.84760 (4) obj. -40.746 iterations 3
Cbc0038I Pass   5: suminf.    0.88704 (3) obj. -40.746 iterations 3
Cbc0038I Pass   6: suminf.    0.48139 (2) obj. -40.746 iterations 1
Cbc0038I Pass   7: suminf.    0.99165 (3) obj. -40.746 iterations 4
Cbc0038I Pass   8: suminf.    1.81135 (6) obj. -40.746 iterations 9
Cbc0038I Pass   9: suminf.    1.41828 (5) obj. -40.746 iterations 2
Cbc0038I Pass  10: suminf.    1.00388 (3) obj. -40.746 iterations 5
Cbc0038I Pass  11: suminf.    0.78498 (4) obj. -40.746 iterations 2
Cbc0038I Pass  12: suminf.    0.99165 (3) obj. -40.746 iterations 4
Cbc0038I Pass  13: suminf.    0.99165 (3) obj. -40.746 iterations 0
Cbc0038I Pass  14: suminf.    0.88704 (3) obj. -40.746 iterations 2
Cbc0038I Pass  15: suminf.    0.48139 (2) obj. -40.746 iterations 1
Cbc0038I Pass  16: suminf.    0.81296 (3) obj. -40.746 iterations 2
Cbc0038I Pass  17: suminf.    0.81296 (3) obj. -40.746 iterations 1
Cbc0038I Pass  18: suminf.    2.13517 (7) obj. -40.746 iterations 6
Cbc0038I Pass  19: suminf.    1.66591 (6) obj. -40.746 iterations 2
Cbc0038I Pass  20: suminf.    0.99165 (3) obj. -40.746 iterations 9
Cbc0038I Pass  21: suminf.    0.88704 (3) obj. -40.746 iterations 2
Cbc0038I Pass  22: suminf.    0.48139 (2) obj. -40.746 iterations 1
Cbc0038I Pass  23: suminf.    1.57001 (4) obj. -40.746 iterations 6
Cbc0038I Pass  24: suminf.    0.67761 (2) obj. -40.746 iterations 4
Cbc0038I Pass  25: suminf.    0.62568 (2) obj. -40.746 iterations 1
Cbc0038I Pass  26: suminf.    0.62568 (2) obj. -40.746 iterations 0
Cbc0038I Pass  27: suminf.    0.70943 (2) obj. -40.746 iterations 2
Cbc0038I Pass  28: suminf.    0.90982 (5) obj. -40.746 iterations 5
Cbc0038I Pass  29: suminf.    0.78170 (3) obj. -40.746 iterations 1
Cbc0038I Pass  30: suminf.    0.70943 (2) obj. -40.746 iterations 3
Cbc0038I Pass  31: suminf.    0.70665 (2) obj. -40.746 iterations 1
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -50.9761
Cbc0038I Pass  31: suminf.    1.23088 (4) obj. -50.9761 iterations 0
Cbc0038I Pass  32: suminf.    1.03512 (3) obj. -50.9761 iterations 3
Cbc0038I Pass  33: suminf.    0.84621 (3) obj. -50.9761 iterations 1
Cbc0038I Pass  34: suminf.    1.11884 (3) obj. -50.9761 iterations 2
Cbc0038I Pass  35: suminf.    0.56893 (5) obj. -50.9761 iterations 4
Cbc0038I Pass  36: suminf.    1.11852 (7) obj. -50.9761 iterations 7
Cbc0038I Pass  37: suminf.    1.03711 (5) obj. -50.9761 iterations 1
Cbc0038I Pass  38: suminf.    1.79007 (5) obj. -50.9761 iterations 8
Cbc0038I Pass  39: suminf.    1.59112 (4) obj. -50.9761 iterations 2
Cbc0038I Pass  40: suminf.    1.55291 (5) obj. -50.9761 iterations 5
Cbc0038I Pass  41: suminf.    1.10878 (4) obj. -50.9761 iterations 2
Cbc0038I Pass  42: suminf.    1.15352 (7) obj. -50.9761 iterations 5
Cbc0038I Pass  43: suminf.    1.09547 (5) obj. -50.9761 iterations 2
Cbc0038I Pass  44: suminf.    1.59112 (4) obj. -50.9761 iterations 7
Cbc0038I Pass  45: suminf.    1.55291 (5) obj. -50.9761 iterations 5
Cbc0038I Pass  46: suminf.    1.10878 (4) obj. -50.9761 iterations 2
Cbc0038I Pass  47: suminf.    1.15352 (7) obj. -50.9761 iterations 5
Cbc0038I Pass  48: suminf.    1.09547 (5) obj. -50.9761 iterations 2
Cbc0038I Pass  49: suminf.    1.59112 (4) obj. -50.9761 iterations 7
Cbc0038I Pass  50: suminf.    1.55291 (5) obj. -50.9761 iterations 5
Cbc0038I Pass  51: suminf.    1.10878 (4) obj. -50.9761 iterations 2
Cbc0038I Pass  52: suminf.    1.15352 (7) obj. -50.9761 iterations 5
Cbc0038I Pass  53: suminf.    1.09547 (5) obj. -50.9761 iterations 2
Cbc0038I Pass  54: suminf.    1.59112 (4) obj. -50.9761 iterations 7
Cbc0038I Pass  55: suminf.    1.55291 (5) obj. -50.9761 iterations 5
Cbc0038I Pass  56: suminf.    1.10878 (4) obj. -50.9761 iterations 2
Cbc0038I Pass  57: suminf.    1.15352 (7) obj. -50.9761 iterations 5
Cbc0038I Pass  58: suminf.    1.09547 (5) obj. -50.9761 iterations 2
Cbc0038I Pass  59: suminf.    1.59112 (4) obj. -50.9761 iterations 7
Cbc0038I Pass  60: suminf.    1.55291 (5) obj. -50.9761 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -35.0625 - took 0.03 seconds
Cbc0012I Integer solution of -35.06245 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 33 rows 19 columns
Cbc0031I 14 added rows had average density of 19.142857
Cbc0013I At root node, 14 cuts changed objective from -91.896776 to -45.28091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1541 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1088 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -35.06245, took 2647 iterations and 4 nodes (0.22 seconds)
Cbc0032I Strong branching done 58 times (835 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

