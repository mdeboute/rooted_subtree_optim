Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 6.20052e-06 - average 1.72237e-07, 3 fixed columns
Coin0506I Presolve 31 (-5) rows, 19 (-3) columns and 92 (-16) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 76.62627
Clp0000I Optimal - objective value 76.62627
Coin0511I After Postsolve, objective 76.62627, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.62627
Clp0000I Optimal - objective value 76.62627
Clp0000I Optimal - objective value 76.62627
Coin0511I After Postsolve, objective 76.62627, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.62627011 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.33839
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.2826 iterations 12
Cbc0038I Solution found of -13.2826
Cbc0038I Relaxing continuous gives -13.2826
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -13.2826 to -33.8756 (0.01 seconds)
Cbc0038I Round again with cutoff of -37.6945
Cbc0038I Pass   2: suminf.    1.06878 (3) obj. -37.6945 iterations 5
Cbc0038I Pass   3: suminf.    0.21377 (1) obj. -37.6945 iterations 5
Cbc0038I Pass   4: suminf.    0.09524 (1) obj. -37.6945 iterations 3
Cbc0038I Pass   5: suminf.    0.59954 (4) obj. -37.6945 iterations 7
Cbc0038I Pass   6: suminf.    0.59954 (4) obj. -37.6945 iterations 1
Cbc0038I Pass   7: suminf.    1.34312 (5) obj. -37.6945 iterations 9
Cbc0038I Pass   8: suminf.    1.89479 (4) obj. -37.6945 iterations 4
Cbc0038I Pass   9: suminf.    1.55235 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  10: suminf.    1.42752 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  11: suminf.    1.17048 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  12: suminf.    1.08159 (6) obj. -37.6945 iterations 2
Cbc0038I Pass  13: suminf.    1.75953 (4) obj. -37.6945 iterations 7
Cbc0038I Pass  14: suminf.    1.55235 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  15: suminf.    1.42752 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  16: suminf.    1.17048 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  17: suminf.    1.08159 (6) obj. -37.6945 iterations 2
Cbc0038I Pass  18: suminf.    1.75953 (4) obj. -37.6945 iterations 7
Cbc0038I Pass  19: suminf.    1.55235 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  20: suminf.    1.42752 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  21: suminf.    1.17048 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  22: suminf.    1.08159 (6) obj. -37.6945 iterations 2
Cbc0038I Pass  23: suminf.    1.75953 (4) obj. -37.6945 iterations 7
Cbc0038I Pass  24: suminf.    1.55235 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  25: suminf.    1.42752 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  26: suminf.    1.17048 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  27: suminf.    1.08159 (6) obj. -37.6945 iterations 2
Cbc0038I Pass  28: suminf.    1.75953 (4) obj. -37.6945 iterations 7
Cbc0038I Pass  29: suminf.    1.55235 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  30: suminf.    1.42752 (4) obj. -37.6945 iterations 2
Cbc0038I Pass  31: suminf.    1.17048 (4) obj. -37.6945 iterations 2
Cbc0038I Rounding solution of -34.1151 is better than previous of -33.8756

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -44.5683
Cbc0038I Pass  31: suminf.    1.27617 (3) obj. -44.5683 iterations 0
Cbc0038I Pass  32: suminf.    0.09524 (1) obj. -44.5683 iterations 5
Cbc0038I Pass  33: suminf.    0.40146 (1) obj. -44.5683 iterations 3
Cbc0038I Pass  34: suminf.    0.40146 (1) obj. -44.5683 iterations 1
Cbc0038I Pass  35: suminf.    0.75375 (6) obj. -44.5683 iterations 7
Cbc0038I Pass  36: suminf.    0.49962 (2) obj. -44.5683 iterations 3
Cbc0038I Pass  37: suminf.    0.16733 (3) obj. -44.5683 iterations 6
Cbc0038I Pass  38: suminf.    1.79651 (4) obj. -44.5683 iterations 6
Cbc0038I Pass  39: suminf.    2.42302 (8) obj. -44.5683 iterations 11
Cbc0038I Pass  40: suminf.    0.55594 (2) obj. -44.5683 iterations 6
Cbc0038I Pass  41: suminf.    0.09524 (1) obj. -44.5683 iterations 4
Cbc0038I Pass  42: suminf.    0.40146 (1) obj. -44.5683 iterations 3
Cbc0038I Pass  43: suminf.    1.28641 (6) obj. -44.5683 iterations 8
Cbc0038I Pass  44: suminf.    0.65987 (3) obj. -44.5683 iterations 4
Cbc0038I Pass  45: suminf.    0.42231 (3) obj. -44.5683 iterations 1
Cbc0038I Pass  46: suminf.    1.49861 (5) obj. -44.5683 iterations 7
Cbc0038I Pass  47: suminf.    0.84143 (4) obj. -44.5683 iterations 6
Cbc0038I Pass  48: suminf.    0.76071 (4) obj. -44.5683 iterations 1
Cbc0038I Pass  49: suminf.    0.94119 (4) obj. -44.5683 iterations 4
Cbc0038I Pass  50: suminf.    0.94119 (4) obj. -44.5683 iterations 0
Cbc0038I Pass  51: suminf.    1.70363 (7) obj. -44.5683 iterations 8
Cbc0038I Pass  52: suminf.    0.77433 (5) obj. -44.5683 iterations 7
Cbc0038I Pass  53: suminf.    0.40146 (1) obj. -44.5683 iterations 3
Cbc0038I Pass  54: suminf.    0.09524 (1) obj. -44.5683 iterations 3
Cbc0038I Pass  55: suminf.    1.08445 (4) obj. -44.5683 iterations 7
Cbc0038I Pass  56: suminf.    0.23772 (3) obj. -44.5683 iterations 4
Cbc0038I Pass  57: suminf.    1.73240 (4) obj. -44.5683 iterations 6
Cbc0038I Pass  58: suminf.    1.89523 (7) obj. -44.5683 iterations 11
Cbc0038I Pass  59: suminf.    1.03549 (4) obj. -44.5683 iterations 3
Cbc0038I Pass  60: suminf.    0.91918 (4) obj. -44.5683 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -34.1151 - took 0.02 seconds
Cbc0012I Integer solution of -34.115125 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 29 rows 17 columns
Cbc0031I 9 added rows had average density of 17
Cbc0013I At root node, 9 cuts changed objective from -72.063412 to -37.438114 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 430 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 567 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -34.11512499999999, took 1415 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 20 times (227 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

