Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 0.000667526 - average 7.5003e-06, 7 fixed columns
Coin0506I Presolve 74 (-15) rows, 43 (-8) columns and 226 (-46) elements
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Coin0511I After Postsolve, objective 38.705548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Coin0511I After Postsolve, objective 38.705548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.70554802 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.13651
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.3484 iterations 27
Cbc0038I Solution found of 18.3484
Cbc0038I Relaxing continuous gives 18.3484
Cbc0038I Rounding solution of -2.66132 is better than previous of 18.3484

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -2.66132 to -9.81492 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.7041
Cbc0038I Pass   2: suminf.    3.28316 (12) obj. -12.7041 iterations 13
Cbc0038I Pass   3: suminf.    3.17597 (15) obj. -12.7041 iterations 8
Cbc0038I Pass   4: suminf.    0.40833 (3) obj. -12.7041 iterations 23
Cbc0038I Pass   5: suminf.    0.40833 (3) obj. -12.7041 iterations 2
Cbc0038I Pass   6: suminf.    1.24547 (4) obj. -12.7041 iterations 6
Cbc0038I Pass   7: suminf.    1.41837 (4) obj. -12.7041 iterations 2
Cbc0038I Pass   8: suminf.    1.41837 (4) obj. -12.7041 iterations 0
Cbc0038I Pass   9: suminf.    1.30930 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  10: suminf.    1.30930 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  11: suminf.    1.50376 (7) obj. -12.7041 iterations 12
Cbc0038I Pass  12: suminf.    0.82344 (3) obj. -12.7041 iterations 5
Cbc0038I Pass  13: suminf.    0.63055 (3) obj. -12.7041 iterations 1
Cbc0038I Pass  14: suminf.    1.00494 (4) obj. -12.7041 iterations 4
Cbc0038I Pass  15: suminf.    0.72193 (3) obj. -12.7041 iterations 2
Cbc0038I Pass  16: suminf.    0.83520 (4) obj. -12.7041 iterations 4
Cbc0038I Pass  17: suminf.    0.83520 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  18: suminf.    1.44696 (3) obj. -12.7041 iterations 2
Cbc0038I Pass  19: suminf.    1.27775 (4) obj. -12.7041 iterations 1
Cbc0038I Pass  20: suminf.    1.19705 (4) obj. -12.7041 iterations 3
Cbc0038I Pass  21: suminf.    0.97980 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  22: suminf.    1.68111 (5) obj. -12.7041 iterations 2
Cbc0038I Pass  23: suminf.    1.20264 (4) obj. -12.7041 iterations 1
Cbc0038I Pass  24: suminf.    1.48421 (6) obj. -12.7041 iterations 11
Cbc0038I Pass  25: suminf.    1.41510 (5) obj. -12.7041 iterations 4
Cbc0038I Pass  26: suminf.    0.98676 (4) obj. -12.7041 iterations 6
Cbc0038I Pass  27: suminf.    1.64729 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  28: suminf.    0.75579 (3) obj. -12.7041 iterations 3
Cbc0038I Pass  29: suminf.    1.41011 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  30: suminf.    1.41011 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  31: suminf.    1.41297 (4) obj. -12.7041 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -9.81492 - took 0.06 seconds
Cbc0012I Integer solution of -9.81492 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 44 rows 29 columns
Cbc0031I 21 added rows had average density of 35.666667
Cbc0013I At root node, 21 cuts changed objective from -38.705548 to -27.715683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7591 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1402 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 134 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0010I After 12 nodes, 9 on tree, -9.81492 best solution, best possible -27.715683 (0.68 seconds)
Cbc0001I Search completed - best objective -9.814920000000008, took 6789 iterations and 26 nodes (0.72 seconds)
Cbc0032I Strong branching done 440 times (8763 iterations), fathomed 0 nodes and fixed 20 variables
Cbc0035I Maximum depth 10, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

