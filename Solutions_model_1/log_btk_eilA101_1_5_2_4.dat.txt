Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 0.000138185 - average 7.46944e-07, 16 fixed columns
Coin0506I Presolve 147 (-38) rows, 82 (-19) columns and 450 (-114) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 0.27271409 - largest nonzero change 0 ( 0%) - largest zero change 2.8067256e-05
Clp0000I Optimal - objective value 42.873884
Clp0000I Optimal - objective value 42.873884
Coin0511I After Postsolve, objective 42.873884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.873884
Clp0000I Optimal - objective value 42.873884
Clp0000I Optimal - objective value 42.873884
Coin0511I After Postsolve, objective 42.873884, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.87388377 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 12.8383
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.43014 iterations 87
Cbc0038I Solution found of 1.43014
Cbc0038I Relaxing continuous gives 1.43014
Cbc0038I Rounding solution of 0.11922 is better than previous of 1.43014

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 91 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 0.11922 to -15.5726 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.3028
Cbc0038I Pass   2: suminf.    2.77733 (12) obj. -18.3028 iterations 14
Cbc0038I Pass   3: suminf.    2.77733 (12) obj. -18.3028 iterations 0
Cbc0038I Pass   4: suminf.    1.63107 (8) obj. -18.3028 iterations 12
Cbc0038I Pass   5: suminf.    1.63107 (8) obj. -18.3028 iterations 2
Cbc0038I Pass   6: suminf.    1.17432 (4) obj. -18.3028 iterations 15
Cbc0038I Pass   7: suminf.    1.07501 (5) obj. -18.3028 iterations 2
Cbc0038I Pass   8: suminf.    1.90651 (6) obj. -18.3028 iterations 5
Cbc0038I Pass   9: suminf.    1.83299 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  10: suminf.    1.49221 (5) obj. -18.3028 iterations 3
Cbc0038I Pass  11: suminf.    1.07501 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  12: suminf.    1.07501 (5) obj. -18.3028 iterations 0
Cbc0038I Pass  13: suminf.    1.90651 (6) obj. -18.3028 iterations 5
Cbc0038I Pass  14: suminf.    1.83299 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  15: suminf.    1.49221 (5) obj. -18.3028 iterations 3
Cbc0038I Pass  16: suminf.    1.07501 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  17: suminf.    1.07501 (5) obj. -18.3028 iterations 0
Cbc0038I Pass  18: suminf.    1.90651 (6) obj. -18.3028 iterations 5
Cbc0038I Pass  19: suminf.    1.83299 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  20: suminf.    1.49221 (5) obj. -18.3028 iterations 3
Cbc0038I Pass  21: suminf.    1.07501 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  22: suminf.    1.07501 (5) obj. -18.3028 iterations 0
Cbc0038I Pass  23: suminf.    1.90651 (6) obj. -18.3028 iterations 5
Cbc0038I Pass  24: suminf.    1.83299 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  25: suminf.    1.49221 (5) obj. -18.3028 iterations 3
Cbc0038I Pass  26: suminf.    1.07501 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  27: suminf.    1.07501 (5) obj. -18.3028 iterations 0
Cbc0038I Pass  28: suminf.    1.90651 (6) obj. -18.3028 iterations 5
Cbc0038I Pass  29: suminf.    1.83299 (5) obj. -18.3028 iterations 1
Cbc0038I Pass  30: suminf.    1.49221 (5) obj. -18.3028 iterations 3
Cbc0038I Pass  31: suminf.    1.07501 (5) obj. -18.3028 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 95 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -15.5726 to -15.5849 (0.13 seconds)
Cbc0038I Round again with cutoff of -23.217
Cbc0038I Pass  31: suminf.    3.87039 (16) obj. -23.217 iterations 6
Cbc0038I Pass  32: suminf.    3.78670 (14) obj. -23.217 iterations 3
Cbc0038I Pass  33: suminf.    3.77128 (13) obj. -23.217 iterations 7
Cbc0038I Pass  34: suminf.    3.39417 (9) obj. -23.217 iterations 17
Cbc0038I Pass  35: suminf.    2.74597 (8) obj. -23.217 iterations 7
Cbc0038I Pass  36: suminf.    3.64138 (11) obj. -23.217 iterations 13
Cbc0038I Pass  37: suminf.    3.17433 (8) obj. -23.217 iterations 3
Cbc0038I Pass  38: suminf.    2.19783 (7) obj. -23.217 iterations 5
Cbc0038I Pass  39: suminf.    2.19783 (7) obj. -23.217 iterations 1
Cbc0038I Pass  40: suminf.    3.23048 (8) obj. -23.217 iterations 7
Cbc0038I Pass  41: suminf.    2.19016 (7) obj. -23.217 iterations 3
Cbc0038I Pass  42: suminf.    3.17433 (8) obj. -23.217 iterations 11
Cbc0038I Pass  43: suminf.    2.19783 (7) obj. -23.217 iterations 5
Cbc0038I Pass  44: suminf.    2.19783 (7) obj. -23.217 iterations 1
Cbc0038I Pass  45: suminf.    3.23048 (8) obj. -23.217 iterations 7
Cbc0038I Pass  46: suminf.    2.19016 (7) obj. -23.217 iterations 3
Cbc0038I Pass  47: suminf.    3.17433 (8) obj. -23.217 iterations 11
Cbc0038I Pass  48: suminf.    2.19783 (7) obj. -23.217 iterations 5
Cbc0038I Pass  49: suminf.    2.19783 (7) obj. -23.217 iterations 1
Cbc0038I Pass  50: suminf.    3.23048 (8) obj. -23.217 iterations 7
Cbc0038I Pass  51: suminf.    2.19016 (7) obj. -23.217 iterations 3
Cbc0038I Pass  52: suminf.    3.17433 (8) obj. -23.217 iterations 11
Cbc0038I Pass  53: suminf.    2.19783 (7) obj. -23.217 iterations 5
Cbc0038I Pass  54: suminf.    2.19783 (7) obj. -23.217 iterations 1
Cbc0038I Pass  55: suminf.    3.23048 (8) obj. -23.217 iterations 7
Cbc0038I Pass  56: suminf.    2.19016 (7) obj. -23.217 iterations 3
Cbc0038I Pass  57: suminf.    3.17433 (8) obj. -23.217 iterations 11
Cbc0038I Pass  58: suminf.    2.19783 (7) obj. -23.217 iterations 5
Cbc0038I Pass  59: suminf.    2.19783 (7) obj. -23.217 iterations 1
Cbc0038I Pass  60: suminf.    3.23048 (8) obj. -23.217 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 99 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -15.5849 - took 0.17 seconds
Cbc0012I Integer solution of -15.58492 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 91 rows 53 columns
Cbc0031I 35 added rows had average density of 62.485714
Cbc0013I At root node, 35 cuts changed objective from -42.873884 to -34.737119 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21273 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3110 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.58492 best solution, best possible -34.737119 (1.74 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 96 rows 56 columns
Cbc0038I Full problem 185 rows 101 columns, reduced to 36 rows 28 columns
Cbc0010I After 184 nodes, 3 on tree, -15.58492 best solution, best possible -16.549654 (2.44 seconds)
Cbc0001I Search completed - best objective -15.58491999999999, took 14652 iterations and 198 nodes (2.46 seconds)
Cbc0032I Strong branching done 1516 times (26268 iterations), fathomed 28 nodes and fixed 70 variables
Cbc0035I Maximum depth 46, 484 variables fixed on reduced cost
Total time (CPU seconds):       2.35   (Wallclock seconds):       2.48

