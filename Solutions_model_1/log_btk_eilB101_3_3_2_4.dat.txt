Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 180 (-25) rows, 100 (-3) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 4.12969e-05 - average 2.29427e-07, 16 fixed columns
Coin0506I Presolve 150 (-30) rows, 84 (-16) columns and 460 (-92) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.594291 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Coin0511I After Postsolve, objective 38.37862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Clp0000I Optimal - objective value 38.37862
Coin0511I After Postsolve, objective 38.37862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.37861975 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 180 rows, 100 columns (99 integer (99 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.75943
Cbc0038I Solution found of 3.52775
Cbc0038I Relaxing continuous gives -3.98974
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 81 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.98974 to -8.4705 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.4614
Cbc0038I Pass   1: suminf.    1.38637 (32) obj. -11.4614 iterations 61
Cbc0038I Pass   2: suminf.    0.82953 (3) obj. -11.4614 iterations 37
Cbc0038I Pass   3: suminf.    0.57738 (2) obj. -11.4614 iterations 2
Cbc0038I Pass   4: suminf.    0.61616 (4) obj. -11.4614 iterations 7
Cbc0038I Pass   5: suminf.    0.92480 (4) obj. -11.4614 iterations 9
Cbc0038I Pass   6: suminf.    0.60294 (2) obj. -11.4614 iterations 5
Cbc0038I Pass   7: suminf.    0.92053 (3) obj. -11.4614 iterations 5
Cbc0038I Pass   8: suminf.    0.92053 (3) obj. -11.4614 iterations 0
Cbc0038I Pass   9: suminf.    1.34044 (8) obj. -11.4614 iterations 19
Cbc0038I Pass  10: suminf.    0.57637 (6) obj. -11.4614 iterations 11
Cbc0038I Pass  11: suminf.    1.81699 (7) obj. -11.4614 iterations 33
Cbc0038I Pass  12: suminf.    1.81699 (7) obj. -11.4614 iterations 0
Cbc0038I Pass  13: suminf.    2.30064 (6) obj. -11.4614 iterations 8
Cbc0038I Pass  14: suminf.    0.83525 (4) obj. -11.4614 iterations 3
Cbc0038I Pass  15: suminf.    1.31482 (5) obj. -11.4614 iterations 9
Cbc0038I Pass  16: suminf.    1.12519 (4) obj. -11.4614 iterations 2
Cbc0038I Pass  17: suminf.    1.16522 (4) obj. -11.4614 iterations 7
Cbc0038I Pass  18: suminf.    0.70303 (4) obj. -11.4614 iterations 5
Cbc0038I Pass  19: suminf.    1.20590 (4) obj. -11.4614 iterations 7
Cbc0038I Pass  20: suminf.    2.85237 (10) obj. -11.4614 iterations 35
Cbc0038I Pass  21: suminf.    1.79225 (6) obj. -11.4614 iterations 14
Cbc0038I Pass  22: suminf.    1.71321 (6) obj. -11.4614 iterations 14
Cbc0038I Pass  23: suminf.    1.46836 (7) obj. -11.4614 iterations 10
Cbc0038I Pass  24: suminf.    2.02916 (6) obj. -11.4614 iterations 8
Cbc0038I Pass  25: suminf.    1.59389 (5) obj. -11.4614 iterations 6
Cbc0038I Pass  26: suminf.    1.59389 (5) obj. -11.4614 iterations 0
Cbc0038I Pass  27: suminf.    1.70682 (5) obj. -11.4614 iterations 7
Cbc0038I Pass  28: suminf.    1.60039 (5) obj. -11.4614 iterations 3
Cbc0038I Pass  29: suminf.    1.90909 (7) obj. -11.4614 iterations 11
Cbc0038I Pass  30: suminf.    1.59389 (5) obj. -11.4614 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 101 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -8.4705 to -10.5884 (0.11 seconds)
Cbc0038I Round again with cutoff of -16.8448
Cbc0038I Pass  30: suminf.    2.38526 (32) obj. -16.8448 iterations 0
Cbc0038I Pass  31: suminf.    2.92907 (9) obj. -16.8448 iterations 35
Cbc0038I Pass  32: suminf.    1.51362 (7) obj. -16.8448 iterations 10
Cbc0038I Pass  33: suminf.    1.68158 (4) obj. -16.8448 iterations 9
Cbc0038I Pass  34: suminf.    1.41384 (5) obj. -16.8448 iterations 10
Cbc0038I Pass  35: suminf.    1.31674 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  36: suminf.    1.27113 (4) obj. -16.8448 iterations 3
Cbc0038I Pass  37: suminf.    1.41384 (5) obj. -16.8448 iterations 3
Cbc0038I Pass  38: suminf.    1.39554 (5) obj. -16.8448 iterations 16
Cbc0038I Pass  39: suminf.    1.10474 (5) obj. -16.8448 iterations 9
Cbc0038I Pass  40: suminf.    1.72853 (6) obj. -16.8448 iterations 14
Cbc0038I Pass  41: suminf.    1.72853 (6) obj. -16.8448 iterations 0
Cbc0038I Pass  42: suminf.    1.97648 (6) obj. -16.8448 iterations 7
Cbc0038I Pass  43: suminf.    1.30302 (5) obj. -16.8448 iterations 10
Cbc0038I Pass  44: suminf.    1.30179 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  45: suminf.    1.68809 (5) obj. -16.8448 iterations 13
Cbc0038I Pass  46: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  47: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  48: suminf.    1.51785 (5) obj. -16.8448 iterations 7
Cbc0038I Pass  49: suminf.    1.21262 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  50: suminf.    1.19054 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  51: suminf.    1.68809 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  52: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  53: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  54: suminf.    1.51785 (5) obj. -16.8448 iterations 7
Cbc0038I Pass  55: suminf.    1.21262 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  56: suminf.    1.19054 (5) obj. -16.8448 iterations 1
Cbc0038I Pass  57: suminf.    1.68809 (5) obj. -16.8448 iterations 6
Cbc0038I Pass  58: suminf.    1.42963 (5) obj. -16.8448 iterations 2
Cbc0038I Pass  59: suminf.    1.42963 (5) obj. -16.8448 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 100 columns, reduced to 96 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -10.5884 - took 0.15 seconds
Cbc0012I Integer solution of -10.58837 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 180 rows 100 columns, reduced to 82 rows 48 columns
Cbc0012I Integer solution of -10.91507 found by RINS after 0 iterations and 0 nodes (0.22 seconds)
Cbc0031I 32 added rows had average density of 67.3125
Cbc0013I At root node, 32 cuts changed objective from -38.37862 to -32.00232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14338 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1892 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 99.7 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.91507 best solution, best possible -32.00232 (1.36 seconds)
Cbc0038I Full problem 180 rows 100 columns, reduced to 14 rows 12 columns
Cbc0001I Search completed - best objective -10.91507, took 12007 iterations and 82 nodes (1.72 seconds)
Cbc0032I Strong branching done 964 times (14334 iterations), fathomed 5 nodes and fixed 69 variables
Cbc0035I Maximum depth 14, 283 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       1.73

