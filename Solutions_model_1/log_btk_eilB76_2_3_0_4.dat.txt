Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 61 (-17) columns and 332 (-121) elements
Clp1000I sum of infeasibilities 0 - average 0, 58 fixed columns
Coin0506I Presolve 4 (-104) rows, 3 (-58) columns and 8 (-324) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 19411.883
Clp0000I Optimal - objective value 19411.883
Coin0511I After Postsolve, objective 19411.883, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1260768 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 19411.883
Clp0000I Optimal - objective value 19411.883
Clp0000I Optimal - objective value 19411.883
Coin0511I After Postsolve, objective 19411.883, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19411.88339 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 61 columns (60 integer (60 of which binary)) and 350 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.866%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.425355
Cbc0038I Pass   1: suminf.    0.39286 (1) obj. -19314.8 iterations 6
Cbc0038I Solution found of -16324.4
Cbc0038I Relaxing continuous gives -16324.4
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 61 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -16324.4 to -17303.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -17514.4
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.39286 (1) obj. -19314.8 iterations 0
Cbc0038I Pass   3: suminf.    0.22049 (1) obj. -17514.4 iterations 2
Cbc0038I Pass   4: suminf.    0.48485 (1) obj. -19104.6 iterations 1
Cbc0038I Pass   5: suminf.    0.74593 (3) obj. -17514.4 iterations 8
Cbc0038I Pass   6: suminf.    0.17536 (2) obj. -17895.9 iterations 6
Cbc0038I Pass   7: suminf.    0.49759 (2) obj. -17514.4 iterations 9
Cbc0038I Pass   8: suminf.    0.49759 (2) obj. -17514.4 iterations 0
Cbc0038I Pass   9: suminf.    0.29153 (2) obj. -18128.7 iterations 3
Cbc0038I Pass  10: suminf.    0.27027 (1) obj. -18085.6 iterations 2
Cbc0038I Pass  11: suminf.    0.34725 (5) obj. -18049.4 iterations 8
Cbc0038I Pass  12: suminf.    0.27027 (1) obj. -18085.6 iterations 11
Cbc0038I Pass  13: suminf.    0.17536 (2) obj. -17895.9 iterations 6
Cbc0038I Pass  14: suminf.    0.17536 (2) obj. -17895.9 iterations 3
Cbc0038I Pass  15: suminf.    0.49759 (2) obj. -17514.4 iterations 7
Cbc0038I Pass  16: suminf.    0.49759 (2) obj. -17514.4 iterations 0
Cbc0038I Pass  17: suminf.    0.29153 (2) obj. -18128.7 iterations 1
Cbc0038I Pass  18: suminf.    0.27027 (1) obj. -18085.6 iterations 2
Cbc0038I Pass  19: suminf.    0.71311 (3) obj. -17514.4 iterations 14
Cbc0038I Pass  20: suminf.    0.29131 (2) obj. -17514.4 iterations 11
Cbc0038I Pass  21: suminf.    0.50282 (2) obj. -17862 iterations 4
Cbc0038I Pass  22: suminf.    0.40541 (1) obj. -17665.8 iterations 1
Cbc0038I Pass  23: suminf.    0.48678 (2) obj. -17514.4 iterations 2
Cbc0038I Pass  24: suminf.    0.84386 (4) obj. -17514.4 iterations 9
Cbc0038I Pass  25: suminf.    0.62570 (2) obj. -17514.4 iterations 5
Cbc0038I Pass  26: suminf.    0.50128 (2) obj. -17514.4 iterations 6
Cbc0038I Pass  27: suminf.    0.28571 (1) obj. -17596.1 iterations 4
Cbc0038I Pass  28: suminf.    0.67853 (2) obj. -17514.4 iterations 2
Cbc0038I Pass  29: suminf.    0.28571 (1) obj. -17596.1 iterations 1
Cbc0038I Pass  30: suminf.    0.93746 (3) obj. -17514.4 iterations 5
Cbc0038I Pass  31: suminf.    0.93746 (3) obj. -17514.4 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 61 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -17303.5 to -18296.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -18519.6
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39286 (1) obj. -19314.8 iterations 0
Cbc0038I Pass  32: suminf.    0.40676 (1) obj. -18519.6 iterations 2
Cbc0038I Pass  33: suminf.    0.48485 (1) obj. -19104.6 iterations 1
Cbc0038I Pass  34: suminf.    0.77941 (2) obj. -18625.6 iterations 8
Cbc0038I Pass  35: suminf.    0.72698 (2) obj. -18519.6 iterations 3
Cbc0038I Pass  36: suminf.    0.76198 (2) obj. -18519.6 iterations 5
Cbc0038I Pass  37: suminf.    0.86475 (2) obj. -18519.6 iterations 4
Cbc0038I Pass  38: suminf.    0.86475 (2) obj. -18519.6 iterations 1
Cbc0038I Pass  39: suminf.    0.86475 (2) obj. -18519.6 iterations 1
Cbc0038I Pass  40: suminf.    0.86475 (2) obj. -18519.6 iterations 1
Cbc0038I Pass  41: suminf.    0.77941 (2) obj. -18625.6 iterations 4
Cbc0038I Pass  42: suminf.    0.77941 (2) obj. -18625.6 iterations 1
Cbc0038I Pass  43: suminf.    0.92661 (2) obj. -18519.6 iterations 6
Cbc0038I Pass  44: suminf.    0.75070 (3) obj. -18519.6 iterations 5
Cbc0038I Pass  45: suminf.    1.28144 (4) obj. -18519.6 iterations 5
Cbc0038I Pass  46: suminf.    1.28144 (4) obj. -18519.6 iterations 2
Cbc0038I Pass  47: suminf.    0.30586 (2) obj. -18519.6 iterations 3
Cbc0038I Pass  48: suminf.    0.30586 (2) obj. -18519.6 iterations 0
Cbc0038I Pass  49: suminf.    0.39286 (1) obj. -19314.8 iterations 2
Cbc0038I Pass  50: suminf.    0.39286 (1) obj. -19314.8 iterations 0
Cbc0038I Pass  51: suminf.    0.40676 (1) obj. -18519.6 iterations 2
Cbc0038I Pass  52: suminf.    0.48485 (1) obj. -19104.6 iterations 1
Cbc0038I Pass  53: suminf.    0.48485 (1) obj. -19104.6 iterations 2
Cbc0038I Pass  54: suminf.    0.48485 (1) obj. -19104.6 iterations 2
Cbc0038I Pass  55: suminf.    0.75070 (3) obj. -18519.6 iterations 4
Cbc0038I Pass  56: suminf.    0.72698 (2) obj. -18519.6 iterations 2
Cbc0038I Pass  57: suminf.    0.76198 (2) obj. -18519.6 iterations 4
Cbc0038I Pass  58: suminf.    0.86475 (2) obj. -18519.6 iterations 3
Cbc0038I Pass  59: suminf.    0.86475 (2) obj. -18519.6 iterations 0
Cbc0038I Pass  60: suminf.    0.86475 (2) obj. -18519.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 61 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -18296.5 - took 0.02 seconds
Cbc0012I Integer solution of -18296.54 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 106 rows 61 columns, reduced to 4 rows 4 columns
Cbc0031I 4 added rows had average density of 9.75
Cbc0013I At root node, 31 cuts changed objective from -19411.883 to -18296.54 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -18296.54, took 43 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

