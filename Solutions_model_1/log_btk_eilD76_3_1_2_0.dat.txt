Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 372 (-81) elements
Clp1000I sum of infeasibilities 0.000406707 - average 3.30656e-06, 28 fixed columns
Coin0506I Presolve 58 (-65) rows, 33 (-33) columns and 176 (-196) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 283.68592
Clp0000I Optimal - objective value 283.68592
Coin0511I After Postsolve, objective 283.68592, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.41629239 - largest nonzero change 0 ( 0%) - largest zero change 2.6265687e-05
Clp0000I Optimal - objective value 283.68592
Clp0000I Optimal - objective value 283.68592
Clp0000I Optimal - objective value 283.68592
Coin0511I After Postsolve, objective 283.68592, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 283.6859162 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 123 rows, 66 columns (65 integer (65 of which binary)) and 372 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.378%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 9.29921
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -87.4016 iterations 27
Cbc0038I Solution found of -87.4016
Cbc0038I Relaxing continuous gives -87.4016
Cbc0038I Rounding solution of -173.405 is better than previous of -87.4016

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -173.405 to -246.481 (0.04 seconds)
Cbc0038I Round again with cutoff of -250.202
Cbc0038I Pass   2: suminf.    2.50678 (9) obj. -250.202 iterations 16
Cbc0038I Pass   3: suminf.    0.53768 (2) obj. -250.202 iterations 18
Cbc0038I Pass   4: suminf.    0.51918 (2) obj. -250.202 iterations 8
Cbc0038I Pass   5: suminf.    0.36710 (1) obj. -250.202 iterations 9
Cbc0038I Pass   6: suminf.    1.73781 (9) obj. -250.202 iterations 17
Cbc0038I Pass   7: suminf.    0.82923 (5) obj. -250.202 iterations 14
Cbc0038I Pass   8: suminf.    0.24733 (3) obj. -250.202 iterations 9
Cbc0038I Pass   9: suminf.    0.18182 (1) obj. -250.202 iterations 6
Cbc0038I Pass  10: suminf.    0.20741 (1) obj. -250.202 iterations 3
Cbc0038I Pass  11: suminf.    1.69225 (8) obj. -250.202 iterations 10
Cbc0038I Pass  12: suminf.    1.01201 (5) obj. -250.202 iterations 12
Cbc0038I Pass  13: suminf.    0.51588 (3) obj. -250.202 iterations 6
Cbc0038I Pass  14: suminf.    0.89514 (6) obj. -250.202 iterations 11
Cbc0038I Pass  15: suminf.    0.89514 (6) obj. -250.202 iterations 0
Cbc0038I Pass  16: suminf.    1.38306 (5) obj. -250.202 iterations 8
Cbc0038I Pass  17: suminf.    0.68644 (5) obj. -250.202 iterations 7
Cbc0038I Pass  18: suminf.    0.98872 (7) obj. -250.202 iterations 15
Cbc0038I Pass  19: suminf.    2.17341 (8) obj. -250.202 iterations 21
Cbc0038I Pass  20: suminf.    0.98300 (4) obj. -250.202 iterations 3
Cbc0038I Pass  21: suminf.    0.21417 (3) obj. -250.202 iterations 5
Cbc0038I Pass  22: suminf.    0.91487 (9) obj. -250.202 iterations 16
Cbc0038I Pass  23: suminf.    0.90582 (9) obj. -250.202 iterations 2
Cbc0038I Pass  24: suminf.    1.44766 (5) obj. -250.202 iterations 29
Cbc0038I Pass  25: suminf.    1.44766 (5) obj. -250.202 iterations 1
Cbc0038I Pass  26: suminf.    1.42445 (4) obj. -250.202 iterations 12
Cbc0038I Pass  27: suminf.    0.37190 (3) obj. -250.202 iterations 13
Cbc0038I Pass  28: suminf.    0.37190 (3) obj. -250.202 iterations 0
Cbc0038I Pass  29: suminf.    1.08710 (7) obj. -250.202 iterations 12
Cbc0038I Pass  30: suminf.    1.08710 (7) obj. -250.202 iterations 0
Cbc0038I Pass  31: suminf.    0.46621 (4) obj. -250.202 iterations 12
Cbc0038I Rounding solution of -249.172 is better than previous of -246.481

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 51 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -249.172 to -250.972 (0.09 seconds)
Cbc0038I Round again with cutoff of -257.515
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.77700 (9) obj. -257.515 iterations 0
Cbc0038I Pass  32: suminf.    0.84398 (7) obj. -257.515 iterations 10
Cbc0038I Pass  33: suminf.    1.27758 (7) obj. -257.515 iterations 13
Cbc0038I Pass  34: suminf.    0.64361 (4) obj. -257.515 iterations 5
Cbc0038I Pass  35: suminf.    1.22646 (6) obj. -257.515 iterations 7
Cbc0038I Pass  36: suminf.    1.04704 (4) obj. -257.515 iterations 1
Cbc0038I Pass  37: suminf.    0.67714 (5) obj. -257.515 iterations 8
Cbc0038I Pass  38: suminf.    0.38436 (6) obj. -257.515 iterations 13
Cbc0038I Pass  39: suminf.    0.29747 (3) obj. -257.515 iterations 7
Cbc0038I Pass  40: suminf.    0.87933 (5) obj. -257.515 iterations 13
Cbc0038I Pass  41: suminf.    0.84398 (7) obj. -257.515 iterations 8
Cbc0038I Pass  42: suminf.    1.27758 (7) obj. -257.515 iterations 14
Cbc0038I Pass  43: suminf.    0.64361 (4) obj. -257.515 iterations 5
Cbc0038I Pass  44: suminf.    1.22646 (6) obj. -257.515 iterations 7
Cbc0038I Pass  45: suminf.    1.04704 (4) obj. -257.515 iterations 1
Cbc0038I Pass  46: suminf.    0.67714 (5) obj. -257.515 iterations 9
Cbc0038I Pass  47: suminf.    0.38436 (6) obj. -257.515 iterations 14
Cbc0038I Pass  48: suminf.    0.29747 (3) obj. -257.515 iterations 8
Cbc0038I Pass  49: suminf.    0.87933 (5) obj. -257.515 iterations 14
Cbc0038I Pass  50: suminf.    0.84398 (7) obj. -257.515 iterations 9
Cbc0038I Pass  51: suminf.    1.27758 (7) obj. -257.515 iterations 14
Cbc0038I Pass  52: suminf.    0.64361 (4) obj. -257.515 iterations 5
Cbc0038I Pass  53: suminf.    1.22646 (6) obj. -257.515 iterations 7
Cbc0038I Pass  54: suminf.    1.04704 (4) obj. -257.515 iterations 1
Cbc0038I Pass  55: suminf.    0.67714 (5) obj. -257.515 iterations 9
Cbc0038I Pass  56: suminf.    0.38436 (6) obj. -257.515 iterations 14
Cbc0038I Pass  57: suminf.    0.29747 (3) obj. -257.515 iterations 8
Cbc0038I Pass  58: suminf.    0.87933 (5) obj. -257.515 iterations 14
Cbc0038I Pass  59: suminf.    0.84398 (7) obj. -257.515 iterations 9
Cbc0038I Pass  60: suminf.    1.27758 (7) obj. -257.515 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -250.972 - took 0.10 seconds
Cbc0012I Integer solution of -250.97174 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 123 rows 66 columns, reduced to 47 rows 27 columns
Cbc0031I 9 added rows had average density of 22.222222
Cbc0013I At root node, 9 cuts changed objective from -283.68592 to -271.29993 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 204 row cuts average 3.1 elements, 12 column cuts (12 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 58.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -251.51675 found by DiveCoefficient after 190 iterations and 17 nodes (0.18 seconds)
Cbc0012I Integer solution of -254.10625 found by DiveCoefficient after 223 iterations and 28 nodes (0.18 seconds)
Cbc0038I Full problem 123 rows 66 columns, reduced to 5 rows 8 columns
Cbc0038I Full problem 132 rows 66 columns, reduced to 97 rows 53 columns
Cbc0044I Reduced cost fixing - 97 rows, 53 columns - restarting search
Cbc0012I Integer solution of -254.10625 found by Previous solution after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 97 rows 53 columns, reduced to 49 rows 28 columns
Cbc0031I 8 added rows had average density of 42.625
Cbc0013I At root node, 8 cuts changed objective from -283.68592 to -266.21667 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 774 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 271 row cuts average 48.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 51.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.767 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 109 row cuts average 15.8 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -254.10625 best solution, best possible -266.21665 (1.79 seconds)
Cbc0038I Full problem 97 rows 53 columns, reduced to 5 rows 8 columns
Cbc0001I Search completed - best objective -254.10625, took 2111 iterations and 50 nodes (1.86 seconds)
Cbc0032I Strong branching done 306 times (1626 iterations), fathomed 9 nodes and fixed 9 variables
Cbc0035I Maximum depth 8, 123 variables fixed on reduced cost
Cbc0038I Probing was tried 154 times and created 851 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Cbc0038I Gomory was tried 130 times and created 279 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Cbc0038I Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Cbc0038I Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I TwoMirCuts was tried 100 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.767 seconds)
Cbc0038I Stored from first was tried 146 times and created 122 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -254.10625, took 2478 iterations and 100 nodes (1.86 seconds)
Cbc0032I Strong branching done 278 times (1412 iterations), fathomed 17 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 133 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.87

