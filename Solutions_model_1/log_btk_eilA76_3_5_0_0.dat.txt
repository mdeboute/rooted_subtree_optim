Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 61 (-17) columns and 335 (-118) elements
Clp1000I sum of infeasibilities 5.00567e-05 - average 4.55061e-07, 15 fixed columns
Coin0506I Presolve 73 (-37) rows, 42 (-19) columns and 223 (-112) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.32935881 - largest nonzero change 0 ( 0%) - largest zero change 2.6938322e-05
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Coin0511I After Postsolve, objective 94.203531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Clp0000I Optimal - objective value 94.203531
Coin0511I After Postsolve, objective 94.203531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.20353129 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 61 columns (60 integer (60 of which binary)) and 336 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.466%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.59707
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.3075 iterations 34
Cbc0038I Solution found of -28.3075
Cbc0038I Relaxing continuous gives -28.3075
Cbc0038I Rounding solution of -38.6499 is better than previous of -28.3075

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -38.6499 to -70.3816 (0.03 seconds)
Cbc0038I Round again with cutoff of -72.7639
Cbc0038I Pass   2: suminf.    1.70705 (10) obj. -72.7639 iterations 12
Cbc0038I Pass   3: suminf.    1.52747 (5) obj. -72.7639 iterations 3
Cbc0038I Pass   4: suminf.    1.17056 (4) obj. -72.7639 iterations 6
Cbc0038I Pass   5: suminf.    0.75074 (3) obj. -72.7639 iterations 4
Cbc0038I Pass   6: suminf.    1.14544 (3) obj. -72.7639 iterations 1
Cbc0038I Pass   7: suminf.    0.91178 (4) obj. -72.7639 iterations 5
Cbc0038I Pass   8: suminf.    0.84437 (3) obj. -72.7639 iterations 5
Cbc0038I Pass   9: suminf.    0.37302 (2) obj. -72.7639 iterations 3
Cbc0038I Pass  10: suminf.    0.28653 (2) obj. -72.7639 iterations 1
Cbc0038I Pass  11: suminf.    0.74289 (5) obj. -72.7639 iterations 9
Cbc0038I Pass  12: suminf.    0.81934 (2) obj. -72.7639 iterations 7
Cbc0038I Pass  13: suminf.    0.59834 (3) obj. -72.7639 iterations 4
Cbc0038I Pass  14: suminf.    1.08197 (3) obj. -72.7639 iterations 2
Cbc0038I Pass  15: suminf.    2.62409 (9) obj. -72.7639 iterations 12
Cbc0038I Pass  16: suminf.    1.83319 (7) obj. -72.7639 iterations 10
Cbc0038I Pass  17: suminf.    2.53540 (7) obj. -72.7639 iterations 12
Cbc0038I Pass  18: suminf.    0.68806 (6) obj. -72.7639 iterations 5
Cbc0038I Pass  19: suminf.    0.91021 (4) obj. -72.7639 iterations 6
Cbc0038I Pass  20: suminf.    0.89070 (4) obj. -72.7639 iterations 3
Cbc0038I Pass  21: suminf.    1.17647 (4) obj. -72.7639 iterations 4
Cbc0038I Pass  22: suminf.    1.02504 (5) obj. -72.7639 iterations 4
Cbc0038I Pass  23: suminf.    4.44187 (16) obj. -72.7639 iterations 27
Cbc0038I Pass  24: suminf.    2.46054 (9) obj. -72.7639 iterations 19
Cbc0038I Pass  25: suminf.    1.32512 (5) obj. -72.7639 iterations 6
Cbc0038I Pass  26: suminf.    1.32512 (5) obj. -72.7639 iterations 0
Cbc0038I Pass  27: suminf.    1.49482 (6) obj. -72.7639 iterations 4
Cbc0038I Pass  28: suminf.    1.30616 (6) obj. -72.7639 iterations 1
Cbc0038I Pass  29: suminf.    1.97334 (6) obj. -72.7639 iterations 8
Cbc0038I Pass  30: suminf.    1.53879 (6) obj. -72.7639 iterations 5
Cbc0038I Pass  31: suminf.    1.63464 (6) obj. -72.7639 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -70.3816 - took 0.04 seconds
Cbc0012I Integer solution of -70.38163 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 110 rows 61 columns, reduced to 41 rows 24 columns
Cbc0031I 18 added rows had average density of 32.666667
Cbc0013I At root node, 18 cuts changed objective from -94.203531 to -83.725242 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3329 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1066 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 176 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0012I Integer solution of -70.49287 found by rounding after 4035 iterations and 15 nodes (0.44 seconds)
Cbc0016I Integer solution of -71.79663 found by strong branching after 4262 iterations and 30 nodes (0.47 seconds)
Cbc0001I Search completed - best objective -71.7966296, took 4368 iterations and 32 nodes (0.47 seconds)
Cbc0032I Strong branching done 316 times (5083 iterations), fathomed 5 nodes and fixed 20 variables
Cbc0035I Maximum depth 8, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.47

