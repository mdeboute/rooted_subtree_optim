Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 2.25896e-05 - average 1.69847e-07, 10 fixed columns
Coin0506I Presolve 114 (-19) rows, 66 (-10) columns and 353 (-57) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 71.601058
Clp0000I Optimal - objective value 71.601058
Coin0511I After Postsolve, objective 71.601058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.601058
Clp0000I Optimal - objective value 71.601058
Clp0000I Optimal - objective value 71.601058
Coin0511I After Postsolve, objective 71.601058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.60105842 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 11.4693
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.63028 iterations 64
Cbc0038I Solution found of 8.63028
Cbc0038I Relaxing continuous gives 8.63028
Cbc0038I Rounding solution of -28.5125 is better than previous of 8.63028

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -28.5125 to -35.5661 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.1697
Cbc0038I Pass   2: suminf.    4.27605 (13) obj. -39.1697 iterations 16
Cbc0038I Pass   3: suminf.    4.27605 (13) obj. -39.1697 iterations 0
Cbc0038I Pass   4: suminf.    1.81475 (7) obj. -39.1697 iterations 20
Cbc0038I Pass   5: suminf.    1.47403 (6) obj. -39.1697 iterations 1
Cbc0038I Pass   6: suminf.    2.75603 (8) obj. -39.1697 iterations 7
Cbc0038I Pass   7: suminf.    2.57062 (6) obj. -39.1697 iterations 1
Cbc0038I Pass   8: suminf.    1.36540 (6) obj. -39.1697 iterations 5
Cbc0038I Pass   9: suminf.    0.58773 (5) obj. -39.1697 iterations 3
Cbc0038I Pass  10: suminf.    3.07481 (8) obj. -39.1697 iterations 23
Cbc0038I Pass  11: suminf.    1.71597 (7) obj. -39.1697 iterations 8
Cbc0038I Pass  12: suminf.    1.35594 (6) obj. -39.1697 iterations 3
Cbc0038I Pass  13: suminf.    1.35594 (6) obj. -39.1697 iterations 0
Cbc0038I Pass  14: suminf.    1.71611 (4) obj. -39.1697 iterations 8
Cbc0038I Pass  15: suminf.    0.99208 (6) obj. -39.1697 iterations 4
Cbc0038I Pass  16: suminf.    0.99155 (5) obj. -39.1697 iterations 1
Cbc0038I Pass  17: suminf.    1.76157 (6) obj. -39.1697 iterations 5
Cbc0038I Pass  18: suminf.    1.44185 (5) obj. -39.1697 iterations 2
Cbc0038I Pass  19: suminf.    1.44185 (5) obj. -39.1697 iterations 0
Cbc0038I Pass  20: suminf.    1.65037 (4) obj. -39.1697 iterations 3
Cbc0038I Pass  21: suminf.    0.99208 (6) obj. -39.1697 iterations 3
Cbc0038I Pass  22: suminf.    0.99155 (5) obj. -39.1697 iterations 1
Cbc0038I Pass  23: suminf.    1.76157 (6) obj. -39.1697 iterations 5
Cbc0038I Pass  24: suminf.    1.44185 (5) obj. -39.1697 iterations 2
Cbc0038I Pass  25: suminf.    1.44185 (5) obj. -39.1697 iterations 0
Cbc0038I Pass  26: suminf.    1.65037 (4) obj. -39.1697 iterations 3
Cbc0038I Pass  27: suminf.    0.99208 (6) obj. -39.1697 iterations 3
Cbc0038I Pass  28: suminf.    0.99155 (5) obj. -39.1697 iterations 1
Cbc0038I Pass  29: suminf.    1.76157 (6) obj. -39.1697 iterations 5
Cbc0038I Pass  30: suminf.    1.44185 (5) obj. -39.1697 iterations 2
Cbc0038I Pass  31: suminf.    1.44185 (5) obj. -39.1697 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 78 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -35.5661 to -42.3101 (0.10 seconds)
Cbc0038I Round again with cutoff of -48.1684
Cbc0038I Pass  31: suminf.    5.38978 (17) obj. -48.1684 iterations 3
Cbc0038I Pass  32: suminf.    5.33064 (13) obj. -48.1684 iterations 2
Cbc0038I Pass  33: suminf.    3.98045 (12) obj. -48.1684 iterations 4
Cbc0038I Pass  34: suminf.    1.80496 (7) obj. -48.1684 iterations 6
Cbc0038I Pass  35: suminf.    2.73664 (7) obj. -48.1684 iterations 3
Cbc0038I Pass  36: suminf.    1.83672 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  37: suminf.    1.83672 (7) obj. -48.1684 iterations 0
Cbc0038I Pass  38: suminf.    2.79445 (7) obj. -48.1684 iterations 6
Cbc0038I Pass  39: suminf.    2.06018 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  40: suminf.    2.73664 (7) obj. -48.1684 iterations 13
Cbc0038I Pass  41: suminf.    1.83672 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  42: suminf.    1.83672 (7) obj. -48.1684 iterations 0
Cbc0038I Pass  43: suminf.    2.79445 (7) obj. -48.1684 iterations 6
Cbc0038I Pass  44: suminf.    2.06018 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  45: suminf.    2.73664 (7) obj. -48.1684 iterations 13
Cbc0038I Pass  46: suminf.    1.83672 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  47: suminf.    1.83672 (7) obj. -48.1684 iterations 0
Cbc0038I Pass  48: suminf.    2.79445 (7) obj. -48.1684 iterations 6
Cbc0038I Pass  49: suminf.    2.06018 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  50: suminf.    2.73664 (7) obj. -48.1684 iterations 13
Cbc0038I Pass  51: suminf.    1.83672 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  52: suminf.    1.83672 (7) obj. -48.1684 iterations 0
Cbc0038I Pass  53: suminf.    2.79445 (7) obj. -48.1684 iterations 6
Cbc0038I Pass  54: suminf.    2.06018 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  55: suminf.    2.73664 (7) obj. -48.1684 iterations 13
Cbc0038I Pass  56: suminf.    1.83672 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  57: suminf.    1.83672 (7) obj. -48.1684 iterations 0
Cbc0038I Pass  58: suminf.    2.79445 (7) obj. -48.1684 iterations 6
Cbc0038I Pass  59: suminf.    2.06018 (7) obj. -48.1684 iterations 2
Cbc0038I Pass  60: suminf.    2.73664 (7) obj. -48.1684 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -42.3101 to -42.4752 (0.16 seconds)
Cbc0038I Round again with cutoff of -55.1982
Cbc0038I Pass  60: suminf.    6.29467 (17) obj. -55.1982 iterations 0
Cbc0038I Pass  61: suminf.    5.26142 (13) obj. -55.1982 iterations 2
Cbc0038I Pass  62: suminf.    3.74782 (12) obj. -55.1982 iterations 9
Cbc0038I Pass  63: suminf.    3.95921 (10) obj. -55.1982 iterations 8
Cbc0038I Pass  64: suminf.    3.07502 (9) obj. -55.1982 iterations 5
Cbc0038I Pass  65: suminf.    3.28968 (10) obj. -55.1982 iterations 9
Cbc0038I Pass  66: suminf.    3.14248 (12) obj. -55.1982 iterations 5
Cbc0038I Pass  67: suminf.    3.14248 (12) obj. -55.1982 iterations 2
Cbc0038I Pass  68: suminf.    4.33359 (12) obj. -55.1982 iterations 7
Cbc0038I Pass  69: suminf.    4.16244 (12) obj. -55.1982 iterations 3
Cbc0038I Pass  70: suminf.    3.49543 (12) obj. -55.1982 iterations 1
Cbc0038I Pass  71: suminf.    2.54479 (13) obj. -55.1982 iterations 1
Cbc0038I Pass  72: suminf.    2.52441 (13) obj. -55.1982 iterations 1
Cbc0038I Pass  73: suminf.    4.09325 (13) obj. -55.1982 iterations 9
Cbc0038I Pass  74: suminf.    3.36121 (11) obj. -55.1982 iterations 5
Cbc0038I Pass  75: suminf.    3.92885 (10) obj. -55.1982 iterations 5
Cbc0038I Pass  76: suminf.    2.54177 (12) obj. -55.1982 iterations 6
Cbc0038I Pass  77: suminf.    2.52441 (13) obj. -55.1982 iterations 1
Cbc0038I Pass  78: suminf.    6.69729 (15) obj. -55.1982 iterations 12
Cbc0038I Pass  79: suminf.    3.17583 (10) obj. -55.1982 iterations 11
Cbc0038I Pass  80: suminf.    3.95921 (10) obj. -55.1982 iterations 7
Cbc0038I Pass  81: suminf.    3.07502 (9) obj. -55.1982 iterations 5
Cbc0038I Pass  82: suminf.    3.28968 (10) obj. -55.1982 iterations 9
Cbc0038I Pass  83: suminf.    3.14248 (12) obj. -55.1982 iterations 5
Cbc0038I Pass  84: suminf.    3.14248 (12) obj. -55.1982 iterations 2
Cbc0038I Pass  85: suminf.    4.33359 (12) obj. -55.1982 iterations 7
Cbc0038I Pass  86: suminf.    4.16244 (12) obj. -55.1982 iterations 3
Cbc0038I Pass  87: suminf.    3.49543 (12) obj. -55.1982 iterations 1
Cbc0038I Pass  88: suminf.    2.54479 (13) obj. -55.1982 iterations 1
Cbc0038I Pass  89: suminf.    2.52441 (13) obj. -55.1982 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -42.4752 - took 0.18 seconds
Cbc0012I Integer solution of -42.47519 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 76 rows 45 columns
Cbc0012I Integer solution of -42.54777 found by RINS after 0 iterations and 0 nodes (0.26 seconds)
Cbc0031I 28 added rows had average density of 59.678571
Cbc0013I At root node, 28 cuts changed objective from -71.601058 to -60.607879 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9820 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1405 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -42.54777 best solution, best possible -60.607879 (1.03 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 133 rows 76 columns, reduced to 4 rows 6 columns
Cbc0001I Search completed - best objective -42.54777, took 9905 iterations and 178 nodes (1.56 seconds)
Cbc0032I Strong branching done 1352 times (18545 iterations), fathomed 43 nodes and fixed 56 variables
Cbc0035I Maximum depth 22, 400 variables fixed on reduced cost
Total time (CPU seconds):       1.48   (Wallclock seconds):       1.57

