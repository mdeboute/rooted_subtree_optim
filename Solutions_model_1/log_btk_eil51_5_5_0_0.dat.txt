Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 49 (-4) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 1.51057e-05 - average 1.71655e-07, 3 fixed columns
Coin0506I Presolve 82 (-6) rows, 46 (-3) columns and 248 (-18) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Coin0511I After Postsolve, objective 39.092743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Coin0511I After Postsolve, objective 39.092743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.09274272 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 49 columns (48 integer (48 of which binary)) and 269 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.897%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.3408
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.10145 iterations 33
Cbc0038I Solution found of 5.10145
Cbc0038I Relaxing continuous gives 5.10145
Cbc0038I Rounding solution of -3.66131 is better than previous of 5.10145

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 49 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.66131 to -7.39935 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.5688
Cbc0038I Pass   2: suminf.    1.85674 (9) obj. -10.5688 iterations 10
Cbc0038I Pass   3: suminf.    1.79735 (5) obj. -10.5688 iterations 12
Cbc0038I Pass   4: suminf.    1.14881 (6) obj. -10.5688 iterations 8
Cbc0038I Pass   5: suminf.    1.07676 (5) obj. -10.5688 iterations 5
Cbc0038I Pass   6: suminf.    1.76679 (5) obj. -10.5688 iterations 4
Cbc0038I Pass   7: suminf.    1.17005 (7) obj. -10.5688 iterations 10
Cbc0038I Pass   8: suminf.    1.53415 (6) obj. -10.5688 iterations 14
Cbc0038I Pass   9: suminf.    1.22981 (5) obj. -10.5688 iterations 9
Cbc0038I Pass  10: suminf.    1.07724 (5) obj. -10.5688 iterations 6
Cbc0038I Pass  11: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  12: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  13: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  14: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  15: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  16: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  17: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  18: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  19: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  20: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  21: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  22: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  23: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  24: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  25: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  26: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  27: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  28: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  29: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  30: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  31: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 49 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -7.39935 - took 0.06 seconds
Cbc0012I Integer solution of -7.39935 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 49 columns, reduced to 59 rows 33 columns
Cbc0031I 21 added rows had average density of 29.142857
Cbc0013I At root node, 21 cuts changed objective from -39.092743 to -28.901905 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7101 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1242 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0016I Integer solution of -7.79328 found by strong branching after 6873 iterations and 20 nodes (0.67 seconds)
Cbc0010I After 32 nodes, 1 on tree, -7.79328 best solution, best possible -15.601264 (0.71 seconds)
Cbc0038I Full problem 88 rows 49 columns, reduced to 18 rows 15 columns
Cbc0001I Search completed - best objective -7.793279999999996, took 8477 iterations and 54 nodes (0.83 seconds)
Cbc0032I Strong branching done 740 times (10814 iterations), fathomed 1 nodes and fixed 25 variables
Cbc0035I Maximum depth 14, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.83

