Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 61 (-17) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 0.000259684 - average 2.42695e-06, 34 fixed columns
Coin0506I Presolve 30 (-77) rows, 21 (-40) columns and 96 (-234) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Coin0511I After Postsolve, objective 136.02458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23363969 - largest nonzero change 0 ( 0%) - largest zero change 2.9947818e-05
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Clp0000I Optimal - objective value 136.02458
Coin0511I After Postsolve, objective 136.02458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.0245763 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 61 columns (60 integer (60 of which binary)) and 351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.013%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.61643
Cbc0038I Solution found of -25.2067
Cbc0038I Relaxing continuous gives -30.6136
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -30.6136 to -101.331 (0.02 seconds)
Cbc0038I Round again with cutoff of -104.722
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    2.01438 (7) obj. -104.722 iterations 18
Cbc0038I Pass   2: suminf.    0.88401 (2) obj. -104.722 iterations 10
Cbc0038I Pass   3: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass   4: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass   5: suminf.    1.12924 (5) obj. -104.722 iterations 9
Cbc0038I Pass   6: suminf.    1.04213 (3) obj. -109.446 iterations 6
Cbc0038I Pass   7: suminf.    0.93948 (3) obj. -104.722 iterations 7
Cbc0038I Pass   8: suminf.    0.46834 (3) obj. -104.722 iterations 6
Cbc0038I Pass   9: suminf.    0.73852 (2) obj. -107.349 iterations 4
Cbc0038I Pass  10: suminf.    3.01538 (7) obj. -104.722 iterations 12
Cbc0038I Pass  11: suminf.    1.00255 (6) obj. -104.722 iterations 11
Cbc0038I Pass  12: suminf.    1.00255 (6) obj. -104.722 iterations 0
Cbc0038I Pass  13: suminf.    0.59459 (2) obj. -104.722 iterations 5
Cbc0038I Pass  14: suminf.    0.51611 (2) obj. -104.722 iterations 1
Cbc0038I Pass  15: suminf.    1.70812 (7) obj. -104.722 iterations 12
Cbc0038I Pass  16: suminf.    1.70812 (7) obj. -104.722 iterations 1
Cbc0038I Pass  17: suminf.    2.01438 (7) obj. -104.722 iterations 19
Cbc0038I Pass  18: suminf.    0.88401 (2) obj. -104.722 iterations 9
Cbc0038I Pass  19: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass  20: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass  21: suminf.    1.83396 (6) obj. -104.722 iterations 14
Cbc0038I Pass  22: suminf.    1.83396 (6) obj. -104.722 iterations 2
Cbc0038I Pass  23: suminf.    2.01438 (7) obj. -104.722 iterations 21
Cbc0038I Pass  24: suminf.    0.88401 (2) obj. -104.722 iterations 10
Cbc0038I Pass  25: suminf.    0.29730 (2) obj. -117.837 iterations 6
Cbc0038I Pass  26: suminf.    0.63502 (2) obj. -104.722 iterations 3
Cbc0038I Pass  27: suminf.    1.58232 (4) obj. -104.722 iterations 11
Cbc0038I Pass  28: suminf.    1.58232 (4) obj. -104.722 iterations 6
Cbc0038I Pass  29: suminf.    0.67584 (2) obj. -104.722 iterations 8
Cbc0038I Pass  30: suminf.    1.88024 (5) obj. -104.722 iterations 9
Cbc0038I Rounding solution of -101.812 is better than previous of -101.331

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -110.825
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.20769 (7) obj. -110.825 iterations 1
Cbc0038I Pass  31: suminf.    1.02603 (5) obj. -110.825 iterations 16
Cbc0038I Pass  32: suminf.    0.29730 (2) obj. -110.825 iterations 9
Cbc0038I Pass  33: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  34: suminf.    2.27166 (7) obj. -110.825 iterations 23
Cbc0038I Pass  35: suminf.    2.02580 (7) obj. -110.825 iterations 12
Cbc0038I Pass  36: suminf.    0.91803 (4) obj. -110.825 iterations 8
Cbc0038I Pass  37: suminf.    0.33667 (4) obj. -110.825 iterations 2
Cbc0038I Pass  38: suminf.    1.02603 (5) obj. -110.825 iterations 10
Cbc0038I Pass  39: suminf.    0.29730 (2) obj. -110.825 iterations 7
Cbc0038I Pass  40: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  41: suminf.    0.70767 (6) obj. -110.825 iterations 12
Cbc0038I Pass  42: suminf.    0.21306 (2) obj. -110.825 iterations 9
Cbc0038I Pass  43: suminf.    0.22886 (2) obj. -110.825 iterations 2
Cbc0038I Pass  44: suminf.    0.81619 (5) obj. -110.825 iterations 5
Cbc0038I Pass  45: suminf.    1.37057 (5) obj. -110.825 iterations 6
Cbc0038I Pass  46: suminf.    1.37057 (5) obj. -110.825 iterations 0
Cbc0038I Pass  47: suminf.    2.20769 (7) obj. -110.825 iterations 13
Cbc0038I Pass  48: suminf.    1.02603 (5) obj. -110.825 iterations 14
Cbc0038I Pass  49: suminf.    0.29730 (2) obj. -110.825 iterations 8
Cbc0038I Pass  50: suminf.    0.49834 (2) obj. -110.825 iterations 2
Cbc0038I Pass  51: suminf.    0.29730 (2) obj. -110.825 iterations 8
Cbc0038I Pass  52: suminf.    0.94235 (5) obj. -110.825 iterations 16
Cbc0038I Pass  53: suminf.    0.58266 (3) obj. -110.825 iterations 9
Cbc0038I Pass  54: suminf.    0.52627 (3) obj. -110.825 iterations 5
Cbc0038I Pass  55: suminf.    0.18632 (3) obj. -110.825 iterations 3
Cbc0038I Pass  56: suminf.    0.74319 (3) obj. -110.825 iterations 2
Cbc0038I Pass  57: suminf.    0.64560 (3) obj. -110.825 iterations 1
Cbc0038I Pass  58: suminf.    0.38265 (2) obj. -110.825 iterations 2
Cbc0038I Pass  59: suminf.    0.92395 (4) obj. -110.825 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 61 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -101.812 - took 0.04 seconds
Cbc0012I Integer solution of -101.8118 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 105 rows 61 columns, reduced to 16 rows 13 columns
Cbc0031I 6 added rows had average density of 11.833333
Cbc0013I At root node, 6 cuts changed objective from -135.23827 to -120.6607 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 3.4 elements, 19 column cuts (19 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0038I Full problem 105 rows 61 columns, reduced to 8 rows 8 columns
Cbc0001I Search completed - best objective -101.8118, took 373 iterations and 46 nodes (0.13 seconds)
Cbc0032I Strong branching done 142 times (506 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 9, 127 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.13

