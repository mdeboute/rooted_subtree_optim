Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 1.15523e-05 - average 3.39773e-07, 1 fixed columns
Coin0506I Presolve 15 (-19) rows, 17 (-4) columns and 58 (-44) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Coin0511I After Postsolve, objective 193.05915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Coin0511I After Postsolve, objective 193.05915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.0591492 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.430%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.16813
Cbc0038I Pass   1: suminf.    0.36098 (1) obj. -124.205 iterations 8
Cbc0038I Solution found of -61.2079
Cbc0038I Relaxing continuous gives -61.2079
Cbc0038I Rounding solution of -93.8784 is better than previous of -61.2079

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -103.797
Cbc0038I Pass   2: suminf.    0.36098 (1) obj. -124.205 iterations 0
Cbc0038I Pass   3: suminf.    0.42734 (2) obj. -103.797 iterations 2
Cbc0038I Pass   4: suminf.    0.23902 (1) obj. -124.369 iterations 2
Cbc0038I Pass   5: suminf.    0.53074 (2) obj. -103.797 iterations 2
Cbc0038I Pass   6: suminf.    0.22439 (1) obj. -131.125 iterations 2
Cbc0038I Pass   7: suminf.    0.45492 (2) obj. -103.797 iterations 2
Cbc0038I Pass   8: suminf.    0.15122 (1) obj. -148.411 iterations 2
Cbc0038I Pass   9: suminf.    0.39396 (2) obj. -103.797 iterations 2
Cbc0038I Pass  10: suminf.    0.12683 (1) obj. -148.755 iterations 2
Cbc0038I Pass  11: suminf.    0.41713 (1) obj. -103.797 iterations 1
Cbc0038I Pass  12: suminf.    0.91300 (2) obj. -103.797 iterations 5
Cbc0038I Pass  13: suminf.    0.25099 (1) obj. -103.797 iterations 5
Cbc0038I Pass  14: suminf.    0.44943 (2) obj. -103.797 iterations 2
Cbc0038I Pass  15: suminf.    0.36238 (1) obj. -103.797 iterations 3
Cbc0038I Pass  16: suminf.    0.30096 (1) obj. -103.797 iterations 1
Cbc0038I Pass  17: suminf.    0.37683 (1) obj. -114.515 iterations 10
Cbc0038I Pass  18: suminf.    0.26344 (2) obj. -103.797 iterations 3
Cbc0038I Pass  19: suminf.    0.15035 (1) obj. -103.797 iterations 3
Cbc0038I Pass  20: suminf.    0.36683 (2) obj. -103.797 iterations 2
Cbc0038I Pass  21: suminf.    0.16390 (1) obj. -103.797 iterations 3
Cbc0038I Pass  22: suminf.    0.30841 (2) obj. -103.797 iterations 2
Cbc0038I Pass  23: suminf.    0.28389 (1) obj. -103.797 iterations 3
Cbc0038I Pass  24: suminf.    0.31901 (2) obj. -103.797 iterations 2
Cbc0038I Pass  25: suminf.    0.36238 (1) obj. -103.797 iterations 3
Cbc0038I Pass  26: suminf.    0.30096 (1) obj. -103.797 iterations 1
Cbc0038I Pass  27: suminf.    0.40002 (1) obj. -103.797 iterations 1
Cbc0038I Pass  28: suminf.    0.44087 (1) obj. -103.797 iterations 2
Cbc0038I Pass  29: suminf.    0.40002 (1) obj. -103.797 iterations 1
Cbc0038I Pass  30: suminf.    0.21654 (2) obj. -103.797 iterations 4
Cbc0038I Pass  31: suminf.    0.21654 (2) obj. -103.797 iterations 1
Cbc0038I Rounding solution of -103.29 is better than previous of -93.8784

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -103.29 to -105.342 (0.02 seconds)
Cbc0038I Round again with cutoff of -122.886
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36098 (1) obj. -124.205 iterations 0
Cbc0038I Pass  32: suminf.    0.40642 (2) obj. -122.886 iterations 2
Cbc0038I Pass  33: suminf.    0.47425 (3) obj. -122.886 iterations 8
Cbc0038I Pass  34: suminf.    0.47861 (2) obj. -122.886 iterations 3
Cbc0038I Pass  35: suminf.    0.46906 (2) obj. -122.886 iterations 1
Cbc0038I Pass  36: suminf.    0.49512 (1) obj. -126.096 iterations 2
Cbc0038I Pass  37: suminf.    0.45121 (2) obj. -122.886 iterations 2
Cbc0038I Pass  38: suminf.    0.38293 (1) obj. -138.353 iterations 2
Cbc0038I Pass  39: suminf.    0.45791 (2) obj. -122.886 iterations 2
Cbc0038I Pass  40: suminf.    0.35854 (1) obj. -138.697 iterations 2
Cbc0038I Pass  41: suminf.    0.48108 (1) obj. -122.886 iterations 1
Cbc0038I Pass  42: suminf.    0.84141 (4) obj. -122.886 iterations 2
Cbc0038I Pass  43: suminf.    0.60606 (3) obj. -122.886 iterations 3
Cbc0038I Pass  44: suminf.    0.48049 (1) obj. -122.886 iterations 2
Cbc0038I Pass  45: suminf.    0.49913 (2) obj. -122.886 iterations 2
Cbc0038I Pass  46: suminf.    0.35854 (1) obj. -138.697 iterations 2
Cbc0038I Pass  47: suminf.    0.48108 (1) obj. -122.886 iterations 1
Cbc0038I Pass  48: suminf.    0.48108 (1) obj. -122.886 iterations 0
Cbc0038I Pass  49: suminf.    0.54667 (2) obj. -122.886 iterations 10
Cbc0038I Pass  50: suminf.    0.54667 (2) obj. -122.886 iterations 0
Cbc0038I Pass  51: suminf.    0.55116 (2) obj. -122.886 iterations 2
Cbc0038I Pass  52: suminf.    0.21439 (1) obj. -145.556 iterations 2
Cbc0038I Pass  53: suminf.    0.55338 (3) obj. -122.886 iterations 3
Cbc0038I Pass  54: suminf.    0.54972 (2) obj. -122.886 iterations 2
Cbc0038I Pass  55: suminf.    0.57654 (2) obj. -122.886 iterations 3
Cbc0038I Pass  56: suminf.    0.42369 (2) obj. -122.886 iterations 3
Cbc0038I Pass  57: suminf.    0.42369 (2) obj. -122.886 iterations 0
Cbc0038I Pass  58: suminf.    0.47799 (1) obj. -122.886 iterations 3
Cbc0038I Pass  59: suminf.    0.44686 (1) obj. -122.886 iterations 1
Cbc0038I Pass  60: suminf.    0.46141 (2) obj. -122.886 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -105.342 to -107.383 (0.03 seconds)
Cbc0038I Round again with cutoff of -143.938
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.69222 (4) obj. -143.938 iterations 3
Cbc0038I Pass  61: suminf.    0.25243 (2) obj. -143.938 iterations 5
Cbc0038I Pass  62: suminf.    0.15122 (1) obj. -143.938 iterations 2
Cbc0038I Pass  63: suminf.    1.29999 (3) obj. -143.938 iterations 6
Cbc0038I Pass  64: suminf.    0.51305 (2) obj. -143.938 iterations 4
Cbc0038I Pass  65: suminf.    0.36860 (2) obj. -143.938 iterations 3
Cbc0038I Pass  66: suminf.    0.29366 (1) obj. -143.938 iterations 2
Cbc0038I Pass  67: suminf.    1.13826 (3) obj. -143.938 iterations 11
Cbc0038I Pass  68: suminf.    0.82862 (3) obj. -143.938 iterations 3
Cbc0038I Pass  69: suminf.    0.52878 (4) obj. -143.938 iterations 4
Cbc0038I Pass  70: suminf.    0.66040 (2) obj. -143.938 iterations 3
Cbc0038I Pass  71: suminf.    0.66040 (2) obj. -143.938 iterations 0
Cbc0038I Pass  72: suminf.    0.73000 (2) obj. -143.938 iterations 1
Cbc0038I Pass  73: suminf.    0.51112 (2) obj. -143.938 iterations 4
Cbc0038I Pass  74: suminf.    0.49058 (2) obj. -143.938 iterations 3
Cbc0038I Pass  75: suminf.    0.90957 (4) obj. -143.938 iterations 3
Cbc0038I Pass  76: suminf.    0.53180 (3) obj. -143.938 iterations 2
Cbc0038I Pass  77: suminf.    0.39041 (2) obj. -143.938 iterations 5
Cbc0038I Pass  78: suminf.    0.36946 (2) obj. -143.938 iterations 1
Cbc0038I Pass  79: suminf.    0.82794 (4) obj. -143.938 iterations 3
Cbc0038I Pass  80: suminf.    0.46540 (2) obj. -143.938 iterations 2
Cbc0038I Pass  81: suminf.    1.04044 (4) obj. -143.938 iterations 5
Cbc0038I Pass  82: suminf.    0.47728 (3) obj. -143.938 iterations 2
Cbc0038I Pass  83: suminf.    0.41172 (1) obj. -143.938 iterations 3
Cbc0038I Pass  84: suminf.    0.53581 (2) obj. -143.938 iterations 2
Cbc0038I Pass  85: suminf.    0.43883 (1) obj. -143.938 iterations 2
Cbc0038I Pass  86: suminf.    0.51455 (2) obj. -143.938 iterations 2
Cbc0038I Pass  87: suminf.    0.49650 (2) obj. -143.938 iterations 2
Cbc0038I Pass  88: suminf.    0.49650 (2) obj. -143.938 iterations 0
Cbc0038I Pass  89: suminf.    0.56284 (2) obj. -143.938 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -107.383 - took 0.03 seconds
Cbc0012I Integer solution of -107.38317 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 34 rows 21 columns, reduced to 11 rows 12 columns
Cbc0031I 8 added rows had average density of 16
Cbc0013I At root node, 8 cuts changed objective from -181.15191 to -111.76935 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -107.38317 best solution, best possible -111.76935 (1.54 seconds)
Cbc0012I Integer solution of -108.71554 found by DiveCoefficient after 1133 iterations and 4 nodes (1.55 seconds)
Cbc0001I Search completed - best objective -108.71554, took 1388 iterations and 14 nodes (1.57 seconds)
Cbc0032I Strong branching done 110 times (465 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.57

