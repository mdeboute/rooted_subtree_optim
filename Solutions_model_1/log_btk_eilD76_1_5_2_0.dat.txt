Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.88301e-05 - average 2.79353e-07, 7 fixed columns
Coin0506I Presolve 119 (-20) rows, 69 (-7) columns and 368 (-54) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 0.30577891 - largest nonzero change 0 ( 0%) - largest zero change 2.3937664e-05
Clp0000I Optimal - objective value 33.024574
Clp0000I Optimal - objective value 33.024574
Coin0511I After Postsolve, objective 33.024574, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.024574
Clp0000I Optimal - objective value 33.024574
Clp0000I Optimal - objective value 33.024574
Coin0511I After Postsolve, objective 33.024574, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.02457404 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 11.1112
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.7494 iterations 66
Cbc0038I Solution found of 10.7494
Cbc0038I Relaxing continuous gives 10.7494
Cbc0038I Rounding solution of 1.05121 is better than previous of 10.7494

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 1.05121 to -3.0025 (0.06 seconds)
Cbc0038I Round again with cutoff of -6.0048
Cbc0038I Pass   2: suminf.    1.52927 (15) obj. -6.0048 iterations 20
Cbc0038I Pass   3: suminf.    1.32573 (14) obj. -6.0048 iterations 1
Cbc0038I Pass   4: suminf.    0.60115 (4) obj. -6.0048 iterations 20
Cbc0038I Pass   5: suminf.    0.60115 (4) obj. -6.0048 iterations 0
Cbc0038I Pass   6: suminf.    1.17485 (4) obj. -6.0048 iterations 7
Cbc0038I Pass   7: suminf.    0.82403 (4) obj. -6.0048 iterations 3
Cbc0038I Pass   8: suminf.    0.70830 (6) obj. -6.0048 iterations 6
Cbc0038I Pass   9: suminf.    0.67168 (5) obj. -6.0048 iterations 11
Cbc0038I Pass  10: suminf.    0.67490 (4) obj. -6.0048 iterations 9
Cbc0038I Pass  11: suminf.    0.65184 (4) obj. -6.0048 iterations 1
Cbc0038I Pass  12: suminf.    1.28913 (4) obj. -6.0048 iterations 7
Cbc0038I Pass  13: suminf.    1.28913 (4) obj. -6.0048 iterations 0
Cbc0038I Pass  14: suminf.    1.19560 (3) obj. -6.0048 iterations 14
Cbc0038I Pass  15: suminf.    1.00833 (3) obj. -6.0048 iterations 4
Cbc0038I Pass  16: suminf.    1.51365 (5) obj. -6.0048 iterations 6
Cbc0038I Pass  17: suminf.    1.85873 (5) obj. -6.0048 iterations 3
Cbc0038I Pass  18: suminf.    1.30759 (5) obj. -6.0048 iterations 10
Cbc0038I Pass  19: suminf.    1.27578 (7) obj. -6.0048 iterations 8
Cbc0038I Pass  20: suminf.    0.89523 (4) obj. -6.0048 iterations 4
Cbc0038I Pass  21: suminf.    1.46158 (4) obj. -6.0048 iterations 8
Cbc0038I Pass  22: suminf.    1.73064 (4) obj. -6.0048 iterations 5
Cbc0038I Pass  23: suminf.    1.30759 (5) obj. -6.0048 iterations 1
Cbc0038I Pass  24: suminf.    1.27578 (7) obj. -6.0048 iterations 8
Cbc0038I Pass  25: suminf.    0.89523 (4) obj. -6.0048 iterations 4
Cbc0038I Pass  26: suminf.    1.46158 (4) obj. -6.0048 iterations 8
Cbc0038I Pass  27: suminf.    1.73064 (4) obj. -6.0048 iterations 5
Cbc0038I Pass  28: suminf.    1.30759 (5) obj. -6.0048 iterations 1
Cbc0038I Pass  29: suminf.    1.27578 (7) obj. -6.0048 iterations 8
Cbc0038I Pass  30: suminf.    0.89523 (4) obj. -6.0048 iterations 4
Cbc0038I Pass  31: suminf.    1.46158 (4) obj. -6.0048 iterations 8
Cbc0038I Rounding solution of -5.30341 is better than previous of -3.0025

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -11.4088
Cbc0038I Pass  31: suminf.    2.84675 (23) obj. -11.4088 iterations 5
Cbc0038I Pass  32: suminf.    2.65188 (22) obj. -11.4088 iterations 1
Cbc0038I Pass  33: suminf.    1.94544 (7) obj. -11.4088 iterations 22
Cbc0038I Pass  34: suminf.    1.46829 (6) obj. -11.4088 iterations 2
Cbc0038I Pass  35: suminf.    1.46829 (6) obj. -11.4088 iterations 1
Cbc0038I Pass  36: suminf.    2.93393 (8) obj. -11.4088 iterations 12
Cbc0038I Pass  37: suminf.    2.11195 (7) obj. -11.4088 iterations 10
Cbc0038I Pass  38: suminf.    1.25147 (5) obj. -11.4088 iterations 5
Cbc0038I Pass  39: suminf.    1.25147 (5) obj. -11.4088 iterations 1
Cbc0038I Pass  40: suminf.    1.47764 (5) obj. -11.4088 iterations 6
Cbc0038I Pass  41: suminf.    1.37692 (5) obj. -11.4088 iterations 2
Cbc0038I Pass  42: suminf.    1.40942 (5) obj. -11.4088 iterations 6
Cbc0038I Pass  43: suminf.    2.70170 (11) obj. -11.4088 iterations 19
Cbc0038I Pass  44: suminf.    1.22844 (6) obj. -11.4088 iterations 16
Cbc0038I Pass  45: suminf.    1.22844 (6) obj. -11.4088 iterations 0
Cbc0038I Pass  46: suminf.    1.67881 (5) obj. -11.4088 iterations 8
Cbc0038I Pass  47: suminf.    1.64476 (5) obj. -11.4088 iterations 3
Cbc0038I Pass  48: suminf.    1.64476 (5) obj. -11.4088 iterations 2
Cbc0038I Pass  49: suminf.    2.73204 (8) obj. -11.4088 iterations 7
Cbc0038I Pass  50: suminf.    1.24190 (5) obj. -11.4088 iterations 2
Cbc0038I Pass  51: suminf.    1.21510 (5) obj. -11.4088 iterations 2
Cbc0038I Pass  52: suminf.    1.67881 (5) obj. -11.4088 iterations 7
Cbc0038I Pass  53: suminf.    1.64476 (5) obj. -11.4088 iterations 3
Cbc0038I Pass  54: suminf.    1.64476 (5) obj. -11.4088 iterations 2
Cbc0038I Pass  55: suminf.    2.73204 (8) obj. -11.4088 iterations 7
Cbc0038I Pass  56: suminf.    1.24190 (5) obj. -11.4088 iterations 2
Cbc0038I Pass  57: suminf.    1.21510 (5) obj. -11.4088 iterations 2
Cbc0038I Pass  58: suminf.    1.67881 (5) obj. -11.4088 iterations 7
Cbc0038I Pass  59: suminf.    1.64476 (5) obj. -11.4088 iterations 3
Cbc0038I Pass  60: suminf.    1.64476 (5) obj. -11.4088 iterations 2
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I Round again with cutoff of -17.8935
Cbc0038I Pass  60: suminf.    4.84798 (32) obj. -17.8935 iterations 21
Cbc0038I Pass  61: suminf.    4.70455 (31) obj. -17.8935 iterations 3
Cbc0038I Pass  62: suminf.    3.14218 (10) obj. -17.8935 iterations 32
Cbc0038I Pass  63: suminf.    2.69810 (8) obj. -17.8935 iterations 7
Cbc0038I Pass  64: suminf.    3.47939 (8) obj. -17.8935 iterations 3
Cbc0038I Pass  65: suminf.    3.26926 (8) obj. -17.8935 iterations 5
Cbc0038I Pass  66: suminf.    3.26926 (8) obj. -17.8935 iterations 2
Cbc0038I Pass  67: suminf.    3.22652 (8) obj. -17.8935 iterations 8
Cbc0038I Pass  68: suminf.    3.22652 (8) obj. -17.8935 iterations 1
Cbc0038I Pass  69: suminf.    3.59043 (8) obj. -17.8935 iterations 5
Cbc0038I Pass  70: suminf.    3.26926 (8) obj. -17.8935 iterations 4
Cbc0038I Pass  71: suminf.    3.26926 (8) obj. -17.8935 iterations 2
Cbc0038I Pass  72: suminf.    3.22652 (8) obj. -17.8935 iterations 8
Cbc0038I Pass  73: suminf.    3.22652 (8) obj. -17.8935 iterations 1
Cbc0038I Pass  74: suminf.    3.59043 (8) obj. -17.8935 iterations 5
Cbc0038I Pass  75: suminf.    3.26926 (8) obj. -17.8935 iterations 4
Cbc0038I Pass  76: suminf.    3.26926 (8) obj. -17.8935 iterations 2
Cbc0038I Pass  77: suminf.    3.22652 (8) obj. -17.8935 iterations 8
Cbc0038I Pass  78: suminf.    3.22652 (8) obj. -17.8935 iterations 1
Cbc0038I Pass  79: suminf.    3.59043 (8) obj. -17.8935 iterations 5
Cbc0038I Pass  80: suminf.    3.26926 (8) obj. -17.8935 iterations 4
Cbc0038I Pass  81: suminf.    3.26926 (8) obj. -17.8935 iterations 2
Cbc0038I Pass  82: suminf.    3.22652 (8) obj. -17.8935 iterations 8
Cbc0038I Pass  83: suminf.    3.22652 (8) obj. -17.8935 iterations 1
Cbc0038I Pass  84: suminf.    3.59043 (8) obj. -17.8935 iterations 5
Cbc0038I Pass  85: suminf.    3.26926 (8) obj. -17.8935 iterations 4
Cbc0038I Pass  86: suminf.    3.26926 (8) obj. -17.8935 iterations 2
Cbc0038I Pass  87: suminf.    3.22652 (8) obj. -17.8935 iterations 8
Cbc0038I Pass  88: suminf.    3.22652 (8) obj. -17.8935 iterations 1
Cbc0038I Pass  89: suminf.    3.59043 (8) obj. -17.8935 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 92 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -5.30341 - took 0.21 seconds
Cbc0012I Integer solution of -5.303412 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 89 rows 52 columns
Cbc0012I Integer solution of -6.690892 found by RINS after 0 iterations and 0 nodes (0.31 seconds)
Cbc0031I 35 added rows had average density of 45.457143
Cbc0013I At root node, 35 cuts changed objective from -33.024574 to -25.749537 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18457 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2347 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 215 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.690892 best solution, best possible -25.749537 (1.40 seconds)
Cbc0012I Integer solution of -6.93189 found by rounding after 10105 iterations and 31 nodes (1.67 seconds)
Cbc0012I Integer solution of -7.01232 found by rounding after 10144 iterations and 34 nodes (1.67 seconds)
Cbc0012I Integer solution of -7.11616 found by rounding after 10159 iterations and 37 nodes (1.68 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 77 rows 44 columns
Cbc0012I Integer solution of -7.209962 found by RINS after 11568 iterations and 99 nodes (1.93 seconds)
Cbc0016I Integer solution of -7.233362 found by strong branching after 12064 iterations and 159 nodes (1.99 seconds)
Cbc0001I Search completed - best objective -7.233362, took 12836 iterations and 170 nodes (2.00 seconds)
Cbc0032I Strong branching done 1384 times (23452 iterations), fathomed 18 nodes and fixed 71 variables
Cbc0035I Maximum depth 31, 416 variables fixed on reduced cost
Total time (CPU seconds):       1.90   (Wallclock seconds):       2.02

