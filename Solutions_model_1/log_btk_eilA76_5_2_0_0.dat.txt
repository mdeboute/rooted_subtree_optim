Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 74 (-4) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 5.55179e-05 - average 4.14312e-07, 21 fixed columns
Coin0506I Presolve 88 (-46) rows, 50 (-24) columns and 269 (-139) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 0.39652927 - largest nonzero change 0 ( 0%) - largest zero change 2.8096151e-05
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Coin0511I After Postsolve, objective 72.226291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24361995 - largest nonzero change 0 ( 0%) - largest zero change 2.9354183e-05
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Coin0511I After Postsolve, objective 72.226291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.22629074 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 74 columns (73 integer (73 of which binary)) and 447 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.950%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.03995
Cbc0038I Solution found of -9.95248
Cbc0038I Relaxing continuous gives -18.9647
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -18.9647 to -41.1491 (0.04 seconds)
Cbc0038I Round again with cutoff of -44.1811
Cbc0038I Pass   1: suminf.    2.50857 (21) obj. -44.1811 iterations 40
Cbc0038I Pass   2: suminf.    1.38757 (4) obj. -44.1811 iterations 26
Cbc0038I Pass   3: suminf.    1.38757 (4) obj. -44.1811 iterations 0
Cbc0038I Pass   4: suminf.    0.83008 (2) obj. -44.1811 iterations 7
Cbc0038I Pass   5: suminf.    0.31305 (2) obj. -44.1811 iterations 4
Cbc0038I Pass   6: suminf.    1.22827 (7) obj. -44.1811 iterations 12
Cbc0038I Pass   7: suminf.    0.88164 (4) obj. -44.1811 iterations 8
Cbc0038I Pass   8: suminf.    0.88373 (5) obj. -44.1811 iterations 4
Cbc0038I Pass   9: suminf.    0.88373 (5) obj. -44.1811 iterations 1
Cbc0038I Pass  10: suminf.    1.07818 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  11: suminf.    0.67865 (2) obj. -44.1811 iterations 4
Cbc0038I Pass  12: suminf.    0.60770 (2) obj. -44.1811 iterations 2
Cbc0038I Pass  13: suminf.    0.86610 (2) obj. -44.1811 iterations 3
Cbc0038I Pass  14: suminf.    1.11382 (4) obj. -44.1811 iterations 12
Cbc0038I Pass  15: suminf.    0.38398 (3) obj. -44.1811 iterations 8
Cbc0038I Pass  16: suminf.    0.38398 (3) obj. -44.1811 iterations 3
Cbc0038I Pass  17: suminf.    1.37608 (5) obj. -44.1811 iterations 10
Cbc0038I Pass  18: suminf.    0.65629 (4) obj. -44.1811 iterations 4
Cbc0038I Pass  19: suminf.    1.45000 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  20: suminf.    3.17048 (11) obj. -44.1811 iterations 20
Cbc0038I Pass  21: suminf.    1.20304 (5) obj. -44.1811 iterations 15
Cbc0038I Pass  22: suminf.    1.14387 (5) obj. -44.1811 iterations 3
Cbc0038I Pass  23: suminf.    0.72523 (4) obj. -44.1811 iterations 15
Cbc0038I Pass  24: suminf.    0.35639 (2) obj. -44.1811 iterations 6
Cbc0038I Pass  25: suminf.    0.72523 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  26: suminf.    2.19507 (8) obj. -44.1811 iterations 19
Cbc0038I Pass  27: suminf.    1.12123 (4) obj. -44.1811 iterations 11
Cbc0038I Pass  28: suminf.    1.10327 (5) obj. -44.1811 iterations 2
Cbc0038I Pass  29: suminf.    0.72523 (4) obj. -44.1811 iterations 20
Cbc0038I Pass  30: suminf.    0.35639 (2) obj. -44.1811 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -41.1491 to -43.3547 (0.08 seconds)
Cbc0038I Round again with cutoff of -49.6385
Cbc0038I Pass  30: suminf.    3.05148 (21) obj. -49.6385 iterations 0
Cbc0038I Pass  31: suminf.    4.38446 (11) obj. -49.6385 iterations 27
Cbc0038I Pass  32: suminf.    1.01537 (4) obj. -49.6385 iterations 11
Cbc0038I Pass  33: suminf.    1.01537 (4) obj. -49.6385 iterations 4
Cbc0038I Pass  34: suminf.    0.84720 (5) obj. -49.6385 iterations 7
Cbc0038I Pass  35: suminf.    0.84720 (5) obj. -49.6385 iterations 3
Cbc0038I Pass  36: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  37: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I Pass  38: suminf.    0.62109 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  39: suminf.    0.49394 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  40: suminf.    2.61105 (10) obj. -49.6385 iterations 15
Cbc0038I Pass  41: suminf.    1.29061 (4) obj. -49.6385 iterations 5
Cbc0038I Pass  42: suminf.    1.29061 (4) obj. -49.6385 iterations 0
Cbc0038I Pass  43: suminf.    1.11498 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  44: suminf.    0.84720 (5) obj. -49.6385 iterations 5
Cbc0038I Pass  45: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  46: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I Pass  47: suminf.    0.62109 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  48: suminf.    0.49394 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  49: suminf.    2.64449 (8) obj. -49.6385 iterations 12
Cbc0038I Pass  50: suminf.    0.76327 (3) obj. -49.6385 iterations 11
Cbc0038I Pass  51: suminf.    0.76327 (3) obj. -49.6385 iterations 1
Cbc0038I Pass  52: suminf.    1.14862 (3) obj. -49.6385 iterations 3
Cbc0038I Pass  53: suminf.    0.76327 (3) obj. -49.6385 iterations 3
Cbc0038I Pass  54: suminf.    1.81656 (6) obj. -49.6385 iterations 16
Cbc0038I Pass  55: suminf.    1.75943 (6) obj. -49.6385 iterations 7
Cbc0038I Pass  56: suminf.    1.23161 (4) obj. -49.6385 iterations 10
Cbc0038I Pass  57: suminf.    0.84720 (5) obj. -49.6385 iterations 6
Cbc0038I Pass  58: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  59: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 80 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -43.3547 - took 0.08 seconds
Cbc0012I Integer solution of -43.35467 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 129 rows 74 columns, reduced to 64 rows 35 columns
Cbc0031I 17 added rows had average density of 53.823529
Cbc0013I At root node, 17 cuts changed objective from -71.468124 to -60.873765 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8200 row cuts average 4.7 elements, 2 column cuts (2 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1420 row cuts average 62.5 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 56.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -43.35467 best solution, best possible -60.873765 (0.68 seconds)
Cbc0001I Search completed - best objective -43.35467, took 7596 iterations and 36 nodes (0.86 seconds)
Cbc0032I Strong branching done 500 times (8388 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 14, 147 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.87

