Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 74 (-4) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 9.56341e-06 - average 7.08401e-08, 8 fixed columns
Coin0506I Presolve 120 (-15) rows, 66 (-8) columns and 364 (-46) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.8476665 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Coin0511I After Postsolve, objective 35.340061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Coin0511I After Postsolve, objective 35.340061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.34006139 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 74 columns (73 integer (73 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.206%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.90182
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.3662 iterations 58
Cbc0038I Solution found of 13.3662
Cbc0038I Relaxing continuous gives 13.3662
Cbc0038I Rounding solution of 4.83013 is better than previous of 13.3662

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 80 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 4.83013 to -7.02582 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.85733
Cbc0038I Pass   2: suminf.    2.31056 (27) obj. -9.85733 iterations 36
Cbc0038I Pass   3: suminf.    2.16132 (46) obj. -9.85733 iterations 16
Cbc0038I Pass   4: suminf.    1.41062 (7) obj. -9.85733 iterations 55
Cbc0038I Pass   5: suminf.    1.41062 (7) obj. -9.85733 iterations 0
Cbc0038I Pass   6: suminf.    1.74262 (5) obj. -9.85733 iterations 18
Cbc0038I Pass   7: suminf.    1.32505 (7) obj. -9.85733 iterations 3
Cbc0038I Pass   8: suminf.    1.31649 (7) obj. -9.85733 iterations 1
Cbc0038I Pass   9: suminf.    1.40497 (5) obj. -9.85733 iterations 8
Cbc0038I Pass  10: suminf.    1.40497 (5) obj. -9.85733 iterations 0
Cbc0038I Pass  11: suminf.    1.28540 (4) obj. -9.85733 iterations 3
Cbc0038I Pass  12: suminf.    1.28540 (4) obj. -9.85733 iterations 0
Cbc0038I Pass  13: suminf.    1.89350 (4) obj. -9.85733 iterations 2
Cbc0038I Pass  14: suminf.    1.89350 (4) obj. -9.85733 iterations 0
Cbc0038I Pass  15: suminf.    1.07264 (5) obj. -9.85733 iterations 20
Cbc0038I Pass  16: suminf.    1.03867 (4) obj. -9.85733 iterations 9
Cbc0038I Pass  17: suminf.    1.22876 (4) obj. -9.85733 iterations 7
Cbc0038I Pass  18: suminf.    1.22876 (4) obj. -9.85733 iterations 1
Cbc0038I Pass  19: suminf.    1.33693 (3) obj. -9.85733 iterations 3
Cbc0038I Pass  20: suminf.    0.74957 (3) obj. -9.85733 iterations 2
Cbc0038I Pass  21: suminf.    3.07428 (9) obj. -9.85733 iterations 22
Cbc0038I Pass  22: suminf.    2.08360 (8) obj. -9.85733 iterations 7
Cbc0038I Pass  23: suminf.    1.92752 (6) obj. -9.85733 iterations 15
Cbc0038I Pass  24: suminf.    1.85813 (7) obj. -9.85733 iterations 1
Cbc0038I Pass  25: suminf.    2.09538 (7) obj. -9.85733 iterations 5
Cbc0038I Pass  26: suminf.    1.82182 (6) obj. -9.85733 iterations 12
Cbc0038I Pass  27: suminf.    1.82182 (6) obj. -9.85733 iterations 0
Cbc0038I Pass  28: suminf.    2.42783 (6) obj. -9.85733 iterations 2
Cbc0038I Pass  29: suminf.    2.12276 (8) obj. -9.85733 iterations 3
Cbc0038I Pass  30: suminf.    2.09899 (9) obj. -9.85733 iterations 1
Cbc0038I Pass  31: suminf.    2.70704 (9) obj. -9.85733 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.02582 - took 0.09 seconds
Cbc0012I Integer solution of -7.02582 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 80 rows 46 columns
Cbc0031I 27 added rows had average density of 48.407407
Cbc0013I At root node, 27 cuts changed objective from -35.340061 to -27.996759 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13819 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1886 row cuts average 73.5 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.02582 best solution, best possible -27.996759 (1.01 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 62 rows 35 columns
Cbc0012I Integer solution of -7.36208 found by RINS after 11322 iterations and 41 nodes (1.29 seconds)
Cbc0001I Search completed - best objective -7.362079999999999, took 12819 iterations and 78 nodes (1.36 seconds)
Cbc0032I Strong branching done 912 times (17962 iterations), fathomed 7 nodes and fixed 29 variables
Cbc0035I Maximum depth 33, 244 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.37

