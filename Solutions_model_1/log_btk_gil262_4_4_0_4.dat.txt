Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 372 (-155) rows, 194 (-70) columns and 1114 (-431) elements
Clp1000I sum of infeasibilities 4.12996e-07 - average 1.1102e-09, 189 fixed columns
Coin0506I Presolve 5 (-367) rows, 5 (-189) columns and 14 (-1100) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 241075.03
Clp0000I Optimal - objective value 241075.03
Coin0511I After Postsolve, objective 241075.03, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0123975 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 241075.03
Clp0000I Optimal - objective value 241075.03
Clp0000I Optimal - objective value 241075.03
Coin0511I After Postsolve, objective 241075.03, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 241075.0304 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 372 rows, 194 columns (193 integer (193 of which binary)) and 1114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.490%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.32735
Cbc0038I Solution found of -202303
Cbc0038I Relaxing continuous gives -202303
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 194 columns, reduced to 4 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -206180
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.10062 (1) obj. -206180 iterations 18
Cbc0038I Pass   2: suminf.    0.20408 (1) obj. -232951 iterations 4
Cbc0038I Pass   3: suminf.    1.52835 (6) obj. -206180 iterations 42
Cbc0038I Pass   4: suminf.    0.75496 (3) obj. -206180 iterations 23
Cbc0038I Pass   5: suminf.    0.33109 (1) obj. -206180 iterations 5
Cbc0038I Pass   6: suminf.    0.30612 (1) obj. -207140 iterations 4
Cbc0038I Pass   7: suminf.    0.33109 (1) obj. -206180 iterations 4
Cbc0038I Pass   8: suminf.    1.84050 (5) obj. -206180 iterations 35
Cbc0038I Pass   9: suminf.    0.42488 (2) obj. -206180 iterations 39
Cbc0038I Pass  10: suminf.    0.42488 (2) obj. -206180 iterations 5
Cbc0038I Pass  11: suminf.    0.10062 (1) obj. -206180 iterations 5
Cbc0038I Pass  12: suminf.    0.48980 (1) obj. -221962 iterations 3
Cbc0038I Pass  13: suminf.    2.06061 (5) obj. -206180 iterations 20
Cbc0038I Pass  14: suminf.    1.06554 (4) obj. -206180 iterations 14
Cbc0038I Pass  15: suminf.    0.10062 (1) obj. -206180 iterations 13
Cbc0038I Pass  16: suminf.    0.18367 (1) obj. -209380 iterations 3
Cbc0038I Pass  17: suminf.    1.78516 (7) obj. -206180 iterations 27
Cbc0038I Pass  18: suminf.    0.68874 (2) obj. -206180 iterations 41
Cbc0038I Pass  19: suminf.    0.12245 (1) obj. -206612 iterations 15
Cbc0038I Pass  20: suminf.    0.11089 (1) obj. -206180 iterations 3
Cbc0038I Pass  21: suminf.    2.17101 (7) obj. -206180 iterations 51
Cbc0038I Pass  22: suminf.    0.03794 (1) obj. -206180 iterations 25
Cbc0038I Solution found of -207596
Cbc0038I Relaxing continuous gives -207596
Cbc0038I Rounding solution of -216140 is better than previous of -207596

Cbc0038I Before mini branch and bound, 163 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 194 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -216140 to -225484 (0.06 seconds)
Cbc0038I Round again with cutoff of -228602
Cbc0038I Reduced cost fixing fixed 83 variables on major pass 3
Cbc0038I Pass  23: suminf.    0.31746 (1) obj. -228602 iterations 1
Cbc0038I Pass  24: suminf.    0.20408 (1) obj. -232951 iterations 4
Cbc0038I Pass  25: suminf.    1.49598 (7) obj. -228602 iterations 25
Cbc0038I Pass  26: suminf.    1.42688 (4) obj. -228602 iterations 17
Cbc0038I Pass  27: suminf.    0.60107 (3) obj. -228602 iterations 13
Cbc0038I Pass  28: suminf.    0.57168 (2) obj. -228602 iterations 9
Cbc0038I Pass  29: suminf.    0.51791 (2) obj. -228602 iterations 13
Cbc0038I Pass  30: suminf.    0.47903 (3) obj. -228602 iterations 7
Cbc0038I Pass  31: suminf.    0.60107 (3) obj. -228602 iterations 10
Cbc0038I Pass  32: suminf.    0.87787 (4) obj. -228602 iterations 9
Cbc0038I Pass  33: suminf.    0.82249 (4) obj. -228602 iterations 7
Cbc0038I Pass  34: suminf.    0.16704 (2) obj. -228602 iterations 20
Cbc0038I Pass  35: suminf.    0.44565 (1) obj. -231690 iterations 10
Cbc0038I Pass  36: suminf.    0.79803 (3) obj. -228602 iterations 15
Cbc0038I Pass  37: suminf.    0.66648 (5) obj. -228602 iterations 10
Cbc0038I Pass  38: suminf.    1.18964 (5) obj. -228602 iterations 17
Cbc0038I Pass  39: suminf.    1.11078 (4) obj. -228602 iterations 10
Cbc0038I Pass  40: suminf.    0.61817 (3) obj. -228602 iterations 15
Cbc0038I Pass  41: suminf.    0.61817 (3) obj. -228602 iterations 0
Cbc0038I Pass  42: suminf.    0.31746 (1) obj. -228602 iterations 3
Cbc0038I Pass  43: suminf.    0.20408 (1) obj. -232951 iterations 3
Cbc0038I Pass  44: suminf.    0.31746 (1) obj. -228602 iterations 2
Cbc0038I Pass  45: suminf.    1.30557 (4) obj. -228602 iterations 27
Cbc0038I Pass  46: suminf.    1.30557 (4) obj. -228602 iterations 5
Cbc0038I Pass  47: suminf.    0.43668 (3) obj. -228602 iterations 8
Cbc0038I Pass  48: suminf.    3.02434 (9) obj. -228602 iterations 34
Cbc0038I Pass  49: suminf.    0.45318 (1) obj. -228602 iterations 22
Cbc0038I Pass  50: suminf.    0.20408 (1) obj. -232951 iterations 17
Cbc0038I Pass  51: suminf.    0.31746 (1) obj. -228602 iterations 2
Cbc0038I Pass  52: suminf.    1.93346 (6) obj. -228602 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 194 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -225484 - took 0.09 seconds
Cbc0012I Integer solution of -225484.29 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 372 rows 194 columns, reduced to 6 rows 7 columns
Cbc0031I 7 added rows had average density of 28.142857
Cbc0013I At root node, 7 cuts changed objective from -241075.03 to -233576.7 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 3.2 elements, 27 column cuts (27 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 31.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 192.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -225484.29, took 566 iterations and 20 nodes (0.34 seconds)
Cbc0032I Strong branching done 130 times (738 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 149 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.35

