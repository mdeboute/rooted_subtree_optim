Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 8.09725e-06 - average 8.89808e-08, 0 fixed columns
Coin0506I Presolve 91 (0) rows, 51 (0) columns and 276 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 36.815518
Clp0000I Optimal - objective value 36.815518
Coin0511I After Postsolve, objective 36.815518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.815518
Clp0000I Optimal - objective value 36.815518
Clp0000I Optimal - objective value 36.815518
Coin0511I After Postsolve, objective 36.815518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.81551798 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.53271
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.386 iterations 37
Cbc0038I Solution found of 12.386
Cbc0038I Relaxing continuous gives 12.386
Cbc0038I Rounding solution of -1.06673 is better than previous of 12.386

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -1.06673 to -4.61857 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.83835
Cbc0038I Pass   2: suminf.    1.32121 (31) obj. -7.83835 iterations 31
Cbc0038I Pass   3: suminf.    1.27607 (37) obj. -7.83835 iterations 7
Cbc0038I Pass   4: suminf.    0.30759 (3) obj. -7.83835 iterations 39
Cbc0038I Pass   5: suminf.    0.30759 (3) obj. -7.83835 iterations 0
Cbc0038I Pass   6: suminf.    1.45573 (5) obj. -7.83835 iterations 10
Cbc0038I Pass   7: suminf.    1.07696 (5) obj. -7.83835 iterations 3
Cbc0038I Pass   8: suminf.    1.07624 (5) obj. -7.83835 iterations 1
Cbc0038I Pass   9: suminf.    1.89855 (5) obj. -7.83835 iterations 11
Cbc0038I Pass  10: suminf.    2.00100 (6) obj. -7.83835 iterations 6
Cbc0038I Pass  11: suminf.    2.00100 (6) obj. -7.83835 iterations 0
Cbc0038I Pass  12: suminf.    1.11929 (5) obj. -7.83835 iterations 7
Cbc0038I Pass  13: suminf.    1.11929 (5) obj. -7.83835 iterations 0
Cbc0038I Pass  14: suminf.    1.90502 (5) obj. -7.83835 iterations 9
Cbc0038I Pass  15: suminf.    1.90502 (5) obj. -7.83835 iterations 0
Cbc0038I Pass  16: suminf.    1.96210 (6) obj. -7.83835 iterations 7
Cbc0038I Pass  17: suminf.    1.96210 (6) obj. -7.83835 iterations 0
Cbc0038I Pass  18: suminf.    1.11929 (5) obj. -7.83835 iterations 6
Cbc0038I Pass  19: suminf.    1.11929 (5) obj. -7.83835 iterations 0
Cbc0038I Pass  20: suminf.    1.90502 (5) obj. -7.83835 iterations 9
Cbc0038I Pass  21: suminf.    1.90502 (5) obj. -7.83835 iterations 0
Cbc0038I Pass  22: suminf.    1.96210 (6) obj. -7.83835 iterations 7
Cbc0038I Pass  23: suminf.    1.96210 (6) obj. -7.83835 iterations 0
Cbc0038I Pass  24: suminf.    1.11929 (5) obj. -7.83835 iterations 6
Cbc0038I Pass  25: suminf.    1.11929 (5) obj. -7.83835 iterations 0
Cbc0038I Pass  26: suminf.    1.90502 (5) obj. -7.83835 iterations 9
Cbc0038I Pass  27: suminf.    1.90502 (5) obj. -7.83835 iterations 0
Cbc0038I Pass  28: suminf.    1.96210 (6) obj. -7.83835 iterations 7
Cbc0038I Pass  29: suminf.    1.96210 (6) obj. -7.83835 iterations 0
Cbc0038I Pass  30: suminf.    1.11929 (5) obj. -7.83835 iterations 6
Cbc0038I Pass  31: suminf.    1.11929 (5) obj. -7.83835 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -4.61857 to -4.83161 (0.09 seconds)
Cbc0038I Round again with cutoff of -13.6338
Cbc0038I Pass  31: suminf.    2.87687 (31) obj. -13.6338 iterations 0
Cbc0038I Pass  32: suminf.    2.77858 (37) obj. -13.6338 iterations 7
Cbc0038I Pass  33: suminf.    2.15878 (9) obj. -13.6338 iterations 34
Cbc0038I Pass  34: suminf.    1.23389 (7) obj. -13.6338 iterations 7
Cbc0038I Pass  35: suminf.    1.23389 (7) obj. -13.6338 iterations 0
Cbc0038I Pass  36: suminf.    2.18894 (7) obj. -13.6338 iterations 12
Cbc0038I Pass  37: suminf.    1.72134 (6) obj. -13.6338 iterations 1
Cbc0038I Pass  38: suminf.    1.59810 (5) obj. -13.6338 iterations 1
Cbc0038I Pass  39: suminf.    1.79408 (6) obj. -13.6338 iterations 5
Cbc0038I Pass  40: suminf.    1.67330 (5) obj. -13.6338 iterations 1
Cbc0038I Pass  41: suminf.    1.72134 (6) obj. -13.6338 iterations 6
Cbc0038I Pass  42: suminf.    3.24084 (11) obj. -13.6338 iterations 19
Cbc0038I Pass  43: suminf.    1.95597 (8) obj. -13.6338 iterations 12
Cbc0038I Pass  44: suminf.    1.95151 (8) obj. -13.6338 iterations 3
Cbc0038I Pass  45: suminf.    1.71583 (6) obj. -13.6338 iterations 13
Cbc0038I Pass  46: suminf.    1.46353 (5) obj. -13.6338 iterations 5
Cbc0038I Pass  47: suminf.    1.85626 (7) obj. -13.6338 iterations 5
Cbc0038I Pass  48: suminf.    1.82187 (6) obj. -13.6338 iterations 2
Cbc0038I Pass  49: suminf.    1.87563 (6) obj. -13.6338 iterations 13
Cbc0038I Pass  50: suminf.    1.82952 (5) obj. -13.6338 iterations 1
Cbc0038I Pass  51: suminf.    1.93826 (6) obj. -13.6338 iterations 6
Cbc0038I Pass  52: suminf.    1.89323 (5) obj. -13.6338 iterations 1
Cbc0038I Pass  53: suminf.    1.93952 (9) obj. -13.6338 iterations 12
Cbc0038I Pass  54: suminf.    1.31358 (5) obj. -13.6338 iterations 4
Cbc0038I Pass  55: suminf.    2.04255 (6) obj. -13.6338 iterations 9
Cbc0038I Pass  56: suminf.    1.63386 (6) obj. -13.6338 iterations 5
Cbc0038I Pass  57: suminf.    1.58775 (5) obj. -13.6338 iterations 1
Cbc0038I Pass  58: suminf.    1.70630 (6) obj. -13.6338 iterations 7
Cbc0038I Pass  59: suminf.    1.66128 (5) obj. -13.6338 iterations 1
Cbc0038I Pass  60: suminf.    1.63386 (6) obj. -13.6338 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -4.83161 - took 0.11 seconds
Cbc0012I Integer solution of -4.83161 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 71 rows 40 columns
Cbc0031I 27 added rows had average density of 36.888889
Cbc0013I At root node, 27 cuts changed objective from -36.815518 to -27.135651 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9597 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1428 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -4.83161 best solution, best possible -27.135651 (0.70 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 31 rows 21 columns
Cbc0012I Integer solution of -4.85706 found by DiveCoefficient after 9238 iterations and 76 nodes (1.00 seconds)
Cbc0001I Search completed - best objective -4.857060000000004, took 9266 iterations and 78 nodes (1.00 seconds)
Cbc0032I Strong branching done 772 times (12827 iterations), fathomed 10 nodes and fixed 34 variables
Cbc0035I Maximum depth 24, 139 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.01

