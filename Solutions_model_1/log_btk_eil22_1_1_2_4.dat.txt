Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 22 (-2) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 0.00159675 - average 4.83862e-05, 2 fixed columns
Coin0506I Presolve 31 (-2) rows, 20 (-2) columns and 95 (-7) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Coin0511I After Postsolve, objective 55.858058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Clp0000I Optimal - objective value 55.858058
Coin0511I After Postsolve, objective 55.858058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.85805824 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.96385
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.4444 iterations 20
Cbc0038I Solution found of -16.4444
Cbc0038I Relaxing continuous gives -16.4444
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20.3859
Cbc0038I Pass   2: suminf.    0.24683 (2) obj. -20.3859 iterations 4
Cbc0038I Pass   3: suminf.    0.61027 (2) obj. -20.3859 iterations 2
Cbc0038I Pass   4: suminf.    1.15155 (4) obj. -20.3859 iterations 7
Cbc0038I Pass   5: suminf.    0.81873 (3) obj. -20.3859 iterations 8
Cbc0038I Pass   6: suminf.    0.84312 (2) obj. -20.3859 iterations 4
Cbc0038I Pass   7: suminf.    0.53406 (2) obj. -20.3859 iterations 5
Cbc0038I Pass   8: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass   9: suminf.    0.61027 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  10: suminf.    0.47697 (3) obj. -20.3859 iterations 9
Cbc0038I Pass  11: suminf.    0.47682 (3) obj. -20.3859 iterations 3
Cbc0038I Pass  12: suminf.    0.62315 (3) obj. -20.3859 iterations 4
Cbc0038I Pass  13: suminf.    0.62315 (3) obj. -20.3859 iterations 2
Cbc0038I Pass  14: suminf.    0.84312 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  15: suminf.    0.53406 (2) obj. -20.3859 iterations 5
Cbc0038I Pass  16: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  17: suminf.    0.61027 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  18: suminf.    0.24683 (2) obj. -20.3859 iterations 3
Cbc0038I Pass  19: suminf.    0.89283 (4) obj. -20.3859 iterations 10
Cbc0038I Pass  20: suminf.    0.52721 (2) obj. -20.3859 iterations 7
Cbc0038I Pass  21: suminf.    0.76791 (2) obj. -20.3859 iterations 8
Cbc0038I Pass  22: suminf.    0.59284 (2) obj. -20.3859 iterations 4
Cbc0038I Pass  23: suminf.    0.65782 (3) obj. -20.3859 iterations 2
Cbc0038I Pass  24: suminf.    0.65782 (3) obj. -20.3859 iterations 0
Cbc0038I Pass  25: suminf.    0.84701 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  26: suminf.    0.78451 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  27: suminf.    0.82841 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  28: suminf.    0.52721 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  29: suminf.    0.24683 (2) obj. -20.3859 iterations 2
Cbc0038I Pass  30: suminf.    0.61027 (2) obj. -20.3859 iterations 1
Cbc0038I Pass  31: suminf.    1.87070 (6) obj. -20.3859 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16.4444 - took 0.02 seconds
Cbc0012I Integer solution of -16.4444 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 16.333333
Cbc0013I At root node, 9 cuts changed objective from -55.858058 to -35.019497 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1508 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 756 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16.4444, took 2664 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 64 times (600 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

