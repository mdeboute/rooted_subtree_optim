Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 261 (-3) columns and 1488 (-57) elements
Clp1000I sum of infeasibilities 5.11094e-06 - average 1.02424e-08, 160 fixed columns
Coin0506I Presolve 187 (-312) rows, 100 (-161) columns and 554 (-934) elements
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.7429681 - largest nonzero change 0 ( 0%) - largest zero change 2.6728704e-05
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Coin0511I After Postsolve, objective 177.30905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13610725 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Coin0511I After Postsolve, objective 177.30905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.3090494 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 261 columns (260 integer (260 of which binary)) and 1488 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 66 integers unsatisfied sum - 13.9339
Cbc0038I Solution found of 18.3009
Cbc0038I Relaxing continuous gives -2.73703
Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 115 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -2.73703 to -113.854 (0.20 seconds)
Cbc0038I Round again with cutoff of -120.2
Cbc0038I Pass   1: suminf.    6.40346 (64) obj. -120.2 iterations 211
Cbc0038I Pass   2: suminf.    2.63580 (9) obj. -120.2 iterations 79
Cbc0038I Pass   3: suminf.    1.89965 (12) obj. -120.2 iterations 26
Cbc0038I Pass   4: suminf.    3.17592 (9) obj. -120.2 iterations 32
Cbc0038I Pass   5: suminf.    2.82256 (7) obj. -120.2 iterations 15
Cbc0038I Pass   6: suminf.    2.76445 (7) obj. -120.2 iterations 5
Cbc0038I Pass   7: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass   8: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass   9: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  10: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I Pass  11: suminf.    3.34057 (9) obj. -120.2 iterations 30
Cbc0038I Pass  12: suminf.    2.40643 (8) obj. -120.2 iterations 16
Cbc0038I Pass  13: suminf.    2.86055 (9) obj. -120.2 iterations 24
Cbc0038I Pass  14: suminf.    2.82597 (8) obj. -120.2 iterations 10
Cbc0038I Pass  15: suminf.    3.06886 (8) obj. -120.2 iterations 28
Cbc0038I Pass  16: suminf.    2.76445 (7) obj. -120.2 iterations 8
Cbc0038I Pass  17: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass  18: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass  19: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  20: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I Pass  21: suminf.    3.34057 (9) obj. -120.2 iterations 30
Cbc0038I Pass  22: suminf.    2.40643 (8) obj. -120.2 iterations 16
Cbc0038I Pass  23: suminf.    2.86055 (9) obj. -120.2 iterations 24
Cbc0038I Pass  24: suminf.    2.82597 (8) obj. -120.2 iterations 10
Cbc0038I Pass  25: suminf.    3.06886 (8) obj. -120.2 iterations 28
Cbc0038I Pass  26: suminf.    2.76445 (7) obj. -120.2 iterations 8
Cbc0038I Pass  27: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass  28: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass  29: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  30: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 188 rows 106 columns
Cbc0038I Mini branch and bound improved solution from -113.854 to -115.324 (0.44 seconds)
Cbc0038I Round again with cutoff of -131.622
Cbc0038I Pass  30: suminf.    7.03690 (64) obj. -131.622 iterations 0
Cbc0038I Pass  31: suminf.    4.02849 (16) obj. -131.622 iterations 82
Cbc0038I Pass  32: suminf.    4.02849 (16) obj. -131.622 iterations 0
Cbc0038I Pass  33: suminf.    4.08292 (12) obj. -131.622 iterations 42
Cbc0038I Pass  34: suminf.    4.08292 (12) obj. -131.622 iterations 4
Cbc0038I Pass  35: suminf.    3.39429 (11) obj. -131.622 iterations 32
Cbc0038I Pass  36: suminf.    3.39429 (11) obj. -131.622 iterations 5
Cbc0038I Pass  37: suminf.    4.09983 (10) obj. -131.622 iterations 29
Cbc0038I Pass  38: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  39: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  40: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  41: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I Pass  42: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  43: suminf.    4.09983 (10) obj. -131.622 iterations 30
Cbc0038I Pass  44: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  45: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  46: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  47: suminf.    3.39576 (10) obj. -131.622 iterations 35
Cbc0038I Pass  48: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  49: suminf.    4.09983 (10) obj. -131.622 iterations 29
Cbc0038I Pass  50: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  51: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  52: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  53: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I Pass  54: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  55: suminf.    4.09983 (10) obj. -131.622 iterations 30
Cbc0038I Pass  56: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  57: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  58: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  59: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 188 rows 106 columns
Cbc0038I Mini branch and bound did not improve solution (0.67 seconds)
Cbc0038I After 0.67 seconds - Feasibility pump exiting with objective of -115.324 - took 0.58 seconds
Cbc0012I Integer solution of -115.32416 found by feasibility pump after 0 iterations and 0 nodes (0.67 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 117 rows 68 columns
Cbc0031I 41 added rows had average density of 132.46341
Cbc0013I At root node, 41 cuts changed objective from -177.30905 to -159.98682 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25845 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.956 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3091 row cuts average 254.3 elements, 0 column cuts (0 active)  in 0.826 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.826 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 227 row cuts average 249.0 elements, 0 column cuts (0 active)  in 0.336 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -115.32416 best solution, best possible -159.98682 (8.54 seconds)
Cbc0010I After 5 nodes, 4 on tree, -115.32416 best solution, best possible -159.98682 (9.33 seconds)
Cbc0010I After 27 nodes, 9 on tree, -115.32416 best solution, best possible -159.98682 (10.03 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 0 rows 0 columns
Cbc0004I Integer solution of -115.37394 found after 18054 iterations and 77 nodes (10.44 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 2 rows 4 columns
Cbc0010I After 105 nodes, 8 on tree, -115.37394 best solution, best possible -159.98682 (10.75 seconds)
Cbc0010I After 152 nodes, 13 on tree, -115.37394 best solution, best possible -159.98682 (11.47 seconds)
Cbc0010I After 191 nodes, 2 on tree, -115.37394 best solution, best possible -159.98615 (12.19 seconds)
Cbc0010I After 195 nodes, 6 on tree, -115.37394 best solution, best possible -159.98615 (12.94 seconds)
Cbc0010I After 234 nodes, 10 on tree, -115.37394 best solution, best possible -159.98615 (13.64 seconds)
Cbc0012I Integer solution of -115.63206 found by rounding after 25166 iterations and 238 nodes (13.69 seconds)
Cbc0004I Integer solution of -116.28431 found after 25925 iterations and 257 nodes (13.80 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 159 rows 86 columns
Cbc0010I After 292 nodes, 7 on tree, -116.28431 best solution, best possible -159.98615 (14.37 seconds)
Cbc0001I Search completed - best objective -116.284311, took 30330 iterations and 350 nodes (14.93 seconds)
Cbc0032I Strong branching done 3052 times (80888 iterations), fathomed 37 nodes and fixed 123 variables
Cbc0035I Maximum depth 59, 2531 variables fixed on reduced cost
Total time (CPU seconds):       14.39   (Wallclock seconds):       15.03

