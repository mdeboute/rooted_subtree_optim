Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.0813e-05 - average 8.38215e-08, 6 fixed columns
Coin0506I Presolve 120 (-9) rows, 70 (-6) columns and 372 (-30) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 2.6148013 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Coin0511I After Postsolve, objective 35.995058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Clp0000I Optimal - objective value 35.995058
Coin0511I After Postsolve, objective 35.995058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.99505808 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 11.5189
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.92851 iterations 58
Cbc0038I Solution found of 7.92851
Cbc0038I Relaxing continuous gives 7.92851
Cbc0038I Rounding solution of 0.467403 is better than previous of 7.92851

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 84 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 0.467403 to -10.7707 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.2932
Cbc0038I Pass   2: suminf.    2.55359 (12) obj. -13.2932 iterations 16
Cbc0038I Pass   3: suminf.    2.51017 (11) obj. -13.2932 iterations 1
Cbc0038I Pass   4: suminf.    2.98151 (8) obj. -13.2932 iterations 12
Cbc0038I Pass   5: suminf.    1.91690 (7) obj. -13.2932 iterations 2
Cbc0038I Pass   6: suminf.    1.91690 (7) obj. -13.2932 iterations 0
Cbc0038I Pass   7: suminf.    2.38324 (7) obj. -13.2932 iterations 10
Cbc0038I Pass   8: suminf.    2.10325 (9) obj. -13.2932 iterations 5
Cbc0038I Pass   9: suminf.    2.09545 (8) obj. -13.2932 iterations 1
Cbc0038I Pass  10: suminf.    2.31657 (7) obj. -13.2932 iterations 9
Cbc0038I Pass  11: suminf.    2.31657 (7) obj. -13.2932 iterations 0
Cbc0038I Pass  12: suminf.    2.15702 (8) obj. -13.2932 iterations 9
Cbc0038I Pass  13: suminf.    2.05927 (8) obj. -13.2932 iterations 21
Cbc0038I Pass  14: suminf.    1.17618 (7) obj. -13.2932 iterations 7
Cbc0038I Pass  15: suminf.    1.71018 (6) obj. -13.2932 iterations 10
Cbc0038I Pass  16: suminf.    1.48192 (6) obj. -13.2932 iterations 9
Cbc0038I Pass  17: suminf.    2.50728 (6) obj. -13.2932 iterations 3
Cbc0038I Pass  18: suminf.    1.80503 (7) obj. -13.2932 iterations 3
Cbc0038I Pass  19: suminf.    1.79370 (7) obj. -13.2932 iterations 1
Cbc0038I Pass  20: suminf.    1.86902 (5) obj. -13.2932 iterations 6
Cbc0038I Pass  21: suminf.    1.85613 (6) obj. -13.2932 iterations 4
Cbc0038I Pass  22: suminf.    1.41721 (5) obj. -13.2932 iterations 6
Cbc0038I Pass  23: suminf.    1.41721 (5) obj. -13.2932 iterations 0
Cbc0038I Pass  24: suminf.    2.19747 (5) obj. -13.2932 iterations 2
Cbc0038I Pass  25: suminf.    1.20351 (5) obj. -13.2932 iterations 1
Cbc0038I Pass  26: suminf.    1.37371 (6) obj. -13.2932 iterations 15
Cbc0038I Pass  27: suminf.    0.81473 (4) obj. -13.2932 iterations 9
Cbc0038I Pass  28: suminf.    1.32967 (4) obj. -13.2932 iterations 10
Cbc0038I Pass  29: suminf.    1.21851 (5) obj. -13.2932 iterations 1
Cbc0038I Pass  30: suminf.    1.77335 (6) obj. -13.2932 iterations 7
Cbc0038I Pass  31: suminf.    1.76240 (6) obj. -13.2932 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 91 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.7707 - took 0.08 seconds
Cbc0012I Integer solution of -10.77072 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 84 rows 50 columns
Cbc0031I 34 added rows had average density of 39.882353
Cbc0013I At root node, 34 cuts changed objective from -35.995058 to -26.207905 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19047 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2281 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 158 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.77072 best solution, best possible -26.207905 (1.19 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 43 columns
Cbc0012I Integer solution of -11.58618 found by RINS after 11020 iterations and 45 nodes (1.45 seconds)
Cbc0001I Search completed - best objective -11.58618, took 11904 iterations and 64 nodes (1.48 seconds)
Cbc0032I Strong branching done 804 times (17152 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 25, 97 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       1.49

