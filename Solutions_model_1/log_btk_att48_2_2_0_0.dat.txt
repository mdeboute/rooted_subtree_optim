Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 46 (-4) columns and 205 (-80) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 72 (-9) rows, 43 (-3) columns and 184 (-21) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Coin0511I After Postsolve, objective 2725.5159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Coin0511I After Postsolve, objective 2725.5159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2725.51589 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 46 columns (45 integer (45 of which binary)) and 205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.870%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.5346
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -425.391 iterations 32
Cbc0038I Solution found of -425.391
Cbc0038I Relaxing continuous gives -425.391
Cbc0038I Rounding solution of -716.28 is better than previous of -425.391

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 46 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -716.28 to -1470.67 (0.02 seconds)
Cbc0038I Round again with cutoff of -1596.15
Cbc0038I Pass   2: suminf.    2.77395 (13) obj. -1596.15 iterations 12
Cbc0038I Pass   3: suminf.    1.83512 (5) obj. -1596.15 iterations 16
Cbc0038I Pass   4: suminf.    1.41678 (6) obj. -1596.15 iterations 5
Cbc0038I Pass   5: suminf.    1.50878 (5) obj. -1596.15 iterations 8
Cbc0038I Pass   6: suminf.    1.50878 (5) obj. -1596.15 iterations 0
Cbc0038I Pass   7: suminf.    1.96843 (6) obj. -1596.15 iterations 4
Cbc0038I Pass   8: suminf.    1.31323 (4) obj. -1596.15 iterations 3
Cbc0038I Pass   9: suminf.    1.81352 (7) obj. -1596.15 iterations 9
Cbc0038I Pass  10: suminf.    1.31225 (5) obj. -1596.15 iterations 4
Cbc0038I Pass  11: suminf.    1.54311 (5) obj. -1596.15 iterations 6
Cbc0038I Pass  12: suminf.    1.54311 (5) obj. -1596.15 iterations 0
Cbc0038I Pass  13: suminf.    0.92663 (3) obj. -1596.15 iterations 4
Cbc0038I Pass  14: suminf.    0.89788 (3) obj. -1596.15 iterations 1
Cbc0038I Pass  15: suminf.    1.18504 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  16: suminf.    1.05842 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  17: suminf.    1.34897 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  18: suminf.    2.81835 (12) obj. -1596.15 iterations 18
Cbc0038I Pass  19: suminf.    1.56624 (9) obj. -1596.15 iterations 5
Cbc0038I Pass  20: suminf.    1.61046 (6) obj. -1596.15 iterations 10
Cbc0038I Pass  21: suminf.    1.42058 (6) obj. -1596.15 iterations 1
Cbc0038I Pass  22: suminf.    1.05272 (3) obj. -1596.15 iterations 6
Cbc0038I Pass  23: suminf.    0.66893 (2) obj. -1596.15 iterations 1
Cbc0038I Pass  24: suminf.    0.82013 (2) obj. -1596.15 iterations 1
Cbc0038I Pass  25: suminf.    0.70790 (3) obj. -1596.15 iterations 1
Cbc0038I Pass  26: suminf.    1.15147 (3) obj. -1596.15 iterations 2
Cbc0038I Pass  27: suminf.    1.10027 (5) obj. -1596.15 iterations 14
Cbc0038I Pass  28: suminf.    0.78110 (4) obj. -1596.15 iterations 1
Cbc0038I Pass  29: suminf.    1.01447 (4) obj. -1596.15 iterations 4
Cbc0038I Pass  30: suminf.    1.00958 (5) obj. -1596.15 iterations 1
Cbc0038I Pass  31: suminf.    1.33514 (4) obj. -1596.15 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 46 columns, reduced to 70 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1470.67 - took 0.07 seconds
Cbc0012I Integer solution of -1470.666 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 21 added rows had average density of 21.238095
Cbc0013I At root node, 21 cuts changed objective from -2725.5159 to -1949.2235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6654 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1380 row cuts average 43.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1470.666, took 4721 iterations and 16 nodes (0.48 seconds)
Cbc0032I Strong branching done 318 times (4976 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.49

