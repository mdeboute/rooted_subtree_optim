Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 1.43927e-05 - average 7.90808e-08, 15 fixed columns
Coin0506I Presolve 152 (-30) rows, 85 (-15) columns and 466 (-90) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 2.056621 - largest nonzero change 0 ( 0%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Coin0511I After Postsolve, objective 32.101225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Coin0511I After Postsolve, objective 32.101225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.10122513 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 12.6271
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.0566 iterations 68
Cbc0038I Solution found of 11.0566
Cbc0038I Relaxing continuous gives 11.0566
Cbc0038I Rounding solution of -1.14023 is better than previous of 11.0566

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -1.14023 to -2.95326 (0.07 seconds)
Cbc0038I Round again with cutoff of -5.86814
Cbc0038I Pass   2: suminf.    2.21646 (9) obj. -5.86814 iterations 15
Cbc0038I Pass   3: suminf.    2.37787 (11) obj. -5.86814 iterations 23
Cbc0038I Pass   4: suminf.    1.55306 (7) obj. -5.86814 iterations 10
Cbc0038I Pass   5: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass   6: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass   7: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass   8: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass   9: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  10: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  11: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  12: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  13: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  14: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  15: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  16: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  17: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  18: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  19: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  20: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  21: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  22: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  23: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  24: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  25: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  26: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  27: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  28: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  29: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  30: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  31: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -2.95326 to -3.81129 (0.14 seconds)
Cbc0038I Round again with cutoff of -11.1148
Cbc0038I Pass  31: suminf.    3.45402 (13) obj. -11.1148 iterations 4
Cbc0038I Pass  32: suminf.    3.08341 (10) obj. -11.1148 iterations 15
Cbc0038I Pass  33: suminf.    2.82499 (9) obj. -11.1148 iterations 3
Cbc0038I Pass  34: suminf.    3.57818 (11) obj. -11.1148 iterations 13
Cbc0038I Pass  35: suminf.    3.30049 (11) obj. -11.1148 iterations 12
Cbc0038I Pass  36: suminf.    4.56976 (15) obj. -11.1148 iterations 27
Cbc0038I Pass  37: suminf.    2.71453 (8) obj. -11.1148 iterations 26
Cbc0038I Pass  38: suminf.    2.34003 (8) obj. -11.1148 iterations 9
Cbc0038I Pass  39: suminf.    3.19211 (11) obj. -11.1148 iterations 8
Cbc0038I Pass  40: suminf.    3.19211 (11) obj. -11.1148 iterations 1
Cbc0038I Pass  41: suminf.    3.55934 (11) obj. -11.1148 iterations 16
Cbc0038I Pass  42: suminf.    2.69982 (10) obj. -11.1148 iterations 10
Cbc0038I Pass  43: suminf.    2.69982 (10) obj. -11.1148 iterations 1
Cbc0038I Pass  44: suminf.    3.17455 (10) obj. -11.1148 iterations 20
Cbc0038I Pass  45: suminf.    2.60971 (10) obj. -11.1148 iterations 6
Cbc0038I Pass  46: suminf.    4.00275 (10) obj. -11.1148 iterations 21
Cbc0038I Pass  47: suminf.    2.24233 (7) obj. -11.1148 iterations 9
Cbc0038I Pass  48: suminf.    2.07180 (8) obj. -11.1148 iterations 6
Cbc0038I Pass  49: suminf.    3.58035 (13) obj. -11.1148 iterations 18
Cbc0038I Pass  50: suminf.    3.21722 (10) obj. -11.1148 iterations 2
Cbc0038I Pass  51: suminf.    2.69982 (10) obj. -11.1148 iterations 4
Cbc0038I Pass  52: suminf.    2.69982 (10) obj. -11.1148 iterations 0
Cbc0038I Pass  53: suminf.    3.17455 (10) obj. -11.1148 iterations 20
Cbc0038I Pass  54: suminf.    2.60971 (10) obj. -11.1148 iterations 6
Cbc0038I Pass  55: suminf.    4.00275 (10) obj. -11.1148 iterations 21
Cbc0038I Pass  56: suminf.    2.24233 (7) obj. -11.1148 iterations 9
Cbc0038I Pass  57: suminf.    2.07180 (8) obj. -11.1148 iterations 6
Cbc0038I Pass  58: suminf.    3.58035 (13) obj. -11.1148 iterations 18
Cbc0038I Pass  59: suminf.    3.21722 (10) obj. -11.1148 iterations 2
Cbc0038I Pass  60: suminf.    2.69982 (10) obj. -11.1148 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 83 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -3.81129 - took 0.17 seconds
Cbc0012I Integer solution of -3.811288 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0012I Integer solution of -4.286078 found by RINS after 0 iterations and 0 nodes (0.25 seconds)
Cbc0031I 33 added rows had average density of 56.575758
Cbc0013I At root node, 33 cuts changed objective from -32.101225 to -24.23575 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18476 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2670 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.286078 best solution, best possible -24.23575 (1.62 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 9 rows 10 columns
Cbc0038I Full problem 182 rows 100 columns, reduced to 75 rows 48 columns
Cbc0012I Integer solution of -4.403768 found by RINS after 12682 iterations and 91 nodes (2.16 seconds)
Cbc0001I Search completed - best objective -4.403767999999999, took 14043 iterations and 136 nodes (2.25 seconds)
Cbc0032I Strong branching done 1520 times (28398 iterations), fathomed 16 nodes and fixed 89 variables
Cbc0035I Maximum depth 33, 354 variables fixed on reduced cost
Total time (CPU seconds):       2.13   (Wallclock seconds):       2.27

