Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 1.19235e-05 - average 2.59207e-07, 16 fixed columns
Coin0506I Presolve 15 (-31) rows, 9 (-16) columns and 42 (-93) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Coin0511I After Postsolve, objective 2732.0168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Clp0000I Optimal - objective value 2732.0168
Coin0511I After Postsolve, objective 2732.0168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2732.016771 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.196%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.363636
Cbc0038I Pass   1: suminf.    0.27153 (3) obj. -2242.13 iterations 3
Cbc0038I Solution found of 2.75894
Cbc0038I Relaxing continuous gives -14.4007
Cbc0038I Rounding solution of -1185.28 is better than previous of -14.4007

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -1185.28 to -1242.79 (0.01 seconds)
Cbc0038I Round again with cutoff of -1344.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27153 (3) obj. -2242.13 iterations 0
Cbc0038I Pass   3: suminf.    0.16587 (2) obj. -1344.2 iterations 7
Cbc0038I Pass   4: suminf.    0.16587 (2) obj. -1344.2 iterations 0
Cbc0038I Pass   5: suminf.    0.42722 (3) obj. -1344.2 iterations 4
Cbc0038I Pass   6: suminf.    0.42722 (3) obj. -1344.2 iterations 0
Cbc0038I Pass   7: suminf.    0.12710 (3) obj. -1344.2 iterations 4
Cbc0038I Pass   8: suminf.    0.91525 (3) obj. -1558.49 iterations 6
Cbc0038I Pass   9: suminf.    0.24849 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  10: suminf.    0.34286 (1) obj. -1608.92 iterations 3
Cbc0038I Pass  11: suminf.    0.13575 (1) obj. -1344.2 iterations 1
Cbc0038I Pass  12: suminf.    2.94118 (7) obj. -1344.2 iterations 10
Cbc0038I Pass  13: suminf.    0.25442 (2) obj. -1344.2 iterations 9
Cbc0038I Pass  14: suminf.    0.31429 (1) obj. -1584.22 iterations 2
Cbc0038I Pass  15: suminf.    0.12650 (1) obj. -1344.2 iterations 1
Cbc0038I Pass  16: suminf.    0.56153 (4) obj. -1344.2 iterations 3
Cbc0038I Pass  17: suminf.    0.38723 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  18: suminf.    0.49555 (3) obj. -1344.2 iterations 9
Cbc0038I Pass  19: suminf.    0.49555 (3) obj. -1344.2 iterations 0
Cbc0038I Pass  20: suminf.    0.62069 (2) obj. -1582.3 iterations 6
Cbc0038I Pass  21: suminf.    0.10979 (1) obj. -1344.2 iterations 2
Cbc0038I Pass  22: suminf.    0.17143 (1) obj. -1422.99 iterations 1
Cbc0038I Pass  23: suminf.    0.22102 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  24: suminf.    0.17143 (1) obj. -1422.99 iterations 3
Cbc0038I Pass  25: suminf.    0.55467 (3) obj. -1344.2 iterations 6
Cbc0038I Pass  26: suminf.    0.11265 (1) obj. -1344.2 iterations 4
Cbc0038I Pass  27: suminf.    0.17143 (1) obj. -1419.34 iterations 2
Cbc0038I Pass  28: suminf.    0.52190 (3) obj. -1344.2 iterations 6
Cbc0038I Pass  29: suminf.    0.16399 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  30: suminf.    0.20715 (2) obj. -1344.2 iterations 3
Cbc0038I Pass  31: suminf.    0.16949 (3) obj. -1344.2 iterations 1
Cbc0038I Rounding solution of -1266.43 is better than previous of -1242.79

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 37 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1266.43 to -1275.13 (0.01 seconds)
Cbc0038I Round again with cutoff of -1526.74
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27153 (3) obj. -2242.13 iterations 0
Cbc0038I Pass  32: suminf.    0.49060 (2) obj. -1526.74 iterations 5
Cbc0038I Pass  33: suminf.    0.49060 (2) obj. -1526.74 iterations 0
Cbc0038I Pass  34: suminf.    1.18326 (4) obj. -1526.74 iterations 7
Cbc0038I Pass  35: suminf.    0.85438 (3) obj. -1526.74 iterations 1
Cbc0038I Pass  36: suminf.    1.10350 (3) obj. -1526.74 iterations 2
Cbc0038I Pass  37: suminf.    0.98106 (3) obj. -1746.85 iterations 1
Cbc0038I Pass  38: suminf.    0.87431 (4) obj. -1526.74 iterations 3
Cbc0038I Pass  39: suminf.    2.17575 (7) obj. -1526.74 iterations 9
Cbc0038I Pass  40: suminf.    0.85242 (3) obj. -1526.74 iterations 7
Cbc0038I Pass  41: suminf.    0.96552 (2) obj. -1762.3 iterations 5
Cbc0038I Pass  42: suminf.    0.57917 (2) obj. -1526.74 iterations 2
Cbc0038I Pass  43: suminf.    1.28077 (5) obj. -1526.74 iterations 8
Cbc0038I Pass  44: suminf.    0.51033 (2) obj. -1526.74 iterations 4
Cbc0038I Pass  45: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  46: suminf.    0.94079 (4) obj. -1526.74 iterations 8
Cbc0038I Pass  47: suminf.    0.94079 (4) obj. -1526.74 iterations 0
Cbc0038I Pass  48: suminf.    0.86207 (2) obj. -1865.64 iterations 5
Cbc0038I Pass  49: suminf.    0.58207 (2) obj. -1526.74 iterations 1
Cbc0038I Pass  50: suminf.    0.78634 (4) obj. -1526.74 iterations 9
Cbc0038I Pass  51: suminf.    0.63344 (3) obj. -1526.74 iterations 4
Cbc0038I Pass  52: suminf.    0.73146 (3) obj. -1526.74 iterations 3
Cbc0038I Pass  53: suminf.    0.51033 (2) obj. -1526.74 iterations 1
Cbc0038I Pass  54: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  55: suminf.    0.93103 (2) obj. -1867.34 iterations 3
Cbc0038I Pass  56: suminf.    0.93103 (2) obj. -1867.34 iterations 2
Cbc0038I Pass  57: suminf.    0.82759 (2) obj. -1911.59 iterations 3
Cbc0038I Pass  58: suminf.    0.82759 (2) obj. -1911.59 iterations 0
Cbc0038I Pass  59: suminf.    0.54120 (2) obj. -1526.74 iterations 3
Cbc0038I Pass  60: suminf.    1.44165 (4) obj. -1526.74 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1275.13 - took 0.04 seconds
Cbc0012I Integer solution of -1275.1259 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 16 rows 9 columns
Cbc0012I Integer solution of -1275.168 found by DiveCoefficient after 1021 iterations and 0 nodes (1.46 seconds)
Cbc0031I 10 added rows had average density of 11.1
Cbc0013I At root node, 10 cuts changed objective from -2256.9162 to -1290.6442 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 368 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.779 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1275.168 best solution, best possible -1290.644 (1.46 seconds)
Cbc0012I Integer solution of -1276.3181 found by DiveCoefficient after 1024 iterations and 1 nodes (1.48 seconds)
Cbc0001I Search completed - best objective -1276.31807, took 1089 iterations and 4 nodes (1.54 seconds)
Cbc0032I Strong branching done 28 times (165 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.55

