Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-21) rows, 50 (-3) columns and 260 (-43) elements
Clp1000I sum of infeasibilities 1.5967e-05 - average 1.90084e-07, 5 fixed columns
Coin0506I Presolve 74 (-10) rows, 45 (-5) columns and 230 (-30) elements
Clp0000I Optimal - objective value 46.737273
Clp0000I Optimal - objective value 46.737273
Coin0511I After Postsolve, objective 46.737273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.737273
Clp0000I Optimal - objective value 46.737273
Clp0000I Optimal - objective value 46.737273
Coin0511I After Postsolve, objective 46.737273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.73727282 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 50 columns (49 integer (49 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.624%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 9.11215
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.52423 iterations 30
Cbc0038I Solution found of 9.52423
Cbc0038I Relaxing continuous gives 9.52423
Cbc0038I Rounding solution of -9.30861 is better than previous of 9.52423

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 50 columns, reduced to 46 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -9.30861 to -11.2684 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.8154
Cbc0038I Pass   2: suminf.    2.28610 (9) obj. -14.8154 iterations 11
Cbc0038I Pass   3: suminf.    0.81009 (6) obj. -14.8154 iterations 9
Cbc0038I Pass   4: suminf.    2.28892 (8) obj. -14.8154 iterations 4
Cbc0038I Pass   5: suminf.    1.07535 (18) obj. -14.8154 iterations 11
Cbc0038I Pass   6: suminf.    0.95837 (30) obj. -14.8154 iterations 12
Cbc0038I Pass   7: suminf.    0.52053 (3) obj. -14.8154 iterations 39
Cbc0038I Pass   8: suminf.    0.52053 (3) obj. -14.8154 iterations 0
Cbc0038I Pass   9: suminf.    1.14532 (4) obj. -14.8154 iterations 8
Cbc0038I Pass  10: suminf.    1.14532 (4) obj. -14.8154 iterations 0
Cbc0038I Pass  11: suminf.    1.38729 (5) obj. -14.8154 iterations 8
Cbc0038I Pass  12: suminf.    1.38729 (5) obj. -14.8154 iterations 0
Cbc0038I Pass  13: suminf.    1.45400 (4) obj. -14.8154 iterations 4
Cbc0038I Pass  14: suminf.    1.45400 (4) obj. -14.8154 iterations 0
Cbc0038I Pass  15: suminf.    1.65224 (5) obj. -14.8154 iterations 7
Cbc0038I Pass  16: suminf.    1.63581 (4) obj. -14.8154 iterations 1
Cbc0038I Pass  17: suminf.    3.40664 (10) obj. -14.8154 iterations 18
Cbc0038I Pass  18: suminf.    1.70434 (7) obj. -14.8154 iterations 15
Cbc0038I Pass  19: suminf.    1.97537 (5) obj. -14.8154 iterations 12
Cbc0038I Pass  20: suminf.    1.97537 (5) obj. -14.8154 iterations 0
Cbc0038I Pass  21: suminf.    1.86285 (9) obj. -14.8154 iterations 4
Cbc0038I Pass  22: suminf.    1.86285 (9) obj. -14.8154 iterations 0
Cbc0038I Pass  23: suminf.    2.13819 (6) obj. -14.8154 iterations 7
Cbc0038I Pass  24: suminf.    1.63230 (5) obj. -14.8154 iterations 2
Cbc0038I Pass  25: suminf.    1.33519 (4) obj. -14.8154 iterations 2
Cbc0038I Pass  26: suminf.    1.30582 (5) obj. -14.8154 iterations 3
Cbc0038I Pass  27: suminf.    2.00871 (6) obj. -14.8154 iterations 10
Cbc0038I Pass  28: suminf.    1.92683 (6) obj. -14.8154 iterations 5
Cbc0038I Pass  29: suminf.    1.68822 (6) obj. -14.8154 iterations 4
Cbc0038I Pass  30: suminf.    1.68822 (6) obj. -14.8154 iterations 1
Cbc0038I Pass  31: suminf.    1.75371 (5) obj. -14.8154 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 50 columns, reduced to 58 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -11.2684 to -11.4853 (0.07 seconds)
Cbc0038I Round again with cutoff of -21.1998
Cbc0038I Pass  31: suminf.    3.27371 (11) obj. -21.1998 iterations 3
Cbc0038I Pass  32: suminf.    1.37880 (6) obj. -21.1998 iterations 10
Cbc0038I Pass  33: suminf.    1.12447 (5) obj. -21.1998 iterations 3
Cbc0038I Pass  34: suminf.    1.73169 (6) obj. -21.1998 iterations 7
Cbc0038I Pass  35: suminf.    1.28879 (8) obj. -21.1998 iterations 4
Cbc0038I Pass  36: suminf.    2.42829 (7) obj. -21.1998 iterations 12
Cbc0038I Pass  37: suminf.    2.42829 (7) obj. -21.1998 iterations 0
Cbc0038I Pass  38: suminf.    1.26898 (5) obj. -21.1998 iterations 7
Cbc0038I Pass  39: suminf.    1.12447 (5) obj. -21.1998 iterations 1
Cbc0038I Pass  40: suminf.    1.73169 (6) obj. -21.1998 iterations 7
Cbc0038I Pass  41: suminf.    1.28879 (8) obj. -21.1998 iterations 4
Cbc0038I Pass  42: suminf.    2.42829 (7) obj. -21.1998 iterations 12
Cbc0038I Pass  43: suminf.    2.42829 (7) obj. -21.1998 iterations 0
Cbc0038I Pass  44: suminf.    1.26898 (5) obj. -21.1998 iterations 7
Cbc0038I Pass  45: suminf.    1.12447 (5) obj. -21.1998 iterations 1
Cbc0038I Pass  46: suminf.    1.73169 (6) obj. -21.1998 iterations 7
Cbc0038I Pass  47: suminf.    1.28879 (8) obj. -21.1998 iterations 4
Cbc0038I Pass  48: suminf.    2.42829 (7) obj. -21.1998 iterations 12
Cbc0038I Pass  49: suminf.    2.42829 (7) obj. -21.1998 iterations 0
Cbc0038I Pass  50: suminf.    1.26898 (5) obj. -21.1998 iterations 7
Cbc0038I Pass  51: suminf.    1.12447 (5) obj. -21.1998 iterations 1
Cbc0038I Pass  52: suminf.    1.73169 (6) obj. -21.1998 iterations 7
Cbc0038I Pass  53: suminf.    1.28879 (8) obj. -21.1998 iterations 4
Cbc0038I Pass  54: suminf.    2.42829 (7) obj. -21.1998 iterations 12
Cbc0038I Pass  55: suminf.    2.42829 (7) obj. -21.1998 iterations 0
Cbc0038I Pass  56: suminf.    1.26898 (5) obj. -21.1998 iterations 7
Cbc0038I Pass  57: suminf.    1.12447 (5) obj. -21.1998 iterations 1
Cbc0038I Pass  58: suminf.    1.73169 (6) obj. -21.1998 iterations 7
Cbc0038I Pass  59: suminf.    1.28879 (8) obj. -21.1998 iterations 4
Cbc0038I Pass  60: suminf.    2.42829 (7) obj. -21.1998 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 50 columns, reduced to 46 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.4853 - took 0.10 seconds
Cbc0012I Integer solution of -11.48527 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 84 rows 50 columns, reduced to 50 rows 33 columns
Cbc0031I 17 added rows had average density of 36.647059
Cbc0013I At root node, 17 cuts changed objective from -46.737273 to -33.982344 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6154 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1167 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -11.48527000000001, took 6078 iterations and 46 nodes (0.67 seconds)
Cbc0032I Strong branching done 494 times (8758 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 16, 143 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.67

