Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-8) rows, 22 (-2) columns and 114 (-15) elements
Clp1000I sum of infeasibilities 1.38996e-05 - average 3.564e-07, 1 fixed columns
Coin0506I Presolve 33 (-6) rows, 19 (-3) columns and 96 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Coin0511I After Postsolve, objective 82.82068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Clp0000I Optimal - objective value 82.82068
Coin0511I After Postsolve, objective 82.82068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.82067977 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.141%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.22421
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.7943 iterations 20
Cbc0038I Solution found of 19.7943
Cbc0038I Relaxing continuous gives 19.7943
Cbc0038I Rounding solution of -10.9338 is better than previous of 19.7943

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -10.9338 to -41.054 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.2017
Cbc0038I Pass   2: suminf.    2.35058 (7) obj. -45.2017 iterations 6
Cbc0038I Pass   3: suminf.    0.84851 (4) obj. -45.2017 iterations 3
Cbc0038I Pass   4: suminf.    0.84851 (4) obj. -45.2017 iterations 1
Cbc0038I Pass   5: suminf.    0.73053 (3) obj. -45.2017 iterations 4
Cbc0038I Pass   6: suminf.    0.73053 (3) obj. -45.2017 iterations 2
Cbc0038I Pass   7: suminf.    0.69477 (3) obj. -45.2017 iterations 3
Cbc0038I Pass   8: suminf.    1.13163 (3) obj. -45.2017 iterations 4
Cbc0038I Pass   9: suminf.    0.79046 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  10: suminf.    0.69593 (3) obj. -45.2017 iterations 6
Cbc0038I Pass  11: suminf.    1.12662 (6) obj. -45.2017 iterations 8
Cbc0038I Pass  12: suminf.    0.89480 (5) obj. -45.2017 iterations 3
Cbc0038I Pass  13: suminf.    0.63654 (2) obj. -45.2017 iterations 6
Cbc0038I Pass  14: suminf.    0.15287 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  15: suminf.    0.37235 (3) obj. -45.2017 iterations 1
Cbc0038I Pass  16: suminf.    0.15287 (2) obj. -45.2017 iterations 3
Cbc0038I Pass  17: suminf.    0.77451 (3) obj. -45.2017 iterations 3
Cbc0038I Pass  18: suminf.    0.66966 (3) obj. -45.2017 iterations 2
Cbc0038I Pass  19: suminf.    0.96603 (4) obj. -45.2017 iterations 5
Cbc0038I Pass  20: suminf.    0.83321 (3) obj. -45.2017 iterations 1
Cbc0038I Pass  21: suminf.    0.97670 (3) obj. -45.2017 iterations 3
Cbc0038I Pass  22: suminf.    0.97670 (3) obj. -45.2017 iterations 0
Cbc0038I Pass  23: suminf.    0.55449 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  24: suminf.    0.15287 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  25: suminf.    0.63654 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  26: suminf.    1.93636 (5) obj. -45.2017 iterations 10
Cbc0038I Pass  27: suminf.    1.27326 (5) obj. -45.2017 iterations 3
Cbc0038I Pass  28: suminf.    0.86238 (3) obj. -45.2017 iterations 5
Cbc0038I Pass  29: suminf.    0.71789 (2) obj. -45.2017 iterations 2
Cbc0038I Pass  30: suminf.    0.68246 (2) obj. -45.2017 iterations 1
Cbc0038I Pass  31: suminf.    1.45546 (4) obj. -45.2017 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -41.054 - took 0.02 seconds
Cbc0012I Integer solution of -41.05397 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 19.083333
Cbc0013I At root node, 12 cuts changed objective from -82.530433 to -61.853576 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1077 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 940 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41.05396999999999, took 2158 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 56 times (673 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 1, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

