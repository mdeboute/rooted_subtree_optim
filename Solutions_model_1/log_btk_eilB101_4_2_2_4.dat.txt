Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 3.6502e-05 - average 1.98381e-07, 15 fixed columns
Coin0506I Presolve 156 (-28) rows, 86 (-15) columns and 476 (-86) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 1.6441322 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Coin0511I After Postsolve, objective 35.132672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Coin0511I After Postsolve, objective 35.132672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.13267152 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 565 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.47514
Cbc0038I Solution found of 4.22284
Cbc0038I Relaxing continuous gives -3.7823
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.7823 to -8.02183 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.6684
Cbc0038I Pass   1: suminf.    1.38998 (42) obj. -10.6684 iterations 47
Cbc0038I Pass   2: suminf.    2.59052 (8) obj. -10.6684 iterations 41
Cbc0038I Pass   3: suminf.    2.59052 (8) obj. -10.6684 iterations 0
Cbc0038I Pass   4: suminf.    2.51560 (8) obj. -10.6684 iterations 22
Cbc0038I Pass   5: suminf.    2.41008 (8) obj. -10.6684 iterations 1
Cbc0038I Pass   6: suminf.    1.94087 (6) obj. -10.6684 iterations 5
Cbc0038I Pass   7: suminf.    1.94087 (6) obj. -10.6684 iterations 1
Cbc0038I Pass   8: suminf.    2.69863 (7) obj. -10.6684 iterations 12
Cbc0038I Pass   9: suminf.    1.21836 (9) obj. -10.6684 iterations 11
Cbc0038I Pass  10: suminf.    1.21836 (9) obj. -10.6684 iterations 0
Cbc0038I Pass  11: suminf.    1.59452 (6) obj. -10.6684 iterations 21
Cbc0038I Pass  12: suminf.    0.77541 (3) obj. -10.6684 iterations 11
Cbc0038I Pass  13: suminf.    0.76778 (3) obj. -10.6684 iterations 1
Cbc0038I Pass  14: suminf.    1.48259 (5) obj. -10.6684 iterations 10
Cbc0038I Pass  15: suminf.    2.08546 (6) obj. -10.6684 iterations 13
Cbc0038I Pass  16: suminf.    1.45750 (5) obj. -10.6684 iterations 13
Cbc0038I Pass  17: suminf.    1.45750 (5) obj. -10.6684 iterations 0
Cbc0038I Pass  18: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  19: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  20: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I Pass  21: suminf.    1.45182 (5) obj. -10.6684 iterations 12
Cbc0038I Pass  22: suminf.    1.45750 (5) obj. -10.6684 iterations 2
Cbc0038I Pass  23: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  24: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  25: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I Pass  26: suminf.    1.45182 (5) obj. -10.6684 iterations 12
Cbc0038I Pass  27: suminf.    1.45750 (5) obj. -10.6684 iterations 2
Cbc0038I Pass  28: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  29: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  30: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 97 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -8.02183 to -8.42782 (0.10 seconds)
Cbc0038I Round again with cutoff of -15.4322
Cbc0038I Pass  30: suminf.    2.35155 (42) obj. -15.4322 iterations 0
Cbc0038I Pass  31: suminf.    2.19158 (9) obj. -15.4322 iterations 46
Cbc0038I Pass  32: suminf.    2.19158 (9) obj. -15.4322 iterations 0
Cbc0038I Pass  33: suminf.    3.82686 (14) obj. -15.4322 iterations 15
Cbc0038I Pass  34: suminf.    2.99877 (11) obj. -15.4322 iterations 12
Cbc0038I Pass  35: suminf.    3.07395 (9) obj. -15.4322 iterations 34
Cbc0038I Pass  36: suminf.    2.51920 (8) obj. -15.4322 iterations 4
Cbc0038I Pass  37: suminf.    1.28691 (6) obj. -15.4322 iterations 9
Cbc0038I Pass  38: suminf.    1.24696 (6) obj. -15.4322 iterations 6
Cbc0038I Pass  39: suminf.    3.01765 (9) obj. -15.4322 iterations 18
Cbc0038I Pass  40: suminf.    2.04329 (7) obj. -15.4322 iterations 10
Cbc0038I Pass  41: suminf.    1.97804 (7) obj. -15.4322 iterations 3
Cbc0038I Pass  42: suminf.    1.95730 (7) obj. -15.4322 iterations 5
Cbc0038I Pass  43: suminf.    2.57409 (8) obj. -15.4322 iterations 19
Cbc0038I Pass  44: suminf.    2.57409 (8) obj. -15.4322 iterations 0
Cbc0038I Pass  45: suminf.    2.64558 (9) obj. -15.4322 iterations 11
Cbc0038I Pass  46: suminf.    2.63652 (9) obj. -15.4322 iterations 5
Cbc0038I Pass  47: suminf.    3.04161 (11) obj. -15.4322 iterations 12
Cbc0038I Pass  48: suminf.    2.18642 (7) obj. -15.4322 iterations 9
Cbc0038I Pass  49: suminf.    2.94472 (8) obj. -15.4322 iterations 9
Cbc0038I Pass  50: suminf.    2.93198 (9) obj. -15.4322 iterations 6
Cbc0038I Pass  51: suminf.    2.05922 (9) obj. -15.4322 iterations 22
Cbc0038I Pass  52: suminf.    1.51440 (8) obj. -15.4322 iterations 4
Cbc0038I Pass  53: suminf.    2.32078 (9) obj. -15.4322 iterations 17
Cbc0038I Pass  54: suminf.    2.32869 (8) obj. -15.4322 iterations 1
Cbc0038I Pass  55: suminf.    2.62905 (8) obj. -15.4322 iterations 24
Cbc0038I Pass  56: suminf.    1.87931 (7) obj. -15.4322 iterations 8
Cbc0038I Pass  57: suminf.    1.55791 (7) obj. -15.4322 iterations 13
Cbc0038I Pass  58: suminf.    1.55791 (7) obj. -15.4322 iterations 0
Cbc0038I Pass  59: suminf.    2.29791 (15) obj. -15.4322 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 104 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -8.42782 - took 0.14 seconds
Cbc0012I Integer solution of -8.42782 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0031I 26 added rows had average density of 64.076923
Cbc0013I At root node, 26 cuts changed objective from -34.487118 to -28.764958 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12939 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2010 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.42782 best solution, best possible -28.764958 (1.29 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -8.84145 found by RINS after 9593 iterations and 44 nodes (1.63 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 41 rows 31 columns
Cbc0012I Integer solution of -8.98281 found by DiveCoefficient after 11467 iterations and 101 nodes (1.79 seconds)
Cbc0001I Search completed - best objective -8.982810000000001, took 11922 iterations and 132 nodes (1.82 seconds)
Cbc0032I Strong branching done 1336 times (23181 iterations), fathomed 9 nodes and fixed 41 variables
Cbc0035I Maximum depth 39, 307 variables fixed on reduced cost
Total time (CPU seconds):       1.76   (Wallclock seconds):       1.84

