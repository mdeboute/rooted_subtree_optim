Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 44 (-6) columns and 248 (-37) elements
Clp1000I sum of infeasibilities 0.00822756 - average 9.79471e-05, 23 fixed columns
Coin0506I Presolve 29 (-55) rows, 20 (-24) columns and 90 (-158) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Coin0511I After Postsolve, objective 8059.8134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.57778 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Clp0000I Optimal - objective value 8059.8134
Coin0511I After Postsolve, objective 8059.8134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8059.813388 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 44 columns (43 integer (43 of which binary)) and 248 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.094%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.15899
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7025.2 iterations 21
Cbc0038I Solution found of -7025.2
Cbc0038I Relaxing continuous gives -7025.2
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 44 columns, reduced to 23 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7025.2 to -7426.72 (0.01 seconds)
Cbc0038I Round again with cutoff of -7490.03
Cbc0038I Pass   2: suminf.    0.73385 (4) obj. -7490.03 iterations 8
Cbc0038I Pass   3: suminf.    0.41302 (3) obj. -7490.03 iterations 10
Cbc0038I Pass   4: suminf.    1.00000 (9) obj. -7490.03 iterations 13
Cbc0038I Pass   5: suminf.    0.52536 (5) obj. -7490.03 iterations 7
Cbc0038I Pass   6: suminf.    0.51803 (5) obj. -7490.03 iterations 5
Cbc0038I Pass   7: suminf.    0.43298 (3) obj. -7490.03 iterations 12
Cbc0038I Pass   8: suminf.    0.15605 (1) obj. -7490.03 iterations 5
Cbc0038I Pass   9: suminf.    0.25930 (2) obj. -7490.03 iterations 2
Cbc0038I Pass  10: suminf.    2.78303 (10) obj. -7490.03 iterations 11
Cbc0038I Pass  11: suminf.    2.18723 (12) obj. -7490.03 iterations 11
Cbc0038I Pass  12: suminf.    1.00000 (6) obj. -7490.03 iterations 18
Cbc0038I Pass  13: suminf.    0.43298 (3) obj. -7490.03 iterations 7
Cbc0038I Pass  14: suminf.    1.70348 (7) obj. -7490.03 iterations 7
Cbc0038I Pass  15: suminf.    1.49858 (11) obj. -7490.03 iterations 7
Cbc0038I Pass  16: suminf.    0.50292 (4) obj. -7490.03 iterations 16
Cbc0038I Pass  17: suminf.    1.00000 (9) obj. -7490.03 iterations 12
Cbc0038I Pass  18: suminf.    0.66672 (4) obj. -7490.03 iterations 6
Cbc0038I Pass  19: suminf.    0.60863 (6) obj. -7490.03 iterations 5
Cbc0038I Pass  20: suminf.    0.92326 (5) obj. -7490.03 iterations 10
Cbc0038I Pass  21: suminf.    0.85792 (4) obj. -7490.03 iterations 1
Cbc0038I Pass  22: suminf.    0.22940 (1) obj. -7490.03 iterations 6
Cbc0038I Pass  23: suminf.    0.16770 (1) obj. -7490.03 iterations 1
Cbc0038I Pass  24: suminf.    1.63831 (7) obj. -7490.03 iterations 14
Cbc0038I Pass  25: suminf.    0.43697 (3) obj. -7490.03 iterations 20
Cbc0038I Pass  26: suminf.    0.35088 (2) obj. -7490.03 iterations 3
Cbc0038I Pass  27: suminf.    0.03479 (1) obj. -7490.03 iterations 2
Cbc0038I Pass  28: suminf.    4.59909 (15) obj. -7490.03 iterations 17
Cbc0038I Pass  29: suminf.    1.98545 (8) obj. -7490.03 iterations 4
Cbc0038I Pass  30: suminf.    1.00000 (6) obj. -7490.03 iterations 6
Cbc0038I Pass  31: suminf.    0.94857 (5) obj. -7490.03 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 44 columns, reduced to 45 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7426.72 - took 0.01 seconds
Cbc0012I Integer solution of -7426.7229 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 84 rows 44 columns, reduced to 23 rows 17 columns
Cbc0031I 6 added rows had average density of 4.3333333
Cbc0013I At root node, 15 cuts changed objective from -8059.8134 to -7426.7229 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 4.5 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7426.722899999999, took 10 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

