Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 62 (-37) rows, 33 (-17) columns and 154 (-131) elements
Clp0000I Optimal - objective value 8211.5529
Coin0511I After Postsolve, objective 8211.5529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8211.552941 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 33 columns (32 integer (32 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4
Cbc0038I Pass   1: suminf.    1.00000 (2) obj. -4804.7 iterations 16
Cbc0038I Solution found of -3711.06
Cbc0038I Relaxing continuous gives -3711.06
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3711.06 to -7064.37 (0.01 seconds)
Cbc0038I Round again with cutoff of -7178.88
Cbc0038I Pass   2: suminf.    1.09452 (9) obj. -7178.88 iterations 10
Cbc0038I Pass   3: suminf.    1.04772 (9) obj. -7178.88 iterations 1
Cbc0038I Pass   4: suminf.    2.15111 (9) obj. -7178.88 iterations 6
Cbc0038I Pass   5: suminf.    0.41039 (3) obj. -7178.88 iterations 5
Cbc0038I Pass   6: suminf.    0.15440 (7) obj. -7178.88 iterations 9
Cbc0038I Pass   7: suminf.    0.15440 (7) obj. -7178.88 iterations 0
Cbc0038I Pass   8: suminf.    1.85475 (6) obj. -7178.88 iterations 5
Cbc0038I Pass   9: suminf.    1.53202 (6) obj. -7178.88 iterations 1
Cbc0038I Pass  10: suminf.    1.00000 (4) obj. -7178.88 iterations 7
Cbc0038I Pass  11: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  12: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  13: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  14: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  15: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  16: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  17: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  18: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  19: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  20: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  21: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  22: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  23: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  24: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  25: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  26: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  27: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  28: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  29: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  30: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  31: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7064.37 - took 0.01 seconds
Cbc0012I Integer solution of -7064.372 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 62 rows 33 columns, reduced to 17 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 3.6666667
Cbc0013I At root node, 6 cuts changed objective from -8209.483 to -7071.663 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 191 row cuts average 3.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7064.372000000001, took 94 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

