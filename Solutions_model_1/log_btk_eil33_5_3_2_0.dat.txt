Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 30 (-5) columns and 158 (-37) elements
Clp1000I sum of infeasibilities 0.000102028 - average 1.92505e-06, 1 fixed columns
Coin0506I Presolve 51 (-2) rows, 29 (-1) columns and 152 (-6) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 74.116184
Clp0000I Optimal - objective value 74.116184
Coin0511I After Postsolve, objective 74.116184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.116184
Clp0000I Optimal - objective value 74.116184
Clp0000I Optimal - objective value 74.116184
Coin0511I After Postsolve, objective 74.116184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.11618379 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.224%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.69254
Cbc0038I Solution found of 2.68929
Cbc0038I Relaxing continuous gives -9.08571
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -9.08571 to -34.067 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.6214
Cbc0038I Pass   1: suminf.    1.97353 (13) obj. -37.6214 iterations 23
Cbc0038I Pass   2: suminf.    1.57386 (6) obj. -37.6214 iterations 14
Cbc0038I Pass   3: suminf.    1.57386 (6) obj. -37.6214 iterations 0
Cbc0038I Pass   4: suminf.    2.33709 (7) obj. -37.6214 iterations 8
Cbc0038I Pass   5: suminf.    1.30921 (4) obj. -37.6214 iterations 4
Cbc0038I Pass   6: suminf.    1.30921 (4) obj. -37.6214 iterations 0
Cbc0038I Pass   7: suminf.    1.12047 (3) obj. -37.6214 iterations 3
Cbc0038I Pass   8: suminf.    1.12047 (3) obj. -37.6214 iterations 0
Cbc0038I Pass   9: suminf.    1.30415 (3) obj. -37.6214 iterations 3
Cbc0038I Pass  10: suminf.    0.79589 (3) obj. -37.6214 iterations 4
Cbc0038I Pass  11: suminf.    0.65112 (4) obj. -37.6214 iterations 5
Cbc0038I Pass  12: suminf.    0.88731 (4) obj. -37.6214 iterations 4
Cbc0038I Pass  13: suminf.    0.74293 (3) obj. -37.6214 iterations 1
Cbc0038I Pass  14: suminf.    0.79965 (2) obj. -37.6214 iterations 1
Cbc0038I Pass  15: suminf.    0.17573 (2) obj. -37.6214 iterations 3
Cbc0038I Pass  16: suminf.    0.97769 (4) obj. -37.6214 iterations 7
Cbc0038I Pass  17: suminf.    0.55782 (3) obj. -37.6214 iterations 4
Cbc0038I Pass  18: suminf.    0.20291 (2) obj. -37.6214 iterations 4
Cbc0038I Pass  19: suminf.    2.87598 (9) obj. -37.6214 iterations 9
Cbc0038I Pass  20: suminf.    1.05879 (4) obj. -37.6214 iterations 8
Cbc0038I Pass  21: suminf.    0.58980 (2) obj. -37.6214 iterations 3
Cbc0038I Pass  22: suminf.    0.13193 (1) obj. -37.6214 iterations 3
Cbc0038I Pass  23: suminf.    0.21458 (1) obj. -37.6214 iterations 2
Cbc0038I Pass  24: suminf.    0.94082 (4) obj. -37.6214 iterations 5
Cbc0038I Pass  25: suminf.    1.51010 (6) obj. -37.6214 iterations 12
Cbc0038I Pass  26: suminf.    1.12988 (4) obj. -37.6214 iterations 6
Cbc0038I Pass  27: suminf.    1.07939 (4) obj. -37.6214 iterations 1
Cbc0038I Pass  28: suminf.    1.07009 (3) obj. -37.6214 iterations 2
Cbc0038I Pass  29: suminf.    0.57240 (5) obj. -37.6214 iterations 3
Cbc0038I Pass  30: suminf.    1.21148 (3) obj. -37.6214 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -34.067 - took 0.05 seconds
Cbc0012I Integer solution of -34.06696 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 37 rows 22 columns
Cbc0031I 13 added rows had average density of 22.307692
Cbc0013I At root node, 13 cuts changed objective from -69.610604 to -54.732036 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2022 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 918 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34.06696000000001, took 3090 iterations and 20 nodes (0.29 seconds)
Cbc0032I Strong branching done 182 times (1808 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 6, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.29

