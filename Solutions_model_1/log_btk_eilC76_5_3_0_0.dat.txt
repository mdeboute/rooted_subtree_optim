Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 7.93823e-05 - average 5.96859e-07, 10 fixed columns
Coin0506I Presolve 111 (-22) rows, 64 (-12) columns and 342 (-68) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 2.3306215 - largest nonzero change 0 ( 0%) - largest zero change 2.9468171e-05
Clp0000I Optimal - objective value 37.54231
Clp0000I Optimal - objective value 37.54231
Coin0511I After Postsolve, objective 37.54231, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.54231
Clp0000I Optimal - objective value 37.54231
Clp0000I Optimal - objective value 37.54231
Coin0511I After Postsolve, objective 37.54231, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.54231023 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.99609
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.09541 iterations 45
Cbc0038I Solution found of 9.09541
Cbc0038I Relaxing continuous gives 9.09541
Cbc0038I Rounding solution of -5.16586 is better than previous of 9.09541

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -5.16586 to -11.3052 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.929
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.90139 (21) obj. -13.929 iterations 20
Cbc0038I Pass   3: suminf.    1.85895 (25) obj. -13.929 iterations 9
Cbc0038I Pass   4: suminf.    0.97450 (4) obj. -13.929 iterations 38
Cbc0038I Pass   5: suminf.    0.97450 (4) obj. -13.929 iterations 1
Cbc0038I Pass   6: suminf.    1.01050 (4) obj. -13.929 iterations 8
Cbc0038I Pass   7: suminf.    1.01050 (4) obj. -13.929 iterations 1
Cbc0038I Pass   8: suminf.    0.87953 (2) obj. -13.929 iterations 3
Cbc0038I Pass   9: suminf.    0.53338 (3) obj. -13.929 iterations 2
Cbc0038I Pass  10: suminf.    1.17492 (3) obj. -13.929 iterations 2
Cbc0038I Pass  11: suminf.    1.01050 (4) obj. -13.929 iterations 3
Cbc0038I Pass  12: suminf.    1.01050 (4) obj. -13.929 iterations 1
Cbc0038I Pass  13: suminf.    0.87953 (2) obj. -13.929 iterations 3
Cbc0038I Pass  14: suminf.    0.53338 (3) obj. -13.929 iterations 2
Cbc0038I Pass  15: suminf.    1.17492 (3) obj. -13.929 iterations 2
Cbc0038I Pass  16: suminf.    1.01050 (4) obj. -13.929 iterations 3
Cbc0038I Pass  17: suminf.    1.01050 (4) obj. -13.929 iterations 1
Cbc0038I Pass  18: suminf.    0.87953 (2) obj. -13.929 iterations 3
Cbc0038I Pass  19: suminf.    0.53338 (3) obj. -13.929 iterations 2
Cbc0038I Pass  20: suminf.    1.17492 (3) obj. -13.929 iterations 2
Cbc0038I Pass  21: suminf.    1.01050 (4) obj. -13.929 iterations 3
Cbc0038I Pass  22: suminf.    1.01050 (4) obj. -13.929 iterations 1
Cbc0038I Pass  23: suminf.    0.87953 (2) obj. -13.929 iterations 3
Cbc0038I Pass  24: suminf.    0.53338 (3) obj. -13.929 iterations 2
Cbc0038I Pass  25: suminf.    1.17492 (3) obj. -13.929 iterations 2
Cbc0038I Pass  26: suminf.    1.01050 (4) obj. -13.929 iterations 3
Cbc0038I Pass  27: suminf.    1.01050 (4) obj. -13.929 iterations 1
Cbc0038I Pass  28: suminf.    0.87953 (2) obj. -13.929 iterations 3
Cbc0038I Pass  29: suminf.    0.53338 (3) obj. -13.929 iterations 2
Cbc0038I Pass  30: suminf.    1.17492 (3) obj. -13.929 iterations 2
Cbc0038I Pass  31: suminf.    1.01050 (4) obj. -13.929 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -11.3052 to -12.2615 (0.08 seconds)
Cbc0038I Round again with cutoff of -18.6517
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.05513 (21) obj. -18.6517 iterations 0
Cbc0038I Pass  32: suminf.    2.98695 (25) obj. -18.6517 iterations 9
Cbc0038I Pass  33: suminf.    1.41849 (7) obj. -18.6517 iterations 32
Cbc0038I Pass  34: suminf.    0.86038 (5) obj. -18.6517 iterations 8
Cbc0038I Pass  35: suminf.    1.48228 (5) obj. -18.6517 iterations 8
Cbc0038I Pass  36: suminf.    1.48228 (5) obj. -18.6517 iterations 1
Cbc0038I Pass  37: suminf.    1.60910 (5) obj. -18.6517 iterations 3
Cbc0038I Pass  38: suminf.    0.94849 (4) obj. -18.6517 iterations 2
Cbc0038I Pass  39: suminf.    1.59936 (4) obj. -18.6517 iterations 2
Cbc0038I Pass  40: suminf.    3.84557 (13) obj. -18.6517 iterations 18
Cbc0038I Pass  41: suminf.    2.07511 (7) obj. -18.6517 iterations 15
Cbc0038I Pass  42: suminf.    1.39126 (4) obj. -18.6517 iterations 11
Cbc0038I Pass  43: suminf.    1.37627 (5) obj. -18.6517 iterations 1
Cbc0038I Pass  44: suminf.    2.13317 (5) obj. -18.6517 iterations 2
Cbc0038I Pass  45: suminf.    2.11789 (5) obj. -18.6517 iterations 2
Cbc0038I Pass  46: suminf.    1.53659 (4) obj. -18.6517 iterations 3
Cbc0038I Pass  47: suminf.    1.50698 (5) obj. -18.6517 iterations 1
Cbc0038I Pass  48: suminf.    1.37627 (5) obj. -18.6517 iterations 1
Cbc0038I Pass  49: suminf.    1.37627 (5) obj. -18.6517 iterations 0
Cbc0038I Pass  50: suminf.    2.13317 (5) obj. -18.6517 iterations 2
Cbc0038I Pass  51: suminf.    2.11789 (5) obj. -18.6517 iterations 2
Cbc0038I Pass  52: suminf.    1.53659 (4) obj. -18.6517 iterations 3
Cbc0038I Pass  53: suminf.    1.50698 (5) obj. -18.6517 iterations 1
Cbc0038I Pass  54: suminf.    1.37627 (5) obj. -18.6517 iterations 1
Cbc0038I Pass  55: suminf.    1.37627 (5) obj. -18.6517 iterations 0
Cbc0038I Pass  56: suminf.    2.13317 (5) obj. -18.6517 iterations 2
Cbc0038I Pass  57: suminf.    2.11789 (5) obj. -18.6517 iterations 2
Cbc0038I Pass  58: suminf.    1.53659 (4) obj. -18.6517 iterations 3
Cbc0038I Pass  59: suminf.    1.50698 (5) obj. -18.6517 iterations 1
Cbc0038I Pass  60: suminf.    1.37627 (5) obj. -18.6517 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -12.2615 - took 0.10 seconds
Cbc0012I Integer solution of -12.261463 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 64 rows 38 columns
Cbc0031I 24 added rows had average density of 50.166667
Cbc0013I At root node, 24 cuts changed objective from -37.54231 to -30.140523 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13765 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1931 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 72.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.261463 best solution, best possible -30.140523 (0.93 seconds)
Cbc0012I Integer solution of -12.29993 found by DiveCoefficient after 7364 iterations and 7 nodes (1.01 seconds)
Cbc0016I Integer solution of -12.344293 found by strong branching after 7437 iterations and 25 nodes (1.02 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 3 rows 5 columns
Cbc0038I Full problem 133 rows 76 columns, reduced to 87 rows 51 columns
Cbc0001I Search completed - best objective -12.3442925, took 10218 iterations and 176 nodes (1.48 seconds)
Cbc0032I Strong branching done 1150 times (16412 iterations), fathomed 18 nodes and fixed 42 variables
Cbc0035I Maximum depth 30, 265 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.49

