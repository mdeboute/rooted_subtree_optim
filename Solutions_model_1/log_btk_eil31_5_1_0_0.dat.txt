Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 2.33156e-06 - average 4.48377e-08, 20 fixed columns
Coin0506I Presolve 14 (-38) rows, 8 (-20) columns and 37 (-116) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Coin0511I After Postsolve, objective 1394.1353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0273433 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Coin0511I After Postsolve, objective 1394.1353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1394.135304 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.02171
Cbc0038I Pass   1: suminf.    0.27778 (1) obj. -904.828 iterations 8
Cbc0038I Solution found of -348.695
Cbc0038I Relaxing continuous gives -348.695
Cbc0038I Rounding solution of -614.304 is better than previous of -348.695

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -614.304 to -817.154 (0.01 seconds)
Cbc0038I Round again with cutoff of -839.751
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27778 (1) obj. -904.828 iterations 0
Cbc0038I Pass   3: suminf.    0.36229 (1) obj. -839.751 iterations 2
Cbc0038I Pass   4: suminf.    0.16250 (1) obj. -850.413 iterations 9
Cbc0038I Pass   5: suminf.    0.14865 (1) obj. -839.751 iterations 5
Cbc0038I Pass   6: suminf.    0.16250 (1) obj. -850.413 iterations 2
Cbc0038I Pass   7: suminf.    0.64493 (4) obj. -839.751 iterations 8
Cbc0038I Pass   8: suminf.    0.38249 (2) obj. -839.751 iterations 4
Cbc0038I Pass   9: suminf.    0.42105 (2) obj. -886.737 iterations 2
Cbc0038I Pass  10: suminf.    0.29902 (2) obj. -839.751 iterations 3
Cbc0038I Pass  11: suminf.    0.51519 (3) obj. -839.751 iterations 3
Cbc0038I Pass  12: suminf.    1.08447 (4) obj. -839.751 iterations 6
Cbc0038I Pass  13: suminf.    0.86889 (3) obj. -839.751 iterations 2
Cbc0038I Pass  14: suminf.    0.63068 (4) obj. -839.751 iterations 6
Cbc0038I Pass  15: suminf.    0.63068 (4) obj. -839.751 iterations 2
Cbc0038I Pass  16: suminf.    1.05978 (3) obj. -839.751 iterations 12
Cbc0038I Pass  17: suminf.    0.10000 (1) obj. -964.214 iterations 4
Cbc0038I Pass  18: suminf.    0.10000 (1) obj. -964.214 iterations 0
Cbc0038I Pass  19: suminf.    0.35519 (1) obj. -839.751 iterations 3
Cbc0038I Pass  20: suminf.    0.35772 (1) obj. -841.81 iterations 1
Cbc0038I Pass  21: suminf.    0.58430 (3) obj. -839.751 iterations 6
Cbc0038I Pass  22: suminf.    0.52593 (2) obj. -839.751 iterations 3
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -885.761 iterations 1
Cbc0038I Pass  24: suminf.    0.15328 (1) obj. -839.751 iterations 1
Cbc0038I Pass  25: suminf.    0.75927 (3) obj. -839.751 iterations 3
Cbc0038I Pass  26: suminf.    0.15328 (1) obj. -839.751 iterations 5
Cbc0038I Pass  27: suminf.    0.56826 (2) obj. -839.751 iterations 10
Cbc0038I Pass  28: suminf.    0.25641 (1) obj. -885.424 iterations 2
Cbc0038I Pass  29: suminf.    0.14103 (1) obj. -839.751 iterations 3
Cbc0038I Pass  30: suminf.    0.23577 (1) obj. -916.645 iterations 1
Cbc0038I Pass  31: suminf.    0.55254 (7) obj. -839.751 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -817.154 to -869.558 (0.02 seconds)
Cbc0038I Round again with cutoff of -904.272
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27778 (1) obj. -904.828 iterations 0
Cbc0038I Pass  32: suminf.    0.27850 (1) obj. -904.272 iterations 1
Cbc0038I Pass  33: suminf.    1.49363 (6) obj. -904.272 iterations 14
Cbc0038I Pass  34: suminf.    1.26295 (4) obj. -904.272 iterations 7
Cbc0038I Pass  35: suminf.    0.66102 (3) obj. -904.272 iterations 3
Cbc0038I Pass  36: suminf.    0.88180 (3) obj. -904.272 iterations 5
Cbc0038I Pass  37: suminf.    0.88180 (3) obj. -904.272 iterations 0
Cbc0038I Pass  38: suminf.    1.49236 (4) obj. -904.272 iterations 5
Cbc0038I Pass  39: suminf.    0.32907 (2) obj. -904.272 iterations 5
Cbc0038I Pass  40: suminf.    1.20103 (4) obj. -904.272 iterations 5
Cbc0038I Pass  41: suminf.    1.20103 (4) obj. -904.272 iterations 3
Cbc0038I Pass  42: suminf.    1.54649 (4) obj. -904.272 iterations 4
Cbc0038I Pass  43: suminf.    0.55685 (3) obj. -904.272 iterations 8
Cbc0038I Pass  44: suminf.    0.55685 (3) obj. -904.272 iterations 0
Cbc0038I Pass  45: suminf.    0.10000 (1) obj. -964.214 iterations 5
Cbc0038I Pass  46: suminf.    0.10000 (1) obj. -964.214 iterations 0
Cbc0038I Pass  47: suminf.    0.23632 (1) obj. -904.272 iterations 1
Cbc0038I Pass  48: suminf.    0.64921 (4) obj. -918.527 iterations 9
Cbc0038I Pass  49: suminf.    0.62976 (2) obj. -912.014 iterations 1
Cbc0038I Pass  50: suminf.    0.62843 (2) obj. -904.272 iterations 6
Cbc0038I Pass  51: suminf.    0.82315 (2) obj. -952.56 iterations 1
Cbc0038I Pass  52: suminf.    0.49109 (2) obj. -904.272 iterations 2
Cbc0038I Pass  53: suminf.    0.74452 (2) obj. -904.272 iterations 3
Cbc0038I Pass  54: suminf.    0.35806 (3) obj. -968.901 iterations 5
Cbc0038I Pass  55: suminf.    0.76680 (3) obj. -904.272 iterations 7
Cbc0038I Pass  56: suminf.    0.76680 (3) obj. -904.272 iterations 0
Cbc0038I Pass  57: suminf.    1.03782 (4) obj. -904.272 iterations 5
Cbc0038I Pass  58: suminf.    0.12710 (3) obj. -904.272 iterations 3
Cbc0038I Pass  59: suminf.    0.12710 (3) obj. -904.272 iterations 2
Cbc0038I Pass  60: suminf.    0.39747 (2) obj. -904.272 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -869.558 - took 0.04 seconds
Cbc0012I Integer solution of -869.5582 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 51 rows 28 columns, reduced to 9 rows 8 columns
Cbc0031I 5 added rows had average density of 18.2
Cbc0013I At root node, 5 cuts changed objective from -1043.1252 to -940.56648 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 361 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 323 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.834 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -869.5582 best solution, best possible -940.56648 (1.60 seconds)
Cbc0001I Search completed - best objective -869.5581999999999, took 1605 iterations and 10 nodes (1.64 seconds)
Cbc0032I Strong branching done 102 times (528 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.64

