Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-17) rows, 21 (-4) columns and 98 (-37) elements
Clp1000I sum of infeasibilities 3.65207e-06 - average 1.14127e-07, 3 fixed columns
Coin0506I Presolve 20 (-12) rows, 18 (-3) columns and 68 (-30) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Coin0511I After Postsolve, objective 149.72011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Clp0000I Optimal - objective value 149.72011
Coin0511I After Postsolve, objective 149.72011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.7201141 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 21 columns (20 integer (20 of which binary)) and 98 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 3.28058
Cbc0038I Pass   1: suminf.    0.29091 (1) obj. -93.9836 iterations 8
Cbc0038I Solution found of -62.7529
Cbc0038I Relaxing continuous gives -62.7529
Cbc0038I Rounding solution of -69.6497 is better than previous of -62.7529

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 21 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -77.4354
Cbc0038I Pass   2: suminf.    0.29091 (1) obj. -93.9836 iterations 0
Cbc0038I Pass   3: suminf.    0.13352 (2) obj. -77.4354 iterations 3
Cbc0038I Pass   4: suminf.    0.44260 (2) obj. -77.4354 iterations 2
Cbc0038I Pass   5: suminf.    0.43323 (2) obj. -77.4354 iterations 1
Cbc0038I Pass   6: suminf.    0.46863 (2) obj. -77.4354 iterations 2
Cbc0038I Pass   7: suminf.    0.42715 (2) obj. -77.4354 iterations 3
Cbc0038I Pass   8: suminf.    0.42715 (2) obj. -77.4354 iterations 0
Cbc0038I Pass   9: suminf.    0.76326 (3) obj. -77.4354 iterations 2
Cbc0038I Pass  10: suminf.    0.75217 (4) obj. -77.4354 iterations 2
Cbc0038I Pass  11: suminf.    0.73611 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  12: suminf.    0.64838 (2) obj. -77.4354 iterations 1
Cbc0038I Pass  13: suminf.    0.58518 (3) obj. -77.4354 iterations 3
Cbc0038I Pass  14: suminf.    0.60129 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  15: suminf.    0.72437 (3) obj. -77.4354 iterations 3
Cbc0038I Pass  16: suminf.    0.72437 (3) obj. -77.4354 iterations 0
Cbc0038I Pass  17: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  18: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  19: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  20: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  21: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  22: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  23: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  24: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  25: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  26: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  27: suminf.    0.58783 (2) obj. -77.4354 iterations 3
Cbc0038I Pass  28: suminf.    0.58783 (2) obj. -77.4354 iterations 0
Cbc0038I Pass  29: suminf.    0.74092 (2) obj. -77.4354 iterations 2
Cbc0038I Pass  30: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I Pass  31: suminf.    0.72437 (3) obj. -77.4354 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 21 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -69.6497 - took 0.01 seconds
Cbc0012I Integer solution of -69.649668 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 32 rows 21 columns, reduced to 13 rows 13 columns
Cbc0012I Integer solution of -91.88192 found by DiveCoefficient after 274 iterations and 0 nodes (0.04 seconds)
Cbc0031I 14 added rows had average density of 9.2142857
Cbc0013I At root node, 14 cuts changed objective from -147.50561 to -93.592483 in 32 passes
Cbc0014I Cut generator 0 (Probing) - 262 row cuts average 5.7 elements, 2 column cuts (2 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 120 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -93.589341 found by strong branching after 274 iterations and 0 nodes (0.04 seconds)
Cbc0001I Search completed - best objective -93.58934099999999, took 274 iterations and 0 nodes (0.04 seconds)
Cbc0032I Strong branching done 4 times (24 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

