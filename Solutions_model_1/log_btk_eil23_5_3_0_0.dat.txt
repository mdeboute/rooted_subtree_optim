Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 77 (-58) elements
Clp1000I sum of infeasibilities 0 - average 0, 4 fixed columns
Coin0506I Presolve 16 (-15) rows, 15 (-4) columns and 44 (-33) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Coin0511I After Postsolve, objective 292.07816, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Clp0000I Optimal - objective value 292.07816
Coin0511I After Postsolve, objective 292.07816, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 292.0781602 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.28216
Cbc0038I Pass   1: suminf.    0.02073 (1) obj. -215.326 iterations 4
Cbc0038I Solution found of -57.3229
Cbc0038I Relaxing continuous gives -57.3229
Cbc0038I Rounding solution of -91.4695 is better than previous of -57.3229

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -91.4695 to -110.435 (0.01 seconds)
Cbc0038I Round again with cutoff of -128.599
Cbc0038I Pass   2: suminf.    0.02073 (1) obj. -215.326 iterations 0
Cbc0038I Pass   3: suminf.    0.44176 (1) obj. -128.599 iterations 1
Cbc0038I Pass   4: suminf.    0.18651 (1) obj. -128.599 iterations 3
Cbc0038I Pass   5: suminf.    0.18651 (1) obj. -128.599 iterations 0
Cbc0038I Pass   6: suminf.    0.00610 (1) obj. -199.457 iterations 2
Cbc0038I Pass   7: suminf.    0.12805 (1) obj. -227.072 iterations 4
Cbc0038I Pass   8: suminf.    0.26164 (1) obj. -128.599 iterations 1
Cbc0038I Pass   9: suminf.    0.12805 (1) obj. -227.072 iterations 1
Cbc0038I Pass  10: suminf.    0.47674 (2) obj. -128.599 iterations 6
Cbc0038I Pass  11: suminf.    0.36354 (1) obj. -128.599 iterations 2
Cbc0038I Pass  12: suminf.    0.18902 (1) obj. -200.793 iterations 1
Cbc0038I Pass  13: suminf.    0.18902 (1) obj. -200.793 iterations 0
Cbc0038I Pass  14: suminf.    0.18902 (1) obj. -200.793 iterations 0
Cbc0038I Pass  15: suminf.    0.38293 (1) obj. -158.082 iterations 5
Cbc0038I Pass  16: suminf.    0.38293 (1) obj. -158.082 iterations 0
Cbc0038I Pass  17: suminf.    0.43435 (1) obj. -128.599 iterations 1
Cbc0038I Pass  18: suminf.    0.31124 (1) obj. -128.599 iterations 10
Cbc0038I Pass  19: suminf.    0.37463 (1) obj. -138.829 iterations 1
Cbc0038I Pass  20: suminf.    0.31124 (1) obj. -128.599 iterations 1
Cbc0038I Pass  21: suminf.    0.31953 (1) obj. -128.599 iterations 2
Cbc0038I Pass  22: suminf.    0.31953 (1) obj. -128.599 iterations 1
Cbc0038I Pass  23: suminf.    0.47220 (1) obj. -153.232 iterations 1
Cbc0038I Pass  24: suminf.    0.49854 (1) obj. -156.356 iterations 2
Cbc0038I Pass  25: suminf.    0.49854 (1) obj. -156.356 iterations 1
Cbc0038I Pass  26: suminf.    0.32943 (1) obj. -128.599 iterations 1
Cbc0038I Pass  27: suminf.    0.40356 (1) obj. -128.599 iterations 2
Cbc0038I Pass  28: suminf.    0.42829 (1) obj. -132.59 iterations 1
Cbc0038I Pass  29: suminf.    0.40356 (1) obj. -128.599 iterations 1
Cbc0038I Pass  30: suminf.    0.67338 (2) obj. -128.599 iterations 10
Cbc0038I Pass  31: suminf.    0.67338 (2) obj. -128.599 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -110.435 to -136.269 (0.02 seconds)
Cbc0038I Round again with cutoff of -167.431
Cbc0038I Pass  31: suminf.    0.02073 (1) obj. -215.326 iterations 0
Cbc0038I Pass  32: suminf.    0.31757 (1) obj. -167.431 iterations 1
Cbc0038I Pass  33: suminf.    0.05000 (1) obj. -212.202 iterations 3
Cbc0038I Pass  34: suminf.    0.05000 (1) obj. -212.202 iterations 1
Cbc0038I Pass  35: suminf.    0.32748 (1) obj. -167.431 iterations 1
Cbc0038I Pass  36: suminf.    0.40379 (1) obj. -167.431 iterations 8
Cbc0038I Pass  37: suminf.    0.35707 (1) obj. -174.969 iterations 1
Cbc0038I Pass  38: suminf.    0.40379 (1) obj. -167.431 iterations 1
Cbc0038I Pass  39: suminf.    0.44239 (2) obj. -167.431 iterations 15
Cbc0038I Pass  40: suminf.    0.44239 (2) obj. -167.431 iterations 1
Cbc0038I Pass  41: suminf.    0.66418 (2) obj. -167.431 iterations 2
Cbc0038I Pass  42: suminf.    0.43106 (2) obj. -167.431 iterations 3
Cbc0038I Pass  43: suminf.    0.42803 (2) obj. -167.431 iterations 1
Cbc0038I Pass  44: suminf.    0.39398 (1) obj. -167.431 iterations 2
Cbc0038I Pass  45: suminf.    0.30220 (1) obj. -182.24 iterations 1
Cbc0038I Pass  46: suminf.    0.34610 (1) obj. -178.278 iterations 7
Cbc0038I Pass  47: suminf.    0.34610 (1) obj. -178.278 iterations 2
Cbc0038I Pass  48: suminf.    0.41332 (1) obj. -167.431 iterations 1
Cbc0038I Pass  49: suminf.    0.41098 (1) obj. -182.13 iterations 6
Cbc0038I Pass  50: suminf.    0.49792 (1) obj. -167.431 iterations 1
Cbc0038I Pass  51: suminf.    0.41098 (1) obj. -182.13 iterations 1
Cbc0038I Pass  52: suminf.    0.71720 (3) obj. -167.431 iterations 11
Cbc0038I Pass  53: suminf.    0.39089 (2) obj. -167.431 iterations 2
Cbc0038I Pass  54: suminf.    0.34493 (1) obj. -167.431 iterations 2
Cbc0038I Pass  55: suminf.    0.23780 (1) obj. -233.586 iterations 2
Cbc0038I Pass  56: suminf.    0.26707 (1) obj. -192.632 iterations 3
Cbc0038I Pass  57: suminf.    0.26707 (1) obj. -192.632 iterations 0
Cbc0038I Pass  58: suminf.    0.42327 (1) obj. -167.431 iterations 1
Cbc0038I Pass  59: suminf.    1.33792 (4) obj. -167.431 iterations 8
Cbc0038I Pass  60: suminf.    0.92408 (3) obj. -167.431 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -136.269 - took 0.02 seconds
Cbc0012I Integer solution of -136.26924 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 13 rows 10 columns
Cbc0012I Integer solution of -148.5761 found by DiveCoefficient after 120 iterations and 0 nodes (0.04 seconds)
Cbc0031I 14 added rows had average density of 3.6428571
Cbc0013I At root node, 14 cuts changed objective from -292.07816 to -148.5761 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 182 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -148.5761, took 120 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

