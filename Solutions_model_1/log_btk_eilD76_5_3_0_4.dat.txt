Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 62 (-16) columns and 343 (-110) elements
Clp1000I sum of infeasibilities 2.84068e-05 - average 2.51388e-07, 14 fixed columns
Coin0506I Presolve 70 (-43) rows, 43 (-19) columns and 220 (-123) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Coin0511I After Postsolve, objective 200.77668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Coin0511I After Postsolve, objective 200.77668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 200.7766835 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 113 rows, 62 columns (61 integer (61 of which binary)) and 343 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.432%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.91057
Cbc0038I Pass   1: suminf.    0.11650 (2) obj. -161.65 iterations 18
Cbc0038I Solution found of -160.6
Cbc0038I Relaxing continuous gives -160.6
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -160.6 to -173.058 (0.02 seconds)
Cbc0038I Round again with cutoff of -175.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.04304 (5) obj. -175.83 iterations 3
Cbc0038I Pass   3: suminf.    1.04304 (5) obj. -175.83 iterations 2
Cbc0038I Pass   4: suminf.    0.78423 (2) obj. -175.83 iterations 16
Cbc0038I Pass   5: suminf.    0.78423 (2) obj. -175.83 iterations 0
Cbc0038I Pass   6: suminf.    0.32036 (2) obj. -175.83 iterations 7
Cbc0038I Pass   7: suminf.    0.84752 (3) obj. -175.83 iterations 4
Cbc0038I Pass   8: suminf.    1.39710 (9) obj. -175.83 iterations 10
Cbc0038I Pass   9: suminf.    1.00697 (9) obj. -175.83 iterations 6
Cbc0038I Pass  10: suminf.    1.21328 (5) obj. -175.83 iterations 18
Cbc0038I Pass  11: suminf.    1.20531 (7) obj. -175.83 iterations 8
Cbc0038I Pass  12: suminf.    1.58221 (5) obj. -175.83 iterations 14
Cbc0038I Pass  13: suminf.    0.95538 (4) obj. -175.83 iterations 5
Cbc0038I Pass  14: suminf.    1.53012 (4) obj. -175.83 iterations 7
Cbc0038I Pass  15: suminf.    0.78807 (5) obj. -175.83 iterations 6
Cbc0038I Pass  16: suminf.    1.17896 (4) obj. -175.83 iterations 8
Cbc0038I Pass  17: suminf.    1.77646 (7) obj. -175.83 iterations 7
Cbc0038I Pass  18: suminf.    1.39338 (6) obj. -175.83 iterations 6
Cbc0038I Pass  19: suminf.    1.93948 (5) obj. -175.83 iterations 5
Cbc0038I Pass  20: suminf.    2.47187 (10) obj. -175.83 iterations 26
Cbc0038I Pass  21: suminf.    1.92621 (9) obj. -175.83 iterations 7
Cbc0038I Pass  22: suminf.    0.91858 (2) obj. -175.83 iterations 16
Cbc0038I Pass  23: suminf.    0.14515 (2) obj. -175.83 iterations 6
Cbc0038I Pass  24: suminf.    0.61673 (3) obj. -175.83 iterations 4
Cbc0038I Pass  25: suminf.    2.43101 (11) obj. -175.83 iterations 13
Cbc0038I Pass  26: suminf.    1.46831 (6) obj. -175.83 iterations 11
Cbc0038I Pass  27: suminf.    0.57873 (3) obj. -175.83 iterations 4
Cbc0038I Pass  28: suminf.    0.53505 (4) obj. -175.83 iterations 2
Cbc0038I Pass  29: suminf.    0.91858 (2) obj. -175.83 iterations 9
Cbc0038I Pass  30: suminf.    0.14515 (2) obj. -175.83 iterations 5
Cbc0038I Pass  31: suminf.    0.61673 (3) obj. -175.83 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 38 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -173.058 to -175.021 (0.04 seconds)
Cbc0038I Round again with cutoff of -180.819
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14952 (8) obj. -180.819 iterations 1
Cbc0038I Pass  32: suminf.    1.56326 (6) obj. -180.819 iterations 19
Cbc0038I Pass  33: suminf.    0.86195 (4) obj. -180.819 iterations 10
Cbc0038I Pass  34: suminf.    1.07546 (3) obj. -180.819 iterations 6
Cbc0038I Pass  35: suminf.    0.67384 (3) obj. -180.819 iterations 3
Cbc0038I Pass  36: suminf.    1.26755 (5) obj. -180.819 iterations 7
Cbc0038I Pass  37: suminf.    1.07546 (3) obj. -180.819 iterations 11
Cbc0038I Pass  38: suminf.    2.56414 (8) obj. -180.819 iterations 13
Cbc0038I Pass  39: suminf.    0.59481 (4) obj. -180.819 iterations 9
Cbc0038I Pass  40: suminf.    1.09028 (3) obj. -180.819 iterations 10
Cbc0038I Pass  41: suminf.    0.80695 (7) obj. -180.819 iterations 4
Cbc0038I Pass  42: suminf.    2.64719 (10) obj. -180.819 iterations 20
Cbc0038I Pass  43: suminf.    2.54836 (10) obj. -180.819 iterations 5
Cbc0038I Pass  44: suminf.    1.12353 (8) obj. -180.819 iterations 18
Cbc0038I Pass  45: suminf.    0.70634 (5) obj. -180.819 iterations 4
Cbc0038I Pass  46: suminf.    0.27201 (2) obj. -180.819 iterations 11
Cbc0038I Pass  47: suminf.    0.27201 (2) obj. -180.819 iterations 2
Cbc0038I Pass  48: suminf.    0.66900 (3) obj. -180.819 iterations 4
Cbc0038I Pass  49: suminf.    1.94762 (9) obj. -180.819 iterations 11
Cbc0038I Pass  50: suminf.    1.29569 (8) obj. -180.819 iterations 3
Cbc0038I Pass  51: suminf.    0.80015 (7) obj. -180.819 iterations 2
Cbc0038I Pass  52: suminf.    2.64719 (10) obj. -180.819 iterations 15
Cbc0038I Pass  53: suminf.    2.54836 (10) obj. -180.819 iterations 5
Cbc0038I Pass  54: suminf.    1.12353 (8) obj. -180.819 iterations 18
Cbc0038I Pass  55: suminf.    0.70634 (5) obj. -180.819 iterations 4
Cbc0038I Pass  56: suminf.    0.27201 (2) obj. -180.819 iterations 11
Cbc0038I Pass  57: suminf.    0.27201 (2) obj. -180.819 iterations 2
Cbc0038I Pass  58: suminf.    0.66900 (3) obj. -180.819 iterations 4
Cbc0038I Pass  59: suminf.    1.66469 (8) obj. -180.819 iterations 13
Cbc0038I Pass  60: suminf.    1.04574 (5) obj. -180.819 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 33 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -175.021 - took 0.04 seconds
Cbc0012I Integer solution of -175.02135 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 113 rows 62 columns, reduced to 23 rows 20 columns
Cbc0031I 6 added rows had average density of 42
Cbc0013I At root node, 6 cuts changed objective from -200.77668 to -182.41408 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 86 row cuts average 3.0 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -175.02135, took 281 iterations and 10 nodes (0.10 seconds)
Cbc0032I Strong branching done 74 times (389 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

