Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 38 (-31) rows, 20 (-15) columns and 110 (-85) elements
Clp0000I Optimal - objective value 66.563783
Coin0511I After Postsolve, objective 66.563783, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.56378342 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 20 columns (19 integer (19 of which binary)) and 116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.610%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.32466
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 50.5 iterations 22
Cbc0038I Solution found of 50.5
Cbc0038I Relaxing continuous gives 50.5
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 20 columns, reduced to 36 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 50.5 to -45.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -47.4611
Cbc0038I Pass   2: suminf.    0.82038 (19) obj. -47.4611 iterations 20
Cbc0038I Pass   3: suminf.    0.82038 (19) obj. -47.4611 iterations 0
Cbc0038I Pass   4: suminf.    5.96642 (15) obj. -47.4611 iterations 14
Cbc0038I Pass   5: suminf.    4.73207 (14) obj. -47.4611 iterations 7
Cbc0038I Pass   6: suminf.    5.76920 (15) obj. -47.4611 iterations 10
Cbc0038I Pass   7: suminf.    5.01805 (14) obj. -47.4611 iterations 7
Cbc0038I Pass   8: suminf.    5.01791 (14) obj. -47.4611 iterations 1
Cbc0038I Pass   9: suminf.    0.88916 (16) obj. -47.4611 iterations 13
Cbc0038I Pass  10: suminf.    0.82038 (19) obj. -47.4611 iterations 3
Cbc0038I Pass  11: suminf.    6.28260 (16) obj. -47.4611 iterations 19
Cbc0038I Pass  12: suminf.    5.97339 (17) obj. -47.4611 iterations 3
Cbc0038I Pass  13: suminf.    0.95054 (16) obj. -47.4611 iterations 14
Cbc0038I Pass  14: suminf.    0.97694 (16) obj. -47.4611 iterations 4
Cbc0038I Pass  15: suminf.    0.87484 (17) obj. -47.4611 iterations 4
Cbc0038I Pass  16: suminf.    0.88026 (17) obj. -47.4611 iterations 6
Cbc0038I Pass  17: suminf.    0.88916 (16) obj. -47.4611 iterations 6
Cbc0038I Pass  18: suminf.    0.88663 (17) obj. -47.4611 iterations 3
Cbc0038I Pass  19: suminf.    1.52801 (15) obj. -47.4611 iterations 8
Cbc0038I Pass  20: suminf.    5.01400 (13) obj. -47.4611 iterations 10
Cbc0038I Pass  21: suminf.    4.89950 (15) obj. -47.4611 iterations 5
Cbc0038I Pass  22: suminf.    5.09923 (14) obj. -47.4611 iterations 10
Cbc0038I Pass  23: suminf.    0.94500 (16) obj. -47.4611 iterations 9
Cbc0038I Pass  24: suminf.    0.82038 (19) obj. -47.4611 iterations 5
Cbc0038I Pass  25: suminf.    6.28260 (16) obj. -47.4611 iterations 16
Cbc0038I Pass  26: suminf.    5.97339 (17) obj. -47.4611 iterations 3
Cbc0038I Pass  27: suminf.    0.95608 (16) obj. -47.4611 iterations 15
Cbc0038I Pass  28: suminf.    0.83648 (18) obj. -47.4611 iterations 5
Cbc0038I Pass  29: suminf.    0.89816 (16) obj. -47.4611 iterations 4
Cbc0038I Pass  30: suminf.    5.31025 (15) obj. -47.4611 iterations 13
Cbc0038I Pass  31: suminf.    0.87625 (18) obj. -47.4611 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 20 columns, reduced to 38 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -45.5 - took 0.03 seconds
Cbc0012I Integer solution of -45.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -60.611426 to -60.611426 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -45.5, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

