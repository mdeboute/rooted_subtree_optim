Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 5.27078e-05 - average 8.93353e-07, 1 fixed columns
Coin0506I Presolve 58 (-1) rows, 32 (-1) columns and 173 (-3) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Coin0511I After Postsolve, objective 84.897929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Clp0000I Optimal - objective value 84.897929
Coin0511I After Postsolve, objective 84.897929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.89792898 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.00655
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.8671 iterations 27
Cbc0038I Solution found of 18.8671
Cbc0038I Relaxing continuous gives 18.8671
Cbc0038I Rounding solution of -2.76026 is better than previous of 18.8671

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -2.76026 to -38.1463 (0.04 seconds)
Cbc0038I Round again with cutoff of -42.8216
Cbc0038I Pass   2: suminf.    2.78247 (7) obj. -42.8216 iterations 9
Cbc0038I Pass   3: suminf.    0.80999 (3) obj. -42.8216 iterations 10
Cbc0038I Pass   4: suminf.    0.43355 (2) obj. -42.8216 iterations 1
Cbc0038I Pass   5: suminf.    0.82253 (2) obj. -42.8216 iterations 3
Cbc0038I Pass   6: suminf.    0.54419 (2) obj. -42.8216 iterations 1
Cbc0038I Pass   7: suminf.    1.36740 (3) obj. -42.8216 iterations 7
Cbc0038I Pass   8: suminf.    0.87268 (3) obj. -42.8216 iterations 5
Cbc0038I Pass   9: suminf.    0.53799 (3) obj. -42.8216 iterations 3
Cbc0038I Pass  10: suminf.    0.47615 (3) obj. -42.8216 iterations 1
Cbc0038I Pass  11: suminf.    1.36740 (3) obj. -42.8216 iterations 2
Cbc0038I Pass  12: suminf.    1.69923 (6) obj. -42.8216 iterations 6
Cbc0038I Pass  13: suminf.    1.37028 (4) obj. -42.8216 iterations 2
Cbc0038I Pass  14: suminf.    0.54403 (2) obj. -42.8216 iterations 6
Cbc0038I Pass  15: suminf.    0.54403 (2) obj. -42.8216 iterations 0
Cbc0038I Pass  16: suminf.    0.82239 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  17: suminf.    1.80547 (6) obj. -42.8216 iterations 10
Cbc0038I Pass  18: suminf.    1.15272 (5) obj. -42.8216 iterations 4
Cbc0038I Pass  19: suminf.    0.63776 (2) obj. -42.8216 iterations 7
Cbc0038I Pass  20: suminf.    0.15163 (1) obj. -42.8216 iterations 2
Cbc0038I Pass  21: suminf.    0.63776 (2) obj. -42.8216 iterations 2
Cbc0038I Pass  22: suminf.    0.75798 (2) obj. -42.8216 iterations 4
Cbc0038I Pass  23: suminf.    0.47207 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  24: suminf.    0.75798 (2) obj. -42.8216 iterations 1
Cbc0038I Pass  25: suminf.    1.36645 (6) obj. -42.8216 iterations 8
Cbc0038I Pass  26: suminf.    0.82653 (3) obj. -42.8216 iterations 5
Cbc0038I Pass  27: suminf.    0.60296 (3) obj. -42.8216 iterations 3
Cbc0038I Pass  28: suminf.    1.27964 (3) obj. -42.8216 iterations 2
Cbc0038I Pass  29: suminf.    1.27964 (3) obj. -42.8216 iterations 0
Cbc0038I Pass  30: suminf.    0.73492 (2) obj. -42.8216 iterations 2
Cbc0038I Pass  31: suminf.    0.76913 (2) obj. -42.8216 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -38.1463 - took 0.05 seconds
Cbc0012I Integer solution of -38.146349 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 38 rows 23 columns
Cbc0031I 17 added rows had average density of 24.411765
Cbc0013I At root node, 17 cuts changed objective from -84.897929 to -64.713637 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2206 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 917 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0004I Integer solution of -38.147589 found after 3669 iterations and 11 nodes (0.38 seconds)
Cbc0004I Integer solution of -38.47573 found after 3742 iterations and 17 nodes (0.38 seconds)
Cbc0001I Search completed - best objective -38.47573, took 4153 iterations and 34 nodes (0.41 seconds)
Cbc0032I Strong branching done 324 times (3425 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 9, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.40   (Wallclock seconds):       0.42

