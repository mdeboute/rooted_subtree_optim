Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 66 (-12) columns and 357 (-96) elements
Clp1000I sum of infeasibilities 9.31501e-07 - average 8.03018e-09, 62 fixed columns
Coin0506I Presolve 4 (-112) rows, 4 (-62) columns and 10 (-347) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 16294.986
Clp0000I Optimal - objective value 16294.986
Coin0511I After Postsolve, objective 16294.986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35047245 - largest nonzero change 0 ( 0%) - largest zero change 2.8112138e-05
Clp0000I Optimal - objective value 16294.986
Clp0000I Optimal - objective value 16294.986
Clp0000I Optimal - objective value 16294.986
Coin0511I After Postsolve, objective 16294.986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16294.98609 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 66 columns (65 integer (65 of which binary)) and 378 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.743%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.855172
Cbc0038I Pass   1: suminf.    0.37037 (2) obj. -15691.4 iterations 13
Cbc0038I Solution found of -10045.9
Cbc0038I Relaxing continuous gives -10049
Cbc0038I Rounding solution of -13698.6 is better than previous of -10049

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -13698.6 to -13701.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -13961
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.37037 (2) obj. -15691.4 iterations 0
Cbc0038I Pass   3: suminf.    0.12277 (1) obj. -13961 iterations 6
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -14503.5 iterations 4
Cbc0038I Solution found of -14503.5
Cbc0038I Relaxing continuous gives -14503.5
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14861.8
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass   5: suminf.    0.37037 (2) obj. -15691.4 iterations 0
Cbc0038I Pass   6: suminf.    0.09809 (1) obj. -14861.8 iterations 10
Cbc0038I Pass   7: suminf.    0.09809 (1) obj. -14861.8 iterations 0
Cbc0038I Pass   8: suminf.    0.37838 (1) obj. -15389.1 iterations 8
Cbc0038I Pass   9: suminf.    0.26015 (1) obj. -14861.8 iterations 3
Cbc0038I Pass  10: suminf.    0.85323 (3) obj. -14861.8 iterations 18
Cbc0038I Pass  11: suminf.    0.55556 (2) obj. -15048 iterations 7
Cbc0038I Pass  12: suminf.    0.10339 (3) obj. -14861.8 iterations 9
Cbc0038I Pass  13: suminf.    0.10339 (3) obj. -14861.8 iterations 0
Cbc0038I Pass  14: suminf.    0.31599 (2) obj. -14861.8 iterations 8
Cbc0038I Pass  15: suminf.    0.27090 (2) obj. -14861.8 iterations 6
Cbc0038I Pass  16: suminf.    0.30458 (2) obj. -14959.7 iterations 5
Cbc0038I Pass  17: suminf.    0.27090 (2) obj. -14861.8 iterations 8
Cbc0038I Pass  18: suminf.    1.24326 (4) obj. -14861.8 iterations 15
Cbc0038I Pass  19: suminf.    0.58707 (2) obj. -14861.8 iterations 12
Cbc0038I Pass  20: suminf.    0.53282 (2) obj. -14861.8 iterations 6
Cbc0038I Pass  21: suminf.    0.09809 (1) obj. -14861.8 iterations 5
Cbc0038I Pass  22: suminf.    0.09809 (1) obj. -14861.8 iterations 0
Cbc0038I Pass  23: suminf.    0.37838 (1) obj. -15389.1 iterations 7
Cbc0038I Pass  24: suminf.    0.26015 (1) obj. -14861.8 iterations 3
Cbc0038I Pass  25: suminf.    1.56833 (7) obj. -14861.8 iterations 15
Cbc0038I Pass  26: suminf.    0.24998 (2) obj. -14861.8 iterations 10
Cbc0038I Pass  27: suminf.    0.24998 (2) obj. -14861.8 iterations 2
Cbc0038I Pass  28: suminf.    0.38817 (2) obj. -14861.8 iterations 9
Cbc0038I Pass  29: suminf.    0.82524 (2) obj. -14861.8 iterations 6
Cbc0038I Pass  30: suminf.    0.68227 (3) obj. -14861.8 iterations 7
Cbc0038I Pass  31: suminf.    0.55974 (3) obj. -14861.8 iterations 3
Cbc0038I Pass  32: suminf.    0.66948 (3) obj. -14861.8 iterations 6
Cbc0038I Pass  33: suminf.    0.29435 (2) obj. -14861.8 iterations 3
Cbc0038I Pass  34: suminf.    0.09143 (1) obj. -14861.8 iterations 6
Cbc0038I Rounding solution of -14531.7 is better than previous of -14503.5

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 21 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -14531.7 to -14645 (0.02 seconds)
Cbc0038I Round again with cutoff of -15291.8
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  34: suminf.    0.37037 (2) obj. -15691.4 iterations 0
Cbc0038I Pass  35: suminf.    0.21580 (1) obj. -15291.8 iterations 10
Cbc0038I Pass  36: suminf.    0.21580 (1) obj. -15291.8 iterations 0
Cbc0038I Pass  37: suminf.    0.37838 (1) obj. -15389.1 iterations 8
Cbc0038I Pass  38: suminf.    0.35656 (1) obj. -15291.8 iterations 3
Cbc0038I Pass  39: suminf.    1.21676 (3) obj. -15462.8 iterations 10
Cbc0038I Pass  40: suminf.    0.88955 (2) obj. -15291.8 iterations 12
Cbc0038I Pass  41: suminf.    0.42853 (2) obj. -15291.8 iterations 4
Cbc0038I Pass  42: suminf.    0.21580 (1) obj. -15291.8 iterations 5
Cbc0038I Pass  43: suminf.    0.37838 (1) obj. -15389.1 iterations 8
Cbc0038I Pass  44: suminf.    0.35656 (1) obj. -15291.8 iterations 3
Cbc0038I Pass  45: suminf.    0.35656 (1) obj. -15291.8 iterations 5
Cbc0038I Pass  46: suminf.    0.35656 (1) obj. -15291.8 iterations 4
Cbc0038I Pass  47: suminf.    0.85714 (2) obj. -15646.4 iterations 5
Cbc0038I Pass  48: suminf.    0.65007 (3) obj. -15291.8 iterations 2
Cbc0038I Pass  49: suminf.    0.21580 (1) obj. -15291.8 iterations 11
Cbc0038I Pass  50: suminf.    0.21580 (1) obj. -15291.8 iterations 0
Cbc0038I Pass  51: suminf.    0.37838 (1) obj. -15389.1 iterations 7
Cbc0038I Pass  52: suminf.    0.35656 (1) obj. -15291.8 iterations 2
Cbc0038I Pass  53: suminf.    0.49205 (2) obj. -15291.8 iterations 9
Cbc0038I Pass  54: suminf.    0.49205 (2) obj. -15291.8 iterations 4
Cbc0038I Pass  55: suminf.    0.58747 (2) obj. -15291.8 iterations 11
Cbc0038I Pass  56: suminf.    0.40741 (1) obj. -15647.7 iterations 8
Cbc0038I Pass  57: suminf.    0.72495 (3) obj. -16259.8 iterations 7
Cbc0038I Pass  58: suminf.    0.37037 (2) obj. -15691.4 iterations 5
Cbc0038I Pass  59: suminf.    0.21580 (1) obj. -15291.8 iterations 9
Cbc0038I Pass  60: suminf.    0.21580 (1) obj. -15291.8 iterations 0
Cbc0038I Pass  61: suminf.    0.37838 (1) obj. -15389.1 iterations 7
Cbc0038I Pass  62: suminf.    0.35656 (1) obj. -15291.8 iterations 2
Cbc0038I Pass  63: suminf.    0.88955 (2) obj. -15291.8 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14645 - took 0.02 seconds
Cbc0012I Integer solution of -14644.97 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 115 rows 66 columns, reduced to 4 rows 5 columns
Cbc0031I 9 added rows had average density of 22.444444
Cbc0013I At root node, 9 cuts changed objective from -16294.986 to -15104.988 in 47 passes
Cbc0014I Cut generator 0 (Probing) - 147 row cuts average 2.3 elements, 13 column cuts (13 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 132 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 63 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -14644.97, took 761 iterations and 8 nodes (0.11 seconds)
Cbc0032I Strong branching done 72 times (475 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.11

