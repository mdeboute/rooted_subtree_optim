Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 337 (-190) rows, 179 (-85) columns and 1015 (-530) elements
Clp1000I sum of infeasibilities 3.44629e-06 - average 1.02264e-08, 163 fixed columns
Coin0506I Presolve 15 (-322) rows, 16 (-163) columns and 55 (-960) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Coin0511I After Postsolve, objective 211662.97, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1530071 - largest nonzero change 1.1858686e-05 ( 0.0011858686%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Coin0511I After Postsolve, objective 211662.97, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 211662.9743 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 337 rows, 179 columns (178 integer (178 of which binary)) and 1015 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.521%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.67229
Cbc0038I Solution found of -162919
Cbc0038I Relaxing continuous gives -162919
Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -162919 to -185255 (0.03 seconds)
Cbc0038I Round again with cutoff of -187896
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.11253 (1) obj. -187896 iterations 51
Cbc0038I Pass   2: suminf.    0.11253 (1) obj. -187896 iterations 0
Cbc0038I Pass   3: suminf.    0.60541 (2) obj. -188016 iterations 17
Cbc0038I Pass   4: suminf.    0.60891 (2) obj. -187896 iterations 4
Cbc0038I Pass   5: suminf.    1.04321 (4) obj. -187896 iterations 31
Cbc0038I Pass   6: suminf.    0.79050 (2) obj. -187896 iterations 20
Cbc0038I Pass   7: suminf.    0.88649 (2) obj. -191182 iterations 4
Cbc0038I Pass   8: suminf.    1.08227 (4) obj. -187896 iterations 23
Cbc0038I Pass   9: suminf.    0.84818 (4) obj. -187896 iterations 33
Cbc0038I Pass  10: suminf.    0.80810 (3) obj. -187896 iterations 13
Cbc0038I Pass  11: suminf.    0.62718 (3) obj. -187896 iterations 10
Cbc0038I Pass  12: suminf.    0.24320 (2) obj. -187896 iterations 10
Cbc0038I Pass  13: suminf.    0.43579 (2) obj. -187896 iterations 9
Cbc0038I Solution found of -193939
Cbc0038I Relaxing continuous gives -193939
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 32 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -193939 to -198680 (0.06 seconds)
Cbc0038I Round again with cutoff of -201277
Cbc0038I Reduced cost fixing fixed 81 variables on major pass 3
Cbc0038I Pass  14: suminf.    0.80268 (6) obj. -201277 iterations 2
Cbc0038I Pass  15: suminf.    0.80268 (6) obj. -201277 iterations 12
Cbc0038I Pass  16: suminf.    1.87500 (6) obj. -203069 iterations 19
Cbc0038I Pass  17: suminf.    2.28903 (9) obj. -201277 iterations 14
Cbc0038I Pass  18: suminf.    3.05625 (9) obj. -201277 iterations 17
Cbc0038I Pass  19: suminf.    3.03917 (11) obj. -201277 iterations 17
Cbc0038I Pass  20: suminf.    0.80268 (6) obj. -201277 iterations 22
Cbc0038I Pass  21: suminf.    2.01059 (7) obj. -201277 iterations 19
Cbc0038I Pass  22: suminf.    1.24526 (5) obj. -201277 iterations 17
Cbc0038I Pass  23: suminf.    0.71778 (6) obj. -201277 iterations 14
Cbc0038I Pass  24: suminf.    0.71778 (6) obj. -201277 iterations 9
Cbc0038I Pass  25: suminf.    1.37946 (6) obj. -204755 iterations 19
Cbc0038I Pass  26: suminf.    0.71778 (6) obj. -201277 iterations 12
Cbc0038I Pass  27: suminf.    1.58244 (7) obj. -201277 iterations 18
Cbc0038I Pass  28: suminf.    1.07336 (6) obj. -201277 iterations 15
Cbc0038I Pass  29: suminf.    1.07336 (6) obj. -201277 iterations 10
Cbc0038I Pass  30: suminf.    1.66071 (6) obj. -203977 iterations 18
Cbc0038I Pass  31: suminf.    1.02701 (12) obj. -201277 iterations 24
Cbc0038I Pass  32: suminf.    1.02701 (12) obj. -201277 iterations 4
Cbc0038I Pass  33: suminf.    1.03027 (6) obj. -201277 iterations 16
Cbc0038I Pass  34: suminf.    1.03027 (6) obj. -201277 iterations 6
Cbc0038I Pass  35: suminf.    0.71778 (6) obj. -201277 iterations 18
Cbc0038I Pass  36: suminf.    0.71778 (6) obj. -201277 iterations 11
Cbc0038I Pass  37: suminf.    1.37946 (6) obj. -204755 iterations 18
Cbc0038I Pass  38: suminf.    1.66694 (10) obj. -201277 iterations 15
Cbc0038I Pass  39: suminf.    1.83395 (9) obj. -201277 iterations 15
Cbc0038I Pass  40: suminf.    1.25215 (3) obj. -201277 iterations 15
Cbc0038I Pass  41: suminf.    1.22759 (4) obj. -201277 iterations 5
Cbc0038I Pass  42: suminf.    1.21447 (4) obj. -201277 iterations 7
Cbc0038I Pass  43: suminf.    1.21447 (4) obj. -201277 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 45 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -198680 - took 0.08 seconds
Cbc0012I Integer solution of -198680.4 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 337 rows 179 columns, reduced to 15 rows 15 columns
Cbc0031I 5 added rows had average density of 34.6
Cbc0013I At root node, 5 cuts changed objective from -211662.97 to -206369.12 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 3.1 elements, 13 column cuts (13 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 171.1 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -198680.4 best solution, best possible -206366.84 (0.70 seconds)
Cbc0010I After 10 nodes, 1 on tree, -198680.4 best solution, best possible -205815.25 (1.64 seconds)
Cbc0001I Search completed - best objective -198680.4, took 476 iterations and 14 nodes (1.97 seconds)
Cbc0032I Strong branching done 120 times (865 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 129 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.98

