Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 3.14689e-06 - average 8.99112e-08, 2 fixed columns
Coin0506I Presolve 31 (-4) rows, 20 (-2) columns and 95 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 55.537877
Clp0000I Optimal - objective value 55.537877
Coin0511I After Postsolve, objective 55.537877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.537877
Clp0000I Optimal - objective value 55.537877
Clp0000I Optimal - objective value 55.537877
Coin0511I After Postsolve, objective 55.537877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.53787719 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.79157
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.43781 iterations 15
Cbc0038I Solution found of 5.43781
Cbc0038I Relaxing continuous gives 5.43781
Cbc0038I Rounding solution of -16.2402 is better than previous of 5.43781

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20.17
Cbc0038I Pass   2: suminf.    0.54567 (2) obj. -20.17 iterations 2
Cbc0038I Pass   3: suminf.    0.16832 (1) obj. -20.17 iterations 1
Cbc0038I Pass   4: suminf.    0.40534 (1) obj. -20.17 iterations 1
Cbc0038I Pass   5: suminf.    1.90926 (5) obj. -20.17 iterations 7
Cbc0038I Pass   6: suminf.    0.68256 (2) obj. -20.17 iterations 7
Cbc0038I Pass   7: suminf.    2.14549 (6) obj. -20.17 iterations 6
Cbc0038I Pass   8: suminf.    1.07610 (4) obj. -20.17 iterations 7
Cbc0038I Pass   9: suminf.    0.99898 (4) obj. -20.17 iterations 1
Cbc0038I Pass  10: suminf.    0.27535 (1) obj. -20.17 iterations 6
Cbc0038I Pass  11: suminf.    0.16832 (1) obj. -20.17 iterations 2
Cbc0038I Pass  12: suminf.    0.40534 (1) obj. -20.17 iterations 1
Cbc0038I Pass  13: suminf.    1.23857 (5) obj. -20.17 iterations 2
Cbc0038I Pass  14: suminf.    0.82087 (2) obj. -20.17 iterations 1
Cbc0038I Pass  15: suminf.    0.57420 (2) obj. -20.17 iterations 1
Cbc0038I Pass  16: suminf.    1.96257 (5) obj. -20.17 iterations 7
Cbc0038I Pass  17: suminf.    0.70209 (5) obj. -20.17 iterations 1
Cbc0038I Pass  18: suminf.    0.62670 (4) obj. -20.17 iterations 1
Cbc0038I Pass  19: suminf.    0.54567 (2) obj. -20.17 iterations 7
Cbc0038I Pass  20: suminf.    0.16832 (1) obj. -20.17 iterations 1
Cbc0038I Pass  21: suminf.    0.40534 (1) obj. -20.17 iterations 1
Cbc0038I Pass  22: suminf.    2.79993 (8) obj. -20.17 iterations 12
Cbc0038I Pass  23: suminf.    0.86461 (4) obj. -20.17 iterations 6
Cbc0038I Pass  24: suminf.    1.45373 (6) obj. -20.17 iterations 4
Cbc0038I Pass  25: suminf.    1.45373 (6) obj. -20.17 iterations 1
Cbc0038I Pass  26: suminf.    0.97391 (12) obj. -20.17 iterations 13
Cbc0038I Pass  27: suminf.    1.29860 (4) obj. -20.17 iterations 14
Cbc0038I Pass  28: suminf.    1.29860 (4) obj. -20.17 iterations 0
Cbc0038I Pass  29: suminf.    0.86678 (4) obj. -20.17 iterations 6
Cbc0038I Pass  30: suminf.    0.81623 (4) obj. -20.17 iterations 1
Cbc0038I Pass  31: suminf.    1.19719 (3) obj. -20.17 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16.2402 - took 0.02 seconds
Cbc0012I Integer solution of -16.24019 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 23 rows 15 columns
Cbc0031I 12 added rows had average density of 14.5
Cbc0013I At root node, 12 cuts changed objective from -55.537877 to -31.173637 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1221 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 538 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 91 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16.24019, took 1769 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 48 times (497 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

