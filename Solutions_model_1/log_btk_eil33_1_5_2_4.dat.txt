Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 8.96247e-05 - average 1.62954e-06, 1 fixed columns
Coin0506I Presolve 53 (-2) rows, 32 (-1) columns and 162 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 2.8371131 - largest nonzero change 0 ( 0%) - largest zero change 2.9101971e-05
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Coin0511I After Postsolve, objective 90.811363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Coin0511I After Postsolve, objective 90.811363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.81136286 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.45931
Cbc0038I Pass   1: suminf.    0.06000 (1) obj. -37.571 iterations 14
Cbc0038I Solution found of -16.5346
Cbc0038I Relaxing continuous gives -16.5346
Cbc0038I Rounding solution of -27.1889 is better than previous of -16.5346

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 22 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -27.1889 to -39.2596 (0.02 seconds)
Cbc0038I Round again with cutoff of -44.4149
Cbc0038I Pass   2: suminf.    0.28122 (4) obj. -44.4149 iterations 3
Cbc0038I Pass   3: suminf.    1.06819 (3) obj. -44.4149 iterations 5
Cbc0038I Pass   4: suminf.    0.33000 (1) obj. -44.4149 iterations 4
Cbc0038I Pass   5: suminf.    0.43518 (1) obj. -44.4149 iterations 1
Cbc0038I Pass   6: suminf.    0.34342 (1) obj. -44.4149 iterations 9
Cbc0038I Pass   7: suminf.    0.34342 (1) obj. -44.4149 iterations 2
Cbc0038I Pass   8: suminf.    0.39858 (1) obj. -44.4149 iterations 1
Cbc0038I Pass   9: suminf.    0.70262 (3) obj. -44.4149 iterations 3
Cbc0038I Pass  10: suminf.    0.47543 (1) obj. -44.4149 iterations 2
Cbc0038I Pass  11: suminf.    0.46207 (1) obj. -44.4149 iterations 1
Cbc0038I Pass  12: suminf.    1.97435 (6) obj. -44.4149 iterations 19
Cbc0038I Pass  13: suminf.    0.72922 (3) obj. -44.4149 iterations 10
Cbc0038I Pass  14: suminf.    1.00583 (3) obj. -44.4149 iterations 3
Cbc0038I Pass  15: suminf.    0.75657 (3) obj. -44.4149 iterations 1
Cbc0038I Pass  16: suminf.    0.75657 (3) obj. -44.4149 iterations 0
Cbc0038I Pass  17: suminf.    1.28978 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  18: suminf.    0.96506 (6) obj. -44.4149 iterations 4
Cbc0038I Pass  19: suminf.    0.86280 (4) obj. -44.4149 iterations 5
Cbc0038I Pass  20: suminf.    0.95316 (3) obj. -44.4149 iterations 5
Cbc0038I Pass  21: suminf.    0.71884 (3) obj. -44.4149 iterations 1
Cbc0038I Pass  22: suminf.    1.24514 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  23: suminf.    1.89272 (5) obj. -44.4149 iterations 6
Cbc0038I Pass  24: suminf.    1.46704 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  25: suminf.    1.00029 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  26: suminf.    1.00029 (3) obj. -44.4149 iterations 0
Cbc0038I Pass  27: suminf.    1.30951 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  28: suminf.    1.64396 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  29: suminf.    1.03656 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  30: suminf.    1.03656 (4) obj. -44.4149 iterations 1
Cbc0038I Pass  31: suminf.    1.21689 (3) obj. -44.4149 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -39.2596 to -40.138 (0.04 seconds)
Cbc0038I Round again with cutoff of -53.6942
Cbc0038I Pass  31: suminf.    0.74094 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  32: suminf.    1.00050 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  33: suminf.    0.39393 (3) obj. -53.6942 iterations 2
Cbc0038I Pass  34: suminf.    0.60192 (2) obj. -53.6942 iterations 2
Cbc0038I Pass  35: suminf.    0.60192 (2) obj. -53.6942 iterations 0
Cbc0038I Pass  36: suminf.    0.64835 (2) obj. -53.6942 iterations 1
Cbc0038I Pass  37: suminf.    2.53348 (7) obj. -53.6942 iterations 19
Cbc0038I Pass  38: suminf.    2.28546 (8) obj. -53.6942 iterations 5
Cbc0038I Pass  39: suminf.    0.85399 (4) obj. -53.6942 iterations 5
Cbc0038I Pass  40: suminf.    1.86313 (4) obj. -53.6942 iterations 5
Cbc0038I Pass  41: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  42: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  43: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  44: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  45: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  46: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  47: suminf.    1.86313 (4) obj. -53.6942 iterations 6
Cbc0038I Pass  48: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  49: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  50: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  51: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  52: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  53: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  54: suminf.    1.86313 (4) obj. -53.6942 iterations 6
Cbc0038I Pass  55: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  56: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  57: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  58: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  59: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  60: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.138 - took 0.04 seconds
Cbc0012I Integer solution of -40.138019 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 29 rows 19 columns
Cbc0031I 11 added rows had average density of 24.909091
Cbc0013I At root node, 11 cuts changed objective from -90.811363 to -65.711555 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1532 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 583 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -40.385549 found by rounding after 3222 iterations and 33 nodes (0.35 seconds)
Cbc0001I Search completed - best objective -40.385549, took 3232 iterations and 34 nodes (0.35 seconds)
Cbc0032I Strong branching done 312 times (3496 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 5, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.36

