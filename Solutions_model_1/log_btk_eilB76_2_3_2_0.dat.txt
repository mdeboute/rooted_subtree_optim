Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 69 (-9) columns and 377 (-76) elements
Clp1000I sum of infeasibilities 1.16649e-05 - average 9.4837e-08, 13 fixed columns
Coin0506I Presolve 93 (-30) rows, 55 (-14) columns and 289 (-88) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Coin0511I After Postsolve, objective 46.06788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Coin0511I After Postsolve, objective 46.06788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.06787963 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 69 columns (68 integer (68 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.023%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.91398
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.76243 iterations 24
Cbc0038I Solution found of -5.76243
Cbc0038I Relaxing continuous gives -5.76243
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 69 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -5.76243 to -16.9051 (0.02 seconds)
Cbc0038I Round again with cutoff of -19.7784
Cbc0038I Pass   2: suminf.    0.85669 (3) obj. -19.7784 iterations 6
Cbc0038I Pass   3: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass   4: suminf.    1.00527 (3) obj. -19.7784 iterations 5
Cbc0038I Pass   5: suminf.    1.70208 (5) obj. -19.7784 iterations 12
Cbc0038I Pass   6: suminf.    1.64392 (5) obj. -19.7784 iterations 9
Cbc0038I Pass   7: suminf.    1.63943 (7) obj. -19.7784 iterations 2
Cbc0038I Pass   8: suminf.    0.50993 (4) obj. -19.7784 iterations 13
Cbc0038I Pass   9: suminf.    0.85669 (3) obj. -19.7784 iterations 8
Cbc0038I Pass  10: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass  11: suminf.    1.00527 (3) obj. -19.7784 iterations 4
Cbc0038I Pass  12: suminf.    0.85669 (3) obj. -19.7784 iterations 3
Cbc0038I Pass  13: suminf.    1.91190 (9) obj. -19.7784 iterations 12
Cbc0038I Pass  14: suminf.    1.64651 (5) obj. -19.7784 iterations 5
Cbc0038I Pass  15: suminf.    1.61380 (6) obj. -19.7784 iterations 1
Cbc0038I Pass  16: suminf.    0.85669 (3) obj. -19.7784 iterations 11
Cbc0038I Pass  17: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass  18: suminf.    1.00527 (3) obj. -19.7784 iterations 4
Cbc0038I Pass  19: suminf.    0.85669 (3) obj. -19.7784 iterations 3
Cbc0038I Pass  20: suminf.    3.22642 (11) obj. -19.7784 iterations 19
Cbc0038I Pass  21: suminf.    1.17573 (3) obj. -19.7784 iterations 14
Cbc0038I Pass  22: suminf.    1.01836 (4) obj. -19.7784 iterations 2
Cbc0038I Pass  23: suminf.    4.64439 (14) obj. -19.7784 iterations 23
Cbc0038I Pass  24: suminf.    1.45103 (5) obj. -19.7784 iterations 27
Cbc0038I Pass  25: suminf.    0.77938 (5) obj. -19.7784 iterations 3
Cbc0038I Pass  26: suminf.    0.91134 (7) obj. -19.7784 iterations 6
Cbc0038I Pass  27: suminf.    0.91134 (7) obj. -19.7784 iterations 0
Cbc0038I Pass  28: suminf.    1.57506 (5) obj. -19.7784 iterations 10
Cbc0038I Pass  29: suminf.    1.12548 (5) obj. -19.7784 iterations 5
Cbc0038I Pass  30: suminf.    1.21146 (5) obj. -19.7784 iterations 9
Cbc0038I Pass  31: suminf.    0.85669 (3) obj. -19.7784 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 69 columns, reduced to 57 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -16.9051 - took 0.03 seconds
Cbc0012I Integer solution of -16.90513 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 118 rows 69 columns, reduced to 28 rows 18 columns
Cbc0031I 18 added rows had average density of 27.555556
Cbc0013I At root node, 18 cuts changed objective from -45.63709 to -31.927934 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3466 row cuts average 5.4 elements, 1 column cuts (1 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 856 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 219 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16.90513, took 4213 iterations and 36 nodes (0.52 seconds)
Cbc0032I Strong branching done 472 times (8363 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 16, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.53

