Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 35 (-34) rows, 21 (-14) columns and 106 (-89) elements
Clp0000I Optimal - objective value 109.16675
Coin0511I After Postsolve, objective 109.16675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.1667484 - 19 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.208%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.47581
Cbc0038I Pass   1: suminf.    0.34457 (2) obj. -12.0912 iterations 9
Cbc0038I Pass   2: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Solution found of 23.6
Cbc0038I Relaxing continuous gives 23.6
Cbc0038I Rounding solution of 18 is better than previous of 23.6

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 5.10342
Cbc0038I Pass   3: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Pass   4: suminf.    0.34457 (2) obj. -12.0912 iterations 0
Cbc0038I Pass   5: suminf.    0.19136 (4) obj. 5.10342 iterations 6
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -17.4 iterations 5
Cbc0038I Solution found of -17.4
Cbc0038I Relaxing continuous gives -17.4
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -35.9133
Cbc0038I Pass   7: suminf.    0.73967 (4) obj. -35.9133 iterations 2
Cbc0038I Pass   8: suminf.    0.60241 (5) obj. -35.9133 iterations 2
Cbc0038I Pass   9: suminf.    0.74583 (2) obj. -35.9133 iterations 7
Cbc0038I Pass  10: suminf.    0.34049 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  11: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  12: suminf.    0.83907 (4) obj. -35.9133 iterations 6
Cbc0038I Pass  13: suminf.    0.83907 (4) obj. -35.9133 iterations 1
Cbc0038I Pass  14: suminf.    0.83979 (8) obj. -35.9133 iterations 6
Cbc0038I Pass  15: suminf.    0.60241 (5) obj. -35.9133 iterations 6
Cbc0038I Pass  16: suminf.    0.74583 (2) obj. -35.9133 iterations 9
Cbc0038I Pass  17: suminf.    0.34049 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  18: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  19: suminf.    0.34049 (2) obj. -35.9133 iterations 4
Cbc0038I Pass  20: suminf.    1.14760 (6) obj. -35.9133 iterations 10
Cbc0038I Pass  21: suminf.    0.99944 (4) obj. -35.9133 iterations 2
Cbc0038I Pass  22: suminf.    0.74583 (2) obj. -35.9133 iterations 6
Cbc0038I Pass  23: suminf.    0.13295 (2) obj. -35.9133 iterations 1
Cbc0038I Pass  24: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  25: suminf.    1.71127 (7) obj. -35.9133 iterations 10
Cbc0038I Pass  26: suminf.    0.07125 (1) obj. -35.9133 iterations 9
Cbc0038I Pass  27: suminf.    0.17694 (2) obj. -35.9133 iterations 2
Cbc0038I Pass  28: suminf.    0.91243 (2) obj. -35.9133 iterations 6
Cbc0038I Pass  29: suminf.    0.60372 (4) obj. -35.9133 iterations 8
Cbc0038I Pass  30: suminf.    0.49674 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  31: suminf.    0.31118 (2) obj. -35.9133 iterations 5
Cbc0038I Pass  32: suminf.    0.63950 (4) obj. -35.9133 iterations 4
Cbc0038I Pass  33: suminf.    0.85089 (3) obj. -35.9133 iterations 5
Cbc0038I Pass  34: suminf.    0.34049 (2) obj. -35.9133 iterations 2
Cbc0038I Pass  35: suminf.    0.85089 (3) obj. -35.9133 iterations 2
Cbc0038I Pass  36: suminf.    1.10792 (5) obj. -35.9133 iterations 3
Cbc0038I Rounding solution of -43.2 is better than previous of -17.4

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -63.13
Cbc0038I Pass  36: suminf.    1.41441 (5) obj. -63.13 iterations 1
Cbc0038I Pass  37: suminf.    1.08409 (6) obj. -63.13 iterations 2
Cbc0038I Pass  38: suminf.    0.76036 (3) obj. -63.13 iterations 14
Cbc0038I Pass  39: suminf.    0.75452 (4) obj. -63.13 iterations 1
Cbc0038I Pass  40: suminf.    1.13729 (4) obj. -63.13 iterations 4
Cbc0038I Pass  41: suminf.    0.65830 (3) obj. -63.13 iterations 3
Cbc0038I Pass  42: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  43: suminf.    1.03885 (4) obj. -63.13 iterations 6
Cbc0038I Pass  44: suminf.    1.02961 (4) obj. -63.13 iterations 3
Cbc0038I Pass  45: suminf.    1.26861 (5) obj. -63.13 iterations 7
Cbc0038I Pass  46: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  47: suminf.    1.13729 (4) obj. -63.13 iterations 4
Cbc0038I Pass  48: suminf.    0.65830 (3) obj. -63.13 iterations 3
Cbc0038I Pass  49: suminf.    0.75452 (4) obj. -63.13 iterations 3
Cbc0038I Pass  50: suminf.    1.01886 (5) obj. -63.13 iterations 10
Cbc0038I Pass  51: suminf.    0.36053 (2) obj. -63.13 iterations 8
Cbc0038I Pass  52: suminf.    1.06193 (4) obj. -63.13 iterations 3
Cbc0038I Pass  53: suminf.    0.79522 (3) obj. -63.13 iterations 6
Cbc0038I Pass  54: suminf.    0.76508 (3) obj. -63.13 iterations 2
Cbc0038I Pass  55: suminf.    0.84731 (3) obj. -63.13 iterations 3
Cbc0038I Pass  56: suminf.    0.50519 (3) obj. -63.13 iterations 1
Cbc0038I Pass  57: suminf.    0.79522 (3) obj. -63.13 iterations 4
Cbc0038I Pass  58: suminf.    4.93543 (13) obj. -63.13 iterations 13
Cbc0038I Pass  59: suminf.    2.04770 (8) obj. -63.13 iterations 14
Cbc0038I Pass  60: suminf.    2.03590 (8) obj. -63.13 iterations 3
Cbc0038I Pass  61: suminf.    1.55933 (6) obj. -63.13 iterations 12
Cbc0038I Pass  62: suminf.    0.50519 (3) obj. -63.13 iterations 7
Cbc0038I Pass  63: suminf.    0.79522 (3) obj. -63.13 iterations 4
Cbc0038I Pass  64: suminf.    0.76508 (3) obj. -63.13 iterations 2
Cbc0038I Pass  65: suminf.    0.84731 (3) obj. -63.13 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -43.2 - took 0.03 seconds
Cbc0012I Integer solution of -43.2 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 17 rows 11 columns
Cbc0031I 5 added rows had average density of 19
Cbc0013I At root node, 5 cuts changed objective from -109.16675 to -55.114649 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 267 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.957 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -43.2 best solution, best possible -55.114649 (2.09 seconds)
Cbc0001I Search completed - best objective -43.20000000000002, took 975 iterations and 4 nodes (2.10 seconds)
Cbc0032I Strong branching done 38 times (191 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       2.14

