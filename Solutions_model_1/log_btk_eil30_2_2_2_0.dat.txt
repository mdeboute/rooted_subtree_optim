Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 1.98853e-05 - average 3.89908e-07, 4 fixed columns
Coin0506I Presolve 41 (-10) rows, 25 (-4) columns and 125 (-27) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Coin0511I After Postsolve, objective 95.999368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Coin0511I After Postsolve, objective 95.999368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.99936847 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.981%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.65297
Cbc0038I Pass   1: suminf.    0.13710 (1) obj. -46.8483 iterations 22
Cbc0038I Solution found of -23.646
Cbc0038I Relaxing continuous gives -23.646
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -23.646 to -43.7684 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.9916
Cbc0038I Pass   2: suminf.    0.18649 (2) obj. -48.9916 iterations 1
Cbc0038I Pass   3: suminf.    0.59213 (3) obj. -48.9916 iterations 8
Cbc0038I Pass   4: suminf.    0.44258 (2) obj. -48.9916 iterations 1
Cbc0038I Pass   5: suminf.    0.53394 (2) obj. -48.9916 iterations 3
Cbc0038I Pass   6: suminf.    2.91025 (11) obj. -48.9916 iterations 7
Cbc0038I Pass   7: suminf.    1.14101 (4) obj. -48.9916 iterations 17
Cbc0038I Pass   8: suminf.    1.54297 (6) obj. -48.9916 iterations 4
Cbc0038I Pass   9: suminf.    1.03497 (5) obj. -48.9916 iterations 4
Cbc0038I Pass  10: suminf.    1.01323 (5) obj. -48.9916 iterations 3
Cbc0038I Pass  11: suminf.    0.53394 (2) obj. -48.9916 iterations 9
Cbc0038I Pass  12: suminf.    0.44258 (2) obj. -48.9916 iterations 1
Cbc0038I Pass  13: suminf.    1.22188 (3) obj. -48.9916 iterations 7
Cbc0038I Pass  14: suminf.    0.57646 (4) obj. -48.9916 iterations 5
Cbc0038I Pass  15: suminf.    1.37826 (6) obj. -48.9916 iterations 7
Cbc0038I Pass  16: suminf.    1.37826 (6) obj. -48.9916 iterations 0
Cbc0038I Pass  17: suminf.    1.33341 (4) obj. -48.9916 iterations 9
Cbc0038I Pass  18: suminf.    1.15755 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  19: suminf.    0.60597 (2) obj. -48.9916 iterations 2
Cbc0038I Pass  20: suminf.    0.34404 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  21: suminf.    1.16365 (3) obj. -48.9916 iterations 3
Cbc0038I Pass  22: suminf.    0.44258 (2) obj. -48.9916 iterations 4
Cbc0038I Pass  23: suminf.    0.53394 (2) obj. -48.9916 iterations 1
Cbc0038I Pass  24: suminf.    3.89314 (11) obj. -48.9916 iterations 15
Cbc0038I Pass  25: suminf.    3.09559 (9) obj. -48.9916 iterations 5
Cbc0038I Pass  26: suminf.    1.23957 (4) obj. -48.9916 iterations 7
Cbc0038I Pass  27: suminf.    1.07842 (3) obj. -48.9916 iterations 1
Cbc0038I Pass  28: suminf.    0.73468 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  29: suminf.    0.81878 (2) obj. -48.9916 iterations 4
Cbc0038I Pass  30: suminf.    0.62170 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  31: suminf.    0.72734 (2) obj. -48.9916 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -43.7684 to -47.692 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.3931
Cbc0038I Pass  31: suminf.    0.73284 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  32: suminf.    0.72675 (3) obj. -58.3931 iterations 3
Cbc0038I Pass  33: suminf.    1.20026 (6) obj. -58.3931 iterations 11
Cbc0038I Pass  34: suminf.    1.05005 (5) obj. -58.3931 iterations 1
Cbc0038I Pass  35: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  36: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  37: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  38: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  39: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  40: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  41: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  42: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  43: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  44: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  45: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  46: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  47: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  48: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  49: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  50: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  51: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  52: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  53: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  54: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  55: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  56: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  57: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  58: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  59: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  60: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.692 - took 0.03 seconds
Cbc0012I Integer solution of -47.69201 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 34 rows 21 columns
Cbc0031I 19 added rows had average density of 16.947368
Cbc0013I At root node, 19 cuts changed objective from -95.999368 to -54.673297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1820 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 929 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.687 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -47.69201 best solution, best possible -54.673297 (1.44 seconds)
Cbc0001I Search completed - best objective -47.69201000000001, took 2901 iterations and 8 nodes (1.48 seconds)
Cbc0032I Strong branching done 136 times (951 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.49

