Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000171539 - average 1.28014e-06, 10 fixed columns
Coin0506I Presolve 111 (-23) rows, 64 (-12) columns and 342 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Coin0511I After Postsolve, objective 44.732108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Coin0511I After Postsolve, objective 44.732108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.73210844 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.86548
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.44641 iterations 52
Cbc0038I Solution found of 3.44641
Cbc0038I Relaxing continuous gives 3.44641
Cbc0038I Rounding solution of 1.76311 is better than previous of 3.44641

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 1.76311 to -10.1104 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.5726
Cbc0038I Pass   2: suminf.    2.15414 (11) obj. -13.5726 iterations 20
Cbc0038I Pass   3: suminf.    0.86195 (3) obj. -13.5726 iterations 18
Cbc0038I Pass   4: suminf.    0.79895 (2) obj. -13.5726 iterations 1
Cbc0038I Pass   5: suminf.    0.72698 (3) obj. -13.5726 iterations 2
Cbc0038I Pass   6: suminf.    1.11168 (3) obj. -13.5726 iterations 2
Cbc0038I Pass   7: suminf.    1.06495 (4) obj. -13.5726 iterations 2
Cbc0038I Pass   8: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass   9: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  10: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  11: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  12: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  13: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  14: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  15: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  16: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  17: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  18: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  19: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  20: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  21: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  22: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  23: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  24: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  25: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  26: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  27: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  28: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  29: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  30: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  31: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -10.1104 - took 0.05 seconds
Cbc0012I Integer solution of -10.11036 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0031I 27 added rows had average density of 54.851852
Cbc0013I At root node, 27 cuts changed objective from -44.732108 to -32.664159 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9821 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2291 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.11036 best solution, best possible -32.664159 (0.90 seconds)
Cbc0012I Integer solution of -10.34819 found by rounding after 7162 iterations and 11 nodes (1.05 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -10.53725 found by rounding after 8175 iterations and 56 nodes (1.13 seconds)
Cbc0012I Integer solution of -10.88868 found by rounding after 9173 iterations and 83 nodes (1.18 seconds)
Cbc0001I Search completed - best objective -10.88868, took 9253 iterations and 88 nodes (1.19 seconds)
Cbc0032I Strong branching done 732 times (14488 iterations), fathomed 10 nodes and fixed 17 variables
Cbc0035I Maximum depth 18, 349 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.21

