Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 4.86555e-05 - average 8.2467e-07, 8 fixed columns
Coin0506I Presolve 45 (-14) rows, 25 (-8) columns and 132 (-44) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Coin0511I After Postsolve, objective 108.405, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Coin0511I After Postsolve, objective 108.405, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.4049988 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.93862
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.9793 iterations 21
Cbc0038I Solution found of -11.9793
Cbc0038I Relaxing continuous gives -11.9793
Cbc0038I Rounding solution of -17.7039 is better than previous of -11.9793

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -17.7039 to -39.4608 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.3553
Cbc0038I Pass   2: suminf.    0.77559 (2) obj. -46.3553 iterations 4
Cbc0038I Pass   3: suminf.    0.74316 (2) obj. -46.3553 iterations 2
Cbc0038I Pass   4: suminf.    2.72986 (8) obj. -46.3553 iterations 11
Cbc0038I Pass   5: suminf.    2.35132 (9) obj. -46.3553 iterations 4
Cbc0038I Pass   6: suminf.    1.77388 (6) obj. -46.3553 iterations 13
Cbc0038I Pass   7: suminf.    1.07649 (4) obj. -46.3553 iterations 1
Cbc0038I Pass   8: suminf.    0.86704 (4) obj. -46.3553 iterations 3
Cbc0038I Pass   9: suminf.    1.73880 (5) obj. -46.3553 iterations 5
Cbc0038I Pass  10: suminf.    2.05644 (5) obj. -46.3553 iterations 6
Cbc0038I Pass  11: suminf.    0.73211 (3) obj. -46.3553 iterations 3
Cbc0038I Pass  12: suminf.    0.73211 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  13: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  14: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  15: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  16: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  17: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  18: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  19: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  20: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  21: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  22: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  23: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  24: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  25: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  26: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  27: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  28: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  29: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  30: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  31: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -39.4608 - took 0.02 seconds
Cbc0012I Integer solution of -39.4608 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 19 columns
Cbc0031I 11 added rows had average density of 25
Cbc0013I At root node, 11 cuts changed objective from -108.405 to -73.786396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1239 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 683 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.707 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -39.4608 best solution, best possible -73.784249 (1.51 seconds)
Cbc0001I Search completed - best objective -39.4608, took 2605 iterations and 12 nodes (1.55 seconds)
Cbc0032I Strong branching done 122 times (1077 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.55

