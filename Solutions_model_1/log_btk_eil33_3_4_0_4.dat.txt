Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-27) rows, 22 (-13) columns and 122 (-73) elements
Clp1000I sum of infeasibilities 6.8288e-06 - average 1.6259e-07, 1 fixed columns
Coin0506I Presolve 36 (-6) rows, 19 (-3) columns and 104 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Coin0511I After Postsolve, objective 207.38106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Coin0511I After Postsolve, objective 207.38106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 207.3810569 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 42 rows, 22 columns (21 integer (21 of which binary)) and 122 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.38998
Cbc0038I Pass   1: suminf.    0.16250 (1) obj. -116.105 iterations 16
Cbc0038I Solution found of -42.2857
Cbc0038I Relaxing continuous gives -42.2857
Cbc0038I Rounding solution of -61.1428 is better than previous of -42.2857

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 22 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -61.1428 to -73.2857 (0.01 seconds)
Cbc0038I Round again with cutoff of -86.6953
Cbc0038I Pass   2: suminf.    0.16250 (1) obj. -116.105 iterations 0
Cbc0038I Pass   3: suminf.    0.39555 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   4: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass   5: suminf.    0.54570 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   6: suminf.    1.72965 (6) obj. -86.6953 iterations 7
Cbc0038I Pass   7: suminf.    0.53320 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   8: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass   9: suminf.    0.60241 (2) obj. -96.8795 iterations 2
Cbc0038I Pass  10: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass  11: suminf.    0.56755 (4) obj. -86.6953 iterations 3
Cbc0038I Pass  12: suminf.    0.56755 (4) obj. -86.6953 iterations 0
Cbc0038I Pass  13: suminf.    0.54570 (2) obj. -86.6953 iterations 6
Cbc0038I Pass  14: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass  15: suminf.    1.85568 (5) obj. -86.6953 iterations 6
Cbc0038I Pass  16: suminf.    0.58487 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  17: suminf.    0.53320 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  18: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass  19: suminf.    0.67135 (3) obj. -86.6953 iterations 8
Cbc0038I Pass  20: suminf.    0.24924 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  21: suminf.    0.55508 (3) obj. -86.6953 iterations 4
Cbc0038I Pass  22: suminf.    0.35854 (2) obj. -86.6953 iterations 1
Cbc0038I Pass  23: suminf.    0.64629 (4) obj. -86.6953 iterations 4
Cbc0038I Pass  24: suminf.    0.13037 (1) obj. -86.6953 iterations 5
Cbc0038I Pass  25: suminf.    0.54570 (2) obj. -86.6953 iterations 2
Cbc0038I Pass  26: suminf.    0.35051 (2) obj. -86.6953 iterations 4
Cbc0038I Pass  27: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass  28: suminf.    0.35051 (2) obj. -86.6953 iterations 2
Cbc0038I Pass  29: suminf.    0.78125 (2) obj. -86.6953 iterations 7
Cbc0038I Pass  30: suminf.    0.13037 (1) obj. -86.6953 iterations 4
Cbc0038I Pass  31: suminf.    0.43991 (2) obj. -86.6953 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 22 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -73.2857 - took 0.02 seconds
Cbc0012I Integer solution of -73.2857 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 42 rows 22 columns, reduced to 26 rows 15 columns
Cbc0031I 6 added rows had average density of 21
Cbc0013I At root node, 6 cuts changed objective from -207.38106 to -113.05973 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 528 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -92.1428 found by DiveCoefficient after 1330 iterations and 6 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -92.14279999999997, took 1403 iterations and 12 nodes (0.18 seconds)
Cbc0032I Strong branching done 136 times (1053 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

