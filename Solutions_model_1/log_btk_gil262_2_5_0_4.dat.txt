Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 378 (-149) rows, 199 (-65) columns and 1135 (-410) elements
Clp1000I sum of infeasibilities 0 - average 0, 193 fixed columns
Coin0506I Presolve 3 (-375) rows, 5 (-194) columns and 12 (-1123) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 244534.15
Clp0000I Optimal - objective value 244534.15
Coin0511I After Postsolve, objective 244534.15, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1478005 - largest nonzero change 0 ( 0%) - largest zero change 2.9996199e-05
Clp0000I Optimal - objective value 244534.15
Clp0000I Optimal - objective value 244534.15
Clp0000I Optimal - objective value 244534.15
Coin0511I After Postsolve, objective 244534.15, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 244534.1474 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 378 rows, 199 columns (198 integer (198 of which binary)) and 1135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.474%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.341811
Cbc0038I Pass   1: suminf.    0.31607 (2) obj. -242998 iterations 25
Cbc0038I Solution found of -184675
Cbc0038I Relaxing continuous gives -184675
Cbc0038I Rounding solution of -229226 is better than previous of -184675

Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 0 continuous
Cbc0038I Full problem 378 rows 199 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -230757
Cbc0038I Reduced cost fixing fixed 63 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.31607 (2) obj. -242998 iterations 0
Cbc0038I Pass   3: suminf.    0.05081 (1) obj. -230757 iterations 12
Cbc0038I Pass   4: suminf.    0.05081 (1) obj. -230757 iterations 0
Cbc0038I Pass   5: suminf.    0.49790 (2) obj. -239930 iterations 8
Cbc0038I Pass   6: suminf.    1.99298 (12) obj. -230757 iterations 33
Cbc0038I Pass   7: suminf.    1.12209 (3) obj. -230757 iterations 19
Cbc0038I Pass   8: suminf.    0.43277 (1) obj. -230757 iterations 7
Cbc0038I Pass   9: suminf.    0.33673 (1) obj. -233650 iterations 6
Cbc0038I Pass  10: suminf.    0.43277 (1) obj. -230757 iterations 6
Cbc0038I Pass  11: suminf.    1.48946 (4) obj. -230757 iterations 24
Cbc0038I Pass  12: suminf.    0.61424 (3) obj. -230757 iterations 18
Cbc0038I Pass  13: suminf.    0.40310 (5) obj. -230757 iterations 18
Cbc0038I Pass  14: suminf.    1.18598 (4) obj. -230757 iterations 19
Cbc0038I Pass  15: suminf.    0.21789 (1) obj. -230757 iterations 9
Cbc0038I Pass  16: suminf.    0.15306 (1) obj. -232710 iterations 4
Cbc0038I Pass  17: suminf.    0.33223 (3) obj. -230757 iterations 20
Cbc0038I Pass  18: suminf.    0.24183 (3) obj. -230757 iterations 14
Cbc0038I Pass  19: suminf.    0.21789 (1) obj. -230757 iterations 15
Cbc0038I Pass  20: suminf.    1.11240 (4) obj. -230757 iterations 20
Cbc0038I Pass  21: suminf.    0.25287 (1) obj. -231099 iterations 14
Cbc0038I Pass  22: suminf.    0.43277 (1) obj. -230757 iterations 5
Cbc0038I Pass  23: suminf.    0.33673 (1) obj. -233650 iterations 4
Cbc0038I Pass  24: suminf.    0.92920 (5) obj. -230757 iterations 19
Cbc0038I Pass  25: suminf.    0.48980 (1) obj. -233429 iterations 15
Cbc0038I Pass  26: suminf.    0.40109 (1) obj. -230757 iterations 4
Cbc0038I Pass  27: suminf.    0.76594 (8) obj. -230757 iterations 27
Cbc0038I Pass  28: suminf.    0.40980 (5) obj. -230757 iterations 27
Cbc0038I Pass  29: suminf.    0.58044 (3) obj. -230757 iterations 22
Cbc0038I Pass  30: suminf.    0.90940 (5) obj. -230757 iterations 12
Cbc0038I Pass  31: suminf.    0.37664 (1) obj. -230757 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 378 rows 199 columns, reduced to 47 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -184675 to -235630 (0.04 seconds)
Cbc0038I Round again with cutoff of -237411
Cbc0038I Reduced cost fixing fixed 126 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.34181 (2) obj. -244534 iterations 17
Cbc0038I Pass  32: suminf.    0.06627 (2) obj. -237411 iterations 17
Cbc0038I Pass  33: suminf.    0.06627 (2) obj. -237411 iterations 0
Cbc0038I Pass  34: suminf.    0.58439 (2) obj. -240505 iterations 13
Cbc0038I Pass  35: suminf.    0.86048 (3) obj. -237411 iterations 25
Cbc0038I Pass  36: suminf.    0.86048 (3) obj. -237411 iterations 4
Cbc0038I Pass  37: suminf.    0.91947 (2) obj. -237411 iterations 20
Cbc0038I Pass  38: suminf.    0.75788 (2) obj. -241128 iterations 6
Cbc0038I Pass  39: suminf.    0.35249 (5) obj. -237411 iterations 17
Cbc0038I Pass  40: suminf.    1.00563 (3) obj. -237411 iterations 18
Cbc0038I Pass  41: suminf.    0.15577 (1) obj. -237411 iterations 9
Cbc0038I Pass  42: suminf.    0.14286 (1) obj. -237800 iterations 5
Cbc0038I Pass  43: suminf.    0.14286 (1) obj. -237800 iterations 10
Cbc0038I Pass  44: suminf.    0.14286 (1) obj. -237800 iterations 10
Cbc0038I Pass  45: suminf.    1.11709 (3) obj. -237411 iterations 21
Cbc0038I Pass  46: suminf.    0.21326 (2) obj. -237411 iterations 16
Cbc0038I Pass  47: suminf.    0.75645 (5) obj. -237411 iterations 30
Cbc0038I Pass  48: suminf.    0.89597 (4) obj. -237411 iterations 27
Cbc0038I Pass  49: suminf.    0.86048 (3) obj. -237411 iterations 9
Cbc0038I Pass  50: suminf.    0.91947 (2) obj. -237411 iterations 19
Cbc0038I Pass  51: suminf.    0.75788 (2) obj. -241128 iterations 6
Cbc0038I Pass  52: suminf.    0.35249 (5) obj. -237411 iterations 14
Cbc0038I Pass  53: suminf.    1.00563 (3) obj. -237411 iterations 17
Cbc0038I Pass  54: suminf.    0.15577 (1) obj. -237411 iterations 8
Cbc0038I Pass  55: suminf.    0.14286 (1) obj. -237800 iterations 4
Cbc0038I Pass  56: suminf.    1.08764 (4) obj. -237411 iterations 12
Cbc0038I Pass  57: suminf.    1.03978 (3) obj. -237411 iterations 10
Cbc0038I Pass  58: suminf.    0.91947 (2) obj. -237411 iterations 20
Cbc0038I Pass  59: suminf.    0.75788 (2) obj. -241128 iterations 6
Cbc0038I Pass  60: suminf.    0.35249 (5) obj. -237411 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous
Cbc0038I Full problem 378 rows 199 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -235630 - took 0.05 seconds
Cbc0012I Integer solution of -235630 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 378 rows 199 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 24
Cbc0013I At root node, 2 cuts changed objective from -244534.15 to -237842.5 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 198.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -235630, took 14 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 118 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

