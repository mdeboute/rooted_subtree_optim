Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 569 (-34) elements
Clp1000I sum of infeasibilities 3.54076e-05 - average 1.89345e-07, 23 fixed columns
Coin0506I Presolve 140 (-47) rows, 76 (-25) columns and 425 (-144) elements
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 0.21958772 - largest nonzero change 0 ( 0%) - largest zero change 2.878693e-05
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Coin0511I After Postsolve, objective 40.856093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20404508 - largest nonzero change 0 ( 0%) - largest zero change 2.9532665e-05
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Coin0511I After Postsolve, objective 40.856093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.85609287 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 186 rows, 101 columns (100 integer (100 of which binary)) and 580 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.010%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.17535
Cbc0038I Solution found of 0.532324
Cbc0038I Relaxing continuous gives -2.09293
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 56 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -2.09293 to -12.0923 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.9687
Cbc0038I Pass   1: suminf.    1.60254 (12) obj. -14.9687 iterations 61
Cbc0038I Pass   2: suminf.    2.94333 (8) obj. -14.9687 iterations 16
Cbc0038I Pass   3: suminf.    2.44440 (6) obj. -14.9687 iterations 2
Cbc0038I Pass   4: suminf.    2.08138 (6) obj. -14.9687 iterations 2
Cbc0038I Pass   5: suminf.    1.99197 (6) obj. -14.9687 iterations 1
Cbc0038I Pass   6: suminf.    1.89426 (6) obj. -14.9687 iterations 9
Cbc0038I Pass   7: suminf.    1.32274 (4) obj. -14.9687 iterations 7
Cbc0038I Pass   8: suminf.    1.12435 (3) obj. -14.9687 iterations 1
Cbc0038I Pass   9: suminf.    1.27997 (3) obj. -14.9687 iterations 2
Cbc0038I Pass  10: suminf.    1.00032 (4) obj. -14.9687 iterations 5
Cbc0038I Pass  11: suminf.    1.12647 (4) obj. -14.9687 iterations 4
Cbc0038I Pass  12: suminf.    4.02001 (9) obj. -14.9687 iterations 21
Cbc0038I Pass  13: suminf.    1.94487 (6) obj. -14.9687 iterations 14
Cbc0038I Pass  14: suminf.    1.86826 (6) obj. -14.9687 iterations 2
Cbc0038I Pass  15: suminf.    1.53215 (5) obj. -14.9687 iterations 13
Cbc0038I Pass  16: suminf.    1.48380 (4) obj. -14.9687 iterations 3
Cbc0038I Pass  17: suminf.    1.71307 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  18: suminf.    1.71307 (6) obj. -14.9687 iterations 0
Cbc0038I Pass  19: suminf.    1.57768 (5) obj. -14.9687 iterations 11
Cbc0038I Pass  20: suminf.    2.88966 (12) obj. -14.9687 iterations 41
Cbc0038I Pass  21: suminf.    2.06801 (10) obj. -14.9687 iterations 16
Cbc0038I Pass  22: suminf.    2.16851 (7) obj. -14.9687 iterations 27
Cbc0038I Pass  23: suminf.    1.20179 (6) obj. -14.9687 iterations 4
Cbc0038I Pass  24: suminf.    1.20179 (6) obj. -14.9687 iterations 0
Cbc0038I Pass  25: suminf.    2.05255 (5) obj. -14.9687 iterations 11
Cbc0038I Pass  26: suminf.    1.57112 (5) obj. -14.9687 iterations 4
Cbc0038I Pass  27: suminf.    1.46026 (5) obj. -14.9687 iterations 1
Cbc0038I Pass  28: suminf.    2.25131 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  29: suminf.    1.48943 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  30: suminf.    1.20179 (6) obj. -14.9687 iterations 3
Cbc0038I Rounding solution of -13.6855 is better than previous of -12.0923

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -20.1462
Cbc0038I Pass  30: suminf.    2.32142 (16) obj. -20.1462 iterations 5
Cbc0038I Pass  31: suminf.    2.25111 (6) obj. -20.1462 iterations 21
Cbc0038I Pass  32: suminf.    2.02702 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  33: suminf.    1.62795 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  34: suminf.    1.25430 (5) obj. -20.1462 iterations 9
Cbc0038I Pass  35: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  36: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  37: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  38: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  39: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  40: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  41: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  42: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  43: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  44: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  45: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  46: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  47: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  48: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  49: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  50: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  51: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  52: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  53: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  54: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  55: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  56: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  57: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  58: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  59: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Rounding solution of -14.7544 is better than previous of -13.6855

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 56 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -26.3592
Cbc0038I Pass  59: suminf.    3.26325 (24) obj. -26.3592 iterations 5
Cbc0038I Pass  60: suminf.    3.39849 (11) obj. -26.3592 iterations 28
Cbc0038I Pass  61: suminf.    2.82666 (9) obj. -26.3592 iterations 14
Cbc0038I Pass  62: suminf.    2.76657 (9) obj. -26.3592 iterations 2
Cbc0038I Pass  63: suminf.    3.06511 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  64: suminf.    2.94939 (9) obj. -26.3592 iterations 4
Cbc0038I Pass  65: suminf.    2.26840 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  66: suminf.    2.19908 (9) obj. -26.3592 iterations 3
Cbc0038I Pass  67: suminf.    3.06067 (9) obj. -26.3592 iterations 9
Cbc0038I Pass  68: suminf.    2.75964 (11) obj. -26.3592 iterations 16
Cbc0038I Pass  69: suminf.    2.12032 (8) obj. -26.3592 iterations 13
Cbc0038I Pass  70: suminf.    2.96625 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  71: suminf.    2.39634 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  72: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  73: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  74: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  75: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  76: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  77: suminf.    2.39634 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  78: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  79: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  80: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  81: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  82: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  83: suminf.    2.39634 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  84: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  85: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  86: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  87: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  88: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -14.7544 - took 0.10 seconds
Cbc0012I Integer solution of -14.75436 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 186 rows 101 columns, reduced to 60 rows 39 columns
Cbc0012I Integer solution of -15.70326 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 22 added rows had average density of 61.454545
Cbc0013I At root node, 22 cuts changed objective from -40.856093 to -34.059455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10106 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.70326 best solution, best possible -34.059455 (1.05 seconds)
Cbc0004I Integer solution of -16.01313 found after 8398 iterations and 46 nodes (1.32 seconds)
Cbc0001I Search completed - best objective -16.01313, took 10101 iterations and 94 nodes (1.52 seconds)
Cbc0032I Strong branching done 1190 times (19467 iterations), fathomed 6 nodes and fixed 52 variables
Cbc0035I Maximum depth 29, 280 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       1.53

