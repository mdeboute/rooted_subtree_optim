Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 64 (-14) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 3.82789e-05 - average 3.2717e-07, 23 fixed columns
Coin0506I Presolve 68 (-49) rows, 39 (-25) columns and 207 (-148) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Coin0511I After Postsolve, objective 51.397918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22462276 - largest nonzero change 0 ( 0%) - largest zero change 2.9728923e-05
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Coin0511I After Postsolve, objective 51.397918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.39791797 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 64 columns (63 integer (63 of which binary)) and 438 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.876%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.68032
Cbc0038I Solution found of -10.9561
Cbc0038I Relaxing continuous gives -11.5499
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -11.5499 to -26.6817 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.069
Cbc0038I Pass   1: suminf.    1.08638 (8) obj. -29.069 iterations 35
Cbc0038I Pass   2: suminf.    2.08411 (6) obj. -29.069 iterations 9
Cbc0038I Pass   3: suminf.    0.68914 (5) obj. -29.069 iterations 6
Cbc0038I Pass   4: suminf.    1.13411 (6) obj. -29.069 iterations 8
Cbc0038I Pass   5: suminf.    1.71819 (8) obj. -29.069 iterations 14
Cbc0038I Pass   6: suminf.    1.32507 (5) obj. -29.069 iterations 7
Cbc0038I Pass   7: suminf.    1.43495 (4) obj. -29.069 iterations 10
Cbc0038I Pass   8: suminf.    1.29559 (4) obj. -29.069 iterations 1
Cbc0038I Pass   9: suminf.    1.02980 (4) obj. -29.069 iterations 3
Cbc0038I Pass  10: suminf.    2.17598 (7) obj. -29.069 iterations 11
Cbc0038I Pass  11: suminf.    1.34338 (4) obj. -29.069 iterations 13
Cbc0038I Pass  12: suminf.    1.04515 (5) obj. -29.069 iterations 3
Cbc0038I Pass  13: suminf.    2.22707 (7) obj. -29.069 iterations 15
Cbc0038I Pass  14: suminf.    1.24891 (5) obj. -29.069 iterations 6
Cbc0038I Pass  15: suminf.    1.34322 (5) obj. -29.069 iterations 3
Cbc0038I Pass  16: suminf.    1.24891 (5) obj. -29.069 iterations 3
Cbc0038I Pass  17: suminf.    1.58471 (7) obj. -29.069 iterations 18
Cbc0038I Pass  18: suminf.    1.44388 (6) obj. -29.069 iterations 8
Cbc0038I Pass  19: suminf.    1.90545 (7) obj. -29.069 iterations 7
Cbc0038I Pass  20: suminf.    1.04363 (4) obj. -29.069 iterations 7
Cbc0038I Pass  21: suminf.    0.92946 (4) obj. -29.069 iterations 4
Cbc0038I Pass  22: suminf.    1.43495 (4) obj. -29.069 iterations 11
Cbc0038I Pass  23: suminf.    1.29559 (4) obj. -29.069 iterations 1
Cbc0038I Pass  24: suminf.    1.02980 (4) obj. -29.069 iterations 2
Cbc0038I Pass  25: suminf.    1.82430 (7) obj. -29.069 iterations 24
Cbc0038I Pass  26: suminf.    1.50555 (7) obj. -29.069 iterations 12
Cbc0038I Pass  27: suminf.    1.64473 (4) obj. -29.069 iterations 9
Cbc0038I Pass  28: suminf.    1.64473 (4) obj. -29.069 iterations 0
Cbc0038I Pass  29: suminf.    0.78041 (4) obj. -29.069 iterations 3
Cbc0038I Pass  30: suminf.    0.69306 (3) obj. -29.069 iterations 2
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -33.366
Cbc0038I Pass  30: suminf.    1.39196 (9) obj. -33.366 iterations 1
Cbc0038I Pass  31: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  32: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  33: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  34: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  35: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  36: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  37: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  38: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  39: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  40: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  41: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  42: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  43: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  44: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  45: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  46: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  47: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  48: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  49: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  50: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  51: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  52: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  53: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  54: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  55: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  56: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  57: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  58: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  59: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -26.6817 - took 0.04 seconds
Cbc0012I Integer solution of -26.68166 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 104 rows 64 columns, reduced to 35 rows 21 columns
Cbc0031I 16 added rows had average density of 39.25
Cbc0013I At root node, 16 cuts changed objective from -50.553937 to -39.466102 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4619 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1704 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -26.68166, took 4510 iterations and 16 nodes (0.53 seconds)
Cbc0032I Strong branching done 300 times (5191 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 6, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.54

