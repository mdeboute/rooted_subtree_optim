Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 72 (-6) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 1.24045e-05 - average 9.61587e-08, 16 fixed columns
Coin0506I Presolve 98 (-31) rows, 55 (-17) columns and 298 (-96) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.9253512 - largest nonzero change 0 ( 0%) - largest zero change 2.9753801e-05
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Coin0511I After Postsolve, objective 57.761799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Coin0511I After Postsolve, objective 57.761799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.76179912 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 72 columns (71 integer (71 of which binary)) and 440 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.155%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.75574
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.11422 iterations 37
Cbc0038I Solution found of -7.11422
Cbc0038I Relaxing continuous gives -7.11422
Cbc0038I Rounding solution of -18.6055 is better than previous of -7.11422

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -18.6055 to -32.2205 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.7231
Cbc0038I Pass   2: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass   3: suminf.    0.45942 (3) obj. -34.7231 iterations 4
Cbc0038I Pass   4: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass   5: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass   6: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass   7: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass   8: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass   9: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  10: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  11: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  12: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  13: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  14: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  15: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  16: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  17: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  18: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  19: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  20: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  21: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  22: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  23: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  24: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  25: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  26: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  27: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  28: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  29: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  30: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  31: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 51 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -32.2205 to -33.242 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.2276
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.43427 (4) obj. -39.2276 iterations 0
Cbc0038I Pass  32: suminf.    1.06821 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  33: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  34: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  35: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  36: suminf.    2.48375 (10) obj. -39.2276 iterations 16
Cbc0038I Pass  37: suminf.    1.50303 (6) obj. -39.2276 iterations 12
Cbc0038I Pass  38: suminf.    1.46780 (6) obj. -39.2276 iterations 3
Cbc0038I Pass  39: suminf.    1.56773 (5) obj. -39.2276 iterations 11
Cbc0038I Pass  40: suminf.    1.06821 (4) obj. -39.2276 iterations 4
Cbc0038I Pass  41: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  42: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  43: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  44: suminf.    2.22308 (7) obj. -39.2276 iterations 15
Cbc0038I Pass  45: suminf.    1.76736 (6) obj. -39.2276 iterations 10
Cbc0038I Pass  46: suminf.    2.23432 (7) obj. -39.2276 iterations 10
Cbc0038I Pass  47: suminf.    1.43427 (4) obj. -39.2276 iterations 4
Cbc0038I Pass  48: suminf.    1.06821 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  49: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  50: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  51: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  52: suminf.    1.92703 (9) obj. -39.2276 iterations 21
Cbc0038I Pass  53: suminf.    0.77875 (3) obj. -39.2276 iterations 15
Cbc0038I Pass  54: suminf.    0.75116 (3) obj. -39.2276 iterations 1
Cbc0038I Pass  55: suminf.    0.51007 (2) obj. -39.2276 iterations 1
Cbc0038I Pass  56: suminf.    0.43668 (2) obj. -39.2276 iterations 2
Cbc0038I Pass  57: suminf.    1.18254 (4) obj. -39.2276 iterations 13
Cbc0038I Pass  58: suminf.    0.95797 (3) obj. -39.2276 iterations 5
Cbc0038I Pass  59: suminf.    0.88068 (2) obj. -39.2276 iterations 5
Cbc0038I Pass  60: suminf.    0.74787 (3) obj. -39.2276 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -33.242 - took 0.05 seconds
Cbc0012I Integer solution of -33.24196 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 122 rows 72 columns, reduced to 51 rows 29 columns
Cbc0031I 24 added rows had average density of 31.666667
Cbc0013I At root node, 24 cuts changed objective from -57.245755 to -48.210969 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5280 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1105 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 53.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.24196, took 5832 iterations and 28 nodes (0.67 seconds)
Cbc0032I Strong branching done 420 times (7295 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 13, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.68

