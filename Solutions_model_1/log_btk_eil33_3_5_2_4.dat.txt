Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-9) rows, 33 (-2) columns and 179 (-16) elements
Clp1000I sum of infeasibilities 1.95205e-05 - average 3.25342e-07, 3 fixed columns
Coin0506I Presolve 54 (-6) rows, 30 (-3) columns and 161 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 91.855826
Clp0000I Optimal - objective value 91.855826
Coin0511I After Postsolve, objective 91.855826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.855826
Clp0000I Optimal - objective value 91.855826
Clp0000I Optimal - objective value 91.855826
Coin0511I After Postsolve, objective 91.855826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.85582641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 33 columns (32 integer (32 of which binary)) and 186 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.8207
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.75018 iterations 23
Cbc0038I Solution found of 0.75018
Cbc0038I Relaxing continuous gives 0.75018
Cbc0038I Rounding solution of -23.002 is better than previous of 0.75018

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -23.002 to -36.8063 (0.02 seconds)
Cbc0038I Round again with cutoff of -42.18
Cbc0038I Pass   2: suminf.    1.98037 (9) obj. -42.18 iterations 10
Cbc0038I Pass   3: suminf.    1.05067 (3) obj. -42.18 iterations 10
Cbc0038I Pass   4: suminf.    1.05067 (3) obj. -42.18 iterations 1
Cbc0038I Pass   5: suminf.    0.71647 (4) obj. -42.18 iterations 6
Cbc0038I Pass   6: suminf.    0.71647 (4) obj. -42.18 iterations 0
Cbc0038I Pass   7: suminf.    1.61275 (5) obj. -42.18 iterations 3
Cbc0038I Pass   8: suminf.    1.54991 (4) obj. -42.18 iterations 1
Cbc0038I Pass   9: suminf.    1.34129 (4) obj. -42.18 iterations 2
Cbc0038I Pass  10: suminf.    1.88317 (6) obj. -42.18 iterations 13
Cbc0038I Pass  11: suminf.    0.79258 (6) obj. -42.18 iterations 6
Cbc0038I Pass  12: suminf.    1.16791 (4) obj. -42.18 iterations 4
Cbc0038I Pass  13: suminf.    1.16791 (4) obj. -42.18 iterations 1
Cbc0038I Pass  14: suminf.    1.36636 (5) obj. -42.18 iterations 6
Cbc0038I Pass  15: suminf.    1.25679 (3) obj. -42.18 iterations 3
Cbc0038I Pass  16: suminf.    0.71647 (4) obj. -42.18 iterations 4
Cbc0038I Pass  17: suminf.    0.71647 (4) obj. -42.18 iterations 0
Cbc0038I Pass  18: suminf.    1.61275 (5) obj. -42.18 iterations 3
Cbc0038I Pass  19: suminf.    1.54991 (4) obj. -42.18 iterations 1
Cbc0038I Pass  20: suminf.    1.34129 (4) obj. -42.18 iterations 2
Cbc0038I Pass  21: suminf.    2.28831 (6) obj. -42.18 iterations 4
Cbc0038I Pass  22: suminf.    1.57222 (4) obj. -42.18 iterations 5
Cbc0038I Pass  23: suminf.    0.62043 (4) obj. -42.18 iterations 3
Cbc0038I Pass  24: suminf.    0.62043 (4) obj. -42.18 iterations 0
Cbc0038I Pass  25: suminf.    1.56238 (4) obj. -42.18 iterations 5
Cbc0038I Pass  26: suminf.    0.71647 (4) obj. -42.18 iterations 5
Cbc0038I Pass  27: suminf.    0.71647 (4) obj. -42.18 iterations 0
Cbc0038I Pass  28: suminf.    1.61275 (5) obj. -42.18 iterations 3
Cbc0038I Pass  29: suminf.    1.54991 (4) obj. -42.18 iterations 1
Cbc0038I Pass  30: suminf.    1.34129 (4) obj. -42.18 iterations 2
Cbc0038I Pass  31: suminf.    2.11572 (7) obj. -42.18 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 50 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -36.8063 to -38.0241 (0.06 seconds)
Cbc0038I Round again with cutoff of -51.8524
Cbc0038I Pass  31: suminf.    2.52743 (9) obj. -51.8524 iterations 0
Cbc0038I Pass  32: suminf.    1.53987 (8) obj. -51.8524 iterations 10
Cbc0038I Pass  33: suminf.    1.20352 (7) obj. -51.8524 iterations 3
Cbc0038I Pass  34: suminf.    3.20586 (8) obj. -51.8524 iterations 11
Cbc0038I Pass  35: suminf.    1.82082 (6) obj. -51.8524 iterations 7
Cbc0038I Pass  36: suminf.    2.64956 (8) obj. -51.8524 iterations 5
Cbc0038I Pass  37: suminf.    0.99217 (5) obj. -51.8524 iterations 5
Cbc0038I Pass  38: suminf.    1.92303 (5) obj. -51.8524 iterations 5
Cbc0038I Pass  39: suminf.    1.41118 (6) obj. -51.8524 iterations 3
Cbc0038I Pass  40: suminf.    1.21829 (5) obj. -51.8524 iterations 1
Cbc0038I Pass  41: suminf.    1.90628 (6) obj. -51.8524 iterations 2
Cbc0038I Pass  42: suminf.    1.10615 (5) obj. -51.8524 iterations 2
Cbc0038I Pass  43: suminf.    0.99217 (5) obj. -51.8524 iterations 2
Cbc0038I Pass  44: suminf.    1.92303 (5) obj. -51.8524 iterations 6
Cbc0038I Pass  45: suminf.    1.41118 (6) obj. -51.8524 iterations 3
Cbc0038I Pass  46: suminf.    1.21829 (5) obj. -51.8524 iterations 1
Cbc0038I Pass  47: suminf.    1.90628 (6) obj. -51.8524 iterations 2
Cbc0038I Pass  48: suminf.    1.10615 (5) obj. -51.8524 iterations 2
Cbc0038I Pass  49: suminf.    0.99217 (5) obj. -51.8524 iterations 2
Cbc0038I Pass  50: suminf.    1.92303 (5) obj. -51.8524 iterations 6
Cbc0038I Pass  51: suminf.    1.41118 (6) obj. -51.8524 iterations 3
Cbc0038I Pass  52: suminf.    1.21829 (5) obj. -51.8524 iterations 1
Cbc0038I Pass  53: suminf.    1.90628 (6) obj. -51.8524 iterations 2
Cbc0038I Pass  54: suminf.    1.10615 (5) obj. -51.8524 iterations 2
Cbc0038I Pass  55: suminf.    0.99217 (5) obj. -51.8524 iterations 2
Cbc0038I Pass  56: suminf.    1.92303 (5) obj. -51.8524 iterations 6
Cbc0038I Pass  57: suminf.    1.41118 (6) obj. -51.8524 iterations 3
Cbc0038I Pass  58: suminf.    1.21829 (5) obj. -51.8524 iterations 1
Cbc0038I Pass  59: suminf.    1.90628 (6) obj. -51.8524 iterations 2
Cbc0038I Pass  60: suminf.    1.10615 (5) obj. -51.8524 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 43 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -38.0241 - took 0.06 seconds
Cbc0012I Integer solution of -38.02415 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 60 rows 33 columns, reduced to 37 rows 23 columns
Cbc0031I 12 added rows had average density of 23.25
Cbc0013I At root node, 12 cuts changed objective from -90.541978 to -67.186207 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2104 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 786 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0012I Integer solution of -44.89824 found by rounding after 2631 iterations and 4 nodes (0.37 seconds)
Cbc0001I Search completed - best objective -44.89824000000001, took 2918 iterations and 10 nodes (0.39 seconds)
Cbc0032I Strong branching done 180 times (2291 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 4, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.39

