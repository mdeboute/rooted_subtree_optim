Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 3.55492e-05 - average 6.02528e-07, 2 fixed columns
Coin0506I Presolve 50 (-9) rows, 30 (-3) columns and 152 (-24) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Coin0511I After Postsolve, objective 68.510679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Coin0511I After Postsolve, objective 68.510679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.51067917 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.668%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.00459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.95811 iterations 23
Cbc0038I Solution found of 5.95811
Cbc0038I Relaxing continuous gives 5.95811
Cbc0038I Rounding solution of -5.31414 is better than previous of 5.95811

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -5.31414 to -12.5079 (0.01 seconds)
Cbc0038I Round again with cutoff of -18.1083
Cbc0038I Pass   2: suminf.    0.86576 (4) obj. -18.1083 iterations 4
Cbc0038I Pass   3: suminf.    1.54230 (4) obj. -18.1083 iterations 2
Cbc0038I Pass   4: suminf.    0.84991 (3) obj. -18.1083 iterations 4
Cbc0038I Pass   5: suminf.    0.84991 (3) obj. -18.1083 iterations 0
Cbc0038I Pass   6: suminf.    1.05104 (3) obj. -18.1083 iterations 3
Cbc0038I Pass   7: suminf.    1.05104 (3) obj. -18.1083 iterations 0
Cbc0038I Pass   8: suminf.    1.28473 (5) obj. -18.1083 iterations 10
Cbc0038I Pass   9: suminf.    0.52733 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  10: suminf.    0.42488 (2) obj. -18.1083 iterations 5
Cbc0038I Pass  11: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  12: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  13: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  14: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  15: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  16: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  17: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  18: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  19: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  20: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  21: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  22: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  23: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  24: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  25: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  26: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  27: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  28: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  29: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  30: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  31: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12.5079 to -19.4136 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.2331
Cbc0038I Pass  31: suminf.    1.21075 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  32: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  33: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  34: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  35: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  36: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  37: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  38: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  39: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  40: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  41: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  42: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  43: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  44: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  45: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  46: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  47: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  48: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  49: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  50: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  51: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  52: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  53: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  54: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  55: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  56: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  57: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  58: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  59: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  60: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19.4136 - took 0.03 seconds
Cbc0012I Integer solution of -19.4136 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 31 rows 21 columns
Cbc0031I 12 added rows had average density of 25.833333
Cbc0013I At root node, 12 cuts changed objective from -68.510679 to -43.697875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1935 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 726 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19.4136, took 3134 iterations and 8 nodes (0.32 seconds)
Cbc0032I Strong branching done 160 times (2376 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.33

