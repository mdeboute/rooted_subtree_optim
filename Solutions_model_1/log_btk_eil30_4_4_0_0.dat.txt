Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 0.00078811 - average 1.40734e-05, 3 fixed columns
Coin0506I Presolve 46 (-10) rows, 27 (-3) columns and 138 (-26) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 76.596451
Clp0000I Optimal - objective value 76.596451
Coin0511I After Postsolve, objective 76.596451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.596451
Clp0000I Optimal - objective value 76.596451
Clp0000I Optimal - objective value 76.596451
Coin0511I After Postsolve, objective 76.596451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.59645134 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.279%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.3923
Cbc0038I Pass   1: suminf.    0.19737 (3) obj. -29.0468 iterations 19
Cbc0038I Pass   2: suminf.    0.19737 (3) obj. -29.0468 iterations 0
Cbc0038I Solution found of -3.77571
Cbc0038I Relaxing continuous gives -12.2494
Cbc0038I Rounding solution of -14.7738 is better than previous of -12.2494

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -14.7738 to -29.5128 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.2213
Cbc0038I Pass   3: suminf.    0.26076 (3) obj. -34.2213 iterations 1
Cbc0038I Pass   4: suminf.    0.26076 (3) obj. -34.2213 iterations 0
Cbc0038I Pass   5: suminf.    0.37577 (4) obj. -34.2213 iterations 6
Cbc0038I Pass   6: suminf.    0.15717 (1) obj. -34.2213 iterations 3
Cbc0038I Pass   7: suminf.    1.25318 (8) obj. -34.2213 iterations 11
Cbc0038I Pass   8: suminf.    1.15901 (10) obj. -34.2213 iterations 6
Cbc0038I Pass   9: suminf.    0.74121 (3) obj. -34.2213 iterations 12
Cbc0038I Pass  10: suminf.    0.81447 (4) obj. -34.2213 iterations 5
Cbc0038I Pass  11: suminf.    1.47297 (8) obj. -34.2213 iterations 7
Cbc0038I Pass  12: suminf.    1.02990 (4) obj. -34.2213 iterations 4
Cbc0038I Pass  13: suminf.    1.37652 (4) obj. -34.2213 iterations 5
Cbc0038I Pass  14: suminf.    1.04744 (4) obj. -34.2213 iterations 3
Cbc0038I Pass  15: suminf.    0.96442 (6) obj. -34.2213 iterations 4
Cbc0038I Pass  16: suminf.    0.96442 (6) obj. -34.2213 iterations 1
Cbc0038I Pass  17: suminf.    2.33747 (9) obj. -34.2213 iterations 10
Cbc0038I Pass  18: suminf.    0.70565 (3) obj. -34.2213 iterations 7
Cbc0038I Pass  19: suminf.    1.08942 (5) obj. -34.2213 iterations 6
Cbc0038I Pass  20: suminf.    1.00983 (3) obj. -34.2213 iterations 2
Cbc0038I Pass  21: suminf.    1.08717 (4) obj. -34.2213 iterations 3
Cbc0038I Pass  22: suminf.    1.00000 (3) obj. -34.2213 iterations 1
Cbc0038I Pass  23: suminf.    1.05145 (4) obj. -34.2213 iterations 4
Cbc0038I Pass  24: suminf.    2.49057 (10) obj. -34.2213 iterations 16
Cbc0038I Pass  25: suminf.    2.24088 (14) obj. -34.2213 iterations 7
Cbc0038I Pass  26: suminf.    0.96588 (6) obj. -34.2213 iterations 15
Cbc0038I Pass  27: suminf.    0.37424 (2) obj. -34.2213 iterations 2
Cbc0038I Pass  28: suminf.    0.58028 (4) obj. -34.2213 iterations 6
Cbc0038I Pass  29: suminf.    0.58057 (5) obj. -34.2213 iterations 1
Cbc0038I Pass  30: suminf.    2.14876 (9) obj. -34.2213 iterations 9
Cbc0038I Pass  31: suminf.    1.53588 (10) obj. -34.2213 iterations 7
Cbc0038I Pass  32: suminf.    0.66769 (3) obj. -34.2213 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -29.5128 - took 0.04 seconds
Cbc0012I Integer solution of -29.512848 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 35 rows 21 columns
Cbc0031I 11 added rows had average density of 22.272727
Cbc0013I At root node, 11 cuts changed objective from -76.596451 to -46.641039 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2547 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 924 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -30.197948 found by rounding after 3424 iterations and 7 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -30.197948, took 3441 iterations and 10 nodes (0.29 seconds)
Cbc0032I Strong branching done 118 times (1539 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.29

