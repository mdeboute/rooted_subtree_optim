Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 24 (-9) columns and 122 (-61) elements
Clp1000I sum of infeasibilities 5.94177e-05 - average 1.44921e-06, 2 fixed columns
Coin0506I Presolve 35 (-6) rows, 21 (-3) columns and 105 (-17) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.3665403 - largest nonzero change 0 ( 0%) - largest zero change 1.5564116e-05
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Coin0511I After Postsolve, objective 81.340987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Clp0000I Optimal - objective value 81.340987
Coin0511I After Postsolve, objective 81.340987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.34098656 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 24 columns (23 integer (23 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.122%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.97281
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.0065 iterations 23
Cbc0038I Solution found of -16.0065
Cbc0038I Relaxing continuous gives -16.0065
Cbc0038I Rounding solution of -38.6259 is better than previous of -16.0065

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -38.6259 to -55.1677 (0.02 seconds)
Cbc0038I Round again with cutoff of -57.7851
Cbc0038I Pass   2: suminf.    1.25180 (3) obj. -57.7851 iterations 5
Cbc0038I Pass   3: suminf.    0.98561 (3) obj. -57.7851 iterations 2
Cbc0038I Pass   4: suminf.    0.65524 (2) obj. -57.7851 iterations 4
Cbc0038I Pass   5: suminf.    0.82536 (2) obj. -57.7851 iterations 2
Cbc0038I Pass   6: suminf.    1.26211 (4) obj. -57.7851 iterations 7
Cbc0038I Pass   7: suminf.    1.20099 (4) obj. -57.7851 iterations 2
Cbc0038I Pass   8: suminf.    0.71162 (2) obj. -57.7851 iterations 9
Cbc0038I Pass   9: suminf.    0.56958 (3) obj. -57.7851 iterations 3
Cbc0038I Pass  10: suminf.    0.36609 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  11: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  12: suminf.    1.13888 (4) obj. -57.7851 iterations 4
Cbc0038I Pass  13: suminf.    0.50374 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  14: suminf.    1.83734 (5) obj. -57.7851 iterations 6
Cbc0038I Pass  15: suminf.    0.94817 (4) obj. -57.7851 iterations 7
Cbc0038I Pass  16: suminf.    0.61129 (3) obj. -57.7851 iterations 1
Cbc0038I Pass  17: suminf.    0.71162 (2) obj. -57.7851 iterations 2
Cbc0038I Pass  18: suminf.    0.71162 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  19: suminf.    0.56958 (3) obj. -57.7851 iterations 3
Cbc0038I Pass  20: suminf.    0.36609 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  21: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  22: suminf.    1.13888 (4) obj. -57.7851 iterations 3
Cbc0038I Pass  23: suminf.    0.50374 (2) obj. -57.7851 iterations 3
Cbc0038I Pass  24: suminf.    1.29444 (5) obj. -57.7851 iterations 4
Cbc0038I Pass  25: suminf.    1.08303 (4) obj. -57.7851 iterations 1
Cbc0038I Pass  26: suminf.    0.68895 (3) obj. -57.7851 iterations 1
Cbc0038I Pass  27: suminf.    0.23463 (2) obj. -57.7851 iterations 4
Cbc0038I Pass  28: suminf.    1.23950 (4) obj. -57.7851 iterations 4
Cbc0038I Pass  29: suminf.    0.36609 (2) obj. -57.7851 iterations 6
Cbc0038I Pass  30: suminf.    0.36609 (2) obj. -57.7851 iterations 1
Cbc0038I Pass  31: suminf.    1.13888 (4) obj. -57.7851 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -55.1677 to -55.4032 (0.03 seconds)
Cbc0038I Round again with cutoff of -62.4963
Cbc0038I Pass  31: suminf.    1.10129 (4) obj. -62.4963 iterations 3
Cbc0038I Pass  32: suminf.    0.91134 (3) obj. -62.4963 iterations 5
Cbc0038I Pass  33: suminf.    1.39040 (4) obj. -62.4963 iterations 6
Cbc0038I Pass  34: suminf.    0.56263 (3) obj. -62.4963 iterations 3
Cbc0038I Pass  35: suminf.    0.56263 (3) obj. -62.4963 iterations 0
Cbc0038I Pass  36: suminf.    1.64710 (5) obj. -62.4963 iterations 3
Cbc0038I Pass  37: suminf.    0.76522 (5) obj. -62.4963 iterations 14
Cbc0038I Pass  38: suminf.    0.76522 (5) obj. -62.4963 iterations 1
Cbc0038I Pass  39: suminf.    1.20833 (3) obj. -62.4963 iterations 10
Cbc0038I Pass  40: suminf.    0.93508 (3) obj. -62.4963 iterations 1
Cbc0038I Pass  41: suminf.    0.64744 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  42: suminf.    0.57473 (3) obj. -62.4963 iterations 2
Cbc0038I Pass  43: suminf.    0.46058 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  44: suminf.    0.74689 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  45: suminf.    1.41297 (6) obj. -62.4963 iterations 4
Cbc0038I Pass  46: suminf.    0.91623 (5) obj. -62.4963 iterations 2
Cbc0038I Pass  47: suminf.    0.43149 (4) obj. -62.4963 iterations 8
Cbc0038I Pass  48: suminf.    1.14033 (4) obj. -62.4963 iterations 5
Cbc0038I Pass  49: suminf.    0.56777 (2) obj. -62.4963 iterations 3
Cbc0038I Pass  50: suminf.    0.50712 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  51: suminf.    0.97687 (3) obj. -62.4963 iterations 3
Cbc0038I Pass  52: suminf.    0.80312 (2) obj. -62.4963 iterations 7
Cbc0038I Pass  53: suminf.    0.80312 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  54: suminf.    0.90210 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  55: suminf.    0.89324 (2) obj. -62.4963 iterations 1
Cbc0038I Pass  56: suminf.    0.89324 (2) obj. -62.4963 iterations 0
Cbc0038I Pass  57: suminf.    0.72426 (4) obj. -62.4963 iterations 4
Cbc0038I Pass  58: suminf.    0.71710 (4) obj. -62.4963 iterations 1
Cbc0038I Pass  59: suminf.    0.69643 (2) obj. -62.4963 iterations 2
Cbc0038I Pass  60: suminf.    0.64156 (2) obj. -62.4963 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 24 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -55.4032 - took 0.03 seconds
Cbc0012I Integer solution of -55.40325 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 24 columns, reduced to 24 rows 14 columns
Cbc0031I 8 added rows had average density of 15.625
Cbc0013I At root node, 8 cuts changed objective from -81.340987 to -64.177169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 585 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 394 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.40324999999999, took 1640 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 70 times (507 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

