Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 73 (-5) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 5.24373e-06 - average 3.97252e-08, 7 fixed columns
Coin0506I Presolve 119 (-13) rows, 66 (-7) columns and 362 (-40) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Coin0511I After Postsolve, objective 64.939546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Coin0511I After Postsolve, objective 64.939546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.93954639 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 73 columns (72 integer (72 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.211%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.0018
Cbc0038I Solution found of 1.9976
Cbc0038I Relaxing continuous gives -9.10079
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 85 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -9.10079 to -32.3028 (0.07 seconds)
Cbc0038I Round again with cutoff of -35.5666
Cbc0038I Pass   1: suminf.    4.03245 (23) obj. -35.5666 iterations 51
Cbc0038I Pass   2: suminf.    3.42421 (14) obj. -35.5666 iterations 18
Cbc0038I Pass   3: suminf.    2.28431 (7) obj. -35.5666 iterations 15
Cbc0038I Pass   4: suminf.    1.54482 (6) obj. -35.5666 iterations 2
Cbc0038I Pass   5: suminf.    2.59985 (10) obj. -35.5666 iterations 11
Cbc0038I Pass   6: suminf.    1.83482 (7) obj. -35.5666 iterations 10
Cbc0038I Pass   7: suminf.    1.37564 (6) obj. -35.5666 iterations 2
Cbc0038I Pass   8: suminf.    1.07792 (5) obj. -35.5666 iterations 2
Cbc0038I Pass   9: suminf.    2.01800 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  10: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  11: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  12: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  13: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  14: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  15: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  16: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  17: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  18: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  19: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  20: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  21: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  22: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  23: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  24: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  25: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  26: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  27: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  28: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  29: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  30: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -32.3028 to -32.414 (0.13 seconds)
Cbc0038I Round again with cutoff of -41.4412
Cbc0038I Pass  30: suminf.    4.70556 (23) obj. -41.4412 iterations 0
Cbc0038I Pass  31: suminf.    4.21363 (15) obj. -41.4412 iterations 18
Cbc0038I Pass  32: suminf.    3.25076 (8) obj. -41.4412 iterations 20
Cbc0038I Pass  33: suminf.    2.46498 (8) obj. -41.4412 iterations 6
Cbc0038I Pass  34: suminf.    1.78307 (6) obj. -41.4412 iterations 7
Cbc0038I Pass  35: suminf.    1.78507 (6) obj. -41.4412 iterations 1
Cbc0038I Pass  36: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  37: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  38: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  39: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  40: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  41: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  42: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  43: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  44: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  45: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  46: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  47: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  48: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  49: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  50: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  51: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  52: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  53: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  54: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  55: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  56: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  57: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  58: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  59: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -32.414 - took 0.16 seconds
Cbc0012I Integer solution of -32.414 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 132 rows 73 columns, reduced to 85 rows 49 columns
Cbc0012I Integer solution of -33.67226 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 30 added rows had average density of 47.7
Cbc0013I At root node, 30 cuts changed objective from -64.939546 to -56.207527 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16148 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2601 row cuts average 63.7 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 55.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.67226 best solution, best possible -56.207527 (1.26 seconds)
Cbc0012I Integer solution of -35.36622 found by rounding after 10439 iterations and 15 nodes (1.47 seconds)
Cbc0038I Full problem 132 rows 73 columns, reduced to 57 rows 33 columns
Cbc0012I Integer solution of -35.55401 found by RINS after 11246 iterations and 41 nodes (1.66 seconds)
Cbc0001I Search completed - best objective -35.55401000000001, took 12672 iterations and 86 nodes (1.74 seconds)
Cbc0032I Strong branching done 942 times (18368 iterations), fathomed 3 nodes and fixed 29 variables
Cbc0035I Maximum depth 26, 139 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       1.75

