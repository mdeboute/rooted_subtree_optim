Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 101 (-2) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 1.51423e-05 - average 8.31996e-08, 18 fixed columns
Coin0506I Presolve 147 (-35) rows, 82 (-19) columns and 450 (-108) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 1.7221161 - largest nonzero change 0 ( 0%) - largest zero change 2.927125e-05
Clp0000I Optimal - objective value 42.238848
Clp0000I Optimal - objective value 42.238848
Coin0511I After Postsolve, objective 42.238848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.238848
Clp0000I Optimal - objective value 42.238848
Clp0000I Optimal - objective value 42.238848
Coin0511I After Postsolve, objective 42.238848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.2388478 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 7.87578
Cbc0038I Solution found of 1.59855
Cbc0038I Relaxing continuous gives -6.16995
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -6.16995 to -6.90915 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.4422
Cbc0038I Pass   1: suminf.    0.76450 (32) obj. -10.4422 iterations 63
Cbc0038I Pass   2: suminf.    1.69940 (7) obj. -10.4422 iterations 35
Cbc0038I Pass   3: suminf.    1.35492 (6) obj. -10.4422 iterations 3
Cbc0038I Pass   4: suminf.    1.49459 (5) obj. -10.4422 iterations 13
Cbc0038I Pass   5: suminf.    1.60288 (5) obj. -10.4422 iterations 4
Cbc0038I Pass   6: suminf.    1.20058 (4) obj. -10.4422 iterations 2
Cbc0038I Pass   7: suminf.    1.57769 (5) obj. -10.4422 iterations 4
Cbc0038I Pass   8: suminf.    1.52285 (5) obj. -10.4422 iterations 5
Cbc0038I Pass   9: suminf.    1.52477 (6) obj. -10.4422 iterations 13
Cbc0038I Pass  10: suminf.    1.51318 (7) obj. -10.4422 iterations 4
Cbc0038I Pass  11: suminf.    1.11096 (4) obj. -10.4422 iterations 10
Cbc0038I Pass  12: suminf.    1.11096 (4) obj. -10.4422 iterations 0
Cbc0038I Pass  13: suminf.    1.60053 (4) obj. -10.4422 iterations 4
Cbc0038I Pass  14: suminf.    1.06836 (3) obj. -10.4422 iterations 2
Cbc0038I Pass  15: suminf.    2.60763 (8) obj. -10.4422 iterations 23
Cbc0038I Pass  16: suminf.    1.52437 (7) obj. -10.4422 iterations 7
Cbc0038I Pass  17: suminf.    1.13638 (8) obj. -10.4422 iterations 6
Cbc0038I Pass  18: suminf.    0.80403 (4) obj. -10.4422 iterations 10
Cbc0038I Pass  19: suminf.    0.79779 (3) obj. -10.4422 iterations 1
Cbc0038I Pass  20: suminf.    0.85059 (3) obj. -10.4422 iterations 5
Cbc0038I Pass  21: suminf.    0.78884 (3) obj. -10.4422 iterations 1
Cbc0038I Pass  22: suminf.    1.33777 (4) obj. -10.4422 iterations 5
Cbc0038I Pass  23: suminf.    0.61475 (3) obj. -10.4422 iterations 2
Cbc0038I Pass  24: suminf.    1.24138 (3) obj. -11.4063 iterations 3
Cbc0038I Pass  25: suminf.    2.75774 (10) obj. -10.4422 iterations 14
Cbc0038I Pass  26: suminf.    1.84705 (8) obj. -10.4422 iterations 8
Cbc0038I Pass  27: suminf.    1.70830 (5) obj. -10.4422 iterations 8
Cbc0038I Pass  28: suminf.    1.18199 (5) obj. -10.4422 iterations 4
Cbc0038I Pass  29: suminf.    1.36846 (8) obj. -10.4422 iterations 8
Cbc0038I Pass  30: suminf.    1.28799 (8) obj. -10.4422 iterations 1
Cbc0038I Rounding solution of -7.11104 is better than previous of -6.90915

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 105 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -7.11104 to -7.25337 (0.13 seconds)
Cbc0038I Round again with cutoff of -16.8015
Cbc0038I Pass  30: suminf.    1.90247 (32) obj. -16.8015 iterations 0
Cbc0038I Pass  31: suminf.    3.31923 (13) obj. -16.8015 iterations 38
Cbc0038I Pass  32: suminf.    2.14847 (8) obj. -16.8015 iterations 12
Cbc0038I Pass  33: suminf.    2.27354 (7) obj. -16.8015 iterations 13
Cbc0038I Pass  34: suminf.    2.27354 (7) obj. -16.8015 iterations 0
Cbc0038I Pass  35: suminf.    2.53837 (7) obj. -16.8015 iterations 8
Cbc0038I Pass  36: suminf.    2.03785 (6) obj. -16.8015 iterations 4
Cbc0038I Pass  37: suminf.    1.99665 (10) obj. -16.8015 iterations 12
Cbc0038I Pass  38: suminf.    1.93885 (8) obj. -16.8015 iterations 2
Cbc0038I Pass  39: suminf.    2.05999 (7) obj. -16.8015 iterations 17
Cbc0038I Pass  40: suminf.    1.78856 (7) obj. -16.8015 iterations 5
Cbc0038I Pass  41: suminf.    2.62203 (7) obj. -16.8015 iterations 6
Cbc0038I Pass  42: suminf.    2.27354 (7) obj. -16.8015 iterations 8
Cbc0038I Pass  43: suminf.    2.27354 (7) obj. -16.8015 iterations 0
Cbc0038I Pass  44: suminf.    2.53837 (7) obj. -16.8015 iterations 8
Cbc0038I Pass  45: suminf.    2.03785 (6) obj. -16.8015 iterations 4
Cbc0038I Pass  46: suminf.    1.99665 (10) obj. -16.8015 iterations 12
Cbc0038I Pass  47: suminf.    1.93885 (8) obj. -16.8015 iterations 2
Cbc0038I Pass  48: suminf.    2.05999 (7) obj. -16.8015 iterations 17
Cbc0038I Pass  49: suminf.    1.78856 (7) obj. -16.8015 iterations 5
Cbc0038I Pass  50: suminf.    2.62203 (7) obj. -16.8015 iterations 6
Cbc0038I Pass  51: suminf.    2.27354 (7) obj. -16.8015 iterations 8
Cbc0038I Pass  52: suminf.    2.27354 (7) obj. -16.8015 iterations 0
Cbc0038I Pass  53: suminf.    2.53837 (7) obj. -16.8015 iterations 7
Cbc0038I Pass  54: suminf.    2.03785 (6) obj. -16.8015 iterations 4
Cbc0038I Pass  55: suminf.    1.99665 (10) obj. -16.8015 iterations 11
Cbc0038I Pass  56: suminf.    1.93885 (8) obj. -16.8015 iterations 2
Cbc0038I Pass  57: suminf.    2.05999 (7) obj. -16.8015 iterations 17
Cbc0038I Pass  58: suminf.    1.78856 (7) obj. -16.8015 iterations 5
Cbc0038I Pass  59: suminf.    2.62203 (7) obj. -16.8015 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 93 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -7.25337 - took 0.16 seconds
Cbc0012I Integer solution of -7.25337 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 91 rows 52 columns
Cbc0031I 28 added rows had average density of 76.75
Cbc0013I At root node, 28 cuts changed objective from -42.238848 to -34.350975 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14022 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1528 row cuts average 100.9 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 100.2 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.25337 best solution, best possible -34.350975 (1.44 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 66 rows 40 columns
Cbc0012I Integer solution of -8.62387 found by RINS after 9824 iterations and 43 nodes (1.90 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 29 rows 21 columns
Cbc0012I Integer solution of -9.08894 found by RINS after 11593 iterations and 94 nodes (2.02 seconds)
Cbc0001I Search completed - best objective -9.088940000000001, took 12406 iterations and 114 nodes (2.11 seconds)
Cbc0032I Strong branching done 1224 times (20345 iterations), fathomed 4 nodes and fixed 87 variables
Cbc0035I Maximum depth 34, 404 variables fixed on reduced cost
Total time (CPU seconds):       2.03   (Wallclock seconds):       2.13

