Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-36) rows, 64 (-14) columns and 359 (-94) elements
Clp1000I sum of infeasibilities 1.27981e-05 - average 1.07547e-07, 58 fixed columns
Coin0506I Presolve 6 (-113) rows, 6 (-58) columns and 17 (-342) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 21722.765
Clp0000I Optimal - objective value 21722.765
Coin0511I After Postsolve, objective 21722.765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.37908163 - largest nonzero change 2.1909301e-05 ( 0.0017128079%) - largest zero change 2.8707681e-05
Clp0000I Optimal - objective value 21722.765
Clp0000I Optimal - objective value 21722.765
Clp0000I Optimal - objective value 21722.765
Coin0511I After Postsolve, objective 21722.765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21722.76516 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 64 columns (63 integer (63 of which binary)) and 361 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.490%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.338308
Cbc0038I Pass   1: suminf.    0.07692 (2) obj. -21607 iterations 12
Cbc0038I Solution found of -15233.9
Cbc0038I Relaxing continuous gives -15233.9
Cbc0038I Rounding solution of -18970.7 is better than previous of -15233.9

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 64 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -19245.9
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.07692 (2) obj. -21607 iterations 0
Cbc0038I Pass   3: suminf.    0.09519 (1) obj. -19245.9 iterations 9
Cbc0038I Pass   4: suminf.    0.09519 (1) obj. -19245.9 iterations 0
Cbc0038I Pass   5: suminf.    1.26886 (4) obj. -19245.9 iterations 23
Cbc0038I Pass   6: suminf.    0.61634 (2) obj. -19245.9 iterations 5
Cbc0038I Solution found of -20931.3
Cbc0038I Relaxing continuous gives -20931.3
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 64 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -21089.6
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.07692 (2) obj. -21607 iterations 0
Cbc0038I Pass   8: suminf.    0.26712 (1) obj. -21089.6 iterations 9
Cbc0038I Pass   9: suminf.    1.16063 (3) obj. -21089.6 iterations 13
Cbc0038I Pass  10: suminf.    0.67786 (4) obj. -21464.6 iterations 9
Cbc0038I Pass  11: suminf.    0.05475 (1) obj. -21089.6 iterations 11
Cbc0038I Pass  12: suminf.    0.05475 (1) obj. -21089.6 iterations 4
Cbc0038I Pass  13: suminf.    0.05475 (1) obj. -21089.6 iterations 4
Cbc0038I Pass  14: suminf.    0.66120 (3) obj. -21089.6 iterations 19
Cbc0038I Pass  15: suminf.    0.66120 (3) obj. -21089.6 iterations 7
Cbc0038I Pass  16: suminf.    0.26712 (1) obj. -21089.6 iterations 10
Cbc0038I Pass  17: suminf.    0.07692 (2) obj. -21607 iterations 7
Cbc0038I Pass  18: suminf.    0.24621 (2) obj. -21089.6 iterations 9
Cbc0038I Pass  19: suminf.    0.16122 (3) obj. -21089.6 iterations 7
Cbc0038I Pass  20: suminf.    0.38235 (5) obj. -21089.6 iterations 13
Cbc0038I Pass  21: suminf.    0.38080 (4) obj. -21089.6 iterations 9
Cbc0038I Pass  22: suminf.    0.97729 (3) obj. -21089.6 iterations 8
Cbc0038I Pass  23: suminf.    0.74674 (3) obj. -21335.5 iterations 4
Cbc0038I Pass  24: suminf.    0.32979 (2) obj. -21089.6 iterations 11
Cbc0038I Pass  25: suminf.    0.07692 (2) obj. -21607 iterations 10
Cbc0038I Pass  26: suminf.    0.26712 (1) obj. -21089.6 iterations 6
Cbc0038I Pass  27: suminf.    1.10499 (3) obj. -21089.6 iterations 7
Cbc0038I Pass  28: suminf.    1.10499 (3) obj. -21089.6 iterations 3
Cbc0038I Pass  29: suminf.    0.66120 (3) obj. -21089.6 iterations 12
Cbc0038I Pass  30: suminf.    0.66120 (3) obj. -21089.6 iterations 2
Cbc0038I Pass  31: suminf.    0.66120 (3) obj. -21089.6 iterations 2
Cbc0038I Pass  32: suminf.    0.66120 (3) obj. -21089.6 iterations 2
Cbc0038I Pass  33: suminf.    0.42889 (6) obj. -21089.6 iterations 8
Cbc0038I Pass  34: suminf.    0.38080 (4) obj. -21089.6 iterations 9
Cbc0038I Pass  35: suminf.    0.97729 (3) obj. -21089.6 iterations 9
Cbc0038I Pass  36: suminf.    0.74674 (3) obj. -21335.5 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 64 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -20931.3 - took 0.01 seconds
Cbc0012I Integer solution of -20931.33 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 118 rows 64 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 5.5
Cbc0013I At root node, 4 cuts changed objective from -21722.765 to -21217.398 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.2 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20931.33, took 11 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

