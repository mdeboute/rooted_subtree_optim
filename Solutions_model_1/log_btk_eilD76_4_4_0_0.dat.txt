Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 3.41259e-05 - average 2.4551e-07, 8 fixed columns
Coin0506I Presolve 123 (-16) rows, 68 (-8) columns and 374 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.5446472 - largest nonzero change 0 ( 0%) - largest zero change 1.836629e-05
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Coin0511I After Postsolve, objective 54.342905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Clp0000I Optimal - objective value 54.342905
Coin0511I After Postsolve, objective 54.342905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34290506 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 10.3314
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.09622 iterations 61
Cbc0038I Solution found of 3.09622
Cbc0038I Relaxing continuous gives 3.09622
Cbc0038I Rounding solution of 0.15896 is better than previous of 3.09622

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 0.15896 to -30.3794 (0.06 seconds)
Cbc0038I Round again with cutoff of -32.7758
Cbc0038I Pass   2: suminf.    5.03689 (21) obj. -32.7758 iterations 26
Cbc0038I Pass   3: suminf.    2.50590 (9) obj. -32.7758 iterations 27
Cbc0038I Pass   4: suminf.    1.80962 (7) obj. -32.7758 iterations 9
Cbc0038I Pass   5: suminf.    2.10588 (7) obj. -32.7758 iterations 7
Cbc0038I Pass   6: suminf.    1.65351 (7) obj. -32.7758 iterations 8
Cbc0038I Pass   7: suminf.    1.65351 (7) obj. -32.7758 iterations 2
Cbc0038I Pass   8: suminf.    2.92959 (8) obj. -32.7758 iterations 11
Cbc0038I Pass   9: suminf.    2.81349 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  10: suminf.    2.81349 (8) obj. -32.7758 iterations 0
Cbc0038I Pass  11: suminf.    2.04027 (8) obj. -32.7758 iterations 4
Cbc0038I Pass  12: suminf.    2.01771 (7) obj. -32.7758 iterations 1
Cbc0038I Pass  13: suminf.    2.38369 (9) obj. -32.7758 iterations 8
Cbc0038I Pass  14: suminf.    2.35295 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  15: suminf.    2.58400 (8) obj. -32.7758 iterations 5
Cbc0038I Pass  16: suminf.    2.58987 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  17: suminf.    2.75301 (8) obj. -32.7758 iterations 7
Cbc0038I Pass  18: suminf.    3.92856 (11) obj. -32.7758 iterations 18
Cbc0038I Pass  19: suminf.    3.04069 (10) obj. -32.7758 iterations 12
Cbc0038I Pass  20: suminf.    2.38369 (9) obj. -32.7758 iterations 12
Cbc0038I Pass  21: suminf.    2.35295 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  22: suminf.    2.58400 (8) obj. -32.7758 iterations 5
Cbc0038I Pass  23: suminf.    2.58987 (8) obj. -32.7758 iterations 1
Cbc0038I Pass  24: suminf.    2.75301 (8) obj. -32.7758 iterations 7
Cbc0038I Pass  25: suminf.    2.05083 (12) obj. -32.7758 iterations 20
Cbc0038I Pass  26: suminf.    1.58898 (6) obj. -32.7758 iterations 13
Cbc0038I Pass  27: suminf.    1.80759 (6) obj. -32.7758 iterations 5
Cbc0038I Pass  28: suminf.    1.58696 (6) obj. -32.7758 iterations 3
Cbc0038I Pass  29: suminf.    1.88356 (6) obj. -32.7758 iterations 4
Cbc0038I Pass  30: suminf.    1.52524 (5) obj. -32.7758 iterations 3
Cbc0038I Pass  31: suminf.    1.52524 (5) obj. -32.7758 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 99 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -30.3794 - took 0.10 seconds
Cbc0012I Integer solution of -30.37938 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 95 rows 54 columns
Cbc0031I 33 added rows had average density of 32.909091
Cbc0013I At root node, 33 cuts changed objective from -54.342905 to -46.328021 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18381 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2320 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.37938 best solution, best possible -46.328021 (1.24 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 32 rows 23 columns
Cbc0016I Integer solution of -30.80046 found by strong branching after 11815 iterations and 68 nodes (1.52 seconds)
Cbc0001I Search completed - best objective -30.80046, took 11855 iterations and 70 nodes (1.52 seconds)
Cbc0032I Strong branching done 784 times (15954 iterations), fathomed 8 nodes and fixed 54 variables
Cbc0035I Maximum depth 19, 153 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       1.53

