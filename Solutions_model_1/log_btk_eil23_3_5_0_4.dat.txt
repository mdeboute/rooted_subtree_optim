Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 21 (-28) rows, 13 (-12) columns and 52 (-83) elements
Clp0000I Optimal - objective value 167.08564
Coin0511I After Postsolve, objective 167.08564, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.0856357 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 13 columns (12 integer (12 of which binary)) and 52 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.856678
Cbc0038I Pass   1: suminf.    0.25707 (1) obj. -136.952 iterations 4
Cbc0038I Solution found of -40
Cbc0038I Relaxing continuous gives -40
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 13 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -52.7959
Cbc0038I Pass   2: suminf.    0.25707 (1) obj. -136.952 iterations 0
Cbc0038I Pass   3: suminf.    0.09805 (1) obj. -52.7959 iterations 1
Cbc0038I Pass   4: suminf.    0.28962 (1) obj. -52.7959 iterations 2
Cbc0038I Pass   5: suminf.    0.25707 (1) obj. -111.952 iterations 1
Cbc0038I Pass   6: suminf.    0.28962 (1) obj. -52.7959 iterations 1
Cbc0038I Pass   7: suminf.    0.28962 (1) obj. -52.7959 iterations 4
Cbc0038I Pass   8: suminf.    0.28962 (1) obj. -52.7959 iterations 2
Cbc0038I Pass   9: suminf.    0.20220 (1) obj. -119.114 iterations 1
Cbc0038I Pass  10: suminf.    0.23192 (2) obj. -52.7959 iterations 3
Cbc0038I Pass  11: suminf.    0.28962 (1) obj. -52.7959 iterations 3
Cbc0038I Pass  12: suminf.    0.22049 (1) obj. -116.726 iterations 1
Cbc0038I Pass  13: suminf.    0.00610 (1) obj. -77.7043 iterations 8
Cbc0038I Pass  14: suminf.    0.00610 (1) obj. -77.7043 iterations 2
Cbc0038I Pass  15: suminf.    0.19697 (1) obj. -52.7959 iterations 1
Cbc0038I Pass  16: suminf.    0.03049 (1) obj. -99.5213 iterations 5
Cbc0038I Pass  17: suminf.    0.38854 (1) obj. -52.7959 iterations 1
Cbc0038I Pass  18: suminf.    0.03049 (1) obj. -99.5213 iterations 1
Cbc0038I Pass  19: suminf.    0.03049 (1) obj. -99.5213 iterations 0
Cbc0038I Pass  20: suminf.    0.03049 (1) obj. -99.5213 iterations 0
Cbc0038I Pass  21: suminf.    0.04878 (1) obj. -97.1341 iterations 2
Cbc0038I Pass  22: suminf.    0.04878 (1) obj. -97.1341 iterations 1
Cbc0038I Pass  23: suminf.    0.38854 (1) obj. -52.7959 iterations 1
Cbc0038I Pass  24: suminf.    1.37247 (5) obj. -52.7959 iterations 4
Cbc0038I Pass  25: suminf.    0.44984 (1) obj. -52.7959 iterations 4
Cbc0038I Pass  26: suminf.    0.34244 (1) obj. -66.8117 iterations 1
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -86.5 iterations 14
Cbc0038I Solution found of -86.5
Cbc0038I Relaxing continuous gives -86.5
Cbc0038I Rounding solution of -90.5 is better than previous of -86.5

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 13 columns, reduced to 17 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -105.492
Cbc0038I Pass  28: suminf.    0.25707 (1) obj. -136.952 iterations 0
Cbc0038I Pass  29: suminf.    0.49815 (1) obj. -105.492 iterations 1
Cbc0038I Pass  30: suminf.    0.20220 (1) obj. -119.114 iterations 4
Cbc0038I Pass  31: suminf.    0.20220 (1) obj. -119.114 iterations 2
Cbc0038I Pass  32: suminf.    0.30657 (1) obj. -105.492 iterations 1
Cbc0038I Pass  33: suminf.    0.20220 (1) obj. -119.114 iterations 2
Cbc0038I Pass  34: suminf.    0.61402 (3) obj. -105.492 iterations 6
Cbc0038I Pass  35: suminf.    0.38056 (2) obj. -105.492 iterations 2
Cbc0038I Pass  36: suminf.    0.18130 (2) obj. -105.492 iterations 3
Cbc0038I Pass  37: suminf.    0.18130 (2) obj. -105.492 iterations 0
Cbc0038I Pass  38: suminf.    0.21945 (2) obj. -105.492 iterations 1
Cbc0038I Pass  39: suminf.    0.21945 (2) obj. -105.492 iterations 0
Cbc0038I Pass  40: suminf.    0.21945 (2) obj. -105.492 iterations 1
Cbc0038I Pass  41: suminf.    0.21945 (2) obj. -105.492 iterations 1
Cbc0038I Pass  42: suminf.    0.18130 (2) obj. -105.492 iterations 2
Cbc0038I Pass  43: suminf.    0.18130 (2) obj. -105.492 iterations 0
Cbc0038I Pass  44: suminf.    0.21945 (2) obj. -105.492 iterations 1
Cbc0038I Pass  45: suminf.    1.11841 (3) obj. -105.492 iterations 9
Cbc0038I Pass  46: suminf.    0.43449 (2) obj. -105.492 iterations 1
Cbc0038I Pass  47: suminf.    0.20696 (1) obj. -105.492 iterations 2
Cbc0038I Pass  48: suminf.    0.19122 (1) obj. -107.546 iterations 1
Cbc0038I Pass  49: suminf.    0.30414 (2) obj. -105.492 iterations 2
Cbc0038I Pass  50: suminf.    0.37951 (2) obj. -105.492 iterations 1
Cbc0038I Pass  51: suminf.    0.37951 (2) obj. -105.492 iterations 0
Cbc0038I Pass  52: suminf.    0.30414 (2) obj. -105.492 iterations 2
Cbc0038I Pass  53: suminf.    0.30414 (2) obj. -105.492 iterations 0
Cbc0038I Pass  54: suminf.    1.16153 (3) obj. -105.492 iterations 2
Cbc0038I Pass  55: suminf.    0.50647 (2) obj. -105.492 iterations 1
Cbc0038I Pass  56: suminf.    0.43449 (2) obj. -105.492 iterations 3
Cbc0038I Pass  57: suminf.    0.43449 (2) obj. -105.492 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -90.5 - took 0.02 seconds
Cbc0012I Integer solution of -90.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 13 columns, reduced to 9 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -163.46032 to -71.5 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -90.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

