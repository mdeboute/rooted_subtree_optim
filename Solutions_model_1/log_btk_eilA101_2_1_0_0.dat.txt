Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 99 (-4) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 0.000131744 - average 7.15998e-07, 20 fixed columns
Coin0506I Presolve 142 (-42) rows, 77 (-22) columns and 431 (-127) elements
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 2.5358673 - largest nonzero change 0 ( 0%) - largest zero change 1.9498817e-05
Clp0000I Optimal - objective value 45.720704
Clp0000I Optimal - objective value 45.720704
Coin0511I After Postsolve, objective 45.720704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.720704
Clp0000I Optimal - objective value 45.720704
Clp0000I Optimal - objective value 45.720704
Coin0511I After Postsolve, objective 45.720704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.72070429 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 99 columns (98 integer (98 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.924%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 12.2192
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.06544 iterations 73
Cbc0038I Solution found of 7.06544
Cbc0038I Relaxing continuous gives 7.06544
Cbc0038I Rounding solution of -11.1419 is better than previous of 7.06544

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 99 columns, reduced to 84 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -11.1419 to -17.816 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.6066
Cbc0038I Pass   2: suminf.    2.59800 (11) obj. -20.6066 iterations 17
Cbc0038I Pass   3: suminf.    2.59800 (11) obj. -20.6066 iterations 0
Cbc0038I Pass   4: suminf.    2.12586 (8) obj. -20.6066 iterations 14
Cbc0038I Pass   5: suminf.    2.12586 (8) obj. -20.6066 iterations 0
Cbc0038I Pass   6: suminf.    3.00521 (10) obj. -20.6066 iterations 7
Cbc0038I Pass   7: suminf.    2.53113 (9) obj. -20.6066 iterations 11
Cbc0038I Pass   8: suminf.    2.72111 (10) obj. -20.6066 iterations 9
Cbc0038I Pass   9: suminf.    7.73341 (21) obj. -20.6066 iterations 31
Cbc0038I Pass  10: suminf.    3.90347 (11) obj. -20.6066 iterations 29
Cbc0038I Pass  11: suminf.    3.65230 (10) obj. -20.6066 iterations 8
Cbc0038I Pass  12: suminf.    2.94805 (9) obj. -20.6066 iterations 14
Cbc0038I Pass  13: suminf.    2.94805 (9) obj. -20.6066 iterations 0
Cbc0038I Pass  14: suminf.    3.70656 (9) obj. -20.6066 iterations 18
Cbc0038I Pass  15: suminf.    3.64160 (10) obj. -20.6066 iterations 2
Cbc0038I Pass  16: suminf.    3.64160 (10) obj. -20.6066 iterations 0
Cbc0038I Pass  17: suminf.    2.44244 (9) obj. -20.6066 iterations 15
Cbc0038I Pass  18: suminf.    2.31589 (8) obj. -20.6066 iterations 8
Cbc0038I Pass  19: suminf.    3.35529 (8) obj. -20.6066 iterations 10
Cbc0038I Pass  20: suminf.    3.27241 (8) obj. -20.6066 iterations 5
Cbc0038I Pass  21: suminf.    2.80706 (8) obj. -20.6066 iterations 4
Cbc0038I Pass  22: suminf.    2.80706 (8) obj. -20.6066 iterations 0
Cbc0038I Pass  23: suminf.    3.30970 (8) obj. -20.6066 iterations 4
Cbc0038I Pass  24: suminf.    2.87404 (9) obj. -20.6066 iterations 7
Cbc0038I Pass  25: suminf.    2.57242 (10) obj. -20.6066 iterations 2
Cbc0038I Pass  26: suminf.    3.19522 (9) obj. -20.6066 iterations 9
Cbc0038I Pass  27: suminf.    2.96003 (10) obj. -20.6066 iterations 5
Cbc0038I Pass  28: suminf.    2.96431 (10) obj. -20.6066 iterations 1
Cbc0038I Pass  29: suminf.    3.84828 (10) obj. -20.6066 iterations 13
Cbc0038I Pass  30: suminf.    2.63194 (11) obj. -20.6066 iterations 6
Cbc0038I Pass  31: suminf.    2.59029 (9) obj. -20.6066 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 99 columns, reduced to 107 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -17.816 to -18.8907 (0.16 seconds)
Cbc0038I Round again with cutoff of -25.6294
Cbc0038I Pass  31: suminf.    3.51616 (14) obj. -25.6294 iterations 3
Cbc0038I Pass  32: suminf.    3.51616 (14) obj. -25.6294 iterations 0
Cbc0038I Pass  33: suminf.    4.13376 (11) obj. -25.6294 iterations 14
Cbc0038I Pass  34: suminf.    3.20794 (8) obj. -25.6294 iterations 5
Cbc0038I Pass  35: suminf.    3.32852 (8) obj. -25.6294 iterations 8
Cbc0038I Pass  36: suminf.    3.29128 (8) obj. -25.6294 iterations 7
Cbc0038I Pass  37: suminf.    3.35208 (8) obj. -25.6294 iterations 7
Cbc0038I Pass  38: suminf.    6.83631 (22) obj. -25.6294 iterations 39
Cbc0038I Pass  39: suminf.    2.25913 (8) obj. -25.6294 iterations 35
Cbc0038I Pass  40: suminf.    2.82294 (9) obj. -25.6294 iterations 4
Cbc0038I Pass  41: suminf.    2.26412 (9) obj. -25.6294 iterations 4
Cbc0038I Pass  42: suminf.    3.11382 (9) obj. -25.6294 iterations 11
Cbc0038I Pass  43: suminf.    2.71605 (8) obj. -25.6294 iterations 8
Cbc0038I Pass  44: suminf.    2.71605 (8) obj. -25.6294 iterations 0
Cbc0038I Pass  45: suminf.    3.14406 (8) obj. -25.6294 iterations 4
Cbc0038I Pass  46: suminf.    2.72962 (11) obj. -25.6294 iterations 9
Cbc0038I Pass  47: suminf.    3.44163 (10) obj. -25.6294 iterations 8
Cbc0038I Pass  48: suminf.    3.43146 (9) obj. -25.6294 iterations 1
Cbc0038I Pass  49: suminf.    3.45490 (9) obj. -25.6294 iterations 9
Cbc0038I Pass  50: suminf.    3.45490 (9) obj. -25.6294 iterations 2
Cbc0038I Pass  51: suminf.    2.81754 (7) obj. -25.6294 iterations 5
Cbc0038I Pass  52: suminf.    2.73980 (7) obj. -25.6294 iterations 2
Cbc0038I Pass  53: suminf.    2.71444 (7) obj. -25.6294 iterations 4
Cbc0038I Pass  54: suminf.    2.70518 (7) obj. -25.6294 iterations 2
Cbc0038I Pass  55: suminf.    2.99884 (7) obj. -25.6294 iterations 4
Cbc0038I Pass  56: suminf.    2.91936 (7) obj. -25.6294 iterations 2
Cbc0038I Pass  57: suminf.    6.12217 (17) obj. -25.6294 iterations 21
Cbc0038I Pass  58: suminf.    3.18240 (11) obj. -25.6294 iterations 17
Cbc0038I Pass  59: suminf.    2.98785 (10) obj. -25.6294 iterations 10
Cbc0038I Pass  60: suminf.    2.86032 (11) obj. -25.6294 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 99 columns, reduced to 106 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -18.8907 - took 0.18 seconds
Cbc0012I Integer solution of -18.890671 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 184 rows 99 columns, reduced to 85 rows 49 columns
Cbc0031I 26 added rows had average density of 70.076923
Cbc0013I At root node, 26 cuts changed objective from -45.720704 to -35.167619 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15961 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2263 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 98.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -18.890671 best solution, best possible -35.167619 (1.35 seconds)
Cbc0012I Integer solution of -19.217021 found by rounding after 8383 iterations and 24 nodes (1.54 seconds)
Cbc0001I Search completed - best objective -19.217021, took 8933 iterations and 36 nodes (1.55 seconds)
Cbc0032I Strong branching done 522 times (13761 iterations), fathomed 3 nodes and fixed 22 variables
Cbc0035I Maximum depth 14, 114 variables fixed on reduced cost
Total time (CPU seconds):       1.50   (Wallclock seconds):       1.57

