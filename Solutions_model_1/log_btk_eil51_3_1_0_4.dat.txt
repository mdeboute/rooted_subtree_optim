Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 39 (-14) columns and 210 (-93) elements
Clp1000I sum of infeasibilities 8.1534e-06 - average 1.18165e-07, 21 fixed columns
Coin0506I Presolve 29 (-40) rows, 17 (-22) columns and 86 (-124) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Coin0511I After Postsolve, objective 140.76289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.40293219 - largest nonzero change 0 ( 0%) - largest zero change 2.5331995e-05
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Clp0000I Optimal - objective value 140.76289
Coin0511I After Postsolve, objective 140.76289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 140.762886 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 69 rows, 39 columns (38 integer (38 of which binary)) and 210 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.64424
Cbc0038I Pass   1: suminf.    1.06597 (3) obj. -85.5098 iterations 14
Cbc0038I Pass   2: suminf.    1.06597 (3) obj. -85.5098 iterations 0
Cbc0038I Solution found of -50.5755
Cbc0038I Relaxing continuous gives -50.5755
Cbc0038I Rounding solution of -51.0369 is better than previous of -50.5755

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 39 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -51.0369 to -114.948 (0.02 seconds)
Cbc0038I Round again with cutoff of -117.53
Cbc0038I Pass   3: suminf.    1.63650 (10) obj. -117.53 iterations 5
Cbc0038I Pass   4: suminf.    0.47616 (4) obj. -117.53 iterations 10
Cbc0038I Pass   5: suminf.    0.12720 (3) obj. -117.53 iterations 6
Cbc0038I Pass   6: suminf.    0.98964 (9) obj. -117.53 iterations 15
Cbc0038I Pass   7: suminf.    3.12291 (13) obj. -117.53 iterations 12
Cbc0038I Pass   8: suminf.    2.63844 (9) obj. -117.53 iterations 2
Cbc0038I Pass   9: suminf.    1.96790 (9) obj. -117.53 iterations 11
Cbc0038I Pass  10: suminf.    1.95053 (8) obj. -117.53 iterations 1
Cbc0038I Pass  11: suminf.    2.21330 (12) obj. -117.53 iterations 5
Cbc0038I Pass  12: suminf.    1.82584 (11) obj. -117.53 iterations 2
Cbc0038I Pass  13: suminf.    1.42426 (8) obj. -117.53 iterations 14
Cbc0038I Pass  14: suminf.    0.93786 (8) obj. -117.53 iterations 5
Cbc0038I Pass  15: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  16: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  17: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  18: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I Pass  19: suminf.    3.16907 (10) obj. -117.53 iterations 1
Cbc0038I Pass  20: suminf.    3.07923 (8) obj. -117.53 iterations 6
Cbc0038I Pass  21: suminf.    0.93786 (8) obj. -117.53 iterations 7
Cbc0038I Pass  22: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  23: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  24: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  25: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I Pass  26: suminf.    3.16907 (10) obj. -117.53 iterations 1
Cbc0038I Pass  27: suminf.    3.07923 (8) obj. -117.53 iterations 6
Cbc0038I Pass  28: suminf.    0.93786 (8) obj. -117.53 iterations 7
Cbc0038I Pass  29: suminf.    1.80831 (9) obj. -117.53 iterations 11
Cbc0038I Pass  30: suminf.    1.26022 (5) obj. -117.53 iterations 4
Cbc0038I Pass  31: suminf.    2.75391 (10) obj. -117.53 iterations 8
Cbc0038I Pass  32: suminf.    3.43171 (11) obj. -117.53 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 39 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -114.948 - took 0.02 seconds
Cbc0012I Integer solution of -114.94825 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 69 rows 39 columns, reduced to 29 rows 17 columns
Cbc0031I 5 added rows had average density of 25
Cbc0013I At root node, 5 cuts changed objective from -140.76289 to -125.37825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 570 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 323 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -114.94825, took 1174 iterations and 8 nodes (0.15 seconds)
Cbc0032I Strong branching done 96 times (542 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

