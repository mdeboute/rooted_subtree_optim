Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 98 (-5) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 1.6943e-05 - average 9.30934e-08, 15 fixed columns
Coin0506I Presolve 150 (-32) rows, 82 (-16) columns and 456 (-96) elements
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 1.8583412 - largest nonzero change 0 ( 0%) - largest zero change 2.5857661e-05
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Coin0511I After Postsolve, objective 61.481016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Clp0000I Optimal - objective value 61.481016
Coin0511I After Postsolve, objective 61.481016, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.48101558 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 98 columns (97 integer (97 of which binary)) and 565 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.031%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.35615
Cbc0038I Solution found of 5.87695
Cbc0038I Relaxing continuous gives -3.32142
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.32142 to -28.7375 (0.06 seconds)
Cbc0038I Round again with cutoff of -31.9585
Cbc0038I Pass   1: suminf.    2.77290 (23) obj. -31.9585 iterations 72
Cbc0038I Pass   2: suminf.    2.08618 (15) obj. -31.9585 iterations 15
Cbc0038I Pass   3: suminf.    1.73128 (6) obj. -31.9585 iterations 28
Cbc0038I Pass   4: suminf.    1.04861 (7) obj. -31.9585 iterations 3
Cbc0038I Pass   5: suminf.    1.40351 (5) obj. -31.9585 iterations 18
Cbc0038I Pass   6: suminf.    1.40351 (5) obj. -31.9585 iterations 0
Cbc0038I Pass   7: suminf.    0.96979 (3) obj. -31.9585 iterations 10
Cbc0038I Pass   8: suminf.    0.94730 (3) obj. -31.9585 iterations 2
Cbc0038I Pass   9: suminf.    1.19746 (3) obj. -31.9585 iterations 8
Cbc0038I Pass  10: suminf.    4.77395 (13) obj. -31.9585 iterations 21
Cbc0038I Pass  11: suminf.    1.79659 (6) obj. -31.9585 iterations 27
Cbc0038I Pass  12: suminf.    1.65390 (5) obj. -31.9585 iterations 12
Cbc0038I Pass  13: suminf.    1.29434 (4) obj. -31.9585 iterations 2
Cbc0038I Pass  14: suminf.    1.21255 (5) obj. -31.9585 iterations 5
Cbc0038I Pass  15: suminf.    1.09001 (5) obj. -31.9585 iterations 1
Cbc0038I Pass  16: suminf.    3.83535 (10) obj. -31.9585 iterations 31
Cbc0038I Pass  17: suminf.    1.57966 (8) obj. -31.9585 iterations 19
Cbc0038I Pass  18: suminf.    1.62187 (5) obj. -31.9585 iterations 17
Cbc0038I Pass  19: suminf.    1.08422 (5) obj. -31.9585 iterations 7
Cbc0038I Pass  20: suminf.    1.09520 (6) obj. -31.9585 iterations 12
Cbc0038I Pass  21: suminf.    0.99303 (5) obj. -31.9585 iterations 3
Cbc0038I Pass  22: suminf.    1.71137 (5) obj. -31.9585 iterations 11
Cbc0038I Pass  23: suminf.    1.33751 (6) obj. -31.9585 iterations 5
Cbc0038I Pass  24: suminf.    1.01480 (5) obj. -31.9585 iterations 5
Cbc0038I Pass  25: suminf.    1.01324 (5) obj. -31.9585 iterations 4
Cbc0038I Pass  26: suminf.    1.38948 (4) obj. -31.9585 iterations 8
Cbc0038I Pass  27: suminf.    1.25881 (3) obj. -31.9585 iterations 3
Cbc0038I Pass  28: suminf.    1.08518 (3) obj. -31.9585 iterations 4
Cbc0038I Pass  29: suminf.    3.22695 (10) obj. -31.9585 iterations 19
Cbc0038I Pass  30: suminf.    2.50734 (8) obj. -31.9585 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 112 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -28.7375 to -31.5905 (0.15 seconds)
Cbc0038I Round again with cutoff of -37.7562
Cbc0038I Pass  30: suminf.    3.13183 (23) obj. -37.7562 iterations 0
Cbc0038I Pass  31: suminf.    2.64448 (16) obj. -37.7562 iterations 6
Cbc0038I Pass  32: suminf.    2.01965 (7) obj. -37.7562 iterations 32
Cbc0038I Pass  33: suminf.    1.92939 (9) obj. -37.7562 iterations 10
Cbc0038I Pass  34: suminf.    2.79556 (8) obj. -37.7562 iterations 13
Cbc0038I Pass  35: suminf.    1.31693 (4) obj. -37.7562 iterations 12
Cbc0038I Pass  36: suminf.    1.31693 (4) obj. -37.7562 iterations 0
Cbc0038I Pass  37: suminf.    1.69935 (4) obj. -37.7562 iterations 7
Cbc0038I Pass  38: suminf.    1.37190 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  39: suminf.    1.82703 (6) obj. -37.7562 iterations 21
Cbc0038I Pass  40: suminf.    1.47284 (6) obj. -37.7562 iterations 10
Cbc0038I Pass  41: suminf.    1.46434 (6) obj. -37.7562 iterations 1
Cbc0038I Pass  42: suminf.    1.19528 (5) obj. -37.7562 iterations 15
Cbc0038I Pass  43: suminf.    1.19528 (5) obj. -37.7562 iterations 0
Cbc0038I Pass  44: suminf.    1.89500 (5) obj. -37.7562 iterations 9
Cbc0038I Pass  45: suminf.    1.32988 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  46: suminf.    1.26291 (6) obj. -37.7562 iterations 3
Cbc0038I Pass  47: suminf.    2.31322 (8) obj. -37.7562 iterations 20
Cbc0038I Pass  48: suminf.    1.99150 (7) obj. -37.7562 iterations 7
Cbc0038I Pass  49: suminf.    1.87733 (6) obj. -37.7562 iterations 10
Cbc0038I Pass  50: suminf.    1.47197 (4) obj. -37.7562 iterations 6
Cbc0038I Pass  51: suminf.    1.40657 (5) obj. -37.7562 iterations 7
Cbc0038I Pass  52: suminf.    1.33480 (5) obj. -37.7562 iterations 3
Cbc0038I Pass  53: suminf.    1.69167 (5) obj. -37.7562 iterations 9
Cbc0038I Pass  54: suminf.    1.37190 (4) obj. -37.7562 iterations 2
Cbc0038I Pass  55: suminf.    1.31693 (4) obj. -37.7562 iterations 6
Cbc0038I Pass  56: suminf.    1.69935 (4) obj. -37.7562 iterations 7
Cbc0038I Pass  57: suminf.    3.68407 (9) obj. -37.7562 iterations 19
Cbc0038I Pass  58: suminf.    2.16914 (8) obj. -37.7562 iterations 14
Cbc0038I Pass  59: suminf.    2.11780 (5) obj. -37.7562 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 98 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -31.5905 - took 0.18 seconds
Cbc0012I Integer solution of -31.59048 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 182 rows 98 columns, reduced to 83 rows 47 columns
Cbc0031I 22 added rows had average density of 68.318182
Cbc0013I At root node, 22 cuts changed objective from -60.946955 to -54.401277 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13609 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1887 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.59048 best solution, best possible -54.401277 (1.28 seconds)
Cbc0038I Full problem 182 rows 98 columns, reduced to 67 rows 39 columns
Cbc0038I Full problem 182 rows 98 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -31.59048, took 12035 iterations and 116 nodes (1.71 seconds)
Cbc0032I Strong branching done 1232 times (20993 iterations), fathomed 7 nodes and fixed 43 variables
Cbc0035I Maximum depth 31, 354 variables fixed on reduced cost
Total time (CPU seconds):       1.64   (Wallclock seconds):       1.72

