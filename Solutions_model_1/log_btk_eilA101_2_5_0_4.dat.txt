Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-66) rows, 78 (-25) columns and 427 (-176) elements
Clp1000I sum of infeasibilities 0 - average 0, 71 fixed columns
Coin0506I Presolve 5 (-134) rows, 6 (-72) columns and 18 (-409) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 25987.351
Clp0000I Optimal - objective value 25987.351
Coin0511I After Postsolve, objective 25987.351, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.5600747 - largest nonzero change 2.2907883e-05 ( 0.0022907883%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 25987.351
Clp0000I Optimal - objective value 25987.351
Clp0000I Optimal - objective value 25987.351
Coin0511I After Postsolve, objective 25987.351, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25987.35143 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 78 columns (77 integer (77 of which binary)) and 427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.119%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.50273
Cbc0038I Solution found of -23044.9
Cbc0038I Relaxing continuous gives -23044.9
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 78 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -23044.9 to -23587.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -23827.3
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.27892 (2) obj. -23827.3 iterations 25
Cbc0038I Pass   2: suminf.    0.24390 (1) obj. -24823.4 iterations 5
Cbc0038I Pass   3: suminf.    0.04736 (1) obj. -23827.3 iterations 1
Cbc0038I Pass   4: suminf.    0.44776 (3) obj. -24428 iterations 15
Cbc0038I Pass   5: suminf.    0.04736 (1) obj. -23827.3 iterations 13
Cbc0038I Pass   6: suminf.    0.37229 (3) obj. -23827.3 iterations 14
Cbc0038I Pass   7: suminf.    0.17483 (1) obj. -23827.3 iterations 10
Cbc0038I Pass   8: suminf.    0.24390 (1) obj. -24177.4 iterations 1
Cbc0038I Pass   9: suminf.    1.11482 (5) obj. -23827.3 iterations 17
Cbc0038I Pass  10: suminf.    0.56741 (4) obj. -23827.3 iterations 9
Cbc0038I Pass  11: suminf.    0.21040 (2) obj. -23827.3 iterations 6
Cbc0038I Pass  12: suminf.    0.21040 (2) obj. -23827.3 iterations 0
Cbc0038I Pass  13: suminf.    0.71186 (2) obj. -24750.6 iterations 2
Cbc0038I Pass  14: suminf.    0.38275 (2) obj. -23827.3 iterations 1
Cbc0038I Pass  15: suminf.    0.82940 (4) obj. -23827.3 iterations 18
Cbc0038I Pass  16: suminf.    0.74493 (3) obj. -23827.3 iterations 8
Cbc0038I Pass  17: suminf.    0.28335 (2) obj. -23827.3 iterations 15
Cbc0038I Pass  18: suminf.    0.28335 (2) obj. -23827.3 iterations 0
Cbc0038I Pass  19: suminf.    0.54120 (2) obj. -23827.3 iterations 2
Cbc0038I Pass  20: suminf.    0.54120 (2) obj. -23827.3 iterations 0
Cbc0038I Pass  21: suminf.    0.47458 (2) obj. -24363.8 iterations 2
Cbc0038I Pass  22: suminf.    0.84096 (4) obj. -23827.3 iterations 12
Cbc0038I Pass  23: suminf.    0.78901 (2) obj. -23827.3 iterations 7
Cbc0038I Pass  24: suminf.    0.58730 (2) obj. -23827.3 iterations 20
Cbc0038I Pass  25: suminf.    0.53849 (2) obj. -23827.3 iterations 2
Cbc0038I Pass  26: suminf.    0.53849 (2) obj. -23827.3 iterations 0
Cbc0038I Pass  27: suminf.    0.77966 (2) obj. -24366.9 iterations 2
Cbc0038I Pass  28: suminf.    0.57631 (3) obj. -23827.3 iterations 15
Cbc0038I Pass  29: suminf.    0.57631 (3) obj. -23827.3 iterations 7
Cbc0038I Pass  30: suminf.    0.94915 (2) obj. -24521.7 iterations 5
Cbc0038I Rounding solution of -24678.8 is better than previous of -23587.3

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 78 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -24678.8 to -25097 (0.03 seconds)
Cbc0038I Round again with cutoff of -25275
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.79500 (2) obj. -25275 iterations 0
Cbc0038I Pass  31: suminf.    0.63016 (2) obj. -25275 iterations 5
Cbc0038I Pass  32: suminf.    0.63016 (2) obj. -25275 iterations 2
Cbc0038I Pass  33: suminf.    0.94915 (2) obj. -25707.5 iterations 5
Cbc0038I Pass  34: suminf.    0.49849 (4) obj. -25275 iterations 16
Cbc0038I Pass  35: suminf.    0.49849 (4) obj. -25275 iterations 3
Cbc0038I Pass  36: suminf.    1.29793 (4) obj. -25275 iterations 11
Cbc0038I Pass  37: suminf.    0.59425 (4) obj. -25275 iterations 6
Cbc0038I Pass  38: suminf.    0.23786 (3) obj. -25275 iterations 8
Cbc0038I Pass  39: suminf.    0.47358 (3) obj. -25275 iterations 2
Cbc0038I Pass  40: suminf.    0.19584 (2) obj. -25275 iterations 10
Cbc0038I Pass  41: suminf.    1.06218 (3) obj. -25275 iterations 7
Cbc0038I Pass  42: suminf.    1.12746 (3) obj. -25275 iterations 18
Cbc0038I Pass  43: suminf.    1.04686 (4) obj. -25275 iterations 14
Cbc0038I Pass  44: suminf.    0.76298 (3) obj. -25275 iterations 12
Cbc0038I Pass  45: suminf.    0.76298 (3) obj. -25275 iterations 0
Cbc0038I Pass  46: suminf.    0.84190 (3) obj. -25275 iterations 13
Cbc0038I Pass  47: suminf.    0.84190 (3) obj. -25275 iterations 0
Cbc0038I Pass  48: suminf.    0.76298 (3) obj. -25275 iterations 12
Cbc0038I Pass  49: suminf.    2.28277 (6) obj. -25275 iterations 13
Cbc0038I Pass  50: suminf.    2.28277 (6) obj. -25275 iterations 7
Cbc0038I Pass  51: suminf.    1.33250 (3) obj. -25275 iterations 5
Cbc0038I Pass  52: suminf.    0.79500 (2) obj. -25275 iterations 8
Cbc0038I Pass  53: suminf.    0.63016 (2) obj. -25275 iterations 4
Cbc0038I Pass  54: suminf.    0.63016 (2) obj. -25275 iterations 1
Cbc0038I Pass  55: suminf.    0.94915 (2) obj. -25707.5 iterations 4
Cbc0038I Pass  56: suminf.    1.15527 (5) obj. -25275 iterations 10
Cbc0038I Pass  57: suminf.    2.75135 (7) obj. -25275 iterations 9
Cbc0038I Pass  58: suminf.    1.75632 (5) obj. -25275 iterations 6
Cbc0038I Pass  59: suminf.    1.36113 (4) obj. -25275 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 78 columns, reduced to 10 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25097 - took 0.03 seconds
Cbc0012I Integer solution of -25096.955 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 139 rows 78 columns, reduced to 10 rows 11 columns
Cbc0031I 7 added rows had average density of 27.714286
Cbc0013I At root node, 7 cuts changed objective from -25987.351 to -25644.197 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 9.6 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 76.5 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0016I Integer solution of -25171.816 found by strong branching after 189 iterations and 6 nodes (0.51 seconds)
Cbc0010I After 12 nodes, 1 on tree, -25171.816 best solution, best possible -25408.494 (0.74 seconds)
Cbc0001I Search completed - best objective -25171.816, took 454 iterations and 20 nodes (0.99 seconds)
Cbc0032I Strong branching done 164 times (949 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 3, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       1.00

