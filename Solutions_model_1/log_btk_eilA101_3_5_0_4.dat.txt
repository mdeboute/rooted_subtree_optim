Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-69) rows, 75 (-28) columns and 415 (-188) elements
Clp1000I sum of infeasibilities 3.22482e-06 - average 2.37119e-08, 64 fixed columns
Coin0506I Presolve 10 (-126) rows, 10 (-65) columns and 34 (-381) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 30286.616
Clp0000I Optimal - objective value 30286.616
Coin0511I After Postsolve, objective 30286.616, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9847852 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 30286.616
Clp0000I Optimal - objective value 30286.616
Clp0000I Optimal - objective value 30286.616
Coin0511I After Postsolve, objective 30286.616, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30286.61552 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 75 columns (74 integer (74 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.183%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.47532
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29477.1 iterations 33
Cbc0038I Solution found of -29477.1
Cbc0038I Relaxing continuous gives -29477.1
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 75 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29558
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04510 (1) obj. -29558 iterations 6
Cbc0038I Pass   3: suminf.    0.47389 (2) obj. -30041.1 iterations 15
Cbc0038I Pass   4: suminf.    0.43414 (2) obj. -29558 iterations 3
Cbc0038I Pass   5: suminf.    0.43054 (2) obj. -29558 iterations 4
Cbc0038I Pass   6: suminf.    1.61609 (4) obj. -29558 iterations 8
Cbc0038I Pass   7: suminf.    1.61609 (4) obj. -29558 iterations 2
Cbc0038I Pass   8: suminf.    0.55574 (2) obj. -29558 iterations 10
Cbc0038I Pass   9: suminf.    0.44000 (1) obj. -30093.6 iterations 7
Cbc0038I Pass  10: suminf.    0.34003 (1) obj. -29558 iterations 6
Cbc0038I Pass  11: suminf.    0.34049 (5) obj. -29558 iterations 16
Cbc0038I Pass  12: suminf.    0.27557 (2) obj. -29558 iterations 12
Cbc0038I Pass  13: suminf.    0.58421 (2) obj. -29558 iterations 11
Cbc0038I Pass  14: suminf.    0.54518 (3) obj. -29558 iterations 18
Cbc0038I Pass  15: suminf.    0.51988 (2) obj. -29558 iterations 12
Cbc0038I Pass  16: suminf.    0.14886 (1) obj. -29558 iterations 3
Cbc0038I Pass  17: suminf.    0.08000 (1) obj. -29804 iterations 2
Cbc0038I Pass  18: suminf.    0.18104 (1) obj. -29558 iterations 5
Cbc0038I Pass  19: suminf.    0.60521 (3) obj. -29558 iterations 15
Cbc0038I Pass  20: suminf.    0.60521 (3) obj. -29558 iterations 2
Cbc0038I Pass  21: suminf.    0.30530 (1) obj. -29558 iterations 17
Cbc0038I Pass  22: suminf.    0.11538 (1) obj. -29761.4 iterations 11
Cbc0038I Pass  23: suminf.    0.18407 (1) obj. -29558 iterations 1
Cbc0038I Pass  24: suminf.    0.28525 (3) obj. -29558 iterations 9
Cbc0038I Pass  25: suminf.    0.78219 (4) obj. -29558 iterations 13
Cbc0038I Pass  26: suminf.    0.54721 (2) obj. -29558 iterations 12
Cbc0038I Pass  27: suminf.    0.31117 (3) obj. -29558 iterations 14
Cbc0038I Pass  28: suminf.    0.31117 (3) obj. -29558 iterations 0
Cbc0038I Pass  29: suminf.    0.41896 (2) obj. -29558 iterations 12
Cbc0038I Pass  30: suminf.    1.05355 (6) obj. -29558 iterations 10
Cbc0038I Pass  31: suminf.    0.53895 (3) obj. -29558 iterations 7
Cbc0038I Rounding solution of -29804.5 is better than previous of -29477.1

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 75 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -29900.9
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.23609 (1) obj. -29900.9 iterations 0
Cbc0038I Pass  32: suminf.    0.47389 (2) obj. -30041.1 iterations 14
Cbc0038I Pass  33: suminf.    0.53644 (2) obj. -29900.9 iterations 3
Cbc0038I Pass  34: suminf.    0.60227 (2) obj. -29900.9 iterations 5
Cbc0038I Pass  35: suminf.    1.17476 (3) obj. -29900.9 iterations 13
Cbc0038I Pass  36: suminf.    1.17476 (3) obj. -29900.9 iterations 7
Cbc0038I Pass  37: suminf.    1.03121 (3) obj. -29900.9 iterations 21
Cbc0038I Pass  38: suminf.    0.54983 (2) obj. -29900.9 iterations 4
Cbc0038I Pass  39: suminf.    0.48084 (1) obj. -29900.9 iterations 6
Cbc0038I Pass  40: suminf.    0.44000 (1) obj. -30093.6 iterations 5
Cbc0038I Pass  41: suminf.    0.75328 (3) obj. -29900.9 iterations 11
Cbc0038I Pass  42: suminf.    0.64260 (2) obj. -29900.9 iterations 12
Cbc0038I Pass  43: suminf.    0.67546 (5) obj. -29900.9 iterations 6
Cbc0038I Pass  44: suminf.    0.45335 (4) obj. -29900.9 iterations 5
Cbc0038I Pass  45: suminf.    0.71277 (5) obj. -29900.9 iterations 12
Cbc0038I Pass  46: suminf.    0.52061 (3) obj. -29900.9 iterations 9
Cbc0038I Pass  47: suminf.    0.87189 (7) obj. -29900.9 iterations 16
Cbc0038I Pass  48: suminf.    0.87189 (7) obj. -29900.9 iterations 3
Cbc0038I Pass  49: suminf.    0.95886 (3) obj. -29900.9 iterations 24
Cbc0038I Pass  50: suminf.    0.47389 (2) obj. -30041.1 iterations 15
Cbc0038I Pass  51: suminf.    0.53644 (2) obj. -29900.9 iterations 3
Cbc0038I Pass  52: suminf.    0.60227 (2) obj. -29900.9 iterations 7
Cbc0038I Pass  53: suminf.    0.52789 (4) obj. -29900.9 iterations 14
Cbc0038I Pass  54: suminf.    0.28362 (3) obj. -29900.9 iterations 9
Cbc0038I Pass  55: suminf.    0.23609 (1) obj. -29900.9 iterations 12
Cbc0038I Pass  56: suminf.    0.23609 (1) obj. -29900.9 iterations 0
Cbc0038I Pass  57: suminf.    0.47389 (2) obj. -30041.1 iterations 13
Cbc0038I Pass  58: suminf.    0.53644 (2) obj. -29900.9 iterations 3
Cbc0038I Pass  59: suminf.    1.31015 (5) obj. -29900.9 iterations 14
Cbc0038I Pass  60: suminf.    1.31015 (5) obj. -29900.9 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 75 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -29804.5 - took 0.02 seconds
Cbc0012I Integer solution of -29804.45 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 136 rows 75 columns, reduced to 11 rows 11 columns
Cbc0031I 8 added rows had average density of 21
Cbc0013I At root node, 8 cuts changed objective from -30286.616 to -29924.796 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 2.4 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 72.7 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29804.45, took 188 iterations and 2 nodes (0.36 seconds)
Cbc0032I Strong branching done 18 times (102 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.36

