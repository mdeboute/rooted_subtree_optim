Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-33) rows, 69 (-9) columns and 375 (-78) elements
Clp1000I sum of infeasibilities 4.71767e-05 - average 3.86694e-07, 15 fixed columns
Coin0506I Presolve 87 (-35) rows, 51 (-18) columns and 270 (-105) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 3.2039711 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 72.552365
Clp0000I Optimal - objective value 72.552365
Coin0511I After Postsolve, objective 72.552365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.552365
Clp0000I Optimal - objective value 72.552365
Clp0000I Optimal - objective value 72.552365
Coin0511I After Postsolve, objective 72.552365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.55236494 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 69 columns (68 integer (68 of which binary)) and 376 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.272%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 5.88756
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -55.4433 iterations 26
Cbc0038I Solution found of -55.4433
Cbc0038I Relaxing continuous gives -55.4433
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 38 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -57.1543
Cbc0038I Pass   2: suminf.    0.14133 (1) obj. -57.1543 iterations 3
Cbc0038I Pass   3: suminf.    0.48387 (1) obj. -57.1543 iterations 3
Cbc0038I Pass   4: suminf.    2.74022 (8) obj. -57.1543 iterations 19
Cbc0038I Pass   5: suminf.    0.76504 (2) obj. -57.1543 iterations 13
Cbc0038I Pass   6: suminf.    0.36667 (1) obj. -57.1543 iterations 3
Cbc0038I Pass   7: suminf.    0.47245 (1) obj. -57.1543 iterations 2
Cbc0038I Pass   8: suminf.    0.47580 (2) obj. -57.1543 iterations 9
Cbc0038I Pass   9: suminf.    0.29838 (1) obj. -57.1543 iterations 7
Cbc0038I Pass  10: suminf.    4.32965 (17) obj. -57.1543 iterations 24
Cbc0038I Pass  11: suminf.    0.79618 (2) obj. -57.1543 iterations 16
Cbc0038I Pass  12: suminf.    0.44534 (2) obj. -57.1543 iterations 2
Cbc0038I Pass  13: suminf.    0.21049 (1) obj. -57.1543 iterations 2
Cbc0038I Pass  14: suminf.    0.21049 (1) obj. -57.1543 iterations 0
Cbc0038I Pass  15: suminf.    4.07925 (17) obj. -57.1543 iterations 20
Cbc0038I Pass  16: suminf.    0.51222 (3) obj. -57.1543 iterations 16
Cbc0038I Pass  17: suminf.    0.50844 (3) obj. -57.1543 iterations 1
Cbc0038I Pass  18: suminf.    0.87216 (2) obj. -57.1543 iterations 5
Cbc0038I Pass  19: suminf.    0.44534 (2) obj. -57.1543 iterations 2
Cbc0038I Pass  20: suminf.    0.21049 (1) obj. -57.1543 iterations 2
Cbc0038I Pass  21: suminf.    0.21049 (1) obj. -57.1543 iterations 0
Cbc0038I Pass  22: suminf.    1.33617 (4) obj. -57.1543 iterations 9
Cbc0038I Pass  23: suminf.    0.21049 (1) obj. -57.1543 iterations 7
Cbc0038I Pass  24: suminf.    4.35428 (15) obj. -57.1543 iterations 16
Cbc0038I Pass  25: suminf.    0.54685 (3) obj. -57.1543 iterations 15
Cbc0038I Pass  26: suminf.    0.49274 (2) obj. -57.1543 iterations 1
Cbc0038I Pass  27: suminf.    0.44534 (2) obj. -57.1543 iterations 3
Cbc0038I Pass  28: suminf.    0.21049 (1) obj. -57.1543 iterations 2
Cbc0038I Pass  29: suminf.    0.21049 (1) obj. -57.1543 iterations 0
Cbc0038I Pass  30: suminf.    0.92001 (4) obj. -57.1543 iterations 7
Cbc0038I Pass  31: suminf.    0.21049 (1) obj. -57.1543 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -55.4433 - took 0.03 seconds
Cbc0012I Integer solution of -55.44328 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 122 rows 69 columns, reduced to 38 rows 25 columns
Cbc0031I 21 added rows had average density of 20
Cbc0013I At root node, 21 cuts changed objective from -72.552365 to -61.30255 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 683 row cuts average 3.8 elements, 7 column cuts (7 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.44328, took 756 iterations and 8 nodes (0.14 seconds)
Cbc0032I Strong branching done 110 times (1592 iterations), fathomed 2 nodes and fixed 14 variables
Cbc0035I Maximum depth 3, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

