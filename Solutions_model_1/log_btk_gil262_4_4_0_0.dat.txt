Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 480 (-47) rows, 250 (-14) columns and 1435 (-110) elements
Clp1000I sum of infeasibilities 1.89548e-05 - average 3.94892e-08, 107 fixed columns
Coin0506I Presolve 259 (-221) rows, 137 (-113) columns and 777 (-658) elements
Clp0029I End of values pass after 137 iterations
Clp0014I Perturbing problem by 0.001% of 1.9689849 - largest nonzero change 0 ( 0%) - largest zero change 2.9788091e-05
Clp0000I Optimal - objective value 794.50977
Clp0000I Optimal - objective value 794.50977
Coin0511I After Postsolve, objective 794.50977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 794.50977
Clp0000I Optimal - objective value 794.50977
Clp0000I Optimal - objective value 794.50977
Coin0511I After Postsolve, objective 794.50977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 794.5097652 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 480 rows, 250 columns (249 integer (249 of which binary)) and 1435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.382%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.8482
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -37.3779 iterations 104
Cbc0038I Solution found of -37.3779
Cbc0038I Relaxing continuous gives -37.3779
Cbc0038I Rounding solution of -324.454 is better than previous of -37.3779

Cbc0038I Before mini branch and bound, 214 integers at bound fixed and 0 continuous
Cbc0038I Full problem 480 rows 250 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -324.454 to -662.127 (0.08 seconds)
Cbc0038I Round again with cutoff of -675.366
Cbc0038I Pass   2: suminf.    5.26899 (15) obj. -675.366 iterations 45
Cbc0038I Pass   3: suminf.    3.54703 (11) obj. -675.366 iterations 25
Cbc0038I Pass   4: suminf.    2.23537 (6) obj. -675.366 iterations 26
Cbc0038I Pass   5: suminf.    1.82160 (7) obj. -675.366 iterations 21
Cbc0038I Pass   6: suminf.    1.80684 (7) obj. -675.366 iterations 20
Cbc0038I Pass   7: suminf.    1.33273 (6) obj. -675.366 iterations 24
Cbc0038I Pass   8: suminf.    0.60740 (6) obj. -675.366 iterations 19
Cbc0038I Pass   9: suminf.    1.67417 (7) obj. -675.366 iterations 34
Cbc0038I Pass  10: suminf.    1.11732 (6) obj. -675.366 iterations 15
Cbc0038I Pass  11: suminf.    1.37396 (6) obj. -675.366 iterations 39
Cbc0038I Pass  12: suminf.    1.37396 (6) obj. -675.366 iterations 0
Cbc0038I Pass  13: suminf.    1.43721 (6) obj. -675.366 iterations 31
Cbc0038I Pass  14: suminf.    2.38125 (7) obj. -675.366 iterations 23
Cbc0038I Pass  15: suminf.    2.15720 (8) obj. -675.366 iterations 17
Cbc0038I Pass  16: suminf.    1.06235 (8) obj. -675.366 iterations 17
Cbc0038I Pass  17: suminf.    1.01422 (8) obj. -675.366 iterations 7
Cbc0038I Pass  18: suminf.    1.09187 (4) obj. -675.366 iterations 38
Cbc0038I Pass  19: suminf.    0.30235 (2) obj. -675.366 iterations 15
Cbc0038I Pass  20: suminf.    1.07249 (6) obj. -675.366 iterations 13
Cbc0038I Pass  21: suminf.    0.73355 (4) obj. -675.366 iterations 26
Cbc0038I Pass  22: suminf.    0.57767 (2) obj. -675.366 iterations 8
Cbc0038I Pass  23: suminf.    0.50383 (2) obj. -675.366 iterations 1
Cbc0038I Pass  24: suminf.    0.95957 (4) obj. -675.366 iterations 7
Cbc0038I Pass  25: suminf.    0.89666 (5) obj. -675.366 iterations 14
Cbc0038I Pass  26: suminf.    0.85096 (5) obj. -675.366 iterations 9
Cbc0038I Pass  27: suminf.    0.99351 (6) obj. -675.366 iterations 25
Cbc0038I Pass  28: suminf.    0.59873 (7) obj. -675.366 iterations 15
Cbc0038I Pass  29: suminf.    1.67568 (5) obj. -675.366 iterations 29
Cbc0038I Pass  30: suminf.    1.36155 (6) obj. -675.366 iterations 11
Cbc0038I Pass  31: suminf.    0.73355 (4) obj. -675.366 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 207 integers at bound fixed and 0 continuous
Cbc0038I Full problem 480 rows 250 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -662.127 to -669.955 (0.20 seconds)
Cbc0038I Round again with cutoff of -699.194
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    5.57865 (16) obj. -699.194 iterations 13
Cbc0038I Pass  32: suminf.    3.81058 (13) obj. -699.194 iterations 19
Cbc0038I Pass  33: suminf.    1.81619 (9) obj. -699.194 iterations 28
Cbc0038I Pass  34: suminf.    1.81512 (9) obj. -699.194 iterations 4
Cbc0038I Pass  35: suminf.    1.75362 (9) obj. -699.194 iterations 34
Cbc0038I Pass  36: suminf.    1.56897 (8) obj. -699.194 iterations 1
Cbc0038I Pass  37: suminf.    1.94189 (7) obj. -699.194 iterations 27
Cbc0038I Pass  38: suminf.    0.94278 (4) obj. -699.194 iterations 6
Cbc0038I Pass  39: suminf.    2.00387 (8) obj. -699.194 iterations 22
Cbc0038I Pass  40: suminf.    1.62369 (8) obj. -699.194 iterations 17
Cbc0038I Pass  41: suminf.    2.92332 (12) obj. -699.194 iterations 28
Cbc0038I Pass  42: suminf.    2.29741 (8) obj. -699.194 iterations 8
Cbc0038I Pass  43: suminf.    2.10782 (7) obj. -699.194 iterations 1
Cbc0038I Pass  44: suminf.    1.42735 (5) obj. -699.194 iterations 22
Cbc0038I Pass  45: suminf.    0.43903 (6) obj. -699.194 iterations 6
Cbc0038I Pass  46: suminf.    0.43903 (6) obj. -699.194 iterations 0
Cbc0038I Pass  47: suminf.    2.06302 (6) obj. -699.194 iterations 52
Cbc0038I Pass  48: suminf.    2.06302 (6) obj. -699.194 iterations 1
Cbc0038I Pass  49: suminf.    1.11477 (7) obj. -699.194 iterations 12
Cbc0038I Pass  50: suminf.    0.98319 (7) obj. -699.194 iterations 31
Cbc0038I Pass  51: suminf.    0.78290 (3) obj. -699.194 iterations 31
Cbc0038I Pass  52: suminf.    0.76804 (4) obj. -699.194 iterations 8
Cbc0038I Pass  53: suminf.    2.93978 (9) obj. -699.194 iterations 14
Cbc0038I Pass  54: suminf.    2.67422 (11) obj. -699.194 iterations 38
Cbc0038I Pass  55: suminf.    2.11294 (6) obj. -699.194 iterations 19
Cbc0038I Pass  56: suminf.    2.02985 (10) obj. -699.194 iterations 20
Cbc0038I Pass  57: suminf.    3.18238 (11) obj. -699.194 iterations 38
Cbc0038I Pass  58: suminf.    1.75362 (9) obj. -699.194 iterations 5
Cbc0038I Pass  59: suminf.    1.56897 (8) obj. -699.194 iterations 1
Cbc0038I Pass  60: suminf.    1.94189 (7) obj. -699.194 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 207 integers at bound fixed and 0 continuous
Cbc0038I Full problem 480 rows 250 columns, reduced to 75 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -669.955 to -681.897 (0.33 seconds)
Cbc0038I Round again with cutoff of -727.789
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 4
Cbc0038I Pass  60: suminf.    6.42025 (18) obj. -727.789 iterations 10
Cbc0038I Pass  61: suminf.    6.25810 (16) obj. -727.789 iterations 14
Cbc0038I Pass  62: suminf.    4.53299 (15) obj. -727.789 iterations 28
Cbc0038I Pass  63: suminf.    5.06696 (14) obj. -727.789 iterations 20
Cbc0038I Pass  64: suminf.    3.48561 (13) obj. -727.789 iterations 21
Cbc0038I Pass  65: suminf.    2.71941 (12) obj. -727.789 iterations 1
Cbc0038I Pass  66: suminf.    1.69897 (12) obj. -727.789 iterations 59
Cbc0038I Pass  67: suminf.    1.15635 (4) obj. -727.789 iterations 29
Cbc0038I Pass  68: suminf.    1.12744 (7) obj. -727.789 iterations 6
Cbc0038I Pass  69: suminf.    3.48077 (11) obj. -727.789 iterations 42
Cbc0038I Pass  70: suminf.    2.42972 (10) obj. -727.789 iterations 19
Cbc0038I Pass  71: suminf.    4.27494 (12) obj. -727.789 iterations 26
Cbc0038I Pass  72: suminf.    1.92199 (10) obj. -727.789 iterations 36
Cbc0038I Pass  73: suminf.    1.92199 (10) obj. -727.789 iterations 2
Cbc0038I Pass  74: suminf.    4.48360 (12) obj. -727.789 iterations 19
Cbc0038I Pass  75: suminf.    3.99536 (12) obj. -727.789 iterations 14
Cbc0038I Pass  76: suminf.    1.48170 (9) obj. -727.789 iterations 47
Cbc0038I Pass  77: suminf.    1.48170 (9) obj. -727.789 iterations 0
Cbc0038I Pass  78: suminf.    3.28625 (11) obj. -727.789 iterations 40
Cbc0038I Pass  79: suminf.    2.08139 (9) obj. -727.789 iterations 14
Cbc0038I Pass  80: suminf.    2.89676 (15) obj. -727.789 iterations 43
Cbc0038I Pass  81: suminf.    2.68823 (10) obj. -727.789 iterations 14
Cbc0038I Pass  82: suminf.    2.59165 (11) obj. -727.789 iterations 32
Cbc0038I Pass  83: suminf.    1.71517 (7) obj. -727.789 iterations 8
Cbc0038I Pass  84: suminf.    1.46482 (11) obj. -727.789 iterations 21
Cbc0038I Pass  85: suminf.    2.55055 (14) obj. -727.789 iterations 41
Cbc0038I Pass  86: suminf.    2.36266 (13) obj. -727.789 iterations 20
Cbc0038I Pass  87: suminf.    3.25025 (14) obj. -727.789 iterations 43
Cbc0038I Pass  88: suminf.    2.71941 (12) obj. -727.789 iterations 12
Cbc0038I Pass  89: suminf.    1.69897 (12) obj. -727.789 iterations 60
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 205 integers at bound fixed and 0 continuous
Cbc0038I Full problem 480 rows 250 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.48 seconds)
Cbc0038I After 0.48 seconds - Feasibility pump exiting with objective of -681.897 - took 0.44 seconds
Cbc0012I Integer solution of -681.89702 found by feasibility pump after 0 iterations and 0 nodes (0.48 seconds)
Cbc0038I Full problem 480 rows 250 columns, reduced to 62 rows 36 columns
Cbc0031I 11 added rows had average density of 193.54545
Cbc0013I At root node, 11 cuts changed objective from -794.50977 to -754.13273 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3506 row cuts average 3.2 elements, 8 column cuts (8 active)  in 0.662 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 822 row cuts average 234.5 elements, 0 column cuts (0 active)  in 0.291 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.206 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 236.9 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -681.89702 best solution, best possible -754.12888 (2.85 seconds)
Cbc0038I Full problem 480 rows 250 columns, reduced to 17 rows 17 columns
Cbc0012I Integer solution of -685.3827 found by RINS after 4537 iterations and 43 nodes (3.57 seconds)
Cbc0010I After 43 nodes, 9 on tree, -685.3827 best solution, best possible -754.12888 (3.57 seconds)
Cbc0012I Integer solution of -685.643 found by DiveCoefficient after 5084 iterations and 67 nodes (3.67 seconds)
Cbc0038I Full problem 480 rows 250 columns, reduced to 8 rows 9 columns
Cbc0012I Integer solution of -686.0446 found by rounding after 7560 iterations and 180 nodes (4.19 seconds)
Cbc0010I After 204 nodes, 10 on tree, -686.0446 best solution, best possible -754.12888 (4.27 seconds)
Cbc0012I Integer solution of -690.4339 found by DiveCoefficient after 8669 iterations and 239 nodes (4.48 seconds)
Cbc0001I Search completed - best objective -690.4339000000001, took 9814 iterations and 276 nodes (4.68 seconds)
Cbc0032I Strong branching done 1514 times (18324 iterations), fathomed 76 nodes and fixed 120 variables
Cbc0035I Maximum depth 26, 2491 variables fixed on reduced cost
Total time (CPU seconds):       4.48   (Wallclock seconds):       4.72

