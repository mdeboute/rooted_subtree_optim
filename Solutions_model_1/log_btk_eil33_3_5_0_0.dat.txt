Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 31 (-4) columns and 158 (-37) elements
Clp1000I sum of infeasibilities 8.91002e-06 - average 1.71347e-07, 3 fixed columns
Coin0506I Presolve 46 (-6) rows, 28 (-3) columns and 140 (-18) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Coin0511I After Postsolve, objective 75.059443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Coin0511I After Postsolve, objective 75.059443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.05944286 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 31 columns (30 integer (30 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.611%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.48903
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.02746 iterations 24
Cbc0038I Solution found of 0.02746
Cbc0038I Relaxing continuous gives 0.02746
Cbc0038I Rounding solution of -25.5746 is better than previous of 0.02746

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -25.5746 to -26.7898 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.5677
Cbc0038I Pass   2: suminf.    1.17109 (3) obj. -31.5677 iterations 6
Cbc0038I Pass   3: suminf.    0.71484 (2) obj. -31.5677 iterations 1
Cbc0038I Pass   4: suminf.    0.30822 (1) obj. -31.5677 iterations 3
Cbc0038I Pass   5: suminf.    0.38446 (2) obj. -31.5677 iterations 2
Cbc0038I Pass   6: suminf.    0.71484 (2) obj. -31.5677 iterations 3
Cbc0038I Pass   7: suminf.    2.83654 (8) obj. -31.5677 iterations 9
Cbc0038I Pass   8: suminf.    1.19701 (4) obj. -31.5677 iterations 6
Cbc0038I Pass   9: suminf.    0.55980 (3) obj. -31.5677 iterations 4
Cbc0038I Pass  10: suminf.    0.83228 (3) obj. -31.5677 iterations 2
Cbc0038I Pass  11: suminf.    0.79460 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  12: suminf.    0.55660 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  13: suminf.    0.55660 (2) obj. -31.5677 iterations 0
Cbc0038I Pass  14: suminf.    0.86957 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  15: suminf.    1.09036 (4) obj. -31.5677 iterations 3
Cbc0038I Pass  16: suminf.    0.76617 (3) obj. -31.5677 iterations 2
Cbc0038I Pass  17: suminf.    0.74583 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  18: suminf.    0.59447 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  19: suminf.    0.44976 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  20: suminf.    0.29523 (2) obj. -31.5677 iterations 3
Cbc0038I Pass  21: suminf.    0.29523 (2) obj. -31.5677 iterations 0
Cbc0038I Pass  22: suminf.    1.02515 (3) obj. -31.5677 iterations 3
Cbc0038I Pass  23: suminf.    2.89937 (7) obj. -31.5677 iterations 11
Cbc0038I Pass  24: suminf.    1.55154 (5) obj. -31.5677 iterations 9
Cbc0038I Pass  25: suminf.    1.09142 (5) obj. -31.5677 iterations 2
Cbc0038I Pass  26: suminf.    1.07782 (4) obj. -31.5677 iterations 9
Cbc0038I Pass  27: suminf.    0.80644 (4) obj. -31.5677 iterations 6
Cbc0038I Pass  28: suminf.    0.80644 (4) obj. -31.5677 iterations 0
Cbc0038I Pass  29: suminf.    0.29925 (2) obj. -31.5677 iterations 4
Cbc0038I Pass  30: suminf.    0.29523 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  31: suminf.    1.07782 (4) obj. -31.5677 iterations 6
Cbc0038I Rounding solution of -31.7476 is better than previous of -26.7898

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -40.3116
Cbc0038I Pass  31: suminf.    0.91294 (3) obj. -40.3116 iterations 0
Cbc0038I Pass  32: suminf.    0.42033 (2) obj. -40.3116 iterations 5
Cbc0038I Pass  33: suminf.    0.56918 (2) obj. -40.3116 iterations 3
Cbc0038I Pass  34: suminf.    1.92629 (6) obj. -40.3116 iterations 6
Cbc0038I Pass  35: suminf.    0.81170 (2) obj. -40.3116 iterations 4
Cbc0038I Pass  36: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  37: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  38: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  39: suminf.    2.84749 (9) obj. -40.3116 iterations 7
Cbc0038I Pass  40: suminf.    1.22977 (3) obj. -40.3116 iterations 6
Cbc0038I Pass  41: suminf.    0.47205 (1) obj. -40.3116 iterations 4
Cbc0038I Pass  42: suminf.    0.42033 (2) obj. -40.3116 iterations 2
Cbc0038I Pass  43: suminf.    0.56918 (2) obj. -40.3116 iterations 3
Cbc0038I Pass  44: suminf.    4.06544 (10) obj. -40.3116 iterations 10
Cbc0038I Pass  45: suminf.    1.33523 (7) obj. -40.3116 iterations 7
Cbc0038I Pass  46: suminf.    0.65334 (3) obj. -40.3116 iterations 7
Cbc0038I Pass  47: suminf.    0.64392 (3) obj. -40.3116 iterations 1
Cbc0038I Pass  48: suminf.    0.51306 (3) obj. -40.3116 iterations 7
Cbc0038I Pass  49: suminf.    0.51306 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  50: suminf.    0.63608 (4) obj. -40.3116 iterations 4
Cbc0038I Pass  51: suminf.    1.59025 (4) obj. -40.3116 iterations 7
Cbc0038I Pass  52: suminf.    1.13148 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  53: suminf.    0.61892 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  54: suminf.    0.86300 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  55: suminf.    0.86300 (3) obj. -40.3116 iterations 0
Cbc0038I Pass  56: suminf.    0.66372 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  57: suminf.    0.63608 (4) obj. -40.3116 iterations 4
Cbc0038I Pass  58: suminf.    1.59025 (4) obj. -40.3116 iterations 7
Cbc0038I Pass  59: suminf.    1.13148 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  60: suminf.    0.61892 (3) obj. -40.3116 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -31.7476 - took 0.04 seconds
Cbc0012I Integer solution of -31.74759 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 51 rows 31 columns, reduced to 31 rows 21 columns
Cbc0031I 10 added rows had average density of 19.8
Cbc0013I At root node, 10 cuts changed objective from -74.567288 to -55.705985 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1991 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 593 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.74759, took 2928 iterations and 4 nodes (0.23 seconds)
Cbc0032I Strong branching done 72 times (819 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

