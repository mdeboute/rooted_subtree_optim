Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 1.53217e-06 - average 2.64167e-08, 2 fixed columns
Coin0506I Presolve 54 (-4) rows, 31 (-2) columns and 162 (-12) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 100.16479
Clp0000I Optimal - objective value 100.16479
Coin0511I After Postsolve, objective 100.16479, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.16479
Clp0000I Optimal - objective value 100.16479
Clp0000I Optimal - objective value 100.16479
Coin0511I After Postsolve, objective 100.16479, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.1647911 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.75296
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.7959 iterations 15
Cbc0038I Solution found of -20.7959
Cbc0038I Relaxing continuous gives -20.7959
Cbc0038I Rounding solution of -29.3513 is better than previous of -20.7959

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 23 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -29.3513 to -45.1925 (0.02 seconds)
Cbc0038I Round again with cutoff of -50.6898
Cbc0038I Pass   2: suminf.    0.82081 (4) obj. -50.6898 iterations 4
Cbc0038I Pass   3: suminf.    1.10554 (3) obj. -50.6898 iterations 4
Cbc0038I Pass   4: suminf.    0.50644 (3) obj. -50.6898 iterations 1
Cbc0038I Pass   5: suminf.    0.44071 (3) obj. -50.6898 iterations 1
Cbc0038I Pass   6: suminf.    1.47266 (4) obj. -50.6898 iterations 2
Cbc0038I Pass   7: suminf.    0.76167 (3) obj. -50.6898 iterations 4
Cbc0038I Pass   8: suminf.    0.75266 (3) obj. -50.6898 iterations 1
Cbc0038I Pass   9: suminf.    0.57393 (4) obj. -50.6898 iterations 10
Cbc0038I Pass  10: suminf.    0.55631 (3) obj. -50.6898 iterations 2
Cbc0038I Pass  11: suminf.    0.50511 (3) obj. -50.6898 iterations 4
Cbc0038I Pass  12: suminf.    0.91643 (3) obj. -50.6898 iterations 4
Cbc0038I Pass  13: suminf.    0.76031 (3) obj. -50.6898 iterations 2
Cbc0038I Pass  14: suminf.    0.84604 (4) obj. -50.6898 iterations 4
Cbc0038I Pass  15: suminf.    0.20128 (2) obj. -50.6898 iterations 3
Cbc0038I Pass  16: suminf.    0.20128 (2) obj. -50.6898 iterations 0
Cbc0038I Pass  17: suminf.    0.52735 (2) obj. -50.6898 iterations 2
Cbc0038I Pass  18: suminf.    0.52735 (2) obj. -50.6898 iterations 0
Cbc0038I Pass  19: suminf.    0.84604 (4) obj. -50.6898 iterations 3
Cbc0038I Pass  20: suminf.    0.20128 (2) obj. -50.6898 iterations 3
Cbc0038I Pass  21: suminf.    0.20128 (2) obj. -50.6898 iterations 0
Cbc0038I Pass  22: suminf.    0.52735 (2) obj. -50.6898 iterations 2
Cbc0038I Pass  23: suminf.    0.52735 (2) obj. -50.6898 iterations 0
Cbc0038I Pass  24: suminf.    0.84604 (4) obj. -50.6898 iterations 3
Cbc0038I Pass  25: suminf.    0.20128 (2) obj. -50.6898 iterations 3
Cbc0038I Pass  26: suminf.    0.20128 (2) obj. -50.6898 iterations 0
Cbc0038I Pass  27: suminf.    0.52735 (2) obj. -50.6898 iterations 2
Cbc0038I Pass  28: suminf.    0.52735 (2) obj. -50.6898 iterations 0
Cbc0038I Pass  29: suminf.    0.84604 (4) obj. -50.6898 iterations 3
Cbc0038I Pass  30: suminf.    0.20128 (2) obj. -50.6898 iterations 3
Cbc0038I Pass  31: suminf.    0.20128 (2) obj. -50.6898 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -45.1925 to -48.0177 (0.04 seconds)
Cbc0038I Round again with cutoff of -60.5848
Cbc0038I Pass  31: suminf.    1.17987 (6) obj. -60.5848 iterations 1
Cbc0038I Pass  32: suminf.    1.48721 (4) obj. -60.5848 iterations 5
Cbc0038I Pass  33: suminf.    1.48721 (4) obj. -60.5848 iterations 0
Cbc0038I Pass  34: suminf.    1.06855 (3) obj. -60.5848 iterations 3
Cbc0038I Pass  35: suminf.    1.07055 (3) obj. -60.5848 iterations 1
Cbc0038I Pass  36: suminf.    1.58191 (6) obj. -60.5848 iterations 10
Cbc0038I Pass  37: suminf.    1.12711 (5) obj. -60.5848 iterations 2
Cbc0038I Pass  38: suminf.    1.39997 (5) obj. -60.5848 iterations 5
Cbc0038I Pass  39: suminf.    1.28052 (4) obj. -60.5848 iterations 2
Cbc0038I Pass  40: suminf.    1.13110 (4) obj. -60.5848 iterations 3
Cbc0038I Pass  41: suminf.    1.60863 (5) obj. -60.5848 iterations 5
Cbc0038I Pass  42: suminf.    1.60863 (5) obj. -60.5848 iterations 0
Cbc0038I Pass  43: suminf.    1.78168 (4) obj. -60.5848 iterations 3
Cbc0038I Pass  44: suminf.    1.15949 (5) obj. -60.5848 iterations 1
Cbc0038I Pass  45: suminf.    1.15949 (5) obj. -60.5848 iterations 0
Cbc0038I Pass  46: suminf.    1.28791 (4) obj. -60.5848 iterations 3
Cbc0038I Pass  47: suminf.    1.28791 (4) obj. -60.5848 iterations 0
Cbc0038I Pass  48: suminf.    0.83321 (4) obj. -60.5848 iterations 2
Cbc0038I Pass  49: suminf.    0.83321 (4) obj. -60.5848 iterations 0
Cbc0038I Pass  50: suminf.    1.29863 (5) obj. -60.5848 iterations 2
Cbc0038I Pass  51: suminf.    1.29863 (5) obj. -60.5848 iterations 0
Cbc0038I Pass  52: suminf.    1.46848 (4) obj. -60.5848 iterations 3
Cbc0038I Pass  53: suminf.    1.38973 (3) obj. -60.5848 iterations 2
Cbc0038I Pass  54: suminf.    1.31783 (3) obj. -60.5848 iterations 1
Cbc0038I Pass  55: suminf.    1.02308 (4) obj. -60.5848 iterations 2
Cbc0038I Pass  56: suminf.    1.43997 (4) obj. -60.5848 iterations 5
Cbc0038I Pass  57: suminf.    1.43997 (4) obj. -60.5848 iterations 0
Cbc0038I Pass  58: suminf.    1.06803 (4) obj. -60.5848 iterations 4
Cbc0038I Pass  59: suminf.    1.39577 (5) obj. -60.5848 iterations 5
Cbc0038I Pass  60: suminf.    1.05474 (4) obj. -60.5848 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 31 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -48.0177 - took 0.05 seconds
Cbc0012I Integer solution of -48.01767 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 29 rows 20 columns
Cbc0031I 17 added rows had average density of 19.647059
Cbc0013I At root node, 17 cuts changed objective from -100.16479 to -78.057926 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1873 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 877 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0012I Integer solution of -48.7027 found by rounding after 3535 iterations and 7 nodes (0.30 seconds)
Cbc0016I Integer solution of -48.72193 found by strong branching after 3546 iterations and 8 nodes (0.30 seconds)
Cbc0012I Integer solution of -48.7258 found by DiveCoefficient after 3815 iterations and 32 nodes (0.32 seconds)
Cbc0012I Integer solution of -48.72749 found by rounding after 3859 iterations and 40 nodes (0.32 seconds)
Cbc0001I Search completed - best objective -48.72749041, took 3930 iterations and 42 nodes (0.33 seconds)
Cbc0032I Strong branching done 298 times (3057 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 8, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

