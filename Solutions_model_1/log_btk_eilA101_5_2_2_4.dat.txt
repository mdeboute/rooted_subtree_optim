Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 101 (-2) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 2.12126e-05 - average 1.18506e-07, 13 fixed columns
Coin0506I Presolve 154 (-25) rows, 87 (-14) columns and 474 (-78) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 49.722522
Clp0000I Optimal - objective value 49.722522
Coin0511I After Postsolve, objective 49.722522, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24110869 - largest nonzero change 0 ( 0%) - largest zero change 2.9406533e-05
Clp0000I Optimal - objective value 49.722522
Clp0000I Optimal - objective value 49.722522
Clp0000I Optimal - objective value 49.722522
Coin0511I After Postsolve, objective 49.722522, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.72252203 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 179 rows, 101 columns (100 integer (100 of which binary)) and 552 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.863%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 13.1809
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.85858 iterations 61
Cbc0038I Solution found of 1.85858
Cbc0038I Relaxing continuous gives 1.85858
Cbc0038I Rounding solution of -3.47687 is better than previous of 1.85858

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 92 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -3.47687 to -23.6898 (0.05 seconds)
Cbc0038I Round again with cutoff of -26.2932
Cbc0038I Pass   2: suminf.    3.47654 (11) obj. -26.2932 iterations 16
Cbc0038I Pass   3: suminf.    3.31055 (10) obj. -26.2932 iterations 1
Cbc0038I Pass   4: suminf.    3.16990 (9) obj. -26.2932 iterations 1
Cbc0038I Pass   5: suminf.    2.45696 (6) obj. -26.2932 iterations 11
Cbc0038I Pass   6: suminf.    2.08351 (6) obj. -26.2932 iterations 5
Cbc0038I Pass   7: suminf.    2.48169 (7) obj. -26.2932 iterations 12
Cbc0038I Pass   8: suminf.    1.79686 (6) obj. -26.2932 iterations 3
Cbc0038I Pass   9: suminf.    2.29891 (7) obj. -26.2932 iterations 3
Cbc0038I Pass  10: suminf.    1.79855 (5) obj. -26.2932 iterations 4
Cbc0038I Pass  11: suminf.    1.78537 (5) obj. -26.2932 iterations 1
Cbc0038I Pass  12: suminf.    2.16001 (6) obj. -26.2932 iterations 4
Cbc0038I Pass  13: suminf.    2.08351 (6) obj. -26.2932 iterations 1
Cbc0038I Pass  14: suminf.    2.48169 (7) obj. -26.2932 iterations 12
Cbc0038I Pass  15: suminf.    1.79686 (6) obj. -26.2932 iterations 3
Cbc0038I Pass  16: suminf.    2.29891 (7) obj. -26.2932 iterations 3
Cbc0038I Pass  17: suminf.    1.79855 (5) obj. -26.2932 iterations 4
Cbc0038I Pass  18: suminf.    1.78537 (5) obj. -26.2932 iterations 1
Cbc0038I Pass  19: suminf.    2.16001 (6) obj. -26.2932 iterations 4
Cbc0038I Pass  20: suminf.    2.08351 (6) obj. -26.2932 iterations 1
Cbc0038I Pass  21: suminf.    2.48169 (7) obj. -26.2932 iterations 12
Cbc0038I Pass  22: suminf.    1.79686 (6) obj. -26.2932 iterations 3
Cbc0038I Pass  23: suminf.    2.29891 (7) obj. -26.2932 iterations 3
Cbc0038I Pass  24: suminf.    1.79855 (5) obj. -26.2932 iterations 4
Cbc0038I Pass  25: suminf.    1.78537 (5) obj. -26.2932 iterations 1
Cbc0038I Pass  26: suminf.    2.16001 (6) obj. -26.2932 iterations 4
Cbc0038I Pass  27: suminf.    2.08351 (6) obj. -26.2932 iterations 1
Cbc0038I Pass  28: suminf.    2.48169 (7) obj. -26.2932 iterations 12
Cbc0038I Pass  29: suminf.    1.79686 (6) obj. -26.2932 iterations 3
Cbc0038I Pass  30: suminf.    2.29891 (7) obj. -26.2932 iterations 3
Cbc0038I Pass  31: suminf.    1.79855 (5) obj. -26.2932 iterations 4
Cbc0038I Rounding solution of -23.873 is better than previous of -23.6898

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 92 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -30.979
Cbc0038I Pass  31: suminf.    4.03259 (13) obj. -30.979 iterations 1
Cbc0038I Pass  32: suminf.    3.40143 (11) obj. -30.979 iterations 2
Cbc0038I Pass  33: suminf.    3.03451 (9) obj. -30.979 iterations 10
Cbc0038I Pass  34: suminf.    3.03163 (10) obj. -30.979 iterations 2
Cbc0038I Pass  35: suminf.    3.07459 (7) obj. -30.979 iterations 14
Cbc0038I Pass  36: suminf.    3.07406 (8) obj. -30.979 iterations 1
Cbc0038I Pass  37: suminf.    2.52454 (8) obj. -30.979 iterations 1
Cbc0038I Pass  38: suminf.    2.08366 (7) obj. -30.979 iterations 6
Cbc0038I Pass  39: suminf.    2.02126 (7) obj. -30.979 iterations 3
Cbc0038I Pass  40: suminf.    2.93186 (7) obj. -30.979 iterations 7
Cbc0038I Pass  41: suminf.    2.77537 (7) obj. -30.979 iterations 2
Cbc0038I Pass  42: suminf.    2.68135 (7) obj. -30.979 iterations 6
Cbc0038I Pass  43: suminf.    2.08366 (7) obj. -30.979 iterations 3
Cbc0038I Pass  44: suminf.    2.02126 (7) obj. -30.979 iterations 3
Cbc0038I Pass  45: suminf.    2.93186 (7) obj. -30.979 iterations 7
Cbc0038I Pass  46: suminf.    2.77537 (7) obj. -30.979 iterations 2
Cbc0038I Pass  47: suminf.    2.68135 (7) obj. -30.979 iterations 6
Cbc0038I Pass  48: suminf.    2.08366 (7) obj. -30.979 iterations 3
Cbc0038I Pass  49: suminf.    2.02126 (7) obj. -30.979 iterations 3
Cbc0038I Pass  50: suminf.    2.93186 (7) obj. -30.979 iterations 7
Cbc0038I Pass  51: suminf.    2.77537 (7) obj. -30.979 iterations 2
Cbc0038I Pass  52: suminf.    2.68135 (7) obj. -30.979 iterations 6
Cbc0038I Pass  53: suminf.    2.08366 (7) obj. -30.979 iterations 3
Cbc0038I Pass  54: suminf.    2.02126 (7) obj. -30.979 iterations 3
Cbc0038I Pass  55: suminf.    2.93186 (7) obj. -30.979 iterations 7
Cbc0038I Pass  56: suminf.    2.77537 (7) obj. -30.979 iterations 2
Cbc0038I Pass  57: suminf.    2.68135 (7) obj. -30.979 iterations 6
Cbc0038I Pass  58: suminf.    2.08366 (7) obj. -30.979 iterations 3
Cbc0038I Pass  59: suminf.    2.02126 (7) obj. -30.979 iterations 3
Cbc0038I Pass  60: suminf.    2.93186 (7) obj. -30.979 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 92 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -23.873 - took 0.11 seconds
Cbc0012I Integer solution of -23.873 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 94 rows 56 columns
Cbc0012I Integer solution of -23.95457 found by RINS after 0 iterations and 0 nodes (0.19 seconds)
Cbc0031I 37 added rows had average density of 67.297297
Cbc0013I At root node, 37 cuts changed objective from -49.722522 to -42.862362 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24121 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.148 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2139 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.95457 best solution, best possible -42.862362 (1.69 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 20 rows 20 columns
Cbc0038I Full problem 179 rows 101 columns, reduced to 66 rows 42 columns
Cbc0012I Integer solution of -24.21044 found by rounding after 16081 iterations and 118 nodes (2.29 seconds)
Cbc0012I Integer solution of -24.46188 found by rounding after 16083 iterations and 119 nodes (2.29 seconds)
Cbc0010I After 187 nodes, 3 on tree, -24.46188 best solution, best possible -39.811896 (2.39 seconds)
Cbc0001I Search completed - best objective -24.46188000000001, took 17467 iterations and 200 nodes (2.42 seconds)
Cbc0032I Strong branching done 1698 times (29932 iterations), fathomed 25 nodes and fixed 131 variables
Cbc0035I Maximum depth 37, 605 variables fixed on reduced cost
Total time (CPU seconds):       2.36   (Wallclock seconds):       2.44

