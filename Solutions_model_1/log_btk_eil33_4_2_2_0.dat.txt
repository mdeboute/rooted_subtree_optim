Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-27) rows, 25 (-10) columns and 127 (-68) elements
Clp1000I sum of infeasibilities 9.00296e-06 - average 2.14356e-07, 2 fixed columns
Coin0506I Presolve 36 (-6) rows, 23 (-2) columns and 111 (-16) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 82.619421
Clp0000I Optimal - objective value 82.619421
Coin0511I After Postsolve, objective 82.619421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.619421
Clp0000I Optimal - objective value 82.619421
Clp0000I Optimal - objective value 82.619421
Coin0511I After Postsolve, objective 82.619421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.61942087 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 128 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.294%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.50545
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.2076 iterations 15
Cbc0038I Solution found of 0.2076
Cbc0038I Relaxing continuous gives 0.2076
Cbc0038I Rounding solution of -5.1924 is better than previous of 0.2076

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -12.9352
Cbc0038I Pass   2: suminf.    0.38575 (2) obj. -12.9352 iterations 3
Cbc0038I Pass   3: suminf.    0.25209 (1) obj. -12.9352 iterations 3
Cbc0038I Pass   4: suminf.    0.45219 (1) obj. -12.9352 iterations 2
Cbc0038I Pass   5: suminf.    0.63545 (3) obj. -12.9352 iterations 7
Cbc0038I Pass   6: suminf.    0.17885 (1) obj. -12.9352 iterations 6
Cbc0038I Pass   7: suminf.    0.09845 (2) obj. -12.9352 iterations 3
Cbc0038I Pass   8: suminf.    0.32966 (5) obj. -12.9352 iterations 10
Cbc0038I Pass   9: suminf.    0.18385 (2) obj. -12.9352 iterations 4
Cbc0038I Pass  10: suminf.    0.71209 (2) obj. -12.9352 iterations 6
Cbc0038I Pass  11: suminf.    0.48859 (2) obj. -12.9352 iterations 8
Cbc0038I Pass  12: suminf.    0.10851 (1) obj. -12.9352 iterations 5
Cbc0038I Pass  13: suminf.    0.38575 (2) obj. -12.9352 iterations 3
Cbc0038I Pass  14: suminf.    0.25209 (1) obj. -12.9352 iterations 3
Cbc0038I Pass  15: suminf.    0.45219 (1) obj. -12.9352 iterations 2
Cbc0038I Pass  16: suminf.    0.77528 (3) obj. -12.9352 iterations 4
Cbc0038I Pass  17: suminf.    0.46000 (1) obj. -12.9352 iterations 2
Cbc0038I Pass  18: suminf.    0.08820 (1) obj. -12.9352 iterations 2
Cbc0038I Pass  19: suminf.    0.32261 (1) obj. -12.9352 iterations 1
Cbc0038I Pass  20: suminf.    0.52889 (3) obj. -12.9352 iterations 15
Cbc0038I Pass  21: suminf.    0.19132 (1) obj. -12.9352 iterations 4
Cbc0038I Pass  22: suminf.    0.52648 (2) obj. -12.9352 iterations 2
Cbc0038I Pass  23: suminf.    0.47897 (2) obj. -12.9352 iterations 1
Cbc0038I Pass  24: suminf.    0.47440 (3) obj. -12.9352 iterations 1
Cbc0038I Pass  25: suminf.    0.34828 (2) obj. -12.9352 iterations 3
Cbc0038I Pass  26: suminf.    0.50661 (2) obj. -12.9352 iterations 2
Cbc0038I Pass  27: suminf.    0.62944 (2) obj. -12.9352 iterations 4
Cbc0038I Pass  28: suminf.    0.33419 (1) obj. -12.9352 iterations 5
Cbc0038I Pass  29: suminf.    0.33419 (1) obj. -12.9352 iterations 0
Cbc0038I Pass  30: suminf.    0.45885 (1) obj. -12.9352 iterations 1
Cbc0038I Pass  31: suminf.    0.61505 (2) obj. -12.9352 iterations 5
Cbc0038I Rounding solution of -13.6479 is better than previous of -5.1924

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4423
Cbc0038I Pass  31: suminf.    0.72534 (4) obj. -27.4423 iterations 4
Cbc0038I Pass  32: suminf.    0.68376 (3) obj. -27.4423 iterations 1
Cbc0038I Pass  33: suminf.    0.36472 (2) obj. -27.4423 iterations 6
Cbc0038I Pass  34: suminf.    1.22235 (4) obj. -27.4423 iterations 10
Cbc0038I Pass  35: suminf.    1.10884 (3) obj. -27.4423 iterations 2
Cbc0038I Pass  36: suminf.    0.59616 (2) obj. -27.4423 iterations 5
Cbc0038I Pass  37: suminf.    0.59616 (2) obj. -27.4423 iterations 0
Cbc0038I Pass  38: suminf.    0.87103 (2) obj. -27.4423 iterations 5
Cbc0038I Pass  39: suminf.    1.37216 (4) obj. -27.4423 iterations 7
Cbc0038I Pass  40: suminf.    0.84341 (2) obj. -27.4423 iterations 3
Cbc0038I Pass  41: suminf.    0.71667 (2) obj. -27.4423 iterations 4
Cbc0038I Pass  42: suminf.    0.71667 (2) obj. -27.4423 iterations 0
Cbc0038I Pass  43: suminf.    0.50675 (2) obj. -27.4423 iterations 1
Cbc0038I Pass  44: suminf.    1.16470 (4) obj. -27.4423 iterations 8
Cbc0038I Pass  45: suminf.    0.18756 (2) obj. -27.4423 iterations 8
Cbc0038I Pass  46: suminf.    1.24517 (3) obj. -27.4423 iterations 4
Cbc0038I Pass  47: suminf.    0.51016 (2) obj. -27.4423 iterations 1
Cbc0038I Pass  48: suminf.    1.13521 (4) obj. -27.4423 iterations 17
Cbc0038I Pass  49: suminf.    0.97366 (4) obj. -27.4423 iterations 5
Cbc0038I Pass  50: suminf.    0.59992 (2) obj. -27.4423 iterations 4
Cbc0038I Pass  51: suminf.    0.48958 (2) obj. -27.4423 iterations 2
Cbc0038I Pass  52: suminf.    0.46633 (1) obj. -27.4423 iterations 2
Cbc0038I Pass  53: suminf.    0.47933 (2) obj. -27.4423 iterations 2
Cbc0038I Pass  54: suminf.    0.54122 (2) obj. -27.4423 iterations 4
Cbc0038I Pass  55: suminf.    0.54122 (2) obj. -27.4423 iterations 0
Cbc0038I Pass  56: suminf.    0.75077 (2) obj. -27.4423 iterations 1
Cbc0038I Pass  57: suminf.    1.51813 (5) obj. -27.4423 iterations 13
Cbc0038I Pass  58: suminf.    0.73487 (4) obj. -27.4423 iterations 3
Cbc0038I Pass  59: suminf.    0.90138 (3) obj. -27.4423 iterations 6
Cbc0038I Pass  60: suminf.    0.90138 (3) obj. -27.4423 iterations 0
Cbc0038I Rounding solution of -13.9218 is better than previous of -13.6479

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -43.9954
Cbc0038I Pass  60: suminf.    1.27352 (4) obj. -43.9954 iterations 0
Cbc0038I Pass  61: suminf.    0.71463 (3) obj. -43.9954 iterations 5
Cbc0038I Pass  62: suminf.    0.71463 (3) obj. -43.9954 iterations 2
Cbc0038I Pass  63: suminf.    0.71463 (3) obj. -43.9954 iterations 2
Cbc0038I Pass  64: suminf.    1.43473 (13) obj. -43.9954 iterations 9
Cbc0038I Pass  65: suminf.    1.13478 (6) obj. -43.9954 iterations 5
Cbc0038I Pass  66: suminf.    1.44554 (4) obj. -43.9954 iterations 9
Cbc0038I Pass  67: suminf.    0.73748 (3) obj. -43.9954 iterations 4
Cbc0038I Pass  68: suminf.    1.25395 (4) obj. -43.9954 iterations 5
Cbc0038I Pass  69: suminf.    1.10934 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  70: suminf.    0.99148 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  71: suminf.    1.34063 (3) obj. -43.9954 iterations 5
Cbc0038I Pass  72: suminf.    0.73748 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  73: suminf.    1.25395 (4) obj. -43.9954 iterations 5
Cbc0038I Pass  74: suminf.    1.10934 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  75: suminf.    0.99148 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  76: suminf.    1.34063 (3) obj. -43.9954 iterations 5
Cbc0038I Pass  77: suminf.    0.73748 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  78: suminf.    1.25395 (4) obj. -43.9954 iterations 5
Cbc0038I Pass  79: suminf.    1.10934 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  80: suminf.    0.99148 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  81: suminf.    1.34063 (3) obj. -43.9954 iterations 5
Cbc0038I Pass  82: suminf.    0.73748 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  83: suminf.    1.25395 (4) obj. -43.9954 iterations 5
Cbc0038I Pass  84: suminf.    1.10934 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  85: suminf.    0.99148 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  86: suminf.    1.34063 (3) obj. -43.9954 iterations 5
Cbc0038I Pass  87: suminf.    0.73748 (3) obj. -43.9954 iterations 1
Cbc0038I Pass  88: suminf.    1.25395 (4) obj. -43.9954 iterations 5
Cbc0038I Pass  89: suminf.    1.10934 (3) obj. -43.9954 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -13.9218 - took 0.06 seconds
Cbc0012I Integer solution of -13.92181 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 30 rows 19 columns
Cbc0031I 10 added rows had average density of 24.8
Cbc0013I At root node, 10 cuts changed objective from -82.619421 to -53.254955 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1054 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 746 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -31.0023 found by DiveCoefficient after 1843 iterations and 3 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -31.00230000000001, took 2132 iterations and 6 nodes (0.24 seconds)
Cbc0032I Strong branching done 108 times (1044 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

