Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 5.61728e-06 - average 1.14638e-07, 2 fixed columns
Coin0506I Presolve 45 (-4) rows, 27 (-2) columns and 136 (-12) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Coin0511I After Postsolve, objective 61.621915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Coin0511I After Postsolve, objective 61.621915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.62191544 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.325%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.96571
Cbc0038I Solution found of 5.71668
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 0 to -38.5556 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.7852
Cbc0038I Pass   1: suminf.    1.92664 (5) obj. -40.7852 iterations 21
Cbc0038I Pass   2: suminf.    0.04065 (1) obj. -42.6883 iterations 8
Cbc0038I Pass   3: suminf.    0.12986 (1) obj. -40.7852 iterations 3
Cbc0038I Pass   4: suminf.    1.39992 (6) obj. -40.7852 iterations 11
Cbc0038I Pass   5: suminf.    1.13795 (4) obj. -40.7852 iterations 1
Cbc0038I Pass   6: suminf.    0.73216 (4) obj. -40.7852 iterations 5
Cbc0038I Pass   7: suminf.    0.73216 (4) obj. -40.7852 iterations 0
Cbc0038I Pass   8: suminf.    0.52973 (2) obj. -40.7852 iterations 11
Cbc0038I Pass   9: suminf.    0.27642 (1) obj. -45.4607 iterations 3
Cbc0038I Pass  10: suminf.    0.39529 (1) obj. -40.7852 iterations 1
Cbc0038I Pass  11: suminf.    0.54759 (2) obj. -40.7852 iterations 4
Cbc0038I Pass  12: suminf.    0.54759 (2) obj. -40.7852 iterations 2
Cbc0038I Pass  13: suminf.    1.09806 (5) obj. -40.7852 iterations 10
Cbc0038I Pass  14: suminf.    0.77139 (3) obj. -40.7852 iterations 4
Cbc0038I Pass  15: suminf.    0.72585 (2) obj. -40.7852 iterations 2
Cbc0038I Pass  16: suminf.    0.72585 (2) obj. -40.7852 iterations 0
Cbc0038I Pass  17: suminf.    0.89711 (2) obj. -44.3031 iterations 1
Cbc0038I Pass  18: suminf.    0.75294 (4) obj. -40.7852 iterations 8
Cbc0038I Pass  19: suminf.    0.40427 (3) obj. -40.7852 iterations 4
Cbc0038I Pass  20: suminf.    0.50920 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  21: suminf.    0.35330 (1) obj. -40.7852 iterations 2
Cbc0038I Pass  22: suminf.    0.35772 (1) obj. -40.9593 iterations 1
Cbc0038I Pass  23: suminf.    0.71797 (3) obj. -40.7852 iterations 8
Cbc0038I Pass  24: suminf.    0.71797 (3) obj. -40.7852 iterations 1
Cbc0038I Pass  25: suminf.    1.04262 (3) obj. -40.7852 iterations 6
Cbc0038I Pass  26: suminf.    0.87104 (3) obj. -40.7852 iterations 2
Cbc0038I Pass  27: suminf.    0.92940 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  28: suminf.    0.68123 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  29: suminf.    1.32401 (4) obj. -40.7852 iterations 10
Cbc0038I Pass  30: suminf.    0.78007 (5) obj. -40.7852 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -38.5556 - took 0.05 seconds
Cbc0012I Integer solution of -38.55558 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 33 rows 20 columns
Cbc0031I 12 added rows had average density of 18.833333
Cbc0013I At root node, 12 cuts changed objective from -60.850874 to -52.5204 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1113 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 438 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -39.3334 found by DiveCoefficient after 2596 iterations and 10 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -39.3334, took 2700 iterations and 14 nodes (0.22 seconds)
Cbc0032I Strong branching done 146 times (1521 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.22

