Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 50 (-3) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 0.000379591 - average 4.31353e-06, 7 fixed columns
Coin0506I Presolve 76 (-12) rows, 43 (-7) columns and 230 (-38) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 40.391567
Clp0000I Optimal - objective value 40.391567
Coin0511I After Postsolve, objective 40.391567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.391567
Clp0000I Optimal - objective value 40.391567
Clp0000I Optimal - objective value 40.391567
Coin0511I After Postsolve, objective 40.391567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.39156674 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 50 columns (49 integer (49 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.703%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.94015
Cbc0038I Pass   1: suminf.    0.33333 (1) obj. -13.8528 iterations 26
Cbc0038I Solution found of -10.535
Cbc0038I Relaxing continuous gives -10.535
Cbc0038I Rounding solution of -12.6771 is better than previous of -10.535

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 50 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12.6771 to -14.3911 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.9912
Cbc0038I Pass   2: suminf.    0.37552 (3) obj. -16.9912 iterations 2
Cbc0038I Pass   3: suminf.    0.76516 (3) obj. -16.9912 iterations 9
Cbc0038I Pass   4: suminf.    0.33750 (1) obj. -16.9912 iterations 4
Cbc0038I Pass   5: suminf.    0.50938 (2) obj. -16.9912 iterations 2
Cbc0038I Pass   6: suminf.    1.43165 (5) obj. -16.9912 iterations 9
Cbc0038I Pass   7: suminf.    0.54694 (6) obj. -16.9912 iterations 9
Cbc0038I Pass   8: suminf.    0.54694 (6) obj. -16.9912 iterations 0
Cbc0038I Pass   9: suminf.    1.42112 (4) obj. -16.9912 iterations 7
Cbc0038I Pass  10: suminf.    1.26009 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  11: suminf.    1.76779 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  12: suminf.    1.12620 (6) obj. -16.9912 iterations 3
Cbc0038I Pass  13: suminf.    1.10570 (5) obj. -16.9912 iterations 1
Cbc0038I Pass  14: suminf.    1.42112 (4) obj. -16.9912 iterations 4
Cbc0038I Pass  15: suminf.    1.26009 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  16: suminf.    1.76779 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  17: suminf.    1.12620 (6) obj. -16.9912 iterations 3
Cbc0038I Pass  18: suminf.    1.10570 (5) obj. -16.9912 iterations 1
Cbc0038I Pass  19: suminf.    1.42112 (4) obj. -16.9912 iterations 4
Cbc0038I Pass  20: suminf.    1.26009 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  21: suminf.    1.76779 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  22: suminf.    1.12620 (6) obj. -16.9912 iterations 3
Cbc0038I Pass  23: suminf.    1.10570 (5) obj. -16.9912 iterations 1
Cbc0038I Pass  24: suminf.    1.42112 (4) obj. -16.9912 iterations 4
Cbc0038I Pass  25: suminf.    1.26009 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  26: suminf.    1.76779 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  27: suminf.    1.12620 (6) obj. -16.9912 iterations 3
Cbc0038I Pass  28: suminf.    1.10570 (5) obj. -16.9912 iterations 1
Cbc0038I Pass  29: suminf.    1.42112 (4) obj. -16.9912 iterations 4
Cbc0038I Pass  30: suminf.    1.26009 (4) obj. -16.9912 iterations 3
Cbc0038I Pass  31: suminf.    1.76779 (4) obj. -16.9912 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 50 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14.3911 - took 0.03 seconds
Cbc0012I Integer solution of -14.391101 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 88 rows 50 columns, reduced to 40 rows 24 columns
Cbc0031I 17 added rows had average density of 36.352941
Cbc0013I At root node, 17 cuts changed objective from -40.391567 to -26.125556 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6118 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1042 row cuts average 49.5 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0012I Integer solution of -14.428091 found by DiveCoefficient after 4805 iterations and 6 nodes (0.47 seconds)
Cbc0004I Integer solution of -15.053372 found after 4896 iterations and 13 nodes (0.48 seconds)
Cbc0001I Search completed - best objective -15.05337206, took 5595 iterations and 40 nodes (0.54 seconds)
Cbc0032I Strong branching done 342 times (4031 iterations), fathomed 2 nodes and fixed 17 variables
Cbc0035I Maximum depth 8, 48 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.54

