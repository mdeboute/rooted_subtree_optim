Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 5.61968e-07 - average 6.53451e-09, 0 fixed columns
Coin0506I Presolve 86 (0) rows, 51 (0) columns and 266 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 35.57413
Clp0000I Optimal - objective value 35.57413
Coin0511I After Postsolve, objective 35.57413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.57413
Clp0000I Optimal - objective value 35.57413
Clp0000I Optimal - objective value 35.57413
Coin0511I After Postsolve, objective 35.57413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.57413 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.81389
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.42064 iterations 39
Cbc0038I Solution found of 7.42064
Cbc0038I Relaxing continuous gives 7.42064
Cbc0038I Rounding solution of -3.52059 is better than previous of 7.42064

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.52059 to -4.20443 (0.05 seconds)
Cbc0038I Round again with cutoff of -7.34149
Cbc0038I Pass   2: suminf.    2.01979 (8) obj. -7.34149 iterations 14
Cbc0038I Pass   3: suminf.    1.60743 (4) obj. -7.34149 iterations 13
Cbc0038I Pass   4: suminf.    1.05044 (8) obj. -7.34149 iterations 7
Cbc0038I Pass   5: suminf.    0.97126 (3) obj. -7.34149 iterations 7
Cbc0038I Pass   6: suminf.    0.95487 (3) obj. -7.34149 iterations 3
Cbc0038I Pass   7: suminf.    0.94421 (3) obj. -7.34149 iterations 1
Cbc0038I Pass   8: suminf.    0.87366 (3) obj. -7.34149 iterations 2
Cbc0038I Pass   9: suminf.    0.80173 (4) obj. -7.34149 iterations 2
Cbc0038I Pass  10: suminf.    1.47599 (11) obj. -7.34149 iterations 10
Cbc0038I Pass  11: suminf.    1.22751 (12) obj. -7.34149 iterations 2
Cbc0038I Pass  12: suminf.    1.17875 (7) obj. -7.34149 iterations 11
Cbc0038I Pass  13: suminf.    1.13805 (5) obj. -7.34149 iterations 5
Cbc0038I Pass  14: suminf.    1.32402 (4) obj. -7.34149 iterations 9
Cbc0038I Pass  15: suminf.    1.29630 (3) obj. -7.34149 iterations 1
Cbc0038I Pass  16: suminf.    1.30539 (5) obj. -7.34149 iterations 4
Cbc0038I Pass  17: suminf.    1.30539 (5) obj. -7.34149 iterations 0
Cbc0038I Pass  18: suminf.    2.01079 (5) obj. -7.34149 iterations 3
Cbc0038I Pass  19: suminf.    1.54067 (6) obj. -7.34149 iterations 1
Cbc0038I Pass  20: suminf.    1.49815 (5) obj. -7.34149 iterations 1
Cbc0038I Pass  21: suminf.    1.31277 (4) obj. -7.34149 iterations 6
Cbc0038I Pass  22: suminf.    1.13981 (4) obj. -7.34149 iterations 4
Cbc0038I Pass  23: suminf.    1.72905 (4) obj. -7.34149 iterations 2
Cbc0038I Pass  24: suminf.    1.66386 (4) obj. -7.34149 iterations 8
Cbc0038I Pass  25: suminf.    0.60828 (2) obj. -7.34149 iterations 6
Cbc0038I Pass  26: suminf.    0.51578 (2) obj. -7.34149 iterations 1
Cbc0038I Pass  27: suminf.    0.44580 (2) obj. -7.34149 iterations 3
Cbc0038I Pass  28: suminf.    0.38823 (2) obj. -7.34149 iterations 1
Cbc0038I Pass  29: suminf.    0.70366 (3) obj. -7.34149 iterations 3
Cbc0038I Pass  30: suminf.    0.70366 (3) obj. -7.34149 iterations 0
Cbc0038I Pass  31: suminf.    0.81574 (5) obj. -7.34149 iterations 5
Cbc0038I Rounding solution of -4.30452 is better than previous of -4.20443

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -4.30452 to -5.44503 (0.11 seconds)
Cbc0038I Round again with cutoff of -12.988
Cbc0038I Pass  31: suminf.    3.00521 (14) obj. -12.988 iterations 2
Cbc0038I Pass  32: suminf.    2.37879 (6) obj. -12.988 iterations 14
Cbc0038I Pass  33: suminf.    2.03615 (8) obj. -12.988 iterations 5
Cbc0038I Pass  34: suminf.    1.95263 (9) obj. -12.988 iterations 1
Cbc0038I Pass  35: suminf.    2.25481 (7) obj. -12.988 iterations 11
Cbc0038I Pass  36: suminf.    1.50771 (5) obj. -12.988 iterations 5
Cbc0038I Pass  37: suminf.    1.98313 (5) obj. -12.988 iterations 6
Cbc0038I Pass  38: suminf.    1.42133 (5) obj. -12.988 iterations 1
Cbc0038I Pass  39: suminf.    2.11331 (5) obj. -12.988 iterations 3
Cbc0038I Pass  40: suminf.    1.64319 (6) obj. -12.988 iterations 1
Cbc0038I Pass  41: suminf.    1.60257 (6) obj. -12.988 iterations 2
Cbc0038I Pass  42: suminf.    2.00216 (6) obj. -12.988 iterations 8
Cbc0038I Pass  43: suminf.    1.40972 (4) obj. -12.988 iterations 4
Cbc0038I Pass  44: suminf.    1.38412 (4) obj. -12.988 iterations 1
Cbc0038I Pass  45: suminf.    1.42133 (5) obj. -12.988 iterations 3
Cbc0038I Pass  46: suminf.    1.42133 (5) obj. -12.988 iterations 0
Cbc0038I Pass  47: suminf.    2.11331 (5) obj. -12.988 iterations 3
Cbc0038I Pass  48: suminf.    1.64319 (6) obj. -12.988 iterations 1
Cbc0038I Pass  49: suminf.    1.60257 (6) obj. -12.988 iterations 2
Cbc0038I Pass  50: suminf.    2.00216 (6) obj. -12.988 iterations 8
Cbc0038I Pass  51: suminf.    1.40972 (4) obj. -12.988 iterations 4
Cbc0038I Pass  52: suminf.    1.38412 (4) obj. -12.988 iterations 1
Cbc0038I Pass  53: suminf.    1.42133 (5) obj. -12.988 iterations 3
Cbc0038I Pass  54: suminf.    1.42133 (5) obj. -12.988 iterations 0
Cbc0038I Pass  55: suminf.    2.11331 (5) obj. -12.988 iterations 3
Cbc0038I Pass  56: suminf.    1.64319 (6) obj. -12.988 iterations 1
Cbc0038I Pass  57: suminf.    1.60257 (6) obj. -12.988 iterations 2
Cbc0038I Pass  58: suminf.    2.00216 (6) obj. -12.988 iterations 8
Cbc0038I Pass  59: suminf.    1.40972 (4) obj. -12.988 iterations 4
Cbc0038I Pass  60: suminf.    1.38412 (4) obj. -12.988 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -5.44503 - took 0.15 seconds
Cbc0012I Integer solution of -5.44503 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 23 added rows had average density of 34.434783
Cbc0013I At root node, 23 cuts changed objective from -35.57413 to -27.709405 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11745 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2168 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.44503 best solution, best possible -27.709405 (0.74 seconds)
Cbc0004I Integer solution of -5.94375 found after 8102 iterations and 43 nodes (0.88 seconds)
Cbc0012I Integer solution of -6.58781 found by rounding after 8128 iterations and 45 nodes (0.88 seconds)
Cbc0004I Integer solution of -6.59934 found after 8262 iterations and 53 nodes (0.89 seconds)
Cbc0012I Integer solution of -7.03656 found by rounding after 8497 iterations and 60 nodes (0.90 seconds)
Cbc0012I Integer solution of -7.10949 found by rounding after 8602 iterations and 70 nodes (0.91 seconds)
Cbc0038I Full problem 86 rows 51 columns, reduced to 36 rows 24 columns
Cbc0001I Search completed - best objective -7.109490000000001, took 9102 iterations and 94 nodes (0.94 seconds)
Cbc0032I Strong branching done 864 times (13050 iterations), fathomed 10 nodes and fixed 50 variables
Cbc0035I Maximum depth 23, 114 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.95

