Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 32 (-3) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 2.6778e-05 - average 4.6169e-07, 3 fixed columns
Coin0506I Presolve 51 (-7) rows, 29 (-3) columns and 152 (-20) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 97.093264
Clp0000I Optimal - objective value 97.093264
Coin0511I After Postsolve, objective 97.093264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 97.093264
Clp0000I Optimal - objective value 97.093264
Clp0000I Optimal - objective value 97.093264
Coin0511I After Postsolve, objective 97.093264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.09326351 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 32 columns (31 integer (31 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.173%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.49299
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.5833 iterations 18
Cbc0038I Solution found of -14.5833
Cbc0038I Relaxing continuous gives -14.5833
Cbc0038I Rounding solution of -33.2937 is better than previous of -14.5833

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 41 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -33.2937 to -38.8243 (0.02 seconds)
Cbc0038I Round again with cutoff of -44.563
Cbc0038I Pass   2: suminf.    0.95926 (5) obj. -44.563 iterations 3
Cbc0038I Pass   3: suminf.    1.09849 (3) obj. -44.563 iterations 6
Cbc0038I Pass   4: suminf.    0.72980 (2) obj. -44.563 iterations 1
Cbc0038I Pass   5: suminf.    0.24991 (3) obj. -44.563 iterations 2
Cbc0038I Pass   6: suminf.    1.10978 (3) obj. -44.563 iterations 5
Cbc0038I Pass   7: suminf.    0.77789 (2) obj. -44.563 iterations 2
Cbc0038I Pass   8: suminf.    0.59498 (3) obj. -44.563 iterations 2
Cbc0038I Pass   9: suminf.    0.54722 (3) obj. -44.563 iterations 2
Cbc0038I Pass  10: suminf.    1.25875 (6) obj. -44.563 iterations 9
Cbc0038I Pass  11: suminf.    0.74326 (3) obj. -44.563 iterations 9
Cbc0038I Pass  12: suminf.    0.74326 (3) obj. -44.563 iterations 0
Cbc0038I Pass  13: suminf.    0.62139 (2) obj. -44.563 iterations 6
Cbc0038I Pass  14: suminf.    0.62139 (2) obj. -44.563 iterations 1
Cbc0038I Pass  15: suminf.    0.56865 (3) obj. -44.563 iterations 4
Cbc0038I Pass  16: suminf.    0.46149 (3) obj. -44.563 iterations 1
Cbc0038I Pass  17: suminf.    1.06192 (3) obj. -44.563 iterations 2
Cbc0038I Pass  18: suminf.    0.65166 (2) obj. -44.563 iterations 1
Cbc0038I Pass  19: suminf.    1.56300 (5) obj. -44.563 iterations 7
Cbc0038I Pass  20: suminf.    0.77789 (2) obj. -44.563 iterations 8
Cbc0038I Pass  21: suminf.    0.59498 (3) obj. -44.563 iterations 2
Cbc0038I Pass  22: suminf.    0.54722 (3) obj. -44.563 iterations 2
Cbc0038I Pass  23: suminf.    1.25875 (6) obj. -44.563 iterations 9
Cbc0038I Pass  24: suminf.    0.74326 (3) obj. -44.563 iterations 9
Cbc0038I Pass  25: suminf.    0.74326 (3) obj. -44.563 iterations 0
Cbc0038I Pass  26: suminf.    0.62139 (2) obj. -44.563 iterations 6
Cbc0038I Pass  27: suminf.    0.62139 (2) obj. -44.563 iterations 1
Cbc0038I Pass  28: suminf.    0.56865 (3) obj. -44.563 iterations 4
Cbc0038I Pass  29: suminf.    0.46149 (3) obj. -44.563 iterations 1
Cbc0038I Pass  30: suminf.    1.06192 (3) obj. -44.563 iterations 2
Cbc0038I Pass  31: suminf.    0.65166 (2) obj. -44.563 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 41 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.8243 - took 0.03 seconds
Cbc0012I Integer solution of -38.82427 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 58 rows 32 columns, reduced to 41 rows 22 columns
Cbc0031I 7 added rows had average density of 24.714286
Cbc0013I At root node, 7 cuts changed objective from -96.210264 to -66.500596 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2010 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 656 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0012I Integer solution of -38.975244 found by rounding after 2577 iterations and 8 nodes (0.29 seconds)
Cbc0012I Integer solution of -41.150374 found by DiveCoefficient after 2599 iterations and 9 nodes (0.29 seconds)
Cbc0004I Integer solution of -43.4033 found after 2607 iterations and 10 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -43.40329999999999, took 2744 iterations and 16 nodes (0.30 seconds)
Cbc0032I Strong branching done 234 times (2344 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 7, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.30

