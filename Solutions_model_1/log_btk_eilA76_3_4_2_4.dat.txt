Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 7.10787e-05 - average 5.18823e-07, 19 fixed columns
Coin0506I Presolve 100 (-37) rows, 56 (-19) columns and 304 (-112) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 2.167029 - largest nonzero change 0 ( 0%) - largest zero change 1.9498817e-05
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Coin0511I After Postsolve, objective 38.540995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Coin0511I After Postsolve, objective 38.540995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.54099525 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.307%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.82357
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.27084 iterations 42
Cbc0038I Solution found of -0.27084
Cbc0038I Relaxing continuous gives -0.27084
Cbc0038I Rounding solution of -7.72516 is better than previous of -0.27084

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 52 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.72516 to -13.8188 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.2812
Cbc0038I Pass   2: suminf.    1.70638 (9) obj. -16.2812 iterations 12
Cbc0038I Pass   3: suminf.    1.52541 (6) obj. -16.2812 iterations 13
Cbc0038I Pass   4: suminf.    1.25763 (5) obj. -16.2812 iterations 6
Cbc0038I Pass   5: suminf.    2.22670 (6) obj. -16.2812 iterations 16
Cbc0038I Pass   6: suminf.    1.68731 (6) obj. -16.2812 iterations 1
Cbc0038I Pass   7: suminf.    1.68731 (6) obj. -16.2812 iterations 0
Cbc0038I Pass   8: suminf.    1.72144 (5) obj. -16.2812 iterations 5
Cbc0038I Pass   9: suminf.    1.13398 (5) obj. -16.2812 iterations 7
Cbc0038I Pass  10: suminf.    0.85834 (3) obj. -16.2812 iterations 6
Cbc0038I Pass  11: suminf.    1.65388 (6) obj. -16.2812 iterations 8
Cbc0038I Pass  12: suminf.    1.39697 (4) obj. -16.2812 iterations 6
Cbc0038I Pass  13: suminf.    1.00607 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  14: suminf.    0.99923 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  15: suminf.    2.21826 (6) obj. -16.2812 iterations 25
Cbc0038I Pass  16: suminf.    1.41423 (5) obj. -16.2812 iterations 9
Cbc0038I Pass  17: suminf.    1.24294 (5) obj. -16.2812 iterations 6
Cbc0038I Pass  18: suminf.    1.92180 (9) obj. -16.2812 iterations 11
Cbc0038I Pass  19: suminf.    1.92180 (9) obj. -16.2812 iterations 0
Cbc0038I Pass  20: suminf.    1.03555 (5) obj. -16.2812 iterations 15
Cbc0038I Pass  21: suminf.    0.85834 (3) obj. -16.2812 iterations 2
Cbc0038I Pass  22: suminf.    1.65388 (6) obj. -16.2812 iterations 7
Cbc0038I Pass  23: suminf.    1.39697 (4) obj. -16.2812 iterations 5
Cbc0038I Pass  24: suminf.    1.00607 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  25: suminf.    0.99923 (4) obj. -16.2812 iterations 1
Cbc0038I Pass  26: suminf.    1.67372 (7) obj. -16.2812 iterations 18
Cbc0038I Pass  27: suminf.    1.21112 (6) obj. -16.2812 iterations 9
Cbc0038I Pass  28: suminf.    1.45706 (5) obj. -16.2812 iterations 15
Cbc0038I Pass  29: suminf.    1.38878 (8) obj. -16.2812 iterations 5
Cbc0038I Pass  30: suminf.    1.43914 (5) obj. -16.2812 iterations 14
Cbc0038I Pass  31: suminf.    1.25926 (6) obj. -16.2812 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 59 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13.8188 - took 0.04 seconds
Cbc0012I Integer solution of -13.81878 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 52 rows 31 columns
Cbc0031I 18 added rows had average density of 59.055556
Cbc0013I At root node, 18 cuts changed objective from -38.442175 to -30.089853 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7010 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1588 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 7 nodes, 8 on tree, -13.81878 best solution, best possible -30.089853 (0.69 seconds)
Cbc0016I Integer solution of -15.44523 found by strong branching after 6027 iterations and 16 nodes (0.71 seconds)
Cbc0001I Search completed - best objective -15.44523, took 6416 iterations and 26 nodes (0.72 seconds)
Cbc0032I Strong branching done 410 times (7055 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 11, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

