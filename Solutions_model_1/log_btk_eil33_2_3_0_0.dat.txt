Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 32 (-3) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 8.71781e-05 - average 1.50307e-06, 7 fixed columns
Coin0506I Presolve 38 (-20) rows, 22 (-10) columns and 113 (-59) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Coin0511I After Postsolve, objective 81.794541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Clp0000I Optimal - objective value 81.794541
Coin0511I After Postsolve, objective 81.794541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.79454095 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 32 columns (31 integer (31 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.029%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.35849
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.560052 iterations 21
Cbc0038I Solution found of 0.560052
Cbc0038I Relaxing continuous gives 0.560052
Cbc0038I Rounding solution of -23.4216 is better than previous of 0.560052

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -23.4216 to -34.3296 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.0333
Cbc0038I Pass   2: suminf.    1.62240 (5) obj. -39.0333 iterations 6
Cbc0038I Pass   3: suminf.    1.30651 (4) obj. -39.0333 iterations 6
Cbc0038I Pass   4: suminf.    1.30651 (4) obj. -39.0333 iterations 0
Cbc0038I Pass   5: suminf.    1.34330 (4) obj. -39.0333 iterations 2
Cbc0038I Pass   6: suminf.    0.71603 (2) obj. -39.0333 iterations 3
Cbc0038I Pass   7: suminf.    0.92096 (2) obj. -39.0333 iterations 5
Cbc0038I Pass   8: suminf.    0.82770 (2) obj. -39.0333 iterations 2
Cbc0038I Pass   9: suminf.    0.71743 (2) obj. -39.0333 iterations 4
Cbc0038I Pass  10: suminf.    1.93861 (6) obj. -39.0333 iterations 12
Cbc0038I Pass  11: suminf.    1.50813 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  12: suminf.    0.86230 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  13: suminf.    0.81740 (4) obj. -39.0333 iterations 2
Cbc0038I Pass  14: suminf.    0.85373 (3) obj. -39.0333 iterations 4
Cbc0038I Pass  15: suminf.    0.74796 (3) obj. -39.0333 iterations 1
Cbc0038I Pass  16: suminf.    0.94095 (5) obj. -39.0333 iterations 3
Cbc0038I Pass  17: suminf.    0.74796 (3) obj. -39.0333 iterations 4
Cbc0038I Pass  18: suminf.    1.97335 (6) obj. -39.0333 iterations 9
Cbc0038I Pass  19: suminf.    1.10631 (5) obj. -39.0333 iterations 3
Cbc0038I Pass  20: suminf.    0.98416 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  21: suminf.    0.95412 (3) obj. -39.0333 iterations 3
Cbc0038I Pass  22: suminf.    0.72495 (4) obj. -39.0333 iterations 4
Cbc0038I Pass  23: suminf.    1.01065 (3) obj. -39.0333 iterations 5
Cbc0038I Pass  24: suminf.    0.60887 (3) obj. -39.0333 iterations 3
Cbc0038I Pass  25: suminf.    0.88351 (3) obj. -39.0333 iterations 11
Cbc0038I Pass  26: suminf.    0.53999 (3) obj. -39.0333 iterations 6
Cbc0038I Pass  27: suminf.    1.25561 (5) obj. -39.0333 iterations 5
Cbc0038I Pass  28: suminf.    1.17687 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  29: suminf.    0.62886 (4) obj. -39.0333 iterations 3
Cbc0038I Pass  30: suminf.    0.54311 (4) obj. -39.0333 iterations 1
Cbc0038I Pass  31: suminf.    0.92516 (3) obj. -39.0333 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -34.3296 to -37.4061 (0.03 seconds)
Cbc0038I Round again with cutoff of -47.4996
Cbc0038I Pass  31: suminf.    2.08686 (7) obj. -47.4996 iterations 1
Cbc0038I Pass  32: suminf.    0.53928 (2) obj. -47.4996 iterations 8
Cbc0038I Pass  33: suminf.    0.53928 (2) obj. -47.4996 iterations 0
Cbc0038I Pass  34: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  35: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  36: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  37: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  38: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  39: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  40: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  41: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  42: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  43: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  44: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  45: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  46: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  47: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  48: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  49: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  50: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  51: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  52: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  53: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  54: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  55: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I Pass  56: suminf.    0.76183 (3) obj. -47.4996 iterations 1
Cbc0038I Pass  57: suminf.    0.73115 (2) obj. -47.4996 iterations 1
Cbc0038I Pass  58: suminf.    0.53928 (2) obj. -47.4996 iterations 2
Cbc0038I Pass  59: suminf.    1.10420 (3) obj. -47.4996 iterations 2
Cbc0038I Pass  60: suminf.    1.10420 (3) obj. -47.4996 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -37.4061 - took 0.03 seconds
Cbc0012I Integer solution of -37.40606 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 58 rows 32 columns, reduced to 34 rows 20 columns
Cbc0031I 12 added rows had average density of 25
Cbc0013I At root node, 12 cuts changed objective from -81.365038 to -59.983005 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1450 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 551 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -38.438898 found by rounding after 3229 iterations and 9 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -38.43889799999999, took 3410 iterations and 18 nodes (0.31 seconds)
Cbc0032I Strong branching done 216 times (2438 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

