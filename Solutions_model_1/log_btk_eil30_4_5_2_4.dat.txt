Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 161 (-16) elements
Clp1000I sum of infeasibilities 4.22984e-05 - average 7.83303e-07, 0 fixed columns
Coin0506I Presolve 54 (0) rows, 30 (0) columns and 161 (0) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 69.561897
Clp0000I Optimal - objective value 69.561897
Coin0511I After Postsolve, objective 69.561897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.561897
Clp0000I Optimal - objective value 69.561897
Clp0000I Optimal - objective value 69.561897
Coin0511I After Postsolve, objective 69.561897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.56189716 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.060%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.90376
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.6375 iterations 28
Cbc0038I Solution found of -3.6375
Cbc0038I Relaxing continuous gives -3.6375
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -3.6375 to -16.5875 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.8962
Cbc0038I Pass   2: suminf.    0.93305 (7) obj. -21.8962 iterations 6
Cbc0038I Pass   3: suminf.    0.68773 (4) obj. -21.8962 iterations 7
Cbc0038I Pass   4: suminf.    0.68773 (4) obj. -21.8962 iterations 0
Cbc0038I Pass   5: suminf.    1.28737 (3) obj. -21.8962 iterations 6
Cbc0038I Pass   6: suminf.    1.04098 (5) obj. -21.8962 iterations 2
Cbc0038I Pass   7: suminf.    1.23284 (3) obj. -21.8962 iterations 6
Cbc0038I Pass   8: suminf.    1.21109 (3) obj. -21.8962 iterations 1
Cbc0038I Pass   9: suminf.    1.29175 (3) obj. -21.8962 iterations 3
Cbc0038I Pass  10: suminf.    0.72624 (4) obj. -21.8962 iterations 1
Cbc0038I Pass  11: suminf.    0.68179 (4) obj. -21.8962 iterations 3
Cbc0038I Pass  12: suminf.    1.81987 (5) obj. -21.8962 iterations 4
Cbc0038I Pass  13: suminf.    1.75373 (6) obj. -21.8962 iterations 6
Cbc0038I Pass  14: suminf.    1.14029 (6) obj. -21.8962 iterations 3
Cbc0038I Pass  15: suminf.    0.70913 (5) obj. -21.8962 iterations 2
Cbc0038I Pass  16: suminf.    1.21411 (3) obj. -21.8962 iterations 6
Cbc0038I Pass  17: suminf.    0.99845 (3) obj. -21.8962 iterations 1
Cbc0038I Pass  18: suminf.    0.96615 (3) obj. -21.8962 iterations 1
Cbc0038I Pass  19: suminf.    1.28737 (3) obj. -21.8962 iterations 3
Cbc0038I Pass  20: suminf.    1.04098 (5) obj. -21.8962 iterations 2
Cbc0038I Pass  21: suminf.    1.23284 (3) obj. -21.8962 iterations 6
Cbc0038I Pass  22: suminf.    1.21109 (3) obj. -21.8962 iterations 1
Cbc0038I Pass  23: suminf.    1.29175 (3) obj. -21.8962 iterations 3
Cbc0038I Pass  24: suminf.    0.72624 (4) obj. -21.8962 iterations 1
Cbc0038I Pass  25: suminf.    0.68179 (4) obj. -21.8962 iterations 3
Cbc0038I Pass  26: suminf.    1.81987 (5) obj. -21.8962 iterations 4
Cbc0038I Pass  27: suminf.    2.31410 (7) obj. -21.8962 iterations 6
Cbc0038I Pass  28: suminf.    1.19874 (6) obj. -21.8962 iterations 12
Cbc0038I Pass  29: suminf.    1.57283 (7) obj. -21.8962 iterations 14
Cbc0038I Pass  30: suminf.    0.70596 (5) obj. -21.8962 iterations 2
Cbc0038I Pass  31: suminf.    1.02691 (5) obj. -21.8962 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 42 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -16.5875 to -17.5125 (0.06 seconds)
Cbc0038I Round again with cutoff of -31.4293
Cbc0038I Pass  31: suminf.    1.48071 (9) obj. -31.4293 iterations 2
Cbc0038I Pass  32: suminf.    1.35639 (8) obj. -31.4293 iterations 3
Cbc0038I Pass  33: suminf.    1.35639 (8) obj. -31.4293 iterations 0
Cbc0038I Pass  34: suminf.    1.35764 (5) obj. -31.4293 iterations 8
Cbc0038I Pass  35: suminf.    1.62185 (5) obj. -31.4293 iterations 8
Cbc0038I Pass  36: suminf.    1.71228 (4) obj. -31.4293 iterations 4
Cbc0038I Pass  37: suminf.    1.71228 (4) obj. -31.4293 iterations 0
Cbc0038I Pass  38: suminf.    1.74637 (4) obj. -31.4293 iterations 4
Cbc0038I Pass  39: suminf.    1.74637 (4) obj. -31.4293 iterations 0
Cbc0038I Pass  40: suminf.    2.26927 (8) obj. -31.4293 iterations 4
Cbc0038I Pass  41: suminf.    1.87875 (7) obj. -31.4293 iterations 6
Cbc0038I Pass  42: suminf.    1.84392 (5) obj. -31.4293 iterations 11
Cbc0038I Pass  43: suminf.    2.27845 (7) obj. -31.4293 iterations 4
Cbc0038I Pass  44: suminf.    2.10585 (6) obj. -31.4293 iterations 2
Cbc0038I Pass  45: suminf.    1.85419 (5) obj. -31.4293 iterations 8
Cbc0038I Pass  46: suminf.    1.74312 (5) obj. -31.4293 iterations 1
Cbc0038I Pass  47: suminf.    1.71228 (4) obj. -31.4293 iterations 4
Cbc0038I Pass  48: suminf.    1.71228 (4) obj. -31.4293 iterations 0
Cbc0038I Pass  49: suminf.    1.74637 (4) obj. -31.4293 iterations 4
Cbc0038I Pass  50: suminf.    1.74637 (4) obj. -31.4293 iterations 0
Cbc0038I Pass  51: suminf.    2.92822 (7) obj. -31.4293 iterations 4
Cbc0038I Pass  52: suminf.    1.74637 (4) obj. -31.4293 iterations 3
Cbc0038I Pass  53: suminf.    1.71228 (4) obj. -31.4293 iterations 3
Cbc0038I Pass  54: suminf.    1.71228 (4) obj. -31.4293 iterations 0
Cbc0038I Pass  55: suminf.    1.74637 (4) obj. -31.4293 iterations 4
Cbc0038I Pass  56: suminf.    2.53679 (12) obj. -31.4293 iterations 17
Cbc0038I Pass  57: suminf.    2.20465 (9) obj. -31.4293 iterations 5
Cbc0038I Pass  58: suminf.    0.63673 (7) obj. -31.4293 iterations 11
Cbc0038I Pass  59: suminf.    0.63499 (8) obj. -31.4293 iterations 1
Cbc0038I Pass  60: suminf.    2.51437 (7) obj. -31.4293 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -17.5125 - took 0.09 seconds
Cbc0012I Integer solution of -17.5125 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 14 added rows had average density of 23.571429
Cbc0013I At root node, 14 cuts changed objective from -69.561897 to -37.378482 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3276 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1195 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -17.51249999999999, took 3464 iterations and 12 nodes (0.31 seconds)
Cbc0032I Strong branching done 164 times (2437 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.31

