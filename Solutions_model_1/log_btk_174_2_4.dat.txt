Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 344 (-7) rows, 174 (-2) columns and 1030 (-13) elements
Clp1000I sum of infeasibilities 0.463133 - average 0.00134632, 68 fixed columns
Coin0506I Presolve 206 (-138) rows, 106 (-68) columns and 618 (-412) elements
Clp0029I End of values pass after 106 iterations
Clp0014I Perturbing problem by 0.001% of 0.45255749 - largest nonzero change 0 ( 0%) - largest zero change 2.9785977e-05
Clp0000I Optimal - objective value 105670.2
Clp0000I Optimal - objective value 105670.2
Coin0511I After Postsolve, objective 105670.2, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.378137 - largest nonzero change 1.9322336e-05 ( 0.0019322336%) - largest zero change 2.9135222e-05
Clp0000I Optimal - objective value 105670.2
Clp0000I Optimal - objective value 105670.2
Clp0000I Optimal - objective value 105670.2
Coin0511I After Postsolve, objective 105670.2, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105670.202 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 344 rows, 174 columns (173 integer (173 of which binary)) and 1030 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.563%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 105 integers unsatisfied sum - 31.4181
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24330.9 iterations 109
Cbc0038I Solution found of -24330.9
Cbc0038I Relaxing continuous gives -24330.9
Cbc0038I Rounding solution of -60722.5 is better than previous of -24330.9

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 344 rows 174 columns, reduced to 206 rows 106 columns - 4 fixed gives 170, 97 - still too large
Cbc0038I Full problem 344 rows 174 columns, reduced to 170 rows 97 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -65217.2
Cbc0038I Pass   2: suminf.    4.41244 (15) obj. -65217.2 iterations 32
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -65217.2 iterations 20
Cbc0038I Solution found of -65217.2
Cbc0038I Relaxing continuous gives -69689.1
Cbc0038I Rounding solution of -81664.6 is better than previous of -69689.1

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 344 rows 174 columns, reduced to 215 rows 112 columns - 10 fixed gives 174, 102 - still too large
Cbc0038I Full problem 344 rows 174 columns, reduced to 174 rows 102 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -86465.7
Cbc0038I Pass   4: suminf.    5.64709 (17) obj. -86465.7 iterations 4
Cbc0038I Pass   5: suminf.    0.36230 (3) obj. -86465.7 iterations 21
Cbc0038I Pass   6: suminf.    0.51643 (2) obj. -86465.7 iterations 5
Cbc0038I Pass   7: suminf.    0.51643 (2) obj. -86465.7 iterations 0
Cbc0038I Pass   8: suminf.    0.62431 (2) obj. -86465.7 iterations 6
Cbc0038I Pass   9: suminf.    2.78212 (12) obj. -86465.7 iterations 52
Cbc0038I Pass  10: suminf.    1.71058 (6) obj. -86465.7 iterations 22
Cbc0038I Pass  11: suminf.    0.77680 (3) obj. -86465.7 iterations 10
Cbc0038I Pass  12: suminf.    0.76305 (3) obj. -86465.7 iterations 2
Cbc0038I Pass  13: suminf.    0.58426 (2) obj. -86465.7 iterations 4
Cbc0038I Pass  14: suminf.    0.27430 (3) obj. -86465.7 iterations 5
Cbc0038I Pass  15: suminf.    0.76572 (3) obj. -86465.7 iterations 10
Cbc0038I Pass  16: suminf.    0.58587 (2) obj. -86465.7 iterations 6
Cbc0038I Pass  17: suminf.    0.52443 (2) obj. -86465.7 iterations 4
Cbc0038I Pass  18: suminf.    0.38954 (3) obj. -86465.7 iterations 3
Cbc0038I Pass  19: suminf.    0.67269 (2) obj. -86465.7 iterations 5
Cbc0038I Pass  20: suminf.    2.06049 (7) obj. -86465.7 iterations 43
Cbc0038I Pass  21: suminf.    0.46574 (2) obj. -86465.7 iterations 15
Cbc0038I Pass  22: suminf.    0.33840 (2) obj. -86465.7 iterations 3
Cbc0038I Pass  23: suminf.    0.68243 (3) obj. -86465.7 iterations 4
Cbc0038I Pass  24: suminf.    0.62403 (2) obj. -86465.7 iterations 1
Cbc0038I Pass  25: suminf.    0.46808 (2) obj. -86465.7 iterations 4
Cbc0038I Pass  26: suminf.    0.46574 (2) obj. -86465.7 iterations 2
Cbc0038I Pass  27: suminf.    0.33840 (2) obj. -86465.7 iterations 3
Cbc0038I Pass  28: suminf.    0.68243 (3) obj. -86465.7 iterations 4
Cbc0038I Pass  29: suminf.    0.62403 (2) obj. -86465.7 iterations 1
Cbc0038I Pass  30: suminf.    0.46808 (2) obj. -86465.7 iterations 4
Cbc0038I Pass  31: suminf.    0.46574 (2) obj. -86465.7 iterations 2
Cbc0038I Pass  32: suminf.    0.33840 (2) obj. -86465.7 iterations 3
Cbc0038I Pass  33: suminf.    0.68243 (3) obj. -86465.7 iterations 4
Cbc0038I Rounding solution of -88887.1 is better than previous of -81664.6

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 344 rows 174 columns, reduced to 239 rows 124 columns - 10 fixed gives 188, 114 - still too large
Cbc0038I Full problem 344 rows 174 columns, reduced to 188 rows 114 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -93922
Cbc0038I Pass  33: suminf.    7.89266 (24) obj. -93922 iterations 11
Cbc0038I Pass  34: suminf.    2.45265 (11) obj. -93922 iterations 34
Cbc0038I Pass  35: suminf.    2.45265 (11) obj. -93922 iterations 1
Cbc0038I Pass  36: suminf.    3.56938 (9) obj. -93922 iterations 32
Cbc0038I Pass  37: suminf.    3.07943 (9) obj. -93922 iterations 12
Cbc0038I Pass  38: suminf.    3.07943 (9) obj. -93922 iterations 0
Cbc0038I Pass  39: suminf.    2.71836 (12) obj. -93922 iterations 27
Cbc0038I Pass  40: suminf.    2.45265 (11) obj. -93922 iterations 5
Cbc0038I Pass  41: suminf.    3.56938 (9) obj. -93922 iterations 32
Cbc0038I Pass  42: suminf.    3.07943 (9) obj. -93922 iterations 12
Cbc0038I Pass  43: suminf.    3.07943 (9) obj. -93922 iterations 0
Cbc0038I Pass  44: suminf.    2.71836 (12) obj. -93922 iterations 28
Cbc0038I Pass  45: suminf.    2.45265 (11) obj. -93922 iterations 5
Cbc0038I Pass  46: suminf.    3.56938 (9) obj. -93922 iterations 32
Cbc0038I Pass  47: suminf.    3.07943 (9) obj. -93922 iterations 12
Cbc0038I Pass  48: suminf.    3.07943 (9) obj. -93922 iterations 0
Cbc0038I Pass  49: suminf.    2.71836 (12) obj. -93922 iterations 27
Cbc0038I Pass  50: suminf.    2.45265 (11) obj. -93922 iterations 5
Cbc0038I Pass  51: suminf.    3.56938 (9) obj. -93922 iterations 32
Cbc0038I Pass  52: suminf.    3.07943 (9) obj. -93922 iterations 12
Cbc0038I Pass  53: suminf.    3.07943 (9) obj. -93922 iterations 0
Cbc0038I Pass  54: suminf.    2.71836 (12) obj. -93922 iterations 28
Cbc0038I Pass  55: suminf.    2.45265 (11) obj. -93922 iterations 5
Cbc0038I Pass  56: suminf.    3.56938 (9) obj. -93922 iterations 32
Cbc0038I Pass  57: suminf.    3.07943 (9) obj. -93922 iterations 12
Cbc0038I Pass  58: suminf.    3.07943 (9) obj. -93922 iterations 0
Cbc0038I Pass  59: suminf.    2.71836 (12) obj. -93922 iterations 28
Cbc0038I Pass  60: suminf.    2.45265 (11) obj. -93922 iterations 5
Cbc0038I Pass  61: suminf.    3.56938 (9) obj. -93922 iterations 32
Cbc0038I Pass  62: suminf.    3.07943 (9) obj. -93922 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 344 rows 174 columns, reduced to 217 rows 113 columns - 10 fixed gives 176, 103 - still too large
Cbc0038I Full problem 344 rows 174 columns, reduced to 176 rows 103 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -88887.1 - took 0.07 seconds
Cbc0012I Integer solution of -88887.123 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 344 rows 174 columns, reduced to 225 rows 117 columns - 9 fixed gives 179, 108 - still too large
Cbc0038I Full problem 344 rows 174 columns, reduced to 179 rows 108 columns - too large
Cbc0031I 25 added rows had average density of 85.44
Cbc0013I At root node, 25 cuts changed objective from -105670.2 to -100523.71 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35492 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.320 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1814 row cuts average 159.2 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 231 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 130.5 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -88887.123 best solution, best possible -100523.71 (2.39 seconds)
Cbc0012I Integer solution of -89060.821 found by DiveCoefficient after 7673 iterations and 4 nodes (2.58 seconds)
Cbc0012I Integer solution of -89099.721 found by DiveCoefficient after 7703 iterations and 5 nodes (2.62 seconds)
Cbc0012I Integer solution of -89940.245 found by rounding after 7954 iterations and 10 nodes (2.70 seconds)
Cbc0016I Integer solution of -91724.398 found by strong branching after 7955 iterations and 10 nodes (2.70 seconds)
Cbc0016I Integer solution of -93670.52 found by strong branching after 8242 iterations and 16 nodes (2.73 seconds)
Cbc0016I Integer solution of -93859.036 found by strong branching after 8255 iterations and 16 nodes (2.73 seconds)
Cbc0016I Integer solution of -94052.591 found by strong branching after 8698 iterations and 29 nodes (2.77 seconds)
Cbc0012I Integer solution of -94099.141 found by rounding after 8704 iterations and 30 nodes (2.77 seconds)
Cbc0016I Integer solution of -94129.436 found by strong branching after 8721 iterations and 33 nodes (2.78 seconds)
Cbc0038I Full problem 344 rows 174 columns, reduced to 43 rows 32 columns
Cbc0004I Integer solution of -94211.291 found after 9288 iterations and 58 nodes (2.88 seconds)
Cbc0012I Integer solution of -94353.091 found by rounding after 10204 iterations and 78 nodes (2.98 seconds)
Cbc0016I Integer solution of -94706.946 found by strong branching after 10209 iterations and 80 nodes (2.98 seconds)
Cbc0001I Search completed - best objective -94706.94567999998, took 10518 iterations and 86 nodes (3.00 seconds)
Cbc0032I Strong branching done 920 times (23810 iterations), fathomed 15 nodes and fixed 22 variables
Cbc0035I Maximum depth 22, 222 variables fixed on reduced cost
Total time (CPU seconds):       2.96   (Wallclock seconds):       3.03

