Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.79899e-05 - average 3.60826e-07, 17 fixed columns
Coin0506I Presolve 100 (-33) rows, 58 (-17) columns and 309 (-99) elements
Clp0029I End of values pass after 58 iterations
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Coin0511I After Postsolve, objective 80.72595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Coin0511I After Postsolve, objective 80.72595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.72594983 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.42718
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.997 iterations 52
Cbc0038I Solution found of -4.997
Cbc0038I Relaxing continuous gives -4.997
Cbc0038I Rounding solution of -42.3913 is better than previous of -4.997

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -42.3913 to -48.0109 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.2825
Cbc0038I Pass   2: suminf.    2.15249 (8) obj. -51.2825 iterations 13
Cbc0038I Pass   3: suminf.    1.74236 (6) obj. -51.2825 iterations 3
Cbc0038I Pass   4: suminf.    1.51023 (5) obj. -51.2825 iterations 14
Cbc0038I Pass   5: suminf.    1.51023 (5) obj. -51.2825 iterations 1
Cbc0038I Pass   6: suminf.    1.56880 (5) obj. -51.2825 iterations 13
Cbc0038I Pass   7: suminf.    1.15874 (5) obj. -51.2825 iterations 1
Cbc0038I Pass   8: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass   9: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  10: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  11: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  12: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  13: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I Pass  14: suminf.    0.94104 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  15: suminf.    1.26617 (5) obj. -51.2825 iterations 15
Cbc0038I Pass  16: suminf.    1.09798 (6) obj. -51.2825 iterations 8
Cbc0038I Pass  17: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass  18: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  19: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  20: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  21: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  22: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I Pass  23: suminf.    0.94104 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  24: suminf.    1.26617 (5) obj. -51.2825 iterations 15
Cbc0038I Pass  25: suminf.    1.09798 (6) obj. -51.2825 iterations 8
Cbc0038I Pass  26: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass  27: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  28: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  29: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  30: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  31: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -48.0109 to -48.8012 (0.07 seconds)
Cbc0038I Round again with cutoff of -57.1712
Cbc0038I Pass  31: suminf.    2.08507 (9) obj. -57.1712 iterations 1
Cbc0038I Pass  32: suminf.    1.42711 (4) obj. -57.1712 iterations 12
Cbc0038I Pass  33: suminf.    1.79082 (6) obj. -57.1712 iterations 24
Cbc0038I Pass  34: suminf.    1.68000 (9) obj. -57.1712 iterations 16
Cbc0038I Pass  35: suminf.    1.62458 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  36: suminf.    1.70495 (7) obj. -57.1712 iterations 6
Cbc0038I Pass  37: suminf.    1.70864 (6) obj. -57.1712 iterations 3
Cbc0038I Pass  38: suminf.    2.93972 (7) obj. -57.1712 iterations 16
Cbc0038I Pass  39: suminf.    2.50919 (7) obj. -57.1712 iterations 1
Cbc0038I Pass  40: suminf.    1.71807 (9) obj. -57.1712 iterations 3
Cbc0038I Pass  41: suminf.    1.99412 (5) obj. -57.1712 iterations 32
Cbc0038I Pass  42: suminf.    1.36731 (5) obj. -57.1712 iterations 14
Cbc0038I Pass  43: suminf.    1.77513 (6) obj. -57.1712 iterations 12
Cbc0038I Pass  44: suminf.    1.60991 (6) obj. -57.1712 iterations 1
Cbc0038I Pass  45: suminf.    2.09700 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  46: suminf.    1.66842 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  47: suminf.    1.77513 (6) obj. -57.1712 iterations 7
Cbc0038I Pass  48: suminf.    3.88676 (12) obj. -57.1712 iterations 22
Cbc0038I Pass  49: suminf.    1.54764 (10) obj. -57.1712 iterations 25
Cbc0038I Pass  50: suminf.    1.54764 (10) obj. -57.1712 iterations 0
Cbc0038I Pass  51: suminf.    2.05564 (6) obj. -57.1712 iterations 16
Cbc0038I Pass  52: suminf.    2.00438 (9) obj. -57.1712 iterations 7
Cbc0038I Pass  53: suminf.    1.60551 (8) obj. -57.1712 iterations 11
Cbc0038I Pass  54: suminf.    1.49638 (7) obj. -57.1712 iterations 6
Cbc0038I Pass  55: suminf.    2.09700 (6) obj. -57.1712 iterations 6
Cbc0038I Pass  56: suminf.    1.66842 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  57: suminf.    1.77513 (6) obj. -57.1712 iterations 7
Cbc0038I Pass  58: suminf.    1.60991 (6) obj. -57.1712 iterations 3
Cbc0038I Pass  59: suminf.    4.00303 (15) obj. -57.1712 iterations 31
Cbc0038I Pass  60: suminf.    3.00662 (12) obj. -57.1712 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 86 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -48.8012 - took 0.09 seconds
Cbc0012I Integer solution of -48.80117 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 64 rows 39 columns
Cbc0031I 12 added rows had average density of 50.916667
Cbc0013I At root node, 12 cuts changed objective from -80.72595 to -70.906882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9123 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1522 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.80117 best solution, best possible -70.906882 (0.70 seconds)
Cbc0012I Integer solution of -48.94435 found by DiveCoefficient after 7293 iterations and 29 nodes (0.89 seconds)
Cbc0012I Integer solution of -49.11299 found by rounding after 7368 iterations and 31 nodes (0.90 seconds)
Cbc0004I Integer solution of -49.16177 found after 7402 iterations and 32 nodes (0.90 seconds)
Cbc0016I Integer solution of -49.77038 found by strong branching after 8148 iterations and 64 nodes (0.96 seconds)
Cbc0001I Search completed - best objective -49.77038, took 8931 iterations and 92 nodes (1.00 seconds)
Cbc0032I Strong branching done 838 times (12086 iterations), fathomed 10 nodes and fixed 29 variables
Cbc0035I Maximum depth 25, 259 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.01

