Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 73 (-5) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 5.28413e-05 - average 4.00313e-07, 18 fixed columns
Coin0506I Presolve 97 (-35) rows, 55 (-18) columns and 296 (-106) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.30814328 - largest nonzero change 0 ( 0%) - largest zero change 2.6927956e-05
Clp0000I Optimal - objective value 35.43182
Clp0000I Optimal - objective value 35.43182
Coin0511I After Postsolve, objective 35.43182, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.43182
Clp0000I Optimal - objective value 35.43182
Clp0000I Optimal - objective value 35.43182
Coin0511I After Postsolve, objective 35.43182, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.43181963 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 73 columns (72 integer (72 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.211%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.63111
Cbc0038I Solution found of -3.89669
Cbc0038I Relaxing continuous gives -3.89669
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 54 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -3.89669 to -11.5216 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.9127
Cbc0038I Pass   1: suminf.    1.05362 (5) obj. -13.9127 iterations 37
Cbc0038I Pass   2: suminf.    0.29372 (2) obj. -13.9127 iterations 6
Cbc0038I Pass   3: suminf.    0.68251 (3) obj. -13.9127 iterations 3
Cbc0038I Pass   4: suminf.    0.68251 (3) obj. -13.9127 iterations 0
Cbc0038I Pass   5: suminf.    1.06668 (3) obj. -13.9127 iterations 3
Cbc0038I Pass   6: suminf.    0.63890 (3) obj. -13.9127 iterations 4
Cbc0038I Pass   7: suminf.    3.37276 (9) obj. -13.9127 iterations 25
Cbc0038I Pass   8: suminf.    2.56683 (11) obj. -13.9127 iterations 9
Cbc0038I Pass   9: suminf.    1.81947 (5) obj. -13.9127 iterations 10
Cbc0038I Pass  10: suminf.    1.28360 (4) obj. -13.9127 iterations 6
Cbc0038I Pass  11: suminf.    0.54426 (2) obj. -13.9127 iterations 5
Cbc0038I Pass  12: suminf.    0.39022 (2) obj. -13.9127 iterations 2
Cbc0038I Pass  13: suminf.    1.05819 (3) obj. -13.9127 iterations 2
Cbc0038I Pass  14: suminf.    0.59002 (2) obj. -13.9127 iterations 1
Cbc0038I Pass  15: suminf.    1.17965 (5) obj. -13.9127 iterations 13
Cbc0038I Pass  16: suminf.    1.17293 (5) obj. -13.9127 iterations 9
Cbc0038I Pass  17: suminf.    0.54426 (2) obj. -13.9127 iterations 6
Cbc0038I Pass  18: suminf.    0.37843 (3) obj. -13.9127 iterations 3
Cbc0038I Pass  19: suminf.    0.70977 (3) obj. -13.9127 iterations 2
Cbc0038I Pass  20: suminf.    0.70917 (3) obj. -13.9127 iterations 1
Cbc0038I Pass  21: suminf.    1.82160 (7) obj. -13.9127 iterations 22
Cbc0038I Pass  22: suminf.    1.58187 (7) obj. -13.9127 iterations 13
Cbc0038I Pass  23: suminf.    1.91040 (5) obj. -13.9127 iterations 18
Cbc0038I Pass  24: suminf.    1.88840 (5) obj. -13.9127 iterations 3
Cbc0038I Pass  25: suminf.    0.54426 (2) obj. -13.9127 iterations 6
Cbc0038I Pass  26: suminf.    0.39022 (2) obj. -13.9127 iterations 2
Cbc0038I Pass  27: suminf.    1.05819 (3) obj. -13.9127 iterations 2
Cbc0038I Pass  28: suminf.    0.59002 (2) obj. -13.9127 iterations 1
Cbc0038I Pass  29: suminf.    1.51229 (7) obj. -13.9127 iterations 29
Cbc0038I Pass  30: suminf.    1.51229 (7) obj. -13.9127 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.5216 - took 0.08 seconds
Cbc0012I Integer solution of -11.521586 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 132 rows 73 columns, reduced to 54 rows 34 columns
Cbc0031I 15 added rows had average density of 68.4
Cbc0013I At root node, 15 cuts changed objective from -35.43182 to -25.834753 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6530 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1092 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 59.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0010I After 21 nodes, 10 on tree, -11.521586 best solution, best possible -25.834753 (0.68 seconds)
Cbc0001I Search completed - best objective -11.52158610000001, took 6120 iterations and 58 nodes (0.74 seconds)
Cbc0032I Strong branching done 700 times (13282 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 25, 143 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

