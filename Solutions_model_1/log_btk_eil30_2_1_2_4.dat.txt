Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 6.58187e-09 - average 1.17533e-10, 6 fixed columns
Coin0506I Presolve 44 (-12) rows, 24 (-6) columns and 128 (-36) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 89.099255
Clp0000I Optimal - objective value 89.099255
Coin0511I After Postsolve, objective 89.099255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22947136 - largest nonzero change 1.9531365e-05 ( 0.0016981022%) - largest zero change 1.8909518e-05
Clp0000I Optimal - objective value 89.099255
Clp0000I Optimal - objective value 89.099255
Clp0000I Optimal - objective value 89.099255
Coin0511I After Postsolve, objective 89.099255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.09925513 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.55129
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.6998 iterations 24
Cbc0038I Solution found of -31.6998
Cbc0038I Relaxing continuous gives -31.6998
Cbc0038I Rounding solution of -32.2587 is better than previous of -31.6998

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -32.2587 to -33.7993 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.3294
Cbc0038I Pass   2: suminf.    0.22622 (2) obj. -39.3294 iterations 2
Cbc0038I Pass   3: suminf.    0.75439 (3) obj. -39.3294 iterations 5
Cbc0038I Pass   4: suminf.    0.74880 (4) obj. -39.3294 iterations 1
Cbc0038I Pass   5: suminf.    0.59878 (3) obj. -39.3294 iterations 3
Cbc0038I Pass   6: suminf.    0.52798 (3) obj. -39.3294 iterations 2
Cbc0038I Pass   7: suminf.    1.13241 (3) obj. -39.3294 iterations 8
Cbc0038I Pass   8: suminf.    1.10390 (4) obj. -39.3294 iterations 1
Cbc0038I Pass   9: suminf.    1.19665 (3) obj. -39.3294 iterations 3
Cbc0038I Pass  10: suminf.    0.89282 (3) obj. -39.3294 iterations 2
Cbc0038I Pass  11: suminf.    1.19665 (3) obj. -39.3294 iterations 2
Cbc0038I Pass  12: suminf.    1.76373 (7) obj. -39.3294 iterations 10
Cbc0038I Pass  13: suminf.    1.07320 (4) obj. -39.3294 iterations 3
Cbc0038I Pass  14: suminf.    1.04268 (4) obj. -39.3294 iterations 2
Cbc0038I Pass  15: suminf.    0.65004 (2) obj. -39.3294 iterations 6
Cbc0038I Pass  16: suminf.    0.62583 (3) obj. -39.3294 iterations 2
Cbc0038I Pass  17: suminf.    1.07404 (4) obj. -39.3294 iterations 3
Cbc0038I Pass  18: suminf.    1.07404 (4) obj. -39.3294 iterations 0
Cbc0038I Pass  19: suminf.    1.18399 (3) obj. -39.3294 iterations 2
Cbc0038I Pass  20: suminf.    0.48878 (2) obj. -39.3294 iterations 2
Cbc0038I Pass  21: suminf.    1.00417 (4) obj. -39.3294 iterations 4
Cbc0038I Pass  22: suminf.    0.70425 (4) obj. -39.3294 iterations 1
Cbc0038I Pass  23: suminf.    0.91751 (3) obj. -39.3294 iterations 4
Cbc0038I Pass  24: suminf.    0.91751 (3) obj. -39.3294 iterations 0
Cbc0038I Pass  25: suminf.    1.15729 (3) obj. -39.3294 iterations 1
Cbc0038I Pass  26: suminf.    0.65337 (4) obj. -39.3294 iterations 4
Cbc0038I Pass  27: suminf.    0.48118 (2) obj. -39.3294 iterations 2
Cbc0038I Pass  28: suminf.    0.62622 (3) obj. -39.3294 iterations 3
Cbc0038I Pass  29: suminf.    1.32157 (3) obj. -39.3294 iterations 3
Cbc0038I Pass  30: suminf.    1.17247 (3) obj. -39.3294 iterations 1
Cbc0038I Pass  31: suminf.    1.06832 (3) obj. -39.3294 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.7993 - took 0.03 seconds
Cbc0012I Integer solution of -33.799296 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 31 rows 19 columns
Cbc0031I 12 added rows had average density of 22.833333
Cbc0013I At root node, 12 cuts changed objective from -89.099255 to -55.628222 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1336 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 618 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.799296 best solution, best possible -55.628222 (1.46 seconds)
Cbc0001I Search completed - best objective -33.79929555, took 2270 iterations and 14 nodes (1.52 seconds)
Cbc0032I Strong branching done 154 times (972 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.53

