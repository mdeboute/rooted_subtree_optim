Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 64 (-5) rows, 33 (-2) columns and 187 (-8) elements
Clp1000I sum of infeasibilities 1.47506e-05 - average 2.30478e-07, 1 fixed columns
Coin0506I Presolve 62 (-2) rows, 32 (-1) columns and 181 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Coin0511I After Postsolve, objective 168.45576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Coin0511I After Postsolve, objective 168.45576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.4557615 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 64 rows, 33 columns (32 integer (32 of which binary)) and 190 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.076%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.86124
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -66.372 iterations 13
Cbc0038I Solution found of -66.372
Cbc0038I Relaxing continuous gives -66.372
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 33 columns, reduced to 23 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -66.372 to -70.2284 (0.01 seconds)
Cbc0038I Round again with cutoff of -78.3716
Cbc0038I Pass   2: suminf.    0.36122 (3) obj. -78.3716 iterations 3
Cbc0038I Pass   3: suminf.    0.38566 (3) obj. -78.3716 iterations 5
Cbc0038I Pass   4: suminf.    0.34340 (2) obj. -78.3716 iterations 1
Cbc0038I Pass   5: suminf.    2.42218 (9) obj. -78.3716 iterations 10
Cbc0038I Pass   6: suminf.    1.44009 (7) obj. -78.3716 iterations 5
Cbc0038I Pass   7: suminf.    0.40341 (4) obj. -78.3716 iterations 11
Cbc0038I Pass   8: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass   9: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  10: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  11: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  12: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  13: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  14: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  15: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I Pass  16: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass  17: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  18: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  19: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  20: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  21: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  22: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  23: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I Pass  24: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass  25: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  26: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  27: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  28: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  29: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  30: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  31: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 33 columns, reduced to 29 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -70.2284 - took 0.02 seconds
Cbc0012I Integer solution of -70.2284 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 64 rows 33 columns, reduced to 23 rows 12 columns
Cbc0031I 13 added rows had average density of 29.076923
Cbc0013I At root node, 13 cuts changed objective from -151.65922 to -103.11939 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1743 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 831 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.669 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -70.2284 best solution, best possible -103.11939 (1.40 seconds)
Cbc0001I Search completed - best objective -70.22839999999999, took 3145 iterations and 12 nodes (1.77 seconds)
Cbc0032I Strong branching done 202 times (2996 iterations), fathomed 0 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.77

