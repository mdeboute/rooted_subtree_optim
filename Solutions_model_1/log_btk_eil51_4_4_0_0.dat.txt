Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 42 (-11) columns and 228 (-75) elements
Clp1000I sum of infeasibilities 0.000827157 - average 1.08836e-05, 13 fixed columns
Coin0506I Presolve 44 (-32) rows, 26 (-16) columns and 132 (-96) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 80.306519
Clp0000I Optimal - objective value 80.306519
Coin0511I After Postsolve, objective 80.306519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.306519
Clp0000I Optimal - objective value 80.306519
Clp0000I Optimal - objective value 80.306519
Coin0511I After Postsolve, objective 80.306519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.30651904 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 42 columns (41 integer (41 of which binary)) and 228 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.073%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 6.97122
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.4334 iterations 20
Cbc0038I Solution found of -24.4334
Cbc0038I Relaxing continuous gives -24.4334
Cbc0038I Rounding solution of -30.8084 is better than previous of -24.4334

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 42 columns, reduced to 42 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -30.8084 to -40.6001 (0.02 seconds)
Cbc0038I Round again with cutoff of -44.5708
Cbc0038I Pass   2: suminf.    0.55074 (2) obj. -44.5708 iterations 3
Cbc0038I Pass   3: suminf.    0.16227 (1) obj. -44.5708 iterations 2
Cbc0038I Pass   4: suminf.    0.49554 (2) obj. -44.5708 iterations 2
Cbc0038I Pass   5: suminf.    3.30135 (10) obj. -44.5708 iterations 16
Cbc0038I Pass   6: suminf.    2.68940 (10) obj. -44.5708 iterations 8
Cbc0038I Pass   7: suminf.    1.76179 (8) obj. -44.5708 iterations 5
Cbc0038I Pass   8: suminf.    1.25443 (6) obj. -44.5708 iterations 6
Cbc0038I Pass   9: suminf.    0.90877 (5) obj. -44.5708 iterations 8
Cbc0038I Pass  10: suminf.    0.77546 (4) obj. -44.5708 iterations 4
Cbc0038I Pass  11: suminf.    1.64171 (7) obj. -44.5708 iterations 3
Cbc0038I Pass  12: suminf.    0.45803 (2) obj. -44.5708 iterations 9
Cbc0038I Pass  13: suminf.    0.45803 (2) obj. -44.5708 iterations 2
Cbc0038I Pass  14: suminf.    0.76405 (2) obj. -44.5708 iterations 3
Cbc0038I Pass  15: suminf.    0.76405 (2) obj. -44.5708 iterations 0
Cbc0038I Pass  16: suminf.    0.56552 (2) obj. -44.5708 iterations 3
Cbc0038I Pass  17: suminf.    2.47009 (7) obj. -44.5708 iterations 8
Cbc0038I Pass  18: suminf.    0.58301 (3) obj. -44.5708 iterations 6
Cbc0038I Pass  19: suminf.    0.45803 (2) obj. -44.5708 iterations 1
Cbc0038I Pass  20: suminf.    0.76405 (2) obj. -44.5708 iterations 2
Cbc0038I Pass  21: suminf.    0.76405 (2) obj. -44.5708 iterations 0
Cbc0038I Pass  22: suminf.    0.56552 (2) obj. -44.5708 iterations 2
Cbc0038I Pass  23: suminf.    3.26550 (8) obj. -44.5708 iterations 13
Cbc0038I Pass  24: suminf.    0.50998 (3) obj. -44.5708 iterations 9
Cbc0038I Pass  25: suminf.    0.39251 (3) obj. -44.5708 iterations 2
Cbc0038I Pass  26: suminf.    0.97767 (4) obj. -44.5708 iterations 7
Cbc0038I Pass  27: suminf.    0.97767 (4) obj. -44.5708 iterations 0
Cbc0038I Pass  28: suminf.    1.15814 (6) obj. -44.5708 iterations 6
Cbc0038I Pass  29: suminf.    1.64171 (7) obj. -44.5708 iterations 6
Cbc0038I Pass  30: suminf.    0.30811 (2) obj. -44.5708 iterations 6
Cbc0038I Pass  31: suminf.    0.55074 (2) obj. -44.5708 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 42 columns, reduced to 50 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -40.6001 to -44.6501 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.7815
Cbc0038I Pass  31: suminf.    0.83255 (5) obj. -51.7815 iterations 2
Cbc0038I Pass  32: suminf.    0.76506 (5) obj. -51.7815 iterations 1
Cbc0038I Pass  33: suminf.    0.69639 (4) obj. -51.7815 iterations 10
Cbc0038I Pass  34: suminf.    0.68639 (6) obj. -51.7815 iterations 2
Cbc0038I Pass  35: suminf.    1.53454 (6) obj. -51.7815 iterations 13
Cbc0038I Pass  36: suminf.    1.03990 (6) obj. -51.7815 iterations 4
Cbc0038I Pass  37: suminf.    1.65344 (5) obj. -51.7815 iterations 10
Cbc0038I Pass  38: suminf.    0.69639 (4) obj. -51.7815 iterations 3
Cbc0038I Pass  39: suminf.    0.68639 (6) obj. -51.7815 iterations 2
Cbc0038I Pass  40: suminf.    1.53454 (6) obj. -51.7815 iterations 13
Cbc0038I Pass  41: suminf.    1.03990 (6) obj. -51.7815 iterations 4
Cbc0038I Pass  42: suminf.    1.65344 (5) obj. -51.7815 iterations 10
Cbc0038I Pass  43: suminf.    0.69639 (4) obj. -51.7815 iterations 3
Cbc0038I Pass  44: suminf.    0.68639 (6) obj. -51.7815 iterations 2
Cbc0038I Pass  45: suminf.    1.53454 (6) obj. -51.7815 iterations 13
Cbc0038I Pass  46: suminf.    1.03990 (6) obj. -51.7815 iterations 4
Cbc0038I Pass  47: suminf.    1.65344 (5) obj. -51.7815 iterations 10
Cbc0038I Pass  48: suminf.    0.69639 (4) obj. -51.7815 iterations 3
Cbc0038I Pass  49: suminf.    0.68639 (6) obj. -51.7815 iterations 2
Cbc0038I Pass  50: suminf.    1.53454 (6) obj. -51.7815 iterations 13
Cbc0038I Pass  51: suminf.    1.03990 (6) obj. -51.7815 iterations 4
Cbc0038I Pass  52: suminf.    1.65344 (5) obj. -51.7815 iterations 10
Cbc0038I Pass  53: suminf.    0.69639 (4) obj. -51.7815 iterations 3
Cbc0038I Pass  54: suminf.    0.68639 (6) obj. -51.7815 iterations 2
Cbc0038I Pass  55: suminf.    1.53454 (6) obj. -51.7815 iterations 13
Cbc0038I Pass  56: suminf.    1.03990 (6) obj. -51.7815 iterations 4
Cbc0038I Pass  57: suminf.    1.65344 (5) obj. -51.7815 iterations 10
Cbc0038I Pass  58: suminf.    0.69639 (4) obj. -51.7815 iterations 3
Cbc0038I Pass  59: suminf.    0.68639 (6) obj. -51.7815 iterations 2
Cbc0038I Pass  60: suminf.    1.53454 (6) obj. -51.7815 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 42 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -44.6501 - took 0.04 seconds
Cbc0012I Integer solution of -44.6501 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 42 columns, reduced to 42 rows 25 columns
Cbc0031I 11 added rows had average density of 28.545455
Cbc0013I At root node, 11 cuts changed objective from -80.306519 to -56.385925 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1911 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 662 row cuts average 41.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -44.65009999999999, took 2856 iterations and 6 nodes (0.28 seconds)
Cbc0032I Strong branching done 144 times (1263 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

