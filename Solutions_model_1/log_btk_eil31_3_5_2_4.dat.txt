Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 25 (-8) columns and 124 (-59) elements
Clp1000I sum of infeasibilities 1.63608e-06 - average 3.99044e-08, 3 fixed columns
Coin0506I Presolve 35 (-6) rows, 22 (-3) columns and 106 (-18) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Coin0511I After Postsolve, objective 48.947571, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Coin0511I After Postsolve, objective 48.947571, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.9475711 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 25 columns (24 integer (24 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.11913
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.38598 iterations 15
Cbc0038I Solution found of -7.38598
Cbc0038I Relaxing continuous gives -7.38598
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -7.38598 to -29.0965 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.0591
Cbc0038I Pass   2: suminf.    0.66079 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   3: suminf.    0.36443 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   4: suminf.    1.02276 (3) obj. -31.0591 iterations 5
Cbc0038I Pass   5: suminf.    1.02276 (3) obj. -31.0591 iterations 1
Cbc0038I Pass   6: suminf.    0.55603 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   7: suminf.    0.94308 (3) obj. -31.0591 iterations 4
Cbc0038I Pass   8: suminf.    0.72897 (2) obj. -31.0591 iterations 2
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -31.0591 iterations 1
Cbc0038I Pass  10: suminf.    0.48560 (1) obj. -31.0591 iterations 1
Cbc0038I Pass  11: suminf.    2.13961 (7) obj. -31.0591 iterations 6
Cbc0038I Pass  12: suminf.    0.64471 (2) obj. -31.0591 iterations 5
Cbc0038I Pass  13: suminf.    0.86381 (3) obj. -31.0591 iterations 1
Cbc0038I Pass  14: suminf.    0.64471 (2) obj. -31.0591 iterations 1
Cbc0038I Pass  15: suminf.    1.93103 (7) obj. -31.0591 iterations 7
Cbc0038I Pass  16: suminf.    1.65773 (6) obj. -31.0591 iterations 5
Cbc0038I Pass  17: suminf.    0.61001 (4) obj. -31.0591 iterations 7
Cbc0038I Pass  18: suminf.    0.28421 (4) obj. -31.0591 iterations 6
Cbc0038I Pass  19: suminf.    1.54899 (4) obj. -31.0591 iterations 8
Cbc0038I Pass  20: suminf.    1.38275 (4) obj. -31.0591 iterations 4
Cbc0038I Pass  21: suminf.    1.23825 (4) obj. -31.0591 iterations 1
Cbc0038I Pass  22: suminf.    1.48351 (4) obj. -31.0591 iterations 5
Cbc0038I Pass  23: suminf.    1.20402 (4) obj. -31.0591 iterations 1
Cbc0038I Pass  24: suminf.    0.84782 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  25: suminf.    0.32023 (2) obj. -31.0591 iterations 5
Cbc0038I Pass  26: suminf.    0.32023 (2) obj. -31.0591 iterations 0
Cbc0038I Pass  27: suminf.    0.20839 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  28: suminf.    0.20839 (3) obj. -31.0591 iterations 0
Cbc0038I Pass  29: suminf.    0.60925 (4) obj. -31.0591 iterations 4
Cbc0038I Pass  30: suminf.    0.57109 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  31: suminf.    0.31852 (2) obj. -31.0591 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -29.0965 to -30.3772 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.5916
Cbc0038I Pass  31: suminf.    0.85493 (3) obj. -34.5916 iterations 1
Cbc0038I Pass  32: suminf.    0.67137 (2) obj. -34.5916 iterations 5
Cbc0038I Pass  33: suminf.    0.98340 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  34: suminf.    0.79571 (4) obj. -34.5916 iterations 9
Cbc0038I Pass  35: suminf.    0.78641 (3) obj. -34.5916 iterations 5
Cbc0038I Pass  36: suminf.    1.24997 (5) obj. -34.5916 iterations 5
Cbc0038I Pass  37: suminf.    1.10569 (4) obj. -34.5916 iterations 3
Cbc0038I Pass  38: suminf.    1.42838 (4) obj. -34.5916 iterations 4
Cbc0038I Pass  39: suminf.    1.11332 (5) obj. -34.5916 iterations 4
Cbc0038I Pass  40: suminf.    1.21277 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  41: suminf.    0.76126 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  42: suminf.    0.67762 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  43: suminf.    0.34054 (2) obj. -34.5916 iterations 6
Cbc0038I Pass  44: suminf.    0.34054 (2) obj. -34.5916 iterations 0
Cbc0038I Pass  45: suminf.    0.83983 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  46: suminf.    0.85493 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  47: suminf.    0.67137 (2) obj. -34.5916 iterations 5
Cbc0038I Pass  48: suminf.    0.98340 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  49: suminf.    1.88528 (4) obj. -34.5916 iterations 5
Cbc0038I Pass  50: suminf.    1.22087 (5) obj. -34.5916 iterations 2
Cbc0038I Pass  51: suminf.    1.08151 (4) obj. -34.5916 iterations 3
Cbc0038I Pass  52: suminf.    1.07701 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  53: suminf.    0.90759 (5) obj. -34.5916 iterations 1
Cbc0038I Pass  54: suminf.    1.16165 (4) obj. -34.5916 iterations 9
Cbc0038I Pass  55: suminf.    0.98655 (4) obj. -34.5916 iterations 1
Cbc0038I Pass  56: suminf.    1.33672 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  57: suminf.    1.33385 (4) obj. -34.5916 iterations 2
Cbc0038I Pass  58: suminf.    1.59865 (5) obj. -34.5916 iterations 5
Cbc0038I Pass  59: suminf.    1.26005 (3) obj. -34.5916 iterations 3
Cbc0038I Pass  60: suminf.    2.60223 (9) obj. -34.5916 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30.3772 - took 0.04 seconds
Cbc0012I Integer solution of -30.3772 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 41 rows 25 columns, reduced to 28 rows 18 columns
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -48.721629 to -38.382818 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 823 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 486 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.3772, took 1950 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 94 times (696 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.23

