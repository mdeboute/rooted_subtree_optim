Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-66) rows, 77 (-26) columns and 425 (-178) elements
Clp1000I sum of infeasibilities 2.23274e-10 - average 1.60629e-12, 73 fixed columns
Coin0506I Presolve 5 (-134) rows, 4 (-73) columns and 11 (-414) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Coin0511I After Postsolve, objective 7843.969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Clp0000I Optimal - objective value 7843.969
Coin0511I After Postsolve, objective 7843.969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7843.968976 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 77 columns (76 integer (76 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.282%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.364865
Cbc0038I Pass   1: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Solution found of -4203.91
Cbc0038I Relaxing continuous gives -4214.02
Cbc0038I Rounding solution of -4253.59 is better than previous of -4214.02

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -4253.59 to -4262.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -4620.82
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Pass   3: suminf.    0.29450 (3) obj. -4620.82 iterations 4
Cbc0038I Pass   4: suminf.    1.08245 (6) obj. -4620.82 iterations 19
Cbc0038I Pass   5: suminf.    0.69525 (4) obj. -4620.82 iterations 10
Cbc0038I Pass   6: suminf.    0.68919 (3) obj. -5200.05 iterations 5
Cbc0038I Pass   7: suminf.    0.26987 (3) obj. -4620.82 iterations 1
Cbc0038I Pass   8: suminf.    0.90824 (6) obj. -4620.82 iterations 16
Cbc0038I Pass   9: suminf.    0.46054 (4) obj. -4620.82 iterations 13
Cbc0038I Pass  10: suminf.    0.81081 (3) obj. -5370.09 iterations 2
Cbc0038I Pass  11: suminf.    0.26840 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  12: suminf.    0.53938 (4) obj. -4620.82 iterations 18
Cbc0038I Pass  13: suminf.    0.53938 (4) obj. -4620.82 iterations 11
Cbc0038I Pass  14: suminf.    0.81081 (3) obj. -5361.76 iterations 4
Cbc0038I Pass  15: suminf.    0.27443 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  16: suminf.    1.20347 (6) obj. -4620.82 iterations 12
Cbc0038I Pass  17: suminf.    0.31239 (4) obj. -4620.82 iterations 11
Cbc0038I Pass  18: suminf.    0.64865 (3) obj. -5117.95 iterations 4
Cbc0038I Pass  19: suminf.    0.28876 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  20: suminf.    0.60133 (6) obj. -4620.82 iterations 5
Cbc0038I Pass  21: suminf.    0.32510 (4) obj. -4620.82 iterations 3
Cbc0038I Pass  22: suminf.    0.93243 (3) obj. -5509.96 iterations 3
Cbc0038I Pass  23: suminf.    0.28876 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  24: suminf.    0.66793 (6) obj. -4620.82 iterations 20
Cbc0038I Pass  25: suminf.    0.54277 (5) obj. -4620.82 iterations 5
Cbc0038I Pass  26: suminf.    1.17568 (3) obj. -5851.62 iterations 4
Cbc0038I Pass  27: suminf.    0.28467 (3) obj. -4620.82 iterations 1
Cbc0038I Pass  28: suminf.    1.79258 (8) obj. -4620.82 iterations 10
Cbc0038I Pass  29: suminf.    0.28724 (3) obj. -4620.82 iterations 6
Cbc0038I Pass  30: suminf.    0.97297 (3) obj. -5568.07 iterations 1
Cbc0038I Pass  31: suminf.    0.51248 (3) obj. -4620.82 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 45 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -4262.7 to -4293.12 (0.03 seconds)
Cbc0038I Round again with cutoff of -5265.45
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36486 (3) obj. -7843.97 iterations 0
Cbc0038I Pass  32: suminf.    0.76116 (3) obj. -5265.45 iterations 4
Cbc0038I Pass  33: suminf.    1.22983 (4) obj. -5265.45 iterations 19
Cbc0038I Pass  34: suminf.    0.74261 (3) obj. -5265.45 iterations 13
Cbc0038I Pass  35: suminf.    1.25676 (3) obj. -5975.68 iterations 1
Cbc0038I Pass  36: suminf.    0.94460 (4) obj. -5265.45 iterations 11
Cbc0038I Pass  37: suminf.    0.94460 (4) obj. -5265.45 iterations 5
Cbc0038I Pass  38: suminf.    1.37838 (3) obj. -6456.43 iterations 3
Cbc0038I Pass  39: suminf.    1.37838 (3) obj. -6456.43 iterations 1
Cbc0038I Pass  40: suminf.    0.75944 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  41: suminf.    1.51554 (5) obj. -5265.45 iterations 14
Cbc0038I Pass  42: suminf.    1.51554 (5) obj. -5265.45 iterations 4
Cbc0038I Pass  43: suminf.    1.33784 (3) obj. -6061.58 iterations 3
Cbc0038I Pass  44: suminf.    0.76150 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  45: suminf.    1.29542 (5) obj. -5265.45 iterations 6
Cbc0038I Pass  46: suminf.    1.29542 (5) obj. -5265.45 iterations 0
Cbc0038I Pass  47: suminf.    1.25676 (3) obj. -6613.21 iterations 6
Cbc0038I Pass  48: suminf.    0.76757 (3) obj. -5265.45 iterations 1
Cbc0038I Pass  49: suminf.    1.04053 (5) obj. -5265.45 iterations 10
Cbc0038I Pass  50: suminf.    0.76354 (3) obj. -5265.45 iterations 4
Cbc0038I Pass  51: suminf.    0.77027 (3) obj. -5274.75 iterations 1
Cbc0038I Pass  52: suminf.    1.38891 (6) obj. -5265.45 iterations 12
Cbc0038I Pass  53: suminf.    0.76221 (3) obj. -5265.45 iterations 10
Cbc0038I Pass  54: suminf.    0.89189 (3) obj. -5444.6 iterations 1
Cbc0038I Pass  55: suminf.    1.81790 (7) obj. -5265.45 iterations 12
Cbc0038I Pass  56: suminf.    0.75349 (3) obj. -5265.45 iterations 6
Cbc0038I Pass  57: suminf.    1.01351 (3) obj. -5624.63 iterations 1
Cbc0038I Pass  58: suminf.    1.42313 (6) obj. -5265.45 iterations 12
Cbc0038I Pass  59: suminf.    0.74828 (3) obj. -5265.45 iterations 8
Cbc0038I Pass  60: suminf.    0.89189 (3) obj. -5463.83 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 77 columns, reduced to 35 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -4293.12 - took 0.03 seconds
Cbc0012I Integer solution of -4293.1165 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 139 rows 77 columns, reduced to 14 rows 9 columns
Cbc0031I 18 added rows had average density of 12.722222
Cbc0013I At root node, 18 cuts changed objective from -7843.969 to -4312.4449 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 377 row cuts average 3.8 elements, 9 column cuts (9 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0012I Integer solution of -4294.187 found by rounding after 722 iterations and 22 nodes (0.40 seconds)
Cbc0016I Integer solution of -4294.5885 found by strong branching after 771 iterations and 28 nodes (0.41 seconds)
Cbc0012I Integer solution of -4296.4069 found by DiveCoefficient after 879 iterations and 37 nodes (0.42 seconds)
Cbc0016I Integer solution of -4297.6186 found by strong branching after 900 iterations and 37 nodes (0.42 seconds)
Cbc0001I Search completed - best objective -4297.61861, took 1027 iterations and 40 nodes (0.43 seconds)
Cbc0032I Strong branching done 324 times (2622 iterations), fathomed 7 nodes and fixed 6 variables
Cbc0035I Maximum depth 12, 128 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.43

