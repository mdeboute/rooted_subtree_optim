Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 403 (-50) elements
Clp1000I sum of infeasibilities 2.63345e-05 - average 2.01026e-07, 18 fixed columns
Coin0506I Presolve 95 (-36) rows, 55 (-19) columns and 293 (-110) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Coin0511I After Postsolve, objective 53.749388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Coin0511I After Postsolve, objective 53.749388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.74938808 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.76467
Cbc0038I Solution found of 7.38644
Cbc0038I Relaxing continuous gives -0.61205
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -0.61205 to -23.246 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.2701
Cbc0038I Pass   1: suminf.    2.16512 (16) obj. -26.2701 iterations 50
Cbc0038I Pass   2: suminf.    1.39568 (9) obj. -26.2701 iterations 18
Cbc0038I Pass   3: suminf.    1.37876 (5) obj. -26.2701 iterations 17
Cbc0038I Pass   4: suminf.    1.04837 (4) obj. -26.2701 iterations 7
Cbc0038I Pass   5: suminf.    1.28257 (3) obj. -26.2701 iterations 6
Cbc0038I Pass   6: suminf.    0.84431 (3) obj. -26.2701 iterations 2
Cbc0038I Pass   7: suminf.    1.24807 (3) obj. -26.2701 iterations 3
Cbc0038I Pass   8: suminf.    1.24807 (3) obj. -26.2701 iterations 0
Cbc0038I Pass   9: suminf.    2.70903 (7) obj. -26.2701 iterations 17
Cbc0038I Pass  10: suminf.    1.58066 (6) obj. -26.2701 iterations 11
Cbc0038I Pass  11: suminf.    1.19475 (4) obj. -26.2701 iterations 10
Cbc0038I Pass  12: suminf.    0.85866 (4) obj. -26.2701 iterations 2
Cbc0038I Pass  13: suminf.    1.47915 (9) obj. -26.2701 iterations 8
Cbc0038I Pass  14: suminf.    1.47915 (9) obj. -26.2701 iterations 0
Cbc0038I Pass  15: suminf.    1.37876 (5) obj. -26.2701 iterations 13
Cbc0038I Pass  16: suminf.    1.04837 (4) obj. -26.2701 iterations 7
Cbc0038I Pass  17: suminf.    1.28257 (3) obj. -26.2701 iterations 6
Cbc0038I Pass  18: suminf.    0.84431 (3) obj. -26.2701 iterations 2
Cbc0038I Pass  19: suminf.    1.24807 (3) obj. -26.2701 iterations 3
Cbc0038I Pass  20: suminf.    1.24807 (3) obj. -26.2701 iterations 0
Cbc0038I Pass  21: suminf.    0.69731 (6) obj. -26.2701 iterations 22
Cbc0038I Pass  22: suminf.    0.61347 (4) obj. -26.2701 iterations 13
Cbc0038I Pass  23: suminf.    1.14964 (6) obj. -26.2701 iterations 6
Cbc0038I Pass  24: suminf.    1.14964 (6) obj. -26.2701 iterations 0
Cbc0038I Pass  25: suminf.    1.77419 (4) obj. -26.2701 iterations 6
Cbc0038I Pass  26: suminf.    1.77419 (4) obj. -26.2701 iterations 0
Cbc0038I Pass  27: suminf.    1.23754 (4) obj. -26.2701 iterations 4
Cbc0038I Pass  28: suminf.    0.98262 (4) obj. -26.2701 iterations 2
Cbc0038I Pass  29: suminf.    1.77419 (4) obj. -26.2701 iterations 5
Cbc0038I Pass  30: suminf.    0.90473 (6) obj. -26.2701 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -23.246 - took 0.08 seconds
Cbc0012I Integer solution of -23.24598 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 55 rows 32 columns
Cbc0031I 26 added rows had average density of 41.769231
Cbc0013I At root node, 26 cuts changed objective from -53.485806 to -47.066882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7323 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.24598 best solution, best possible -47.066882 (0.71 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 46 rows 30 columns
Cbc0001I Search completed - best objective -23.24598, took 9086 iterations and 84 nodes (1.03 seconds)
Cbc0032I Strong branching done 868 times (15643 iterations), fathomed 4 nodes and fixed 35 variables
Cbc0035I Maximum depth 31, 321 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.04

