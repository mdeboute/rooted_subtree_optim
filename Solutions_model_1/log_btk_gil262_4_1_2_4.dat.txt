Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 262 (-2) columns and 1504 (-41) elements
Clp1000I sum of infeasibilities 1.02119e-05 - average 2.01817e-08, 89 fixed columns
Coin0506I Presolve 330 (-176) rows, 173 (-89) columns and 982 (-522) elements
Clp0029I End of values pass after 173 iterations
Clp0014I Perturbing problem by 0.001% of 2.1454619 - largest nonzero change 0 ( 0%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Coin0511I After Postsolve, objective 150.98551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Coin0511I After Postsolve, objective 150.98551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.9855062 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 262 columns (261 integer (261 of which binary)) and 1504 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 13.4449
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.98476 iterations 167
Cbc0038I Solution found of -3.98476
Cbc0038I Relaxing continuous gives -3.98476
Cbc0038I Rounding solution of -30.4078 is better than previous of -3.98476

Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 99 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -30.4078 to -78.7017 (0.15 seconds)
Cbc0038I Round again with cutoff of -85.9301
Cbc0038I Pass   2: suminf.    3.29744 (12) obj. -85.9301 iterations 39
Cbc0038I Pass   3: suminf.    3.29744 (12) obj. -85.9301 iterations 0
Cbc0038I Pass   4: suminf.    2.27583 (7) obj. -85.9301 iterations 29
Cbc0038I Pass   5: suminf.    2.04938 (8) obj. -85.9301 iterations 17
Cbc0038I Pass   6: suminf.    1.45532 (7) obj. -85.9301 iterations 40
Cbc0038I Pass   7: suminf.    1.44840 (8) obj. -85.9301 iterations 13
Cbc0038I Pass   8: suminf.    1.87761 (7) obj. -85.9301 iterations 25
Cbc0038I Pass   9: suminf.    1.21778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  10: suminf.    1.99829 (6) obj. -85.9301 iterations 8
Cbc0038I Pass  11: suminf.    0.90778 (6) obj. -85.9301 iterations 17
Cbc0038I Pass  12: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  13: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I Pass  14: suminf.    1.36013 (6) obj. -85.9301 iterations 5
Cbc0038I Pass  15: suminf.    1.20593 (7) obj. -85.9301 iterations 27
Cbc0038I Pass  16: suminf.    1.20593 (7) obj. -85.9301 iterations 6
Cbc0038I Pass  17: suminf.    1.83369 (5) obj. -85.9301 iterations 19
Cbc0038I Pass  18: suminf.    1.64572 (6) obj. -85.9301 iterations 9
Cbc0038I Pass  19: suminf.    1.82770 (6) obj. -85.9301 iterations 12
Cbc0038I Pass  20: suminf.    0.90778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  21: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  22: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I Pass  23: suminf.    1.36013 (6) obj. -85.9301 iterations 5
Cbc0038I Pass  24: suminf.    1.20593 (7) obj. -85.9301 iterations 27
Cbc0038I Pass  25: suminf.    1.20593 (7) obj. -85.9301 iterations 6
Cbc0038I Pass  26: suminf.    1.83369 (5) obj. -85.9301 iterations 19
Cbc0038I Pass  27: suminf.    1.64572 (6) obj. -85.9301 iterations 9
Cbc0038I Pass  28: suminf.    1.82770 (6) obj. -85.9301 iterations 12
Cbc0038I Pass  29: suminf.    0.90778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  30: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  31: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 117 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -78.7017 to -85.2409 (0.32 seconds)
Cbc0038I Round again with cutoff of -98.9412
Cbc0038I Pass  31: suminf.    3.81980 (14) obj. -98.9412 iterations 12
Cbc0038I Pass  32: suminf.    3.79485 (13) obj. -98.9412 iterations 13
Cbc0038I Pass  33: suminf.    3.55550 (10) obj. -98.9412 iterations 34
Cbc0038I Pass  34: suminf.    3.13986 (12) obj. -98.9412 iterations 20
Cbc0038I Pass  35: suminf.    3.14088 (12) obj. -98.9412 iterations 1
Cbc0038I Pass  36: suminf.    2.18963 (7) obj. -98.9412 iterations 28
Cbc0038I Pass  37: suminf.    2.18646 (7) obj. -98.9412 iterations 2
Cbc0038I Pass  38: suminf.    2.05811 (9) obj. -98.9412 iterations 20
Cbc0038I Pass  39: suminf.    2.05124 (8) obj. -98.9412 iterations 5
Cbc0038I Pass  40: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  41: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  42: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  43: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  44: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  45: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  46: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  47: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  48: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  49: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  50: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  51: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  52: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  53: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  54: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  55: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  56: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  57: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  58: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  59: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  60: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 121 rows 71 columns
Cbc0038I Mini branch and bound improved solution from -85.2409 to -86.7167 (0.47 seconds)
Cbc0038I Round again with cutoff of -114.554
Cbc0038I Pass  60: suminf.    5.53654 (15) obj. -114.554 iterations 19
Cbc0038I Pass  61: suminf.    4.80440 (21) obj. -114.554 iterations 21
Cbc0038I Pass  62: suminf.    4.89021 (14) obj. -114.554 iterations 33
Cbc0038I Pass  63: suminf.    4.19026 (16) obj. -114.554 iterations 15
Cbc0038I Pass  64: suminf.    4.09749 (14) obj. -114.554 iterations 9
Cbc0038I Pass  65: suminf.    3.93085 (13) obj. -114.554 iterations 38
Cbc0038I Pass  66: suminf.    3.93085 (13) obj. -114.554 iterations 2
Cbc0038I Pass  67: suminf.    4.15071 (12) obj. -114.554 iterations 22
Cbc0038I Pass  68: suminf.    3.82010 (13) obj. -114.554 iterations 5
Cbc0038I Pass  69: suminf.    3.06838 (11) obj. -114.554 iterations 2
Cbc0038I Pass  70: suminf.    2.82615 (12) obj. -114.554 iterations 11
Cbc0038I Pass  71: suminf.    4.14267 (15) obj. -114.554 iterations 43
Cbc0038I Pass  72: suminf.    3.96767 (13) obj. -114.554 iterations 10
Cbc0038I Pass  73: suminf.    4.02773 (13) obj. -114.554 iterations 27
Cbc0038I Pass  74: suminf.    3.65785 (12) obj. -114.554 iterations 15
Cbc0038I Pass  75: suminf.    3.20566 (12) obj. -114.554 iterations 3
Cbc0038I Pass  76: suminf.    4.72176 (16) obj. -114.554 iterations 36
Cbc0038I Pass  77: suminf.    3.95558 (15) obj. -114.554 iterations 13
Cbc0038I Pass  78: suminf.    3.50763 (14) obj. -114.554 iterations 4
Cbc0038I Pass  79: suminf.    3.45543 (12) obj. -114.554 iterations 9
Cbc0038I Pass  80: suminf.    4.15690 (13) obj. -114.554 iterations 30
Cbc0038I Pass  81: suminf.    3.14783 (11) obj. -114.554 iterations 22
Cbc0038I Pass  82: suminf.    3.14783 (11) obj. -114.554 iterations 1
Cbc0038I Pass  83: suminf.    4.75193 (15) obj. -114.554 iterations 34
Cbc0038I Pass  84: suminf.    4.24799 (16) obj. -114.554 iterations 18
Cbc0038I Pass  85: suminf.    3.84242 (14) obj. -114.554 iterations 15
Cbc0038I Pass  86: suminf.    4.22545 (13) obj. -114.554 iterations 28
Cbc0038I Pass  87: suminf.    3.56399 (15) obj. -114.554 iterations 7
Cbc0038I Pass  88: suminf.    3.52911 (13) obj. -114.554 iterations 4
Cbc0038I Pass  89: suminf.    3.93085 (13) obj. -114.554 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 117 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.71 seconds)
Cbc0038I After 0.71 seconds - Feasibility pump exiting with objective of -86.7167 - took 0.66 seconds
Cbc0012I Integer solution of -86.71674 found by feasibility pump after 0 iterations and 0 nodes (0.71 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 102 rows 61 columns
Cbc0012I Integer solution of -86.96552 found by RINS after 0 iterations and 0 nodes (0.86 seconds)
Cbc0031I 41 added rows had average density of 152.68293
Cbc0013I At root node, 41 cuts changed objective from -150.98551 to -135.83507 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 36885 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3480 row cuts average 257.9 elements, 0 column cuts (0 active)  in 0.958 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 253.0 elements, 0 column cuts (0 active)  in 0.357 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -86.96552 best solution, best possible -135.83507 (11.45 seconds)
Cbc0010I After 4 nodes, 5 on tree, -86.96552 best solution, best possible -135.83507 (12.17 seconds)
Cbc0010I After 15 nodes, 10 on tree, -86.96552 best solution, best possible -135.83507 (12.89 seconds)
Cbc0010I After 38 nodes, 14 on tree, -86.96552 best solution, best possible -135.83507 (13.60 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 35 rows 27 columns
Cbc0012I Integer solution of -87.61648 found by rounding after 24824 iterations and 56 nodes (14.00 seconds)
Cbc0010I After 71 nodes, 15 on tree, -87.61648 best solution, best possible -135.83507 (14.31 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -88.84227 found by rounding after 27722 iterations and 110 nodes (14.92 seconds)
Cbc0010I After 119 nodes, 22 on tree, -88.84227 best solution, best possible -135.83507 (15.02 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 2 rows 3 columns
Cbc0010I After 203 nodes, 23 on tree, -88.84227 best solution, best possible -135.83507 (15.72 seconds)
Cbc0010I After 274 nodes, 23 on tree, -88.84227 best solution, best possible -135.83507 (16.43 seconds)
Cbc0012I Integer solution of -88.93012 found by rounding after 35435 iterations and 297 nodes (16.62 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 9 columns
Cbc0012I Integer solution of -88.9703 found by RINS after 35596 iterations and 300 nodes (16.67 seconds)
Cbc0010I After 366 nodes, 21 on tree, -88.9703 best solution, best possible -135.83507 (17.13 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -89.82445 found by RINS after 39579 iterations and 400 nodes (17.42 seconds)
Cbc0010I After 441 nodes, 14 on tree, -89.82445 best solution, best possible -135.83507 (17.84 seconds)
Cbc0010I After 527 nodes, 11 on tree, -89.82445 best solution, best possible -135.83507 (18.55 seconds)
Cbc0001I Search completed - best objective -89.82444999999998, took 48207 iterations and 588 nodes (19.08 seconds)
Cbc0032I Strong branching done 3838 times (89978 iterations), fathomed 46 nodes and fixed 222 variables
Cbc0035I Maximum depth 65, 3122 variables fixed on reduced cost
Total time (CPU seconds):       18.61   (Wallclock seconds):       19.22

