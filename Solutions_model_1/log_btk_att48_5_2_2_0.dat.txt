Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 48 (-2) columns and 260 (-25) elements
Clp1000I sum of infeasibilities 0.00434537 - average 5.05276e-05, 11 fixed columns
Coin0506I Presolve 63 (-23) rows, 37 (-11) columns and 192 (-68) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 2299.5337
Clp0000I Optimal - objective value 2299.5337
Coin0511I After Postsolve, objective 2299.5337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2299.5337
Clp0000I Optimal - objective value 2299.5337
Clp0000I Optimal - objective value 2299.5337
Coin0511I After Postsolve, objective 2299.5337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2299.533686 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 48 columns (47 integer (47 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 9.49804
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -347.574 iterations 33
Cbc0038I Solution found of -347.574
Cbc0038I Relaxing continuous gives -347.575
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -347.575 to -654.118 (0.03 seconds)
Cbc0038I Round again with cutoff of -818.659
Cbc0038I Pass   2: suminf.    0.82766 (5) obj. -818.659 iterations 4
Cbc0038I Pass   3: suminf.    0.46146 (4) obj. -818.659 iterations 4
Cbc0038I Pass   4: suminf.    0.78257 (3) obj. -818.659 iterations 6
Cbc0038I Pass   5: suminf.    0.80991 (3) obj. -818.659 iterations 3
Cbc0038I Pass   6: suminf.    0.98641 (4) obj. -818.659 iterations 2
Cbc0038I Pass   7: suminf.    0.93061 (3) obj. -818.659 iterations 1
Cbc0038I Pass   8: suminf.    1.26887 (4) obj. -818.659 iterations 2
Cbc0038I Pass   9: suminf.    0.74824 (2) obj. -818.659 iterations 2
Cbc0038I Pass  10: suminf.    0.98641 (4) obj. -818.659 iterations 3
Cbc0038I Pass  11: suminf.    2.64055 (10) obj. -818.659 iterations 10
Cbc0038I Pass  12: suminf.    1.27161 (5) obj. -818.659 iterations 5
Cbc0038I Pass  13: suminf.    1.31092 (4) obj. -818.659 iterations 4
Cbc0038I Pass  14: suminf.    1.01705 (3) obj. -818.659 iterations 1
Cbc0038I Pass  15: suminf.    0.97108 (3) obj. -818.659 iterations 1
Cbc0038I Pass  16: suminf.    1.58356 (5) obj. -818.659 iterations 4
Cbc0038I Pass  17: suminf.    1.01688 (3) obj. -818.659 iterations 3
Cbc0038I Pass  18: suminf.    0.79718 (6) obj. -818.659 iterations 11
Cbc0038I Pass  19: suminf.    0.45790 (2) obj. -818.659 iterations 5
Cbc0038I Pass  20: suminf.    0.88637 (4) obj. -818.659 iterations 3
Cbc0038I Pass  21: suminf.    0.82811 (3) obj. -818.659 iterations 1
Cbc0038I Pass  22: suminf.    1.59947 (5) obj. -818.659 iterations 6
Cbc0038I Pass  23: suminf.    0.48669 (2) obj. -818.659 iterations 4
Cbc0038I Pass  24: suminf.    0.94048 (4) obj. -818.659 iterations 3
Cbc0038I Pass  25: suminf.    0.77401 (3) obj. -818.659 iterations 1
Cbc0038I Pass  26: suminf.    1.00000 (5) obj. -818.659 iterations 15
Cbc0038I Pass  27: suminf.    1.00000 (5) obj. -818.659 iterations 3
Cbc0038I Pass  28: suminf.    1.39922 (6) obj. -818.659 iterations 6
Cbc0038I Pass  29: suminf.    0.89358 (5) obj. -818.659 iterations 1
Cbc0038I Pass  30: suminf.    0.50101 (2) obj. -818.659 iterations 3
Cbc0038I Pass  31: suminf.    1.04870 (5) obj. -818.659 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -654.118 to -753.363 (0.05 seconds)
Cbc0038I Round again with cutoff of -1114.83
Cbc0038I Pass  31: suminf.    1.61398 (9) obj. -1114.83 iterations 3
Cbc0038I Pass  32: suminf.    1.17453 (8) obj. -1114.83 iterations 2
Cbc0038I Pass  33: suminf.    1.56482 (6) obj. -1114.83 iterations 12
Cbc0038I Pass  34: suminf.    1.30738 (4) obj. -1114.83 iterations 2
Cbc0038I Pass  35: suminf.    1.30738 (4) obj. -1114.83 iterations 0
Cbc0038I Pass  36: suminf.    1.08984 (5) obj. -1114.83 iterations 4
Cbc0038I Pass  37: suminf.    1.02038 (4) obj. -1114.83 iterations 1
Cbc0038I Pass  38: suminf.    1.04855 (5) obj. -1114.83 iterations 2
Cbc0038I Pass  39: suminf.    0.90637 (3) obj. -1114.83 iterations 2
Cbc0038I Pass  40: suminf.    1.02038 (4) obj. -1114.83 iterations 3
Cbc0038I Pass  41: suminf.    2.97760 (18) obj. -1114.83 iterations 26
Cbc0038I Pass  42: suminf.    2.11106 (10) obj. -1114.83 iterations 7
Cbc0038I Pass  43: suminf.    3.03152 (8) obj. -1114.83 iterations 10
Cbc0038I Pass  44: suminf.    1.62373 (5) obj. -1114.83 iterations 4
Cbc0038I Pass  45: suminf.    1.62373 (5) obj. -1114.83 iterations 0
Cbc0038I Pass  46: suminf.    1.55053 (5) obj. -1114.83 iterations 4
Cbc0038I Pass  47: suminf.    1.42186 (4) obj. -1114.83 iterations 1
Cbc0038I Pass  48: suminf.    1.38928 (5) obj. -1114.83 iterations 2
Cbc0038I Pass  49: suminf.    1.23541 (4) obj. -1114.83 iterations 1
Cbc0038I Pass  50: suminf.    1.55053 (5) obj. -1114.83 iterations 3
Cbc0038I Pass  51: suminf.    2.93242 (13) obj. -1114.83 iterations 10
Cbc0038I Pass  52: suminf.    2.59631 (11) obj. -1114.83 iterations 6
Cbc0038I Pass  53: suminf.    3.12025 (10) obj. -1114.83 iterations 14
Cbc0038I Pass  54: suminf.    2.49648 (7) obj. -1114.83 iterations 2
Cbc0038I Pass  55: suminf.    1.70470 (6) obj. -1114.83 iterations 1
Cbc0038I Pass  56: suminf.    1.49163 (4) obj. -1114.83 iterations 2
Cbc0038I Pass  57: suminf.    1.36431 (5) obj. -1114.83 iterations 2
Cbc0038I Pass  58: suminf.    1.29895 (4) obj. -1114.83 iterations 1
Cbc0038I Pass  59: suminf.    1.54629 (5) obj. -1114.83 iterations 3
Cbc0038I Pass  60: suminf.    3.61251 (11) obj. -1114.83 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 65 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -753.363 - took 0.06 seconds
Cbc0012I Integer solution of -753.3632 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 48 columns, reduced to 46 rows 28 columns
Cbc0031I 17 added rows had average density of 40.235294
Cbc0013I At root node, 17 cuts changed objective from -2299.5337 to -1485.9268 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5305 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1078 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0016I Integer solution of -755.3222 found by strong branching after 5215 iterations and 8 nodes (0.59 seconds)
Cbc0001I Search completed - best objective -755.3222000000001, took 5495 iterations and 14 nodes (0.60 seconds)
Cbc0032I Strong branching done 268 times (6935 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.60

