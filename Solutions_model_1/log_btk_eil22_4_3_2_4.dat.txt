Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 111 (-18) elements
Clp1000I sum of infeasibilities 1.85911e-05 - average 5.02461e-07, 1 fixed columns
Coin0506I Presolve 33 (-4) rows, 20 (-2) columns and 99 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Coin0511I After Postsolve, objective 71.397156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Clp0000I Optimal - objective value 71.397156
Coin0511I After Postsolve, objective 71.397156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.39715592 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.242%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.67322
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.4485 iterations 11
Cbc0038I Solution found of -25.4485
Cbc0038I Relaxing continuous gives -25.4485
Cbc0038I Rounding solution of -27.181 is better than previous of -25.4485

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -27.181 to -35.9103 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.3184
Cbc0038I Pass   2: suminf.    0.52838 (3) obj. -39.3184 iterations 3
Cbc0038I Pass   3: suminf.    0.44000 (1) obj. -39.3184 iterations 2
Cbc0038I Pass   4: suminf.    0.42263 (1) obj. -39.3184 iterations 1
Cbc0038I Pass   5: suminf.    0.40586 (2) obj. -39.3184 iterations 5
Cbc0038I Pass   6: suminf.    0.40586 (2) obj. -39.3184 iterations 0
Cbc0038I Pass   7: suminf.    0.45290 (2) obj. -39.3184 iterations 2
Cbc0038I Pass   8: suminf.    0.35956 (2) obj. -39.3184 iterations 1
Cbc0038I Pass   9: suminf.    1.05766 (4) obj. -39.3184 iterations 3
Cbc0038I Pass  10: suminf.    0.98470 (3) obj. -39.3184 iterations 1
Cbc0038I Pass  11: suminf.    0.72569 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  12: suminf.    0.48220 (2) obj. -39.3184 iterations 4
Cbc0038I Pass  13: suminf.    0.26358 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  14: suminf.    0.04000 (1) obj. -39.3184 iterations 2
Cbc0038I Pass  15: suminf.    0.07708 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  16: suminf.    1.44731 (5) obj. -39.3184 iterations 8
Cbc0038I Pass  17: suminf.    0.88370 (5) obj. -39.3184 iterations 4
Cbc0038I Pass  18: suminf.    0.94484 (3) obj. -39.3184 iterations 7
Cbc0038I Pass  19: suminf.    0.83124 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  20: suminf.    1.09038 (4) obj. -39.3184 iterations 2
Cbc0038I Pass  21: suminf.    0.97410 (4) obj. -39.3184 iterations 2
Cbc0038I Pass  22: suminf.    0.23360 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  23: suminf.    0.21378 (1) obj. -39.3184 iterations 2
Cbc0038I Pass  24: suminf.    0.21956 (1) obj. -39.3184 iterations 1
Cbc0038I Pass  25: suminf.    0.74904 (3) obj. -39.3184 iterations 4
Cbc0038I Pass  26: suminf.    0.71063 (4) obj. -39.3184 iterations 1
Cbc0038I Pass  27: suminf.    0.92138 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  28: suminf.    0.53074 (3) obj. -39.3184 iterations 3
Cbc0038I Pass  29: suminf.    0.94484 (3) obj. -39.3184 iterations 5
Cbc0038I Pass  30: suminf.    0.83124 (3) obj. -39.3184 iterations 2
Cbc0038I Pass  31: suminf.    1.09038 (4) obj. -39.3184 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -35.9103 - took 0.01 seconds
Cbc0012I Integer solution of -35.9103 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 15 rows 12 columns
Cbc0031I 8 added rows had average density of 17.375
Cbc0013I At root node, 8 cuts changed objective from -69.990451 to -47.942169 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 716 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 426 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0012I Integer solution of -36.5973 found by DiveCoefficient after 1528 iterations and 4 nodes (0.12 seconds)
Cbc0001I Search completed - best objective -36.5973, took 1569 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 36 times (298 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

