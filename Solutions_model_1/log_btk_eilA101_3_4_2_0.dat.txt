Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 99 (-4) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 3.23605e-05 - average 1.73051e-07, 15 fixed columns
Coin0506I Presolve 156 (-31) rows, 83 (-16) columns and 471 (-93) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 2.1791762 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Coin0511I After Postsolve, objective 31.329219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Clp0000I Optimal - objective value 31.329219
Coin0511I After Postsolve, objective 31.329219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.32921891 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 99 columns (98 integer (98 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 13.335
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.76414 iterations 78
Cbc0038I Solution found of 7.76414
Cbc0038I Relaxing continuous gives 7.76414
Cbc0038I Rounding solution of 2.34974 is better than previous of 7.76414

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 99 rows 57 columns
Cbc0038I Mini branch and bound improved solution from 2.34974 to -4.84528 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.49376
Cbc0038I Pass   2: suminf.    2.65273 (10) obj. -7.49376 iterations 22
Cbc0038I Pass   3: suminf.    2.57723 (9) obj. -7.49376 iterations 1
Cbc0038I Pass   4: suminf.    2.57723 (9) obj. -7.49376 iterations 0
Cbc0038I Pass   5: suminf.    2.60973 (8) obj. -7.49376 iterations 26
Cbc0038I Pass   6: suminf.    2.25890 (7) obj. -7.49376 iterations 1
Cbc0038I Pass   7: suminf.    1.78369 (9) obj. -7.49376 iterations 4
Cbc0038I Pass   8: suminf.    1.77770 (8) obj. -7.49376 iterations 1
Cbc0038I Pass   9: suminf.    1.48981 (6) obj. -7.49376 iterations 20
Cbc0038I Pass  10: suminf.    1.12893 (6) obj. -7.49376 iterations 2
Cbc0038I Pass  11: suminf.    1.12893 (6) obj. -7.49376 iterations 0
Cbc0038I Pass  12: suminf.    2.32723 (7) obj. -7.49376 iterations 8
Cbc0038I Pass  13: suminf.    2.14266 (6) obj. -7.49376 iterations 7
Cbc0038I Pass  14: suminf.    2.43455 (7) obj. -7.49376 iterations 5
Cbc0038I Pass  15: suminf.    2.03630 (7) obj. -7.49376 iterations 9
Cbc0038I Pass  16: suminf.    2.44493 (7) obj. -7.49376 iterations 12
Cbc0038I Pass  17: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  18: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  19: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  20: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  21: suminf.    2.44493 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  22: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  23: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  24: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  25: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  26: suminf.    2.44493 (7) obj. -7.49376 iterations 12
Cbc0038I Pass  27: suminf.    2.42336 (8) obj. -7.49376 iterations 9
Cbc0038I Pass  28: suminf.    2.71074 (7) obj. -7.49376 iterations 14
Cbc0038I Pass  29: suminf.    2.03630 (7) obj. -7.49376 iterations 10
Cbc0038I Pass  30: suminf.    2.03630 (7) obj. -7.49376 iterations 0
Cbc0038I Pass  31: suminf.    2.44493 (7) obj. -7.49376 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -4.84528 to -6.01999 (0.13 seconds)
Cbc0038I Round again with cutoff of -12.2609
Cbc0038I Pass  31: suminf.    3.96947 (18) obj. -12.2609 iterations 8
Cbc0038I Pass  32: suminf.    3.88853 (17) obj. -12.2609 iterations 1
Cbc0038I Pass  33: suminf.    3.88853 (17) obj. -12.2609 iterations 0
Cbc0038I Pass  34: suminf.    2.00158 (9) obj. -12.2609 iterations 21
Cbc0038I Pass  35: suminf.    1.96522 (8) obj. -12.2609 iterations 7
Cbc0038I Pass  36: suminf.    2.76363 (9) obj. -12.2609 iterations 23
Cbc0038I Pass  37: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  38: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  39: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  40: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  41: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  42: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  43: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  44: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  45: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  46: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  47: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  48: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  49: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  50: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  51: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  52: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  53: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  54: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I Pass  55: suminf.    2.28662 (8) obj. -12.2609 iterations 3
Cbc0038I Pass  56: suminf.    2.27243 (7) obj. -12.2609 iterations 1
Cbc0038I Pass  57: suminf.    2.42228 (8) obj. -12.2609 iterations 12
Cbc0038I Pass  58: suminf.    1.92780 (9) obj. -12.2609 iterations 6
Cbc0038I Pass  59: suminf.    1.92238 (8) obj. -12.2609 iterations 8
Cbc0038I Pass  60: suminf.    2.76363 (9) obj. -12.2609 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 99 columns, reduced to 103 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -6.01999 - took 0.18 seconds
Cbc0012I Integer solution of -6.01999 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 187 rows 99 columns, reduced to 99 rows 57 columns
Cbc0031I 35 added rows had average density of 33.714286
Cbc0013I At root node, 35 cuts changed objective from -31.329219 to -23.340559 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22537 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2504 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 97.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.01999 best solution, best possible -23.340559 (1.75 seconds)
Cbc0038I Full problem 187 rows 99 columns, reduced to 31 rows 27 columns
Cbc0038I Full problem 187 rows 99 columns, reduced to 76 rows 49 columns
Cbc0001I Search completed - best objective -6.019989999999986, took 18282 iterations and 156 nodes (2.39 seconds)
Cbc0032I Strong branching done 1498 times (28239 iterations), fathomed 22 nodes and fixed 89 variables
Cbc0035I Maximum depth 32, 449 variables fixed on reduced cost
Total time (CPU seconds):       2.34   (Wallclock seconds):       2.41

