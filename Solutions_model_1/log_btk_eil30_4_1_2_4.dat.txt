Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 30 (-2) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 0.000133363 - average 2.7217e-06, 4 fixed columns
Coin0506I Presolve 42 (-7) rows, 26 (-4) columns and 129 (-21) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 60.346485
Clp0000I Optimal - objective value 60.346485
Coin0511I After Postsolve, objective 60.346485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.346485
Clp0000I Optimal - objective value 60.346485
Clp0000I Optimal - objective value 60.346485
Coin0511I After Postsolve, objective 60.346485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.34648506 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 30 columns (29 integer (29 of which binary)) and 150 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.678%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.59664
Cbc0038I Pass   1: suminf.    0.21667 (1) obj. -16.4391 iterations 19
Cbc0038I Solution found of -2.10649
Cbc0038I Relaxing continuous gives -2.10649
Cbc0038I Rounding solution of -6.6618 is better than previous of -2.10649

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 30 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -6.6618 to -14.1214 (0.02 seconds)
Cbc0038I Round again with cutoff of -18.744
Cbc0038I Pass   2: suminf.    0.24306 (3) obj. -18.744 iterations 2
Cbc0038I Pass   3: suminf.    0.83626 (4) obj. -18.744 iterations 8
Cbc0038I Pass   4: suminf.    0.74699 (4) obj. -18.744 iterations 6
Cbc0038I Pass   5: suminf.    1.44014 (5) obj. -18.744 iterations 9
Cbc0038I Pass   6: suminf.    1.44014 (5) obj. -18.744 iterations 0
Cbc0038I Pass   7: suminf.    0.91653 (6) obj. -18.744 iterations 6
Cbc0038I Pass   8: suminf.    0.85967 (5) obj. -18.744 iterations 1
Cbc0038I Pass   9: suminf.    1.44014 (5) obj. -18.744 iterations 4
Cbc0038I Pass  10: suminf.    4.04677 (11) obj. -18.744 iterations 10
Cbc0038I Pass  11: suminf.    2.01772 (7) obj. -18.744 iterations 5
Cbc0038I Pass  12: suminf.    1.91968 (6) obj. -18.744 iterations 1
Cbc0038I Pass  13: suminf.    1.72575 (6) obj. -18.744 iterations 3
Cbc0038I Pass  14: suminf.    0.86301 (4) obj. -18.744 iterations 3
Cbc0038I Pass  15: suminf.    1.41596 (7) obj. -18.744 iterations 8
Cbc0038I Pass  16: suminf.    1.41562 (6) obj. -18.744 iterations 1
Cbc0038I Pass  17: suminf.    1.44014 (5) obj. -18.744 iterations 9
Cbc0038I Pass  18: suminf.    1.44014 (5) obj. -18.744 iterations 0
Cbc0038I Pass  19: suminf.    0.91653 (6) obj. -18.744 iterations 6
Cbc0038I Pass  20: suminf.    0.85967 (5) obj. -18.744 iterations 1
Cbc0038I Pass  21: suminf.    1.44014 (5) obj. -18.744 iterations 4
Cbc0038I Pass  22: suminf.    3.72099 (9) obj. -18.744 iterations 16
Cbc0038I Pass  23: suminf.    2.13589 (8) obj. -18.744 iterations 5
Cbc0038I Pass  24: suminf.    1.06790 (9) obj. -18.744 iterations 3
Cbc0038I Pass  25: suminf.    0.61224 (5) obj. -18.744 iterations 3
Cbc0038I Pass  26: suminf.    1.89732 (7) obj. -18.744 iterations 10
Cbc0038I Pass  27: suminf.    1.78434 (6) obj. -18.744 iterations 1
Cbc0038I Pass  28: suminf.    1.20167 (7) obj. -18.744 iterations 8
Cbc0038I Pass  29: suminf.    1.19261 (6) obj. -18.744 iterations 1
Cbc0038I Pass  30: suminf.    1.84180 (6) obj. -18.744 iterations 8
Cbc0038I Pass  31: suminf.    1.82225 (5) obj. -18.744 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 30 columns, reduced to 43 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14.1214 - took 0.05 seconds
Cbc0012I Integer solution of -14.121405 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 49 rows 30 columns, reduced to 30 rows 20 columns
Cbc0031I 15 added rows had average density of 21.6
Cbc0013I At root node, 15 cuts changed objective from -60.346485 to -29.511609 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3175 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 896 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 84 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -15.022195 found by DiveCoefficient after 3700 iterations and 7 nodes (0.31 seconds)
Cbc0001I Search completed - best objective -15.02219530999999, took 3728 iterations and 10 nodes (0.31 seconds)
Cbc0032I Strong branching done 140 times (1833 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.32

