Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 97 (-6) columns and 554 (-49) elements
Clp1000I sum of infeasibilities 0.000127412 - average 6.92456e-07, 34 fixed columns
Coin0506I Presolve 108 (-76) rows, 58 (-39) columns and 324 (-230) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 0.34030027 - largest nonzero change 0 ( 0%) - largest zero change 2.9336283e-05
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Coin0511I After Postsolve, objective 193.6075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Coin0511I After Postsolve, objective 193.6075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.6075017 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 97 columns (96 integer (96 of which binary)) and 554 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.962%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.66683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -77.0309 iterations 50
Cbc0038I Solution found of -77.0309
Cbc0038I Relaxing continuous gives -77.0309
Cbc0038I Rounding solution of -131.402 is better than previous of -77.0309

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 97 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -131.402 to -157.813 (0.05 seconds)
Cbc0038I Round again with cutoff of -161.392
Cbc0038I Pass   2: suminf.    2.50703 (7) obj. -161.392 iterations 16
Cbc0038I Pass   3: suminf.    2.36493 (6) obj. -161.392 iterations 1
Cbc0038I Pass   4: suminf.    0.40371 (3) obj. -161.392 iterations 13
Cbc0038I Pass   5: suminf.    0.40371 (3) obj. -161.392 iterations 0
Cbc0038I Pass   6: suminf.    0.88567 (3) obj. -161.392 iterations 9
Cbc0038I Pass   7: suminf.    0.59553 (2) obj. -161.392 iterations 5
Cbc0038I Pass   8: suminf.    0.75322 (2) obj. -161.392 iterations 5
Cbc0038I Pass   9: suminf.    0.75322 (2) obj. -161.392 iterations 0
Cbc0038I Pass  10: suminf.    0.73655 (2) obj. -161.392 iterations 5
Cbc0038I Pass  11: suminf.    1.64322 (8) obj. -161.392 iterations 16
Cbc0038I Pass  12: suminf.    1.64322 (8) obj. -161.392 iterations 5
Cbc0038I Pass  13: suminf.    2.14581 (6) obj. -161.392 iterations 25
Cbc0038I Pass  14: suminf.    1.57621 (4) obj. -161.392 iterations 2
Cbc0038I Pass  15: suminf.    0.67078 (2) obj. -161.392 iterations 10
Cbc0038I Pass  16: suminf.    0.67078 (2) obj. -161.392 iterations 3
Cbc0038I Pass  17: suminf.    0.75322 (2) obj. -161.392 iterations 9
Cbc0038I Pass  18: suminf.    0.73655 (2) obj. -161.392 iterations 5
Cbc0038I Pass  19: suminf.    3.98428 (12) obj. -161.392 iterations 33
Cbc0038I Pass  20: suminf.    2.71891 (10) obj. -161.392 iterations 9
Cbc0038I Pass  21: suminf.    3.73912 (9) obj. -161.392 iterations 15
Cbc0038I Pass  22: suminf.    0.64309 (4) obj. -161.392 iterations 14
Cbc0038I Pass  23: suminf.    1.34069 (4) obj. -161.392 iterations 9
Cbc0038I Pass  24: suminf.    0.80959 (4) obj. -161.392 iterations 2
Cbc0038I Pass  25: suminf.    0.64309 (4) obj. -161.392 iterations 9
Cbc0038I Pass  26: suminf.    1.65720 (8) obj. -161.392 iterations 14
Cbc0038I Pass  27: suminf.    1.44917 (7) obj. -161.392 iterations 4
Cbc0038I Pass  28: suminf.    1.83177 (5) obj. -161.392 iterations 9
Cbc0038I Pass  29: suminf.    0.95855 (4) obj. -161.392 iterations 8
Cbc0038I Pass  30: suminf.    0.71942 (4) obj. -161.392 iterations 4
Cbc0038I Pass  31: suminf.    0.66879 (4) obj. -161.392 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 97 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -157.813 - took 0.07 seconds
Cbc0012I Integer solution of -157.81293 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 184 rows 97 columns, reduced to 53 rows 31 columns
Cbc0031I 11 added rows had average density of 64
Cbc0013I At root node, 11 cuts changed objective from -193.6075 to -175.40867 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3597 row cuts average 3.4 elements, 6 column cuts (6 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1121 row cuts average 86.8 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 92.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0004I Integer solution of -158.16934 found after 3484 iterations and 22 nodes (0.57 seconds)
Cbc0012I Integer solution of -158.35664 found by rounding after 3503 iterations and 24 nodes (0.57 seconds)
Cbc0001I Search completed - best objective -158.35664, took 3850 iterations and 38 nodes (0.59 seconds)
Cbc0032I Strong branching done 306 times (3507 iterations), fathomed 10 nodes and fixed 13 variables
Cbc0035I Maximum depth 10, 181 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.60

