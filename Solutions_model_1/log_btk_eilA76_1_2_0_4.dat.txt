Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 70 (-8) columns and 398 (-55) elements
Clp1000I sum of infeasibilities 0 - average 0, 61 fixed columns
Coin0506I Presolve 10 (-122) rows, 9 (-61) columns and 32 (-366) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 14250.523
Clp0000I Optimal - objective value 14250.523
Coin0511I After Postsolve, objective 14250.523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.985045 - largest nonzero change 2.5987089e-05 ( 0.0011991495%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 14250.523
Clp0000I Optimal - objective value 14250.523
Clp0000I Optimal - objective value 14250.523
Coin0511I After Postsolve, objective 14250.523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14250.52298 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 70 columns (69 integer (69 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.408%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.893617
Cbc0038I Pass   1: suminf.    0.89362 (2) obj. -14250.5 iterations 4
Cbc0038I Solution found of -11464.1
Cbc0038I Relaxing continuous gives -11464.1
Cbc0038I Rounding solution of -13635.5 is better than previous of -11464.1

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 70 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13697
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.89362 (2) obj. -14250.5 iterations 0
Cbc0038I Pass   3: suminf.    0.21374 (1) obj. -13697 iterations 2
Cbc0038I Pass   4: suminf.    0.17857 (1) obj. -13796.9 iterations 1
Cbc0038I Pass   5: suminf.    0.48275 (4) obj. -13697 iterations 11
Cbc0038I Pass   6: suminf.    0.36547 (4) obj. -13697 iterations 8
Cbc0038I Pass   7: suminf.    0.08067 (5) obj. -13697 iterations 17
Cbc0038I Pass   8: suminf.    0.05849 (3) obj. -13697 iterations 4
Cbc0038I Pass   9: suminf.    1.60149 (4) obj. -13697 iterations 11
Cbc0038I Pass  10: suminf.    0.18519 (1) obj. -13905.6 iterations 4
Cbc0038I Pass  11: suminf.    0.18519 (1) obj. -13905.6 iterations 0
Cbc0038I Pass  12: suminf.    0.25864 (1) obj. -13697 iterations 2
Cbc0038I Pass  13: suminf.    0.04426 (1) obj. -13697 iterations 3
Cbc0038I Pass  14: suminf.    0.04426 (1) obj. -13697 iterations 2
Cbc0038I Pass  15: suminf.    0.17857 (1) obj. -14078.4 iterations 1
Cbc0038I Pass  16: suminf.    0.04426 (1) obj. -13697 iterations 8
Cbc0038I Pass  17: suminf.    0.59259 (2) obj. -13849 iterations 13
Cbc0038I Pass  18: suminf.    0.29030 (2) obj. -13697 iterations 7
Cbc0038I Pass  19: suminf.    0.38046 (2) obj. -13697 iterations 5
Cbc0038I Pass  20: suminf.    0.84236 (2) obj. -13697 iterations 5
Cbc0038I Pass  21: suminf.    0.68333 (2) obj. -13924.2 iterations 3
Cbc0038I Pass  22: suminf.    1.50165 (5) obj. -13697 iterations 8
Cbc0038I Pass  23: suminf.    1.33761 (5) obj. -13697 iterations 3
Cbc0038I Pass  24: suminf.    0.84746 (4) obj. -13697 iterations 4
Cbc0038I Pass  25: suminf.    0.38046 (2) obj. -13697 iterations 3
Cbc0038I Pass  26: suminf.    0.84236 (2) obj. -13697 iterations 6
Cbc0038I Pass  27: suminf.    0.68333 (2) obj. -13924.2 iterations 3
Cbc0038I Pass  28: suminf.    0.58485 (2) obj. -13701.5 iterations 5
Cbc0038I Pass  29: suminf.    0.57915 (2) obj. -13697 iterations 7
Cbc0038I Pass  30: suminf.    0.38046 (2) obj. -13697 iterations 6
Cbc0038I Pass  31: suminf.    0.38046 (2) obj. -13697 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 70 columns, reduced to 14 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -11464.1 to -13969.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -14025.9
Cbc0038I Reduced cost fixing fixed 49 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.89362 (2) obj. -14250.5 iterations 0
Cbc0038I Pass  32: suminf.    0.57187 (2) obj. -14025.9 iterations 2
Cbc0038I Pass  33: suminf.    0.57187 (2) obj. -14025.9 iterations 0
Cbc0038I Pass  34: suminf.    0.37586 (2) obj. -14025.9 iterations 3
Cbc0038I Pass  35: suminf.    0.85497 (2) obj. -14025.9 iterations 2
Cbc0038I Pass  36: suminf.    0.65000 (2) obj. -14241.2 iterations 2
Cbc0038I Pass  37: suminf.    2.09996 (6) obj. -14025.9 iterations 9
Cbc0038I Pass  38: suminf.    0.76059 (3) obj. -14025.9 iterations 4
Cbc0038I Pass  39: suminf.    0.76059 (3) obj. -14025.9 iterations 0
Cbc0038I Pass  40: suminf.    0.89362 (2) obj. -14250.5 iterations 8
Cbc0038I Pass  41: suminf.    0.57187 (2) obj. -14025.9 iterations 3
Cbc0038I Pass  42: suminf.    0.57187 (2) obj. -14025.9 iterations 0
Cbc0038I Pass  43: suminf.    0.37586 (2) obj. -14025.9 iterations 4
Cbc0038I Pass  44: suminf.    0.85497 (2) obj. -14025.9 iterations 3
Cbc0038I Pass  45: suminf.    0.65000 (2) obj. -14241.2 iterations 3
Cbc0038I Pass  46: suminf.    0.85497 (2) obj. -14025.9 iterations 4
Cbc0038I Pass  47: suminf.    0.65000 (2) obj. -14241.2 iterations 3
Cbc0038I Pass  48: suminf.    0.47727 (2) obj. -14133.3 iterations 2
Cbc0038I Pass  49: suminf.    0.37005 (2) obj. -14025.9 iterations 2
Cbc0038I Pass  50: suminf.    0.43907 (2) obj. -14135.8 iterations 2
Cbc0038I Pass  51: suminf.    0.37005 (2) obj. -14025.9 iterations 3
Cbc0038I Pass  52: suminf.    0.37005 (2) obj. -14025.9 iterations 2
Cbc0038I Pass  53: suminf.    1.36300 (5) obj. -14025.9 iterations 9
Cbc0038I Pass  54: suminf.    0.89362 (2) obj. -14250.5 iterations 6
Cbc0038I Pass  55: suminf.    0.57187 (2) obj. -14025.9 iterations 2
Cbc0038I Pass  56: suminf.    0.57187 (2) obj. -14025.9 iterations 2
Cbc0038I Pass  57: suminf.    0.37586 (2) obj. -14025.9 iterations 4
Cbc0038I Pass  58: suminf.    0.85497 (2) obj. -14025.9 iterations 2
Cbc0038I Pass  59: suminf.    0.65000 (2) obj. -14241.2 iterations 2
Cbc0038I Pass  60: suminf.    0.68802 (2) obj. -14025.9 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 70 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -13969.8 - took 0.02 seconds
Cbc0012I Integer solution of -13969.8 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 132 rows 70 columns, reduced to 2 rows 5 columns
Cbc0031I 6 added rows had average density of 7.6666667
Cbc0013I At root node, 21 cuts changed objective from -14250.523 to -13969.8 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.6 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -13969.8, took 57 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 48 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

