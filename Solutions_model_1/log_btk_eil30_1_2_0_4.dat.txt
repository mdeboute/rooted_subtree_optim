Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 39 (-24) rows, 23 (-9) columns and 117 (-60) elements
Clp0000I Optimal - objective value 103.33347
Coin0511I After Postsolve, objective 103.33347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.3334655 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 23 columns (22 integer (22 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.793%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.26683
Cbc0038I Pass   1: suminf.    0.15625 (2) obj. -36.9688 iterations 17
Cbc0038I Solution found of -34
Cbc0038I Relaxing continuous gives -34
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -41.3833
Cbc0038I Pass   2: suminf.    0.25424 (6) obj. -41.3833 iterations 3
Cbc0038I Pass   3: suminf.    0.21438 (5) obj. -41.3833 iterations 6
Cbc0038I Pass   4: suminf.    1.08082 (6) obj. -41.3833 iterations 15
Cbc0038I Pass   5: suminf.    0.59203 (6) obj. -41.3833 iterations 2
Cbc0038I Pass   6: suminf.    1.87390 (11) obj. -41.3833 iterations 8
Cbc0038I Pass   7: suminf.    1.87390 (11) obj. -41.3833 iterations 0
Cbc0038I Pass   8: suminf.    1.61577 (7) obj. -41.3833 iterations 16
Cbc0038I Pass   9: suminf.    1.48462 (5) obj. -41.3833 iterations 2
Cbc0038I Pass  10: suminf.    0.25000 (1) obj. -41.3833 iterations 6
Cbc0038I Pass  11: suminf.    0.44642 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  12: suminf.    0.76296 (5) obj. -41.3833 iterations 3
Cbc0038I Pass  13: suminf.    0.42802 (1) obj. -41.3833 iterations 2
Cbc0038I Pass  14: suminf.    0.28226 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  15: suminf.    1.15691 (5) obj. -41.3833 iterations 11
Cbc0038I Pass  16: suminf.    1.15691 (5) obj. -41.3833 iterations 2
Cbc0038I Pass  17: suminf.    0.38794 (1) obj. -41.3833 iterations 6
Cbc0038I Pass  18: suminf.    0.31452 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  19: suminf.    0.59006 (3) obj. -41.3833 iterations 2
Cbc0038I Pass  20: suminf.    0.31452 (1) obj. -41.3833 iterations 3
Cbc0038I Pass  21: suminf.    1.07132 (6) obj. -41.3833 iterations 7
Cbc0038I Pass  22: suminf.    0.28368 (2) obj. -41.3833 iterations 4
Cbc0038I Pass  23: suminf.    0.59270 (2) obj. -41.3833 iterations 4
Cbc0038I Pass  24: suminf.    0.59270 (2) obj. -41.3833 iterations 0
Cbc0038I Pass  25: suminf.    0.42802 (1) obj. -41.3833 iterations 2
Cbc0038I Pass  26: suminf.    0.41129 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  27: suminf.    1.34481 (6) obj. -41.3833 iterations 5
Cbc0038I Pass  28: suminf.    2.25369 (6) obj. -41.3833 iterations 4
Cbc0038I Pass  29: suminf.    1.35765 (4) obj. -41.3833 iterations 4
Cbc0038I Pass  30: suminf.    1.17782 (3) obj. -41.3833 iterations 2
Cbc0038I Pass  31: suminf.    0.51239 (2) obj. -41.3833 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -34 - took 0.02 seconds
Cbc0012I Integer solution of -34 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 20
Cbc0013I At root node, 9 cuts changed objective from -103.33347 to -53.816663 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 569 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 383 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34, took 1625 iterations and 6 nodes (0.18 seconds)
Cbc0032I Strong branching done 94 times (825 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

