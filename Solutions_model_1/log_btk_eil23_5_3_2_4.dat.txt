Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 77 (-58) elements
Clp1000I sum of infeasibilities 5.97106e-06 - average 1.92615e-07, 2 fixed columns
Coin0506I Presolve 22 (-9) rows, 16 (-3) columns and 56 (-21) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Coin0511I After Postsolve, objective 238.67123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Clp0000I Optimal - objective value 238.67123
Coin0511I After Postsolve, objective 238.67123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 238.6712306 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.94766
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44.488 iterations 8
Cbc0038I Solution found of -44.488
Cbc0038I Relaxing continuous gives -44.488
Cbc0038I Rounding solution of -66.0722 is better than previous of -44.488

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -66.0722 to -100.082 (0.01 seconds)
Cbc0038I Round again with cutoff of -113.941
Cbc0038I Pass   2: suminf.    0.42050 (2) obj. -113.941 iterations 2
Cbc0038I Pass   3: suminf.    0.46585 (1) obj. -113.941 iterations 2
Cbc0038I Pass   4: suminf.    0.26148 (2) obj. -113.941 iterations 2
Cbc0038I Pass   5: suminf.    0.39268 (1) obj. -113.941 iterations 2
Cbc0038I Pass   6: suminf.    0.12194 (1) obj. -113.941 iterations 1
Cbc0038I Pass   7: suminf.    0.22039 (1) obj. -113.941 iterations 4
Cbc0038I Pass   8: suminf.    0.07474 (1) obj. -113.941 iterations 4
Cbc0038I Pass   9: suminf.    0.47415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  10: suminf.    0.22415 (1) obj. -113.941 iterations 4
Cbc0038I Pass  11: suminf.    0.22415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  12: suminf.    0.32327 (1) obj. -113.941 iterations 1
Cbc0038I Pass  13: suminf.    0.92972 (3) obj. -113.941 iterations 5
Cbc0038I Pass  14: suminf.    0.21982 (1) obj. -113.941 iterations 2
Cbc0038I Pass  15: suminf.    0.48927 (1) obj. -113.941 iterations 1
Cbc0038I Pass  16: suminf.    0.21626 (1) obj. -113.941 iterations 2
Cbc0038I Pass  17: suminf.    0.46000 (1) obj. -113.941 iterations 1
Cbc0038I Pass  18: suminf.    0.21626 (1) obj. -113.941 iterations 1
Cbc0038I Pass  19: suminf.    0.92291 (4) obj. -113.941 iterations 7
Cbc0038I Pass  20: suminf.    0.45630 (2) obj. -113.941 iterations 2
Cbc0038I Pass  21: suminf.    0.40991 (1) obj. -113.941 iterations 1
Cbc0038I Pass  22: suminf.    0.22640 (1) obj. -113.941 iterations 2
Cbc0038I Pass  23: suminf.    0.41951 (1) obj. -113.941 iterations 1
Cbc0038I Pass  24: suminf.    0.16764 (1) obj. -113.941 iterations 7
Cbc0038I Pass  25: suminf.    0.16764 (1) obj. -113.941 iterations 4
Cbc0038I Pass  26: suminf.    0.33415 (1) obj. -113.941 iterations 1
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -113.941 iterations 5
Cbc0038I Solution found of -113.941
Cbc0038I Relaxing continuous gives -117.603
Cbc0038I Rounding solution of -119.693 is better than previous of -117.603

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -143.489
Cbc0038I Pass  28: suminf.    0.64806 (2) obj. -143.489 iterations 0
Cbc0038I Pass  29: suminf.    0.47385 (2) obj. -143.489 iterations 2
Cbc0038I Pass  30: suminf.    0.34950 (1) obj. -143.489 iterations 2
Cbc0038I Pass  31: suminf.    0.39268 (1) obj. -143.489 iterations 1
Cbc0038I Pass  32: suminf.    0.46488 (1) obj. -143.489 iterations 3
Cbc0038I Pass  33: suminf.    0.25154 (1) obj. -143.489 iterations 2
Cbc0038I Pass  34: suminf.    0.46488 (1) obj. -143.489 iterations 1
Cbc0038I Pass  35: suminf.    0.33397 (1) obj. -143.489 iterations 5
Cbc0038I Pass  36: suminf.    0.33397 (1) obj. -143.489 iterations 1
Cbc0038I Pass  37: suminf.    0.46611 (2) obj. -143.489 iterations 3
Cbc0038I Pass  38: suminf.    0.49244 (1) obj. -143.489 iterations 2
Cbc0038I Pass  39: suminf.    0.32656 (1) obj. -143.489 iterations 1
Cbc0038I Pass  40: suminf.    0.32300 (1) obj. -143.489 iterations 3
Cbc0038I Pass  41: suminf.    0.32300 (1) obj. -143.489 iterations 4
Cbc0038I Pass  42: suminf.    0.47829 (1) obj. -143.489 iterations 1
Cbc0038I Pass  43: suminf.    0.65367 (2) obj. -143.489 iterations 4
Cbc0038I Pass  44: suminf.    0.48743 (2) obj. -143.489 iterations 1
Cbc0038I Pass  45: suminf.    0.48940 (2) obj. -143.489 iterations 1
Cbc0038I Pass  46: suminf.    0.65367 (2) obj. -143.489 iterations 1
Cbc0038I Pass  47: suminf.    0.66422 (3) obj. -143.489 iterations 5
Cbc0038I Pass  48: suminf.    0.62093 (3) obj. -143.489 iterations 1
Cbc0038I Pass  49: suminf.    0.37126 (2) obj. -143.489 iterations 2
Cbc0038I Pass  50: suminf.    0.33118 (1) obj. -143.489 iterations 1
Cbc0038I Pass  51: suminf.    0.46255 (2) obj. -143.489 iterations 3
Cbc0038I Pass  52: suminf.    0.47829 (1) obj. -143.489 iterations 2
Cbc0038I Pass  53: suminf.    0.32300 (1) obj. -143.489 iterations 1
Cbc0038I Pass  54: suminf.    0.35481 (2) obj. -143.489 iterations 11
Cbc0038I Pass  55: suminf.    0.77719 (3) obj. -143.489 iterations 3
Cbc0038I Pass  56: suminf.    0.73739 (3) obj. -143.489 iterations 1
Cbc0038I Pass  57: suminf.    0.48882 (2) obj. -143.489 iterations 2
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -172.043
Cbc0038I Pass  57: suminf.    0.86642 (3) obj. -172.043 iterations 1
Cbc0038I Pass  58: suminf.    0.59683 (2) obj. -172.043 iterations 2
Cbc0038I Pass  59: suminf.    0.55911 (2) obj. -172.043 iterations 1
Cbc0038I Pass  60: suminf.    0.63051 (2) obj. -172.043 iterations 2
Cbc0038I Pass  61: suminf.    0.43058 (1) obj. -172.043 iterations 2
Cbc0038I Pass  62: suminf.    0.39268 (1) obj. -172.043 iterations 1
Cbc0038I Pass  63: suminf.    0.77687 (5) obj. -172.043 iterations 9
Cbc0038I Pass  64: suminf.    0.29735 (3) obj. -172.043 iterations 4
Cbc0038I Pass  65: suminf.    0.74572 (2) obj. -172.043 iterations 4
Cbc0038I Pass  66: suminf.    0.25180 (1) obj. -172.043 iterations 1
Cbc0038I Pass  67: suminf.    0.25122 (1) obj. -172.043 iterations 1
Cbc0038I Pass  68: suminf.    0.77083 (6) obj. -172.043 iterations 9
Cbc0038I Pass  69: suminf.    0.65305 (3) obj. -172.043 iterations 4
Cbc0038I Pass  70: suminf.    0.64381 (2) obj. -172.043 iterations 2
Cbc0038I Pass  71: suminf.    0.51143 (2) obj. -172.043 iterations 1
Cbc0038I Pass  72: suminf.    0.51310 (2) obj. -172.043 iterations 1
Cbc0038I Pass  73: suminf.    0.51686 (2) obj. -172.043 iterations 1
Cbc0038I Pass  74: suminf.    0.51686 (2) obj. -172.043 iterations 0
Cbc0038I Pass  75: suminf.    0.65193 (2) obj. -172.043 iterations 1
Cbc0038I Pass  76: suminf.    0.51499 (2) obj. -172.043 iterations 1
Cbc0038I Pass  77: suminf.    0.65671 (2) obj. -172.043 iterations 3
Cbc0038I Pass  78: suminf.    0.49871 (2) obj. -172.043 iterations 1
Cbc0038I Pass  79: suminf.    0.46710 (2) obj. -172.043 iterations 1
Cbc0038I Pass  80: suminf.    0.61023 (2) obj. -172.043 iterations 2
Cbc0038I Pass  81: suminf.    0.61023 (2) obj. -172.043 iterations 0
Cbc0038I Pass  82: suminf.    0.76044 (2) obj. -172.043 iterations 2
Cbc0038I Pass  83: suminf.    0.76044 (2) obj. -172.043 iterations 0
Cbc0038I Pass  84: suminf.    0.76768 (2) obj. -172.043 iterations 2
Cbc0038I Pass  85: suminf.    0.32417 (2) obj. -172.043 iterations 2
Cbc0038I Pass  86: suminf.    0.32417 (2) obj. -172.043 iterations 0
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -192.032
Cbc0038I Pass  86: suminf.    1.01916 (3) obj. -192.032 iterations 0
Cbc0038I Pass  87: suminf.    0.72343 (2) obj. -192.032 iterations 2
Cbc0038I Pass  88: suminf.    0.71306 (2) obj. -192.032 iterations 1
Cbc0038I Pass  89: suminf.    0.80412 (3) obj. -192.032 iterations 2
Cbc0038I Pass  90: suminf.    0.72074 (2) obj. -192.032 iterations 4
Cbc0038I Pass  91: suminf.    0.59224 (2) obj. -192.032 iterations 1
Cbc0038I Pass  92: suminf.    0.56867 (3) obj. -192.032 iterations 1
Cbc0038I Pass  93: suminf.    0.89361 (2) obj. -192.032 iterations 3
Cbc0038I Pass  94: suminf.    0.82297 (2) obj. -192.032 iterations 1
Cbc0038I Pass  95: suminf.    0.77555 (3) obj. -192.032 iterations 1
Cbc0038I Pass  96: suminf.    0.89780 (2) obj. -192.032 iterations 3
Cbc0038I Pass  97: suminf.    0.71670 (2) obj. -192.032 iterations 1
Cbc0038I Pass  98: suminf.    1.80271 (6) obj. -192.032 iterations 6
Cbc0038I Pass  99: suminf.    0.72049 (3) obj. -192.032 iterations 3
Cbc0038I Pass 100: suminf.    1.07459 (3) obj. -192.032 iterations 1
Cbc0038I Pass 101: suminf.    1.11245 (4) obj. -192.032 iterations 3
Cbc0038I Pass 102: suminf.    0.96799 (4) obj. -192.032 iterations 4
Cbc0038I Pass 103: suminf.    1.08223 (5) obj. -192.032 iterations 2
Cbc0038I Pass 104: suminf.    0.63493 (3) obj. -192.032 iterations 4
Cbc0038I Pass 105: suminf.    0.63493 (3) obj. -192.032 iterations 0
Cbc0038I Pass 106: suminf.    0.84799 (2) obj. -192.032 iterations 3
Cbc0038I Pass 107: suminf.    0.38445 (2) obj. -192.032 iterations 1
Cbc0038I Pass 108: suminf.    0.89719 (3) obj. -192.032 iterations 3
Cbc0038I Pass 109: suminf.    0.87667 (2) obj. -192.032 iterations 3
Cbc0038I Pass 110: suminf.    0.59121 (2) obj. -192.032 iterations 1
Cbc0038I Pass 111: suminf.    0.59121 (2) obj. -192.032 iterations 0
Cbc0038I Pass 112: suminf.    1.71572 (6) obj. -192.032 iterations 5
Cbc0038I Pass 113: suminf.    1.01782 (3) obj. -192.032 iterations 4
Cbc0038I Pass 114: suminf.    0.81511 (2) obj. -192.032 iterations 2
Cbc0038I Pass 115: suminf.    0.69187 (2) obj. -192.032 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -119.693 - took 0.02 seconds
Cbc0012I Integer solution of -119.69282 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 11 rows 13 columns
Cbc0031I 4 added rows had average density of 3
Cbc0013I At root node, 39 cuts changed objective from -238.67123 to -119.69282 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -119.692822, took 8 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

