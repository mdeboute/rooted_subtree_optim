Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 169 (-36) rows, 94 (-9) columns and 518 (-85) elements
Clp1000I sum of infeasibilities 6.77441e-05 - average 4.00852e-07, 54 fixed columns
Coin0506I Presolve 55 (-114) rows, 33 (-61) columns and 170 (-348) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Coin0511I After Postsolve, objective 610.76027, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Clp0000I Optimal - objective value 610.76027
Coin0511I After Postsolve, objective 610.76027, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 610.7602723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 169 rows, 94 columns (93 integer (93 of which binary)) and 542 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.176%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.19305
Cbc0038I Pass   1: suminf.    1.31559 (3) obj. -580.901 iterations 24
Cbc0038I Solution found of -411.031
Cbc0038I Relaxing continuous gives -411.031
Cbc0038I Rounding solution of -517.451 is better than previous of -411.031

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 94 columns, reduced to 21 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -517.451 to -550.814 (0.01 seconds)
Cbc0038I Round again with cutoff of -556.465
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.31559 (3) obj. -580.901 iterations 0
Cbc0038I Pass   3: suminf.    0.63606 (2) obj. -556.465 iterations 10
Cbc0038I Pass   4: suminf.    0.43266 (2) obj. -556.465 iterations 6
Cbc0038I Pass   5: suminf.    0.48000 (1) obj. -559.261 iterations 4
Cbc0038I Pass   6: suminf.    0.48000 (1) obj. -559.261 iterations 0
Cbc0038I Pass   7: suminf.    2.44576 (7) obj. -556.465 iterations 11
Cbc0038I Pass   8: suminf.    1.86960 (8) obj. -556.465 iterations 16
Cbc0038I Pass   9: suminf.    1.47317 (7) obj. -556.465 iterations 8
Cbc0038I Pass  10: suminf.    1.15963 (5) obj. -556.465 iterations 24
Cbc0038I Pass  11: suminf.    0.91037 (2) obj. -557.823 iterations 11
Cbc0038I Pass  12: suminf.    0.58340 (3) obj. -556.465 iterations 5
Cbc0038I Pass  13: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  14: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  15: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  16: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  17: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  18: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  19: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  20: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  21: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  22: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  23: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  24: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  25: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I Pass  26: suminf.    0.93555 (5) obj. -556.465 iterations 11
Cbc0038I Pass  27: suminf.    0.72458 (4) obj. -556.465 iterations 10
Cbc0038I Pass  28: suminf.    0.81100 (3) obj. -556.465 iterations 8
Cbc0038I Pass  29: suminf.    0.62662 (2) obj. -556.465 iterations 1
Cbc0038I Pass  30: suminf.    0.58340 (3) obj. -556.465 iterations 7
Cbc0038I Pass  31: suminf.    0.55781 (6) obj. -556.465 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 94 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -550.814 - took 0.02 seconds
Cbc0012I Integer solution of -550.8141 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 169 rows 94 columns, reduced to 21 rows 12 columns
Cbc0031I 10 added rows had average density of 41.2
Cbc0013I At root node, 10 cuts changed objective from -607.31949 to -583.69267 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 117 row cuts average 3.6 elements, 13 column cuts (13 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0016I Integer solution of -552.0805 found by strong branching after 720 iterations and 23 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -552.0805, took 809 iterations and 26 nodes (0.14 seconds)
Cbc0032I Strong branching done 266 times (2113 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 6, 200 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

