Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 101 (-2) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 2.22969e-05 - average 1.21841e-07, 10 fixed columns
Coin0506I Presolve 161 (-22) rows, 90 (-11) columns and 494 (-66) elements
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.2334355 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Coin0511I After Postsolve, objective 36.15831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Coin0511I After Postsolve, objective 36.15831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.15831029 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 101 columns (100 integer (100 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 12.4124
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.7784 iterations 73
Cbc0038I Solution found of 0.7784
Cbc0038I Relaxing continuous gives 0.7784
Cbc0038I Rounding solution of -0.108347 is better than previous of 0.7784

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -0.108347 to -10.9859 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.5032
Cbc0038I Pass   2: suminf.    2.09354 (11) obj. -13.5032 iterations 10
Cbc0038I Pass   3: suminf.    2.75495 (9) obj. -13.5032 iterations 7
Cbc0038I Pass   4: suminf.    2.32482 (7) obj. -13.5032 iterations 5
Cbc0038I Pass   5: suminf.    1.97756 (7) obj. -13.5032 iterations 1
Cbc0038I Pass   6: suminf.    1.92219 (7) obj. -13.5032 iterations 1
Cbc0038I Pass   7: suminf.    2.37750 (7) obj. -13.5032 iterations 7
Cbc0038I Pass   8: suminf.    2.35033 (8) obj. -13.5032 iterations 3
Cbc0038I Pass   9: suminf.    3.28055 (8) obj. -13.5032 iterations 6
Cbc0038I Pass  10: suminf.    2.80660 (8) obj. -13.5032 iterations 2
Cbc0038I Pass  11: suminf.    2.48925 (9) obj. -13.5032 iterations 5
Cbc0038I Pass  12: suminf.    3.36192 (9) obj. -13.5032 iterations 7
Cbc0038I Pass  13: suminf.    2.23681 (8) obj. -13.5032 iterations 5
Cbc0038I Pass  14: suminf.    2.75497 (11) obj. -13.5032 iterations 18
Cbc0038I Pass  15: suminf.    2.65193 (10) obj. -13.5032 iterations 11
Cbc0038I Pass  16: suminf.    2.30535 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  17: suminf.    2.93746 (9) obj. -13.5032 iterations 9
Cbc0038I Pass  18: suminf.    3.61092 (10) obj. -13.5032 iterations 9
Cbc0038I Pass  19: suminf.    5.01567 (15) obj. -13.5032 iterations 25
Cbc0038I Pass  20: suminf.    3.65195 (13) obj. -13.5032 iterations 18
Cbc0038I Pass  21: suminf.    3.44509 (10) obj. -13.5032 iterations 35
Cbc0038I Pass  22: suminf.    3.44509 (10) obj. -13.5032 iterations 5
Cbc0038I Pass  23: suminf.    1.61727 (7) obj. -13.5032 iterations 18
Cbc0038I Pass  24: suminf.    1.20850 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  25: suminf.    2.23060 (6) obj. -13.5032 iterations 8
Cbc0038I Pass  26: suminf.    2.23060 (6) obj. -13.5032 iterations 0
Cbc0038I Pass  27: suminf.    2.15205 (6) obj. -13.5032 iterations 2
Cbc0038I Pass  28: suminf.    1.61727 (7) obj. -13.5032 iterations 3
Cbc0038I Pass  29: suminf.    1.20850 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  30: suminf.    2.23060 (6) obj. -13.5032 iterations 8
Cbc0038I Pass  31: suminf.    2.23060 (6) obj. -13.5032 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -10.9859 to -11.0713 (0.15 seconds)
Cbc0038I Round again with cutoff of -18.0343
Cbc0038I Pass  31: suminf.    3.00243 (11) obj. -18.0343 iterations 5
Cbc0038I Pass  32: suminf.    3.72280 (10) obj. -18.0343 iterations 13
Cbc0038I Pass  33: suminf.    2.70671 (8) obj. -18.0343 iterations 10
Cbc0038I Pass  34: suminf.    2.68470 (7) obj. -18.0343 iterations 6
Cbc0038I Pass  35: suminf.    2.90123 (8) obj. -18.0343 iterations 7
Cbc0038I Pass  36: suminf.    2.77271 (8) obj. -18.0343 iterations 2
Cbc0038I Pass  37: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  38: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  39: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  40: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  41: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  42: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  43: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  44: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  45: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  46: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  47: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  48: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  49: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  50: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  51: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  52: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  53: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  54: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  55: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  56: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  57: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  58: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  59: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  60: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -11.0713 - took 0.18 seconds
Cbc0012I Integer solution of -11.071265 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0031I 38 added rows had average density of 68.236842
Cbc0013I At root node, 38 cuts changed objective from -36.15831 to -27.401551 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20277 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2079 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.071265 best solution, best possible -27.401551 (1.77 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 88 rows 53 columns
Cbc0001I Search completed - best objective -11.071265, took 13412 iterations and 80 nodes (2.27 seconds)
Cbc0032I Strong branching done 988 times (23596 iterations), fathomed 11 nodes and fixed 37 variables
Cbc0035I Maximum depth 22, 174 variables fixed on reduced cost
Total time (CPU seconds):       2.19   (Wallclock seconds):       2.29

