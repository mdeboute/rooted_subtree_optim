Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 172 (-33) rows, 97 (-6) columns and 530 (-73) elements
Clp1000I sum of infeasibilities 2.22035e-05 - average 1.2909e-07, 17 fixed columns
Coin0506I Presolve 140 (-32) rows, 80 (-17) columns and 432 (-98) elements
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 1.7512534 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Coin0511I After Postsolve, objective 47.842918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Clp0000I Optimal - objective value 47.842918
Coin0511I After Postsolve, objective 47.842918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.84291842 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 172 rows, 97 columns (96 integer (96 of which binary)) and 531 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.909%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 7.78942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.22896 iterations 50
Cbc0038I Solution found of 0.22896
Cbc0038I Relaxing continuous gives 0.22896
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 97 columns, reduced to 65 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 0.22896 to -19.8333 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.6344
Cbc0038I Pass   2: suminf.    1.50607 (6) obj. -22.6344 iterations 13
Cbc0038I Pass   3: suminf.    1.40993 (5) obj. -22.6344 iterations 13
Cbc0038I Pass   4: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass   5: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass   6: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass   7: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass   8: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass   9: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  10: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  11: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  12: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  13: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  14: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  15: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  16: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  17: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  18: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  19: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  20: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  21: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  22: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  23: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  24: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  25: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I Pass  26: suminf.    1.40993 (5) obj. -22.6344 iterations 2
Cbc0038I Pass  27: suminf.    1.40993 (5) obj. -22.6344 iterations 0
Cbc0038I Pass  28: suminf.    2.32370 (6) obj. -22.6344 iterations 7
Cbc0038I Pass  29: suminf.    1.90572 (5) obj. -22.6344 iterations 6
Cbc0038I Pass  30: suminf.    1.90572 (5) obj. -22.6344 iterations 3
Cbc0038I Pass  31: suminf.    2.00465 (5) obj. -22.6344 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 97 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -19.8333 - took 0.08 seconds
Cbc0012I Integer solution of -19.83335 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 172 rows 97 columns, reduced to 65 rows 40 columns
Cbc0031I 28 added rows had average density of 54.107143
Cbc0013I At root node, 28 cuts changed objective from -47.842918 to -41.156599 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12683 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1725 row cuts average 96.6 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.83335 best solution, best possible -41.156599 (1.09 seconds)
Cbc0038I Full problem 172 rows 97 columns, reduced to 7 rows 9 columns
Cbc0001I Search completed - best objective -19.83335, took 10013 iterations and 72 nodes (1.36 seconds)
Cbc0032I Strong branching done 706 times (13576 iterations), fathomed 7 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 274 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.38

