Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 478 (-49) rows, 248 (-16) columns and 1427 (-118) elements
Clp1000I sum of infeasibilities 1.88832e-06 - average 3.95046e-09, 233 fixed columns
Coin0506I Presolve 15 (-463) rows, 15 (-233) columns and 54 (-1373) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 11775.589
Clp0000I Optimal - objective value 11775.589
Coin0511I After Postsolve, objective 11775.589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13646627 - largest nonzero change 0 ( 0%) - largest zero change 2.9826289e-05
Clp0000I Optimal - objective value 11775.589
Clp0000I Optimal - objective value 11775.589
Clp0000I Optimal - objective value 11775.589
Coin0511I After Postsolve, objective 11775.589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11775.58892 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 478 rows, 248 columns (247 integer (247 of which binary)) and 1427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.027
Cbc0038I Pass   1: suminf.    0.89408 (3) obj. -11533.3 iterations 66
Cbc0038I Solution found of -10402.1
Cbc0038I Relaxing continuous gives -10402.1
Cbc0038I Rounding solution of -10638.3 is better than previous of -10402.1

Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 478 rows 248 columns, reduced to 15 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -10638.3 to -11075.1 (0.05 seconds)
Cbc0038I Round again with cutoff of -11145.2
Cbc0038I Reduced cost fixing fixed 16 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.89408 (3) obj. -11533.3 iterations 0
Cbc0038I Pass   3: suminf.    0.45420 (2) obj. -11145.2 iterations 30
Cbc0038I Pass   4: suminf.    0.36172 (2) obj. -11473.2 iterations 17
Cbc0038I Pass   5: suminf.    0.36172 (2) obj. -11473.2 iterations 0
Cbc0038I Pass   6: suminf.    0.17819 (2) obj. -11145.2 iterations 9
Cbc0038I Pass   7: suminf.    0.14292 (3) obj. -11145.2 iterations 7
Cbc0038I Pass   8: suminf.    1.87543 (5) obj. -11145.2 iterations 11
Cbc0038I Pass   9: suminf.    1.00271 (5) obj. -11145.2 iterations 20
Cbc0038I Pass  10: suminf.    0.72694 (5) obj. -11145.2 iterations 6
Cbc0038I Pass  11: suminf.    0.37917 (2) obj. -11145.2 iterations 33
Cbc0038I Pass  12: suminf.    0.20000 (1) obj. -11368.8 iterations 1
Cbc0038I Pass  13: suminf.    0.45420 (2) obj. -11145.2 iterations 21
Cbc0038I Pass  14: suminf.    0.36172 (2) obj. -11473.2 iterations 17
Cbc0038I Pass  15: suminf.    0.36172 (2) obj. -11473.2 iterations 0
Cbc0038I Pass  16: suminf.    0.17819 (2) obj. -11145.2 iterations 9
Cbc0038I Pass  17: suminf.    0.14292 (3) obj. -11145.2 iterations 7
Cbc0038I Pass  18: suminf.    1.87543 (5) obj. -11145.2 iterations 11
Cbc0038I Pass  19: suminf.    1.00271 (5) obj. -11145.2 iterations 20
Cbc0038I Pass  20: suminf.    0.72694 (5) obj. -11145.2 iterations 6
Cbc0038I Pass  21: suminf.    0.37917 (2) obj. -11145.2 iterations 33
Cbc0038I Pass  22: suminf.    0.20000 (1) obj. -11368.8 iterations 1
Cbc0038I Pass  23: suminf.    0.45420 (2) obj. -11145.2 iterations 21
Cbc0038I Pass  24: suminf.    0.36172 (2) obj. -11473.2 iterations 17
Cbc0038I Pass  25: suminf.    0.36172 (2) obj. -11473.2 iterations 0
Cbc0038I Pass  26: suminf.    0.17819 (2) obj. -11145.2 iterations 9
Cbc0038I Pass  27: suminf.    0.14292 (3) obj. -11145.2 iterations 7
Cbc0038I Pass  28: suminf.    1.87543 (5) obj. -11145.2 iterations 11
Cbc0038I Pass  29: suminf.    1.00271 (5) obj. -11145.2 iterations 20
Cbc0038I Pass  30: suminf.    0.72694 (5) obj. -11145.2 iterations 6
Cbc0038I Pass  31: suminf.    0.37917 (2) obj. -11145.2 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 231 integers at bound fixed and 0 continuous
Cbc0038I Full problem 478 rows 248 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -11075.1 to -11286.1 (0.11 seconds)
Cbc0038I Round again with cutoff of -11384
Cbc0038I Reduced cost fixing fixed 53 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.89408 (3) obj. -11533.3 iterations 0
Cbc0038I Pass  32: suminf.    0.68360 (2) obj. -11384 iterations 22
Cbc0038I Pass  33: suminf.    0.78637 (2) obj. -11482.7 iterations 15
Cbc0038I Pass  34: suminf.    2.93692 (9) obj. -11384 iterations 24
Cbc0038I Pass  35: suminf.    0.72939 (5) obj. -11384 iterations 18
Cbc0038I Pass  36: suminf.    0.72939 (5) obj. -11384 iterations 0
Cbc0038I Pass  37: suminf.    0.96632 (7) obj. -11384 iterations 24
Cbc0038I Pass  38: suminf.    0.65922 (8) obj. -11384 iterations 19
Cbc0038I Pass  39: suminf.    1.50832 (5) obj. -11384 iterations 25
Cbc0038I Pass  40: suminf.    0.23148 (4) obj. -11384 iterations 27
Cbc0038I Pass  41: suminf.    0.23148 (4) obj. -11384 iterations 0
Cbc0038I Pass  42: suminf.    1.06668 (4) obj. -11384 iterations 27
Cbc0038I Pass  43: suminf.    0.73155 (3) obj. -11384 iterations 11
Cbc0038I Pass  44: suminf.    1.50832 (5) obj. -11384 iterations 8
Cbc0038I Pass  45: suminf.    0.23148 (4) obj. -11384 iterations 26
Cbc0038I Pass  46: suminf.    0.23148 (4) obj. -11384 iterations 0
Cbc0038I Pass  47: suminf.    1.06668 (4) obj. -11384 iterations 28
Cbc0038I Pass  48: suminf.    0.73155 (3) obj. -11384 iterations 11
Cbc0038I Pass  49: suminf.    1.50832 (5) obj. -11384 iterations 9
Cbc0038I Pass  50: suminf.    0.23148 (4) obj. -11384 iterations 26
Cbc0038I Pass  51: suminf.    0.23148 (4) obj. -11384 iterations 0
Cbc0038I Pass  52: suminf.    1.06668 (4) obj. -11384 iterations 26
Cbc0038I Pass  53: suminf.    0.73155 (3) obj. -11384 iterations 11
Cbc0038I Pass  54: suminf.    1.50832 (5) obj. -11384 iterations 8
Cbc0038I Pass  55: suminf.    0.23148 (4) obj. -11384 iterations 27
Cbc0038I Pass  56: suminf.    0.23148 (4) obj. -11384 iterations 0
Cbc0038I Pass  57: suminf.    1.06668 (4) obj. -11384 iterations 28
Cbc0038I Pass  58: suminf.    0.73155 (3) obj. -11384 iterations 11
Cbc0038I Pass  59: suminf.    1.50832 (5) obj. -11384 iterations 9
Cbc0038I Pass  60: suminf.    0.23148 (4) obj. -11384 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 478 rows 248 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11286.1 to -11308 (0.20 seconds)
Cbc0038I Round again with cutoff of -11501.5
Cbc0038I Reduced cost fixing fixed 96 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.89408 (3) obj. -11533.3 iterations 0
Cbc0038I Pass  61: suminf.    0.82625 (3) obj. -11501.5 iterations 26
Cbc0038I Pass  62: suminf.    3.47404 (8) obj. -11501.5 iterations 28
Cbc0038I Pass  63: suminf.    2.37273 (9) obj. -11501.5 iterations 29
Cbc0038I Pass  64: suminf.    2.37273 (9) obj. -11501.5 iterations 0
Cbc0038I Pass  65: suminf.    3.44104 (12) obj. -11501.5 iterations 51
Cbc0038I Pass  66: suminf.    2.32595 (9) obj. -11501.5 iterations 42
Cbc0038I Pass  67: suminf.    1.76492 (9) obj. -11501.5 iterations 16
Cbc0038I Pass  68: suminf.    0.34825 (3) obj. -11501.5 iterations 40
Cbc0038I Pass  69: suminf.    0.28235 (1) obj. -11514.5 iterations 2
Cbc0038I Pass  70: suminf.    0.48901 (2) obj. -11501.5 iterations 18
Cbc0038I Pass  71: suminf.    0.40914 (2) obj. -11501.5 iterations 24
Cbc0038I Pass  72: suminf.    0.45793 (2) obj. -11501.5 iterations 6
Cbc0038I Pass  73: suminf.    0.36414 (3) obj. -11501.5 iterations 28
Cbc0038I Pass  74: suminf.    0.28235 (1) obj. -11514.5 iterations 19
Cbc0038I Pass  75: suminf.    0.65163 (3) obj. -11501.5 iterations 22
Cbc0038I Pass  76: suminf.    0.34473 (2) obj. -11542.2 iterations 17
Cbc0038I Pass  77: suminf.    1.38553 (7) obj. -11501.5 iterations 30
Cbc0038I Pass  78: suminf.    1.28934 (8) obj. -11501.5 iterations 18
Cbc0038I Pass  79: suminf.    0.84370 (3) obj. -11501.5 iterations 54
Cbc0038I Pass  80: suminf.    0.57750 (2) obj. -11501.5 iterations 34
Cbc0038I Pass  81: suminf.    1.24940 (5) obj. -11501.5 iterations 11
Cbc0038I Pass  82: suminf.    1.42043 (3) obj. -11501.5 iterations 9
Cbc0038I Pass  83: suminf.    1.62351 (5) obj. -11501.5 iterations 14
Cbc0038I Pass  84: suminf.    3.93610 (10) obj. -11501.5 iterations 31
Cbc0038I Pass  85: suminf.    0.19866 (4) obj. -11501.5 iterations 66
Cbc0038I Pass  86: suminf.    0.14778 (2) obj. -11501.5 iterations 39
Cbc0038I Pass  87: suminf.    0.15709 (2) obj. -11501.5 iterations 15
Cbc0038I Pass  88: suminf.    2.64420 (27) obj. -11501.5 iterations 57
Cbc0038I Pass  89: suminf.    1.60907 (5) obj. -11501.5 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 478 rows 248 columns, reduced to 77 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of -11308 - took 0.29 seconds
Cbc0012I Integer solution of -11307.997 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 478 rows 248 columns, reduced to 15 rows 15 columns
Cbc0031I 7 added rows had average density of 55.571429
Cbc0013I At root node, 7 cuts changed objective from -11775.589 to -11668.379 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 3.1 elements, 72 column cuts (72 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0004I Integer solution of -11318.147 found after 499 iterations and 25 nodes (0.58 seconds)
Cbc0010I After 38 nodes, 15 on tree, -11318.147 best solution, best possible -11668.379 (0.63 seconds)
Cbc0038I Full problem 478 rows 248 columns, reduced to 10 rows 13 columns
Cbc0038I Full problem 485 rows 248 columns, reduced to 140 rows 77 columns
Cbc0044I Reduced cost fixing - 140 rows, 77 columns - restarting search
Cbc0012I Integer solution of -11318.147 found by Previous solution after 0 iterations and 0 nodes (0.69 seconds)
Cbc0038I Full problem 140 rows 77 columns, reduced to 18 rows 16 columns
Cbc0031I 8 added rows had average density of 76
Cbc0013I At root node, 8 cuts changed objective from -11775.589 to -11661.625 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 136 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 210 row cuts average 75.3 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 57.8 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 71.6 elements, 0 column cuts (0 active)  in 1.421 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 63 row cuts average 51.5 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -11318.147 best solution, best possible -11661.625 (3.39 seconds)
Cbc0012I Integer solution of -11465.656 found by DiveCoefficient after 970 iterations and 7 nodes (3.46 seconds)
Cbc0038I Full problem 140 rows 77 columns, reduced to 7 rows 10 columns
Cbc0038I Full problem 140 rows 77 columns, reduced to 18 rows 16 columns
Cbc0001I Search completed - best objective -11465.656, took 2451 iterations and 96 nodes (3.78 seconds)
Cbc0032I Strong branching done 610 times (3748 iterations), fathomed 16 nodes and fixed 40 variables
Cbc0035I Maximum depth 12, 403 variables fixed on reduced cost
Cbc0038I Probing was tried 269 times and created 628 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
Cbc0038I Gomory was tried 159 times and created 211 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
Cbc0038I Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I MixedIntegerRounding2 was tried 159 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I TwoMirCuts was tried 248 times and created 181 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 45 cuts of which 0 were active after adding rounds of cuts (1.421 seconds)
Cbc0038I Stored from first was tried 248 times and created 104 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -11465.656 found by Reduced search after 3399 iterations and 146 nodes (3.78 seconds)
Cbc0001I Search completed - best objective -11465.656, took 3399 iterations and 146 nodes (3.78 seconds)
Cbc0032I Strong branching done 350 times (2994 iterations), fathomed 10 nodes and fixed 18 variables
Cbc0035I Maximum depth 16, 160 variables fixed on reduced cost
Total time (CPU seconds):       2.78   (Wallclock seconds):       3.79

