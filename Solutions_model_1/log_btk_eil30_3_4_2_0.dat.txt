Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-8) rows, 30 (-2) columns and 162 (-15) elements
Clp1000I sum of infeasibilities 0.000311951 - average 5.67183e-06, 6 fixed columns
Coin0506I Presolve 41 (-14) rows, 24 (-6) columns and 122 (-40) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 72.359511
Clp0000I Optimal - objective value 72.359511
Coin0511I After Postsolve, objective 72.359511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.359511
Clp0000I Optimal - objective value 72.359511
Clp0000I Optimal - objective value 72.359511
Coin0511I After Postsolve, objective 72.359511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.35951116 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.41707
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.7781 iterations 30
Cbc0038I Solution found of 15.7781
Cbc0038I Relaxing continuous gives 15.7781
Cbc0038I Rounding solution of 14.8426 is better than previous of 15.7781

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 14.8426 to -24.7132 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.4779
Cbc0038I Pass   2: suminf.    1.48796 (5) obj. -29.4779 iterations 6
Cbc0038I Pass   3: suminf.    1.13760 (5) obj. -29.4779 iterations 2
Cbc0038I Pass   4: suminf.    1.60927 (6) obj. -29.4779 iterations 11
Cbc0038I Pass   5: suminf.    1.07800 (5) obj. -29.4779 iterations 1
Cbc0038I Pass   6: suminf.    1.45634 (5) obj. -29.4779 iterations 8
Cbc0038I Pass   7: suminf.    1.30091 (5) obj. -29.4779 iterations 2
Cbc0038I Pass   8: suminf.    1.35292 (4) obj. -29.4779 iterations 9
Cbc0038I Pass   9: suminf.    1.35580 (4) obj. -29.4779 iterations 1
Cbc0038I Pass  10: suminf.    1.31352 (6) obj. -29.4779 iterations 6
Cbc0038I Pass  11: suminf.    1.07800 (5) obj. -29.4779 iterations 1
Cbc0038I Pass  12: suminf.    1.45634 (5) obj. -29.4779 iterations 8
Cbc0038I Pass  13: suminf.    1.30091 (5) obj. -29.4779 iterations 2
Cbc0038I Pass  14: suminf.    1.35292 (4) obj. -29.4779 iterations 9
Cbc0038I Pass  15: suminf.    1.35580 (4) obj. -29.4779 iterations 1
Cbc0038I Pass  16: suminf.    1.31352 (6) obj. -29.4779 iterations 6
Cbc0038I Pass  17: suminf.    1.07800 (5) obj. -29.4779 iterations 1
Cbc0038I Pass  18: suminf.    1.45634 (5) obj. -29.4779 iterations 8
Cbc0038I Pass  19: suminf.    1.30091 (5) obj. -29.4779 iterations 2
Cbc0038I Pass  20: suminf.    1.35292 (4) obj. -29.4779 iterations 9
Cbc0038I Pass  21: suminf.    1.35580 (4) obj. -29.4779 iterations 1
Cbc0038I Pass  22: suminf.    1.31352 (6) obj. -29.4779 iterations 6
Cbc0038I Pass  23: suminf.    1.07800 (5) obj. -29.4779 iterations 1
Cbc0038I Pass  24: suminf.    1.45634 (5) obj. -29.4779 iterations 8
Cbc0038I Pass  25: suminf.    1.30091 (5) obj. -29.4779 iterations 2
Cbc0038I Pass  26: suminf.    1.35292 (4) obj. -29.4779 iterations 9
Cbc0038I Pass  27: suminf.    1.35580 (4) obj. -29.4779 iterations 1
Cbc0038I Pass  28: suminf.    1.31352 (6) obj. -29.4779 iterations 6
Cbc0038I Pass  29: suminf.    1.07800 (5) obj. -29.4779 iterations 1
Cbc0038I Pass  30: suminf.    1.45634 (5) obj. -29.4779 iterations 8
Cbc0038I Pass  31: suminf.    1.30091 (5) obj. -29.4779 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.7132 - took 0.04 seconds
Cbc0012I Integer solution of -24.713197 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 55 rows 30 columns, reduced to 41 rows 24 columns
Cbc0031I 16 added rows had average density of 20.25
Cbc0013I At root node, 16 cuts changed objective from -72.359511 to -44.998485 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2713 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 895 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 125 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.71319699999999, took 3316 iterations and 4 nodes (0.27 seconds)
Cbc0032I Strong branching done 90 times (1173 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.27

