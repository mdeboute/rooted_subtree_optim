Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 61 (-17) columns and 336 (-117) elements
Clp1000I sum of infeasibilities 4.63971e-05 - average 4.21792e-07, 36 fixed columns
Coin0506I Presolve 20 (-90) rows, 20 (-41) columns and 74 (-262) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 1.2335683 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 366.81679
Clp0000I Optimal - objective value 366.81679
Coin0511I After Postsolve, objective 366.81679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1093655 - largest nonzero change 2.592546e-05 ( 0.0014083952%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 366.81679
Clp0000I Optimal - objective value 366.81679
Clp0000I Optimal - objective value 366.81679
Coin0511I After Postsolve, objective 366.81679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 366.8167875 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 110 rows, 61 columns (60 integer (60 of which binary)) and 336 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.625
Cbc0038I Pass   1: suminf.    0.41667 (1) obj. -359.552 iterations 11
Cbc0038I Solution found of -324.409
Cbc0038I Relaxing continuous gives -324.409
Cbc0038I Rounding solution of -329.794 is better than previous of -324.409

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -329.794 to -347.918 (0.01 seconds)
Cbc0038I Round again with cutoff of -349.808
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45659 (2) obj. -349.808 iterations 10
Cbc0038I Pass   3: suminf.    0.34375 (2) obj. -349.808 iterations 9
Cbc0038I Pass   4: suminf.    0.18376 (1) obj. -349.808 iterations 1
Cbc0038I Pass   5: suminf.    0.31766 (4) obj. -349.808 iterations 13
Cbc0038I Pass   6: suminf.    0.31766 (4) obj. -349.808 iterations 2
Cbc0038I Pass   7: suminf.    0.88372 (2) obj. -356.73 iterations 10
Cbc0038I Pass   8: suminf.    0.69078 (2) obj. -349.808 iterations 7
Cbc0038I Pass   9: suminf.    0.58981 (2) obj. -349.808 iterations 7
Cbc0038I Pass  10: suminf.    0.24213 (3) obj. -349.808 iterations 12
Cbc0038I Pass  11: suminf.    0.69078 (2) obj. -349.808 iterations 10
Cbc0038I Pass  12: suminf.    0.47776 (3) obj. -349.808 iterations 16
Cbc0038I Pass  13: suminf.    0.05268 (2) obj. -349.808 iterations 13
Cbc0038I Pass  14: suminf.    0.09302 (2) obj. -351.255 iterations 7
Cbc0038I Pass  15: suminf.    1.16831 (4) obj. -349.808 iterations 11
Cbc0038I Pass  16: suminf.    0.62001 (3) obj. -349.808 iterations 9
Cbc0038I Pass  17: suminf.    0.88372 (2) obj. -356.73 iterations 7
Cbc0038I Pass  18: suminf.    0.69078 (2) obj. -349.808 iterations 6
Cbc0038I Pass  19: suminf.    0.32275 (4) obj. -349.808 iterations 13
Cbc0038I Pass  20: suminf.    0.18766 (2) obj. -349.808 iterations 8
Cbc0038I Pass  21: suminf.    0.55814 (2) obj. -351.579 iterations 8
Cbc0038I Pass  22: suminf.    0.55814 (2) obj. -351.579 iterations 0
Cbc0038I Pass  23: suminf.    0.18766 (2) obj. -349.808 iterations 8
Cbc0038I Pass  24: suminf.    0.74226 (2) obj. -349.808 iterations 11
Cbc0038I Pass  25: suminf.    0.33588 (3) obj. -349.808 iterations 8
Cbc0038I Pass  26: suminf.    0.93023 (2) obj. -356.116 iterations 9
Cbc0038I Pass  27: suminf.    0.37386 (1) obj. -349.808 iterations 9
Cbc0038I Pass  28: suminf.    0.23077 (1) obj. -355.993 iterations 7
Cbc0038I Pass  29: suminf.    0.43198 (3) obj. -349.808 iterations 12
Cbc0038I Pass  30: suminf.    0.23077 (1) obj. -349.808 iterations 6
Cbc0038I Pass  31: suminf.    1.93328 (5) obj. -349.808 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -347.918 to -361.761 (0.02 seconds)
Cbc0038I Round again with cutoff of -362.772
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.52161 (2) obj. -362.772 iterations 3
Cbc0038I Pass  32: suminf.    0.40436 (1) obj. -362.772 iterations 9
Cbc0038I Pass  33: suminf.    0.40436 (1) obj. -362.772 iterations 0
Cbc0038I Pass  34: suminf.    0.51369 (5) obj. -362.772 iterations 9
Cbc0038I Pass  35: suminf.    0.40436 (1) obj. -362.772 iterations 6
Cbc0038I Pass  36: suminf.    0.40436 (1) obj. -362.772 iterations 0
Cbc0038I Pass  37: suminf.    0.40436 (1) obj. -362.772 iterations 1
Cbc0038I Pass  38: suminf.    1.95482 (6) obj. -362.772 iterations 8
Cbc0038I Pass  39: suminf.    1.95482 (6) obj. -362.772 iterations 0
Cbc0038I Pass  40: suminf.    0.52161 (2) obj. -362.772 iterations 14
Cbc0038I Pass  41: suminf.    0.52161 (2) obj. -362.772 iterations 0
Cbc0038I Pass  42: suminf.    0.40436 (1) obj. -362.772 iterations 8
Cbc0038I Pass  43: suminf.    0.40436 (1) obj. -362.772 iterations 0
Cbc0038I Pass  44: suminf.    0.44233 (2) obj. -362.772 iterations 5
Cbc0038I Pass  45: suminf.    0.40436 (1) obj. -362.772 iterations 5
Cbc0038I Pass  46: suminf.    0.69353 (6) obj. -362.772 iterations 10
Cbc0038I Pass  47: suminf.    0.03801 (2) obj. -362.772 iterations 16
Cbc0038I Pass  48: suminf.    0.36638 (4) obj. -362.772 iterations 9
Cbc0038I Pass  49: suminf.    0.52161 (2) obj. -362.772 iterations 5
Cbc0038I Pass  50: suminf.    0.52161 (2) obj. -362.772 iterations 0
Cbc0038I Pass  51: suminf.    0.40436 (1) obj. -362.772 iterations 7
Cbc0038I Pass  52: suminf.    0.40436 (1) obj. -362.772 iterations 0
Cbc0038I Pass  53: suminf.    0.40436 (1) obj. -362.772 iterations 1
Cbc0038I Pass  54: suminf.    0.40436 (1) obj. -362.772 iterations 1
Cbc0038I Pass  55: suminf.    0.85378 (4) obj. -362.772 iterations 7
Cbc0038I Pass  56: suminf.    0.66180 (3) obj. -362.772 iterations 8
Cbc0038I Pass  57: suminf.    0.52161 (2) obj. -362.772 iterations 5
Cbc0038I Pass  58: suminf.    0.40436 (1) obj. -362.772 iterations 6
Cbc0038I Pass  59: suminf.    0.89954 (5) obj. -362.772 iterations 7
Cbc0038I Pass  60: suminf.    0.85378 (4) obj. -362.772 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 61 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -361.761 - took 0.02 seconds
Cbc0012I Integer solution of -361.7608 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 110 rows 61 columns, reduced to 3 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 11
Cbc0013I At root node, 2 cuts changed objective from -366.81679 to -363.1371 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 13 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -361.7608, took 14 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

