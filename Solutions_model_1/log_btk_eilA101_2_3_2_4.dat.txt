Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 2.9204e-05 - average 1.56171e-07, 10 fixed columns
Coin0506I Presolve 167 (-20) rows, 91 (-10) columns and 508 (-60) elements
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 0.27898659 - largest nonzero change 0 ( 0%) - largest zero change 2.8609429e-05
Clp0000I Optimal - objective value 52.62587
Clp0000I Optimal - objective value 52.62587
Coin0511I After Postsolve, objective 52.62587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.62587
Clp0000I Optimal - objective value 52.62587
Clp0000I Optimal - objective value 52.62587
Coin0511I After Postsolve, objective 52.62587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.62586955 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 63 integers unsatisfied sum - 13.8952
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.569 iterations 88
Cbc0038I Solution found of 5.569
Cbc0038I Relaxing continuous gives 5.569
Cbc0038I Rounding solution of 2.37637 is better than previous of 5.569

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 113 rows 64 columns
Cbc0038I Mini branch and bound improved solution from 2.37637 to -25.9931 (0.06 seconds)
Cbc0038I Round again with cutoff of -28.6564
Cbc0038I Pass   2: suminf.    4.07107 (14) obj. -28.6564 iterations 28
Cbc0038I Pass   3: suminf.    3.81164 (12) obj. -28.6564 iterations 13
Cbc0038I Pass   4: suminf.    2.46317 (8) obj. -28.6564 iterations 13
Cbc0038I Pass   5: suminf.    2.23037 (10) obj. -28.6564 iterations 8
Cbc0038I Pass   6: suminf.    3.24184 (9) obj. -28.6564 iterations 13
Cbc0038I Pass   7: suminf.    2.47808 (8) obj. -28.6564 iterations 3
Cbc0038I Pass   8: suminf.    2.18903 (7) obj. -28.6564 iterations 5
Cbc0038I Pass   9: suminf.    2.19649 (6) obj. -28.6564 iterations 4
Cbc0038I Pass  10: suminf.    1.81011 (6) obj. -28.6564 iterations 3
Cbc0038I Pass  11: suminf.    2.90178 (8) obj. -28.6564 iterations 7
Cbc0038I Pass  12: suminf.    2.07214 (6) obj. -28.6564 iterations 5
Cbc0038I Pass  13: suminf.    2.96343 (10) obj. -28.6564 iterations 24
Cbc0038I Pass  14: suminf.    1.89703 (6) obj. -28.6564 iterations 17
Cbc0038I Pass  15: suminf.    2.29341 (6) obj. -28.6564 iterations 13
Cbc0038I Pass  16: suminf.    2.09319 (6) obj. -28.6564 iterations 2
Cbc0038I Pass  17: suminf.    2.24596 (6) obj. -28.6564 iterations 4
Cbc0038I Pass  18: suminf.    1.98335 (6) obj. -28.6564 iterations 4
Cbc0038I Pass  19: suminf.    1.98335 (6) obj. -28.6564 iterations 0
Cbc0038I Pass  20: suminf.    2.25979 (6) obj. -28.6564 iterations 4
Cbc0038I Pass  21: suminf.    2.10160 (5) obj. -28.6564 iterations 2
Cbc0038I Pass  22: suminf.    2.10160 (5) obj. -28.6564 iterations 0
Cbc0038I Pass  23: suminf.    1.98335 (6) obj. -28.6564 iterations 3
Cbc0038I Pass  24: suminf.    1.98335 (6) obj. -28.6564 iterations 0
Cbc0038I Pass  25: suminf.    2.25979 (6) obj. -28.6564 iterations 4
Cbc0038I Pass  26: suminf.    2.10160 (5) obj. -28.6564 iterations 2
Cbc0038I Pass  27: suminf.    2.10160 (5) obj. -28.6564 iterations 0
Cbc0038I Pass  28: suminf.    1.98335 (6) obj. -28.6564 iterations 3
Cbc0038I Pass  29: suminf.    1.98335 (6) obj. -28.6564 iterations 0
Cbc0038I Pass  30: suminf.    2.25979 (6) obj. -28.6564 iterations 4
Cbc0038I Pass  31: suminf.    2.10160 (5) obj. -28.6564 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 117 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -25.9931 to -26.5118 (0.15 seconds)
Cbc0038I Round again with cutoff of -33.4503
Cbc0038I Pass  31: suminf.    4.59542 (16) obj. -33.4503 iterations 1
Cbc0038I Pass  32: suminf.    3.85071 (11) obj. -33.4503 iterations 18
Cbc0038I Pass  33: suminf.    3.72071 (11) obj. -33.4503 iterations 2
Cbc0038I Pass  34: suminf.    2.88006 (11) obj. -33.4503 iterations 15
Cbc0038I Pass  35: suminf.    2.83768 (10) obj. -33.4503 iterations 10
Cbc0038I Pass  36: suminf.    3.88773 (10) obj. -33.4503 iterations 17
Cbc0038I Pass  37: suminf.    3.18035 (11) obj. -33.4503 iterations 2
Cbc0038I Pass  38: suminf.    2.93996 (9) obj. -33.4503 iterations 4
Cbc0038I Pass  39: suminf.    2.93996 (9) obj. -33.4503 iterations 0
Cbc0038I Pass  40: suminf.    3.43650 (9) obj. -33.4503 iterations 7
Cbc0038I Pass  41: suminf.    3.38880 (10) obj. -33.4503 iterations 3
Cbc0038I Pass  42: suminf.    3.62347 (10) obj. -33.4503 iterations 7
Cbc0038I Pass  43: suminf.    3.41297 (10) obj. -33.4503 iterations 4
Cbc0038I Pass  44: suminf.    3.58920 (11) obj. -33.4503 iterations 6
Cbc0038I Pass  45: suminf.    6.72470 (20) obj. -33.4503 iterations 38
Cbc0038I Pass  46: suminf.    5.07853 (17) obj. -33.4503 iterations 23
Cbc0038I Pass  47: suminf.    3.64479 (14) obj. -33.4503 iterations 15
Cbc0038I Pass  48: suminf.    3.64479 (14) obj. -33.4503 iterations 1
Cbc0038I Pass  49: suminf.    3.78296 (11) obj. -33.4503 iterations 17
Cbc0038I Pass  50: suminf.    3.78296 (11) obj. -33.4503 iterations 2
Cbc0038I Pass  51: suminf.    3.46450 (11) obj. -33.4503 iterations 13
Cbc0038I Pass  52: suminf.    3.29300 (12) obj. -33.4503 iterations 7
Cbc0038I Pass  53: suminf.    4.64004 (13) obj. -33.4503 iterations 17
Cbc0038I Pass  54: suminf.    3.45440 (10) obj. -33.4503 iterations 7
Cbc0038I Pass  55: suminf.    3.45440 (10) obj. -33.4503 iterations 0
Cbc0038I Pass  56: suminf.    4.03737 (11) obj. -33.4503 iterations 6
Cbc0038I Pass  57: suminf.    3.29467 (11) obj. -33.4503 iterations 2
Cbc0038I Pass  58: suminf.    3.25165 (9) obj. -33.4503 iterations 17
Cbc0038I Pass  59: suminf.    3.25108 (10) obj. -33.4503 iterations 1
Cbc0038I Pass  60: suminf.    3.80361 (10) obj. -33.4503 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 129 rows 72 columns - 3 fixed gives 111, 69 - ok now
Cbc0038I Full problem 187 rows 101 columns, reduced to 111 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -26.5118 - took 0.21 seconds
Cbc0012I Integer solution of -26.51177 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 115 rows 65 columns
Cbc0031I 42 added rows had average density of 71.214286
Cbc0013I At root node, 42 cuts changed objective from -52.62587 to -45.119165 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24245 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3940 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.51177 best solution, best possible -45.119165 (2.15 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 104 rows 59 columns
Cbc0038I Full problem 187 rows 101 columns, reduced to 43 rows 30 columns
Cbc0010I After 129 nodes, 10 on tree, -26.51177 best solution, best possible -45.119165 (2.85 seconds)
Cbc0001I Search completed - best objective -26.51177000000001, took 18606 iterations and 198 nodes (3.01 seconds)
Cbc0032I Strong branching done 1868 times (36837 iterations), fathomed 18 nodes and fixed 81 variables
Cbc0035I Maximum depth 42, 422 variables fixed on reduced cost
Total time (CPU seconds):       2.92   (Wallclock seconds):       3.03

