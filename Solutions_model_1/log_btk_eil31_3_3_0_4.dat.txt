Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 19 (-14) columns and 99 (-84) elements
Clp1000I sum of infeasibilities 1.86137e-05 - average 5.47462e-07, 13 fixed columns
Coin0506I Presolve 4 (-30) rows, 4 (-15) columns and 11 (-88) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 4034.6817
Clp0000I Optimal - objective value 4034.6817
Coin0511I After Postsolve, objective 4034.6817, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4034.6817
Clp0000I Optimal - objective value 4034.6817
Clp0000I Optimal - objective value 4034.6817
Coin0511I After Postsolve, objective 4034.6817, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4034.681667 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 19 columns (18 integer (18 of which binary)) and 101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.962%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.812256
Cbc0038I Pass   1: suminf.    0.57977 (2) obj. -3910.81 iterations 2
Cbc0038I Solution found of -1551.33
Cbc0038I Relaxing continuous gives -1551.33
Cbc0038I Rounding solution of -2002.27 is better than previous of -1551.33

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2204.4
Cbc0038I Pass   2: suminf.    0.57977 (2) obj. -3910.81 iterations 0
Cbc0038I Pass   3: suminf.    0.37820 (1) obj. -2204.4 iterations 3
Cbc0038I Pass   4: suminf.    0.27642 (1) obj. -2800.81 iterations 2
Cbc0038I Pass   5: suminf.    0.70858 (2) obj. -3862.95 iterations 2
Cbc0038I Pass   6: suminf.    0.28643 (1) obj. -2204.4 iterations 3
Cbc0038I Pass   7: suminf.    0.28455 (1) obj. -2945.23 iterations 2
Cbc0038I Pass   8: suminf.    0.44961 (2) obj. -2350.72 iterations 6
Cbc0038I Pass   9: suminf.    0.36488 (2) obj. -2204.4 iterations 4
Cbc0038I Pass  10: suminf.    0.44961 (2) obj. -2350.72 iterations 2
Cbc0038I Pass  11: suminf.    0.46909 (2) obj. -2204.4 iterations 11
Cbc0038I Pass  12: suminf.    0.04178 (1) obj. -2204.4 iterations 5
Cbc0038I Pass  13: suminf.    0.21138 (1) obj. -2497.28 iterations 2
Cbc0038I Pass  14: suminf.    0.43265 (2) obj. -2204.4 iterations 2
Cbc0038I Pass  15: suminf.    0.41931 (2) obj. -2204.4 iterations 2
Cbc0038I Pass  16: suminf.    0.49612 (2) obj. -2337.04 iterations 2
Cbc0038I Pass  17: suminf.    0.33387 (2) obj. -2204.4 iterations 6
Cbc0038I Pass  18: suminf.    0.32754 (2) obj. -2204.4 iterations 4
Cbc0038I Pass  19: suminf.    0.48062 (2) obj. -2468.73 iterations 2
Cbc0038I Pass  20: suminf.    0.08491 (2) obj. -2239.66 iterations 9
Cbc0038I Pass  21: suminf.    0.02222 (1) obj. -2249.87 iterations 2
Cbc0038I Pass  22: suminf.    0.28759 (1) obj. -2204.4 iterations 3
Cbc0038I Pass  23: suminf.    0.35789 (1) obj. -2325.81 iterations 1
Cbc0038I Pass  24: suminf.    0.48643 (3) obj. -2204.4 iterations 3
Cbc0038I Pass  25: suminf.    0.02222 (1) obj. -2249.87 iterations 5
Cbc0038I Pass  26: suminf.    0.02222 (1) obj. -2249.87 iterations 0
Cbc0038I Pass  27: suminf.    0.40444 (2) obj. -2400.33 iterations 10
Cbc0038I Pass  28: suminf.    0.40444 (2) obj. -2400.33 iterations 0
Cbc0038I Pass  29: suminf.    0.68085 (3) obj. -2204.4 iterations 4
Cbc0038I Solution found of -2259.73
Cbc0038I Relaxing continuous gives -2259.73
Cbc0038I Rounding solution of -2290.73 is better than previous of -2259.73

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 19 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2290.73 to -3439.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -3556.41
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.57977 (2) obj. -3910.81 iterations 0
Cbc0038I Pass  31: suminf.    0.75888 (2) obj. -3556.41 iterations 2
Cbc0038I Pass  32: suminf.    0.75065 (2) obj. -3556.41 iterations 1
Cbc0038I Pass  33: suminf.    0.73141 (2) obj. -3556.41 iterations 1
Cbc0038I Pass  34: suminf.    1.29390 (3) obj. -3556.41 iterations 1
Cbc0038I Pass  35: suminf.    1.29390 (3) obj. -3556.41 iterations 0
Cbc0038I Pass  36: suminf.    1.29390 (3) obj. -3556.41 iterations 1
Cbc0038I Pass  37: suminf.    1.29390 (3) obj. -3556.41 iterations 1
Cbc0038I Pass  38: suminf.    1.20659 (3) obj. -3556.41 iterations 5
Cbc0038I Pass  39: suminf.    0.60503 (2) obj. -3556.41 iterations 4
Cbc0038I Pass  40: suminf.    0.82490 (2) obj. -3556.41 iterations 1
Cbc0038I Pass  41: suminf.    3.71695 (8) obj. -3556.41 iterations 7
Cbc0038I Pass  42: suminf.    0.33152 (2) obj. -3556.41 iterations 7
Cbc0038I Pass  43: suminf.    0.33152 (2) obj. -3556.41 iterations 0
Cbc0038I Pass  44: suminf.    0.83885 (2) obj. -3556.41 iterations 1
Cbc0038I Pass  45: suminf.    0.57297 (2) obj. -4015.53 iterations 1
Cbc0038I Pass  46: suminf.    0.93311 (3) obj. -3556.41 iterations 7
Cbc0038I Pass  47: suminf.    0.93311 (3) obj. -3556.41 iterations 3
Cbc0038I Pass  48: suminf.    0.46652 (2) obj. -3556.41 iterations 2
Cbc0038I Pass  49: suminf.    0.25814 (2) obj. -3913.97 iterations 2
Cbc0038I Pass  50: suminf.    0.93311 (3) obj. -3556.41 iterations 4
Cbc0038I Pass  51: suminf.    0.62074 (4) obj. -3556.41 iterations 5
Cbc0038I Pass  52: suminf.    0.35772 (1) obj. -3602.81 iterations 4
Cbc0038I Pass  53: suminf.    0.38460 (1) obj. -3556.41 iterations 1
Cbc0038I Pass  54: suminf.    0.46587 (2) obj. -3556.41 iterations 10
Cbc0038I Pass  55: suminf.    0.43329 (2) obj. -3612.19 iterations 1
Cbc0038I Pass  56: suminf.    0.46587 (2) obj. -3556.41 iterations 1
Cbc0038I Pass  57: suminf.    0.46587 (2) obj. -3556.41 iterations 1
Cbc0038I Pass  58: suminf.    0.46555 (2) obj. -3556.41 iterations 2
Cbc0038I Pass  59: suminf.    0.60503 (2) obj. -3556.41 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3439.6 - took 0.01 seconds
Cbc0012I Integer solution of -3439.6 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 19 columns, reduced to 11 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -4023.6365 to -4023.6365 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3439.6, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

