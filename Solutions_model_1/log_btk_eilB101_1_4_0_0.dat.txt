Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 176 (-29) rows, 98 (-5) columns and 541 (-62) elements
Clp1000I sum of infeasibilities 4.12091e-05 - average 2.34143e-07, 20 fixed columns
Coin0506I Presolve 137 (-39) rows, 77 (-21) columns and 421 (-120) elements
Clp0029I End of values pass after 77 iterations
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Coin0511I After Postsolve, objective 42.057596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Coin0511I After Postsolve, objective 42.057596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.0575964 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 176 rows, 98 columns (97 integer (97 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.989%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 7.34824
Cbc0038I Solution found of 3.09106
Cbc0038I Relaxing continuous gives -3.40254
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 92 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -3.40254 to -14.6389 (0.07 seconds)
Cbc0038I Round again with cutoff of -17.3809
Cbc0038I Pass   1: suminf.    2.17069 (38) obj. -17.3809 iterations 63
Cbc0038I Pass   2: suminf.    1.53534 (4) obj. -17.3809 iterations 39
Cbc0038I Pass   3: suminf.    1.53534 (4) obj. -17.3809 iterations 0
Cbc0038I Pass   4: suminf.    0.88026 (3) obj. -17.3809 iterations 13
Cbc0038I Pass   5: suminf.    0.51454 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   6: suminf.    1.30838 (3) obj. -17.3809 iterations 5
Cbc0038I Pass   7: suminf.    0.87472 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   8: suminf.    0.59809 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   9: suminf.    1.12870 (6) obj. -17.3809 iterations 12
Cbc0038I Pass  10: suminf.    1.12870 (6) obj. -17.3809 iterations 8
Cbc0038I Pass  11: suminf.    1.37948 (5) obj. -17.3809 iterations 21
Cbc0038I Pass  12: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Pass  13: suminf.    0.76711 (3) obj. -17.3809 iterations 2
Cbc0038I Pass  14: suminf.    1.00441 (3) obj. -17.3809 iterations 6
Cbc0038I Pass  15: suminf.    0.96500 (4) obj. -17.3809 iterations 1
Cbc0038I Pass  16: suminf.    2.24782 (6) obj. -17.3809 iterations 11
Cbc0038I Pass  17: suminf.    2.40861 (6) obj. -17.3809 iterations 9
Cbc0038I Pass  18: suminf.    2.03210 (6) obj. -17.3809 iterations 5
Cbc0038I Pass  19: suminf.    1.38882 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  20: suminf.    1.37948 (5) obj. -17.3809 iterations 4
Cbc0038I Pass  21: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Pass  22: suminf.    0.76711 (3) obj. -17.3809 iterations 2
Cbc0038I Pass  23: suminf.    1.00441 (3) obj. -17.3809 iterations 7
Cbc0038I Pass  24: suminf.    0.96500 (4) obj. -17.3809 iterations 1
Cbc0038I Pass  25: suminf.    2.24782 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  26: suminf.    2.40861 (6) obj. -17.3809 iterations 6
Cbc0038I Pass  27: suminf.    2.03210 (6) obj. -17.3809 iterations 6
Cbc0038I Pass  28: suminf.    1.38882 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  29: suminf.    1.37948 (5) obj. -17.3809 iterations 4
Cbc0038I Pass  30: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Rounding solution of -15.0469 is better than previous of -14.6389

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -15.0469 to -15.1317 (0.12 seconds)
Cbc0038I Round again with cutoff of -22.3162
Cbc0038I Pass  30: suminf.    2.93710 (38) obj. -22.3162 iterations 0
Cbc0038I Pass  31: suminf.    1.63761 (7) obj. -22.3162 iterations 38
Cbc0038I Pass  32: suminf.    1.61518 (7) obj. -22.3162 iterations 7
Cbc0038I Pass  33: suminf.    1.66357 (6) obj. -22.3162 iterations 18
Cbc0038I Pass  34: suminf.    1.32145 (5) obj. -22.3162 iterations 3
Cbc0038I Pass  35: suminf.    1.90711 (5) obj. -22.3162 iterations 6
Cbc0038I Pass  36: suminf.    1.36670 (4) obj. -22.3162 iterations 6
Cbc0038I Pass  37: suminf.    4.67512 (21) obj. -22.3162 iterations 41
Cbc0038I Pass  38: suminf.    2.03569 (8) obj. -22.3162 iterations 38
Cbc0038I Pass  39: suminf.    1.89875 (7) obj. -22.3162 iterations 1
Cbc0038I Pass  40: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  41: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  42: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  43: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  44: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I Pass  45: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  46: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  47: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  48: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  49: suminf.    1.89875 (7) obj. -22.3162 iterations 10
Cbc0038I Pass  50: suminf.    2.24492 (9) obj. -22.3162 iterations 13
Cbc0038I Pass  51: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  52: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  53: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  54: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I Pass  55: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  56: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  57: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  58: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  59: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 123 rows 69 columns - 4 fixed gives 105, 65 - ok now
Cbc0038I Full problem 176 rows 98 columns, reduced to 105 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -15.1317 - took 0.12 seconds
Cbc0012I Integer solution of -15.13175 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 93 rows 53 columns
Cbc0031I 29 added rows had average density of 65.689655
Cbc0013I At root node, 29 cuts changed objective from -42.057596 to -36.646849 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18634 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2772 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.13175 best solution, best possible -36.646849 (1.45 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 39 rows 27 columns
Cbc0004I Integer solution of -15.17182 found after 12329 iterations and 69 nodes (1.81 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 9 rows 9 columns
Cbc0001I Search completed - best objective -15.17182, took 14019 iterations and 114 nodes (1.92 seconds)
Cbc0032I Strong branching done 1134 times (22458 iterations), fathomed 7 nodes and fixed 75 variables
Cbc0035I Maximum depth 32, 229 variables fixed on reduced cost
Total time (CPU seconds):       1.87   (Wallclock seconds):       1.94

