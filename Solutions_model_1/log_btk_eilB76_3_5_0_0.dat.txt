Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 6.49261e-07 - average 4.88166e-09, 31 fixed columns
Coin0506I Presolve 70 (-63) rows, 43 (-31) columns and 219 (-187) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.9415929 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Coin0511I After Postsolve, objective 64.579065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22127761 - largest nonzero change 0 ( 0%) - largest zero change 2.893666e-05
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Coin0511I After Postsolve, objective 64.579065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.57906482 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.569%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.28941
Cbc0038I Solution found of -21.3406
Cbc0038I Relaxing continuous gives -23.3041
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -23.3041 to -40.5019 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.8829
Cbc0038I Pass   1: suminf.    1.18002 (9) obj. -42.8829 iterations 44
Cbc0038I Pass   2: suminf.    2.03188 (6) obj. -42.8829 iterations 15
Cbc0038I Pass   3: suminf.    1.22024 (3) obj. -42.8829 iterations 2
Cbc0038I Pass   4: suminf.    0.72905 (3) obj. -42.8829 iterations 2
Cbc0038I Pass   5: suminf.    1.52237 (4) obj. -42.8829 iterations 3
Cbc0038I Pass   6: suminf.    0.68348 (3) obj. -42.8829 iterations 5
Cbc0038I Pass   7: suminf.    0.94280 (3) obj. -42.8829 iterations 4
Cbc0038I Pass   8: suminf.    0.94280 (3) obj. -42.8829 iterations 0
Cbc0038I Pass   9: suminf.    0.80166 (3) obj. -42.8829 iterations 2
Cbc0038I Pass  10: suminf.    2.92249 (10) obj. -42.8829 iterations 21
Cbc0038I Pass  11: suminf.    0.53010 (4) obj. -42.8829 iterations 23
Cbc0038I Pass  12: suminf.    0.53010 (4) obj. -42.8829 iterations 0
Cbc0038I Pass  13: suminf.    1.23172 (4) obj. -42.8829 iterations 6
Cbc0038I Pass  14: suminf.    1.45209 (6) obj. -42.8829 iterations 14
Cbc0038I Pass  15: suminf.    0.60421 (3) obj. -42.8829 iterations 14
Cbc0038I Pass  16: suminf.    0.80178 (3) obj. -42.8829 iterations 4
Cbc0038I Pass  17: suminf.    2.67959 (10) obj. -42.8829 iterations 23
Cbc0038I Pass  18: suminf.    0.26370 (2) obj. -42.8829 iterations 18
Cbc0038I Pass  19: suminf.    0.26370 (2) obj. -42.8829 iterations 0
Cbc0038I Pass  20: suminf.    0.44042 (2) obj. -42.8829 iterations 2
Cbc0038I Pass  21: suminf.    1.33186 (5) obj. -42.8829 iterations 11
Cbc0038I Pass  22: suminf.    0.68348 (3) obj. -42.8829 iterations 14
Cbc0038I Pass  23: suminf.    0.94280 (3) obj. -42.8829 iterations 4
Cbc0038I Pass  24: suminf.    0.94280 (3) obj. -42.8829 iterations 0
Cbc0038I Pass  25: suminf.    0.80166 (3) obj. -42.8829 iterations 2
Cbc0038I Pass  26: suminf.    3.29527 (14) obj. -42.8829 iterations 16
Cbc0038I Pass  27: suminf.    0.47627 (4) obj. -42.8829 iterations 15
Cbc0038I Pass  28: suminf.    0.47627 (4) obj. -42.8829 iterations 0
Cbc0038I Pass  29: suminf.    1.20748 (4) obj. -42.8829 iterations 3
Cbc0038I Pass  30: suminf.    0.94648 (3) obj. -42.8829 iterations 3
Cbc0038I Rounding solution of -40.5139 is better than previous of -40.5019

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -40.5139 to -40.5151 (0.06 seconds)
Cbc0038I Round again with cutoff of -47.1685
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.47434 (13) obj. -47.1685 iterations 2
Cbc0038I Pass  31: suminf.    2.08879 (8) obj. -47.1685 iterations 15
Cbc0038I Pass  32: suminf.    1.31286 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  33: suminf.    1.60795 (5) obj. -47.1685 iterations 7
Cbc0038I Pass  34: suminf.    1.52758 (6) obj. -47.1685 iterations 2
Cbc0038I Pass  35: suminf.    0.77313 (4) obj. -47.1685 iterations 10
Cbc0038I Pass  36: suminf.    0.76328 (5) obj. -47.1685 iterations 1
Cbc0038I Pass  37: suminf.    1.79196 (5) obj. -47.1685 iterations 3
Cbc0038I Pass  38: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  39: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  40: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  41: suminf.    1.76199 (7) obj. -47.1685 iterations 12
Cbc0038I Pass  42: suminf.    1.14561 (6) obj. -47.1685 iterations 6
Cbc0038I Pass  43: suminf.    0.95174 (5) obj. -47.1685 iterations 2
Cbc0038I Pass  44: suminf.    1.72011 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  45: suminf.    1.60682 (6) obj. -47.1685 iterations 3
Cbc0038I Pass  46: suminf.    1.06605 (6) obj. -47.1685 iterations 5
Cbc0038I Pass  47: suminf.    1.96174 (6) obj. -47.1685 iterations 6
Cbc0038I Pass  48: suminf.    2.20757 (6) obj. -47.1685 iterations 10
Cbc0038I Pass  49: suminf.    1.98178 (7) obj. -47.1685 iterations 7
Cbc0038I Pass  50: suminf.    1.79196 (5) obj. -47.1685 iterations 6
Cbc0038I Pass  51: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  52: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  53: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  54: suminf.    2.19719 (10) obj. -47.1685 iterations 8
Cbc0038I Pass  55: suminf.    1.07218 (6) obj. -47.1685 iterations 11
Cbc0038I Pass  56: suminf.    1.79196 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  57: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  58: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  59: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -40.5151 - took 0.07 seconds
Cbc0012I Integer solution of -40.51512 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 54 rows 32 columns
Cbc0031I 16 added rows had average density of 44.4375
Cbc0013I At root node, 16 cuts changed objective from -64.311039 to -55.079188 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4195 row cuts average 3.4 elements, 4 column cuts (4 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 992 row cuts average 58.7 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -40.51512, took 5191 iterations and 32 nodes (0.67 seconds)
Cbc0032I Strong branching done 444 times (7038 iterations), fathomed 2 nodes and fixed 23 variables
Cbc0035I Maximum depth 14, 79 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.68

