Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 55 (-23) columns and 300 (-153) elements
Clp1000I sum of infeasibilities 2.86904e-05 - average 2.92759e-07, 23 fixed columns
Coin0506I Presolve 35 (-63) rows, 25 (-30) columns and 114 (-186) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 1.3353756 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Coin0511I After Postsolve, objective 391.13648, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Coin0511I After Postsolve, objective 391.13648, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 391.1364806 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 98 rows, 55 columns (54 integer (54 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.572%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 0.763683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -379.009 iterations 13
Cbc0038I Solution found of -379.009
Cbc0038I Relaxing continuous gives -379.009
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -380.222
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.02339 (1) obj. -380.222 iterations 1
Cbc0038I Pass   3: suminf.    0.39976 (2) obj. -380.222 iterations 3
Cbc0038I Pass   4: suminf.    0.71143 (4) obj. -380.222 iterations 9
Cbc0038I Pass   5: suminf.    0.71143 (4) obj. -380.222 iterations 2
Cbc0038I Pass   6: suminf.    1.18237 (3) obj. -380.222 iterations 8
Cbc0038I Pass   7: suminf.    1.14710 (8) obj. -380.222 iterations 8
Cbc0038I Pass   8: suminf.    0.74833 (2) obj. -380.222 iterations 9
Cbc0038I Pass   9: suminf.    0.02339 (1) obj. -380.222 iterations 5
Cbc0038I Pass  10: suminf.    0.39976 (2) obj. -380.222 iterations 4
Cbc0038I Pass  11: suminf.    1.61096 (4) obj. -380.222 iterations 9
Cbc0038I Pass  12: suminf.    0.39976 (2) obj. -380.222 iterations 8
Cbc0038I Pass  13: suminf.    0.48622 (5) obj. -380.222 iterations 9
Cbc0038I Pass  14: suminf.    0.98476 (7) obj. -380.222 iterations 14
Cbc0038I Pass  15: suminf.    0.94065 (6) obj. -380.222 iterations 5
Cbc0038I Pass  16: suminf.    1.57453 (5) obj. -380.222 iterations 15
Cbc0038I Pass  17: suminf.    1.75563 (9) obj. -380.222 iterations 13
Cbc0038I Pass  18: suminf.    0.74845 (6) obj. -380.222 iterations 10
Cbc0038I Pass  19: suminf.    0.71143 (4) obj. -380.222 iterations 7
Cbc0038I Pass  20: suminf.    1.18237 (3) obj. -380.222 iterations 9
Cbc0038I Pass  21: suminf.    1.14710 (8) obj. -380.222 iterations 7
Cbc0038I Pass  22: suminf.    0.74833 (2) obj. -380.222 iterations 9
Cbc0038I Pass  23: suminf.    0.02339 (1) obj. -380.222 iterations 3
Cbc0038I Pass  24: suminf.    0.39976 (2) obj. -380.222 iterations 4
Cbc0038I Pass  25: suminf.    0.07101 (2) obj. -380.222 iterations 6
Cbc0038I Pass  26: suminf.    1.18237 (3) obj. -380.222 iterations 12
Cbc0038I Pass  27: suminf.    0.72421 (8) obj. -380.222 iterations 6
Cbc0038I Pass  28: suminf.    0.71143 (4) obj. -380.222 iterations 4
Cbc0038I Pass  29: suminf.    1.18237 (3) obj. -380.222 iterations 8
Cbc0038I Pass  30: suminf.    1.14710 (8) obj. -380.222 iterations 6
Cbc0038I Pass  31: suminf.    0.74833 (2) obj. -380.222 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -379.009 - took 0.02 seconds
Cbc0012I Integer solution of -379.00944 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 98 rows 55 columns, reduced to 15 rows 10 columns
Cbc0031I 7 added rows had average density of 11.571429
Cbc0013I At root node, 27 cuts changed objective from -391.13648 to -379.00944 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 2.8 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.00944, took 33 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.09

