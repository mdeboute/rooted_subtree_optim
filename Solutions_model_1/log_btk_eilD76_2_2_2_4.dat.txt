Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 2.09655e-05 - average 1.61273e-07, 12 fixed columns
Coin0506I Presolve 104 (-26) rows, 62 (-14) columns and 324 (-80) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Coin0511I After Postsolve, objective 54.4211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Coin0511I After Postsolve, objective 54.4211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.42110002 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.2387
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.71928 iterations 46
Cbc0038I Solution found of 3.71928
Cbc0038I Relaxing continuous gives 3.71928
Cbc0038I Rounding solution of -3.27189 is better than previous of 3.71928

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 70 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -3.27189 to -23.2463 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.3638
Cbc0038I Pass   2: suminf.    3.63440 (11) obj. -26.3638 iterations 23
Cbc0038I Pass   3: suminf.    3.44397 (10) obj. -26.3638 iterations 1
Cbc0038I Pass   4: suminf.    2.31269 (7) obj. -26.3638 iterations 11
Cbc0038I Pass   5: suminf.    1.31715 (5) obj. -26.3638 iterations 5
Cbc0038I Pass   6: suminf.    1.08970 (5) obj. -26.3638 iterations 2
Cbc0038I Pass   7: suminf.    2.14242 (6) obj. -26.3638 iterations 10
Cbc0038I Pass   8: suminf.    0.94697 (4) obj. -26.3638 iterations 18
Cbc0038I Pass   9: suminf.    0.90238 (4) obj. -26.3638 iterations 3
Cbc0038I Pass  10: suminf.    0.96856 (4) obj. -26.3638 iterations 6
Cbc0038I Pass  11: suminf.    0.94490 (3) obj. -26.3638 iterations 1
Cbc0038I Pass  12: suminf.    0.78200 (4) obj. -26.3638 iterations 6
Cbc0038I Pass  13: suminf.    0.74887 (3) obj. -26.3638 iterations 1
Cbc0038I Pass  14: suminf.    1.70938 (6) obj. -26.3638 iterations 21
Cbc0038I Pass  15: suminf.    0.92388 (6) obj. -26.3638 iterations 5
Cbc0038I Pass  16: suminf.    2.17030 (8) obj. -26.3638 iterations 19
Cbc0038I Pass  17: suminf.    2.10590 (7) obj. -26.3638 iterations 2
Cbc0038I Pass  18: suminf.    1.42216 (5) obj. -26.3638 iterations 10
Cbc0038I Pass  19: suminf.    1.27056 (4) obj. -26.3638 iterations 1
Cbc0038I Pass  20: suminf.    1.01033 (4) obj. -26.3638 iterations 4
Cbc0038I Pass  21: suminf.    1.69227 (6) obj. -26.3638 iterations 6
Cbc0038I Pass  22: suminf.    5.24194 (19) obj. -26.3638 iterations 32
Cbc0038I Pass  23: suminf.    2.79060 (11) obj. -26.3638 iterations 14
Cbc0038I Pass  24: suminf.    2.64125 (11) obj. -26.3638 iterations 4
Cbc0038I Pass  25: suminf.    2.20804 (7) obj. -26.3638 iterations 16
Cbc0038I Pass  26: suminf.    1.63943 (7) obj. -26.3638 iterations 3
Cbc0038I Pass  27: suminf.    1.63943 (7) obj. -26.3638 iterations 0
Cbc0038I Pass  28: suminf.    1.26514 (6) obj. -26.3638 iterations 10
Cbc0038I Pass  29: suminf.    1.17542 (6) obj. -26.3638 iterations 4
Cbc0038I Pass  30: suminf.    1.50424 (7) obj. -26.3638 iterations 7
Cbc0038I Pass  31: suminf.    0.93744 (5) obj. -26.3638 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 82 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -23.2463 to -23.5292 (0.08 seconds)
Cbc0038I Round again with cutoff of -31.9753
Cbc0038I Pass  31: suminf.    4.48760 (12) obj. -31.9753 iterations 1
Cbc0038I Pass  32: suminf.    4.12912 (10) obj. -31.9753 iterations 10
Cbc0038I Pass  33: suminf.    1.24607 (6) obj. -31.9753 iterations 20
Cbc0038I Pass  34: suminf.    1.04482 (5) obj. -31.9753 iterations 4
Cbc0038I Pass  35: suminf.    2.93504 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  36: suminf.    1.04482 (5) obj. -31.9753 iterations 8
Cbc0038I Pass  37: suminf.    2.24348 (10) obj. -31.9753 iterations 20
Cbc0038I Pass  38: suminf.    1.79345 (9) obj. -31.9753 iterations 6
Cbc0038I Pass  39: suminf.    3.87068 (11) obj. -31.9753 iterations 13
Cbc0038I Pass  40: suminf.    3.73669 (9) obj. -31.9753 iterations 2
Cbc0038I Pass  41: suminf.    2.14885 (10) obj. -31.9753 iterations 3
Cbc0038I Pass  42: suminf.    1.65494 (6) obj. -31.9753 iterations 5
Cbc0038I Pass  43: suminf.    1.65416 (8) obj. -31.9753 iterations 2
Cbc0038I Pass  44: suminf.    1.33816 (7) obj. -31.9753 iterations 11
Cbc0038I Pass  45: suminf.    1.33816 (7) obj. -31.9753 iterations 0
Cbc0038I Pass  46: suminf.    3.23831 (8) obj. -31.9753 iterations 11
Cbc0038I Pass  47: suminf.    1.12349 (7) obj. -31.9753 iterations 7
Cbc0038I Pass  48: suminf.    1.12048 (7) obj. -31.9753 iterations 1
Cbc0038I Pass  49: suminf.    2.02051 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  50: suminf.    1.88333 (8) obj. -31.9753 iterations 1
Cbc0038I Pass  51: suminf.    2.25834 (7) obj. -31.9753 iterations 8
Cbc0038I Pass  52: suminf.    1.93810 (7) obj. -31.9753 iterations 3
Cbc0038I Pass  53: suminf.    3.23831 (8) obj. -31.9753 iterations 7
Cbc0038I Pass  54: suminf.    1.12349 (7) obj. -31.9753 iterations 7
Cbc0038I Pass  55: suminf.    1.12048 (7) obj. -31.9753 iterations 1
Cbc0038I Pass  56: suminf.    2.02051 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  57: suminf.    1.88333 (8) obj. -31.9753 iterations 1
Cbc0038I Pass  58: suminf.    2.25834 (7) obj. -31.9753 iterations 8
Cbc0038I Pass  59: suminf.    1.93810 (7) obj. -31.9753 iterations 3
Cbc0038I Pass  60: suminf.    3.23831 (8) obj. -31.9753 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -23.5292 to -29.7004 (0.14 seconds)
Cbc0038I Round again with cutoff of -38.709
Cbc0038I Pass  60: suminf.    4.51684 (12) obj. -38.709 iterations 1
Cbc0038I Pass  61: suminf.    4.12333 (11) obj. -38.709 iterations 2
Cbc0038I Pass  62: suminf.    2.19789 (8) obj. -38.709 iterations 17
Cbc0038I Pass  63: suminf.    2.17316 (9) obj. -38.709 iterations 2
Cbc0038I Pass  64: suminf.    3.39070 (11) obj. -38.709 iterations 18
Cbc0038I Pass  65: suminf.    2.18078 (9) obj. -38.709 iterations 6
Cbc0038I Pass  66: suminf.    2.18078 (9) obj. -38.709 iterations 1
Cbc0038I Pass  67: suminf.    3.50679 (10) obj. -38.709 iterations 11
Cbc0038I Pass  68: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  69: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  70: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  71: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  72: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  73: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  74: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  75: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  76: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  77: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  78: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  79: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  80: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  81: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  82: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  83: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  84: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  85: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  86: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  87: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  88: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  89: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -29.7004 - took 0.15 seconds
Cbc0012I Integer solution of -29.70036 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 70 rows 43 columns
Cbc0012I Integer solution of -29.85109 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 29 added rows had average density of 50.965517
Cbc0013I At root node, 29 cuts changed objective from -54.4211 to -45.742708 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14101 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2646 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.85109 best solution, best possible -45.742708 (1.07 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 64 rows 41 columns
Cbc0038I Full problem 130 rows 76 columns, reduced to 3 rows 9 columns
Cbc0016I Integer solution of -29.865201 found by strong branching after 11666 iterations and 93 nodes (1.49 seconds)
Cbc0001I Search completed - best objective -29.865201, took 11879 iterations and 106 nodes (1.51 seconds)
Cbc0032I Strong branching done 1080 times (17901 iterations), fathomed 17 nodes and fixed 30 variables
Cbc0035I Maximum depth 27, 290 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       1.53

