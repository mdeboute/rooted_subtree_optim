Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 1.41032e-05 - average 1.5498e-07, 7 fixed columns
Coin0506I Presolve 71 (-20) rows, 43 (-8) columns and 221 (-55) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Coin0511I After Postsolve, objective 39.201998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3890858 - largest nonzero change 0 ( 0%) - largest zero change 2.0026479e-05
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Clp0000I Optimal - objective value 39.201998
Coin0511I After Postsolve, objective 39.201998, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.20199796 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.75137
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.29599 iterations 43
Cbc0038I Solution found of 4.29599
Cbc0038I Relaxing continuous gives 4.29599
Cbc0038I Rounding solution of 0.60827 is better than previous of 4.29599

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 0.60827 to -8.68154 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.7337
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.74902 (12) obj. -11.7337 iterations 12
Cbc0038I Pass   3: suminf.    1.46665 (11) obj. -11.7337 iterations 1
Cbc0038I Pass   4: suminf.    1.88272 (7) obj. -11.7337 iterations 12
Cbc0038I Pass   5: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass   6: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass   7: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass   8: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass   9: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  10: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  11: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I Pass  12: suminf.    1.33058 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  13: suminf.    1.02591 (10) obj. -11.7337 iterations 7
Cbc0038I Pass  14: suminf.    1.88272 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  15: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  16: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  17: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  18: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  19: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  20: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  21: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I Pass  22: suminf.    1.33058 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  23: suminf.    1.02591 (10) obj. -11.7337 iterations 7
Cbc0038I Pass  24: suminf.    1.88272 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  25: suminf.    1.88272 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  26: suminf.    1.46091 (7) obj. -11.7337 iterations 9
Cbc0038I Pass  27: suminf.    1.46091 (7) obj. -11.7337 iterations 0
Cbc0038I Pass  28: suminf.    2.43200 (6) obj. -11.7337 iterations 8
Cbc0038I Pass  29: suminf.    2.27376 (6) obj. -11.7337 iterations 2
Cbc0038I Pass  30: suminf.    1.95771 (6) obj. -11.7337 iterations 3
Cbc0038I Pass  31: suminf.    2.62261 (8) obj. -11.7337 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -8.68154 to -8.69853 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.2273
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.88408 (19) obj. -17.2273 iterations 2
Cbc0038I Pass  32: suminf.    2.60883 (18) obj. -17.2273 iterations 1
Cbc0038I Pass  33: suminf.    2.89436 (9) obj. -17.2273 iterations 15
Cbc0038I Pass  34: suminf.    2.24849 (8) obj. -17.2273 iterations 3
Cbc0038I Pass  35: suminf.    2.24849 (8) obj. -17.2273 iterations 0
Cbc0038I Pass  36: suminf.    2.77852 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  37: suminf.    2.55444 (8) obj. -17.2273 iterations 4
Cbc0038I Pass  38: suminf.    2.29961 (10) obj. -17.2273 iterations 2
Cbc0038I Pass  39: suminf.    2.28564 (8) obj. -17.2273 iterations 2
Cbc0038I Pass  40: suminf.    2.63347 (13) obj. -17.2273 iterations 9
Cbc0038I Pass  41: suminf.    2.32767 (13) obj. -17.2273 iterations 2
Cbc0038I Pass  42: suminf.    2.21980 (13) obj. -17.2273 iterations 1
Cbc0038I Pass  43: suminf.    3.25013 (9) obj. -17.2273 iterations 10
Cbc0038I Pass  44: suminf.    2.65351 (9) obj. -17.2273 iterations 3
Cbc0038I Pass  45: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  46: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I Pass  47: suminf.    3.18727 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  48: suminf.    2.97370 (9) obj. -17.2273 iterations 6
Cbc0038I Pass  49: suminf.    2.74077 (9) obj. -17.2273 iterations 2
Cbc0038I Pass  50: suminf.    3.23013 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  51: suminf.    2.65351 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  52: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  53: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I Pass  54: suminf.    3.18727 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  55: suminf.    2.97370 (9) obj. -17.2273 iterations 6
Cbc0038I Pass  56: suminf.    2.74077 (9) obj. -17.2273 iterations 2
Cbc0038I Pass  57: suminf.    3.23013 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  58: suminf.    2.65351 (9) obj. -17.2273 iterations 1
Cbc0038I Pass  59: suminf.    3.70743 (9) obj. -17.2273 iterations 8
Cbc0038I Pass  60: suminf.    3.19047 (9) obj. -17.2273 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -8.69853 - took 0.12 seconds
Cbc0012I Integer solution of -8.69853 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 25 added rows had average density of 31.36
Cbc0013I At root node, 25 cuts changed objective from -39.201998 to -28.890965 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9155 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1785 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 66 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -8.69853 best solution, best possible -28.890965 (0.68 seconds)
Cbc0004I Integer solution of -8.71283 found after 6839 iterations and 15 nodes (0.73 seconds)
Cbc0004I Integer solution of -8.71349 found after 6894 iterations and 20 nodes (0.73 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 61 rows 36 columns
Cbc0012I Integer solution of -8.71423 found by RINS after 7712 iterations and 41 nodes (0.93 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 4 rows 10 columns
Cbc0016I Integer solution of -8.72522 found by strong branching after 9153 iterations and 120 nodes (1.09 seconds)
Cbc0001I Search completed - best objective -8.725220000000007, took 9367 iterations and 124 nodes (1.10 seconds)
Cbc0032I Strong branching done 1116 times (11117 iterations), fathomed 11 nodes and fixed 46 variables
Cbc0035I Maximum depth 13, 206 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.11

