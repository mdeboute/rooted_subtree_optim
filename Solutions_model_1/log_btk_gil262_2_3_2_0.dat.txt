Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 3.37471e-05 - average 6.68258e-08, 94 fixed columns
Coin0506I Presolve 318 (-187) rows, 168 (-94) columns and 945 (-557) elements
Clp0029I End of values pass after 168 iterations
Clp0014I Perturbing problem by 0.001% of 0.15479349 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 156.6968
Clp0000I Optimal - objective value 156.6968
Coin0511I After Postsolve, objective 156.6968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13520951 - largest nonzero change 2.5384631e-05 ( 0.0025384631%) - largest zero change 2.9941894e-05
Clp0000I Optimal - objective value 156.6968
Clp0000I Optimal - objective value 156.6968
Clp0000I Optimal - objective value 156.6968
Coin0511I After Postsolve, objective 156.6968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 156.6968043 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 79 integers unsatisfied sum - 11.9189
Cbc0038I Solution found of -9.36023
Cbc0038I Relaxing continuous gives -11.6132
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 144 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -11.6132 to -46.855 (0.08 seconds)
Cbc0038I Round again with cutoff of -57.8393
Cbc0038I Pass   1: suminf.    2.26439 (19) obj. -57.8393 iterations 245
Cbc0038I Pass   2: suminf.    1.91246 (8) obj. -57.8393 iterations 54
Cbc0038I Pass   3: suminf.    1.26465 (5) obj. -57.8393 iterations 13
Cbc0038I Pass   4: suminf.    0.67861 (3) obj. -57.8393 iterations 26
Cbc0038I Pass   5: suminf.    0.52133 (5) obj. -57.8393 iterations 36
Cbc0038I Pass   6: suminf.    1.03365 (6) obj. -57.8393 iterations 40
Cbc0038I Pass   7: suminf.    1.01987 (6) obj. -57.8393 iterations 3
Cbc0038I Pass   8: suminf.    0.49550 (4) obj. -57.8393 iterations 35
Cbc0038I Pass   9: suminf.    0.49550 (4) obj. -57.8393 iterations 2
Cbc0038I Pass  10: suminf.    1.60040 (4) obj. -57.8393 iterations 18
Cbc0038I Pass  11: suminf.    1.19126 (3) obj. -57.8393 iterations 11
Cbc0038I Pass  12: suminf.    3.44348 (13) obj. -57.8393 iterations 49
Cbc0038I Pass  13: suminf.    2.00675 (12) obj. -57.8393 iterations 39
Cbc0038I Pass  14: suminf.    1.35950 (4) obj. -57.8393 iterations 20
Cbc0038I Pass  15: suminf.    1.17869 (4) obj. -57.8393 iterations 20
Cbc0038I Pass  16: suminf.    0.44031 (1) obj. -57.8393 iterations 13
Cbc0038I Pass  17: suminf.    0.36838 (2) obj. -57.8393 iterations 2
Cbc0038I Pass  18: suminf.    0.92679 (4) obj. -57.8393 iterations 14
Cbc0038I Pass  19: suminf.    0.92679 (4) obj. -57.8393 iterations 0
Cbc0038I Pass  20: suminf.    1.16022 (3) obj. -59.3874 iterations 13
Cbc0038I Pass  21: suminf.    0.81061 (5) obj. -57.8393 iterations 14
Cbc0038I Pass  22: suminf.    0.81061 (5) obj. -57.8393 iterations 0
Cbc0038I Pass  23: suminf.    0.44031 (1) obj. -57.8393 iterations 20
Cbc0038I Pass  24: suminf.    0.36838 (2) obj. -57.8393 iterations 2
Cbc0038I Pass  25: suminf.    0.92679 (4) obj. -57.8393 iterations 14
Cbc0038I Pass  26: suminf.    0.92679 (4) obj. -57.8393 iterations 0
Cbc0038I Pass  27: suminf.    1.16022 (3) obj. -59.3874 iterations 13
Cbc0038I Pass  28: suminf.    0.81061 (5) obj. -57.8393 iterations 14
Cbc0038I Pass  29: suminf.    0.81061 (5) obj. -57.8393 iterations 0
Cbc0038I Pass  30: suminf.    0.44031 (1) obj. -57.8393 iterations 20
Cbc0038I Rounding solution of -73.9913 is better than previous of -46.855

Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 165 rows 92 columns
Cbc0038I Mini branch and bound improved solution from -73.9913 to -77.8481 (0.20 seconds)
Cbc0038I Round again with cutoff of -93.6179
Cbc0038I Pass  30: suminf.    4.25616 (38) obj. -93.6179 iterations 30
Cbc0038I Pass  31: suminf.    2.77940 (9) obj. -93.6179 iterations 74
Cbc0038I Pass  32: suminf.    2.33687 (9) obj. -93.6179 iterations 27
Cbc0038I Pass  33: suminf.    2.91207 (8) obj. -93.6179 iterations 39
Cbc0038I Pass  34: suminf.    2.19740 (6) obj. -93.6179 iterations 8
Cbc0038I Pass  35: suminf.    2.03035 (9) obj. -93.6179 iterations 44
Cbc0038I Pass  36: suminf.    4.06182 (10) obj. -93.6179 iterations 25
Cbc0038I Pass  37: suminf.    2.77609 (9) obj. -93.6179 iterations 12
Cbc0038I Pass  38: suminf.    2.77184 (10) obj. -93.6179 iterations 7
Cbc0038I Pass  39: suminf.    3.18126 (10) obj. -93.6179 iterations 21
Cbc0038I Pass  40: suminf.    2.40226 (15) obj. -93.6179 iterations 29
Cbc0038I Pass  41: suminf.    2.81112 (9) obj. -93.6179 iterations 46
Cbc0038I Pass  42: suminf.    1.87940 (9) obj. -93.6179 iterations 27
Cbc0038I Pass  43: suminf.    1.87909 (9) obj. -93.6179 iterations 11
Cbc0038I Pass  44: suminf.    2.92919 (9) obj. -93.6179 iterations 16
Cbc0038I Pass  45: suminf.    2.50387 (7) obj. -93.6179 iterations 21
Cbc0038I Pass  46: suminf.    2.21022 (9) obj. -93.6179 iterations 16
Cbc0038I Pass  47: suminf.    2.47288 (8) obj. -93.6179 iterations 15
Cbc0038I Pass  48: suminf.    1.87940 (9) obj. -93.6179 iterations 24
Cbc0038I Pass  49: suminf.    1.87909 (9) obj. -93.6179 iterations 11
Cbc0038I Pass  50: suminf.    2.92919 (9) obj. -93.6179 iterations 16
Cbc0038I Pass  51: suminf.    2.50387 (7) obj. -93.6179 iterations 21
Cbc0038I Pass  52: suminf.    2.21022 (9) obj. -93.6179 iterations 16
Cbc0038I Pass  53: suminf.    2.47288 (8) obj. -93.6179 iterations 15
Cbc0038I Pass  54: suminf.    1.87940 (9) obj. -93.6179 iterations 24
Cbc0038I Pass  55: suminf.    1.87909 (9) obj. -93.6179 iterations 11
Cbc0038I Pass  56: suminf.    2.92919 (9) obj. -93.6179 iterations 16
Cbc0038I Pass  57: suminf.    2.50387 (7) obj. -93.6179 iterations 21
Cbc0038I Pass  58: suminf.    2.21022 (9) obj. -93.6179 iterations 16
Cbc0038I Pass  59: suminf.    2.47288 (8) obj. -93.6179 iterations 15
Cbc0038I Rounding solution of -82.1468 is better than previous of -77.8481

Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 176 rows 98 columns
Cbc0038I Mini branch and bound improved solution from -82.1468 to -83.0633 (0.30 seconds)
Cbc0038I Round again with cutoff of -112.542
Cbc0038I Pass  59: suminf.    5.36854 (42) obj. -112.542 iterations 15
Cbc0038I Pass  60: suminf.    4.70471 (14) obj. -112.542 iterations 96
Cbc0038I Pass  61: suminf.    3.81357 (19) obj. -112.542 iterations 46
Cbc0038I Pass  62: suminf.    3.80782 (16) obj. -112.542 iterations 1
Cbc0038I Pass  63: suminf.    3.77931 (14) obj. -112.542 iterations 50
Cbc0038I Pass  64: suminf.    3.27930 (11) obj. -112.542 iterations 29
Cbc0038I Pass  65: suminf.    3.24390 (11) obj. -112.542 iterations 6
Cbc0038I Pass  66: suminf.    4.75199 (14) obj. -112.542 iterations 68
Cbc0038I Pass  67: suminf.    4.41689 (16) obj. -112.542 iterations 29
Cbc0038I Pass  68: suminf.    4.12650 (15) obj. -112.542 iterations 37
Cbc0038I Pass  69: suminf.    3.64640 (12) obj. -112.542 iterations 21
Cbc0038I Pass  70: suminf.    3.30534 (11) obj. -112.542 iterations 21
Cbc0038I Pass  71: suminf.    3.30534 (11) obj. -112.542 iterations 0
Cbc0038I Pass  72: suminf.    4.75199 (14) obj. -112.542 iterations 60
Cbc0038I Pass  73: suminf.    4.41689 (16) obj. -112.542 iterations 27
Cbc0038I Pass  74: suminf.    4.45937 (15) obj. -112.542 iterations 35
Cbc0038I Pass  75: suminf.    4.15586 (12) obj. -112.542 iterations 33
Cbc0038I Pass  76: suminf.    4.14986 (13) obj. -112.542 iterations 7
Cbc0038I Pass  77: suminf.    4.40409 (15) obj. -112.542 iterations 29
Cbc0038I Pass  78: suminf.    4.04562 (14) obj. -112.542 iterations 17
Cbc0038I Pass  79: suminf.    3.25866 (11) obj. -112.542 iterations 8
Cbc0038I Pass  80: suminf.    3.22790 (11) obj. -112.542 iterations 11
Cbc0038I Pass  81: suminf.    4.68357 (15) obj. -112.542 iterations 50
Cbc0038I Pass  82: suminf.    4.49960 (16) obj. -112.542 iterations 15
Cbc0038I Pass  83: suminf.    4.11068 (13) obj. -112.542 iterations 41
Cbc0038I Pass  84: suminf.    3.97073 (12) obj. -112.542 iterations 19
Cbc0038I Pass  85: suminf.    3.89914 (11) obj. -112.542 iterations 9
Cbc0038I Pass  86: suminf.    4.16383 (13) obj. -112.542 iterations 42
Cbc0038I Pass  87: suminf.    4.03895 (14) obj. -112.542 iterations 13
Cbc0038I Pass  88: suminf.    4.49937 (13) obj. -112.542 iterations 45
Cbc0038I Rounding solution of -83.1139 is better than previous of -83.0633

Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 183 rows 102 columns
Cbc0038I Mini branch and bound improved solution from -83.1139 to -86.3741 (0.45 seconds)
Cbc0038I Round again with cutoff of -125.788
Cbc0038I Pass  88: suminf.    6.17594 (58) obj. -125.788 iterations 6
Cbc0038I Pass  89: suminf.    5.97640 (26) obj. -125.788 iterations 110
Cbc0038I Pass  90: suminf.    5.25405 (24) obj. -125.788 iterations 34
Cbc0038I Pass  91: suminf.    6.14330 (20) obj. -125.788 iterations 46
Cbc0038I Pass  92: suminf.    5.27654 (21) obj. -125.788 iterations 34
Cbc0038I Pass  93: suminf.    5.22777 (22) obj. -125.788 iterations 17
Cbc0038I Pass  94: suminf.    6.27998 (22) obj. -125.788 iterations 39
Cbc0038I Pass  95: suminf.    5.48399 (25) obj. -125.788 iterations 73
Cbc0038I Pass  96: suminf.    5.32965 (23) obj. -125.788 iterations 28
Cbc0038I Pass  97: suminf.    5.73085 (20) obj. -125.788 iterations 45
Cbc0038I Pass  98: suminf.    5.51556 (19) obj. -125.788 iterations 36
Cbc0038I Pass  99: suminf.    4.94371 (17) obj. -125.788 iterations 21
Cbc0038I Pass 100: suminf.    6.45745 (18) obj. -125.788 iterations 30
Cbc0038I Pass 101: suminf.    5.90208 (18) obj. -125.788 iterations 24
Cbc0038I Pass 102: suminf.    6.87779 (27) obj. -125.788 iterations 27
Cbc0038I Pass 103: suminf.    5.54754 (22) obj. -125.788 iterations 43
Cbc0038I Pass 104: suminf.    5.54754 (22) obj. -125.788 iterations 0
Cbc0038I Pass 105: suminf.    6.05745 (18) obj. -125.788 iterations 66
Cbc0038I Pass 106: suminf.    5.90208 (18) obj. -125.788 iterations 26
Cbc0038I Pass 107: suminf.    6.87779 (27) obj. -125.788 iterations 26
Cbc0038I Pass 108: suminf.    5.54754 (22) obj. -125.788 iterations 44
Cbc0038I Pass 109: suminf.    5.54754 (22) obj. -125.788 iterations 0
Cbc0038I Pass 110: suminf.    5.67826 (18) obj. -125.788 iterations 66
Cbc0038I Pass 111: suminf.    5.25028 (20) obj. -125.788 iterations 36
Cbc0038I Pass 112: suminf.    5.22777 (22) obj. -125.788 iterations 6
Cbc0038I Pass 113: suminf.    6.59479 (18) obj. -125.788 iterations 45
Cbc0038I Pass 114: suminf.    6.10461 (18) obj. -125.788 iterations 11
Cbc0038I Pass 115: suminf.    5.91505 (19) obj. -125.788 iterations 14
Cbc0038I Pass 116: suminf.    5.91505 (19) obj. -125.788 iterations 11
Cbc0038I Pass 117: suminf.    6.33261 (22) obj. -125.788 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 208 rows 114 columns
Cbc0038I Mini branch and bound did not improve solution (0.56 seconds)
Cbc0038I After 0.56 seconds - Feasibility pump exiting with objective of -86.3741 - took 0.52 seconds
Cbc0012I Integer solution of -86.37414 found by feasibility pump after 0 iterations and 0 nodes (0.56 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 147 rows 83 columns
Cbc0012I Integer solution of -88.32475 found by RINS after 0 iterations and 0 nodes (0.65 seconds)
Cbc0031I 41 added rows had average density of 196.82927
Cbc0013I At root node, 41 cuts changed objective from -156.6968 to -144.6719 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 52032 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.620 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3934 row cuts average 259.9 elements, 0 column cuts (0 active)  in 0.696 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.871 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 255.9 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -88.32475 best solution, best possible -144.6719 (7.90 seconds)
Cbc0010I After 6 nodes, 7 on tree, -88.32475 best solution, best possible -144.6719 (8.66 seconds)
Cbc0010I After 37 nodes, 11 on tree, -88.32475 best solution, best possible -144.6719 (9.37 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 37 rows 25 columns
Cbc0012I Integer solution of -94.63809 found by RINS after 23845 iterations and 41 nodes (9.42 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 91 rows 57 columns
Cbc0012I Integer solution of -95.49776 found by rounding after 28210 iterations and 143 nodes (10.00 seconds)
Cbc0010I After 158 nodes, 20 on tree, -95.49776 best solution, best possible -144.6719 (10.07 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 18 rows 15 columns
Cbc0010I After 272 nodes, 16 on tree, -95.49776 best solution, best possible -144.6719 (10.78 seconds)
Cbc0001I Search completed - best objective -95.49776, took 38928 iterations and 392 nodes (11.20 seconds)
Cbc0032I Strong branching done 2854 times (72569 iterations), fathomed 63 nodes and fixed 246 variables
Cbc0035I Maximum depth 60, 1346 variables fixed on reduced cost
Total time (CPU seconds):       10.78   (Wallclock seconds):       11.28

