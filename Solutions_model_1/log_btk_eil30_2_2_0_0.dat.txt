Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 0.000289974 - average 5.36988e-06, 2 fixed columns
Coin0506I Presolve 50 (-4) rows, 28 (-2) columns and 148 (-12) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Coin0511I After Postsolve, objective 93.298662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Coin0511I After Postsolve, objective 93.298662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.29866248 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 161 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.22044
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.4174 iterations 21
Cbc0038I Solution found of -29.4174
Cbc0038I Relaxing continuous gives -29.4174
Cbc0038I Rounding solution of -29.977 is better than previous of -29.4174

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -29.977 to -30.7867 (0.01 seconds)
Cbc0038I Round again with cutoff of -37.038
Cbc0038I Pass   2: suminf.    0.13335 (1) obj. -37.038 iterations 1
Cbc0038I Pass   3: suminf.    0.40793 (2) obj. -37.038 iterations 4
Cbc0038I Pass   4: suminf.    0.77658 (3) obj. -37.038 iterations 3
Cbc0038I Pass   5: suminf.    0.63991 (3) obj. -37.038 iterations 1
Cbc0038I Pass   6: suminf.    0.69429 (2) obj. -37.038 iterations 3
Cbc0038I Pass   7: suminf.    0.67816 (2) obj. -37.038 iterations 2
Cbc0038I Pass   8: suminf.    0.61927 (2) obj. -37.038 iterations 3
Cbc0038I Pass   9: suminf.    0.58748 (2) obj. -37.038 iterations 2
Cbc0038I Pass  10: suminf.    0.43548 (1) obj. -37.038 iterations 3
Cbc0038I Pass  11: suminf.    0.31665 (1) obj. -37.038 iterations 2
Cbc0038I Pass  12: suminf.    3.04377 (9) obj. -37.038 iterations 8
Cbc0038I Pass  13: suminf.    1.77628 (5) obj. -37.038 iterations 9
Cbc0038I Pass  14: suminf.    1.35632 (4) obj. -37.038 iterations 2
Cbc0038I Pass  15: suminf.    0.34095 (2) obj. -37.038 iterations 6
Cbc0038I Pass  16: suminf.    1.39195 (5) obj. -37.038 iterations 4
Cbc0038I Pass  17: suminf.    2.41687 (6) obj. -37.038 iterations 10
Cbc0038I Pass  18: suminf.    1.24436 (3) obj. -37.038 iterations 5
Cbc0038I Pass  19: suminf.    0.77398 (2) obj. -37.038 iterations 2
Cbc0038I Pass  20: suminf.    0.39872 (1) obj. -37.038 iterations 1
Cbc0038I Pass  21: suminf.    0.43548 (1) obj. -37.038 iterations 1
Cbc0038I Pass  22: suminf.    1.87803 (5) obj. -37.038 iterations 5
Cbc0038I Pass  23: suminf.    2.55621 (7) obj. -37.038 iterations 8
Cbc0038I Pass  24: suminf.    1.18974 (5) obj. -37.038 iterations 3
Cbc0038I Pass  25: suminf.    0.31669 (1) obj. -37.038 iterations 6
Cbc0038I Pass  26: suminf.    0.26725 (1) obj. -37.038 iterations 2
Cbc0038I Pass  27: suminf.    0.35484 (1) obj. -37.038 iterations 1
Cbc0038I Pass  28: suminf.    3.66227 (12) obj. -37.038 iterations 10
Cbc0038I Pass  29: suminf.    1.05997 (4) obj. -37.038 iterations 9
Cbc0038I Pass  30: suminf.    0.59189 (4) obj. -37.038 iterations 2
Cbc0038I Pass  31: suminf.    0.94961 (2) obj. -37.038 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -30.7867 to -32.1195 (0.03 seconds)
Cbc0038I Round again with cutoff of -48.2901
Cbc0038I Pass  31: suminf.    0.42774 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  32: suminf.    0.62519 (3) obj. -48.2901 iterations 5
Cbc0038I Pass  33: suminf.    0.60486 (3) obj. -48.2901 iterations 1
Cbc0038I Pass  34: suminf.    0.51531 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  35: suminf.    1.63248 (7) obj. -48.2901 iterations 11
Cbc0038I Pass  36: suminf.    1.07897 (6) obj. -48.2901 iterations 4
Cbc0038I Pass  37: suminf.    1.61922 (5) obj. -48.2901 iterations 13
Cbc0038I Pass  38: suminf.    0.68089 (3) obj. -48.2901 iterations 2
Cbc0038I Pass  39: suminf.    1.26719 (4) obj. -48.2901 iterations 4
Cbc0038I Pass  40: suminf.    1.07460 (4) obj. -48.2901 iterations 3
Cbc0038I Pass  41: suminf.    1.07460 (4) obj. -48.2901 iterations 0
Cbc0038I Pass  42: suminf.    1.49560 (4) obj. -48.2901 iterations 3
Cbc0038I Pass  43: suminf.    0.81678 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  44: suminf.    1.07460 (4) obj. -48.2901 iterations 4
Cbc0038I Pass  45: suminf.    2.90150 (10) obj. -48.2901 iterations 19
Cbc0038I Pass  46: suminf.    2.15437 (7) obj. -48.2901 iterations 4
Cbc0038I Pass  47: suminf.    2.07182 (5) obj. -48.2901 iterations 8
Cbc0038I Pass  48: suminf.    1.13534 (8) obj. -48.2901 iterations 5
Cbc0038I Pass  49: suminf.    2.09544 (7) obj. -48.2901 iterations 10
Cbc0038I Pass  50: suminf.    2.05483 (7) obj. -48.2901 iterations 1
Cbc0038I Pass  51: suminf.    1.13995 (7) obj. -48.2901 iterations 10
Cbc0038I Pass  52: suminf.    1.72799 (8) obj. -48.2901 iterations 8
Cbc0038I Pass  53: suminf.    0.71548 (3) obj. -48.2901 iterations 8
Cbc0038I Pass  54: suminf.    0.28858 (2) obj. -48.2901 iterations 2
Cbc0038I Pass  55: suminf.    0.67305 (2) obj. -48.2901 iterations 2
Cbc0038I Pass  56: suminf.    2.39598 (7) obj. -48.2901 iterations 8
Cbc0038I Pass  57: suminf.    2.39598 (7) obj. -48.2901 iterations 1
Cbc0038I Pass  58: suminf.    2.35384 (7) obj. -48.2901 iterations 6
Cbc0038I Pass  59: suminf.    0.75250 (2) obj. -48.2901 iterations 3
Cbc0038I Pass  60: suminf.    0.28858 (2) obj. -48.2901 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 46 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.1195 - took 0.03 seconds
Cbc0012I Integer solution of -32.11948 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 31 rows 20 columns
Cbc0031I 15 added rows had average density of 23.666667
Cbc0013I At root node, 15 cuts changed objective from -93.298662 to -52.536065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3398 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1283 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0012I Integer solution of -32.28779 found by DiveCoefficient after 3441 iterations and 4 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -32.28779, took 4101 iterations and 14 nodes (0.29 seconds)
Cbc0032I Strong branching done 218 times (3322 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 4, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.30

