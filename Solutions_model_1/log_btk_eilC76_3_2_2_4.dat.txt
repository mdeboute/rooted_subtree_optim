Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 75 (-3) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 1.98934e-05 - average 1.46275e-07, 14 fixed columns
Coin0506I Presolve 108 (-28) rows, 61 (-14) columns and 331 (-83) elements
Clp0029I End of values pass after 61 iterations
Clp0000I Optimal - objective value 38.235
Clp0000I Optimal - objective value 38.235
Coin0511I After Postsolve, objective 38.235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.235
Clp0000I Optimal - objective value 38.235
Clp0000I Optimal - objective value 38.235
Coin0511I After Postsolve, objective 38.235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.23499962 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 75 columns (74 integer (74 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.183%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 8.17142
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.3987 iterations 28
Cbc0038I Solution found of 10.3987
Cbc0038I Relaxing continuous gives 10.3987
Cbc0038I Rounding solution of -9.6402 is better than previous of 10.3987

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 75 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -9.6402 to -11.6602 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.3178
Cbc0038I Pass   2: suminf.    3.15545 (15) obj. -14.3178 iterations 20
Cbc0038I Pass   3: suminf.    2.80017 (28) obj. -14.3178 iterations 14
Cbc0038I Pass   4: suminf.    1.11982 (9) obj. -14.3178 iterations 27
Cbc0038I Pass   5: suminf.    1.11982 (9) obj. -14.3178 iterations 0
Cbc0038I Pass   6: suminf.    1.12181 (8) obj. -14.3178 iterations 8
Cbc0038I Pass   7: suminf.    1.12181 (8) obj. -14.3178 iterations 0
Cbc0038I Pass   8: suminf.    2.06839 (8) obj. -14.3178 iterations 18
Cbc0038I Pass   9: suminf.    2.02438 (7) obj. -14.3178 iterations 1
Cbc0038I Pass  10: suminf.    1.33930 (6) obj. -14.3178 iterations 8
Cbc0038I Pass  11: suminf.    1.35950 (4) obj. -14.3178 iterations 6
Cbc0038I Pass  12: suminf.    1.35627 (5) obj. -14.3178 iterations 4
Cbc0038I Pass  13: suminf.    1.35627 (5) obj. -14.3178 iterations 0
Cbc0038I Pass  14: suminf.    1.52045 (5) obj. -14.3178 iterations 6
Cbc0038I Pass  15: suminf.    1.52045 (5) obj. -14.3178 iterations 0
Cbc0038I Pass  16: suminf.    1.35627 (5) obj. -14.3178 iterations 4
Cbc0038I Pass  17: suminf.    2.86929 (8) obj. -14.3178 iterations 14
Cbc0038I Pass  18: suminf.    1.81841 (6) obj. -14.3178 iterations 10
Cbc0038I Pass  19: suminf.    1.81841 (6) obj. -14.3178 iterations 0
Cbc0038I Pass  20: suminf.    1.26508 (3) obj. -14.3178 iterations 13
Cbc0038I Pass  21: suminf.    1.26508 (3) obj. -14.3178 iterations 0
Cbc0038I Pass  22: suminf.    1.36894 (3) obj. -14.3178 iterations 2
Cbc0038I Pass  23: suminf.    1.67257 (6) obj. -14.3178 iterations 31
Cbc0038I Pass  24: suminf.    1.03229 (6) obj. -14.3178 iterations 11
Cbc0038I Pass  25: suminf.    2.17406 (6) obj. -14.3178 iterations 22
Cbc0038I Pass  26: suminf.    1.30346 (5) obj. -14.3178 iterations 7
Cbc0038I Pass  27: suminf.    1.28533 (5) obj. -14.3178 iterations 3
Cbc0038I Pass  28: suminf.    1.23866 (5) obj. -14.3178 iterations 1
Cbc0038I Pass  29: suminf.    1.84181 (6) obj. -14.3178 iterations 5
Cbc0038I Pass  30: suminf.    1.84181 (6) obj. -14.3178 iterations 0
Cbc0038I Pass  31: suminf.    1.56739 (6) obj. -14.3178 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 75 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -11.6602 to -12.9323 (0.07 seconds)
Cbc0038I Round again with cutoff of -19.1013
Cbc0038I Pass  31: suminf.    4.21806 (15) obj. -19.1013 iterations 0
Cbc0038I Pass  32: suminf.    2.99678 (9) obj. -19.1013 iterations 17
Cbc0038I Pass  33: suminf.    2.30316 (7) obj. -19.1013 iterations 5
Cbc0038I Pass  34: suminf.    2.49079 (8) obj. -19.1013 iterations 8
Cbc0038I Pass  35: suminf.    2.00145 (6) obj. -19.1013 iterations 7
Cbc0038I Pass  36: suminf.    1.28294 (6) obj. -19.1013 iterations 3
Cbc0038I Pass  37: suminf.    1.28294 (6) obj. -19.1013 iterations 0
Cbc0038I Pass  38: suminf.    1.90851 (5) obj. -19.1013 iterations 7
Cbc0038I Pass  39: suminf.    3.36449 (11) obj. -19.1013 iterations 19
Cbc0038I Pass  40: suminf.    1.80991 (6) obj. -19.1013 iterations 13
Cbc0038I Pass  41: suminf.    1.71166 (5) obj. -19.1013 iterations 1
Cbc0038I Pass  42: suminf.    1.18088 (4) obj. -19.1013 iterations 10
Cbc0038I Pass  43: suminf.    1.77872 (5) obj. -19.1013 iterations 7
Cbc0038I Pass  44: suminf.    1.76613 (5) obj. -19.1013 iterations 1
Cbc0038I Pass  45: suminf.    1.69024 (6) obj. -19.1013 iterations 5
Cbc0038I Pass  46: suminf.    1.98077 (5) obj. -19.1013 iterations 8
Cbc0038I Pass  47: suminf.    1.83971 (5) obj. -19.1013 iterations 2
Cbc0038I Pass  48: suminf.    4.66221 (15) obj. -19.1013 iterations 23
Cbc0038I Pass  49: suminf.    1.62664 (6) obj. -19.1013 iterations 17
Cbc0038I Pass  50: suminf.    1.62664 (6) obj. -19.1013 iterations 0
Cbc0038I Pass  51: suminf.    1.46224 (5) obj. -19.1013 iterations 9
Cbc0038I Pass  52: suminf.    1.20294 (5) obj. -19.1013 iterations 3
Cbc0038I Pass  53: suminf.    1.07742 (4) obj. -19.1013 iterations 2
Cbc0038I Pass  54: suminf.    1.83971 (5) obj. -19.1013 iterations 6
Cbc0038I Pass  55: suminf.    1.83971 (5) obj. -19.1013 iterations 0
Cbc0038I Pass  56: suminf.    1.69024 (6) obj. -19.1013 iterations 4
Cbc0038I Pass  57: suminf.    1.98077 (5) obj. -19.1013 iterations 8
Cbc0038I Pass  58: suminf.    2.04926 (9) obj. -19.1013 iterations 15
Cbc0038I Pass  59: suminf.    2.00769 (7) obj. -19.1013 iterations 5
Cbc0038I Pass  60: suminf.    2.41503 (7) obj. -19.1013 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 75 columns, reduced to 82 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -12.9323 - took 0.08 seconds
Cbc0012I Integer solution of -12.932301 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 136 rows 75 columns, reduced to 58 rows 32 columns
Cbc0031I 18 added rows had average density of 51.611111
Cbc0013I At root node, 18 cuts changed objective from -38.235 to -29.909896 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9389 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1269 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.932301 best solution, best possible -29.909896 (0.70 seconds)
Cbc0038I Full problem 136 rows 75 columns, reduced to 19 rows 16 columns
Cbc0012I Integer solution of -13.09488 found by rounding after 7281 iterations and 46 nodes (0.95 seconds)
Cbc0012I Integer solution of -13.13442 found by rounding after 7294 iterations and 47 nodes (0.95 seconds)
Cbc0004I Integer solution of -13.14823 found after 7427 iterations and 60 nodes (0.96 seconds)
Cbc0038I Full problem 136 rows 75 columns, reduced to 3 rows 8 columns
Cbc0016I Integer solution of -13.20146 found by strong branching after 7975 iterations and 105 nodes (1.02 seconds)
Cbc0001I Search completed - best objective -13.20146, took 8325 iterations and 118 nodes (1.03 seconds)
Cbc0032I Strong branching done 1026 times (14605 iterations), fathomed 15 nodes and fixed 39 variables
Cbc0035I Maximum depth 21, 252 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.04

