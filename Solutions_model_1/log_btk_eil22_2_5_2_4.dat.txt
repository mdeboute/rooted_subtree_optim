Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-23) rows, 15 (-9) columns and 72 (-57) elements
Clp1000I sum of infeasibilities 0.000201323 - average 8.38847e-06, 4 fixed columns
Coin0506I Presolve 16 (-8) rows, 11 (-4) columns and 48 (-24) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Coin0511I After Postsolve, objective 125.96782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Clp0000I Optimal - objective value 125.96782
Coin0511I After Postsolve, objective 125.96782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.9678215 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.731%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.64975
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -95.5 iterations 5
Cbc0038I Solution found of -95.5
Cbc0038I Relaxing continuous gives -95.5
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 10 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -95.5 to -101.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -104.397
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18929 (1) obj. -104.397 iterations 1
Cbc0038I Pass   3: suminf.    0.15246 (1) obj. -104.397 iterations 1
Cbc0038I Pass   4: suminf.    0.19639 (4) obj. -104.397 iterations 2
Cbc0038I Pass   5: suminf.    0.15246 (1) obj. -104.397 iterations 2
Cbc0038I Pass   6: suminf.    1.60172 (5) obj. -104.397 iterations 6
Cbc0038I Pass   7: suminf.    0.73609 (4) obj. -104.397 iterations 4
Cbc0038I Pass   8: suminf.    0.59526 (3) obj. -104.397 iterations 2
Cbc0038I Pass   9: suminf.    0.15246 (1) obj. -104.397 iterations 5
Cbc0038I Pass  10: suminf.    1.22222 (3) obj. -104.397 iterations 2
Cbc0038I Pass  11: suminf.    0.59526 (3) obj. -104.397 iterations 3
Cbc0038I Pass  12: suminf.    0.15246 (1) obj. -104.397 iterations 5
Cbc0038I Pass  13: suminf.    1.54295 (4) obj. -104.397 iterations 4
Cbc0038I Pass  14: suminf.    1.38422 (4) obj. -104.397 iterations 2
Cbc0038I Pass  15: suminf.    0.15246 (1) obj. -104.397 iterations 9
Cbc0038I Pass  16: suminf.    0.18929 (1) obj. -104.397 iterations 2
Cbc0038I Pass  17: suminf.    0.70646 (3) obj. -104.397 iterations 4
Cbc0038I Pass  18: suminf.    0.49288 (2) obj. -104.397 iterations 2
Cbc0038I Pass  19: suminf.    0.09819 (1) obj. -104.397 iterations 3
Cbc0038I Pass  20: suminf.    0.09819 (1) obj. -104.397 iterations 0
Cbc0038I Pass  21: suminf.    0.57237 (2) obj. -104.397 iterations 2
Cbc0038I Pass  22: suminf.    0.46775 (4) obj. -104.397 iterations 5
Cbc0038I Pass  23: suminf.    0.18929 (1) obj. -104.397 iterations 3
Cbc0038I Pass  24: suminf.    0.15246 (1) obj. -104.397 iterations 2
Cbc0038I Pass  25: suminf.    0.09819 (1) obj. -104.397 iterations 2
Cbc0038I Pass  26: suminf.    0.49288 (2) obj. -104.397 iterations 4
Cbc0038I Pass  27: suminf.    0.49288 (2) obj. -104.397 iterations 0
Cbc0038I Pass  28: suminf.    0.09819 (1) obj. -104.397 iterations 3
Cbc0038I Pass  29: suminf.    0.09819 (1) obj. -104.397 iterations 0
Cbc0038I Pass  30: suminf.    0.57237 (2) obj. -104.397 iterations 2
Cbc0038I Pass  31: suminf.    0.77800 (3) obj. -104.397 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -101.5 - took 0.01 seconds
Cbc0012I Integer solution of -101.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 10 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -125.96782 to -125.96782 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -101.5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

