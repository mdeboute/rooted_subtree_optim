Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 157 (-95) rows, 81 (-46) columns and 392 (-232) elements
Clp0000I Optimal - objective value 14706045
Coin0511I After Postsolve, objective 14706045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14706044.9 - 68 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 157 rows, 81 columns (80 integer (80 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.182%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 14.94
Cbc0038I Pass   1: suminf.    0.12698 (4) obj. -5.44879e+06 iterations 26
Cbc0038I Pass   2: suminf.    0.12698 (4) obj. -5.44879e+06 iterations 1
Cbc0038I Solution found of -4.0987e+06
Cbc0038I Relaxing continuous gives -4.0987e+06
Cbc0038I Rounding solution of -5.49306e+06 is better than previous of -4.0987e+06

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 157 rows 81 columns, reduced to 85 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.49306e+06 to -1.38134e+07 (0.02 seconds)
Cbc0038I Round again with cutoff of -1.39026e+07
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    8.76153 (39) obj. -1.39026e+07 iterations 21
Cbc0038I Pass   4: suminf.    4.68439 (38) obj. -1.39026e+07 iterations 2
Cbc0038I Pass   5: suminf.    0.12927 (4) obj. -1.39026e+07 iterations 40
Cbc0038I Pass   6: suminf.    1.50868 (5) obj. -1.39026e+07 iterations 12
Cbc0038I Pass   7: suminf.    0.12927 (4) obj. -1.39026e+07 iterations 12
Cbc0038I Pass   8: suminf.    0.50095 (4) obj. -1.39026e+07 iterations 17
Cbc0038I Pass   9: suminf.    1.87661 (11) obj. -1.39026e+07 iterations 18
Cbc0038I Pass  10: suminf.    1.82337 (5) obj. -1.39026e+07 iterations 15
Cbc0038I Pass  11: suminf.    1.90573 (4) obj. -1.39026e+07 iterations 9
Cbc0038I Pass  12: suminf.    3.16971 (8) obj. -1.39026e+07 iterations 21
Cbc0038I Pass  13: suminf.    2.40455 (26) obj. -1.39026e+07 iterations 12
Cbc0038I Pass  14: suminf.    2.03324 (5) obj. -1.39026e+07 iterations 5
Cbc0038I Pass  15: suminf.    0.54165 (5) obj. -1.39026e+07 iterations 13
Cbc0038I Pass  16: suminf.    0.12927 (4) obj. -1.39026e+07 iterations 29
Cbc0038I Pass  17: suminf.    0.53202 (5) obj. -1.39026e+07 iterations 9
Cbc0038I Pass  18: suminf.    0.55443 (12) obj. -1.39026e+07 iterations 19
Cbc0038I Pass  19: suminf.    0.56325 (13) obj. -1.39026e+07 iterations 9
Cbc0038I Pass  20: suminf.    0.12927 (4) obj. -1.39026e+07 iterations 18
Cbc0038I Pass  21: suminf.    0.53202 (5) obj. -1.39026e+07 iterations 7
Cbc0038I Pass  22: suminf.    0.40394 (6) obj. -1.39026e+07 iterations 18
Cbc0038I Pass  23: suminf.    0.47244 (5) obj. -1.39026e+07 iterations 17
Cbc0038I Pass  24: suminf.    0.40141 (5) obj. -1.39026e+07 iterations 24
Cbc0038I Pass  25: suminf.    0.12927 (4) obj. -1.39026e+07 iterations 10
Cbc0038I Pass  26: suminf.    0.53202 (5) obj. -1.39026e+07 iterations 9
Cbc0038I Pass  27: suminf.    0.56405 (4) obj. -1.39026e+07 iterations 20
Cbc0038I Pass  28: suminf.    0.59217 (12) obj. -1.39026e+07 iterations 2
Cbc0038I Pass  29: suminf.    2.26233 (10) obj. -1.39026e+07 iterations 11
Cbc0038I Pass  30: suminf.    0.62034 (3) obj. -1.39026e+07 iterations 16
Cbc0038I Pass  31: suminf.    0.12927 (4) obj. -1.39026e+07 iterations 14
Cbc0038I Pass  32: suminf.    0.53202 (5) obj. -1.39026e+07 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 157 rows 81 columns, reduced to 103 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1.38134e+07 - took 0.03 seconds
Cbc0012I Integer solution of -13813375 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 157 rows 81 columns, reduced to 85 rows 44 columns
Cbc0031I 2 added rows had average density of 53
Cbc0013I At root node, 2 cuts changed objective from -14706045 to -13975058 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 173 row cuts average 3.4 elements, 8 column cuts (8 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 29 row cuts average 53.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13813375, took 124 iterations and 2 nodes (0.09 seconds)
Cbc0032I Strong branching done 14 times (22 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

