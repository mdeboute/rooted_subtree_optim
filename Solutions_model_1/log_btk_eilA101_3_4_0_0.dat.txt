Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 177 (-28) rows, 93 (-10) columns and 533 (-70) elements
Clp1000I sum of infeasibilities 2.46416e-05 - average 1.39218e-07, 19 fixed columns
Coin0506I Presolve 134 (-43) rows, 71 (-22) columns and 403 (-130) elements
Clp0029I End of values pass after 71 iterations
Clp0000I Optimal - objective value 158.92957
Clp0000I Optimal - objective value 158.92957
Coin0511I After Postsolve, objective 158.92957, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 158.92957
Clp0000I Optimal - objective value 158.92957
Clp0000I Optimal - objective value 158.92957
Coin0511I After Postsolve, objective 158.92957, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 158.92957 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 177 rows, 93 columns (92 integer (92 of which binary)) and 533 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.006%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 10.5503
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.0264 iterations 40
Cbc0038I Solution found of -21.0264
Cbc0038I Relaxing continuous gives -21.0264
Cbc0038I Rounding solution of -37.2118 is better than previous of -21.0264

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 93 columns, reduced to 64 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -37.2118 to -108.118 (0.06 seconds)
Cbc0038I Round again with cutoff of -113.199
Cbc0038I Pass   2: suminf.    4.33206 (14) obj. -113.199 iterations 20
Cbc0038I Pass   3: suminf.    3.06859 (7) obj. -113.199 iterations 7
Cbc0038I Pass   4: suminf.    1.20971 (5) obj. -113.199 iterations 18
Cbc0038I Pass   5: suminf.    1.20971 (5) obj. -113.199 iterations 0
Cbc0038I Pass   6: suminf.    2.03506 (7) obj. -113.199 iterations 10
Cbc0038I Pass   7: suminf.    1.59600 (5) obj. -113.199 iterations 3
Cbc0038I Pass   8: suminf.    1.43657 (6) obj. -113.199 iterations 8
Cbc0038I Pass   9: suminf.    1.59600 (5) obj. -113.199 iterations 12
Cbc0038I Pass  10: suminf.    2.96679 (16) obj. -113.199 iterations 24
Cbc0038I Pass  11: suminf.    1.56905 (9) obj. -113.199 iterations 15
Cbc0038I Pass  12: suminf.    1.49852 (8) obj. -113.199 iterations 2
Cbc0038I Pass  13: suminf.    1.39943 (7) obj. -113.199 iterations 14
Cbc0038I Pass  14: suminf.    1.14515 (5) obj. -113.199 iterations 8
Cbc0038I Pass  15: suminf.    2.03506 (7) obj. -113.199 iterations 9
Cbc0038I Pass  16: suminf.    1.59600 (5) obj. -113.199 iterations 3
Cbc0038I Pass  17: suminf.    1.43657 (6) obj. -113.199 iterations 8
Cbc0038I Pass  18: suminf.    1.59600 (5) obj. -113.199 iterations 10
Cbc0038I Pass  19: suminf.    4.62175 (14) obj. -113.199 iterations 27
Cbc0038I Pass  20: suminf.    2.93109 (12) obj. -113.199 iterations 18
Cbc0038I Pass  21: suminf.    2.93109 (12) obj. -113.199 iterations 0
Cbc0038I Pass  22: suminf.    2.38675 (9) obj. -113.199 iterations 20
Cbc0038I Pass  23: suminf.    1.74300 (8) obj. -113.199 iterations 6
Cbc0038I Pass  24: suminf.    1.62420 (7) obj. -113.199 iterations 3
Cbc0038I Pass  25: suminf.    2.21445 (10) obj. -113.199 iterations 12
Cbc0038I Pass  26: suminf.    0.81356 (9) obj. -113.199 iterations 6
Cbc0038I Pass  27: suminf.    0.57879 (4) obj. -113.199 iterations 10
Cbc0038I Pass  28: suminf.    1.86091 (9) obj. -113.199 iterations 13
Cbc0038I Pass  29: suminf.    6.52997 (19) obj. -113.199 iterations 28
Cbc0038I Pass  30: suminf.    3.93100 (14) obj. -113.199 iterations 14
Cbc0038I Pass  31: suminf.    3.77732 (14) obj. -113.199 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 93 columns, reduced to 87 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -108.118 to -108.693 (0.14 seconds)
Cbc0038I Round again with cutoff of -122.345
Cbc0038I Pass  31: suminf.    4.88534 (14) obj. -122.345 iterations 3
Cbc0038I Pass  32: suminf.    3.54105 (11) obj. -122.345 iterations 12
Cbc0038I Pass  33: suminf.    2.15159 (8) obj. -122.345 iterations 17
Cbc0038I Pass  34: suminf.    1.67958 (8) obj. -122.345 iterations 6
Cbc0038I Pass  35: suminf.    3.00931 (8) obj. -122.345 iterations 18
Cbc0038I Pass  36: suminf.    1.93230 (7) obj. -122.345 iterations 7
Cbc0038I Pass  37: suminf.    1.96790 (6) obj. -122.345 iterations 15
Cbc0038I Pass  38: suminf.    3.99561 (14) obj. -122.345 iterations 27
Cbc0038I Pass  39: suminf.    3.17688 (13) obj. -122.345 iterations 12
Cbc0038I Pass  40: suminf.    3.18222 (14) obj. -122.345 iterations 2
Cbc0038I Pass  41: suminf.    2.08269 (8) obj. -122.345 iterations 26
Cbc0038I Pass  42: suminf.    2.00856 (7) obj. -122.345 iterations 1
Cbc0038I Pass  43: suminf.    1.14616 (7) obj. -122.345 iterations 19
Cbc0038I Pass  44: suminf.    1.13694 (9) obj. -122.345 iterations 5
Cbc0038I Pass  45: suminf.    2.15636 (7) obj. -122.345 iterations 26
Cbc0038I Pass  46: suminf.    2.03045 (8) obj. -122.345 iterations 7
Cbc0038I Pass  47: suminf.    3.40722 (10) obj. -122.345 iterations 24
Cbc0038I Pass  48: suminf.    2.86074 (8) obj. -122.345 iterations 7
Cbc0038I Pass  49: suminf.    2.37261 (9) obj. -122.345 iterations 15
Cbc0038I Pass  50: suminf.    1.91717 (9) obj. -122.345 iterations 7
Cbc0038I Pass  51: suminf.    1.88956 (6) obj. -122.345 iterations 15
Cbc0038I Pass  52: suminf.    1.56770 (7) obj. -122.345 iterations 6
Cbc0038I Pass  53: suminf.    3.40722 (10) obj. -122.345 iterations 20
Cbc0038I Pass  54: suminf.    2.86074 (8) obj. -122.345 iterations 7
Cbc0038I Pass  55: suminf.    2.37261 (9) obj. -122.345 iterations 15
Cbc0038I Pass  56: suminf.    1.91717 (9) obj. -122.345 iterations 7
Cbc0038I Pass  57: suminf.    1.88956 (6) obj. -122.345 iterations 14
Cbc0038I Pass  58: suminf.    1.56770 (7) obj. -122.345 iterations 6
Cbc0038I Pass  59: suminf.    3.40722 (10) obj. -122.345 iterations 18
Cbc0038I Pass  60: suminf.    2.86074 (8) obj. -122.345 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 93 columns, reduced to 79 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -108.693 - took 0.17 seconds
Cbc0012I Integer solution of -108.69339 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 177 rows 93 columns, reduced to 66 rows 37 columns
Cbc0031I 17 added rows had average density of 65.647059
Cbc0013I At root node, 17 cuts changed objective from -158.92957 to -138.07805 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6709 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1070 row cuts average 89.7 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -108.69339 best solution, best possible -138.07805 (0.78 seconds)
Cbc0012I Integer solution of -108.95809 found by DiveCoefficient after 5553 iterations and 16 nodes (0.89 seconds)
Cbc0001I Search completed - best objective -108.958088, took 6247 iterations and 26 nodes (0.94 seconds)
Cbc0032I Strong branching done 424 times (7008 iterations), fathomed 5 nodes and fixed 23 variables
Cbc0035I Maximum depth 9, 221 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.95

