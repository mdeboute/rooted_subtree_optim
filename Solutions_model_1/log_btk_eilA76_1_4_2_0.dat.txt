Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 3.96937e-06 - average 2.96221e-08, 11 fixed columns
Coin0506I Presolve 113 (-21) rows, 65 (-11) columns and 348 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Coin0511I After Postsolve, objective 37.128971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Coin0511I After Postsolve, objective 37.128971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.12897073 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.79942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.76173 iterations 42
Cbc0038I Solution found of 6.76173
Cbc0038I Relaxing continuous gives 6.76173
Cbc0038I Rounding solution of -3.30853 is better than previous of 6.76173

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.30853 to -9.57993 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.2865
Cbc0038I Pass   2: suminf.    1.82309 (17) obj. -12.2865 iterations 20
Cbc0038I Pass   3: suminf.    1.49248 (31) obj. -12.2865 iterations 20
Cbc0038I Pass   4: suminf.    1.15671 (6) obj. -12.2865 iterations 39
Cbc0038I Pass   5: suminf.    0.79665 (5) obj. -12.2865 iterations 5
Cbc0038I Pass   6: suminf.    2.23371 (8) obj. -12.2865 iterations 14
Cbc0038I Pass   7: suminf.    1.72559 (6) obj. -12.2865 iterations 8
Cbc0038I Pass   8: suminf.    1.01969 (5) obj. -12.2865 iterations 3
Cbc0038I Pass   9: suminf.    1.96821 (8) obj. -12.2865 iterations 13
Cbc0038I Pass  10: suminf.    1.25762 (4) obj. -12.2865 iterations 15
Cbc0038I Pass  11: suminf.    1.11644 (3) obj. -12.2865 iterations 4
Cbc0038I Pass  12: suminf.    1.18573 (3) obj. -12.2865 iterations 3
Cbc0038I Pass  13: suminf.    1.18573 (3) obj. -12.2865 iterations 1
Cbc0038I Pass  14: suminf.    1.11644 (3) obj. -12.2865 iterations 3
Cbc0038I Pass  15: suminf.    1.44603 (5) obj. -12.2865 iterations 14
Cbc0038I Pass  16: suminf.    1.30172 (6) obj. -12.2865 iterations 5
Cbc0038I Pass  17: suminf.    1.56168 (5) obj. -12.2865 iterations 14
Cbc0038I Pass  18: suminf.    1.18426 (5) obj. -12.2865 iterations 4
Cbc0038I Pass  19: suminf.    1.90920 (5) obj. -12.2865 iterations 8
Cbc0038I Pass  20: suminf.    0.95159 (5) obj. -12.2865 iterations 4
Cbc0038I Pass  21: suminf.    0.95159 (5) obj. -12.2865 iterations 1
Cbc0038I Pass  22: suminf.    1.93014 (7) obj. -12.2865 iterations 11
Cbc0038I Pass  23: suminf.    1.81977 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  24: suminf.    1.81977 (5) obj. -12.2865 iterations 0
Cbc0038I Pass  25: suminf.    1.39083 (5) obj. -12.2865 iterations 7
Cbc0038I Pass  26: suminf.    0.95159 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  27: suminf.    0.95159 (5) obj. -12.2865 iterations 1
Cbc0038I Pass  28: suminf.    1.93014 (7) obj. -12.2865 iterations 11
Cbc0038I Pass  29: suminf.    1.81977 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  30: suminf.    1.81977 (5) obj. -12.2865 iterations 0
Cbc0038I Pass  31: suminf.    1.39083 (5) obj. -12.2865 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -9.57993 to -10.773 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.1581
Cbc0038I Pass  31: suminf.    2.90654 (17) obj. -17.1581 iterations 0
Cbc0038I Pass  32: suminf.    2.40419 (8) obj. -17.1581 iterations 20
Cbc0038I Pass  33: suminf.    1.69561 (7) obj. -17.1581 iterations 2
Cbc0038I Pass  34: suminf.    1.66179 (5) obj. -17.1581 iterations 4
Cbc0038I Pass  35: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  36: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  37: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  38: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  39: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  40: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  41: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  42: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  43: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  44: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  45: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  46: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  47: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  48: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  49: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  50: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  51: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  52: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  53: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  54: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  55: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  56: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  57: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  58: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  59: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  60: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -10.773 - took 0.12 seconds
Cbc0012I Integer solution of -10.77301 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 73 rows 42 columns
Cbc0031I 23 added rows had average density of 63.521739
Cbc0013I At root node, 23 cuts changed objective from -36.644718 to -30.374311 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10788 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1291 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.77301 best solution, best possible -30.374311 (0.76 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 16 rows 13 columns
Cbc0012I Integer solution of -11.62638 found by RINS after 6929 iterations and 42 nodes (0.97 seconds)
Cbc0001I Search completed - best objective -11.62638, took 7818 iterations and 70 nodes (1.01 seconds)
Cbc0032I Strong branching done 810 times (15430 iterations), fathomed 3 nodes and fixed 45 variables
Cbc0035I Maximum depth 23, 105 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.02

