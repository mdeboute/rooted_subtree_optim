Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 262 (-2) columns and 1506 (-39) elements
Clp1000I sum of infeasibilities 1.52901e-05 - average 3.01579e-08, 114 fixed columns
Coin0506I Presolve 282 (-225) rows, 148 (-114) columns and 839 (-667) elements
Clp0029I End of values pass after 148 iterations
Clp0014I Perturbing problem by 0.001% of 0.1638099 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 179.09242
Clp0000I Optimal - objective value 179.09242
Coin0511I After Postsolve, objective 179.09242, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13596996 - largest nonzero change 0 ( 0%) - largest zero change 2.9658749e-05
Clp0000I Optimal - objective value 179.09242
Clp0000I Optimal - objective value 179.09242
Clp0000I Optimal - objective value 179.09242
Coin0511I After Postsolve, objective 179.09242, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 179.0924238 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 262 columns (261 integer (261 of which binary)) and 1506 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 72 integers unsatisfied sum - 11.9786
Cbc0038I Solution found of 8.8139
Cbc0038I Relaxing continuous gives -7.43455
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 137 rows 73 columns
Cbc0038I Mini branch and bound improved solution from -7.43455 to -111.339 (0.07 seconds)
Cbc0038I Round again with cutoff of -118.115
Cbc0038I Pass   1: suminf.    5.77289 (51) obj. -118.115 iterations 181
Cbc0038I Pass   2: suminf.    2.64683 (9) obj. -118.115 iterations 79
Cbc0038I Pass   3: suminf.    1.39607 (5) obj. -118.115 iterations 12
Cbc0038I Pass   4: suminf.    1.22777 (6) obj. -118.115 iterations 5
Cbc0038I Pass   5: suminf.    1.84868 (8) obj. -118.115 iterations 26
Cbc0038I Pass   6: suminf.    1.45858 (4) obj. -118.115 iterations 11
Cbc0038I Pass   7: suminf.    1.08466 (4) obj. -118.115 iterations 4
Cbc0038I Pass   8: suminf.    1.94953 (10) obj. -118.115 iterations 24
Cbc0038I Pass   9: suminf.    1.82059 (6) obj. -118.115 iterations 3
Cbc0038I Pass  10: suminf.    2.10508 (8) obj. -118.115 iterations 23
Cbc0038I Pass  11: suminf.    1.19576 (7) obj. -118.115 iterations 19
Cbc0038I Pass  12: suminf.    1.16977 (9) obj. -118.115 iterations 1
Cbc0038I Pass  13: suminf.    2.14407 (9) obj. -118.115 iterations 24
Cbc0038I Pass  14: suminf.    1.66137 (7) obj. -118.115 iterations 10
Cbc0038I Pass  15: suminf.    1.66137 (7) obj. -118.115 iterations 0
Cbc0038I Pass  16: suminf.    2.57852 (9) obj. -118.115 iterations 21
Cbc0038I Pass  17: suminf.    2.43604 (7) obj. -118.115 iterations 2
Cbc0038I Pass  18: suminf.    1.65198 (7) obj. -118.115 iterations 11
Cbc0038I Pass  19: suminf.    1.98537 (6) obj. -118.115 iterations 12
Cbc0038I Pass  20: suminf.    1.53504 (8) obj. -118.115 iterations 10
Cbc0038I Pass  21: suminf.    2.50652 (9) obj. -118.115 iterations 15
Cbc0038I Pass  22: suminf.    2.11839 (10) obj. -118.115 iterations 10
Cbc0038I Pass  23: suminf.    3.35218 (9) obj. -118.115 iterations 18
Cbc0038I Pass  24: suminf.    2.90401 (9) obj. -118.115 iterations 4
Cbc0038I Pass  25: suminf.    2.90401 (9) obj. -118.115 iterations 0
Cbc0038I Pass  26: suminf.    3.08731 (9) obj. -118.115 iterations 10
Cbc0038I Pass  27: suminf.    2.43604 (7) obj. -118.115 iterations 13
Cbc0038I Pass  28: suminf.    1.65198 (7) obj. -118.115 iterations 11
Cbc0038I Pass  29: suminf.    1.98537 (6) obj. -118.115 iterations 12
Cbc0038I Pass  30: suminf.    1.53504 (8) obj. -118.115 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 175 rows 93 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -111.339 - took 0.14 seconds
Cbc0012I Integer solution of -111.33944 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 137 rows 73 columns
Cbc0012I Integer solution of -114.68144 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 52 added rows had average density of 97
Cbc0013I At root node, 52 cuts changed objective from -179.09242 to -166.48991 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 48990 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.600 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3280 row cuts average 258.3 elements, 0 column cuts (0 active)  in 0.609 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 252.5 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -114.68144 best solution, best possible -166.48991 (6.61 seconds)
Cbc0010I After 6 nodes, 7 on tree, -114.68144 best solution, best possible -166.48991 (7.40 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 118 rows 66 columns
Cbc0012I Integer solution of -116.10124 found by RINS after 24265 iterations and 42 nodes (8.05 seconds)
Cbc0010I After 48 nodes, 10 on tree, -116.10124 best solution, best possible -166.48991 (8.10 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 106 rows 59 columns
Cbc0012I Integer solution of -116.90745 found by rounding after 29924 iterations and 174 nodes (8.79 seconds)
Cbc0010I After 176 nodes, 16 on tree, -116.90745 best solution, best possible -166.48991 (8.80 seconds)
Cbc0001I Search completed - best objective -116.90745, took 33239 iterations and 240 nodes (9.05 seconds)
Cbc0032I Strong branching done 2334 times (66682 iterations), fathomed 17 nodes and fixed 66 variables
Cbc0035I Maximum depth 54, 909 variables fixed on reduced cost
Total time (CPU seconds):       8.75   (Wallclock seconds):       9.12

