Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 57 (-21) columns and 308 (-145) elements
Clp1000I sum of infeasibilities 1.75459e-05 - average 1.73722e-07, 13 fixed columns
Coin0506I Presolve 65 (-36) rows, 38 (-19) columns and 199 (-109) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 0.40295776 - largest nonzero change 0 ( 0%) - largest zero change 1.6400216e-05
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Coin0511I After Postsolve, objective 309.64472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Clp0000I Optimal - objective value 309.64472
Coin0511I After Postsolve, objective 309.64472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 309.6447173 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 57 columns (56 integer (56 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.937%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 4.60265
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -56.5395 iterations 20
Cbc0038I Solution found of -56.5395
Cbc0038I Relaxing continuous gives -56.5395
Cbc0038I Rounding solution of -135.827 is better than previous of -56.5395

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -135.827 to -272.634 (0.02 seconds)
Cbc0038I Round again with cutoff of -276.335
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54033 (6) obj. -276.335 iterations 13
Cbc0038I Pass   3: suminf.    0.50472 (4) obj. -276.335 iterations 6
Cbc0038I Pass   4: suminf.    0.70631 (3) obj. -276.335 iterations 11
Cbc0038I Pass   5: suminf.    0.69219 (4) obj. -276.335 iterations 2
Cbc0038I Pass   6: suminf.    2.02815 (5) obj. -276.335 iterations 7
Cbc0038I Pass   7: suminf.    0.71926 (5) obj. -276.335 iterations 7
Cbc0038I Pass   8: suminf.    0.51384 (4) obj. -276.335 iterations 4
Cbc0038I Pass   9: suminf.    0.79245 (2) obj. -281.28 iterations 13
Cbc0038I Pass  10: suminf.    0.69674 (3) obj. -276.335 iterations 4
Cbc0038I Pass  11: suminf.    0.79542 (3) obj. -282.029 iterations 4
Cbc0038I Pass  12: suminf.    1.58396 (4) obj. -276.335 iterations 19
Cbc0038I Pass  13: suminf.    1.41468 (7) obj. -276.335 iterations 10
Cbc0038I Pass  14: suminf.    1.26302 (8) obj. -276.335 iterations 2
Cbc0038I Pass  15: suminf.    2.72792 (9) obj. -276.335 iterations 8
Cbc0038I Pass  16: suminf.    2.06727 (6) obj. -276.335 iterations 9
Cbc0038I Pass  17: suminf.    2.03445 (8) obj. -276.335 iterations 2
Cbc0038I Pass  18: suminf.    1.95611 (7) obj. -276.335 iterations 2
Cbc0038I Pass  19: suminf.    1.52032 (6) obj. -276.335 iterations 10
Cbc0038I Pass  20: suminf.    1.52032 (6) obj. -276.335 iterations 4
Cbc0038I Pass  21: suminf.    2.53639 (6) obj. -276.335 iterations 11
Cbc0038I Pass  22: suminf.    1.90047 (6) obj. -276.335 iterations 1
Cbc0038I Pass  23: suminf.    1.84694 (5) obj. -276.335 iterations 5
Cbc0038I Pass  24: suminf.    1.84694 (5) obj. -276.335 iterations 0
Cbc0038I Pass  25: suminf.    1.52032 (6) obj. -276.335 iterations 8
Cbc0038I Pass  26: suminf.    1.52032 (6) obj. -276.335 iterations 4
Cbc0038I Pass  27: suminf.    2.53639 (6) obj. -276.335 iterations 11
Cbc0038I Pass  28: suminf.    1.90047 (6) obj. -276.335 iterations 1
Cbc0038I Pass  29: suminf.    1.84694 (5) obj. -276.335 iterations 5
Cbc0038I Pass  30: suminf.    1.84694 (5) obj. -276.335 iterations 0
Cbc0038I Pass  31: suminf.    1.52032 (6) obj. -276.335 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 47 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -272.634 to -275.482 (0.06 seconds)
Cbc0038I Round again with cutoff of -282.997
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.24762 (6) obj. -282.997 iterations 0
Cbc0038I Pass  32: suminf.    1.12656 (4) obj. -282.997 iterations 6
Cbc0038I Pass  33: suminf.    1.40366 (5) obj. -282.997 iterations 11
Cbc0038I Pass  34: suminf.    1.22177 (4) obj. -282.997 iterations 2
Cbc0038I Pass  35: suminf.    1.65400 (7) obj. -282.997 iterations 14
Cbc0038I Pass  36: suminf.    1.45704 (5) obj. -282.997 iterations 8
Cbc0038I Pass  37: suminf.    2.36542 (5) obj. -282.997 iterations 7
Cbc0038I Pass  38: suminf.    1.55284 (7) obj. -282.997 iterations 5
Cbc0038I Pass  39: suminf.    2.53296 (10) obj. -282.997 iterations 15
Cbc0038I Pass  40: suminf.    1.84611 (10) obj. -282.997 iterations 5
Cbc0038I Pass  41: suminf.    1.84611 (10) obj. -282.997 iterations 0
Cbc0038I Pass  42: suminf.    2.29055 (6) obj. -282.997 iterations 18
Cbc0038I Pass  43: suminf.    1.75905 (6) obj. -282.997 iterations 7
Cbc0038I Pass  44: suminf.    1.70603 (5) obj. -282.997 iterations 6
Cbc0038I Pass  45: suminf.    1.70603 (5) obj. -282.997 iterations 2
Cbc0038I Pass  46: suminf.    1.37679 (6) obj. -282.997 iterations 7
Cbc0038I Pass  47: suminf.    1.18937 (6) obj. -282.997 iterations 4
Cbc0038I Pass  48: suminf.    2.53517 (7) obj. -282.997 iterations 16
Cbc0038I Pass  49: suminf.    2.34410 (7) obj. -282.997 iterations 6
Cbc0038I Pass  50: suminf.    1.64281 (7) obj. -282.997 iterations 3
Cbc0038I Pass  51: suminf.    1.54701 (9) obj. -282.997 iterations 2
Cbc0038I Pass  52: suminf.    1.91491 (6) obj. -282.997 iterations 16
Cbc0038I Pass  53: suminf.    1.18937 (6) obj. -282.997 iterations 9
Cbc0038I Pass  54: suminf.    2.53517 (7) obj. -282.997 iterations 15
Cbc0038I Pass  55: suminf.    2.34410 (7) obj. -282.997 iterations 5
Cbc0038I Pass  56: suminf.    1.64281 (7) obj. -282.997 iterations 3
Cbc0038I Pass  57: suminf.    1.54701 (9) obj. -282.997 iterations 2
Cbc0038I Pass  58: suminf.    1.91491 (6) obj. -282.997 iterations 16
Cbc0038I Pass  59: suminf.    1.18937 (6) obj. -282.997 iterations 9
Cbc0038I Pass  60: suminf.    2.53517 (7) obj. -282.997 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 57 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -275.482 - took 0.07 seconds
Cbc0012I Integer solution of -275.4819 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 101 rows 57 columns, reduced to 43 rows 26 columns
Cbc0031I 18 added rows had average density of 7.4444444
Cbc0013I At root node, 18 cuts changed objective from -309.64472 to -292.98654 in 56 passes
Cbc0014I Cut generator 0 (Probing) - 1334 row cuts average 4.9 elements, 6 column cuts (6 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0038I Full problem 101 rows 57 columns, reduced to 3 rows 6 columns
Cbc0038I Full problem 119 rows 57 columns, reduced to 65 rows 38 columns
Cbc0044I Reduced cost fixing - 65 rows, 38 columns - restarting search
Cbc0012I Integer solution of -275.4819 found by Previous solution after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 65 rows 38 columns, reduced to 43 rows 26 columns
Cbc0031I 10 added rows had average density of 29
Cbc0013I At root node, 10 cuts changed objective from -309.64472 to -291.13272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 542 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 36 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.759 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 252 row cuts average 7.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -275.4819 best solution, best possible -291.11877 (1.87 seconds)
Cbc0012I Integer solution of -275.482 found by DiveCoefficient after 2728 iterations and 23 nodes (1.92 seconds)
Cbc0001I Search completed - best objective -275.482, took 2842 iterations and 26 nodes (1.93 seconds)
Cbc0032I Strong branching done 198 times (1405 iterations), fathomed 2 nodes and fixed 16 variables
Cbc0035I Maximum depth 5, 41 variables fixed on reduced cost
Cbc0038I Probing was tried 175 times and created 1087 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I Gomory was tried 168 times and created 573 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Cbc0038I Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Cbc0038I Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I MixedIntegerRounding2 was tried 100 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I TwoMirCuts was tried 168 times and created 161 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.759 seconds)
Cbc0038I Stored from first was tried 168 times and created 292 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -275.482 found by Reduced search after 4481 iterations and 76 nodes (1.94 seconds)
Cbc0001I Search completed - best objective -275.482, took 4481 iterations and 76 nodes (1.94 seconds)
Cbc0032I Strong branching done 356 times (3182 iterations), fathomed 11 nodes and fixed 12 variables
Cbc0035I Maximum depth 10, 83 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.94

