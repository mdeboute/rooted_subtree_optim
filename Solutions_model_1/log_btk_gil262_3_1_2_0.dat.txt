Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 502 (-25) rows, 262 (-2) columns and 1496 (-49) elements
Clp1000I sum of infeasibilities 0.000191281 - average 3.81038e-07, 148 fixed columns
Coin0506I Presolve 210 (-292) rows, 114 (-148) columns and 624 (-872) elements
Clp0029I End of values pass after 114 iterations
Clp0014I Perturbing problem by 0.001% of 0.18026174 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 191.72966
Clp0000I Optimal - objective value 191.72966
Coin0511I After Postsolve, objective 191.72966, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13509544 - largest nonzero change 0 ( 0%) - largest zero change 2.9773404e-05
Clp0000I Optimal - objective value 191.72966
Clp0000I Optimal - objective value 191.72966
Clp0000I Optimal - objective value 191.72966
Coin0511I After Postsolve, objective 191.72966, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.7296614 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 502 rows, 262 columns (261 integer (261 of which binary)) and 1496 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 66 integers unsatisfied sum - 12.9786
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.68701 iterations 196
Cbc0038I Solution found of 1.68701
Cbc0038I Relaxing continuous gives 1.68701
Cbc0038I Rounding solution of -17.3836 is better than previous of 1.68701

Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 119 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -17.3836 to -123.83 (0.13 seconds)
Cbc0038I Round again with cutoff of -130.62
Cbc0038I Pass   2: suminf.    2.61161 (9) obj. -130.62 iterations 43
Cbc0038I Pass   3: suminf.    0.81097 (4) obj. -130.62 iterations 55
Cbc0038I Pass   4: suminf.    0.62938 (4) obj. -130.62 iterations 29
Cbc0038I Pass   5: suminf.    1.21838 (6) obj. -130.62 iterations 32
Cbc0038I Pass   6: suminf.    5.82571 (14) obj. -130.62 iterations 62
Cbc0038I Pass   7: suminf.    4.42856 (12) obj. -130.62 iterations 60
Cbc0038I Pass   8: suminf.    2.92440 (8) obj. -130.62 iterations 45
Cbc0038I Pass   9: suminf.    2.36938 (8) obj. -130.62 iterations 9
Cbc0038I Pass  10: suminf.    3.95199 (10) obj. -130.62 iterations 38
Cbc0038I Pass  11: suminf.    2.38309 (11) obj. -130.62 iterations 22
Cbc0038I Pass  12: suminf.    2.18849 (8) obj. -130.62 iterations 21
Cbc0038I Pass  13: suminf.    2.80334 (11) obj. -130.62 iterations 50
Cbc0038I Pass  14: suminf.    2.20181 (9) obj. -130.62 iterations 39
Cbc0038I Pass  15: suminf.    5.50287 (18) obj. -130.62 iterations 69
Cbc0038I Pass  16: suminf.    3.63954 (13) obj. -130.62 iterations 52
Cbc0038I Pass  17: suminf.    3.63954 (13) obj. -130.62 iterations 2
Cbc0038I Pass  18: suminf.    2.20590 (6) obj. -130.62 iterations 66
Cbc0038I Pass  19: suminf.    1.23560 (7) obj. -130.62 iterations 20
Cbc0038I Pass  20: suminf.    1.23560 (7) obj. -130.62 iterations 2
Cbc0038I Pass  21: suminf.    1.57029 (6) obj. -130.62 iterations 36
Cbc0038I Pass  22: suminf.    1.12542 (5) obj. -130.62 iterations 5
Cbc0038I Pass  23: suminf.    0.93522 (4) obj. -130.62 iterations 17
Cbc0038I Pass  24: suminf.    1.08566 (4) obj. -130.62 iterations 28
Cbc0038I Pass  25: suminf.    0.79137 (4) obj. -130.62 iterations 18
Cbc0038I Pass  26: suminf.    1.22101 (7) obj. -130.62 iterations 28
Cbc0038I Pass  27: suminf.    0.95585 (5) obj. -130.62 iterations 22
Cbc0038I Pass  28: suminf.    1.90251 (6) obj. -130.62 iterations 17
Cbc0038I Pass  29: suminf.    0.94524 (6) obj. -130.62 iterations 25
Cbc0038I Pass  30: suminf.    0.94671 (9) obj. -130.62 iterations 10
Cbc0038I Pass  31: suminf.    2.81323 (8) obj. -130.62 iterations 45
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 176 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 153 rows 86 columns
Cbc0038I Mini branch and bound improved solution from -123.83 to -123.977 (0.32 seconds)
Cbc0038I Round again with cutoff of -142.842
Cbc0038I Pass  31: suminf.    3.07586 (11) obj. -142.842 iterations 5
Cbc0038I Pass  32: suminf.    2.46841 (12) obj. -142.842 iterations 41
Cbc0038I Pass  33: suminf.    4.40955 (14) obj. -142.842 iterations 82
Cbc0038I Pass  34: suminf.    4.32409 (14) obj. -142.842 iterations 14
Cbc0038I Pass  35: suminf.    6.07733 (14) obj. -142.842 iterations 61
Cbc0038I Pass  36: suminf.    5.08683 (18) obj. -142.842 iterations 20
Cbc0038I Pass  37: suminf.    5.00807 (18) obj. -142.842 iterations 3
Cbc0038I Pass  38: suminf.    4.66012 (18) obj. -142.842 iterations 38
Cbc0038I Pass  39: suminf.    3.43099 (13) obj. -142.842 iterations 28
Cbc0038I Pass  40: suminf.    3.42935 (15) obj. -142.842 iterations 9
Cbc0038I Pass  41: suminf.    5.58346 (14) obj. -142.842 iterations 60
Cbc0038I Pass  42: suminf.    3.39682 (15) obj. -142.842 iterations 29
Cbc0038I Pass  43: suminf.    3.37394 (13) obj. -142.842 iterations 2
Cbc0038I Pass  44: suminf.    5.44153 (14) obj. -142.842 iterations 39
Cbc0038I Pass  45: suminf.    3.82785 (17) obj. -142.842 iterations 47
Cbc0038I Pass  46: suminf.    3.82666 (17) obj. -142.842 iterations 14
Cbc0038I Pass  47: suminf.    5.22978 (15) obj. -142.842 iterations 42
Cbc0038I Pass  48: suminf.    4.30917 (14) obj. -142.842 iterations 41
Cbc0038I Pass  49: suminf.    4.13566 (14) obj. -142.842 iterations 14
Cbc0038I Pass  50: suminf.    5.42091 (14) obj. -142.842 iterations 33
Cbc0038I Pass  51: suminf.    4.24681 (13) obj. -142.842 iterations 34
Cbc0038I Pass  52: suminf.    4.23595 (12) obj. -142.842 iterations 7
Cbc0038I Pass  53: suminf.    4.26178 (12) obj. -142.842 iterations 52
Cbc0038I Pass  54: suminf.    3.32342 (11) obj. -142.842 iterations 27
Cbc0038I Pass  55: suminf.    3.05054 (12) obj. -142.842 iterations 20
Cbc0038I Pass  56: suminf.    2.92156 (14) obj. -142.842 iterations 15
Cbc0038I Pass  57: suminf.    4.10182 (12) obj. -142.842 iterations 54
Cbc0038I Pass  58: suminf.    3.95239 (14) obj. -142.842 iterations 23
Cbc0038I Pass  59: suminf.    3.66997 (13) obj. -142.842 iterations 39
Cbc0038I Pass  60: suminf.    3.55772 (13) obj. -142.842 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 139 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.59 seconds)
Cbc0038I After 0.59 seconds - Feasibility pump exiting with objective of -123.977 - took 0.55 seconds
Cbc0012I Integer solution of -123.97736 found by feasibility pump after 0 iterations and 0 nodes (0.59 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 124 rows 70 columns
Cbc0031I 39 added rows had average density of 108.94872
Cbc0013I At root node, 39 cuts changed objective from -191.72966 to -176.23776 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32295 row cuts average 3.4 elements, 1 column cuts (1 active)  in 1.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2876 row cuts average 257.6 elements, 0 column cuts (0 active)  in 0.865 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.825 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 252.0 elements, 0 column cuts (0 active)  in 0.373 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -123.97736 best solution, best possible -176.23776 (9.68 seconds)
Cbc0010I After 5 nodes, 6 on tree, -123.97736 best solution, best possible -176.23776 (10.59 seconds)
Cbc0010I After 16 nodes, 14 on tree, -123.97736 best solution, best possible -176.23776 (11.29 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 30 rows 22 columns
Cbc0012I Integer solution of -127.67111 found by RINS after 19859 iterations and 43 nodes (11.90 seconds)
Cbc0010I After 50 nodes, 15 on tree, -127.67111 best solution, best possible -176.23776 (12.01 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 6 rows 10 columns
Cbc0010I After 129 nodes, 38 on tree, -127.67111 best solution, best possible -176.23776 (12.71 seconds)
Cbc0012I Integer solution of -128.84874 found by rounding after 23757 iterations and 165 nodes (13.01 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 5 rows 5 columns
Cbc0010I After 233 nodes, 13 on tree, -128.84874 best solution, best possible -176.23776 (13.43 seconds)
Cbc0010I After 294 nodes, 8 on tree, -128.84874 best solution, best possible -176.23776 (14.13 seconds)
Cbc0001I Search completed - best objective -128.848741, took 29474 iterations and 332 nodes (14.53 seconds)
Cbc0032I Strong branching done 2522 times (59055 iterations), fathomed 55 nodes and fixed 201 variables
Cbc0035I Maximum depth 62, 2518 variables fixed on reduced cost
Total time (CPU seconds):       13.86   (Wallclock seconds):       14.63

