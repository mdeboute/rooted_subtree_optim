Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 21 (-4) columns and 110 (-25) elements
Clp1000I sum of infeasibilities 1.13888e-05 - average 2.99705e-07, 1 fixed columns
Coin0506I Presolve 30 (-8) rows, 19 (-2) columns and 90 (-20) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 225.83756
Clp0000I Optimal - objective value 225.83756
Coin0511I After Postsolve, objective 225.83756, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 225.83756
Clp0000I Optimal - objective value 225.83756
Clp0000I Optimal - objective value 225.83756
Coin0511I After Postsolve, objective 225.83756, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 225.8375588 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.987%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.39726
Cbc0038I Pass   1: suminf.    0.70553 (2) obj. -125.874 iterations 20
Cbc0038I Pass   2: suminf.    0.25429 (1) obj. -122.943 iterations 2
Cbc0038I Solution found of -109.767
Cbc0038I Relaxing continuous gives -109.767
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -109.767 to -132.692 (0.02 seconds)
Cbc0038I Round again with cutoff of -141.605
Cbc0038I Pass   3: suminf.    0.72831 (7) obj. -141.605 iterations 5
Cbc0038I Pass   4: suminf.    0.38053 (8) obj. -141.605 iterations 5
Cbc0038I Pass   5: suminf.    0.99455 (6) obj. -141.605 iterations 13
Cbc0038I Pass   6: suminf.    0.94495 (5) obj. -141.605 iterations 1
Cbc0038I Pass   7: suminf.    0.14866 (3) obj. -141.605 iterations 3
Cbc0038I Pass   8: suminf.    1.00528 (6) obj. -141.605 iterations 6
Cbc0038I Pass   9: suminf.    0.38401 (4) obj. -141.605 iterations 3
Cbc0038I Pass  10: suminf.    1.22288 (5) obj. -141.605 iterations 6
Cbc0038I Pass  11: suminf.    1.12547 (5) obj. -141.605 iterations 1
Cbc0038I Pass  12: suminf.    1.62153 (6) obj. -141.605 iterations 7
Cbc0038I Pass  13: suminf.    1.12493 (5) obj. -141.605 iterations 7
Cbc0038I Pass  14: suminf.    1.35527 (6) obj. -141.605 iterations 4
Cbc0038I Pass  15: suminf.    1.22522 (5) obj. -141.605 iterations 2
Cbc0038I Pass  16: suminf.    1.30958 (5) obj. -141.605 iterations 6
Cbc0038I Pass  17: suminf.    1.11012 (7) obj. -141.605 iterations 4
Cbc0038I Pass  18: suminf.    0.93834 (5) obj. -141.605 iterations 2
Cbc0038I Pass  19: suminf.    1.69620 (6) obj. -141.605 iterations 6
Cbc0038I Pass  20: suminf.    1.09264 (5) obj. -141.605 iterations 3
Cbc0038I Pass  21: suminf.    1.35620 (5) obj. -141.605 iterations 5
Cbc0038I Pass  22: suminf.    1.20953 (4) obj. -141.605 iterations 2
Cbc0038I Pass  23: suminf.    1.59786 (5) obj. -141.605 iterations 3
Cbc0038I Pass  24: suminf.    1.33852 (4) obj. -141.605 iterations 2
Cbc0038I Pass  25: suminf.    0.90095 (4) obj. -141.605 iterations 1
Cbc0038I Pass  26: suminf.    1.83040 (6) obj. -141.605 iterations 5
Cbc0038I Pass  27: suminf.    1.20953 (4) obj. -141.605 iterations 4
Cbc0038I Pass  28: suminf.    1.59786 (5) obj. -141.605 iterations 3
Cbc0038I Pass  29: suminf.    1.33852 (4) obj. -141.605 iterations 2
Cbc0038I Pass  30: suminf.    0.90095 (4) obj. -141.605 iterations 1
Cbc0038I Pass  31: suminf.    1.83040 (6) obj. -141.605 iterations 5
Cbc0038I Pass  32: suminf.    1.20953 (4) obj. -141.605 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -132.692 - took 0.02 seconds
Cbc0012I Integer solution of -132.69173 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 8.4166667
Cbc0013I At root node, 12 cuts changed objective from -221.81958 to -151.08 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1267 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 563 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -132.6917299999999, took 1892 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 64 times (652 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

