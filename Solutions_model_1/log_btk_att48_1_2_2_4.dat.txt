Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 265 (-20) elements
Clp1000I sum of infeasibilities 1.02274e-06 - average 1.16221e-08, 11 fixed columns
Coin0506I Presolve 66 (-22) rows, 37 (-11) columns and 199 (-66) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Coin0511I After Postsolve, objective 2309.9277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5510224 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Coin0511I After Postsolve, objective 2309.9277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2309.927703 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 265 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 11.9252
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 440.369 iterations 37
Cbc0038I Solution found of 440.369
Cbc0038I Relaxing continuous gives 440.369
Cbc0038I Rounding solution of -30.7637 is better than previous of 440.369

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -30.7637 to -434.427 (0.04 seconds)
Cbc0038I Round again with cutoff of -621.977
Cbc0038I Pass   2: suminf.    1.51184 (9) obj. -621.977 iterations 8
Cbc0038I Pass   3: suminf.    1.50119 (8) obj. -621.977 iterations 1
Cbc0038I Pass   4: suminf.    1.34545 (4) obj. -621.977 iterations 11
Cbc0038I Pass   5: suminf.    1.83111 (6) obj. -621.977 iterations 5
Cbc0038I Pass   6: suminf.    1.79555 (5) obj. -621.977 iterations 1
Cbc0038I Pass   7: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass   8: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass   9: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  10: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  11: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  12: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  13: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  14: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  15: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  16: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  17: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  18: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  19: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  20: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  21: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  22: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  23: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  24: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  25: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  26: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  27: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  28: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  29: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  30: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  31: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -434.427 - took 0.05 seconds
Cbc0012I Integer solution of -434.4267 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0031I 23 added rows had average density of 25.26087
Cbc0013I At root node, 23 cuts changed objective from -2309.9277 to -1443.4119 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7146 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1821 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0010I After 9 nodes, 8 on tree, -434.4267 best solution, best possible -1443.4119 (0.68 seconds)
Cbc0001I Search completed - best objective -434.4267, took 7831 iterations and 20 nodes (0.69 seconds)
Cbc0032I Strong branching done 360 times (8265 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.70

