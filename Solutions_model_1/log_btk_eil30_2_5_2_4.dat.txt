Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-8) rows, 30 (-2) columns and 162 (-15) elements
Clp1000I sum of infeasibilities 0.000294934 - average 5.36244e-06, 6 fixed columns
Coin0506I Presolve 41 (-14) rows, 24 (-6) columns and 123 (-39) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Coin0511I After Postsolve, objective 80.621695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Coin0511I After Postsolve, objective 80.621695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.62169505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 164 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.19439
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.4442 iterations 24
Cbc0038I Solution found of 14.4442
Cbc0038I Relaxing continuous gives 14.4442
Cbc0038I Rounding solution of 13.0604 is better than previous of 14.4442

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 13.0604 to -29.9452 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.9733
Cbc0038I Pass   2: suminf.    1.09555 (5) obj. -34.9733 iterations 5
Cbc0038I Pass   3: suminf.    1.09555 (5) obj. -34.9733 iterations 0
Cbc0038I Pass   4: suminf.    1.19149 (4) obj. -34.9733 iterations 5
Cbc0038I Pass   5: suminf.    0.69107 (3) obj. -34.9733 iterations 2
Cbc0038I Pass   6: suminf.    1.13321 (5) obj. -34.9733 iterations 4
Cbc0038I Pass   7: suminf.    1.13321 (5) obj. -34.9733 iterations 0
Cbc0038I Pass   8: suminf.    1.44170 (4) obj. -34.9733 iterations 6
Cbc0038I Pass   9: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  10: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  11: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  12: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  13: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  14: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  15: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  16: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  17: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  18: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  19: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  20: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  21: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  22: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  23: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  24: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  25: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  26: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  27: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  28: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  29: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  30: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  31: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.9452 - took 0.03 seconds
Cbc0012I Integer solution of -29.945246 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0031I 18 added rows had average density of 16.5
Cbc0013I At root node, 18 cuts changed objective from -80.224506 to -40.800043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2068 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 938 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -29.945246, took 3397 iterations and 6 nodes (0.29 seconds)
Cbc0032I Strong branching done 120 times (2214 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.30

