Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.55169e-06 - average 1.1936e-08, 8 fixed columns
Coin0506I Presolve 115 (-15) rows, 68 (-8) columns and 358 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.3047144 - largest nonzero change 0 ( 0%) - largest zero change 1.9978266e-05
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Coin0511I After Postsolve, objective 57.538535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Coin0511I After Postsolve, objective 57.538535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.53853518 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.2126
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.65654 iterations 55
Cbc0038I Solution found of -1.65654
Cbc0038I Relaxing continuous gives -1.65654
Cbc0038I Rounding solution of -15.0983 is better than previous of -1.65654

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -15.0983 to -28.9869 (0.05 seconds)
Cbc0038I Round again with cutoff of -31.8422
Cbc0038I Pass   2: suminf.    2.83078 (11) obj. -31.8422 iterations 15
Cbc0038I Pass   3: suminf.    2.55010 (9) obj. -31.8422 iterations 2
Cbc0038I Pass   4: suminf.    1.96844 (6) obj. -31.8422 iterations 13
Cbc0038I Pass   5: suminf.    2.05303 (6) obj. -31.8422 iterations 7
Cbc0038I Pass   6: suminf.    2.00133 (5) obj. -31.8422 iterations 1
Cbc0038I Pass   7: suminf.    1.44971 (4) obj. -31.8422 iterations 6
Cbc0038I Pass   8: suminf.    1.41827 (5) obj. -31.8422 iterations 1
Cbc0038I Pass   9: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  10: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  11: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  12: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  13: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  14: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  15: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  16: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  17: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  18: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  19: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  20: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  21: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  22: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  23: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  24: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  25: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  26: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  27: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  28: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  29: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  30: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  31: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -28.9869 to -30.1235 (0.10 seconds)
Cbc0038I Round again with cutoff of -36.9814
Cbc0038I Pass  31: suminf.    3.56854 (12) obj. -36.9814 iterations 3
Cbc0038I Pass  32: suminf.    3.28422 (9) obj. -36.9814 iterations 5
Cbc0038I Pass  33: suminf.    2.00726 (5) obj. -36.9814 iterations 12
Cbc0038I Pass  34: suminf.    1.80228 (5) obj. -36.9814 iterations 1
Cbc0038I Pass  35: suminf.    1.75632 (5) obj. -36.9814 iterations 5
Cbc0038I Pass  36: suminf.    1.75632 (5) obj. -36.9814 iterations 0
Cbc0038I Pass  37: suminf.    1.26984 (3) obj. -36.9814 iterations 4
Cbc0038I Pass  38: suminf.    1.17169 (4) obj. -36.9814 iterations 4
Cbc0038I Pass  39: suminf.    1.75632 (5) obj. -36.9814 iterations 3
Cbc0038I Pass  40: suminf.    3.65144 (12) obj. -36.9814 iterations 23
Cbc0038I Pass  41: suminf.    2.75958 (9) obj. -36.9814 iterations 12
Cbc0038I Pass  42: suminf.    6.79678 (19) obj. -36.9814 iterations 18
Cbc0038I Pass  43: suminf.    3.32261 (10) obj. -36.9814 iterations 23
Cbc0038I Pass  44: suminf.    2.72409 (9) obj. -36.9814 iterations 5
Cbc0038I Pass  45: suminf.    2.30129 (6) obj. -36.9814 iterations 15
Cbc0038I Pass  46: suminf.    1.52458 (7) obj. -36.9814 iterations 4
Cbc0038I Pass  47: suminf.    2.40756 (6) obj. -36.9814 iterations 9
Cbc0038I Pass  48: suminf.    1.51450 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  49: suminf.    1.50407 (4) obj. -36.9814 iterations 2
Cbc0038I Pass  50: suminf.    1.58967 (4) obj. -36.9814 iterations 5
Cbc0038I Pass  51: suminf.    1.44511 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  52: suminf.    1.58967 (4) obj. -36.9814 iterations 2
Cbc0038I Pass  53: suminf.    5.25891 (19) obj. -36.9814 iterations 29
Cbc0038I Pass  54: suminf.    1.78141 (6) obj. -36.9814 iterations 26
Cbc0038I Pass  55: suminf.    1.50476 (6) obj. -36.9814 iterations 4
Cbc0038I Pass  56: suminf.    1.58024 (5) obj. -36.9814 iterations 9
Cbc0038I Pass  57: suminf.    1.58024 (5) obj. -36.9814 iterations 0
Cbc0038I Pass  58: suminf.    1.41275 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  59: suminf.    1.03873 (3) obj. -36.9814 iterations 3
Cbc0038I Pass  60: suminf.    1.00995 (4) obj. -36.9814 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 95 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -30.1235 - took 0.12 seconds
Cbc0012I Integer solution of -30.12353 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 76 rows 47 columns
Cbc0031I 22 added rows had average density of 66.227273
Cbc0013I At root node, 22 cuts changed objective from -57.538535 to -48.630868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15213 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1906 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.12353 best solution, best possible -48.630868 (1.06 seconds)
Cbc0012I Integer solution of -30.56588 found by rounding after 9456 iterations and 27 nodes (1.25 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 52 rows 34 columns
Cbc0012I Integer solution of -30.86624 found by RINS after 9907 iterations and 43 nodes (1.30 seconds)
Cbc0001I Search completed - best objective -30.86623999999999, took 10587 iterations and 64 nodes (1.33 seconds)
Cbc0032I Strong branching done 790 times (16395 iterations), fathomed 4 nodes and fixed 31 variables
Cbc0035I Maximum depth 26, 125 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.34

