Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 5.40966e-06 - average 1.38709e-07, 6 fixed columns
Coin0506I Presolve 19 (-20) rows, 15 (-7) columns and 61 (-53) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Coin0511I After Postsolve, objective 410.55395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Coin0511I After Postsolve, objective 410.55395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 410.5539481 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.556%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.47501
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -274.849 iterations 11
Cbc0038I Solution found of -274.849
Cbc0038I Relaxing continuous gives -274.849
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -283.391
Cbc0038I Pass   2: suminf.    0.05602 (1) obj. -283.391 iterations 1
Cbc0038I Pass   3: suminf.    0.17760 (3) obj. -283.391 iterations 3
Cbc0038I Pass   4: suminf.    0.40613 (2) obj. -283.391 iterations 4
Cbc0038I Pass   5: suminf.    0.40613 (2) obj. -283.391 iterations 0
Cbc0038I Pass   6: suminf.    0.78891 (3) obj. -283.391 iterations 3
Cbc0038I Pass   7: suminf.    0.59348 (2) obj. -283.391 iterations 2
Cbc0038I Pass   8: suminf.    1.38327 (8) obj. -283.391 iterations 5
Cbc0038I Pass   9: suminf.    1.04648 (5) obj. -283.391 iterations 4
Cbc0038I Pass  10: suminf.    1.58613 (5) obj. -283.391 iterations 5
Cbc0038I Pass  11: suminf.    1.46603 (5) obj. -283.391 iterations 1
Cbc0038I Pass  12: suminf.    1.32168 (7) obj. -283.391 iterations 6
Cbc0038I Pass  13: suminf.    1.03240 (5) obj. -283.391 iterations 2
Cbc0038I Pass  14: suminf.    0.40582 (3) obj. -283.391 iterations 5
Cbc0038I Pass  15: suminf.    0.40582 (3) obj. -283.391 iterations 0
Cbc0038I Pass  16: suminf.    1.28462 (4) obj. -283.391 iterations 3
Cbc0038I Pass  17: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  18: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  19: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  20: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  21: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I Pass  22: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  23: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  24: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  25: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  26: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I Pass  27: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  28: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  29: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  30: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  31: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -274.849 - took 0.01 seconds
Cbc0012I Integer solution of -274.84862 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 14 rows 11 columns
Cbc0031I 9 added rows had average density of 15.111111
Cbc0013I At root node, 9 cuts changed objective from -360.27441 to -300.59074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 773 row cuts average 4.0 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 535 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -282.86489 found by DiveCoefficient after 1377 iterations and 2 nodes (0.16 seconds)
Cbc0004I Integer solution of -283.54551 found after 1410 iterations and 2 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -283.545511, took 1480 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 48 times (322 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

