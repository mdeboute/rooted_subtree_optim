Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 23 (-10) columns and 114 (-69) elements
Clp1000I sum of infeasibilities 7.63621e-06 - average 2.00953e-07, 5 fixed columns
Coin0506I Presolve 28 (-10) rows, 17 (-6) columns and 82 (-32) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Coin0511I After Postsolve, objective 73.652001, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Clp0000I Optimal - objective value 73.652001
Coin0511I After Postsolve, objective 73.652001, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.6520009 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 23 columns (22 integer (22 of which binary)) and 116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.070%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.54928
Cbc0038I Pass   1: suminf.    0.15556 (1) obj. -58.9704 iterations 9
Cbc0038I Solution found of -50.6667
Cbc0038I Relaxing continuous gives -50.6667
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -50.6667 to -55 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.8653
Cbc0038I Pass   2: suminf.    0.15556 (1) obj. -58.9704 iterations 0
Cbc0038I Pass   3: suminf.    0.15529 (1) obj. -56.8653 iterations 2
Cbc0038I Pass   4: suminf.    0.46250 (1) obj. -58.8427 iterations 3
Cbc0038I Pass   5: suminf.    0.42275 (1) obj. -56.8653 iterations 1
Cbc0038I Pass   6: suminf.    1.65208 (5) obj. -56.8653 iterations 6
Cbc0038I Pass   7: suminf.    1.19079 (5) obj. -56.8653 iterations 4
Cbc0038I Pass   8: suminf.    0.57706 (2) obj. -56.8653 iterations 12
Cbc0038I Pass   9: suminf.    0.22500 (1) obj. -58.8896 iterations 3
Cbc0038I Pass  10: suminf.    0.26569 (1) obj. -56.8653 iterations 1
Cbc0038I Pass  11: suminf.    2.06743 (6) obj. -56.8653 iterations 6
Cbc0038I Pass  12: suminf.    1.25914 (4) obj. -56.8653 iterations 3
Cbc0038I Pass  13: suminf.    1.04980 (3) obj. -56.8653 iterations 1
Cbc0038I Pass  14: suminf.    0.41472 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  15: suminf.    0.29961 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  16: suminf.    0.29961 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  17: suminf.    1.09997 (3) obj. -56.8653 iterations 3
Cbc0038I Pass  18: suminf.    0.29961 (2) obj. -56.8653 iterations 4
Cbc0038I Pass  19: suminf.    2.99301 (7) obj. -56.8653 iterations 6
Cbc0038I Pass  20: suminf.    1.15746 (3) obj. -56.8653 iterations 4
Cbc0038I Pass  21: suminf.    0.65187 (3) obj. -56.8653 iterations 4
Cbc0038I Pass  22: suminf.    0.32097 (2) obj. -56.8653 iterations 1
Cbc0038I Pass  23: suminf.    0.46603 (2) obj. -56.8653 iterations 3
Cbc0038I Pass  24: suminf.    0.46603 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  25: suminf.    1.25841 (7) obj. -56.8653 iterations 7
Cbc0038I Pass  26: suminf.    1.09552 (5) obj. -56.8653 iterations 4
Cbc0038I Pass  27: suminf.    0.60504 (2) obj. -56.8653 iterations 5
Cbc0038I Pass  28: suminf.    0.29907 (2) obj. -56.8653 iterations 2
Cbc0038I Pass  29: suminf.    0.45766 (2) obj. -56.8653 iterations 4
Cbc0038I Pass  30: suminf.    0.45766 (2) obj. -56.8653 iterations 0
Cbc0038I Pass  31: suminf.    0.40937 (3) obj. -56.8653 iterations 3
Cbc0038I Rounding solution of -55.6667 is better than previous of -55

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -60.2226
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.21094 (2) obj. -60.2226 iterations 1
Cbc0038I Pass  32: suminf.    0.55290 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  33: suminf.    0.23940 (1) obj. -60.2226 iterations 2
Cbc0038I Pass  34: suminf.    0.23940 (1) obj. -60.2226 iterations 0
Cbc0038I Pass  35: suminf.    0.40944 (4) obj. -60.2226 iterations 3
Cbc0038I Pass  36: suminf.    0.23940 (1) obj. -60.2226 iterations 3
Cbc0038I Pass  37: suminf.    0.91930 (4) obj. -60.2226 iterations 6
Cbc0038I Pass  38: suminf.    0.87347 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  39: suminf.    0.21094 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  40: suminf.    0.55290 (2) obj. -60.2226 iterations 4
Cbc0038I Pass  41: suminf.    0.23940 (1) obj. -60.2226 iterations 2
Cbc0038I Pass  42: suminf.    0.23940 (1) obj. -60.2226 iterations 0
Cbc0038I Pass  43: suminf.    0.28510 (3) obj. -60.2226 iterations 5
Cbc0038I Pass  44: suminf.    1.30875 (5) obj. -60.2226 iterations 9
Cbc0038I Pass  45: suminf.    0.72608 (4) obj. -60.2226 iterations 6
Cbc0038I Pass  46: suminf.    1.19270 (4) obj. -60.2226 iterations 5
Cbc0038I Pass  47: suminf.    1.11236 (3) obj. -60.2226 iterations 1
Cbc0038I Pass  48: suminf.    0.60115 (3) obj. -60.2226 iterations 2
Cbc0038I Pass  49: suminf.    0.49085 (2) obj. -60.2226 iterations 1
Cbc0038I Pass  50: suminf.    0.32872 (2) obj. -60.2226 iterations 2
Cbc0038I Pass  51: suminf.    0.32872 (2) obj. -60.2226 iterations 0
Cbc0038I Pass  52: suminf.    0.60115 (3) obj. -60.2226 iterations 3
Cbc0038I Pass  53: suminf.    1.28495 (4) obj. -60.2226 iterations 10
Cbc0038I Pass  54: suminf.    1.12602 (3) obj. -60.2226 iterations 3
Cbc0038I Pass  55: suminf.    0.86117 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  56: suminf.    0.58325 (4) obj. -60.2226 iterations 2
Cbc0038I Pass  57: suminf.    0.56017 (3) obj. -60.2226 iterations 2
Cbc0038I Pass  58: suminf.    0.62490 (5) obj. -60.2226 iterations 9
Cbc0038I Pass  59: suminf.    0.62490 (5) obj. -60.2226 iterations 1
Cbc0038I Pass  60: suminf.    1.18699 (3) obj. -60.2226 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55.6667 - took 0.02 seconds
Cbc0012I Integer solution of -55.666667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 23 columns, reduced to 21 rows 13 columns
Cbc0012I Integer solution of -56.666667 found by DiveCoefficient after 1078 iterations and 0 nodes (0.13 seconds)
Cbc0031I 9 added rows had average density of 12.333333
Cbc0013I At root node, 9 cuts changed objective from -73.652001 to -63.063028 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 341 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -56.666667, took 1272 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 44 times (301 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.15

