Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 2.33723e-05 - average 4.63737e-08, 123 fixed columns
Coin0506I Presolve 256 (-248) rows, 138 (-124) columns and 765 (-735) elements
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 0.16766989 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 184.46761
Clp0000I Optimal - objective value 184.46761
Coin0511I After Postsolve, objective 184.46761, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13623612 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 184.46761
Clp0000I Optimal - objective value 184.46761
Clp0000I Optimal - objective value 184.46761
Coin0511I After Postsolve, objective 184.46761, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.467611 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 60 integers unsatisfied sum - 11.008
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.66151 iterations 154
Cbc0038I Solution found of 5.66151
Cbc0038I Relaxing continuous gives 5.66151
Cbc0038I Rounding solution of -85.1074 is better than previous of 5.66151

Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 105 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -85.1074 to -102.317 (0.13 seconds)
Cbc0038I Round again with cutoff of -110.532
Cbc0038I Pass   2: suminf.    3.11001 (13) obj. -110.532 iterations 44
Cbc0038I Pass   3: suminf.    1.83012 (6) obj. -110.532 iterations 28
Cbc0038I Pass   4: suminf.    1.71639 (6) obj. -110.532 iterations 14
Cbc0038I Pass   5: suminf.    1.58959 (7) obj. -110.532 iterations 6
Cbc0038I Pass   6: suminf.    2.74927 (7) obj. -110.532 iterations 18
Cbc0038I Pass   7: suminf.    2.55046 (7) obj. -110.532 iterations 10
Cbc0038I Pass   8: suminf.    2.55046 (7) obj. -110.532 iterations 0
Cbc0038I Pass   9: suminf.    1.59861 (5) obj. -110.532 iterations 18
Cbc0038I Pass  10: suminf.    1.57501 (6) obj. -110.532 iterations 1
Cbc0038I Pass  11: suminf.    1.34286 (4) obj. -110.532 iterations 10
Cbc0038I Pass  12: suminf.    1.31323 (4) obj. -110.532 iterations 5
Cbc0038I Pass  13: suminf.    1.50140 (4) obj. -110.532 iterations 10
Cbc0038I Pass  14: suminf.    1.46755 (4) obj. -110.532 iterations 1
Cbc0038I Pass  15: suminf.    1.18522 (4) obj. -110.532 iterations 5
Cbc0038I Pass  16: suminf.    1.16794 (4) obj. -110.532 iterations 2
Cbc0038I Pass  17: suminf.    1.83012 (6) obj. -110.532 iterations 36
Cbc0038I Pass  18: suminf.    1.83012 (6) obj. -110.532 iterations 0
Cbc0038I Pass  19: suminf.    1.71639 (6) obj. -110.532 iterations 15
Cbc0038I Pass  20: suminf.    1.58959 (7) obj. -110.532 iterations 7
Cbc0038I Pass  21: suminf.    2.74927 (7) obj. -110.532 iterations 19
Cbc0038I Pass  22: suminf.    2.55046 (7) obj. -110.532 iterations 10
Cbc0038I Pass  23: suminf.    2.55046 (7) obj. -110.532 iterations 0
Cbc0038I Pass  24: suminf.    1.59861 (5) obj. -110.532 iterations 18
Cbc0038I Pass  25: suminf.    1.57501 (6) obj. -110.532 iterations 1
Cbc0038I Pass  26: suminf.    1.34286 (4) obj. -110.532 iterations 10
Cbc0038I Pass  27: suminf.    1.31323 (4) obj. -110.532 iterations 5
Cbc0038I Pass  28: suminf.    1.50140 (4) obj. -110.532 iterations 10
Cbc0038I Pass  29: suminf.    1.46755 (4) obj. -110.532 iterations 1
Cbc0038I Pass  30: suminf.    1.18522 (4) obj. -110.532 iterations 5
Cbc0038I Pass  31: suminf.    1.16794 (4) obj. -110.532 iterations 2
Cbc0038I Rounding solution of -103.66 is better than previous of -102.317

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 120 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -103.66 to -111.824 (0.32 seconds)
Cbc0038I Round again with cutoff of -126.353
Cbc0038I Pass  31: suminf.    3.77858 (15) obj. -126.353 iterations 1
Cbc0038I Pass  32: suminf.    2.57797 (8) obj. -126.353 iterations 24
Cbc0038I Pass  33: suminf.    2.56122 (7) obj. -126.353 iterations 1
Cbc0038I Pass  34: suminf.    2.63586 (8) obj. -126.353 iterations 10
Cbc0038I Pass  35: suminf.    2.30171 (9) obj. -126.353 iterations 9
Cbc0038I Pass  36: suminf.    2.34180 (7) obj. -126.353 iterations 18
Cbc0038I Pass  37: suminf.    1.51068 (6) obj. -126.353 iterations 1
Cbc0038I Pass  38: suminf.    1.64619 (5) obj. -126.353 iterations 6
Cbc0038I Pass  39: suminf.    1.31635 (5) obj. -126.353 iterations 3
Cbc0038I Pass  40: suminf.    1.84563 (7) obj. -126.353 iterations 10
Cbc0038I Pass  41: suminf.    1.72331 (6) obj. -126.353 iterations 6
Cbc0038I Pass  42: suminf.    1.64672 (8) obj. -126.353 iterations 11
Cbc0038I Pass  43: suminf.    1.46281 (6) obj. -126.353 iterations 4
Cbc0038I Pass  44: suminf.    1.84563 (7) obj. -126.353 iterations 16
Cbc0038I Pass  45: suminf.    2.33298 (12) obj. -126.353 iterations 39
Cbc0038I Pass  46: suminf.    1.97775 (9) obj. -126.353 iterations 20
Cbc0038I Pass  47: suminf.    2.22071 (6) obj. -126.353 iterations 12
Cbc0038I Pass  48: suminf.    1.57898 (6) obj. -126.353 iterations 4
Cbc0038I Pass  49: suminf.    1.28583 (6) obj. -126.353 iterations 4
Cbc0038I Pass  50: suminf.    2.57515 (7) obj. -126.353 iterations 10
Cbc0038I Pass  51: suminf.    2.37491 (7) obj. -126.353 iterations 1
Cbc0038I Pass  52: suminf.    2.11036 (8) obj. -126.353 iterations 4
Cbc0038I Pass  53: suminf.    1.70304 (8) obj. -126.353 iterations 6
Cbc0038I Pass  54: suminf.    1.70304 (8) obj. -126.353 iterations 1
Cbc0038I Pass  55: suminf.    2.16648 (7) obj. -126.353 iterations 13
Cbc0038I Pass  56: suminf.    1.74080 (6) obj. -126.353 iterations 4
Cbc0038I Pass  57: suminf.    1.74080 (6) obj. -126.353 iterations 1
Cbc0038I Pass  58: suminf.    2.63617 (8) obj. -126.353 iterations 7
Cbc0038I Pass  59: suminf.    2.18552 (7) obj. -126.353 iterations 5
Cbc0038I Pass  60: suminf.    2.18647 (7) obj. -126.353 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 187 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 132 rows 75 columns
Cbc0038I Mini branch and bound improved solution from -111.824 to -115.66 (0.54 seconds)
Cbc0038I Round again with cutoff of -143.787
Cbc0038I Pass  60: suminf.    4.69638 (20) obj. -143.787 iterations 19
Cbc0038I Pass  61: suminf.    4.62415 (19) obj. -143.787 iterations 11
Cbc0038I Pass  62: suminf.    3.33052 (10) obj. -143.787 iterations 26
Cbc0038I Pass  63: suminf.    2.95317 (11) obj. -143.787 iterations 11
Cbc0038I Pass  64: suminf.    2.95317 (11) obj. -143.787 iterations 1
Cbc0038I Pass  65: suminf.    3.42992 (11) obj. -143.787 iterations 13
Cbc0038I Pass  66: suminf.    3.13656 (10) obj. -143.787 iterations 2
Cbc0038I Pass  67: suminf.    2.84431 (9) obj. -143.787 iterations 5
Cbc0038I Pass  68: suminf.    3.40006 (10) obj. -143.787 iterations 16
Cbc0038I Pass  69: suminf.    3.33028 (10) obj. -143.787 iterations 3
Cbc0038I Pass  70: suminf.    3.33028 (10) obj. -143.787 iterations 2
Cbc0038I Pass  71: suminf.    2.74658 (10) obj. -143.787 iterations 15
Cbc0038I Pass  72: suminf.    2.73208 (9) obj. -143.787 iterations 2
Cbc0038I Pass  73: suminf.    3.43735 (9) obj. -143.787 iterations 10
Cbc0038I Pass  74: suminf.    3.07168 (9) obj. -143.787 iterations 6
Cbc0038I Pass  75: suminf.    2.74658 (10) obj. -143.787 iterations 10
Cbc0038I Pass  76: suminf.    5.84806 (17) obj. -143.787 iterations 38
Cbc0038I Pass  77: suminf.    3.80529 (13) obj. -143.787 iterations 36
Cbc0038I Pass  78: suminf.    3.12985 (8) obj. -143.787 iterations 13
Cbc0038I Pass  79: suminf.    2.78997 (9) obj. -143.787 iterations 10
Cbc0038I Pass  80: suminf.    3.17590 (11) obj. -143.787 iterations 7
Cbc0038I Pass  81: suminf.    2.89302 (10) obj. -143.787 iterations 1
Cbc0038I Pass  82: suminf.    2.75181 (11) obj. -143.787 iterations 5
Cbc0038I Pass  83: suminf.    4.78090 (18) obj. -143.787 iterations 31
Cbc0038I Pass  84: suminf.    4.35755 (17) obj. -143.787 iterations 10
Cbc0038I Pass  85: suminf.    3.28345 (13) obj. -143.787 iterations 24
Cbc0038I Pass  86: suminf.    3.16732 (12) obj. -143.787 iterations 4
Cbc0038I Pass  87: suminf.    2.68637 (9) obj. -143.787 iterations 12
Cbc0038I Pass  88: suminf.    4.05888 (12) obj. -143.787 iterations 14
Cbc0038I Pass  89: suminf.    4.03959 (12) obj. -143.787 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 134 rows 76 columns
Cbc0038I Mini branch and bound did not improve solution (0.70 seconds)
Cbc0038I After 0.70 seconds - Feasibility pump exiting with objective of -115.66 - took 0.62 seconds
Cbc0012I Integer solution of -115.66025 found by feasibility pump after 0 iterations and 0 nodes (0.70 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 109 rows 63 columns
Cbc0031I 44 added rows had average density of 68.727273
Cbc0013I At root node, 44 cuts changed objective from -184.46761 to -167.42697 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 43270 row cuts average 3.3 elements, 1 column cuts (1 active)  in 1.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2803 row cuts average 258.8 elements, 0 column cuts (0 active)  in 0.983 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.789 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 254.6 elements, 0 column cuts (0 active)  in 0.366 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -115.66025 best solution, best possible -167.42697 (11.00 seconds)
Cbc0010I After 5 nodes, 6 on tree, -115.66025 best solution, best possible -167.42697 (11.77 seconds)
Cbc0010I After 27 nodes, 11 on tree, -115.66025 best solution, best possible -167.42697 (12.48 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 172 rows 92 columns
Cbc0012I Integer solution of -119.52205 found by RINS after 22171 iterations and 41 nodes (13.04 seconds)
Cbc0010I After 50 nodes, 9 on tree, -119.52205 best solution, best possible -167.42697 (13.20 seconds)
Cbc0010I After 75 nodes, 12 on tree, -119.52205 best solution, best possible -167.42697 (13.92 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 165 rows 89 columns
Cbc0010I After 122 nodes, 12 on tree, -119.52205 best solution, best possible -167.42697 (14.62 seconds)
Cbc0010I After 203 nodes, 12 on tree, -119.52205 best solution, best possible -167.42697 (15.32 seconds)
Cbc0001I Search completed - best objective -119.522046, took 32079 iterations and 276 nodes (15.96 seconds)
Cbc0032I Strong branching done 2862 times (72234 iterations), fathomed 17 nodes and fixed 61 variables
Cbc0035I Maximum depth 78, 751 variables fixed on reduced cost
Total time (CPU seconds):       15.19   (Wallclock seconds):       16.07

