Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 69 (-9) columns and 364 (-89) elements
Clp1000I sum of infeasibilities 1.16923e-05 - average 9.9934e-08, 25 fixed columns
Coin0506I Presolve 71 (-46) rows, 44 (-25) columns and 222 (-142) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Coin0511I After Postsolve, objective 40.860445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25159519 - largest nonzero change 0 ( 0%) - largest zero change 2.7845006e-05
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Clp0000I Optimal - objective value 40.860445
Coin0511I After Postsolve, objective 40.860445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.86044501 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 69 columns (68 integer (68 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.87611
Cbc0038I Solution found of 11.4372
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 69 columns, reduced to 45 rows 30 columns
Cbc0038I Mini branch and bound improved solution from 0 to -7.9883 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.2756
Cbc0038I Pass   1: suminf.    1.74642 (23) obj. -11.2756 iterations 20
Cbc0038I Pass   2: suminf.    0.94542 (8) obj. -11.2756 iterations 30
Cbc0038I Pass   3: suminf.    0.54845 (5) obj. -11.2756 iterations 6
Cbc0038I Pass   4: suminf.    1.20639 (5) obj. -11.2756 iterations 8
Cbc0038I Pass   5: suminf.    1.12167 (4) obj. -11.2756 iterations 1
Cbc0038I Pass   6: suminf.    1.36369 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   7: suminf.    0.93919 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   8: suminf.    1.32192 (4) obj. -11.2756 iterations 4
Cbc0038I Pass   9: suminf.    1.12316 (4) obj. -11.2756 iterations 1
Cbc0038I Pass  10: suminf.    0.89414 (5) obj. -11.2756 iterations 15
Cbc0038I Pass  11: suminf.    0.82125 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  12: suminf.    1.10390 (4) obj. -11.2756 iterations 7
Cbc0038I Pass  13: suminf.    1.10390 (4) obj. -11.2756 iterations 0
Cbc0038I Pass  14: suminf.    1.78578 (4) obj. -11.2756 iterations 9
Cbc0038I Pass  15: suminf.    1.75676 (5) obj. -11.2756 iterations 1
Cbc0038I Pass  16: suminf.    1.66867 (6) obj. -11.2756 iterations 9
Cbc0038I Pass  17: suminf.    1.34039 (4) obj. -11.2756 iterations 8
Cbc0038I Pass  18: suminf.    1.33635 (4) obj. -11.2756 iterations 1
Cbc0038I Pass  19: suminf.    1.69362 (4) obj. -11.2756 iterations 5
Cbc0038I Pass  20: suminf.    1.53421 (5) obj. -11.2756 iterations 1
Cbc0038I Pass  21: suminf.    1.62630 (5) obj. -11.2756 iterations 10
Cbc0038I Pass  22: suminf.    1.53681 (5) obj. -11.2756 iterations 3
Cbc0038I Pass  23: suminf.    1.47028 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  24: suminf.    1.98220 (5) obj. -11.2756 iterations 6
Cbc0038I Pass  25: suminf.    1.92499 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  26: suminf.    1.47922 (4) obj. -11.2756 iterations 8
Cbc0038I Pass  27: suminf.    1.39804 (6) obj. -11.2756 iterations 2
Cbc0038I Pass  28: suminf.    1.54179 (5) obj. -11.2756 iterations 4
Cbc0038I Pass  29: suminf.    1.47028 (6) obj. -11.2756 iterations 4
Cbc0038I Pass  30: suminf.    1.98220 (5) obj. -11.2756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 69 columns, reduced to 49 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7.9883 - took 0.05 seconds
Cbc0012I Integer solution of -7.9883 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 117 rows 69 columns, reduced to 45 rows 30 columns
Cbc0031I 18 added rows had average density of 65.388889
Cbc0013I At root node, 18 cuts changed objective from -40.860445 to -27.463016 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5428 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 57 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0038I Full problem 117 rows 69 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -7.988299999999995, took 5312 iterations and 60 nodes (0.66 seconds)
Cbc0032I Strong branching done 544 times (8619 iterations), fathomed 6 nodes and fixed 18 variables
Cbc0035I Maximum depth 14, 256 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.67

