Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 74 (-4) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 9.5902e-06 - average 7.37708e-08, 16 fixed columns
Coin0506I Presolve 102 (-28) rows, 58 (-16) columns and 312 (-88) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.2207436 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Coin0511I After Postsolve, objective 39.984651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Clp0000I Optimal - objective value 39.984651
Coin0511I After Postsolve, objective 39.984651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.98465072 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.33912
Cbc0038I Solution found of 7.28809
Cbc0038I Relaxing continuous gives -4.79057
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -4.79057 to -9.61298 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.6502
Cbc0038I Pass   1: suminf.    1.51629 (22) obj. -12.6502 iterations 43
Cbc0038I Pass   2: suminf.    1.34341 (6) obj. -12.6502 iterations 22
Cbc0038I Pass   3: suminf.    0.80177 (4) obj. -12.6502 iterations 4
Cbc0038I Pass   4: suminf.    0.79555 (4) obj. -12.6502 iterations 1
Cbc0038I Pass   5: suminf.    0.87426 (3) obj. -12.6502 iterations 6
Cbc0038I Pass   6: suminf.    0.60388 (2) obj. -12.6502 iterations 4
Cbc0038I Pass   7: suminf.    0.27673 (2) obj. -12.6502 iterations 1
Cbc0038I Pass   8: suminf.    2.34812 (10) obj. -12.6502 iterations 15
Cbc0038I Pass   9: suminf.    1.41901 (6) obj. -12.6502 iterations 14
Cbc0038I Pass  10: suminf.    0.90092 (2) obj. -12.6502 iterations 15
Cbc0038I Pass  11: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  12: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  13: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  14: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  15: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  16: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  17: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  18: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  19: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  20: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  21: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  22: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  23: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  24: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  25: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I Pass  26: suminf.    0.36996 (2) obj. -12.6502 iterations 1
Cbc0038I Pass  27: suminf.    0.84504 (3) obj. -12.6502 iterations 2
Cbc0038I Pass  28: suminf.    1.16964 (3) obj. -12.6502 iterations 1
Cbc0038I Pass  29: suminf.    1.16964 (3) obj. -12.6502 iterations 0
Cbc0038I Pass  30: suminf.    0.90092 (2) obj. -12.6502 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -9.61298 to -9.66245 (0.09 seconds)
Cbc0038I Round again with cutoff of -18.1171
Cbc0038I Pass  30: suminf.    2.57097 (22) obj. -18.1171 iterations 0
Cbc0038I Pass  31: suminf.    1.86468 (6) obj. -18.1171 iterations 27
Cbc0038I Pass  32: suminf.    1.02679 (4) obj. -18.1171 iterations 8
Cbc0038I Pass  33: suminf.    1.16283 (4) obj. -18.1171 iterations 6
Cbc0038I Pass  34: suminf.    1.05753 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  35: suminf.    0.85726 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  36: suminf.    0.76669 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  37: suminf.    2.59577 (9) obj. -18.1171 iterations 19
Cbc0038I Pass  38: suminf.    2.45581 (9) obj. -18.1171 iterations 8
Cbc0038I Pass  39: suminf.    2.07207 (7) obj. -18.1171 iterations 16
Cbc0038I Pass  40: suminf.    2.07207 (7) obj. -18.1171 iterations 0
Cbc0038I Pass  41: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  42: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  43: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I Pass  44: suminf.    1.12501 (3) obj. -18.1171 iterations 0
Cbc0038I Pass  45: suminf.    1.26994 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  46: suminf.    0.80477 (3) obj. -18.1171 iterations 2
Cbc0038I Pass  47: suminf.    0.78242 (4) obj. -18.1171 iterations 1
Cbc0038I Pass  48: suminf.    2.07207 (7) obj. -18.1171 iterations 4
Cbc0038I Pass  49: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  50: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  51: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I Pass  52: suminf.    1.12501 (3) obj. -18.1171 iterations 0
Cbc0038I Pass  53: suminf.    1.26994 (3) obj. -18.1171 iterations 1
Cbc0038I Pass  54: suminf.    0.80477 (3) obj. -18.1171 iterations 2
Cbc0038I Pass  55: suminf.    0.78242 (4) obj. -18.1171 iterations 1
Cbc0038I Pass  56: suminf.    2.07207 (7) obj. -18.1171 iterations 4
Cbc0038I Pass  57: suminf.    2.25288 (6) obj. -18.1171 iterations 4
Cbc0038I Pass  58: suminf.    1.84407 (5) obj. -18.1171 iterations 3
Cbc0038I Pass  59: suminf.    1.12501 (3) obj. -18.1171 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.66245 - took 0.10 seconds
Cbc0012I Integer solution of -9.66245 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 63 rows 37 columns
Cbc0031I 20 added rows had average density of 52.7
Cbc0013I At root node, 20 cuts changed objective from -39.984651 to -32.898242 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10165 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1350 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.66245 best solution, best possible -32.898242 (0.77 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 27 rows 21 columns
Cbc0012I Integer solution of -10.20612 found by RINS after 7805 iterations and 43 nodes (1.00 seconds)
Cbc0012I Integer solution of -10.6429 found by rounding after 8066 iterations and 55 nodes (1.02 seconds)
Cbc0004I Integer solution of -11.18552 found after 8102 iterations and 57 nodes (1.02 seconds)
Cbc0001I Search completed - best objective -11.18552, took 8760 iterations and 70 nodes (1.05 seconds)
Cbc0032I Strong branching done 894 times (15589 iterations), fathomed 11 nodes and fixed 43 variables
Cbc0035I Maximum depth 22, 234 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.06

