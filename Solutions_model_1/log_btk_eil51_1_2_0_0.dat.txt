Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-20) rows, 51 (-2) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 3.11896e-05 - average 3.66936e-07, 5 fixed columns
Coin0506I Presolve 76 (-9) rows, 46 (-5) columns and 236 (-28) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Coin0511I After Postsolve, objective 34.46149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Coin0511I After Postsolve, objective 34.46149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.46149023 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 51 columns (50 integer (50 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.23463
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.30849 iterations 39
Cbc0038I Solution found of 6.30849
Cbc0038I Relaxing continuous gives 6.30849
Cbc0038I Rounding solution of 4.33699 is better than previous of 6.30849

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 4.33699 to -9.50585 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.0015
Cbc0038I Pass   2: suminf.    2.32908 (8) obj. -12.0015 iterations 7
Cbc0038I Pass   3: suminf.    2.32908 (8) obj. -12.0015 iterations 0
Cbc0038I Pass   4: suminf.    1.10687 (4) obj. -12.0015 iterations 7
Cbc0038I Pass   5: suminf.    1.10158 (4) obj. -12.0015 iterations 2
Cbc0038I Pass   6: suminf.    0.89674 (3) obj. -12.0015 iterations 6
Cbc0038I Pass   7: suminf.    0.37575 (3) obj. -12.0015 iterations 1
Cbc0038I Pass   8: suminf.    0.32719 (4) obj. -12.0015 iterations 2
Cbc0038I Pass   9: suminf.    1.39219 (5) obj. -12.0015 iterations 6
Cbc0038I Pass  10: suminf.    1.12472 (4) obj. -12.0015 iterations 2
Cbc0038I Pass  11: suminf.    1.12472 (4) obj. -12.0015 iterations 0
Cbc0038I Pass  12: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  13: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  14: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  15: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  16: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  17: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  18: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  19: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  20: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  21: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  22: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  23: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  24: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  25: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  26: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  27: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  28: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  29: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  30: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  31: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -9.50585 - took 0.06 seconds
Cbc0012I Integer solution of -9.50585 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0031I 23 added rows had average density of 32.956522
Cbc0013I At root node, 23 cuts changed objective from -34.46149 to -23.719546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7875 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1591 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0010I After 5 nodes, 6 on tree, -9.50585 best solution, best possible -23.719546 (0.68 seconds)
Cbc0012I Integer solution of -9.62741 found by rounding after 7431 iterations and 41 nodes (0.78 seconds)
Cbc0001I Search completed - best objective -9.627409999999998, took 7532 iterations and 46 nodes (0.79 seconds)
Cbc0032I Strong branching done 538 times (10446 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 14, 105 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.80

