Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 7.33923e-05 - average 3.86275e-07, 22 fixed columns
Coin0506I Presolve 145 (-45) rows, 78 (-23) columns and 438 (-136) elements
Clp0029I End of values pass after 78 iterations
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Coin0511I After Postsolve, objective 40.588064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Clp0000I Optimal - objective value 40.588064
Coin0511I After Postsolve, objective 40.588064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.5880637 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 12.8095
Cbc0038I Solution found of 2.16338
Cbc0038I Relaxing continuous gives -2.50678
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 93 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -2.50678 to -13.532 (0.07 seconds)
Cbc0038I Round again with cutoff of -16.2377
Cbc0038I Pass   1: suminf.    1.60964 (16) obj. -16.2377 iterations 111
Cbc0038I Pass   2: suminf.    1.60964 (16) obj. -16.2377 iterations 0
Cbc0038I Pass   3: suminf.    2.01945 (10) obj. -16.2377 iterations 24
Cbc0038I Pass   4: suminf.    1.58223 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   5: suminf.    2.41983 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   6: suminf.    0.89835 (3) obj. -16.2377 iterations 5
Cbc0038I Pass   7: suminf.    0.68754 (6) obj. -16.2377 iterations 5
Cbc0038I Pass   8: suminf.    2.00491 (8) obj. -16.2377 iterations 9
Cbc0038I Pass   9: suminf.    2.00491 (8) obj. -16.2377 iterations 0
Cbc0038I Pass  10: suminf.    2.86201 (8) obj. -16.2377 iterations 7
Cbc0038I Pass  11: suminf.    1.61513 (6) obj. -16.2377 iterations 5
Cbc0038I Pass  12: suminf.    1.29899 (7) obj. -16.2377 iterations 7
Cbc0038I Pass  13: suminf.    2.11663 (8) obj. -16.2377 iterations 8
Cbc0038I Pass  14: suminf.    2.08503 (8) obj. -16.2377 iterations 2
Cbc0038I Pass  15: suminf.    1.45955 (7) obj. -16.2377 iterations 6
Cbc0038I Pass  16: suminf.    4.25294 (15) obj. -16.2377 iterations 27
Cbc0038I Pass  17: suminf.    3.90846 (14) obj. -16.2377 iterations 7
Cbc0038I Pass  18: suminf.    1.19480 (6) obj. -16.2377 iterations 19
Cbc0038I Pass  19: suminf.    1.07419 (6) obj. -16.2377 iterations 4
Cbc0038I Pass  20: suminf.    3.36575 (8) obj. -16.2377 iterations 5
Cbc0038I Pass  21: suminf.    2.16226 (6) obj. -16.2377 iterations 5
Cbc0038I Pass  22: suminf.    1.91308 (6) obj. -16.2377 iterations 6
Cbc0038I Pass  23: suminf.    1.06145 (6) obj. -16.2377 iterations 9
Cbc0038I Pass  24: suminf.    1.01685 (6) obj. -16.2377 iterations 2
Cbc0038I Pass  25: suminf.    1.97066 (7) obj. -16.2377 iterations 9
Cbc0038I Pass  26: suminf.    7.23864 (22) obj. -16.2377 iterations 32
Cbc0038I Pass  27: suminf.    3.94800 (13) obj. -16.2377 iterations 17
Cbc0038I Pass  28: suminf.    3.32619 (12) obj. -16.2377 iterations 7
Cbc0038I Pass  29: suminf.    2.04777 (6) obj. -16.2377 iterations 38
Cbc0038I Pass  30: suminf.    1.78830 (5) obj. -16.2377 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 112 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -13.532 to -13.9655 (0.18 seconds)
Cbc0038I Round again with cutoff of -21.1078
Cbc0038I Pass  30: suminf.    2.69918 (22) obj. -21.1078 iterations 6
Cbc0038I Pass  31: suminf.    2.69918 (22) obj. -21.1078 iterations 0
Cbc0038I Pass  32: suminf.    2.68856 (9) obj. -21.1078 iterations 16
Cbc0038I Pass  33: suminf.    2.47245 (15) obj. -21.1078 iterations 9
Cbc0038I Pass  34: suminf.    2.47214 (16) obj. -21.1078 iterations 2
Cbc0038I Pass  35: suminf.    3.92265 (11) obj. -21.1078 iterations 17
Cbc0038I Pass  36: suminf.    2.59530 (11) obj. -21.1078 iterations 11
Cbc0038I Pass  37: suminf.    2.25771 (12) obj. -21.1078 iterations 6
Cbc0038I Pass  38: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  39: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I Pass  40: suminf.    3.16205 (11) obj. -21.1078 iterations 1
Cbc0038I Pass  41: suminf.    3.93895 (11) obj. -21.1078 iterations 9
Cbc0038I Pass  42: suminf.    2.28840 (10) obj. -21.1078 iterations 12
Cbc0038I Pass  43: suminf.    2.18177 (12) obj. -21.1078 iterations 3
Cbc0038I Pass  44: suminf.    4.45506 (12) obj. -21.1078 iterations 10
Cbc0038I Pass  45: suminf.    2.91603 (13) obj. -21.1078 iterations 11
Cbc0038I Pass  46: suminf.    2.53147 (15) obj. -21.1078 iterations 5
Cbc0038I Pass  47: suminf.    2.25771 (12) obj. -21.1078 iterations 7
Cbc0038I Pass  48: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  49: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I Pass  50: suminf.    3.16205 (11) obj. -21.1078 iterations 1
Cbc0038I Pass  51: suminf.    3.93895 (11) obj. -21.1078 iterations 9
Cbc0038I Pass  52: suminf.    2.28840 (10) obj. -21.1078 iterations 12
Cbc0038I Pass  53: suminf.    2.18177 (12) obj. -21.1078 iterations 3
Cbc0038I Pass  54: suminf.    4.45506 (12) obj. -21.1078 iterations 10
Cbc0038I Pass  55: suminf.    2.91603 (13) obj. -21.1078 iterations 11
Cbc0038I Pass  56: suminf.    2.53147 (15) obj. -21.1078 iterations 5
Cbc0038I Pass  57: suminf.    2.25771 (12) obj. -21.1078 iterations 7
Cbc0038I Pass  58: suminf.    3.23868 (10) obj. -21.1078 iterations 11
Cbc0038I Pass  59: suminf.    3.18465 (10) obj. -21.1078 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 97 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -13.9655 - took 0.21 seconds
Cbc0012I Integer solution of -13.965458 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 94 rows 54 columns
Cbc0031I 30 added rows had average density of 65.7
Cbc0013I At root node, 30 cuts changed objective from -40.588064 to -31.63074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20754 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3090 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.965458 best solution, best possible -31.63074 (1.79 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 45 rows 32 columns
Cbc0012I Integer solution of -14.185778 found by RINS after 10799 iterations and 41 nodes (2.14 seconds)
Cbc0004I Integer solution of -14.316824 found after 11257 iterations and 61 nodes (2.19 seconds)
Cbc0001I Search completed - best objective -14.31682399999999, took 12031 iterations and 70 nodes (2.22 seconds)
Cbc0032I Strong branching done 976 times (21335 iterations), fathomed 4 nodes and fixed 18 variables
Cbc0035I Maximum depth 32, 126 variables fixed on reduced cost
Total time (CPU seconds):       2.15   (Wallclock seconds):       2.25

