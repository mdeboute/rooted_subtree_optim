Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 4.02569e-05 - average 7.45499e-07, 2 fixed columns
Coin0506I Presolve 51 (-3) rows, 28 (-2) columns and 150 (-10) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Coin0511I After Postsolve, objective 83.320833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25959237 - largest nonzero change 0 ( 0%) - largest zero change 2.8022924e-05
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Clp0000I Optimal - objective value 83.320833
Coin0511I After Postsolve, objective 83.320833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.3208332 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.89332
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.10038 iterations 23
Cbc0038I Solution found of -5.10038
Cbc0038I Relaxing continuous gives -5.10038
Cbc0038I Rounding solution of -19.8501 is better than previous of -5.10038

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 42 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -19.8501 to -35.7506 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.1297
Cbc0038I Pass   2: suminf.    0.35905 (2) obj. -40.1297 iterations 2
Cbc0038I Pass   3: suminf.    0.15345 (2) obj. -40.1297 iterations 2
Cbc0038I Pass   4: suminf.    0.54020 (2) obj. -40.1297 iterations 1
Cbc0038I Pass   5: suminf.    1.97954 (6) obj. -40.1297 iterations 8
Cbc0038I Pass   6: suminf.    0.82099 (4) obj. -40.1297 iterations 5
Cbc0038I Pass   7: suminf.    0.82099 (4) obj. -40.1297 iterations 1
Cbc0038I Pass   8: suminf.    0.73625 (3) obj. -40.1297 iterations 5
Cbc0038I Pass   9: suminf.    0.59715 (3) obj. -40.1297 iterations 2
Cbc0038I Pass  10: suminf.    0.43353 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  11: suminf.    1.28106 (7) obj. -40.1297 iterations 5
Cbc0038I Pass  12: suminf.    1.19857 (4) obj. -40.1297 iterations 1
Cbc0038I Pass  13: suminf.    0.61504 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  14: suminf.    0.61504 (2) obj. -40.1297 iterations 0
Cbc0038I Pass  15: suminf.    0.73084 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  16: suminf.    0.44366 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  17: suminf.    1.57837 (5) obj. -40.1297 iterations 8
Cbc0038I Pass  18: suminf.    1.07626 (3) obj. -40.1297 iterations 4
Cbc0038I Pass  19: suminf.    0.74613 (4) obj. -40.1297 iterations 5
Cbc0038I Pass  20: suminf.    0.61504 (2) obj. -40.1297 iterations 3
Cbc0038I Pass  21: suminf.    0.61504 (2) obj. -40.1297 iterations 0
Cbc0038I Pass  22: suminf.    0.73084 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  23: suminf.    0.44366 (2) obj. -40.1297 iterations 1
Cbc0038I Pass  24: suminf.    0.61504 (2) obj. -40.1297 iterations 2
Cbc0038I Pass  25: suminf.    1.74146 (5) obj. -40.1297 iterations 1
Cbc0038I Pass  26: suminf.    1.99516 (7) obj. -40.1297 iterations 9
Cbc0038I Pass  27: suminf.    1.29062 (6) obj. -40.1297 iterations 3
Cbc0038I Pass  28: suminf.    2.20666 (10) obj. -40.1297 iterations 8
Cbc0038I Pass  29: suminf.    1.81845 (6) obj. -40.1297 iterations 3
Cbc0038I Pass  30: suminf.    1.86722 (6) obj. -40.1297 iterations 11
Cbc0038I Pass  31: suminf.    1.50061 (5) obj. -40.1297 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -35.7506 - took 0.03 seconds
Cbc0012I Integer solution of -35.750587 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 42 rows 23 columns
Cbc0031I 13 added rows had average density of 20.307692
Cbc0013I At root node, 13 cuts changed objective from -79.541172 to -51.431322 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2111 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 934 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -35.750587 best solution, best possible -51.431216 (1.43 seconds)
Cbc0012I Integer solution of -36.099517 found by rounding after 2789 iterations and 4 nodes (1.47 seconds)
Cbc0001I Search completed - best objective -36.0995173191, took 3025 iterations and 12 nodes (1.48 seconds)
Cbc0032I Strong branching done 134 times (1384 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.49

