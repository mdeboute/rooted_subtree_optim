Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 165 (-11) rows, 85 (-4) columns and 412 (-22) elements
Clp1000I sum of infeasibilities 0.000427284 - average 2.5896e-06, 6 fixed columns
Coin0506I Presolve 149 (-16) rows, 79 (-6) columns and 374 (-38) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 0.33843303 - largest nonzero change 0 ( 0%) - largest zero change 2.7754997e-05
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Coin0511I After Postsolve, objective 10865.155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 9.7350666 - largest nonzero change 1.889062e-05 ( 0.001889062%) - largest zero change 1.7496509e-05
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Clp0000I Optimal - objective value 10865.155
Coin0511I After Postsolve, objective 10865.155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10865.15528 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 165 rows, 85 columns (84 integer (84 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.128%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 29.251
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2984.72 iterations 82
Cbc0038I Solution found of 2984.72
Cbc0038I Relaxing continuous gives 2984.72
Cbc0038I Rounding solution of 1750.12 is better than previous of 2984.72

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 165 rows 85 columns, reduced to 128 rows 70 columns - 12 fixed gives 66, 50 - ok now
Cbc0038I Full problem 165 rows 85 columns, reduced to 66 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 1750.12 to -2561.93 (0.04 seconds)
Cbc0038I Round again with cutoff of -3392.25
Cbc0038I Pass   2: suminf.    5.60685 (21) obj. -3392.25 iterations 24
Cbc0038I Pass   3: suminf.    4.93249 (15) obj. -3392.25 iterations 8
Cbc0038I Pass   4: suminf.    3.02837 (13) obj. -3392.25 iterations 21
Cbc0038I Pass   5: suminf.    2.93311 (13) obj. -3392.25 iterations 6
Cbc0038I Pass   6: suminf.    4.99436 (19) obj. -3392.25 iterations 25
Cbc0038I Pass   7: suminf.    2.67685 (9) obj. -3392.25 iterations 22
Cbc0038I Pass   8: suminf.    4.04716 (15) obj. -3392.25 iterations 14
Cbc0038I Pass   9: suminf.    4.93459 (31) obj. -3392.25 iterations 20
Cbc0038I Pass  10: suminf.    4.06279 (16) obj. -3392.25 iterations 15
Cbc0038I Pass  11: suminf.    4.53590 (16) obj. -3392.25 iterations 14
Cbc0038I Pass  12: suminf.    4.06810 (15) obj. -3392.25 iterations 6
Cbc0038I Pass  13: suminf.    6.39994 (18) obj. -3392.25 iterations 23
Cbc0038I Pass  14: suminf.    4.40461 (15) obj. -3392.25 iterations 7
Cbc0038I Pass  15: suminf.    3.60939 (13) obj. -3392.25 iterations 8
Cbc0038I Pass  16: suminf.    6.57562 (18) obj. -3392.25 iterations 26
Cbc0038I Pass  17: suminf.   10.02681 (31) obj. -3392.25 iterations 45
Cbc0038I Pass  18: suminf.    4.58693 (17) obj. -3392.25 iterations 34
Cbc0038I Pass  19: suminf.    4.58693 (17) obj. -3392.25 iterations 0
Cbc0038I Pass  20: suminf.    5.75719 (17) obj. -3392.25 iterations 24
Cbc0038I Pass  21: suminf.    4.41450 (15) obj. -3392.25 iterations 12
Cbc0038I Pass  22: suminf.    4.27726 (27) obj. -3392.25 iterations 5
Cbc0038I Pass  23: suminf.    4.49528 (21) obj. -3392.25 iterations 32
Cbc0038I Pass  24: suminf.    4.46629 (15) obj. -3392.25 iterations 2
Cbc0038I Pass  25: suminf.    5.67037 (19) obj. -3392.25 iterations 23
Cbc0038I Pass  26: suminf.    5.39782 (20) obj. -3392.25 iterations 11
Cbc0038I Pass  27: suminf.    5.39782 (20) obj. -3392.25 iterations 1
Cbc0038I Pass  28: suminf.    6.32800 (17) obj. -3392.25 iterations 24
Cbc0038I Pass  29: suminf.    6.01193 (18) obj. -3392.25 iterations 6
Cbc0038I Pass  30: suminf.    7.54290 (19) obj. -3392.25 iterations 20
Cbc0038I Pass  31: suminf.    6.44346 (19) obj. -3392.25 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 165 rows 85 columns, reduced to 128 rows 71 columns - 19 fixed gives 66, 51 - ok now
Cbc0038I Full problem 165 rows 85 columns, reduced to 66 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -2561.93 - took 0.05 seconds
Cbc0012I Integer solution of -2561.9291 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 15 added rows had average density of 47.2
Cbc0013I At root node, 15 cuts changed objective from -10865.155 to -6796.4477 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9421 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1017 row cuts average 78.2 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 54.6 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2561.9291 best solution, best possible -6796.0867 (0.76 seconds)
Cbc0012I Integer solution of -2892.6433 found by DiveCoefficient after 4712 iterations and 9 nodes (0.91 seconds)
Cbc0012I Integer solution of -2904.4843 found by DiveCoefficient after 4745 iterations and 11 nodes (0.92 seconds)
Cbc0016I Integer solution of -2907.1751 found by strong branching after 4782 iterations and 13 nodes (0.93 seconds)
Cbc0001I Search completed - best objective -2907.175079999997, took 4793 iterations and 14 nodes (0.93 seconds)
Cbc0032I Strong branching done 278 times (4941 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.94

