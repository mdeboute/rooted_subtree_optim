Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-31) rows, 72 (-6) columns and 384 (-69) elements
Clp1000I sum of infeasibilities 2.14089e-05 - average 1.72653e-07, 15 fixed columns
Coin0506I Presolve 94 (-30) rows, 56 (-16) columns and 292 (-92) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 1.996635 - largest nonzero change 0 ( 0%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 42.565249
Clp0000I Optimal - objective value 42.565249
Coin0511I After Postsolve, objective 42.565249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.565249
Clp0000I Optimal - objective value 42.565249
Clp0000I Optimal - objective value 42.565249
Coin0511I After Postsolve, objective 42.565249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.56524875 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 120 rows, 72 columns (71 integer (71 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.600%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.31647
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.9563 iterations 39
Cbc0038I Solution found of 13.9563
Cbc0038I Relaxing continuous gives 13.9563
Cbc0038I Rounding solution of -7.56813 is better than previous of 13.9563

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 72 columns, reduced to 43 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -7.56813 to -23.687 (0.02 seconds)
Cbc0038I Round again with cutoff of -25.5312
Cbc0038I Pass   2: suminf.    2.40350 (7) obj. -25.5312 iterations 11
Cbc0038I Pass   3: suminf.    0.31541 (1) obj. -25.5312 iterations 12
Cbc0038I Pass   4: suminf.    0.49729 (2) obj. -25.5312 iterations 2
Cbc0038I Pass   5: suminf.    0.35001 (2) obj. -25.5312 iterations 2
Cbc0038I Pass   6: suminf.    2.35439 (6) obj. -25.5312 iterations 17
Cbc0038I Pass   7: suminf.    1.06131 (4) obj. -25.5312 iterations 8
Cbc0038I Pass   8: suminf.    0.46429 (1) obj. -25.5312 iterations 6
Cbc0038I Pass   9: suminf.    0.20892 (2) obj. -25.5312 iterations 4
Cbc0038I Pass  10: suminf.    0.47037 (1) obj. -25.5312 iterations 2
Cbc0038I Pass  11: suminf.    0.47364 (1) obj. -25.5312 iterations 1
Cbc0038I Pass  12: suminf.    1.42950 (5) obj. -25.5312 iterations 9
Cbc0038I Pass  13: suminf.    0.63393 (2) obj. -25.5312 iterations 9
Cbc0038I Pass  14: suminf.    1.67429 (7) obj. -25.5312 iterations 13
Cbc0038I Pass  15: suminf.    1.67429 (7) obj. -25.5312 iterations 3
Cbc0038I Pass  16: suminf.    2.40350 (7) obj. -25.5312 iterations 23
Cbc0038I Pass  17: suminf.    0.31541 (1) obj. -25.5312 iterations 11
Cbc0038I Pass  18: suminf.    0.49729 (2) obj. -25.5312 iterations 2
Cbc0038I Pass  19: suminf.    0.35001 (2) obj. -25.5312 iterations 2
Cbc0038I Pass  20: suminf.    1.05812 (5) obj. -25.5312 iterations 24
Cbc0038I Pass  21: suminf.    0.99575 (4) obj. -25.5312 iterations 6
Cbc0038I Pass  22: suminf.    1.39703 (5) obj. -25.5312 iterations 16
Cbc0038I Pass  23: suminf.    0.70968 (3) obj. -25.5312 iterations 11
Cbc0038I Pass  24: suminf.    0.49875 (2) obj. -25.5312 iterations 6
Cbc0038I Pass  25: suminf.    0.42612 (2) obj. -25.5312 iterations 2
Cbc0038I Pass  26: suminf.    0.21139 (4) obj. -25.5312 iterations 7
Cbc0038I Pass  27: suminf.    0.09183 (1) obj. -25.5312 iterations 6
Cbc0038I Pass  28: suminf.    0.34555 (1) obj. -25.5312 iterations 5
Cbc0038I Pass  29: suminf.    0.45700 (2) obj. -25.5312 iterations 2
Cbc0038I Pass  30: suminf.    0.38015 (2) obj. -25.5312 iterations 2
Cbc0038I Pass  31: suminf.    2.25761 (8) obj. -25.5312 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 72 columns, reduced to 63 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -23.687 to -23.9614 (0.07 seconds)
Cbc0038I Round again with cutoff of -28.8504
Cbc0038I Pass  31: suminf.    2.58794 (8) obj. -28.8504 iterations 1
Cbc0038I Pass  32: suminf.    0.51057 (3) obj. -28.8504 iterations 14
Cbc0038I Pass  33: suminf.    0.50915 (3) obj. -28.8504 iterations 1
Cbc0038I Pass  34: suminf.    0.72430 (5) obj. -28.8504 iterations 10
Cbc0038I Pass  35: suminf.    0.58410 (2) obj. -28.8504 iterations 3
Cbc0038I Pass  36: suminf.    0.72726 (4) obj. -28.8504 iterations 9
Cbc0038I Pass  37: suminf.    0.51057 (3) obj. -28.8504 iterations 7
Cbc0038I Pass  38: suminf.    0.50915 (3) obj. -28.8504 iterations 1
Cbc0038I Pass  39: suminf.    0.72430 (5) obj. -28.8504 iterations 10
Cbc0038I Pass  40: suminf.    0.58410 (2) obj. -28.8504 iterations 3
Cbc0038I Pass  41: suminf.    0.72726 (4) obj. -28.8504 iterations 9
Cbc0038I Pass  42: suminf.    0.51057 (3) obj. -28.8504 iterations 7
Cbc0038I Pass  43: suminf.    0.50915 (3) obj. -28.8504 iterations 1
Cbc0038I Pass  44: suminf.    0.72430 (5) obj. -28.8504 iterations 10
Cbc0038I Pass  45: suminf.    0.58410 (2) obj. -28.8504 iterations 3
Cbc0038I Pass  46: suminf.    0.72726 (4) obj. -28.8504 iterations 9
Cbc0038I Pass  47: suminf.    0.51057 (3) obj. -28.8504 iterations 7
Cbc0038I Pass  48: suminf.    0.50915 (3) obj. -28.8504 iterations 1
Cbc0038I Pass  49: suminf.    0.72430 (5) obj. -28.8504 iterations 10
Cbc0038I Pass  50: suminf.    0.58410 (2) obj. -28.8504 iterations 3
Cbc0038I Pass  51: suminf.    0.72726 (4) obj. -28.8504 iterations 9
Cbc0038I Pass  52: suminf.    0.51057 (3) obj. -28.8504 iterations 7
Cbc0038I Pass  53: suminf.    0.50915 (3) obj. -28.8504 iterations 1
Cbc0038I Pass  54: suminf.    0.72430 (5) obj. -28.8504 iterations 10
Cbc0038I Pass  55: suminf.    0.58410 (2) obj. -28.8504 iterations 3
Cbc0038I Pass  56: suminf.    0.72726 (4) obj. -28.8504 iterations 9
Cbc0038I Pass  57: suminf.    0.51057 (3) obj. -28.8504 iterations 7
Cbc0038I Pass  58: suminf.    0.50915 (3) obj. -28.8504 iterations 1
Cbc0038I Pass  59: suminf.    0.72430 (5) obj. -28.8504 iterations 10
Cbc0038I Pass  60: suminf.    0.58410 (2) obj. -28.8504 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 72 columns, reduced to 46 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -23.9614 - took 0.07 seconds
Cbc0012I Integer solution of -23.96136 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 120 rows 72 columns, reduced to 45 rows 28 columns
Cbc0031I 12 added rows had average density of 44.166667
Cbc0013I At root node, 12 cuts changed objective from -42.127522 to -34.573364 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4618 row cuts average 6.7 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1393 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0038I Full problem 120 rows 72 columns, reduced to 6 rows 7 columns
Cbc0001I Search completed - best objective -23.96136, took 4643 iterations and 60 nodes (0.54 seconds)
Cbc0032I Strong branching done 352 times (4156 iterations), fathomed 10 nodes and fixed 20 variables
Cbc0035I Maximum depth 10, 193 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.55

