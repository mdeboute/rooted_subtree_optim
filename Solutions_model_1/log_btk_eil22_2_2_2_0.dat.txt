Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 1.95285e-06 - average 5.57956e-08, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 21 (-1) columns and 100 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Coin0511I After Postsolve, objective 66.644015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Clp0000I Optimal - objective value 66.644015
Coin0511I After Postsolve, objective 66.644015, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.64401495 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.68683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.48407 iterations 12
Cbc0038I Solution found of -4.48407
Cbc0038I Relaxing continuous gives -4.48407
Cbc0038I Rounding solution of -14.0714 is better than previous of -4.48407

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -14.0714 to -26.4999 (0.02 seconds)
Cbc0038I Round again with cutoff of -30.5144
Cbc0038I Pass   2: suminf.    0.87204 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   3: suminf.    0.87204 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   4: suminf.    0.93656 (2) obj. -30.5144 iterations 1
Cbc0038I Pass   5: suminf.    0.60340 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   6: suminf.    0.60340 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   7: suminf.    0.52709 (2) obj. -30.5144 iterations 2
Cbc0038I Pass   8: suminf.    0.52709 (2) obj. -30.5144 iterations 0
Cbc0038I Pass   9: suminf.    0.59161 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  10: suminf.    1.77770 (5) obj. -30.5144 iterations 4
Cbc0038I Pass  11: suminf.    0.99799 (3) obj. -30.5144 iterations 4
Cbc0038I Pass  12: suminf.    0.72481 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  13: suminf.    0.90940 (3) obj. -30.5144 iterations 2
Cbc0038I Pass  14: suminf.    0.73034 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  15: suminf.    0.73034 (2) obj. -30.5144 iterations 0
Cbc0038I Pass  16: suminf.    1.30923 (4) obj. -30.5144 iterations 7
Cbc0038I Pass  17: suminf.    0.52709 (2) obj. -30.5144 iterations 6
Cbc0038I Pass  18: suminf.    0.59161 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  19: suminf.    0.52709 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  20: suminf.    0.69156 (4) obj. -30.5144 iterations 9
Cbc0038I Pass  21: suminf.    0.60705 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  22: suminf.    0.43027 (1) obj. -30.5144 iterations 4
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -30.5144 iterations 1
Cbc0038I Pass  24: suminf.    0.59632 (3) obj. -30.5144 iterations 3
Cbc0038I Pass  25: suminf.    0.48490 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  26: suminf.    0.64846 (2) obj. -30.5144 iterations 1
Cbc0038I Pass  27: suminf.    0.61993 (4) obj. -30.5144 iterations 6
Cbc0038I Pass  28: suminf.    0.61993 (4) obj. -30.5144 iterations 1
Cbc0038I Pass  29: suminf.    1.37871 (4) obj. -30.5144 iterations 8
Cbc0038I Pass  30: suminf.    0.73107 (2) obj. -30.5144 iterations 2
Cbc0038I Pass  31: suminf.    0.54838 (2) obj. -30.5144 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 27 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -26.4999 to -27.7936 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.7403
Cbc0038I Pass  31: suminf.    1.21991 (3) obj. -37.7403 iterations 1
Cbc0038I Pass  32: suminf.    1.21991 (3) obj. -37.7403 iterations 0
Cbc0038I Pass  33: suminf.    0.85705 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  34: suminf.    2.31503 (6) obj. -37.7403 iterations 7
Cbc0038I Pass  35: suminf.    1.00162 (4) obj. -37.7403 iterations 3
Cbc0038I Pass  36: suminf.    0.86640 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  37: suminf.    0.93219 (5) obj. -37.7403 iterations 5
Cbc0038I Pass  38: suminf.    0.83827 (3) obj. -37.7403 iterations 2
Cbc0038I Pass  39: suminf.    0.70587 (2) obj. -37.7403 iterations 4
Cbc0038I Pass  40: suminf.    0.78708 (2) obj. -37.7403 iterations 2
Cbc0038I Pass  41: suminf.    0.78708 (2) obj. -37.7403 iterations 0
Cbc0038I Pass  42: suminf.    0.85159 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  43: suminf.    0.78708 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  44: suminf.    0.85159 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  45: suminf.    1.05750 (6) obj. -37.7403 iterations 11
Cbc0038I Pass  46: suminf.    0.82338 (4) obj. -37.7403 iterations 4
Cbc0038I Pass  47: suminf.    0.62694 (2) obj. -37.7403 iterations 5
Cbc0038I Pass  48: suminf.    0.77673 (4) obj. -37.7403 iterations 3
Cbc0038I Pass  49: suminf.    0.77673 (4) obj. -37.7403 iterations 0
Cbc0038I Pass  50: suminf.    0.76667 (2) obj. -37.7403 iterations 4
Cbc0038I Pass  51: suminf.    0.67826 (2) obj. -37.7403 iterations 1
Cbc0038I Pass  52: suminf.    2.86850 (8) obj. -37.7403 iterations 8
Cbc0038I Pass  53: suminf.    1.54753 (5) obj. -37.7403 iterations 4
Cbc0038I Pass  54: suminf.    1.41142 (5) obj. -37.7403 iterations 1
Cbc0038I Pass  55: suminf.    2.20085 (7) obj. -37.7403 iterations 5
Cbc0038I Pass  56: suminf.    2.11523 (11) obj. -37.7403 iterations 2
Cbc0038I Pass  57: suminf.    0.73333 (3) obj. -37.7403 iterations 13
Cbc0038I Pass  58: suminf.    0.34739 (3) obj. -37.7403 iterations 4
Cbc0038I Pass  59: suminf.    0.76667 (2) obj. -37.7403 iterations 2
Cbc0038I Pass  60: suminf.    0.67826 (2) obj. -37.7403 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -27.7936 - took 0.04 seconds
Cbc0012I Integer solution of -27.79362 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 25 rows 17 columns
Cbc0031I 9 added rows had average density of 16.555556
Cbc0013I At root node, 9 cuts changed objective from -66.644015 to -46.512839 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1626 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -27.79362, took 2563 iterations and 20 nodes (0.21 seconds)
Cbc0032I Strong branching done 120 times (808 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 6, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.22

