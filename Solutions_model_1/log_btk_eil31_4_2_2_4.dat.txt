Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 134 (-49) elements
Clp1000I sum of infeasibilities 8.9233e-08 - average 1.93985e-09, 2 fixed columns
Coin0506I Presolve 42 (-4) rows, 23 (-2) columns and 123 (-11) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Coin0511I After Postsolve, objective 59.498152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Coin0511I After Postsolve, objective 59.498152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.49815153 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.87339
Cbc0038I Solution found of -7.00943
Cbc0038I Relaxing continuous gives -7.19795
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7.19795 to -26.3602 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.6016
Cbc0038I Pass   1: suminf.    1.28190 (5) obj. -29.6016 iterations 21
Cbc0038I Pass   2: suminf.    0.05000 (1) obj. -32.9867 iterations 8
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -32.9867 iterations 1
Cbc0038I Pass   4: suminf.    0.21507 (1) obj. -29.6016 iterations 2
Cbc0038I Pass   5: suminf.    1.92148 (6) obj. -29.6016 iterations 10
Cbc0038I Pass   6: suminf.    0.95818 (4) obj. -29.6016 iterations 4
Cbc0038I Pass   7: suminf.    0.69010 (2) obj. -29.6016 iterations 2
Cbc0038I Pass   8: suminf.    0.65777 (2) obj. -29.6016 iterations 2
Cbc0038I Pass   9: suminf.    0.93864 (4) obj. -29.6016 iterations 7
Cbc0038I Pass  10: suminf.    0.51069 (2) obj. -29.6016 iterations 4
Cbc0038I Pass  11: suminf.    0.20000 (1) obj. -29.6016 iterations 2
Cbc0038I Pass  12: suminf.    0.37817 (1) obj. -29.6016 iterations 1
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -32.2015 iterations 2
Cbc0038I Pass  14: suminf.    0.68022 (4) obj. -29.6016 iterations 12
Cbc0038I Pass  15: suminf.    0.49435 (2) obj. -29.6016 iterations 2
Cbc0038I Pass  16: suminf.    0.54043 (2) obj. -31.1878 iterations 1
Cbc0038I Pass  17: suminf.    1.14830 (7) obj. -29.6016 iterations 9
Cbc0038I Pass  18: suminf.    1.12412 (5) obj. -29.6016 iterations 3
Cbc0038I Pass  19: suminf.    0.27856 (1) obj. -29.6016 iterations 8
Cbc0038I Pass  20: suminf.    0.16250 (1) obj. -30.3363 iterations 2
Cbc0038I Pass  21: suminf.    0.98810 (6) obj. -29.6016 iterations 5
Cbc0038I Pass  22: suminf.    0.57989 (4) obj. -29.6016 iterations 3
Cbc0038I Pass  23: suminf.    0.44852 (2) obj. -29.6016 iterations 7
Cbc0038I Pass  24: suminf.    0.64223 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  25: suminf.    0.99269 (3) obj. -29.6016 iterations 2
Cbc0038I Pass  26: suminf.    0.94657 (3) obj. -29.6016 iterations 6
Cbc0038I Pass  27: suminf.    0.81863 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  28: suminf.    0.69757 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  29: suminf.    1.86450 (5) obj. -29.6016 iterations 5
Cbc0038I Pass  30: suminf.    0.65230 (6) obj. -29.6016 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -26.3602 - took 0.04 seconds
Cbc0012I Integer solution of -26.360241 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0031I 14 added rows had average density of 18.142857
Cbc0013I At root node, 14 cuts changed objective from -58.772551 to -42.099855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1232 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 555 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.36024089999999, took 2551 iterations and 14 nodes (0.27 seconds)
Cbc0032I Strong branching done 162 times (1884 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.28

