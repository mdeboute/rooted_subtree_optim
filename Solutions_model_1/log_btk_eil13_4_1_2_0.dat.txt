Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 12 (-3) columns and 48 (-27) elements
Clp1000I sum of infeasibilities 1.85811e-06 - average 1.16132e-07, 4 fixed columns
Coin0506I Presolve 10 (-6) rows, 7 (-5) columns and 27 (-21) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Coin0511I After Postsolve, objective 699.22922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Coin0511I After Postsolve, objective 699.22922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 699.2292163 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 49 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.32879
Cbc0038I Pass   1: suminf.    0.33333 (1) obj. -666.965 iterations 3
Cbc0038I Solution found of -535.38
Cbc0038I Relaxing continuous gives -535.38
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -550.679
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.33333 (1) obj. -666.965 iterations 0
Cbc0038I Pass   3: suminf.    0.07790 (1) obj. -550.679 iterations 2
Cbc0038I Pass   4: suminf.    0.41379 (1) obj. -616.646 iterations 1
Cbc0038I Pass   5: suminf.    0.12500 (1) obj. -612.134 iterations 4
Cbc0038I Pass   6: suminf.    0.12500 (1) obj. -612.134 iterations 0
Cbc0038I Pass   7: suminf.    0.39884 (2) obj. -550.679 iterations 5
Cbc0038I Pass   8: suminf.    0.17647 (1) obj. -618.526 iterations 3
Cbc0038I Pass   9: suminf.    0.17647 (1) obj. -618.526 iterations 0
Cbc0038I Pass  10: suminf.    0.45765 (2) obj. -550.679 iterations 4
Cbc0038I Pass  11: suminf.    0.44118 (1) obj. -550.679 iterations 2
Cbc0038I Pass  12: suminf.    0.38889 (1) obj. -584.219 iterations 2
Cbc0038I Pass  13: suminf.    0.45391 (1) obj. -550.679 iterations 4
Cbc0038I Pass  14: suminf.    0.38889 (1) obj. -584.219 iterations 4
Cbc0038I Pass  15: suminf.    0.33333 (1) obj. -595.118 iterations 3
Cbc0038I Pass  16: suminf.    0.44152 (1) obj. -550.679 iterations 2
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -595.118 iterations 2
Cbc0038I Pass  18: suminf.    0.11765 (1) obj. -627.154 iterations 2
Cbc0038I Pass  19: suminf.    0.11765 (1) obj. -627.154 iterations 0
Cbc0038I Pass  20: suminf.    0.48600 (1) obj. -550.679 iterations 3
Cbc0038I Pass  21: suminf.    0.48276 (1) obj. -551.316 iterations 1
Cbc0038I Pass  22: suminf.    0.48276 (1) obj. -551.316 iterations 0
Cbc0038I Pass  23: suminf.    0.06250 (1) obj. -620.305 iterations 2
Cbc0038I Pass  24: suminf.    0.06250 (1) obj. -620.305 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -553.13 iterations 4
Cbc0038I Solution found of -553.13
Cbc0038I Relaxing continuous gives -553.13
Cbc0038I Rounding solution of -563.58 is better than previous of -553.13

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -563.58 to -569.13 (0.01 seconds)
Cbc0038I Round again with cutoff of -592.978
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  26: suminf.    0.33333 (1) obj. -666.965 iterations 0
Cbc0038I Pass  27: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  28: suminf.    0.29182 (1) obj. -592.978 iterations 0
Cbc0038I Pass  29: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  30: suminf.    0.68780 (2) obj. -592.978 iterations 2
Cbc0038I Pass  31: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  32: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  33: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  34: suminf.    0.29182 (1) obj. -592.978 iterations 3
Cbc0038I Pass  35: suminf.    0.33333 (1) obj. -666.965 iterations 1
Cbc0038I Pass  36: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  37: suminf.    0.20548 (2) obj. -592.978 iterations 7
Cbc0038I Pass  38: suminf.    0.20021 (2) obj. -592.978 iterations 1
Cbc0038I Pass  39: suminf.    0.21053 (1) obj. -597.228 iterations 4
Cbc0038I Pass  40: suminf.    0.31401 (1) obj. -592.978 iterations 4
Cbc0038I Pass  41: suminf.    0.11765 (1) obj. -623.588 iterations 2
Cbc0038I Pass  42: suminf.    0.29182 (1) obj. -592.978 iterations 3
Cbc0038I Pass  43: suminf.    0.33333 (1) obj. -666.965 iterations 1
Cbc0038I Pass  44: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  45: suminf.    0.21053 (1) obj. -601.526 iterations 4
Cbc0038I Pass  46: suminf.    0.25610 (1) obj. -592.978 iterations 2
Cbc0038I Pass  47: suminf.    0.22222 (1) obj. -599.665 iterations 1
Cbc0038I Pass  48: suminf.    0.44413 (2) obj. -592.978 iterations 1
Cbc0038I Pass  49: suminf.    0.22222 (1) obj. -599.665 iterations 1
Cbc0038I Pass  50: suminf.    0.93619 (3) obj. -592.978 iterations 2
Cbc0038I Pass  51: suminf.    1.20403 (4) obj. -592.978 iterations 3
Cbc0038I Pass  52: suminf.    0.68780 (2) obj. -592.978 iterations 3
Cbc0038I Pass  53: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  54: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  55: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -569.13 - took 0.01 seconds
Cbc0012I Integer solution of -569.13 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 12 columns, reduced to 8 rows 7 columns
Cbc0031I 7 added rows had average density of 8.4285714
Cbc0013I At root node, 7 cuts changed objective from -688.36504 to -586.67043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 151 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 285 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -569.13, took 952 iterations and 4 nodes (0.09 seconds)
Cbc0032I Strong branching done 22 times (107 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

