Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 20 (-5) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 4.68384e-06 - average 1.3776e-07, 1 fixed columns
Coin0506I Presolve 28 (-6) rows, 17 (-3) columns and 84 (-18) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Coin0511I After Postsolve, objective 280.16287, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Coin0511I After Postsolve, objective 280.16287, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 280.1628745 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 20 columns (19 integer (19 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.14737
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -135.629 iterations 11
Cbc0038I Solution found of -135.629
Cbc0038I Relaxing continuous gives -135.629
Cbc0038I Rounding solution of -155.571 is better than previous of -135.629

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -164.265
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.19245 (1) obj. -164.265 iterations 1
Cbc0038I Pass   3: suminf.    0.19889 (1) obj. -164.265 iterations 1
Cbc0038I Pass   4: suminf.    1.20811 (4) obj. -164.265 iterations 7
Cbc0038I Pass   5: suminf.    0.48256 (3) obj. -164.265 iterations 5
Cbc0038I Pass   6: suminf.    0.95075 (3) obj. -164.265 iterations 5
Cbc0038I Pass   7: suminf.    0.73027 (3) obj. -164.265 iterations 2
Cbc0038I Pass   8: suminf.    1.05301 (4) obj. -164.265 iterations 4
Cbc0038I Pass   9: suminf.    0.93952 (3) obj. -164.265 iterations 1
Cbc0038I Pass  10: suminf.    0.89824 (3) obj. -164.265 iterations 2
Cbc0038I Pass  11: suminf.    1.26261 (6) obj. -164.265 iterations 6
Cbc0038I Pass  12: suminf.    1.22815 (4) obj. -164.265 iterations 1
Cbc0038I Pass  13: suminf.    1.27855 (3) obj. -164.265 iterations 3
Cbc0038I Pass  14: suminf.    1.27855 (3) obj. -164.265 iterations 0
Cbc0038I Pass  15: suminf.    1.06964 (5) obj. -164.265 iterations 4
Cbc0038I Pass  16: suminf.    1.20155 (3) obj. -164.265 iterations 4
Cbc0038I Pass  17: suminf.    1.20155 (3) obj. -164.265 iterations 0
Cbc0038I Pass  18: suminf.    0.72541 (3) obj. -164.265 iterations 4
Cbc0038I Pass  19: suminf.    0.72541 (3) obj. -164.265 iterations 0
Cbc0038I Pass  20: suminf.    1.20558 (4) obj. -164.265 iterations 6
Cbc0038I Pass  21: suminf.    1.16737 (5) obj. -164.265 iterations 2
Cbc0038I Pass  22: suminf.    1.34808 (3) obj. -164.265 iterations 3
Cbc0038I Pass  23: suminf.    0.70742 (3) obj. -164.265 iterations 4
Cbc0038I Pass  24: suminf.    1.41308 (4) obj. -164.265 iterations 4
Cbc0038I Pass  25: suminf.    1.41308 (4) obj. -164.265 iterations 0
Cbc0038I Pass  26: suminf.    1.45917 (5) obj. -164.265 iterations 2
Cbc0038I Pass  27: suminf.    1.16737 (5) obj. -164.265 iterations 3
Cbc0038I Pass  28: suminf.    1.34808 (3) obj. -164.265 iterations 3
Cbc0038I Pass  29: suminf.    0.70742 (3) obj. -164.265 iterations 4
Cbc0038I Pass  30: suminf.    1.41308 (4) obj. -164.265 iterations 4
Cbc0038I Pass  31: suminf.    1.41308 (4) obj. -164.265 iterations 0
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -179.913
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.34311 (3) obj. -179.913 iterations 2
Cbc0038I Pass  32: suminf.    0.42571 (2) obj. -179.913 iterations 3
Cbc0038I Pass  33: suminf.    0.42571 (2) obj. -179.913 iterations 0
Cbc0038I Pass  34: suminf.    0.46583 (4) obj. -179.913 iterations 4
Cbc0038I Pass  35: suminf.    0.45657 (3) obj. -179.913 iterations 1
Cbc0038I Pass  36: suminf.    0.57323 (2) obj. -179.913 iterations 3
Cbc0038I Pass  37: suminf.    0.57323 (2) obj. -179.913 iterations 0
Cbc0038I Pass  38: suminf.    0.60647 (3) obj. -179.913 iterations 2
Cbc0038I Pass  39: suminf.    0.60647 (3) obj. -179.913 iterations 0
Cbc0038I Pass  40: suminf.    0.80916 (2) obj. -179.913 iterations 2
Cbc0038I Pass  41: suminf.    0.80916 (2) obj. -179.913 iterations 0
Cbc0038I Pass  42: suminf.    0.80758 (3) obj. -179.913 iterations 2
Cbc0038I Pass  43: suminf.    0.80758 (3) obj. -179.913 iterations 0
Cbc0038I Pass  44: suminf.    0.88743 (2) obj. -179.913 iterations 2
Cbc0038I Pass  45: suminf.    0.88743 (2) obj. -179.913 iterations 0
Cbc0038I Pass  46: suminf.    0.72885 (3) obj. -179.913 iterations 2
Cbc0038I Pass  47: suminf.    0.72885 (3) obj. -179.913 iterations 0
Cbc0038I Pass  48: suminf.    1.02316 (3) obj. -179.913 iterations 2
Cbc0038I Pass  49: suminf.    0.99363 (3) obj. -179.913 iterations 1
Cbc0038I Pass  50: suminf.    0.98604 (4) obj. -179.913 iterations 4
Cbc0038I Pass  51: suminf.    0.95178 (5) obj. -179.913 iterations 1
Cbc0038I Pass  52: suminf.    1.29806 (4) obj. -179.913 iterations 3
Cbc0038I Pass  53: suminf.    1.07285 (3) obj. -179.913 iterations 3
Cbc0038I Pass  54: suminf.    1.05821 (4) obj. -179.913 iterations 2
Cbc0038I Pass  55: suminf.    1.05821 (4) obj. -179.913 iterations 0
Cbc0038I Pass  56: suminf.    3.12996 (8) obj. -179.913 iterations 8
Cbc0038I Pass  57: suminf.    2.04341 (6) obj. -179.913 iterations 4
Cbc0038I Pass  58: suminf.    1.80142 (7) obj. -179.913 iterations 4
Cbc0038I Pass  59: suminf.    0.93960 (4) obj. -179.913 iterations 5
Cbc0038I Pass  60: suminf.    0.93960 (4) obj. -179.913 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -155.572 - took 0.02 seconds
Cbc0012I Integer solution of -155.5715 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 20 columns, reduced to 12 rows 10 columns
Cbc0012I Integer solution of -184.7715 found by DiveCoefficient after 90 iterations and 0 nodes (0.04 seconds)
Cbc0031I 7 added rows had average density of 10.714286
Cbc0013I At root node, 7 cuts changed objective from -242.5048 to -184.7715 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 124 row cuts average 3.8 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 80 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -184.7715, took 90 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

