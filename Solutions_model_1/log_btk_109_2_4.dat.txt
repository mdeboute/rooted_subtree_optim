Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 212 (-8) rows, 109 (-2) columns and 530 (-14) elements
Clp1000I sum of infeasibilities 0.0656584 - average 0.00030971, 39 fixed columns
Coin0506I Presolve 126 (-86) rows, 70 (-39) columns and 319 (-211) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.25372275 - largest nonzero change 0 ( 0%) - largest zero change 2.9415753e-05
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Coin0511I After Postsolve, objective 26618.954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2143605 - largest nonzero change 2.3390799e-05 ( 0.0023390799%) - largest zero change 2.920788e-05
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Coin0511I After Postsolve, objective 26618.954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26618.95411 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 212 rows, 109 columns (108 integer (108 of which binary)) and 530 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.884%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 25.3561
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10502.8 iterations 85
Cbc0038I Solution found of -10502.8
Cbc0038I Relaxing continuous gives -10502.8
Cbc0038I Rounding solution of -15459.2 is better than previous of -10502.8

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 109 columns, reduced to 126 rows 70 columns - 7 fixed gives 88, 60 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 88 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -15459.2 to -19727.8 (0.07 seconds)
Cbc0038I Round again with cutoff of -20416.9
Cbc0038I Pass   2: suminf.    3.61051 (11) obj. -20416.9 iterations 23
Cbc0038I Pass   3: suminf.    3.61051 (11) obj. -20416.9 iterations 0
Cbc0038I Pass   4: suminf.    2.04216 (6) obj. -20416.9 iterations 24
Cbc0038I Pass   5: suminf.    0.65087 (3) obj. -20416.9 iterations 6
Cbc0038I Pass   6: suminf.    0.51369 (3) obj. -20416.9 iterations 2
Cbc0038I Pass   7: suminf.    1.53014 (5) obj. -20416.9 iterations 4
Cbc0038I Pass   8: suminf.    0.64379 (3) obj. -20416.9 iterations 3
Cbc0038I Pass   9: suminf.    3.53870 (14) obj. -20416.9 iterations 23
Cbc0038I Pass  10: suminf.    1.93433 (7) obj. -20416.9 iterations 15
Cbc0038I Pass  11: suminf.    2.08942 (5) obj. -20416.9 iterations 14
Cbc0038I Pass  12: suminf.    0.64160 (7) obj. -20416.9 iterations 4
Cbc0038I Pass  13: suminf.    0.64160 (7) obj. -20416.9 iterations 0
Cbc0038I Pass  14: suminf.    2.03701 (6) obj. -20416.9 iterations 6
Cbc0038I Pass  15: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  16: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  17: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  18: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  19: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  20: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  21: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  22: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  23: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  24: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  25: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  26: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  27: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  28: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  29: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  30: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  31: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 109 columns, reduced to 133 rows 72 columns - 18 fixed gives 85, 54 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 85 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -19727.8 - took 0.09 seconds
Cbc0012I Integer solution of -19727.827 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 212 rows 109 columns, reduced to 126 rows 70 columns - 17 fixed gives 84, 53 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 84 rows 53 columns
Cbc0031I 23 added rows had average density of 67.26087
Cbc0013I At root node, 23 cuts changed objective from -26618.954 to -23119.202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16133 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1642 row cuts average 96.5 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 85.2 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19727.827 best solution, best possible -23119.202 (1.13 seconds)
Cbc0012I Integer solution of -19733.474 found by rounding after 6578 iterations and 36 nodes (1.37 seconds)
Cbc0038I Full problem 212 rows 109 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 212 rows 109 columns, reduced to 1 rows 5 columns
Cbc0001I Search completed - best objective -19733.47427, took 7225 iterations and 100 nodes (1.44 seconds)
Cbc0032I Strong branching done 868 times (16642 iterations), fathomed 30 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 266 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.45

