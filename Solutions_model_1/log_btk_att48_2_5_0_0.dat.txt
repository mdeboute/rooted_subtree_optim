Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 48 (-2) columns and 274 (-11) elements
Clp1000I sum of infeasibilities 0.0026279 - average 2.8257e-05, 33 fixed columns
Coin0506I Presolve 15 (-78) rows, 15 (-33) columns and 42 (-232) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 159725.38
Clp0000I Optimal - objective value 159725.38
Coin0511I After Postsolve, objective 159725.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306143 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 159725.38
Clp0000I Optimal - objective value 159725.38
Clp0000I Optimal - objective value 159725.38
Coin0511I After Postsolve, objective 159725.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 159725.3781 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 48 columns (47 integer (47 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -158644 iterations 19
Cbc0038I Solution found of -158644
Cbc0038I Relaxing continuous gives -158644
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -158644 to -158845 (0.01 seconds)
Cbc0038I Round again with cutoff of -158933
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08112 (2) obj. -158933 iterations 1
Cbc0038I Solution found of -158945
Cbc0038I Relaxing continuous gives -158945
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -159101
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass   3: suminf.    0.06926 (2) obj. -159101 iterations 1
Cbc0038I Pass   4: suminf.    0.06926 (2) obj. -159101 iterations 7
Cbc0038I Pass   5: suminf.    0.67386 (4) obj. -159101 iterations 22
Cbc0038I Pass   6: suminf.    0.39479 (3) obj. -159101 iterations 9
Cbc0038I Pass   7: suminf.    0.24511 (2) obj. -159101 iterations 1
Cbc0038I Pass   8: suminf.    1.29852 (6) obj. -159101 iterations 6
Cbc0038I Pass   9: suminf.    0.06926 (2) obj. -159101 iterations 7
Cbc0038I Pass  10: suminf.    0.06926 (2) obj. -159101 iterations 0
Cbc0038I Pass  11: suminf.    0.67386 (4) obj. -159101 iterations 23
Cbc0038I Pass  12: suminf.    0.39479 (3) obj. -159101 iterations 9
Cbc0038I Pass  13: suminf.    0.24511 (2) obj. -159101 iterations 1
Cbc0038I Pass  14: suminf.    0.31236 (3) obj. -159101 iterations 3
Cbc0038I Pass  15: suminf.    0.19023 (2) obj. -159101 iterations 2
Cbc0038I Pass  16: suminf.    0.19023 (2) obj. -159101 iterations 2
Cbc0038I Pass  17: suminf.    0.19023 (2) obj. -159101 iterations 2
Cbc0038I Pass  18: suminf.    0.67386 (4) obj. -159101 iterations 15
Cbc0038I Pass  19: suminf.    0.39479 (3) obj. -159101 iterations 9
Cbc0038I Pass  20: suminf.    0.24511 (2) obj. -159101 iterations 1
Cbc0038I Pass  21: suminf.    2.00000 (15) obj. -159101 iterations 24
Cbc0038I Pass  22: suminf.    1.00000 (8) obj. -159101 iterations 17
Cbc0038I Pass  23: suminf.    1.00000 (8) obj. -159101 iterations 0
Cbc0038I Pass  24: suminf.    1.02294 (5) obj. -159101 iterations 15
Cbc0038I Pass  25: suminf.    0.14096 (2) obj. -159101 iterations 12
Cbc0038I Pass  26: suminf.    0.14096 (2) obj. -159101 iterations 7
Cbc0038I Pass  27: suminf.    0.82943 (4) obj. -159101 iterations 35
Cbc0038I Pass  28: suminf.    0.49976 (3) obj. -159101 iterations 9
Cbc0038I Pass  29: suminf.    0.39763 (4) obj. -159101 iterations 2
Cbc0038I Pass  30: suminf.    0.99596 (2) obj. -159101 iterations 16
Cbc0038I Pass  31: suminf.    0.99596 (2) obj. -159101 iterations 0
Cbc0038I Pass  32: suminf.    0.14096 (2) obj. -159101 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 38 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -158945 to -158952 (0.02 seconds)
Cbc0038I Round again with cutoff of -159288
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 4
Cbc0038I Pass  32: suminf.    0.15237 (2) obj. -159288 iterations 0
Cbc0038I Pass  33: suminf.    0.15237 (2) obj. -159288 iterations 7
Cbc0038I Pass  34: suminf.    0.85419 (4) obj. -159288 iterations 20
Cbc0038I Pass  35: suminf.    0.51647 (3) obj. -159288 iterations 9
Cbc0038I Pass  36: suminf.    0.44053 (4) obj. -159288 iterations 2
Cbc0038I Pass  37: suminf.    1.00000 (3) obj. -159288 iterations 17
Cbc0038I Pass  38: suminf.    1.00000 (3) obj. -159288 iterations 0
Cbc0038I Pass  39: suminf.    0.50300 (5) obj. -159288 iterations 12
Cbc0038I Pass  40: suminf.    0.41666 (5) obj. -159288 iterations 9
Cbc0038I Pass  41: suminf.    1.08325 (5) obj. -159288 iterations 13
Cbc0038I Pass  42: suminf.    1.00000 (3) obj. -159288 iterations 4
Cbc0038I Pass  43: suminf.    0.50300 (5) obj. -159288 iterations 11
Cbc0038I Pass  44: suminf.    1.00000 (10) obj. -159288 iterations 18
Cbc0038I Pass  45: suminf.    0.15237 (2) obj. -159288 iterations 16
Cbc0038I Pass  46: suminf.    0.15237 (2) obj. -159288 iterations 8
Cbc0038I Pass  47: suminf.    0.85419 (4) obj. -159288 iterations 19
Cbc0038I Pass  48: suminf.    0.51647 (3) obj. -159288 iterations 10
Cbc0038I Pass  49: suminf.    0.44053 (4) obj. -159288 iterations 2
Cbc0038I Pass  50: suminf.    1.00000 (3) obj. -159288 iterations 18
Cbc0038I Pass  51: suminf.    1.00000 (3) obj. -159288 iterations 0
Cbc0038I Pass  52: suminf.    0.50300 (5) obj. -159288 iterations 12
Cbc0038I Pass  53: suminf.    0.41666 (5) obj. -159288 iterations 9
Cbc0038I Pass  54: suminf.    1.08325 (5) obj. -159288 iterations 13
Cbc0038I Pass  55: suminf.    1.00000 (3) obj. -159288 iterations 3
Cbc0038I Pass  56: suminf.    0.50300 (5) obj. -159288 iterations 11
Cbc0038I Pass  57: suminf.    0.58015 (5) obj. -159288 iterations 4
Cbc0038I Pass  58: suminf.    0.58015 (5) obj. -159288 iterations 7
Cbc0038I Pass  59: suminf.    1.08325 (5) obj. -159288 iterations 15
Cbc0038I Pass  60: suminf.    1.00000 (3) obj. -159288 iterations 4
Cbc0038I Pass  61: suminf.    0.58015 (5) obj. -159288 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -158952 - took 0.02 seconds
Cbc0012I Integer solution of -158952.31 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 93 rows 48 columns, reduced to 11 rows 11 columns
Cbc0031I 5 added rows had average density of 8.2
Cbc0013I At root node, 5 cuts changed objective from -159725.38 to -158964.7 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 84 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 12.392296 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -158952.3100000001, took 68 iterations and 0 nodes (0.20 seconds)
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.20

