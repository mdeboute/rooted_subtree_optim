Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 38 (-25) rows, 22 (-10) columns and 113 (-64) elements
Clp0000I Optimal - objective value 96.864853
Coin0511I After Postsolve, objective 96.864853, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.86485322 - 23 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.84298
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.5 iterations 10
Cbc0038I Solution found of -18.5
Cbc0038I Relaxing continuous gives -18.5
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -18.5 to -46 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.5364
Cbc0038I Pass   2: suminf.    0.45842 (1) obj. -51.5364 iterations 1
Cbc0038I Pass   3: suminf.    0.25806 (1) obj. -51.5364 iterations 1
Cbc0038I Pass   4: suminf.    0.25806 (1) obj. -51.5364 iterations 2
Cbc0038I Pass   5: suminf.    0.25806 (1) obj. -51.5364 iterations 2
Cbc0038I Pass   6: suminf.    0.68733 (4) obj. -51.5364 iterations 4
Cbc0038I Pass   7: suminf.    0.51319 (2) obj. -51.5364 iterations 2
Cbc0038I Pass   8: suminf.    0.51319 (2) obj. -51.5364 iterations 0
Cbc0038I Pass   9: suminf.    0.51319 (2) obj. -51.5364 iterations 0
Cbc0038I Pass  10: suminf.    0.45842 (1) obj. -51.5364 iterations 2
Cbc0038I Pass  11: suminf.    0.53817 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  12: suminf.    0.29032 (1) obj. -51.5364 iterations 2
Cbc0038I Pass  13: suminf.    0.45842 (1) obj. -51.5364 iterations 1
Cbc0038I Pass  14: suminf.    1.06166 (4) obj. -51.5364 iterations 7
Cbc0038I Pass  15: suminf.    0.43296 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  16: suminf.    1.01325 (4) obj. -51.5364 iterations 7
Cbc0038I Pass  17: suminf.    0.47724 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  18: suminf.    0.66521 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  19: suminf.    0.66521 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  20: suminf.    1.22694 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  21: suminf.    1.22694 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  22: suminf.    1.56128 (4) obj. -51.5364 iterations 2
Cbc0038I Pass  23: suminf.    1.16722 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  24: suminf.    0.59851 (2) obj. -51.5364 iterations 2
Cbc0038I Pass  25: suminf.    0.59851 (2) obj. -51.5364 iterations 0
Cbc0038I Pass  26: suminf.    0.68860 (3) obj. -51.5364 iterations 2
Cbc0038I Pass  27: suminf.    0.91195 (4) obj. -51.5364 iterations 5
Cbc0038I Pass  28: suminf.    0.74402 (3) obj. -51.5364 iterations 1
Cbc0038I Pass  29: suminf.    0.70502 (3) obj. -51.5364 iterations 3
Cbc0038I Pass  30: suminf.    0.70502 (3) obj. -51.5364 iterations 0
Cbc0038I Pass  31: suminf.    1.12714 (3) obj. -51.5364 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -46 to -49.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -60.6021
Cbc0038I Pass  31: suminf.    0.30980 (1) obj. -60.6021 iterations 0
Cbc0038I Pass  32: suminf.    0.25806 (1) obj. -60.6021 iterations 1
Cbc0038I Pass  33: suminf.    1.93585 (7) obj. -60.6021 iterations 5
Cbc0038I Pass  34: suminf.    1.30407 (6) obj. -60.6021 iterations 7
Cbc0038I Pass  35: suminf.    1.47503 (4) obj. -60.6021 iterations 4
Cbc0038I Pass  36: suminf.    1.07290 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  37: suminf.    0.51925 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  38: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  39: suminf.    0.43184 (2) obj. -60.6021 iterations 3
Cbc0038I Pass  40: suminf.    0.43184 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  41: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  42: suminf.    1.06426 (3) obj. -60.6021 iterations 8
Cbc0038I Pass  43: suminf.    1.06426 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  44: suminf.    0.71734 (4) obj. -60.6021 iterations 2
Cbc0038I Pass  45: suminf.    0.29032 (1) obj. -60.6021 iterations 3
Cbc0038I Pass  46: suminf.    0.30980 (1) obj. -60.6021 iterations 1
Cbc0038I Pass  47: suminf.    2.99649 (9) obj. -60.6021 iterations 11
Cbc0038I Pass  48: suminf.    1.56783 (4) obj. -60.6021 iterations 4
Cbc0038I Pass  49: suminf.    1.56783 (4) obj. -60.6021 iterations 0
Cbc0038I Pass  50: suminf.    0.43759 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  51: suminf.    0.51925 (2) obj. -60.6021 iterations 2
Cbc0038I Pass  52: suminf.    0.51925 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  53: suminf.    0.69760 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  54: suminf.    0.52515 (2) obj. -60.6021 iterations 5
Cbc0038I Pass  55: suminf.    0.52515 (2) obj. -60.6021 iterations 0
Cbc0038I Pass  56: suminf.    0.92480 (3) obj. -60.6021 iterations 2
Cbc0038I Pass  57: suminf.    0.92480 (3) obj. -60.6021 iterations 0
Cbc0038I Pass  58: suminf.    1.30340 (3) obj. -60.6021 iterations 1
Cbc0038I Pass  59: suminf.    1.00681 (5) obj. -60.6021 iterations 7
Cbc0038I Pass  60: suminf.    0.85904 (4) obj. -60.6021 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -49.5 - took 0.03 seconds
Cbc0012I Integer solution of -49.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -96.864853 to -54.557901 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 231 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -49.5, took 839 iterations and 0 nodes (0.11 seconds)
Cbc0032I Strong branching done 4 times (5 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

