Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 29 (-3) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 4.97127e-06 - average 9.94254e-08, 0 fixed columns
Coin0506I Presolve 50 (0) rows, 29 (0) columns and 150 (0) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Coin0511I After Postsolve, objective 94.227168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Coin0511I After Postsolve, objective 94.227168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.22716781 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.37408
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23.1413 iterations 20
Cbc0038I Solution found of -23.1413
Cbc0038I Relaxing continuous gives -23.1413
Cbc0038I Rounding solution of -26.3629 is better than previous of -23.1413

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -26.3629 to -36.155 (0.03 seconds)
Cbc0038I Round again with cutoff of -41.9478
Cbc0038I Pass   2: suminf.    0.48808 (2) obj. -41.9478 iterations 3
Cbc0038I Pass   3: suminf.    0.39433 (1) obj. -41.9478 iterations 2
Cbc0038I Pass   4: suminf.    0.23011 (1) obj. -41.9478 iterations 1
Cbc0038I Pass   5: suminf.    1.44538 (5) obj. -41.9478 iterations 4
Cbc0038I Pass   6: suminf.    1.27793 (4) obj. -41.9478 iterations 1
Cbc0038I Pass   7: suminf.    0.23698 (1) obj. -41.9478 iterations 4
Cbc0038I Pass   8: suminf.    0.48808 (2) obj. -41.9478 iterations 2
Cbc0038I Pass   9: suminf.    0.39433 (1) obj. -41.9478 iterations 2
Cbc0038I Pass  10: suminf.    0.23011 (1) obj. -41.9478 iterations 1
Cbc0038I Pass  11: suminf.    1.51056 (5) obj. -41.9478 iterations 5
Cbc0038I Pass  12: suminf.    1.40052 (5) obj. -41.9478 iterations 2
Cbc0038I Pass  13: suminf.    1.62033 (5) obj. -41.9478 iterations 4
Cbc0038I Pass  14: suminf.    1.24987 (4) obj. -41.9478 iterations 2
Cbc0038I Pass  15: suminf.    0.45890 (3) obj. -41.9478 iterations 7
Cbc0038I Pass  16: suminf.    1.85037 (8) obj. -41.9478 iterations 8
Cbc0038I Pass  17: suminf.    1.85037 (8) obj. -41.9478 iterations 0
Cbc0038I Pass  18: suminf.    1.25586 (3) obj. -41.9478 iterations 11
Cbc0038I Pass  19: suminf.    0.77412 (4) obj. -41.9478 iterations 3
Cbc0038I Pass  20: suminf.    1.14546 (3) obj. -41.9478 iterations 4
Cbc0038I Pass  21: suminf.    1.12008 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  22: suminf.    0.76291 (3) obj. -41.9478 iterations 3
Cbc0038I Pass  23: suminf.    0.62536 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  24: suminf.    2.14194 (6) obj. -41.9478 iterations 8
Cbc0038I Pass  25: suminf.    1.08016 (5) obj. -41.9478 iterations 4
Cbc0038I Pass  26: suminf.    1.25586 (3) obj. -41.9478 iterations 5
Cbc0038I Pass  27: suminf.    0.77412 (4) obj. -41.9478 iterations 3
Cbc0038I Pass  28: suminf.    1.14546 (3) obj. -41.9478 iterations 4
Cbc0038I Pass  29: suminf.    1.12008 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  30: suminf.    0.76291 (3) obj. -41.9478 iterations 3
Cbc0038I Pass  31: suminf.    0.62536 (3) obj. -41.9478 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -36.155 - took 0.04 seconds
Cbc0012I Integer solution of -36.15502 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 29 columns, reduced to 37 rows 23 columns
Cbc0031I 14 added rows had average density of 16.357143
Cbc0013I At root node, 14 cuts changed objective from -94.081856 to -66.319455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2455 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 782 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 125 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -37.84508 found by DiveCoefficient after 2817 iterations and 6 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -37.84508, took 3448 iterations and 22 nodes (0.33 seconds)
Cbc0032I Strong branching done 310 times (3800 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

