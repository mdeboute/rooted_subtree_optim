Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 18 fixed columns
Coin0506I Presolve 4 (-34) rows, 3 (-19) columns and 8 (-104) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 10656.847
Clp0000I Optimal - objective value 10656.847
Coin0511I After Postsolve, objective 10656.847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 10656.847
Clp0000I Optimal - objective value 10656.847
Clp0000I Optimal - objective value 10656.847
Coin0511I After Postsolve, objective 10656.847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10656.84741 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.848%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.238095
Cbc0038I Pass   1: suminf.    0.08501 (1) obj. -10386.9 iterations 3
Cbc0038I Solution found of -5164.43
Cbc0038I Relaxing continuous gives -5175.27
Cbc0038I Rounding solution of -5296.1 is better than previous of -5175.27

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -5808.18
Cbc0038I Pass   2: suminf.    0.08501 (1) obj. -10386.9 iterations 0
Cbc0038I Pass   3: suminf.    0.11089 (1) obj. -5808.18 iterations 2
Cbc0038I Pass   4: suminf.    0.29591 (3) obj. -5808.18 iterations 7
Cbc0038I Pass   5: suminf.    0.29591 (3) obj. -5808.18 iterations 2
Cbc0038I Pass   6: suminf.    0.17001 (1) obj. -9982.51 iterations 6
Cbc0038I Pass   7: suminf.    0.09816 (1) obj. -5808.18 iterations 2
Cbc0038I Pass   8: suminf.    0.21563 (2) obj. -5808.18 iterations 2
Cbc0038I Pass   9: suminf.    0.21563 (2) obj. -5808.18 iterations 0
Cbc0038I Pass  10: suminf.    0.08501 (1) obj. -10386.9 iterations 3
Cbc0038I Pass  11: suminf.    0.11089 (1) obj. -5808.18 iterations 2
Cbc0038I Pass  12: suminf.    0.09366 (1) obj. -5808.18 iterations 2
Cbc0038I Pass  13: suminf.    0.30942 (1) obj. -9215.17 iterations 1
Cbc0038I Pass  14: suminf.    0.09366 (1) obj. -5808.18 iterations 1
Cbc0038I Pass  15: suminf.    0.34556 (4) obj. -5808.18 iterations 6
Cbc0038I Pass  16: suminf.    0.34556 (4) obj. -5808.18 iterations 0
Cbc0038I Pass  17: suminf.    0.41142 (1) obj. -8609.29 iterations 4
Cbc0038I Pass  18: suminf.    0.09781 (1) obj. -5808.18 iterations 1
Cbc0038I Pass  19: suminf.    0.10945 (3) obj. -5808.18 iterations 9
Cbc0038I Pass  20: suminf.    0.10945 (3) obj. -5808.18 iterations 1
Cbc0038I Pass  21: suminf.    0.14655 (1) obj. -6348.71 iterations 3
Cbc0038I Pass  22: suminf.    0.05185 (1) obj. -5808.18 iterations 1
Cbc0038I Pass  23: suminf.    0.09111 (2) obj. -5808.18 iterations 3
Cbc0038I Pass  24: suminf.    0.09111 (2) obj. -5808.18 iterations 1
Cbc0038I Pass  25: suminf.    0.08705 (1) obj. -6063.76 iterations 2
Cbc0038I Pass  26: suminf.    0.04227 (1) obj. -5808.18 iterations 1
Cbc0038I Pass  27: suminf.    0.03987 (1) obj. -5808.18 iterations 3
Cbc0038I Pass  28: suminf.    0.03987 (1) obj. -5808.18 iterations 1
Cbc0038I Pass  29: suminf.    0.16525 (1) obj. -6523.78 iterations 1
Cbc0038I Pass  30: suminf.    0.11982 (2) obj. -5808.18 iterations 6
Cbc0038I Pass  31: suminf.    0.11982 (2) obj. -5808.18 iterations 1
Cbc0038I Rounding solution of -5746.6 is better than previous of -5296.1

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6729.93
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.08501 (1) obj. -10386.9 iterations 0
Cbc0038I Pass  32: suminf.    0.27238 (1) obj. -6729.93 iterations 2
Cbc0038I Pass  33: suminf.    0.72758 (3) obj. -6729.93 iterations 6
Cbc0038I Pass  34: suminf.    0.28115 (1) obj. -6729.93 iterations 3
Cbc0038I Pass  35: suminf.    0.34342 (1) obj. -8872.76 iterations 1
Cbc0038I Pass  36: suminf.    0.91527 (4) obj. -6729.93 iterations 9
Cbc0038I Pass  37: suminf.    0.91527 (4) obj. -6729.93 iterations 3
Cbc0038I Pass  38: suminf.    0.27576 (1) obj. -6967.51 iterations 4
Cbc0038I Pass  39: suminf.    0.23413 (1) obj. -6729.93 iterations 1
Cbc0038I Pass  40: suminf.    1.19294 (5) obj. -6729.93 iterations 8
Cbc0038I Pass  41: suminf.    0.41823 (1) obj. -8584.14 iterations 4
Cbc0038I Pass  42: suminf.    0.25691 (1) obj. -6729.93 iterations 1
Cbc0038I Pass  43: suminf.    0.47539 (2) obj. -6729.93 iterations 8
Cbc0038I Pass  44: suminf.    0.47539 (2) obj. -6729.93 iterations 2
Cbc0038I Pass  45: suminf.    0.44883 (1) obj. -8534.14 iterations 2
Cbc0038I Pass  46: suminf.    0.23507 (1) obj. -6729.93 iterations 1
Cbc0038I Pass  47: suminf.    0.82956 (4) obj. -6729.93 iterations 4
Cbc0038I Pass  48: suminf.    0.82956 (4) obj. -6729.93 iterations 1
Cbc0038I Pass  49: suminf.    0.44917 (1) obj. -7991.27 iterations 3
Cbc0038I Pass  50: suminf.    0.22817 (1) obj. -6729.93 iterations 1
Cbc0038I Pass  51: suminf.    0.49880 (2) obj. -6729.93 iterations 6
Cbc0038I Pass  52: suminf.    0.28732 (1) obj. -9332.64 iterations 2
Cbc0038I Pass  53: suminf.    0.25667 (1) obj. -6729.93 iterations 1
Cbc0038I Pass  54: suminf.    0.24102 (1) obj. -6729.93 iterations 4
Cbc0038I Pass  55: suminf.    0.24102 (1) obj. -6729.93 iterations 1
Cbc0038I Pass  56: suminf.    0.39816 (1) obj. -7626.83 iterations 1
Cbc0038I Pass  57: suminf.    0.69139 (3) obj. -6729.93 iterations 3
Cbc0038I Pass  58: suminf.    0.69139 (3) obj. -6729.93 iterations 0
Cbc0038I Pass  59: suminf.    0.37776 (1) obj. -7510.39 iterations 2
Cbc0038I Pass  60: suminf.    0.24102 (1) obj. -6729.93 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5746.6 - took 0.01 seconds
Cbc0012I Integer solution of -5746.6026 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5768.9357 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 7 rows 7 columns
Cbc0031I 8 added rows had average density of 15.5
Cbc0013I At root node, 8 cuts changed objective from -10416.944 to -5793.4608 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 235 row cuts average 4.7 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 394 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 3 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.782 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5768.9357 best solution, best possible -5793.4608 (1.50 seconds)
Cbc0012I Integer solution of -5769.6023 found by rounding after 1205 iterations and 5 nodes (1.52 seconds)
Cbc0012I Integer solution of -5769.6026 found by rounding after 1255 iterations and 8 nodes (1.52 seconds)
Cbc0001I Search completed - best objective -5769.602600000001, took 1284 iterations and 10 nodes (1.52 seconds)
Cbc0032I Strong branching done 86 times (548 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       1.53

