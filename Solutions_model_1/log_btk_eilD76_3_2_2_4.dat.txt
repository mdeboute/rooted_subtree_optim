Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 1.01511e-06 - average 7.6902e-09, 6 fixed columns
Coin0506I Presolve 120 (-12) rows, 70 (-6) columns and 372 (-36) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 2.7660917 - largest nonzero change 0 ( 0%) - largest zero change 2.4776433e-05
Clp0000I Optimal - objective value 60.554956
Clp0000I Optimal - objective value 60.554956
Coin0511I After Postsolve, objective 60.554956, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.554956
Clp0000I Optimal - objective value 60.554956
Clp0000I Optimal - objective value 60.554956
Coin0511I After Postsolve, objective 60.554956, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.55495573 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.082
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.0612 iterations 50
Cbc0038I Solution found of 3.0612
Cbc0038I Relaxing continuous gives 3.0612
Cbc0038I Rounding solution of -34.4118 is better than previous of 3.0612

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 70 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -34.4118 to -34.6398 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.2314
Cbc0038I Pass   2: suminf.    4.62055 (13) obj. -37.2314 iterations 16
Cbc0038I Pass   3: suminf.    4.04695 (10) obj. -37.2314 iterations 7
Cbc0038I Pass   4: suminf.    1.55247 (7) obj. -37.2314 iterations 10
Cbc0038I Pass   5: suminf.    1.35784 (6) obj. -37.2314 iterations 2
Cbc0038I Pass   6: suminf.    1.31740 (6) obj. -37.2314 iterations 1
Cbc0038I Pass   7: suminf.    1.27671 (5) obj. -37.2314 iterations 7
Cbc0038I Pass   8: suminf.    1.22946 (6) obj. -37.2314 iterations 2
Cbc0038I Pass   9: suminf.    2.15032 (8) obj. -37.2314 iterations 11
Cbc0038I Pass  10: suminf.    1.20518 (6) obj. -37.2314 iterations 6
Cbc0038I Pass  11: suminf.    1.65022 (7) obj. -37.2314 iterations 7
Cbc0038I Pass  12: suminf.    0.87287 (5) obj. -37.2314 iterations 5
Cbc0038I Pass  13: suminf.    1.96146 (7) obj. -37.2314 iterations 9
Cbc0038I Pass  14: suminf.    3.44055 (11) obj. -37.2314 iterations 18
Cbc0038I Pass  15: suminf.    2.27560 (8) obj. -37.2314 iterations 8
Cbc0038I Pass  16: suminf.    2.27560 (8) obj. -37.2314 iterations 0
Cbc0038I Pass  17: suminf.    3.92780 (11) obj. -37.2314 iterations 16
Cbc0038I Pass  18: suminf.    1.62457 (6) obj. -37.2314 iterations 9
Cbc0038I Pass  19: suminf.    1.28181 (6) obj. -37.2314 iterations 3
Cbc0038I Pass  20: suminf.    2.34080 (7) obj. -37.2314 iterations 6
Cbc0038I Pass  21: suminf.    1.77461 (6) obj. -37.2314 iterations 2
Cbc0038I Pass  22: suminf.    1.75913 (7) obj. -37.2314 iterations 1
Cbc0038I Pass  23: suminf.    1.48991 (6) obj. -37.2314 iterations 6
Cbc0038I Pass  24: suminf.    1.46131 (6) obj. -37.2314 iterations 2
Cbc0038I Pass  25: suminf.    1.77461 (6) obj. -37.2314 iterations 8
Cbc0038I Pass  26: suminf.    2.83426 (11) obj. -37.2314 iterations 26
Cbc0038I Pass  27: suminf.    2.07321 (8) obj. -37.2314 iterations 4
Cbc0038I Pass  28: suminf.    3.52755 (9) obj. -37.2314 iterations 11
Cbc0038I Pass  29: suminf.    3.52755 (9) obj. -37.2314 iterations 0
Cbc0038I Pass  30: suminf.    3.10689 (8) obj. -37.2314 iterations 5
Cbc0038I Pass  31: suminf.    2.64807 (8) obj. -37.2314 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 87 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -34.6398 - took 0.07 seconds
Cbc0012I Integer solution of -34.63975 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 70 rows 43 columns
Cbc0031I 23 added rows had average density of 66.73913
Cbc0013I At root node, 23 cuts changed objective from -60.554956 to -52.802057 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12708 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2404 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 181 row cuts average 60.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.63975 best solution, best possible -52.802057 (0.92 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 12 rows 17 columns
Cbc0038I Full problem 132 rows 76 columns, reduced to 7 rows 10 columns
Cbc0001I Search completed - best objective -34.63975000000001, took 11419 iterations and 100 nodes (1.39 seconds)
Cbc0032I Strong branching done 914 times (17733 iterations), fathomed 7 nodes and fixed 34 variables
Cbc0035I Maximum depth 31, 322 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.41

