Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 4.03087e-05 - average 3.077e-07, 16 fixed columns
Coin0506I Presolve 97 (-34) rows, 57 (-17) columns and 300 (-102) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Coin0511I After Postsolve, objective 84.057075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Coin0511I After Postsolve, objective 84.057075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.05707533 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.9363
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.45878 iterations 47
Cbc0038I Solution found of 1.45878
Cbc0038I Relaxing continuous gives 1.45878
Cbc0038I Rounding solution of -41.8138 is better than previous of 1.45878

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -41.8138 to -47.9718 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.5804
Cbc0038I Pass   2: suminf.    3.50742 (13) obj. -51.5804 iterations 21
Cbc0038I Pass   3: suminf.    3.34566 (13) obj. -51.5804 iterations 2
Cbc0038I Pass   4: suminf.    1.34188 (4) obj. -51.5804 iterations 22
Cbc0038I Pass   5: suminf.    1.28377 (5) obj. -51.5804 iterations 1
Cbc0038I Pass   6: suminf.    0.97768 (5) obj. -51.5804 iterations 9
Cbc0038I Pass   7: suminf.    1.63860 (5) obj. -51.5804 iterations 4
Cbc0038I Pass   8: suminf.    1.17068 (7) obj. -51.5804 iterations 7
Cbc0038I Pass   9: suminf.    1.17068 (7) obj. -51.5804 iterations 0
Cbc0038I Pass  10: suminf.    1.25880 (5) obj. -51.5804 iterations 10
Cbc0038I Pass  11: suminf.    1.84190 (5) obj. -51.5804 iterations 8
Cbc0038I Pass  12: suminf.    1.20981 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  13: suminf.    1.19677 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  14: suminf.    1.13099 (4) obj. -51.5804 iterations 1
Cbc0038I Pass  15: suminf.    1.57125 (5) obj. -51.5804 iterations 11
Cbc0038I Pass  16: suminf.    1.44132 (4) obj. -51.5804 iterations 9
Cbc0038I Pass  17: suminf.    0.99960 (3) obj. -51.5804 iterations 7
Cbc0038I Pass  18: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  19: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  20: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  21: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  22: suminf.    0.99960 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  23: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  24: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  25: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  26: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  27: suminf.    0.99960 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  28: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  29: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  30: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  31: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -47.9718 - took 0.07 seconds
Cbc0012I Integer solution of -47.971757 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 55 rows 32 columns
Cbc0012I Integer solution of -49.180167 found by RINS after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 21 added rows had average density of 43.285714
Cbc0013I At root node, 21 cuts changed objective from -84.057075 to -74.515582 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6296 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1225 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 72.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 28 nodes, 1 on tree, -49.180167 best solution, best possible -74.51376 (0.70 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 2 rows 5 columns
Cbc0001I Search completed - best objective -49.18016700000001, took 7397 iterations and 92 nodes (0.85 seconds)
Cbc0032I Strong branching done 954 times (9906 iterations), fathomed 9 nodes and fixed 77 variables
Cbc0035I Maximum depth 13, 442 variables fixed on reduced cost
Total time (CPU seconds):       0.82   (Wallclock seconds):       0.86

