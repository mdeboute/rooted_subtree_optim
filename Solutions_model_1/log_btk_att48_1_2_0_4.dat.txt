Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 64 (-35) rows, 36 (-14) columns and 193 (-92) elements
Clp1000I sum of infeasibilities 0.00742115 - average 0.000115955, 19 fixed columns
Coin0506I Presolve 30 (-34) rows, 17 (-19) columns and 87 (-106) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Coin0511I After Postsolve, objective 22721.389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7297324 - largest nonzero change 1.5795841e-05 ( 0.00078979204%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Coin0511I After Postsolve, objective 22721.389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22721.38934 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 64 rows, 36 columns (35 integer (35 of which binary)) and 193 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.359%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20239.4 iterations 15
Cbc0038I Solution found of -20239.4
Cbc0038I Relaxing continuous gives -20239.4
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 36 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -20239.4 to -22236.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -22284.8
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.00000 (3) obj. -22284.8 iterations 7
Cbc0038I Pass   3: suminf.    1.15646 (3) obj. -22284.8 iterations 8
Cbc0038I Pass   4: suminf.    1.15646 (3) obj. -22284.8 iterations 3
Cbc0038I Pass   5: suminf.    1.15646 (3) obj. -22284.8 iterations 3
Cbc0038I Pass   6: suminf.    1.18850 (10) obj. -22284.8 iterations 11
Cbc0038I Pass   7: suminf.    1.02880 (4) obj. -22284.8 iterations 4
Cbc0038I Pass   8: suminf.    0.11935 (4) obj. -22284.8 iterations 18
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. -22284.8 iterations 11
Cbc0038I Pass  10: suminf.    1.00000 (3) obj. -22284.8 iterations 3
Cbc0038I Pass  11: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  12: suminf.    0.11935 (4) obj. -22284.8 iterations 18
Cbc0038I Pass  13: suminf.    1.61643 (4) obj. -22284.8 iterations 6
Cbc0038I Pass  14: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  15: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  16: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  17: suminf.    1.50649 (11) obj. -22284.8 iterations 5
Cbc0038I Pass  18: suminf.    1.42494 (4) obj. -22284.8 iterations 3
Cbc0038I Pass  19: suminf.    1.00000 (3) obj. -22284.8 iterations 17
Cbc0038I Pass  20: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  21: suminf.    1.22257 (4) obj. -22284.8 iterations 10
Cbc0038I Pass  22: suminf.    1.22257 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  23: suminf.    0.11935 (4) obj. -22284.8 iterations 17
Cbc0038I Pass  24: suminf.    1.00000 (7) obj. -22284.8 iterations 14
Cbc0038I Pass  25: suminf.    1.00000 (3) obj. -22284.8 iterations 4
Cbc0038I Pass  26: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  27: suminf.    0.16198 (5) obj. -22284.8 iterations 12
Cbc0038I Pass  28: suminf.    0.27709 (7) obj. -22284.8 iterations 8
Cbc0038I Pass  29: suminf.    0.17783 (6) obj. -22284.8 iterations 7
Cbc0038I Pass  30: suminf.    3.00000 (7) obj. -22284.8 iterations 9
Cbc0038I Pass  31: suminf.    2.00000 (6) obj. -22284.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 36 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -22236.3 - took 0.02 seconds
Cbc0012I Integer solution of -22236.271 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 64 rows 36 columns, reduced to 17 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 20
Cbc0013I At root node, 2 cuts changed objective from -22721.389 to -22264.226 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 1.9 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22236.27099999999, took 9 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

