Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 4.57781e-06 - average 5.14361e-08, 6 fixed columns
Coin0506I Presolve 78 (-11) rows, 45 (-6) columns and 238 (-34) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 4.8188796 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Coin0511I After Postsolve, objective 36.594246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Coin0511I After Postsolve, objective 36.594246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.59424587 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.4202
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.18389 iterations 28
Cbc0038I Solution found of 9.18389
Cbc0038I Relaxing continuous gives 9.18389
Cbc0038I Rounding solution of 1.08483 is better than previous of 9.18389

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 1.08483 to -4.84352 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.01868
Cbc0038I Pass   2: suminf.    1.90919 (12) obj. -8.01868 iterations 9
Cbc0038I Pass   3: suminf.    2.09648 (9) obj. -8.01868 iterations 18
Cbc0038I Pass   4: suminf.    2.04412 (8) obj. -8.01868 iterations 2
Cbc0038I Pass   5: suminf.    1.56479 (5) obj. -8.01868 iterations 8
Cbc0038I Pass   6: suminf.    1.39674 (5) obj. -8.01868 iterations 1
Cbc0038I Pass   7: suminf.    1.39674 (5) obj. -8.01868 iterations 0
Cbc0038I Pass   8: suminf.    1.70790 (6) obj. -8.01868 iterations 5
Cbc0038I Pass   9: suminf.    1.69625 (7) obj. -8.01868 iterations 1
Cbc0038I Pass  10: suminf.    2.18033 (8) obj. -8.01868 iterations 6
Cbc0038I Pass  11: suminf.    1.89527 (7) obj. -8.01868 iterations 1
Cbc0038I Pass  12: suminf.    1.94485 (5) obj. -8.01868 iterations 8
Cbc0038I Pass  13: suminf.    1.64425 (7) obj. -8.01868 iterations 5
Cbc0038I Pass  14: suminf.    2.21956 (9) obj. -8.01868 iterations 6
Cbc0038I Pass  15: suminf.    3.12496 (9) obj. -8.01868 iterations 9
Cbc0038I Pass  16: suminf.    2.07591 (7) obj. -8.01868 iterations 7
Cbc0038I Pass  17: suminf.    2.07591 (7) obj. -8.01868 iterations 0
Cbc0038I Pass  18: suminf.    1.78510 (6) obj. -8.01868 iterations 7
Cbc0038I Pass  19: suminf.    1.50058 (4) obj. -8.01868 iterations 3
Cbc0038I Pass  20: suminf.    1.48669 (5) obj. -8.01868 iterations 2
Cbc0038I Pass  21: suminf.    1.72085 (5) obj. -8.01868 iterations 7
Cbc0038I Pass  22: suminf.    1.46010 (4) obj. -8.01868 iterations 2
Cbc0038I Pass  23: suminf.    1.46010 (4) obj. -8.01868 iterations 0
Cbc0038I Pass  24: suminf.    1.75234 (5) obj. -8.01868 iterations 2
Cbc0038I Pass  25: suminf.    1.64425 (7) obj. -8.01868 iterations 2
Cbc0038I Pass  26: suminf.    2.21956 (9) obj. -8.01868 iterations 6
Cbc0038I Pass  27: suminf.    1.89527 (7) obj. -8.01868 iterations 2
Cbc0038I Pass  28: suminf.    1.94485 (5) obj. -8.01868 iterations 8
Cbc0038I Pass  29: suminf.    1.46499 (4) obj. -8.01868 iterations 10
Cbc0038I Pass  30: suminf.    1.20429 (4) obj. -8.01868 iterations 7
Cbc0038I Pass  31: suminf.    1.20429 (4) obj. -8.01868 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -4.84352 - took 0.04 seconds
Cbc0012I Integer solution of -4.84352 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 53 rows 31 columns
Cbc0031I 18 added rows had average density of 43.055556
Cbc0013I At root node, 18 cuts changed objective from -36.594246 to -25.839127 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7733 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1836 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 49.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0004I Integer solution of -4.967959 found after 6277 iterations and 34 nodes (0.65 seconds)
Cbc0012I Integer solution of -5.756939 found by rounding after 6283 iterations and 35 nodes (0.65 seconds)
Cbc0012I Integer solution of -6.49195 found by rounding after 6335 iterations and 37 nodes (0.65 seconds)
Cbc0001I Search completed - best objective -6.491950000000003, took 6675 iterations and 44 nodes (0.66 seconds)
Cbc0032I Strong branching done 500 times (8160 iterations), fathomed 3 nodes and fixed 24 variables
Cbc0035I Maximum depth 12, 150 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.67

