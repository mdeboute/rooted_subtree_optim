Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 261 (-3) columns and 1490 (-55) elements
Clp1000I sum of infeasibilities 1.66433e-05 - average 3.33533e-08, 106 fixed columns
Coin0506I Presolve 285 (-214) rows, 153 (-108) columns and 853 (-637) elements
Clp0029I End of values pass after 153 iterations
Clp0014I Perturbing problem by 0.001% of 0.15670884 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 161.54761
Clp0000I Optimal - objective value 161.54761
Coin0511I After Postsolve, objective 161.54761, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13301565 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 161.54761
Clp0000I Optimal - objective value 161.54761
Clp0000I Optimal - objective value 161.54761
Coin0511I After Postsolve, objective 161.54761, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.547614 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 261 columns (260 integer (260 of which binary)) and 1490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 68 integers unsatisfied sum - 10.3327
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -17.3845 iterations 236
Cbc0038I Solution found of -17.3845
Cbc0038I Relaxing continuous gives -17.3845
Cbc0038I Rounding solution of -46.3577 is better than previous of -17.3845

Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 125 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -46.3577 to -95.8669 (0.19 seconds)
Cbc0038I Round again with cutoff of -102.435
Cbc0038I Pass   2: suminf.    3.49816 (17) obj. -102.435 iterations 47
Cbc0038I Pass   3: suminf.    2.72274 (11) obj. -102.435 iterations 9
Cbc0038I Pass   4: suminf.    2.41227 (9) obj. -102.435 iterations 22
Cbc0038I Pass   5: suminf.    2.31727 (10) obj. -102.435 iterations 3
Cbc0038I Pass   6: suminf.    2.31727 (10) obj. -102.435 iterations 2
Cbc0038I Pass   7: suminf.    2.19505 (6) obj. -102.435 iterations 17
Cbc0038I Pass   8: suminf.    1.24051 (6) obj. -102.435 iterations 10
Cbc0038I Pass   9: suminf.    0.96077 (6) obj. -102.435 iterations 20
Cbc0038I Pass  10: suminf.    2.04350 (7) obj. -102.435 iterations 16
Cbc0038I Pass  11: suminf.    2.04350 (7) obj. -102.435 iterations 0
Cbc0038I Pass  12: suminf.    2.12066 (6) obj. -102.435 iterations 24
Cbc0038I Pass  13: suminf.    2.03051 (6) obj. -102.435 iterations 9
Cbc0038I Pass  14: suminf.    2.27053 (7) obj. -102.435 iterations 23
Cbc0038I Pass  15: suminf.    2.20324 (6) obj. -102.435 iterations 1
Cbc0038I Pass  16: suminf.    2.20324 (6) obj. -102.435 iterations 0
Cbc0038I Pass  17: suminf.    1.53234 (6) obj. -102.435 iterations 10
Cbc0038I Pass  18: suminf.    2.30045 (8) obj. -102.435 iterations 42
Cbc0038I Pass  19: suminf.    2.13206 (8) obj. -102.435 iterations 4
Cbc0038I Pass  20: suminf.    2.07296 (8) obj. -102.435 iterations 7
Cbc0038I Pass  21: suminf.    1.82908 (6) obj. -102.435 iterations 19
Cbc0038I Pass  22: suminf.    1.34624 (6) obj. -102.435 iterations 5
Cbc0038I Pass  23: suminf.    2.83673 (8) obj. -102.435 iterations 39
Cbc0038I Pass  24: suminf.    2.27053 (7) obj. -102.435 iterations 20
Cbc0038I Pass  25: suminf.    2.20324 (6) obj. -102.435 iterations 1
Cbc0038I Pass  26: suminf.    2.20324 (6) obj. -102.435 iterations 0
Cbc0038I Pass  27: suminf.    1.53234 (6) obj. -102.435 iterations 10
Cbc0038I Pass  28: suminf.    2.30045 (8) obj. -102.435 iterations 42
Cbc0038I Pass  29: suminf.    2.13206 (8) obj. -102.435 iterations 4
Cbc0038I Pass  30: suminf.    2.07296 (8) obj. -102.435 iterations 8
Cbc0038I Pass  31: suminf.    1.82908 (6) obj. -102.435 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 145 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -95.8669 to -97.5263 (0.40 seconds)
Cbc0038I Round again with cutoff of -114.258
Cbc0038I Pass  31: suminf.    4.06245 (17) obj. -114.258 iterations 0
Cbc0038I Pass  32: suminf.    3.45444 (11) obj. -114.258 iterations 8
Cbc0038I Pass  33: suminf.    3.20375 (11) obj. -114.258 iterations 27
Cbc0038I Pass  34: suminf.    3.84255 (9) obj. -114.258 iterations 20
Cbc0038I Pass  35: suminf.    2.44105 (8) obj. -114.258 iterations 10
Cbc0038I Pass  36: suminf.    4.31592 (11) obj. -114.258 iterations 14
Cbc0038I Pass  37: suminf.    4.04812 (12) obj. -114.258 iterations 7
Cbc0038I Pass  38: suminf.    4.05523 (11) obj. -114.258 iterations 5
Cbc0038I Pass  39: suminf.    2.49035 (7) obj. -114.258 iterations 24
Cbc0038I Pass  40: suminf.    2.34431 (7) obj. -114.258 iterations 7
Cbc0038I Pass  41: suminf.    2.59846 (7) obj. -114.258 iterations 23
Cbc0038I Pass  42: suminf.    1.86691 (6) obj. -114.258 iterations 9
Cbc0038I Pass  43: suminf.    1.85701 (6) obj. -114.258 iterations 2
Cbc0038I Pass  44: suminf.    3.37677 (11) obj. -114.258 iterations 30
Cbc0038I Pass  45: suminf.    2.59846 (7) obj. -114.258 iterations 29
Cbc0038I Pass  46: suminf.    3.96156 (12) obj. -114.258 iterations 37
Cbc0038I Pass  47: suminf.    2.73905 (10) obj. -114.258 iterations 32
Cbc0038I Pass  48: suminf.    2.73905 (10) obj. -114.258 iterations 1
Cbc0038I Pass  49: suminf.    2.57994 (8) obj. -114.258 iterations 33
Cbc0038I Pass  50: suminf.    2.09585 (8) obj. -114.258 iterations 13
Cbc0038I Pass  51: suminf.    2.09585 (8) obj. -114.258 iterations 2
Cbc0038I Pass  52: suminf.    3.35483 (10) obj. -114.258 iterations 22
Cbc0038I Pass  53: suminf.    3.35583 (10) obj. -114.258 iterations 1
Cbc0038I Pass  54: suminf.    3.21133 (9) obj. -114.258 iterations 18
Cbc0038I Pass  55: suminf.    2.04524 (7) obj. -114.258 iterations 19
Cbc0038I Pass  56: suminf.    2.04524 (7) obj. -114.258 iterations 3
Cbc0038I Pass  57: suminf.    2.90800 (8) obj. -114.258 iterations 20
Cbc0038I Pass  58: suminf.    2.59846 (7) obj. -114.258 iterations 3
Cbc0038I Pass  59: suminf.    1.86691 (6) obj. -114.258 iterations 7
Cbc0038I Pass  60: suminf.    1.85701 (6) obj. -114.258 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 150 rows 84 columns
Cbc0038I Mini branch and bound improved solution from -97.5263 to -103.198 (0.60 seconds)
Cbc0038I Round again with cutoff of -128.445
Cbc0038I Pass  60: suminf.    4.75083 (21) obj. -128.445 iterations 11
Cbc0038I Pass  61: suminf.    4.65006 (15) obj. -128.445 iterations 12
Cbc0038I Pass  62: suminf.    4.58270 (14) obj. -128.445 iterations 18
Cbc0038I Pass  63: suminf.    4.51450 (12) obj. -128.445 iterations 12
Cbc0038I Pass  64: suminf.    4.33862 (12) obj. -128.445 iterations 33
Cbc0038I Pass  65: suminf.    3.78383 (10) obj. -128.445 iterations 8
Cbc0038I Pass  66: suminf.    3.43371 (11) obj. -128.445 iterations 16
Cbc0038I Pass  67: suminf.    3.43371 (11) obj. -128.445 iterations 2
Cbc0038I Pass  68: suminf.    3.99071 (11) obj. -128.445 iterations 19
Cbc0038I Pass  69: suminf.    3.49783 (10) obj. -128.445 iterations 23
Cbc0038I Pass  70: suminf.    7.13238 (26) obj. -128.445 iterations 49
Cbc0038I Pass  71: suminf.    5.03359 (22) obj. -128.445 iterations 66
Cbc0038I Pass  72: suminf.    4.57419 (44) obj. -128.445 iterations 36
Cbc0038I Pass  73: suminf.    4.65556 (14) obj. -128.445 iterations 60
Cbc0038I Pass  74: suminf.    4.27745 (22) obj. -128.445 iterations 43
Cbc0038I Pass  75: suminf.    3.46553 (10) obj. -128.445 iterations 30
Cbc0038I Pass  76: suminf.    3.21423 (12) obj. -128.445 iterations 15
Cbc0038I Pass  77: suminf.    3.87169 (11) obj. -128.445 iterations 11
Cbc0038I Pass  78: suminf.    3.23773 (10) obj. -128.445 iterations 11
Cbc0038I Pass  79: suminf.    3.15477 (10) obj. -128.445 iterations 4
Cbc0038I Pass  80: suminf.    3.15477 (10) obj. -128.445 iterations 1
Cbc0038I Pass  81: suminf.    4.16024 (10) obj. -128.445 iterations 15
Cbc0038I Pass  82: suminf.    3.58315 (10) obj. -128.445 iterations 11
Cbc0038I Pass  83: suminf.    6.30074 (19) obj. -128.445 iterations 39
Cbc0038I Pass  84: suminf.    3.40234 (10) obj. -128.445 iterations 26
Cbc0038I Pass  85: suminf.    3.61886 (9) obj. -128.445 iterations 23
Cbc0038I Pass  86: suminf.    3.30259 (10) obj. -128.445 iterations 6
Cbc0038I Pass  87: suminf.    4.23850 (11) obj. -128.445 iterations 10
Cbc0038I Pass  88: suminf.    3.56977 (9) obj. -128.445 iterations 3
Cbc0038I Pass  89: suminf.    2.83496 (8) obj. -128.445 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 184 rows 101 columns
Cbc0038I Mini branch and bound did not improve solution (0.86 seconds)
Cbc0038I After 0.86 seconds - Feasibility pump exiting with objective of -103.198 - took 0.78 seconds
Cbc0012I Integer solution of -103.19775 found by feasibility pump after 0 iterations and 0 nodes (0.86 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 128 rows 71 columns
Cbc0031I 51 added rows had average density of 113.54902
Cbc0013I At root node, 51 cuts changed objective from -161.54761 to -151.46052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41893 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3099 row cuts average 256.6 elements, 0 column cuts (0 active)  in 1.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.158 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 253.1 elements, 0 column cuts (0 active)  in 0.452 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -103.19775 best solution, best possible -151.46052 (11.50 seconds)
Cbc0010I After 4 nodes, 5 on tree, -103.19775 best solution, best possible -151.46052 (12.23 seconds)
Cbc0010I After 15 nodes, 14 on tree, -103.19775 best solution, best possible -151.46052 (12.97 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 158 rows 87 columns
Cbc0010I After 48 nodes, 11 on tree, -103.19775 best solution, best possible -151.46052 (13.69 seconds)
Cbc0010I After 89 nodes, 11 on tree, -103.19775 best solution, best possible -151.46052 (14.40 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 168 rows 91 columns
Cbc0010I After 127 nodes, 21 on tree, -103.19775 best solution, best possible -151.46052 (15.12 seconds)
Cbc0010I After 202 nodes, 11 on tree, -103.19775 best solution, best possible -151.46052 (15.83 seconds)
Cbc0010I After 247 nodes, 10 on tree, -103.19775 best solution, best possible -151.46052 (16.53 seconds)
Cbc0001I Search completed - best objective -103.19775, took 31914 iterations and 272 nodes (16.69 seconds)
Cbc0032I Strong branching done 2708 times (72201 iterations), fathomed 20 nodes and fixed 139 variables
Cbc0035I Maximum depth 96, 682 variables fixed on reduced cost
Total time (CPU seconds):       16.26   (Wallclock seconds):       16.80

