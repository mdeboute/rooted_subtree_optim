Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 74 (-4) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 2.10903e-05 - average 1.66066e-07, 14 fixed columns
Coin0506I Presolve 100 (-27) rows, 59 (-15) columns and 310 (-84) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Coin0511I After Postsolve, objective 39.746072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25118752 - largest nonzero change 0 ( 0%) - largest zero change 2.736223e-05
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Coin0511I After Postsolve, objective 39.746072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.74607176 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 74 columns (73 integer (73 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.21952
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.43222 iterations 44
Cbc0038I Solution found of 9.43222
Cbc0038I Relaxing continuous gives 9.43222
Cbc0038I Rounding solution of -6.16942 is better than previous of 9.43222

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -6.16942 to -10.7698 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.6675
Cbc0038I Pass   2: suminf.    1.94221 (16) obj. -13.6675 iterations 21
Cbc0038I Pass   3: suminf.    1.79328 (33) obj. -13.6675 iterations 14
Cbc0038I Pass   4: suminf.    2.09010 (7) obj. -13.6675 iterations 46
Cbc0038I Pass   5: suminf.    1.45317 (6) obj. -13.6675 iterations 3
Cbc0038I Pass   6: suminf.    1.40597 (4) obj. -13.6675 iterations 10
Cbc0038I Pass   7: suminf.    1.40597 (4) obj. -13.6675 iterations 0
Cbc0038I Pass   8: suminf.    0.96541 (4) obj. -13.6675 iterations 7
Cbc0038I Pass   9: suminf.    1.24012 (3) obj. -13.6675 iterations 4
Cbc0038I Pass  10: suminf.    1.21118 (4) obj. -13.6675 iterations 1
Cbc0038I Pass  11: suminf.    2.11054 (6) obj. -13.6675 iterations 6
Cbc0038I Pass  12: suminf.    1.62826 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  13: suminf.    2.21714 (10) obj. -13.6675 iterations 7
Cbc0038I Pass  14: suminf.    1.81843 (5) obj. -13.6675 iterations 10
Cbc0038I Pass  15: suminf.    1.81843 (5) obj. -13.6675 iterations 0
Cbc0038I Pass  16: suminf.    2.28015 (7) obj. -13.6675 iterations 3
Cbc0038I Pass  17: suminf.    1.95547 (6) obj. -13.6675 iterations 1
Cbc0038I Pass  18: suminf.    1.95547 (6) obj. -13.6675 iterations 0
Cbc0038I Pass  19: suminf.    1.80643 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  20: suminf.    1.80643 (5) obj. -13.6675 iterations 0
Cbc0038I Pass  21: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  22: suminf.    1.76609 (6) obj. -13.6675 iterations 2
Cbc0038I Pass  23: suminf.    2.06471 (6) obj. -13.6675 iterations 5
Cbc0038I Pass  24: suminf.    1.86123 (5) obj. -13.6675 iterations 2
Cbc0038I Pass  25: suminf.    1.80643 (5) obj. -13.6675 iterations 1
Cbc0038I Pass  26: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  27: suminf.    1.76609 (6) obj. -13.6675 iterations 2
Cbc0038I Pass  28: suminf.    2.06471 (6) obj. -13.6675 iterations 5
Cbc0038I Pass  29: suminf.    1.86123 (5) obj. -13.6675 iterations 2
Cbc0038I Pass  30: suminf.    1.80643 (5) obj. -13.6675 iterations 1
Cbc0038I Pass  31: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.7698 to -11.6678 (0.09 seconds)
Cbc0038I Round again with cutoff of -18.8832
Cbc0038I Pass  31: suminf.    2.98875 (16) obj. -18.8832 iterations 0
Cbc0038I Pass  32: suminf.    2.75958 (33) obj. -18.8832 iterations 14
Cbc0038I Pass  33: suminf.    1.20475 (6) obj. -18.8832 iterations 30
Cbc0038I Pass  34: suminf.    1.20475 (6) obj. -18.8832 iterations 0
Cbc0038I Pass  35: suminf.    2.60507 (10) obj. -18.8832 iterations 21
Cbc0038I Pass  36: suminf.    3.14898 (8) obj. -18.8832 iterations 8
Cbc0038I Pass  37: suminf.    2.19341 (9) obj. -18.8832 iterations 3
Cbc0038I Pass  38: suminf.    1.85673 (8) obj. -18.8832 iterations 2
Cbc0038I Pass  39: suminf.    2.53293 (7) obj. -18.8832 iterations 9
Cbc0038I Pass  40: suminf.    1.96752 (6) obj. -18.8832 iterations 4
Cbc0038I Pass  41: suminf.    1.92050 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  42: suminf.    2.41244 (7) obj. -18.8832 iterations 3
Cbc0038I Pass  43: suminf.    2.11734 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  44: suminf.    1.76118 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  45: suminf.    1.75288 (7) obj. -18.8832 iterations 1
Cbc0038I Pass  46: suminf.    2.29524 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  47: suminf.    2.29134 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  48: suminf.    2.43449 (7) obj. -18.8832 iterations 6
Cbc0038I Pass  49: suminf.    2.21549 (7) obj. -18.8832 iterations 2
Cbc0038I Pass  50: suminf.    2.54933 (7) obj. -18.8832 iterations 8
Cbc0038I Pass  51: suminf.    2.15587 (7) obj. -18.8832 iterations 4
Cbc0038I Pass  52: suminf.    2.01531 (5) obj. -18.8832 iterations 2
Cbc0038I Pass  53: suminf.    2.21891 (7) obj. -18.8832 iterations 5
Cbc0038I Pass  54: suminf.    2.21773 (7) obj. -18.8832 iterations 1
Cbc0038I Pass  55: suminf.    2.76417 (8) obj. -18.8832 iterations 7
Cbc0038I Pass  56: suminf.    0.97399 (9) obj. -18.8832 iterations 10
Cbc0038I Pass  57: suminf.    0.85503 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  58: suminf.    1.08879 (4) obj. -18.8832 iterations 7
Cbc0038I Pass  59: suminf.    1.00797 (4) obj. -18.8832 iterations 1
Cbc0038I Pass  60: suminf.    1.08422 (3) obj. -18.8832 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -11.6678 - took 0.10 seconds
Cbc0012I Integer solution of -11.66784 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 61 rows 37 columns
Cbc0031I 16 added rows had average density of 60.6875
Cbc0013I At root node, 16 cuts changed objective from -39.746072 to -31.408937 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7286 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1478 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -11.66784 best solution, best possible -31.408937 (0.68 seconds)
Cbc0012I Integer solution of -12.92256 found by rounding after 5662 iterations and 16 nodes (0.76 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 23 rows 17 columns
Cbc0004I Integer solution of -13.10359 found after 6489 iterations and 52 nodes (0.89 seconds)
Cbc0001I Search completed - best objective -13.10359, took 6860 iterations and 60 nodes (0.90 seconds)
Cbc0032I Strong branching done 620 times (10913 iterations), fathomed 3 nodes and fixed 21 variables
Cbc0035I Maximum depth 20, 158 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       0.91

