Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 22 (-2) columns and 105 (-24) elements
Clp1000I sum of infeasibilities 4.65763e-06 - average 1.36989e-07, 0 fixed columns
Coin0506I Presolve 34 (0) rows, 22 (0) columns and 105 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 81.201435
Clp0000I Optimal - objective value 81.201435
Coin0511I After Postsolve, objective 81.201435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.201435
Clp0000I Optimal - objective value 81.201435
Clp0000I Optimal - objective value 81.201435
Coin0511I After Postsolve, objective 81.201435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.20143459 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.14858
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.072 iterations 13
Cbc0038I Solution found of -25.072
Cbc0038I Relaxing continuous gives -25.072
Cbc0038I Rounding solution of -37.6903 is better than previous of -25.072

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 19 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -37.6903 to -38.1921 (0.01 seconds)
Cbc0038I Round again with cutoff of -42.4567
Cbc0038I Pass   2: suminf.    0.38635 (2) obj. -42.4567 iterations 3
Cbc0038I Pass   3: suminf.    0.40913 (2) obj. -42.4567 iterations 4
Cbc0038I Pass   4: suminf.    0.40913 (2) obj. -42.4567 iterations 0
Cbc0038I Pass   5: suminf.    0.38635 (2) obj. -42.4567 iterations 3
Cbc0038I Pass   6: suminf.    0.68427 (3) obj. -42.4567 iterations 8
Cbc0038I Pass   7: suminf.    0.43424 (2) obj. -42.4567 iterations 3
Cbc0038I Pass   8: suminf.    0.47497 (3) obj. -42.4567 iterations 3
Cbc0038I Pass   9: suminf.    0.38635 (2) obj. -42.4567 iterations 6
Cbc0038I Pass  10: suminf.    0.38635 (2) obj. -42.4567 iterations 0
Cbc0038I Pass  11: suminf.    0.40913 (2) obj. -42.4567 iterations 4
Cbc0038I Pass  12: suminf.    0.40913 (2) obj. -42.4567 iterations 0
Cbc0038I Pass  13: suminf.    0.38635 (2) obj. -42.4567 iterations 3
Cbc0038I Pass  14: suminf.    1.00527 (6) obj. -42.4567 iterations 7
Cbc0038I Pass  15: suminf.    0.96166 (4) obj. -42.4567 iterations 2
Cbc0038I Pass  16: suminf.    1.33303 (4) obj. -42.4567 iterations 6
Cbc0038I Pass  17: suminf.    0.44759 (3) obj. -42.4567 iterations 3
Cbc0038I Pass  18: suminf.    0.42333 (1) obj. -42.4567 iterations 3
Cbc0038I Pass  19: suminf.    0.42333 (1) obj. -42.4567 iterations 0
Cbc0038I Pass  20: suminf.    0.24443 (1) obj. -42.4567 iterations 1
Cbc0038I Pass  21: suminf.    0.57922 (2) obj. -42.4567 iterations 1
Cbc0038I Pass  22: suminf.    0.24443 (1) obj. -42.4567 iterations 1
Cbc0038I Pass  23: suminf.    2.23657 (6) obj. -42.4567 iterations 8
Cbc0038I Pass  24: suminf.    1.57778 (5) obj. -42.4567 iterations 5
Cbc0038I Pass  25: suminf.    0.52719 (3) obj. -42.4567 iterations 6
Cbc0038I Pass  26: suminf.    0.32919 (2) obj. -42.4567 iterations 1
Cbc0038I Pass  27: suminf.    0.40000 (1) obj. -42.4567 iterations 2
Cbc0038I Pass  28: suminf.    0.25761 (1) obj. -42.4567 iterations 1
Cbc0038I Pass  29: suminf.    2.46244 (8) obj. -42.4567 iterations 4
Cbc0038I Pass  30: suminf.    0.25761 (1) obj. -42.4567 iterations 6
Cbc0038I Pass  31: suminf.    0.62070 (2) obj. -42.4567 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -38.1921 - took 0.03 seconds
Cbc0012I Integer solution of -38.1921 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 19 rows 14 columns
Cbc0031I 9 added rows had average density of 20
Cbc0013I At root node, 9 cuts changed objective from -80.837441 to -62.667002 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1144 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 617 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.19210000000001, took 2133 iterations and 12 nodes (0.18 seconds)
Cbc0032I Strong branching done 116 times (782 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

