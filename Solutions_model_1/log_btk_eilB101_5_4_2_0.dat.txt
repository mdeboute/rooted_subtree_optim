Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 100 (-3) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 0.00012527 - average 7.24103e-07, 47 fixed columns
Coin0506I Presolve 71 (-102) rows, 46 (-54) columns and 226 (-312) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Coin0511I After Postsolve, objective 64.906238, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2035531 - largest nonzero change 0 ( 0%) - largest zero change 2.9789125e-05
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Coin0511I After Postsolve, objective 64.906238, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.90623848 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 100 columns (99 integer (99 of which binary)) and 541 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.876%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.23532
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.1518 iterations 42
Cbc0038I Solution found of 0.1518
Cbc0038I Relaxing continuous gives 0.1518
Cbc0038I Rounding solution of -24.9215 is better than previous of 0.1518

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 35 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -24.9215 to -40.752 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.1675
Cbc0038I Pass   2: suminf.    1.81163 (7) obj. -43.1675 iterations 11
Cbc0038I Pass   3: suminf.    0.71751 (3) obj. -43.1675 iterations 7
Cbc0038I Pass   4: suminf.    0.72124 (4) obj. -43.1675 iterations 9
Cbc0038I Pass   5: suminf.    0.72124 (4) obj. -43.1675 iterations 0
Cbc0038I Pass   6: suminf.    0.99344 (3) obj. -43.1675 iterations 9
Cbc0038I Pass   7: suminf.    0.99344 (3) obj. -43.1675 iterations 0
Cbc0038I Pass   8: suminf.    2.95224 (10) obj. -43.1675 iterations 22
Cbc0038I Pass   9: suminf.    2.14686 (10) obj. -43.1675 iterations 17
Cbc0038I Pass  10: suminf.    2.14686 (10) obj. -43.1675 iterations 0
Cbc0038I Pass  11: suminf.    1.81989 (7) obj. -43.1675 iterations 21
Cbc0038I Pass  12: suminf.    1.52944 (5) obj. -43.1675 iterations 3
Cbc0038I Pass  13: suminf.    1.00073 (4) obj. -43.1675 iterations 12
Cbc0038I Pass  14: suminf.    1.00073 (4) obj. -43.1675 iterations 1
Cbc0038I Pass  15: suminf.    1.26027 (3) obj. -43.1675 iterations 9
Cbc0038I Pass  16: suminf.    0.96876 (4) obj. -43.1675 iterations 4
Cbc0038I Pass  17: suminf.    0.78127 (4) obj. -43.1675 iterations 9
Cbc0038I Pass  18: suminf.    1.03205 (4) obj. -43.1675 iterations 7
Cbc0038I Pass  19: suminf.    0.66432 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  20: suminf.    4.63889 (13) obj. -43.1675 iterations 41
Cbc0038I Pass  21: suminf.    1.22388 (6) obj. -43.1675 iterations 20
Cbc0038I Pass  22: suminf.    1.23287 (8) obj. -43.1675 iterations 4
Cbc0038I Pass  23: suminf.    1.52273 (6) obj. -43.1675 iterations 21
Cbc0038I Pass  24: suminf.    1.34885 (6) obj. -43.1675 iterations 4
Cbc0038I Pass  25: suminf.    1.08545 (3) obj. -43.1675 iterations 14
Cbc0038I Pass  26: suminf.    0.90991 (3) obj. -43.1675 iterations 3
Cbc0038I Pass  27: suminf.    1.01537 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  28: suminf.    1.00556 (3) obj. -43.1675 iterations 2
Cbc0038I Pass  29: suminf.    0.97199 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  30: suminf.    0.76991 (3) obj. -43.1675 iterations 3
Cbc0038I Pass  31: suminf.    4.42113 (12) obj. -43.1675 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 66 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -40.752 to -41.4433 (0.07 seconds)
Cbc0038I Round again with cutoff of -47.5153
Cbc0038I Pass  31: suminf.    2.14253 (7) obj. -47.5153 iterations 0
Cbc0038I Pass  32: suminf.    1.08364 (4) obj. -47.5153 iterations 12
Cbc0038I Pass  33: suminf.    1.41521 (5) obj. -47.5153 iterations 5
Cbc0038I Pass  34: suminf.    1.10671 (7) obj. -47.5153 iterations 14
Cbc0038I Pass  35: suminf.    1.22886 (7) obj. -47.5153 iterations 18
Cbc0038I Pass  36: suminf.    1.14652 (7) obj. -47.5153 iterations 1
Cbc0038I Pass  37: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  38: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  39: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  40: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  41: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  42: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  43: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  44: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  45: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  46: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  47: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  48: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  49: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  50: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  51: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  52: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  53: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  54: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  55: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  56: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  57: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  58: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  59: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  60: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 39 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -41.4433 - took 0.08 seconds
Cbc0012I Integer solution of -41.44332 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 173 rows 100 columns, reduced to 36 rows 24 columns
Cbc0031I 16 added rows had average density of 68.25
Cbc0013I At root node, 16 cuts changed objective from -64.906238 to -55.419217 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5624 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1469 row cuts average 97.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0012I Integer solution of -41.66751 found by rounding after 4761 iterations and 15 nodes (0.65 seconds)
Cbc0010I After 35 nodes, 11 on tree, -41.66751 best solution, best possible -55.419215 (0.68 seconds)
Cbc0012I Integer solution of -41.66873 found by rounding after 5306 iterations and 43 nodes (0.70 seconds)
Cbc0001I Search completed - best objective -41.66873, took 6322 iterations and 80 nodes (0.79 seconds)
Cbc0032I Strong branching done 632 times (8312 iterations), fathomed 9 nodes and fixed 55 variables
Cbc0035I Maximum depth 13, 419 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.80

