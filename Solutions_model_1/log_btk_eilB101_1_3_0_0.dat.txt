Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-64) rows, 77 (-26) columns and 428 (-175) elements
Clp1000I sum of infeasibilities 7.14203e-06 - average 5.06527e-08, 68 fixed columns
Coin0506I Presolve 3 (-138) rows, 3 (-74) columns and 6 (-422) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3708.7595
Clp0000I Optimal - objective value 3708.7595
Coin0511I After Postsolve, objective 3708.7595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1402251 - largest nonzero change 1.6563323e-05 ( 0.0008514623%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3708.7595
Clp0000I Optimal - objective value 3708.7595
Clp0000I Optimal - objective value 3708.7595
Coin0511I After Postsolve, objective 3708.7595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3708.759459 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 140 rows, 77 columns (76 integer (76 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.290%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.113208
Cbc0038I Pass   1: suminf.    0.08333 (1) obj. -3678.47 iterations 3
Cbc0038I Solution found of -2555.52
Cbc0038I Relaxing continuous gives -2571.69
Cbc0038I Rounding solution of -2574.04 is better than previous of -2571.69

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 77 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2687.52
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08333 (1) obj. -3678.47 iterations 0
Cbc0038I Pass   3: suminf.    0.09455 (1) obj. -2687.52 iterations 2
Cbc0038I Pass   4: suminf.    2.21333 (8) obj. -2687.52 iterations 16
Cbc0038I Pass   5: suminf.    0.91344 (4) obj. -2687.52 iterations 12
Cbc0038I Pass   6: suminf.    0.56564 (3) obj. -2687.52 iterations 4
Cbc0038I Pass   7: suminf.    0.54445 (2) obj. -2687.52 iterations 4
Cbc0038I Pass   8: suminf.    0.54445 (2) obj. -2687.52 iterations 0
Cbc0038I Pass   9: suminf.    0.25191 (2) obj. -2687.52 iterations 3
Cbc0038I Pass  10: suminf.    0.25191 (2) obj. -2687.52 iterations 0
Cbc0038I Pass  11: suminf.    0.63862 (4) obj. -2687.52 iterations 20
Cbc0038I Pass  12: suminf.    0.38786 (3) obj. -2687.52 iterations 6
Cbc0038I Pass  13: suminf.    0.57263 (2) obj. -2687.52 iterations 4
Cbc0038I Pass  14: suminf.    0.57263 (2) obj. -2687.52 iterations 0
Cbc0038I Pass  15: suminf.    0.23127 (2) obj. -2687.52 iterations 3
Cbc0038I Pass  16: suminf.    0.23127 (2) obj. -2687.52 iterations 0
Cbc0038I Pass  17: suminf.    1.85147 (7) obj. -2687.52 iterations 23
Cbc0038I Pass  18: suminf.    0.25778 (2) obj. -2687.52 iterations 8
Cbc0038I Pass  19: suminf.    0.26792 (2) obj. -2687.52 iterations 2
Cbc0038I Pass  20: suminf.    0.65242 (4) obj. -2687.52 iterations 13
Cbc0038I Pass  21: suminf.    0.25784 (2) obj. -2687.52 iterations 8
Cbc0038I Pass  22: suminf.    0.56011 (2) obj. -2759.22 iterations 2
Cbc0038I Pass  23: suminf.    2.37226 (8) obj. -2687.52 iterations 11
Cbc0038I Pass  24: suminf.    1.01031 (7) obj. -2687.52 iterations 12
Cbc0038I Pass  25: suminf.    0.40420 (2) obj. -2687.52 iterations 6
Cbc0038I Pass  26: suminf.    0.40420 (2) obj. -2687.52 iterations 0
Cbc0038I Pass  27: suminf.    0.24229 (2) obj. -2687.52 iterations 4
Cbc0038I Pass  28: suminf.    0.24229 (2) obj. -2687.52 iterations 0
Cbc0038I Pass  29: suminf.    0.40420 (2) obj. -2687.52 iterations 3
Cbc0038I Pass  30: suminf.    1.48489 (6) obj. -2687.52 iterations 8
Cbc0038I Pass  31: suminf.    0.20199 (2) obj. -2687.52 iterations 9
Cbc0038I Rounding solution of -2590.21 is better than previous of -2574.04

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 77 columns, reduced to 29 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -2590.21 to -2603.62 (0.03 seconds)
Cbc0038I Round again with cutoff of -2891.76
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.08333 (1) obj. -3678.47 iterations 0
Cbc0038I Pass  32: suminf.    0.26128 (1) obj. -2891.76 iterations 2
Cbc0038I Pass  33: suminf.    1.48087 (5) obj. -2891.76 iterations 14
Cbc0038I Pass  34: suminf.    0.82660 (6) obj. -2891.76 iterations 6
Cbc0038I Pass  35: suminf.    0.56588 (2) obj. -2891.76 iterations 7
Cbc0038I Pass  36: suminf.    0.76666 (3) obj. -2891.76 iterations 4
Cbc0038I Pass  37: suminf.    1.43901 (5) obj. -2891.76 iterations 12
Cbc0038I Pass  38: suminf.    0.64472 (3) obj. -2891.76 iterations 7
Cbc0038I Pass  39: suminf.    0.64472 (3) obj. -2891.76 iterations 0
Cbc0038I Pass  40: suminf.    0.54918 (2) obj. -2894.62 iterations 6
Cbc0038I Pass  41: suminf.    0.54574 (2) obj. -2891.76 iterations 1
Cbc0038I Pass  42: suminf.    0.55208 (2) obj. -2891.76 iterations 1
Cbc0038I Pass  43: suminf.    0.55208 (2) obj. -2891.76 iterations 0
Cbc0038I Pass  44: suminf.    1.32530 (5) obj. -2891.76 iterations 17
Cbc0038I Pass  45: suminf.    0.82072 (3) obj. -2891.76 iterations 16
Cbc0038I Pass  46: suminf.    0.45765 (2) obj. -3044.12 iterations 7
Cbc0038I Pass  47: suminf.    0.27438 (2) obj. -2891.76 iterations 1
Cbc0038I Pass  48: suminf.    0.55861 (2) obj. -2891.76 iterations 1
Cbc0038I Pass  49: suminf.    0.55861 (2) obj. -2891.76 iterations 0
Cbc0038I Pass  50: suminf.    1.61180 (4) obj. -2891.76 iterations 11
Cbc0038I Pass  51: suminf.    0.55596 (2) obj. -2891.76 iterations 11
Cbc0038I Pass  52: suminf.    0.48770 (2) obj. -3291.77 iterations 5
Cbc0038I Pass  53: suminf.    1.25766 (4) obj. -2891.76 iterations 12
Cbc0038I Pass  54: suminf.    0.96297 (3) obj. -2891.76 iterations 4
Cbc0038I Pass  55: suminf.    0.77732 (2) obj. -3045.1 iterations 6
Cbc0038I Pass  56: suminf.    0.59288 (2) obj. -2891.76 iterations 1
Cbc0038I Pass  57: suminf.    0.56231 (2) obj. -2891.76 iterations 1
Cbc0038I Pass  58: suminf.    0.56231 (2) obj. -2891.76 iterations 1
Cbc0038I Pass  59: suminf.    1.36177 (4) obj. -2891.76 iterations 8
Cbc0038I Pass  60: suminf.    0.56231 (2) obj. -2891.76 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 77 columns, reduced to 25 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2603.62 - took 0.02 seconds
Cbc0012I Integer solution of -2603.623 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 140 rows 77 columns, reduced to 7 rows 8 columns
Cbc0012I Integer solution of -2618.2695 found by DiveCoefficient after 182 iterations and 0 nodes (0.06 seconds)
Cbc0031I 9 added rows had average density of 10.222222
Cbc0013I At root node, 9 cuts changed objective from -3708.7595 to -2643.1766 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 168 row cuts average 4.4 elements, 12 column cuts (12 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 75 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0012I Integer solution of -2619.3148 found by DiveCoefficient after 263 iterations and 2 nodes (0.07 seconds)
Cbc0012I Integer solution of -2626.5021 found by rounding after 271 iterations and 3 nodes (0.07 seconds)
Cbc0016I Integer solution of -2626.7409 found by strong branching after 376 iterations and 7 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -2626.7409, took 444 iterations and 12 nodes (0.09 seconds)
Cbc0032I Strong branching done 90 times (500 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

