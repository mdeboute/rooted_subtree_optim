Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 4.31352e-06 - average 1.23243e-07, 3 fixed columns
Coin0506I Presolve 27 (-8) rows, 19 (-3) columns and 84 (-22) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Coin0511I After Postsolve, objective 54.124906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Coin0511I After Postsolve, objective 54.124906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.12490641 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.97074
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.66143 iterations 19
Cbc0038I Solution found of 7.66143
Cbc0038I Relaxing continuous gives 7.66143
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 7.66143 to -18.7186 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.2593
Cbc0038I Pass   2: suminf.    1.16531 (3) obj. -22.2593 iterations 3
Cbc0038I Pass   3: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass   4: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass   5: suminf.    0.72531 (2) obj. -22.2593 iterations 1
Cbc0038I Pass   6: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass   7: suminf.    2.50916 (6) obj. -22.2593 iterations 8
Cbc0038I Pass   8: suminf.    1.02780 (6) obj. -22.2593 iterations 3
Cbc0038I Pass   9: suminf.    1.00244 (7) obj. -22.2593 iterations 1
Cbc0038I Pass  10: suminf.    0.87543 (4) obj. -22.2593 iterations 8
Cbc0038I Pass  11: suminf.    0.80439 (2) obj. -22.2593 iterations 6
Cbc0038I Pass  12: suminf.    0.58035 (2) obj. -22.2593 iterations 3
Cbc0038I Pass  13: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  14: suminf.    0.72531 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  15: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass  16: suminf.    0.64497 (3) obj. -22.2593 iterations 6
Cbc0038I Pass  17: suminf.    0.64497 (3) obj. -22.2593 iterations 0
Cbc0038I Pass  18: suminf.    1.01484 (3) obj. -22.2593 iterations 4
Cbc0038I Pass  19: suminf.    0.87819 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  20: suminf.    1.08467 (3) obj. -22.2593 iterations 2
Cbc0038I Pass  21: suminf.    1.01484 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  22: suminf.    1.09673 (3) obj. -22.2593 iterations 3
Cbc0038I Pass  23: suminf.    0.69412 (3) obj. -22.2593 iterations 4
Cbc0038I Pass  24: suminf.    0.69412 (3) obj. -22.2593 iterations 0
Cbc0038I Pass  25: suminf.    0.58035 (2) obj. -22.2593 iterations 8
Cbc0038I Pass  26: suminf.    0.58035 (2) obj. -22.2593 iterations 0
Cbc0038I Pass  27: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  28: suminf.    0.87444 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  29: suminf.    0.41321 (3) obj. -22.2593 iterations 9
Cbc0038I Pass  30: suminf.    0.41321 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  31: suminf.    0.59251 (5) obj. -22.2593 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -18.7186 - took 0.03 seconds
Cbc0012I Integer solution of -18.7186 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 24 rows 17 columns
Cbc0031I 11 added rows had average density of 19.181818
Cbc0013I At root node, 11 cuts changed objective from -54.124906 to -35.251572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1559 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 898 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -18.7186, took 2340 iterations and 10 nodes (0.21 seconds)
Cbc0032I Strong branching done 90 times (784 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

