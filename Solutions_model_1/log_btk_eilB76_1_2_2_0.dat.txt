Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 6.42408e-05 - average 4.62164e-07, 27 fixed columns
Coin0506I Presolve 85 (-54) rows, 48 (-28) columns and 258 (-164) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.1593228 - largest nonzero change 0 ( 0%) - largest zero change 1.574217e-05
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Coin0511I After Postsolve, objective 62.469549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21944924 - largest nonzero change 0 ( 0%) - largest zero change 2.9603331e-05
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Clp0000I Optimal - objective value 62.469549
Coin0511I After Postsolve, objective 62.469549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.46954917 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.677%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.12801
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.9297 iterations 38
Cbc0038I Solution found of -24.9297
Cbc0038I Relaxing continuous gives -24.9297
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 51 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -24.9297 to -32.2358 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.2416
Cbc0038I Pass   2: suminf.    0.50486 (2) obj. -35.2416 iterations 4
Cbc0038I Pass   3: suminf.    0.27820 (2) obj. -35.2416 iterations 1
Cbc0038I Pass   4: suminf.    0.53524 (2) obj. -35.2416 iterations 6
Cbc0038I Pass   5: suminf.    2.58853 (12) obj. -35.2416 iterations 17
Cbc0038I Pass   6: suminf.    1.31384 (4) obj. -35.2416 iterations 12
Cbc0038I Pass   7: suminf.    1.27856 (3) obj. -35.2416 iterations 6
Cbc0038I Pass   8: suminf.    0.16571 (2) obj. -35.2416 iterations 6
Cbc0038I Pass   9: suminf.    0.60807 (2) obj. -35.2416 iterations 6
Cbc0038I Pass  10: suminf.    0.38605 (1) obj. -35.2416 iterations 1
Cbc0038I Pass  11: suminf.    1.33064 (3) obj. -35.2416 iterations 17
Cbc0038I Pass  12: suminf.    0.51561 (3) obj. -35.2416 iterations 14
Cbc0038I Pass  13: suminf.    0.27820 (2) obj. -35.2416 iterations 3
Cbc0038I Pass  14: suminf.    0.53524 (2) obj. -35.2416 iterations 6
Cbc0038I Pass  15: suminf.    0.50486 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  16: suminf.    4.65255 (12) obj. -35.2416 iterations 38
Cbc0038I Pass  17: suminf.    1.33999 (5) obj. -35.2416 iterations 24
Cbc0038I Pass  18: suminf.    1.14421 (4) obj. -35.2416 iterations 1
Cbc0038I Pass  19: suminf.    0.84563 (3) obj. -35.2416 iterations 4
Cbc0038I Pass  20: suminf.    0.60806 (2) obj. -35.2416 iterations 2
Cbc0038I Pass  21: suminf.    0.80700 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  22: suminf.    1.78290 (6) obj. -35.2416 iterations 15
Cbc0038I Pass  23: suminf.    1.48896 (4) obj. -35.2416 iterations 8
Cbc0038I Pass  24: suminf.    0.91161 (3) obj. -35.2416 iterations 1
Cbc0038I Pass  25: suminf.    0.73576 (2) obj. -35.2416 iterations 3
Cbc0038I Pass  26: suminf.    0.60806 (2) obj. -35.2416 iterations 2
Cbc0038I Pass  27: suminf.    0.60806 (2) obj. -35.2416 iterations 0
Cbc0038I Pass  28: suminf.    0.80700 (2) obj. -35.2416 iterations 1
Cbc0038I Pass  29: suminf.    2.13567 (7) obj. -35.2416 iterations 12
Cbc0038I Pass  30: suminf.    0.56964 (2) obj. -35.2416 iterations 13
Cbc0038I Pass  31: suminf.    0.17209 (3) obj. -35.2416 iterations 2
Cbc0038I Rounding solution of -32.6154 is better than previous of -32.2358

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -40.6517
Cbc0038I Pass  31: suminf.    0.79882 (4) obj. -40.6517 iterations 1
Cbc0038I Pass  32: suminf.    0.64444 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  33: suminf.    0.83832 (3) obj. -40.6517 iterations 5
Cbc0038I Pass  34: suminf.    1.74475 (9) obj. -40.6517 iterations 24
Cbc0038I Pass  35: suminf.    2.11922 (7) obj. -40.6517 iterations 25
Cbc0038I Pass  36: suminf.    0.63707 (3) obj. -40.6517 iterations 17
Cbc0038I Pass  37: suminf.    0.69698 (3) obj. -40.6517 iterations 2
Cbc0038I Pass  38: suminf.    2.71777 (10) obj. -40.6517 iterations 15
Cbc0038I Pass  39: suminf.    0.99230 (4) obj. -40.6517 iterations 16
Cbc0038I Pass  40: suminf.    0.90774 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  41: suminf.    1.31833 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  42: suminf.    1.93043 (6) obj. -40.6517 iterations 9
Cbc0038I Pass  43: suminf.    0.86621 (4) obj. -40.6517 iterations 8
Cbc0038I Pass  44: suminf.    0.60784 (3) obj. -40.6517 iterations 1
Cbc0038I Pass  45: suminf.    0.86026 (4) obj. -40.6517 iterations 5
Cbc0038I Pass  46: suminf.    0.79047 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  47: suminf.    1.53411 (4) obj. -40.6517 iterations 2
Cbc0038I Pass  48: suminf.    2.55882 (7) obj. -40.6517 iterations 6
Cbc0038I Pass  49: suminf.    1.34427 (6) obj. -40.6517 iterations 12
Cbc0038I Pass  50: suminf.    0.53304 (3) obj. -40.6517 iterations 4
Cbc0038I Pass  51: suminf.    0.91645 (3) obj. -40.6517 iterations 3
Cbc0038I Pass  52: suminf.    0.58121 (2) obj. -40.6517 iterations 2
Cbc0038I Pass  53: suminf.    3.67281 (14) obj. -40.6517 iterations 24
Cbc0038I Pass  54: suminf.    1.68575 (6) obj. -40.6517 iterations 15
Cbc0038I Pass  55: suminf.    1.42220 (6) obj. -40.6517 iterations 3
Cbc0038I Pass  56: suminf.    0.73032 (3) obj. -40.6517 iterations 4
Cbc0038I Pass  57: suminf.    0.76007 (3) obj. -40.6517 iterations 2
Cbc0038I Pass  58: suminf.    2.25404 (8) obj. -40.6517 iterations 13
Cbc0038I Pass  59: suminf.    1.89348 (6) obj. -40.6517 iterations 5
Cbc0038I Pass  60: suminf.    0.75455 (4) obj. -40.6517 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 82 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -32.6154 - took 0.06 seconds
Cbc0012I Integer solution of -32.61543 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 53 rows 30 columns
Cbc0031I 21 added rows had average density of 38
Cbc0013I At root node, 21 cuts changed objective from -62.292031 to -51.048936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6318 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1175 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 18 nodes, 6 on tree, -32.61543 best solution, best possible -51.048936 (0.68 seconds)
Cbc0001I Search completed - best objective -32.61543, took 5747 iterations and 24 nodes (0.68 seconds)
Cbc0032I Strong branching done 404 times (8915 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 8, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.69

