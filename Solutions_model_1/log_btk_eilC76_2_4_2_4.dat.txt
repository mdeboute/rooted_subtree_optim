Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 9.5532e-06 - average 6.87281e-08, 2 fixed columns
Coin0506I Presolve 135 (-4) rows, 74 (-2) columns and 410 (-12) elements
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 2.7214316 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Coin0511I After Postsolve, objective 32.299891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Clp0000I Optimal - objective value 32.299891
Coin0511I After Postsolve, objective 32.299891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.29989118 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 10.0053
Cbc0038I Solution found of 7.55339
Cbc0038I Relaxing continuous gives -1.86892
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -1.86892 to -2.55902 (0.06 seconds)
Cbc0038I Round again with cutoff of -5.5332
Cbc0038I Pass   1: suminf.    1.13306 (49) obj. -5.5332 iterations 32
Cbc0038I Pass   2: suminf.    1.31867 (8) obj. -5.5332 iterations 50
Cbc0038I Pass   3: suminf.    1.31867 (8) obj. -5.5332 iterations 0
Cbc0038I Pass   4: suminf.    2.49847 (7) obj. -5.5332 iterations 19
Cbc0038I Pass   5: suminf.    2.22363 (6) obj. -5.5332 iterations 1
Cbc0038I Pass   6: suminf.    1.82224 (7) obj. -5.5332 iterations 5
Cbc0038I Pass   7: suminf.    2.88618 (8) obj. -5.5332 iterations 8
Cbc0038I Pass   8: suminf.    2.84245 (9) obj. -5.5332 iterations 2
Cbc0038I Pass   9: suminf.    2.61527 (9) obj. -5.5332 iterations 7
Cbc0038I Pass  10: suminf.    2.43283 (8) obj. -5.5332 iterations 1
Cbc0038I Pass  11: suminf.    2.17973 (6) obj. -5.5332 iterations 11
Cbc0038I Pass  12: suminf.    2.07475 (5) obj. -5.5332 iterations 1
Cbc0038I Pass  13: suminf.    1.41042 (5) obj. -5.5332 iterations 2
Cbc0038I Pass  14: suminf.    2.09727 (7) obj. -5.5332 iterations 6
Cbc0038I Pass  15: suminf.    1.97513 (6) obj. -5.5332 iterations 1
Cbc0038I Pass  16: suminf.    1.93767 (5) obj. -5.5332 iterations 1
Cbc0038I Pass  17: suminf.    2.37249 (6) obj. -5.5332 iterations 2
Cbc0038I Pass  18: suminf.    3.18400 (12) obj. -5.5332 iterations 21
Cbc0038I Pass  19: suminf.    2.15819 (8) obj. -5.5332 iterations 9
Cbc0038I Pass  20: suminf.    1.77565 (9) obj. -5.5332 iterations 3
Cbc0038I Pass  21: suminf.    2.76487 (9) obj. -5.5332 iterations 21
Cbc0038I Pass  22: suminf.    2.16609 (8) obj. -5.5332 iterations 5
Cbc0038I Pass  23: suminf.    2.16609 (8) obj. -5.5332 iterations 0
Cbc0038I Pass  24: suminf.    3.07485 (8) obj. -5.5332 iterations 6
Cbc0038I Pass  25: suminf.    1.34567 (11) obj. -5.5332 iterations 10
Cbc0038I Pass  26: suminf.    1.22320 (13) obj. -5.5332 iterations 5
Cbc0038I Pass  27: suminf.    1.15133 (6) obj. -5.5332 iterations 20
Cbc0038I Pass  28: suminf.    0.99766 (5) obj. -5.5332 iterations 5
Cbc0038I Pass  29: suminf.    2.11883 (6) obj. -5.5332 iterations 10
Cbc0038I Pass  30: suminf.    2.05003 (5) obj. -5.5332 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -2.55902 to -2.9923 (0.12 seconds)
Cbc0038I Round again with cutoff of -10.8865
Cbc0038I Pass  30: suminf.    2.78840 (49) obj. -10.8865 iterations 0
Cbc0038I Pass  31: suminf.    1.63404 (8) obj. -10.8865 iterations 47
Cbc0038I Pass  32: suminf.    1.63404 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  33: suminf.    3.24666 (10) obj. -10.8865 iterations 18
Cbc0038I Pass  34: suminf.    2.86729 (8) obj. -10.8865 iterations 5
Cbc0038I Pass  35: suminf.    2.23597 (8) obj. -10.8865 iterations 5
Cbc0038I Pass  36: suminf.    2.23597 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  37: suminf.    1.95058 (6) obj. -10.8865 iterations 8
Cbc0038I Pass  38: suminf.    1.61056 (7) obj. -10.8865 iterations 2
Cbc0038I Pass  39: suminf.    1.14084 (8) obj. -10.8865 iterations 3
Cbc0038I Pass  40: suminf.    3.06784 (10) obj. -10.8865 iterations 16
Cbc0038I Pass  41: suminf.    2.62434 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  42: suminf.    2.36051 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  43: suminf.    2.41175 (7) obj. -10.8865 iterations 5
Cbc0038I Pass  44: suminf.    2.41175 (7) obj. -10.8865 iterations 1
Cbc0038I Pass  45: suminf.    2.51304 (7) obj. -10.8865 iterations 3
Cbc0038I Pass  46: suminf.    2.46542 (7) obj. -10.8865 iterations 2
Cbc0038I Pass  47: suminf.    3.93992 (11) obj. -10.8865 iterations 20
Cbc0038I Pass  48: suminf.    2.15064 (11) obj. -10.8865 iterations 12
Cbc0038I Pass  49: suminf.    3.11126 (8) obj. -10.8865 iterations 21
Cbc0038I Pass  50: suminf.    3.11126 (8) obj. -10.8865 iterations 0
Cbc0038I Pass  51: suminf.    3.26510 (8) obj. -10.8865 iterations 9
Cbc0038I Pass  52: suminf.    2.07211 (7) obj. -10.8865 iterations 8
Cbc0038I Pass  53: suminf.    1.79815 (7) obj. -10.8865 iterations 1
Cbc0038I Pass  54: suminf.    1.66520 (7) obj. -10.8865 iterations 4
Cbc0038I Pass  55: suminf.    2.57405 (9) obj. -10.8865 iterations 9
Cbc0038I Pass  56: suminf.    2.53943 (8) obj. -10.8865 iterations 3
Cbc0038I Pass  57: suminf.    3.29140 (8) obj. -10.8865 iterations 4
Cbc0038I Pass  58: suminf.    3.11126 (8) obj. -10.8865 iterations 4
Cbc0038I Pass  59: suminf.    3.26510 (8) obj. -10.8865 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -2.9923 - took 0.15 seconds
Cbc0012I Integer solution of -2.9923 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 90 rows 51 columns
Cbc0031I 28 added rows had average density of 42.392857
Cbc0013I At root node, 28 cuts changed objective from -32.299891 to -25.672048 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16433 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2223 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.9923 best solution, best possible -25.672048 (1.19 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 18 rows 17 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 6 rows 9 columns
Cbc0001I Search completed - best objective -2.9923, took 13067 iterations and 106 nodes (1.59 seconds)
Cbc0032I Strong branching done 1176 times (18455 iterations), fathomed 13 nodes and fixed 75 variables
Cbc0035I Maximum depth 19, 441 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       1.60

