Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 1.43816e-05 - average 1.58039e-07, 1 fixed columns
Coin0506I Presolve 89 (-2) rows, 50 (-1) columns and 270 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 35.021886
Clp0000I Optimal - objective value 35.021886
Coin0511I After Postsolve, objective 35.021886, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.021886
Clp0000I Optimal - objective value 35.021886
Clp0000I Optimal - objective value 35.021886
Coin0511I After Postsolve, objective 35.021886, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.02188585 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.84443
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.873 iterations 44
Cbc0038I Solution found of 3.873
Cbc0038I Relaxing continuous gives 3.873
Cbc0038I Rounding solution of 1.3614 is better than previous of 3.873

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 1.3614 to -6.54741 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.39494
Cbc0038I Pass   2: suminf.    1.74792 (10) obj. -9.39494 iterations 16
Cbc0038I Pass   3: suminf.    1.45781 (19) obj. -9.39494 iterations 9
Cbc0038I Pass   4: suminf.    1.78400 (7) obj. -9.39494 iterations 23
Cbc0038I Pass   5: suminf.    1.64545 (6) obj. -9.39494 iterations 2
Cbc0038I Pass   6: suminf.    2.10826 (7) obj. -9.39494 iterations 13
Cbc0038I Pass   7: suminf.    1.31284 (6) obj. -9.39494 iterations 2
Cbc0038I Pass   8: suminf.    1.01522 (5) obj. -9.39494 iterations 2
Cbc0038I Pass   9: suminf.    2.15190 (6) obj. -9.39494 iterations 8
Cbc0038I Pass  10: suminf.    1.76353 (5) obj. -9.39494 iterations 1
Cbc0038I Pass  11: suminf.    0.96300 (4) obj. -9.39494 iterations 3
Cbc0038I Pass  12: suminf.    0.96300 (4) obj. -9.39494 iterations 0
Cbc0038I Pass  13: suminf.    1.59161 (5) obj. -9.39494 iterations 2
Cbc0038I Pass  14: suminf.    1.57158 (4) obj. -9.39494 iterations 1
Cbc0038I Pass  15: suminf.    1.00286 (5) obj. -9.39494 iterations 2
Cbc0038I Pass  16: suminf.    1.53376 (6) obj. -9.39494 iterations 15
Cbc0038I Pass  17: suminf.    1.48199 (6) obj. -9.39494 iterations 3
Cbc0038I Pass  18: suminf.    1.73489 (6) obj. -9.39494 iterations 15
Cbc0038I Pass  19: suminf.    1.42287 (5) obj. -9.39494 iterations 3
Cbc0038I Pass  20: suminf.    1.39455 (7) obj. -9.39494 iterations 1
Cbc0038I Pass  21: suminf.    2.43026 (6) obj. -9.39494 iterations 8
Cbc0038I Pass  22: suminf.    2.06311 (6) obj. -9.39494 iterations 1
Cbc0038I Pass  23: suminf.    2.04180 (6) obj. -9.39494 iterations 1
Cbc0038I Pass  24: suminf.    2.03956 (7) obj. -9.39494 iterations 11
Cbc0038I Pass  25: suminf.    1.50714 (5) obj. -9.39494 iterations 2
Cbc0038I Pass  26: suminf.    1.39455 (7) obj. -9.39494 iterations 3
Cbc0038I Pass  27: suminf.    2.43026 (6) obj. -9.39494 iterations 8
Cbc0038I Pass  28: suminf.    2.06311 (6) obj. -9.39494 iterations 1
Cbc0038I Pass  29: suminf.    2.04180 (6) obj. -9.39494 iterations 1
Cbc0038I Pass  30: suminf.    2.03956 (7) obj. -9.39494 iterations 11
Cbc0038I Pass  31: suminf.    1.50714 (5) obj. -9.39494 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -6.54741 - took 0.11 seconds
Cbc0012I Integer solution of -6.547407 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 26 added rows had average density of 31.461538
Cbc0013I At root node, 26 cuts changed objective from -35.021886 to -25.347998 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10846 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2400 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 306 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.547407 best solution, best possible -25.347998 (0.70 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 3 rows 5 columns
Cbc0001I Search completed - best objective -6.547407, took 8979 iterations and 76 nodes (0.90 seconds)
Cbc0032I Strong branching done 680 times (12549 iterations), fathomed 13 nodes and fixed 10 variables
Cbc0035I Maximum depth 19, 87 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.92

