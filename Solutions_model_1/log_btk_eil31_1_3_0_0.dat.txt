Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-10) rows, 31 (-2) columns and 165 (-18) elements
Clp1000I sum of infeasibilities 7.64452e-06 - average 1.38991e-07, 20 fixed columns
Coin0506I Presolve 14 (-41) rows, 9 (-22) columns and 40 (-125) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Coin0511I After Postsolve, objective 1249.2489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Coin0511I After Postsolve, objective 1249.2489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1249.248856 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 31 columns (30 integer (30 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.605%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.90721
Cbc0038I Pass   1: suminf.    0.04065 (1) obj. -1131.32 iterations 6
Cbc0038I Solution found of -439.621
Cbc0038I Relaxing continuous gives -439.621
Cbc0038I Rounding solution of -723.192 is better than previous of -439.621

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -772.644
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04065 (1) obj. -1131.32 iterations 0
Cbc0038I Pass   3: suminf.    0.46188 (1) obj. -772.644 iterations 1
Cbc0038I Pass   4: suminf.    2.36441 (6) obj. -772.644 iterations 9
Cbc0038I Pass   5: suminf.    0.18379 (1) obj. -772.644 iterations 11
Cbc0038I Pass   6: suminf.    0.31987 (2) obj. -1157.51 iterations 2
Cbc0038I Pass   7: suminf.    0.20371 (1) obj. -772.644 iterations 3
Cbc0038I Pass   8: suminf.    0.14634 (1) obj. -814.008 iterations 1
Cbc0038I Pass   9: suminf.    0.47967 (1) obj. -788.612 iterations 10
Cbc0038I Pass  10: suminf.    0.45753 (1) obj. -772.644 iterations 3
Cbc0038I Pass  11: suminf.    0.47967 (1) obj. -788.612 iterations 1
Cbc0038I Pass  12: suminf.    0.59457 (4) obj. -772.644 iterations 8
Cbc0038I Pass  13: suminf.    0.58536 (3) obj. -772.644 iterations 1
Cbc0038I Pass  14: suminf.    0.68865 (2) obj. -912.864 iterations 2
Cbc0038I Pass  15: suminf.    0.35540 (2) obj. -772.644 iterations 1
Cbc0038I Pass  16: suminf.    1.03534 (5) obj. -772.644 iterations 8
Cbc0038I Pass  17: suminf.    0.65905 (3) obj. -772.644 iterations 2
Cbc0038I Pass  18: suminf.    0.71599 (2) obj. -935.117 iterations 1
Cbc0038I Pass  19: suminf.    0.46341 (1) obj. -824.399 iterations 1
Cbc0038I Pass  20: suminf.    0.46480 (1) obj. -772.644 iterations 1
Cbc0038I Pass  21: suminf.    0.79137 (4) obj. -772.644 iterations 4
Cbc0038I Pass  22: suminf.    0.47237 (2) obj. -772.644 iterations 3
Cbc0038I Pass  23: suminf.    0.59749 (2) obj. -833.111 iterations 1
Cbc0038I Pass  24: suminf.    1.17870 (6) obj. -772.644 iterations 11
Cbc0038I Pass  25: suminf.    0.30466 (2) obj. -772.644 iterations 5
Cbc0038I Pass  26: suminf.    0.74008 (2) obj. -772.644 iterations 1
Cbc0038I Pass  27: suminf.    0.83905 (3) obj. -772.644 iterations 7
Cbc0038I Pass  28: suminf.    0.73162 (2) obj. -772.644 iterations 5
Cbc0038I Pass  29: suminf.    0.48780 (1) obj. -789.764 iterations 2
Cbc0038I Pass  30: suminf.    0.46406 (1) obj. -772.644 iterations 1
Cbc0038I Pass  31: suminf.    1.20582 (4) obj. -772.644 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -439.621 to -760.822 (0.02 seconds)
Cbc0038I Round again with cutoff of -861.657
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.04065 (1) obj. -1131.32 iterations 0
Cbc0038I Pass  32: suminf.    0.41466 (1) obj. -861.657 iterations 1
Cbc0038I Pass  33: suminf.    1.41144 (8) obj. -861.657 iterations 22
Cbc0038I Pass  34: suminf.    0.79363 (3) obj. -861.657 iterations 6
Cbc0038I Pass  35: suminf.    0.44635 (2) obj. -861.657 iterations 3
Cbc0038I Pass  36: suminf.    0.70324 (2) obj. -861.657 iterations 4
Cbc0038I Pass  37: suminf.    0.75566 (3) obj. -861.657 iterations 9
Cbc0038I Pass  38: suminf.    0.75566 (3) obj. -861.657 iterations 1
Cbc0038I Pass  39: suminf.    0.55309 (2) obj. -861.657 iterations 2
Cbc0038I Pass  40: suminf.    0.44789 (2) obj. -861.657 iterations 2
Cbc0038I Pass  41: suminf.    0.68179 (2) obj. -861.657 iterations 4
Cbc0038I Pass  42: suminf.    0.65679 (2) obj. -861.657 iterations 4
Cbc0038I Pass  43: suminf.    0.70774 (2) obj. -883.094 iterations 1
Cbc0038I Pass  44: suminf.    0.41570 (3) obj. -861.657 iterations 9
Cbc0038I Pass  45: suminf.    0.41570 (3) obj. -861.657 iterations 1
Cbc0038I Pass  46: suminf.    0.46373 (2) obj. -950.475 iterations 3
Cbc0038I Pass  47: suminf.    0.30317 (1) obj. -861.657 iterations 2
Cbc0038I Pass  48: suminf.    0.37398 (1) obj. -912.712 iterations 1
Cbc0038I Pass  49: suminf.    1.65839 (4) obj. -861.657 iterations 9
Cbc0038I Pass  50: suminf.    0.58856 (2) obj. -861.657 iterations 4
Cbc0038I Pass  51: suminf.    0.58856 (2) obj. -861.657 iterations 0
Cbc0038I Pass  52: suminf.    0.76013 (2) obj. -861.657 iterations 1
Cbc0038I Pass  53: suminf.    0.53140 (3) obj. -861.657 iterations 6
Cbc0038I Pass  54: suminf.    0.53140 (3) obj. -861.657 iterations 0
Cbc0038I Pass  55: suminf.    0.56354 (2) obj. -861.657 iterations 2
Cbc0038I Pass  56: suminf.    0.45840 (2) obj. -861.657 iterations 2
Cbc0038I Pass  57: suminf.    0.61559 (5) obj. -861.657 iterations 8
Cbc0038I Pass  58: suminf.    0.38483 (3) obj. -861.657 iterations 2
Cbc0038I Pass  59: suminf.    0.36799 (2) obj. -861.657 iterations 3
Cbc0038I Pass  60: suminf.    0.64014 (2) obj. -861.657 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -760.822 - took 0.05 seconds
Cbc0012I Integer solution of -760.8221 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 31 columns, reduced to 16 rows 10 columns
Cbc0031I 3 added rows had average density of 23
Cbc0013I At root node, 3 cuts changed objective from -1217.711 to -802.24591 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 281 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 336 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.744 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -760.8221 best solution, best possible -802.24591 (1.39 seconds)
Cbc0012I Integer solution of -770.73 found by rounding after 1342 iterations and 17 nodes (2.04 seconds)
Cbc0010I After 17 nodes, 2 on tree, -770.73 best solution, best possible -802.24591 (2.17 seconds)
Cbc0001I Search completed - best objective -770.73, took 1436 iterations and 20 nodes (2.24 seconds)
Cbc0032I Strong branching done 200 times (1029 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 7, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       2.25

