Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 72 (-6) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 2.31206e-05 - average 1.8063e-07, 16 fixed columns
Coin0506I Presolve 96 (-32) rows, 55 (-17) columns and 294 (-98) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.35131709 - largest nonzero change 0 ( 0%) - largest zero change 2.888273e-05
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Coin0511I After Postsolve, objective 72.383804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Clp0000I Optimal - objective value 72.383804
Coin0511I After Postsolve, objective 72.383804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.38380361 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 72 columns (71 integer (71 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.734%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.00604
Cbc0038I Solution found of -3.95129
Cbc0038I Relaxing continuous gives -13.4567
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -13.4567 to -40.2329 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.4121
Cbc0038I Pass   1: suminf.    2.04073 (18) obj. -43.4121 iterations 35
Cbc0038I Pass   2: suminf.    0.88876 (3) obj. -43.4121 iterations 31
Cbc0038I Pass   3: suminf.    0.34796 (2) obj. -43.4121 iterations 2
Cbc0038I Pass   4: suminf.    1.07628 (4) obj. -43.4121 iterations 10
Cbc0038I Pass   5: suminf.    0.52946 (3) obj. -43.4121 iterations 6
Cbc0038I Pass   6: suminf.    0.46887 (2) obj. -43.4121 iterations 3
Cbc0038I Pass   7: suminf.    0.51398 (3) obj. -43.4121 iterations 3
Cbc0038I Pass   8: suminf.    0.65110 (4) obj. -43.4121 iterations 16
Cbc0038I Pass   9: suminf.    0.56319 (3) obj. -43.4121 iterations 4
Cbc0038I Pass  10: suminf.    1.09848 (4) obj. -43.4121 iterations 12
Cbc0038I Pass  11: suminf.    0.57731 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  12: suminf.    0.72321 (2) obj. -43.4121 iterations 3
Cbc0038I Pass  13: suminf.    1.05586 (5) obj. -43.4121 iterations 15
Cbc0038I Pass  14: suminf.    0.37449 (3) obj. -43.4121 iterations 4
Cbc0038I Pass  15: suminf.    1.20910 (4) obj. -43.4121 iterations 9
Cbc0038I Pass  16: suminf.    0.41102 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  17: suminf.    0.41102 (2) obj. -43.4121 iterations 0
Cbc0038I Pass  18: suminf.    0.95914 (4) obj. -43.4121 iterations 6
Cbc0038I Pass  19: suminf.    0.51626 (2) obj. -43.4121 iterations 6
Cbc0038I Pass  20: suminf.    0.33341 (1) obj. -43.4121 iterations 3
Cbc0038I Pass  21: suminf.    0.35420 (1) obj. -43.4121 iterations 2
Cbc0038I Pass  22: suminf.    0.66111 (4) obj. -43.4121 iterations 19
Cbc0038I Pass  23: suminf.    0.50508 (6) obj. -43.4121 iterations 11
Cbc0038I Pass  24: suminf.    1.28394 (5) obj. -43.4121 iterations 12
Cbc0038I Pass  25: suminf.    0.69755 (5) obj. -43.4121 iterations 7
Cbc0038I Pass  26: suminf.    1.22523 (4) obj. -43.4121 iterations 11
Cbc0038I Pass  27: suminf.    1.21684 (4) obj. -43.4121 iterations 4
Cbc0038I Pass  28: suminf.    0.67616 (4) obj. -43.4121 iterations 6
Cbc0038I Pass  29: suminf.    0.60267 (4) obj. -43.4121 iterations 4
Cbc0038I Pass  30: suminf.    1.45661 (4) obj. -43.4121 iterations 9
Cbc0038I Rounding solution of -45.2006 is better than previous of -40.2329

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 63 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -50.5654
Cbc0038I Pass  30: suminf.    2.52805 (18) obj. -50.5654 iterations 0
Cbc0038I Pass  31: suminf.    1.47097 (6) obj. -50.5654 iterations 22
Cbc0038I Pass  32: suminf.    1.29645 (5) obj. -50.5654 iterations 2
Cbc0038I Pass  33: suminf.    1.13132 (7) obj. -50.5654 iterations 16
Cbc0038I Pass  34: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  35: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  36: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  37: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  38: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  39: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  40: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  41: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  42: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  43: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  44: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  45: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  46: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  47: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  48: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  49: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  50: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  51: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  52: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  53: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  54: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I Pass  55: suminf.    2.02999 (6) obj. -50.5654 iterations 7
Cbc0038I Pass  56: suminf.    1.62387 (7) obj. -50.5654 iterations 10
Cbc0038I Pass  57: suminf.    1.26750 (6) obj. -50.5654 iterations 14
Cbc0038I Pass  58: suminf.    1.13132 (7) obj. -50.5654 iterations 7
Cbc0038I Pass  59: suminf.    2.42160 (8) obj. -50.5654 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -45.2006 - took 0.06 seconds
Cbc0012I Integer solution of -45.20059 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 43 rows 26 columns
Cbc0031I 21 added rows had average density of 43.47619
Cbc0013I At root node, 21 cuts changed objective from -72.024366 to -63.426448 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5854 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1158 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 58.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -45.20059 best solution, best possible -63.426448 (0.70 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 20 rows 14 columns
Cbc0001I Search completed - best objective -45.20059000000001, took 6510 iterations and 56 nodes (0.90 seconds)
Cbc0032I Strong branching done 684 times (12320 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 23, 282 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.90

