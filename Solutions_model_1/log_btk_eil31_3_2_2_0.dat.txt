Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 25 (-8) columns and 131 (-52) elements
Clp1000I sum of infeasibilities 3.25375e-09 - average 7.39488e-11, 20 fixed columns
Coin0506I Presolve 4 (-40) rows, 4 (-21) columns and 12 (-119) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 3060.1117
Clp0000I Optimal - objective value 3060.1117
Coin0511I After Postsolve, objective 3060.1117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8743155 - largest nonzero change 0 ( 0%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 3060.1117
Clp0000I Optimal - objective value 3060.1117
Clp0000I Optimal - objective value 3060.1117
Coin0511I After Postsolve, objective 3060.1117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3060.111673 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.559071
Cbc0038I Pass   1: suminf.    0.22764 (1) obj. -3030.02 iterations 5
Cbc0038I Solution found of -1590.4
Cbc0038I Relaxing continuous gives -1590.4
Cbc0038I Rounding solution of -1730.85 is better than previous of -1590.4

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1863.77
Cbc0038I Pass   2: suminf.    0.22764 (1) obj. -3030.02 iterations 0
Cbc0038I Pass   3: suminf.    0.14667 (1) obj. -1863.77 iterations 1
Cbc0038I Pass   4: suminf.    0.19284 (1) obj. -1863.77 iterations 10
Cbc0038I Pass   5: suminf.    0.02439 (1) obj. -2175.73 iterations 4
Cbc0038I Pass   6: suminf.    0.19284 (1) obj. -1863.77 iterations 1
Cbc0038I Pass   7: suminf.    0.24211 (1) obj. -1893.64 iterations 10
Cbc0038I Pass   8: suminf.    0.24211 (1) obj. -1893.64 iterations 1
Cbc0038I Pass   9: suminf.    0.34551 (1) obj. -1863.77 iterations 3
Cbc0038I Pass  10: suminf.    0.20325 (1) obj. -2128.92 iterations 1
Cbc0038I Pass  11: suminf.    0.20325 (1) obj. -2128.92 iterations 0
Cbc0038I Pass  12: suminf.    0.20325 (1) obj. -2128.92 iterations 0
Cbc0038I Pass  13: suminf.    0.76791 (3) obj. -1863.77 iterations 8
Cbc0038I Pass  14: suminf.    0.57507 (2) obj. -1863.77 iterations 2
Cbc0038I Pass  15: suminf.    0.61825 (2) obj. -1917.51 iterations 1
Cbc0038I Pass  16: suminf.    1.06385 (4) obj. -1863.77 iterations 8
Cbc0038I Pass  17: suminf.    1.06385 (4) obj. -1863.77 iterations 0
Cbc0038I Pass  18: suminf.    0.25321 (2) obj. -2323.73 iterations 3
Cbc0038I Pass  19: suminf.    0.08889 (1) obj. -2098.6 iterations 1
Cbc0038I Pass  20: suminf.    0.62282 (2) obj. -1863.77 iterations 2
Cbc0038I Pass  21: suminf.    1.06385 (4) obj. -1863.77 iterations 2
Cbc0038I Pass  22: suminf.    0.55333 (2) obj. -2088.65 iterations 5
Cbc0038I Pass  23: suminf.    0.55333 (2) obj. -2088.65 iterations 0
Cbc0038I Pass  24: suminf.    0.77401 (2) obj. -1863.77 iterations 3
Cbc0038I Pass  25: suminf.    0.69151 (2) obj. -2336.67 iterations 1
Cbc0038I Pass  26: suminf.    0.34635 (2) obj. -1863.77 iterations 1
Cbc0038I Pass  27: suminf.    0.77401 (2) obj. -1863.77 iterations 1
Cbc0038I Pass  28: suminf.    0.51877 (2) obj. -1863.77 iterations 9
Cbc0038I Pass  29: suminf.    0.40444 (2) obj. -1950.98 iterations 5
Cbc0038I Pass  30: suminf.    0.35273 (2) obj. -1863.77 iterations 3
Cbc0038I Pass  31: suminf.    0.03567 (1) obj. -1863.77 iterations 2
Cbc0038I Rounding solution of -1797.29 is better than previous of -1730.85

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -1797.29 to -2195.13 (0.02 seconds)
Cbc0038I Round again with cutoff of -2368.12
Cbc0038I Pass  31: suminf.    0.22764 (1) obj. -3030.02 iterations 0
Cbc0038I Pass  32: suminf.    0.41725 (1) obj. -2368.12 iterations 1
Cbc0038I Pass  33: suminf.    0.87606 (4) obj. -2368.12 iterations 11
Cbc0038I Pass  34: suminf.    0.87606 (4) obj. -2368.12 iterations 0
Cbc0038I Pass  35: suminf.    0.78765 (2) obj. -2368.12 iterations 3
Cbc0038I Pass  36: suminf.    0.21983 (1) obj. -2368.12 iterations 3
Cbc0038I Pass  37: suminf.    0.47606 (2) obj. -2755.87 iterations 2
Cbc0038I Pass  38: suminf.    1.64435 (6) obj. -2368.12 iterations 12
Cbc0038I Pass  39: suminf.    0.79383 (4) obj. -2368.12 iterations 1
Cbc0038I Pass  40: suminf.    0.91737 (3) obj. -2368.12 iterations 3
Cbc0038I Pass  41: suminf.    0.28935 (2) obj. -2368.12 iterations 3
Cbc0038I Pass  42: suminf.    0.33412 (2) obj. -2368.12 iterations 1
Cbc0038I Pass  43: suminf.    2.46383 (7) obj. -2368.12 iterations 8
Cbc0038I Pass  44: suminf.    0.91737 (3) obj. -2368.12 iterations 4
Cbc0038I Pass  45: suminf.    0.53694 (4) obj. -2557.15 iterations 6
Cbc0038I Pass  46: suminf.    0.32222 (2) obj. -2510.42 iterations 3
Cbc0038I Pass  47: suminf.    0.71618 (2) obj. -2368.12 iterations 3
Cbc0038I Pass  48: suminf.    0.19976 (1) obj. -2368.12 iterations 3
Cbc0038I Pass  49: suminf.    0.41662 (2) obj. -2740.9 iterations 2
Cbc0038I Pass  50: suminf.    0.29032 (4) obj. -2368.12 iterations 3
Cbc0038I Pass  51: suminf.    0.01667 (1) obj. -2456.57 iterations 9
Cbc0038I Pass  52: suminf.    0.01667 (1) obj. -2456.57 iterations 1
Cbc0038I Pass  53: suminf.    0.39771 (1) obj. -2368.12 iterations 3
Cbc0038I Pass  54: suminf.    0.47967 (1) obj. -2520.91 iterations 1
Cbc0038I Pass  55: suminf.    0.47967 (1) obj. -2559.26 iterations 4
Cbc0038I Pass  56: suminf.    0.47967 (1) obj. -2559.26 iterations 2
Cbc0038I Pass  57: suminf.    0.41778 (1) obj. -2368.12 iterations 1
Cbc0038I Pass  58: suminf.    0.78967 (3) obj. -2368.12 iterations 8
Cbc0038I Pass  59: suminf.    0.40099 (2) obj. -2368.12 iterations 5
Cbc0038I Pass  60: suminf.    0.53821 (2) obj. -2368.12 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2195.13 to -2212.78 (0.03 seconds)
Cbc0038I Round again with cutoff of -2575.72
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.22764 (1) obj. -3030.02 iterations 0
Cbc0038I Pass  61: suminf.    0.47137 (1) obj. -2575.72 iterations 1
Cbc0038I Pass  62: suminf.    0.54322 (2) obj. -2575.72 iterations 6
Cbc0038I Pass  63: suminf.    0.45718 (2) obj. -2748.75 iterations 3
Cbc0038I Pass  64: suminf.    0.59622 (2) obj. -2575.72 iterations 1
Cbc0038I Pass  65: suminf.    1.28523 (4) obj. -2575.72 iterations 2
Cbc0038I Pass  66: suminf.    1.07359 (4) obj. -2575.72 iterations 7
Cbc0038I Pass  67: suminf.    1.07359 (4) obj. -2575.72 iterations 0
Cbc0038I Pass  68: suminf.    1.28847 (4) obj. -2575.72 iterations 3
Cbc0038I Pass  69: suminf.    0.53920 (2) obj. -2575.72 iterations 3
Cbc0038I Pass  70: suminf.    0.61355 (2) obj. -2575.72 iterations 1
Cbc0038I Pass  71: suminf.    0.51825 (2) obj. -2692.13 iterations 1
Cbc0038I Pass  72: suminf.    0.61355 (2) obj. -2575.72 iterations 1
Cbc0038I Pass  73: suminf.    2.94025 (7) obj. -2575.72 iterations 10
Cbc0038I Pass  74: suminf.    1.05904 (3) obj. -2575.72 iterations 6
Cbc0038I Pass  75: suminf.    0.32385 (2) obj. -2915.39 iterations 2
Cbc0038I Pass  76: suminf.    0.60194 (2) obj. -2575.72 iterations 1
Cbc0038I Pass  77: suminf.    0.25203 (1) obj. -2718.62 iterations 4
Cbc0038I Pass  78: suminf.    0.25203 (1) obj. -2718.62 iterations 1
Cbc0038I Pass  79: suminf.    0.32870 (1) obj. -2575.72 iterations 1
Cbc0038I Pass  80: suminf.    0.29289 (3) obj. -2575.72 iterations 5
Cbc0038I Pass  81: suminf.    0.28934 (1) obj. -2575.72 iterations 1
Cbc0038I Pass  82: suminf.    0.32141 (2) obj. -2622.01 iterations 2
Cbc0038I Pass  83: suminf.    0.49625 (1) obj. -2575.72 iterations 4
Cbc0038I Pass  84: suminf.    0.32385 (2) obj. -2915.39 iterations 2
Cbc0038I Pass  85: suminf.    0.60194 (2) obj. -2575.72 iterations 1
Cbc0038I Pass  86: suminf.    0.60194 (2) obj. -2575.72 iterations 1
Cbc0038I Pass  87: suminf.    0.40360 (2) obj. -2575.72 iterations 5
Cbc0038I Pass  88: suminf.    0.40360 (2) obj. -2575.72 iterations 1
Cbc0038I Pass  89: suminf.    0.45420 (2) obj. -2575.72 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2212.78 - took 0.02 seconds
Cbc0012I Integer solution of -2212.7773 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 3 rows 4 columns
Cbc0031I 8 added rows had average density of 10.125
Cbc0013I At root node, 8 cuts changed objective from -3060.1117 to -2241.334 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 190 row cuts average 2.8 elements, 8 column cuts (8 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 277 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.788 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2212.7773 best solution, best possible -2241.3055 (1.51 seconds)
Cbc0001I Search completed - best objective -2212.7773, took 961 iterations and 2 nodes (1.52 seconds)
Cbc0032I Strong branching done 12 times (87 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       1.53

