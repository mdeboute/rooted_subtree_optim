Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 4.98241e-06 - average 5.41566e-08, 0 fixed columns
Coin0506I Presolve 92 (0) rows, 51 (0) columns and 278 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Coin0511I After Postsolve, objective 34.141651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Coin0511I After Postsolve, objective 34.141651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.14165053 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.0328
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.24589 iterations 37
Cbc0038I Solution found of 8.24589
Cbc0038I Relaxing continuous gives 8.24589
Cbc0038I Rounding solution of 5.84324 is better than previous of 8.24589

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 5.84324 to -2.30589 (0.06 seconds)
Cbc0038I Round again with cutoff of -5.48955
Cbc0038I Pass   2: suminf.    1.46867 (27) obj. -5.48955 iterations 29
Cbc0038I Pass   3: suminf.    1.32444 (38) obj. -5.48955 iterations 17
Cbc0038I Pass   4: suminf.    1.10908 (7) obj. -5.48955 iterations 51
Cbc0038I Pass   5: suminf.    0.67337 (5) obj. -5.48955 iterations 4
Cbc0038I Pass   6: suminf.    0.91765 (3) obj. -5.48955 iterations 8
Cbc0038I Pass   7: suminf.    0.91765 (3) obj. -5.48955 iterations 1
Cbc0038I Pass   8: suminf.    1.33644 (3) obj. -5.48955 iterations 3
Cbc0038I Pass   9: suminf.    0.91765 (3) obj. -5.48955 iterations 2
Cbc0038I Pass  10: suminf.    1.81210 (7) obj. -5.48955 iterations 12
Cbc0038I Pass  11: suminf.    1.65627 (6) obj. -5.48955 iterations 5
Cbc0038I Pass  12: suminf.    1.47229 (5) obj. -5.48955 iterations 7
Cbc0038I Pass  13: suminf.    1.47229 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  14: suminf.    2.12964 (5) obj. -5.48955 iterations 3
Cbc0038I Pass  15: suminf.    2.17640 (9) obj. -5.48955 iterations 12
Cbc0038I Pass  16: suminf.    1.52756 (5) obj. -5.48955 iterations 5
Cbc0038I Pass  17: suminf.    1.35352 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  18: suminf.    1.35352 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  19: suminf.    1.22997 (5) obj. -5.48955 iterations 8
Cbc0038I Pass  20: suminf.    1.32029 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  21: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  22: suminf.    1.45064 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  23: suminf.    1.13130 (5) obj. -5.48955 iterations 6
Cbc0038I Pass  24: suminf.    1.04071 (4) obj. -5.48955 iterations 6
Cbc0038I Pass  25: suminf.    1.32029 (5) obj. -5.48955 iterations 2
Cbc0038I Pass  26: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  27: suminf.    1.45064 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  28: suminf.    1.13130 (5) obj. -5.48955 iterations 5
Cbc0038I Pass  29: suminf.    1.04071 (4) obj. -5.48955 iterations 5
Cbc0038I Pass  30: suminf.    1.32029 (5) obj. -5.48955 iterations 2
Cbc0038I Pass  31: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2.30589 - took 0.08 seconds
Cbc0012I Integer solution of -2.305885 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 25 added rows had average density of 32.32
Cbc0013I At root node, 25 cuts changed objective from -34.141651 to -23.823882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10496 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1585 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 160 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0010I After 7 nodes, 8 on tree, -2.305885 best solution, best possible -23.823882 (0.68 seconds)
Cbc0001I Search completed - best objective -2.305884999999996, took 8921 iterations and 76 nodes (0.92 seconds)
Cbc0032I Strong branching done 992 times (16312 iterations), fathomed 1 nodes and fixed 47 variables
Cbc0035I Maximum depth 16, 106 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.93

