Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 24 (-9) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 7.85267e-05 - average 2.01351e-06, 6 fixed columns
Coin0506I Presolve 27 (-12) rows, 18 (-6) columns and 82 (-36) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 1.8231216 - largest nonzero change 0 ( 0%) - largest zero change 1.3105789e-05
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Coin0511I After Postsolve, objective 289.53063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Clp0000I Optimal - objective value 289.53063
Coin0511I After Postsolve, objective 289.53063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 289.5306266 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 24 columns (23 integer (23 of which binary)) and 129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.718%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.19637
Cbc0038I Pass   1: suminf.    0.02439 (1) obj. -216.429 iterations 8
Cbc0038I Solution found of -39.5673
Cbc0038I Relaxing continuous gives -40.3722
Cbc0038I Rounding solution of -100.356 is better than previous of -40.3722

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -100.356 to -145.95 (0.01 seconds)
Cbc0038I Round again with cutoff of -153.696
Cbc0038I Pass   2: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass   3: suminf.    0.37488 (1) obj. -153.696 iterations 2
Cbc0038I Pass   4: suminf.    1.88666 (7) obj. -153.696 iterations 6
Cbc0038I Pass   5: suminf.    0.37488 (1) obj. -153.696 iterations 7
Cbc0038I Pass   6: suminf.    0.23810 (1) obj. -178.493 iterations 1
Cbc0038I Pass   7: suminf.    1.29773 (3) obj. -153.696 iterations 5
Cbc0038I Pass   8: suminf.    0.18909 (1) obj. -153.696 iterations 4
Cbc0038I Pass   9: suminf.    0.21951 (1) obj. -159.211 iterations 1
Cbc0038I Pass  10: suminf.    1.29773 (3) obj. -153.696 iterations 3
Cbc0038I Pass  11: suminf.    1.24044 (7) obj. -153.696 iterations 11
Cbc0038I Pass  12: suminf.    1.24044 (7) obj. -153.696 iterations 1
Cbc0038I Pass  13: suminf.    0.31474 (1) obj. -153.696 iterations 9
Cbc0038I Pass  14: suminf.    0.31474 (1) obj. -153.696 iterations 2
Cbc0038I Pass  15: suminf.    0.32520 (1) obj. -155.593 iterations 1
Cbc0038I Pass  16: suminf.    0.76895 (2) obj. -153.696 iterations 6
Cbc0038I Pass  17: suminf.    0.71214 (3) obj. -153.696 iterations 3
Cbc0038I Pass  18: suminf.    0.41111 (1) obj. -164.743 iterations 4
Cbc0038I Pass  19: suminf.    0.41111 (1) obj. -164.743 iterations 0
Cbc0038I Pass  20: suminf.    0.42971 (2) obj. -153.696 iterations 2
Cbc0038I Pass  21: suminf.    0.45211 (1) obj. -153.696 iterations 5
Cbc0038I Pass  22: suminf.    0.32520 (1) obj. -176.701 iterations 1
Cbc0038I Pass  23: suminf.    0.45211 (1) obj. -153.696 iterations 1
Cbc0038I Pass  24: suminf.    1.12679 (4) obj. -153.696 iterations 3
Cbc0038I Pass  25: suminf.    0.85343 (3) obj. -158.4 iterations 3
Cbc0038I Pass  26: suminf.    0.79503 (2) obj. -153.696 iterations 4
Cbc0038I Pass  27: suminf.    0.80527 (2) obj. -153.696 iterations 1
Cbc0038I Pass  28: suminf.    1.53810 (8) obj. -153.696 iterations 10
Cbc0038I Pass  29: suminf.    1.47458 (7) obj. -153.696 iterations 3
Cbc0038I Pass  30: suminf.    0.42768 (1) obj. -153.696 iterations 11
Cbc0038I Pass  31: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Rounding solution of -171.033 is better than previous of -145.95

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -171.033 to -173.283 (0.02 seconds)
Cbc0038I Round again with cutoff of -183.309
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass  32: suminf.    0.21153 (1) obj. -183.309 iterations 2
Cbc0038I Pass  33: suminf.    1.86949 (4) obj. -183.309 iterations 7
Cbc0038I Pass  34: suminf.    0.21153 (1) obj. -183.309 iterations 6
Cbc0038I Pass  35: suminf.    1.91532 (7) obj. -183.309 iterations 9
Cbc0038I Pass  36: suminf.    0.50135 (3) obj. -183.309 iterations 7
Cbc0038I Pass  37: suminf.    0.43996 (2) obj. -183.309 iterations 2
Cbc0038I Pass  38: suminf.    1.23041 (5) obj. -183.309 iterations 8
Cbc0038I Pass  39: suminf.    0.03024 (2) obj. -183.309 iterations 8
Cbc0038I Pass  40: suminf.    0.26433 (1) obj. -183.309 iterations 4
Cbc0038I Pass  41: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  42: suminf.    1.14344 (4) obj. -183.309 iterations 8
Cbc0038I Pass  43: suminf.    0.23577 (1) obj. -194.914 iterations 4
Cbc0038I Pass  44: suminf.    0.29979 (1) obj. -183.309 iterations 1
Cbc0038I Pass  45: suminf.    0.95368 (4) obj. -183.309 iterations 8
Cbc0038I Pass  46: suminf.    0.95368 (4) obj. -183.309 iterations 1
Cbc0038I Pass  47: suminf.    0.21153 (1) obj. -183.309 iterations 4
Cbc0038I Pass  48: suminf.    0.02439 (1) obj. -216.429 iterations 2
Cbc0038I Pass  49: suminf.    1.32005 (3) obj. -192.478 iterations 5
Cbc0038I Pass  50: suminf.    1.14207 (3) obj. -183.309 iterations 1
Cbc0038I Pass  51: suminf.    0.48187 (3) obj. -183.309 iterations 3
Cbc0038I Pass  52: suminf.    0.40775 (2) obj. -183.309 iterations 1
Cbc0038I Pass  53: suminf.    0.21153 (1) obj. -183.309 iterations 2
Cbc0038I Pass  54: suminf.    0.02439 (1) obj. -216.429 iterations 2
Cbc0038I Pass  55: suminf.    0.30772 (2) obj. -183.309 iterations 3
Cbc0038I Pass  56: suminf.    0.93685 (4) obj. -183.309 iterations 4
Cbc0038I Pass  57: suminf.    0.41783 (3) obj. -183.309 iterations 2
Cbc0038I Pass  58: suminf.    0.49125 (3) obj. -183.309 iterations 4
Cbc0038I Pass  59: suminf.    0.03024 (2) obj. -183.309 iterations 3
Cbc0038I Pass  60: suminf.    0.26433 (1) obj. -183.309 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -173.283 to -175.283 (0.03 seconds)
Cbc0038I Round again with cutoff of -195.339
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.02439 (1) obj. -216.429 iterations 0
Cbc0038I Pass  61: suminf.    0.14517 (1) obj. -195.339 iterations 2
Cbc0038I Pass  62: suminf.    0.37010 (2) obj. -195.339 iterations 5
Cbc0038I Pass  63: suminf.    0.37010 (2) obj. -195.339 iterations 2
Cbc0038I Pass  64: suminf.    0.37010 (2) obj. -195.339 iterations 4
Cbc0038I Pass  65: suminf.    0.37010 (2) obj. -195.339 iterations 4
Cbc0038I Pass  66: suminf.    0.90531 (3) obj. -195.339 iterations 5
Cbc0038I Pass  67: suminf.    0.90531 (3) obj. -195.339 iterations 1
Cbc0038I Pass  68: suminf.    0.19797 (1) obj. -195.339 iterations 8
Cbc0038I Pass  69: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  70: suminf.    1.76509 (6) obj. -195.339 iterations 8
Cbc0038I Pass  71: suminf.    1.76509 (6) obj. -195.339 iterations 2
Cbc0038I Pass  72: suminf.    0.11429 (1) obj. -195.339 iterations 7
Cbc0038I Pass  73: suminf.    0.90531 (3) obj. -195.339 iterations 6
Cbc0038I Pass  74: suminf.    0.90531 (3) obj. -195.339 iterations 2
Cbc0038I Pass  75: suminf.    0.19797 (1) obj. -195.339 iterations 7
Cbc0038I Pass  76: suminf.    0.11429 (1) obj. -210.509 iterations 1
Cbc0038I Pass  77: suminf.    0.35823 (3) obj. -195.339 iterations 6
Cbc0038I Pass  78: suminf.    0.35823 (3) obj. -195.339 iterations 2
Cbc0038I Pass  79: suminf.    1.07551 (3) obj. -195.339 iterations 7
Cbc0038I Pass  80: suminf.    0.69800 (3) obj. -195.339 iterations 2
Cbc0038I Pass  81: suminf.    0.69800 (3) obj. -195.339 iterations 1
Cbc0038I Pass  82: suminf.    1.07551 (3) obj. -195.339 iterations 2
Cbc0038I Pass  83: suminf.    1.12413 (4) obj. -195.339 iterations 4
Cbc0038I Pass  84: suminf.    0.56265 (3) obj. -195.339 iterations 2
Cbc0038I Pass  85: suminf.    0.83557 (2) obj. -195.339 iterations 3
Cbc0038I Pass  86: suminf.    0.11429 (1) obj. -210.509 iterations 2
Cbc0038I Pass  87: suminf.    0.19797 (1) obj. -195.339 iterations 1
Cbc0038I Pass  88: suminf.    0.62573 (3) obj. -195.339 iterations 5
Cbc0038I Pass  89: suminf.    0.42993 (2) obj. -195.339 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -175.283 - took 0.03 seconds
Cbc0012I Integer solution of -175.28332 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 24 columns, reduced to 13 rows 10 columns
Cbc0031I 7 added rows had average density of 18.285714
Cbc0013I At root node, 7 cuts changed objective from -223.41037 to -192.28278 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 299 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175.28332, took 1045 iterations and 8 nodes (0.15 seconds)
Cbc0032I Strong branching done 82 times (492 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

