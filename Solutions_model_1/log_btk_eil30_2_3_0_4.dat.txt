Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 40 (-23) rows, 22 (-10) columns and 117 (-60) elements
Clp0000I Optimal - objective value 170.07652
Coin0511I After Postsolve, objective 170.07652, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.0765226 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 22 columns (21 integer (21 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.141%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.27811
Cbc0038I Pass   1: suminf.    0.45968 (1) obj. -104.948 iterations 14
Cbc0038I Solution found of -42
Cbc0038I Relaxing continuous gives -42
Cbc0038I Rounding solution of -46 is better than previous of -42

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 18 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -46 to -48 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.1511
Cbc0038I Pass   2: suminf.    0.45968 (1) obj. -104.948 iterations 0
Cbc0038I Pass   3: suminf.    0.15580 (1) obj. -60.1511 iterations 1
Cbc0038I Pass   4: suminf.    0.51246 (5) obj. -60.1511 iterations 5
Cbc0038I Pass   5: suminf.    0.30000 (1) obj. -60.1511 iterations 5
Cbc0038I Pass   6: suminf.    0.15580 (1) obj. -60.1511 iterations 2
Cbc0038I Pass   7: suminf.    0.41129 (1) obj. -89.9153 iterations 1
Cbc0038I Pass   8: suminf.    1.29682 (3) obj. -60.1511 iterations 3
Cbc0038I Pass   9: suminf.    1.00268 (3) obj. -60.1511 iterations 3
Cbc0038I Pass  10: suminf.    1.37473 (3) obj. -60.1511 iterations 3
Cbc0038I Pass  11: suminf.    0.80889 (4) obj. -60.1511 iterations 3
Cbc0038I Pass  12: suminf.    0.15580 (1) obj. -60.1511 iterations 5
Cbc0038I Pass  13: suminf.    0.44355 (1) obj. -93.6734 iterations 1
Cbc0038I Pass  14: suminf.    0.34677 (1) obj. -86.3992 iterations 1
Cbc0038I Pass  15: suminf.    0.12147 (1) obj. -60.1511 iterations 1
Cbc0038I Pass  16: suminf.    0.34677 (1) obj. -86.3992 iterations 1
Cbc0038I Pass  17: suminf.    0.88489 (3) obj. -60.1511 iterations 4
Cbc0038I Pass  18: suminf.    0.88489 (3) obj. -60.1511 iterations 1
Cbc0038I Pass  19: suminf.    0.25452 (1) obj. -60.1511 iterations 3
Cbc0038I Pass  20: suminf.    0.47581 (1) obj. -91.5685 iterations 1
Cbc0038I Pass  21: suminf.    2.01892 (5) obj. -60.1511 iterations 11
Cbc0038I Pass  22: suminf.    0.47581 (1) obj. -80.9315 iterations 4
Cbc0038I Pass  23: suminf.    0.29743 (1) obj. -60.1511 iterations 1
Cbc0038I Pass  24: suminf.    1.23761 (3) obj. -60.1511 iterations 3
Cbc0038I Pass  25: suminf.    0.43048 (1) obj. -60.1511 iterations 2
Cbc0038I Pass  26: suminf.    0.34677 (1) obj. -71.0605 iterations 2
Cbc0038I Pass  27: suminf.    0.86096 (2) obj. -60.1511 iterations 4
Cbc0038I Pass  28: suminf.    0.83937 (3) obj. -60.1511 iterations 1
Cbc0038I Pass  29: suminf.    0.29839 (1) obj. -70.8427 iterations 4
Cbc0038I Pass  30: suminf.    0.31031 (1) obj. -60.1511 iterations 2
Cbc0038I Pass  31: suminf.    0.62062 (2) obj. -60.1511 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -48 to -69.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -89.0022
Cbc0038I Pass  31: suminf.    0.45968 (1) obj. -104.948 iterations 0
Cbc0038I Pass  32: suminf.    0.40345 (1) obj. -89.0022 iterations 1
Cbc0038I Pass  33: suminf.    1.76774 (4) obj. -89.0022 iterations 6
Cbc0038I Pass  34: suminf.    1.33838 (4) obj. -89.0022 iterations 3
Cbc0038I Pass  35: suminf.    1.33838 (4) obj. -89.0022 iterations 0
Cbc0038I Pass  36: suminf.    1.10464 (3) obj. -89.0022 iterations 2
Cbc0038I Pass  37: suminf.    0.76773 (2) obj. -89.0022 iterations 1
Cbc0038I Pass  38: suminf.    0.69121 (2) obj. -89.0022 iterations 3
Cbc0038I Pass  39: suminf.    0.69121 (2) obj. -89.0022 iterations 0
Cbc0038I Pass  40: suminf.    0.82506 (3) obj. -89.0022 iterations 4
Cbc0038I Pass  41: suminf.    1.03585 (3) obj. -89.0022 iterations 4
Cbc0038I Pass  42: suminf.    0.92700 (2) obj. -89.0022 iterations 9
Cbc0038I Pass  43: suminf.    0.37903 (1) obj. -98.8427 iterations 6
Cbc0038I Pass  44: suminf.    0.46350 (1) obj. -89.0022 iterations 1
Cbc0038I Pass  45: suminf.    1.01081 (8) obj. -89.0022 iterations 13
Cbc0038I Pass  46: suminf.    0.86690 (4) obj. -89.0022 iterations 7
Cbc0038I Pass  47: suminf.    0.46350 (1) obj. -89.0022 iterations 6
Cbc0038I Pass  48: suminf.    0.28226 (1) obj. -110.117 iterations 1
Cbc0038I Pass  49: suminf.    1.66792 (4) obj. -89.0022 iterations 7
Cbc0038I Pass  50: suminf.    0.87608 (3) obj. -89.0022 iterations 5
Cbc0038I Pass  51: suminf.    0.44002 (2) obj. -89.0022 iterations 2
Cbc0038I Pass  52: suminf.    0.44002 (2) obj. -89.0022 iterations 0
Cbc0038I Pass  53: suminf.    0.89107 (4) obj. -89.0022 iterations 4
Cbc0038I Pass  54: suminf.    0.83473 (3) obj. -89.0022 iterations 1
Cbc0038I Pass  55: suminf.    1.42025 (7) obj. -89.0022 iterations 10
Cbc0038I Pass  56: suminf.    0.51031 (4) obj. -89.0022 iterations 5
Cbc0038I Pass  57: suminf.    0.46051 (4) obj. -89.0022 iterations 3
Cbc0038I Pass  58: suminf.    1.04352 (7) obj. -89.0022 iterations 8
Cbc0038I Pass  59: suminf.    1.04352 (7) obj. -89.0022 iterations 0
Cbc0038I Pass  60: suminf.    0.64514 (2) obj. -89.0022 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -69.5 to -103.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -122.303
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.87652 (6) obj. -122.303 iterations 4
Cbc0038I Pass  61: suminf.    1.59660 (4) obj. -122.303 iterations 10
Cbc0038I Pass  62: suminf.    1.13314 (3) obj. -122.303 iterations 3
Cbc0038I Pass  63: suminf.    0.96924 (4) obj. -122.303 iterations 4
Cbc0038I Pass  64: suminf.    1.29357 (4) obj. -122.303 iterations 7
Cbc0038I Pass  65: suminf.    1.13314 (3) obj. -122.303 iterations 4
Cbc0038I Pass  66: suminf.    1.52245 (4) obj. -122.303 iterations 2
Cbc0038I Pass  67: suminf.    1.51995 (4) obj. -122.303 iterations 2
Cbc0038I Pass  68: suminf.    2.77144 (9) obj. -122.303 iterations 8
Cbc0038I Pass  69: suminf.    1.82635 (9) obj. -122.303 iterations 6
Cbc0038I Pass  70: suminf.    1.78960 (12) obj. -122.303 iterations 1
Cbc0038I Pass  71: suminf.    1.95996 (6) obj. -122.303 iterations 14
Cbc0038I Pass  72: suminf.    1.91709 (7) obj. -122.303 iterations 2
Cbc0038I Pass  73: suminf.    0.73794 (5) obj. -122.303 iterations 6
Cbc0038I Pass  74: suminf.    0.57848 (3) obj. -122.303 iterations 2
Cbc0038I Pass  75: suminf.    0.65345 (3) obj. -122.303 iterations 1
Cbc0038I Pass  76: suminf.    0.65345 (3) obj. -122.303 iterations 0
Cbc0038I Pass  77: suminf.    0.57848 (3) obj. -122.303 iterations 1
Cbc0038I Pass  78: suminf.    0.68911 (3) obj. -122.303 iterations 2
Cbc0038I Pass  79: suminf.    0.61217 (3) obj. -122.303 iterations 1
Cbc0038I Pass  80: suminf.    0.61217 (3) obj. -122.303 iterations 0
Cbc0038I Pass  81: suminf.    0.68911 (3) obj. -122.303 iterations 1
Cbc0038I Pass  82: suminf.    0.68911 (3) obj. -122.303 iterations 0
Cbc0038I Pass  83: suminf.    1.08297 (5) obj. -122.303 iterations 4
Cbc0038I Pass  84: suminf.    1.00350 (4) obj. -122.303 iterations 1
Cbc0038I Pass  85: suminf.    0.57848 (3) obj. -122.303 iterations 3
Cbc0038I Pass  86: suminf.    0.57848 (3) obj. -122.303 iterations 0
Cbc0038I Pass  87: suminf.    0.65345 (3) obj. -122.303 iterations 1
Cbc0038I Pass  88: suminf.    0.65345 (3) obj. -122.303 iterations 0
Cbc0038I Pass  89: suminf.    2.07576 (6) obj. -122.303 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 22 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -103.5 - took 0.03 seconds
Cbc0012I Integer solution of -103.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 22 columns, reduced to 25 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -165.01144 to -103.5 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 4.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -103.5, took 0 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

