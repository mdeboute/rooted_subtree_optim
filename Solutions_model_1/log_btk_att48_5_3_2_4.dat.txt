Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 48 (-2) columns and 274 (-11) elements
Clp1000I sum of infeasibilities 1.72136e-05 - average 1.85093e-07, 2 fixed columns
Coin0506I Presolve 89 (-4) rows, 46 (-2) columns and 262 (-12) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 24.609494 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Coin0511I After Postsolve, objective 2098.2552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Coin0511I After Postsolve, objective 2098.2552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2098.255222 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 48 columns (47 integer (47 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 11.4577
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -522.632 iterations 32
Cbc0038I Solution found of -522.632
Cbc0038I Relaxing continuous gives -522.632
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -522.632 to -533.624 (0.03 seconds)
Cbc0038I Round again with cutoff of -690.087
Cbc0038I Pass   2: suminf.    0.23235 (4) obj. -690.087 iterations 4
Cbc0038I Pass   3: suminf.    0.94994 (4) obj. -690.087 iterations 8
Cbc0038I Pass   4: suminf.    1.11791 (3) obj. -690.087 iterations 3
Cbc0038I Pass   5: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass   6: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass   7: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass   8: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass   9: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  10: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  11: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  12: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  13: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  14: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  15: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  16: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  17: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  18: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  19: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  20: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  21: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  22: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  23: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  24: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  25: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  26: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  27: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  28: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  29: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  30: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  31: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -533.624 - took 0.04 seconds
Cbc0012I Integer solution of -533.62351 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0031I 23 added rows had average density of 27
Cbc0013I At root node, 23 cuts changed objective from -2098.2552 to -1394.5739 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6531 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2092 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 271 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -533.62351 best solution, best possible -1394.5739 (0.70 seconds)
Cbc0001I Search completed - best objective -533.6235120000006, took 8938 iterations and 32 nodes (0.80 seconds)
Cbc0032I Strong branching done 492 times (10006 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 11, 72 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.80

