Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 162 (-166) rows, 82 (-83) columns and 403 (-411) elements
Clp0000I Optimal - objective value 4136.9846
Coin0511I After Postsolve, objective 4136.9846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4136.984579 - 76 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 162 rows, 82 columns (81 integer (81 of which binary)) and 403 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.190%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 20.2464
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2250 iterations 67
Cbc0038I Solution found of 2250
Cbc0038I Relaxing continuous gives 2250
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 107 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 2250 to 1220 (0.03 seconds)
Cbc0038I Round again with cutoff of 683.402
Cbc0038I Pass   2: suminf.    0.26775 (4) obj. 683.402 iterations 4
Cbc0038I Pass   3: suminf.    0.65791 (7) obj. 683.402 iterations 11
Cbc0038I Pass   4: suminf.    0.43514 (7) obj. 683.402 iterations 14
Cbc0038I Pass   5: suminf.    0.44680 (7) obj. 683.402 iterations 16
Cbc0038I Pass   6: suminf.    0.99133 (8) obj. 683.402 iterations 13
Cbc0038I Pass   7: suminf.    0.75368 (8) obj. 683.402 iterations 8
Cbc0038I Pass   8: suminf.    2.42322 (15) obj. 683.402 iterations 18
Cbc0038I Pass   9: suminf.    1.74632 (13) obj. 683.402 iterations 7
Cbc0038I Pass  10: suminf.    1.74315 (12) obj. 683.402 iterations 1
Cbc0038I Pass  11: suminf.    3.71393 (17) obj. 683.402 iterations 21
Cbc0038I Pass  12: suminf.    3.32367 (15) obj. 683.402 iterations 5
Cbc0038I Pass  13: suminf.    2.57293 (12) obj. 683.402 iterations 13
Cbc0038I Pass  14: suminf.    2.44910 (11) obj. 683.402 iterations 4
Cbc0038I Pass  15: suminf.    2.39915 (12) obj. 683.402 iterations 23
Cbc0038I Pass  16: suminf.    2.39915 (12) obj. 683.402 iterations 1
Cbc0038I Pass  17: suminf.    0.16805 (1) obj. 683.402 iterations 22
Cbc0038I Pass  18: suminf.    0.16805 (1) obj. 683.402 iterations 0
Cbc0038I Solution found of 683.402
Cbc0038I Relaxing continuous gives 360
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 150 rows 77 columns - 1 fixed gives 149, 76 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -540.197
Cbc0038I Pass  19: suminf.    0.79824 (7) obj. -540.197 iterations 3
Cbc0038I Pass  20: suminf.    1.82941 (13) obj. -540.197 iterations 20
Cbc0038I Pass  21: suminf.    3.20677 (14) obj. -540.197 iterations 19
Cbc0038I Pass  22: suminf.    1.40572 (10) obj. -540.197 iterations 8
Cbc0038I Pass  23: suminf.    1.38153 (10) obj. -540.197 iterations 6
Cbc0038I Pass  24: suminf.    2.37559 (21) obj. -540.197 iterations 25
Cbc0038I Pass  25: suminf.    2.35671 (19) obj. -540.197 iterations 1
Cbc0038I Pass  26: suminf.    3.85641 (19) obj. -540.197 iterations 10
Cbc0038I Pass  27: suminf.    2.71199 (15) obj. -540.197 iterations 11
Cbc0038I Pass  28: suminf.    2.45445 (12) obj. -540.197 iterations 5
Cbc0038I Pass  29: suminf.    3.40592 (24) obj. -540.197 iterations 26
Cbc0038I Pass  30: suminf.    3.27658 (20) obj. -540.197 iterations 4
Cbc0038I Pass  31: suminf.    5.44363 (19) obj. -540.197 iterations 24
Cbc0038I Pass  32: suminf.    2.63494 (14) obj. -540.197 iterations 18
Cbc0038I Pass  33: suminf.    2.63494 (14) obj. -540.197 iterations 2
Cbc0038I Pass  34: suminf.    4.90749 (28) obj. -540.197 iterations 30
Cbc0038I Pass  35: suminf.    3.95188 (20) obj. -540.197 iterations 9
Cbc0038I Pass  36: suminf.    3.69181 (16) obj. -540.197 iterations 18
Cbc0038I Pass  37: suminf.    2.63494 (14) obj. -540.197 iterations 6
Cbc0038I Pass  38: suminf.    2.63494 (14) obj. -540.197 iterations 2
Cbc0038I Pass  39: suminf.    4.90749 (28) obj. -540.197 iterations 30
Cbc0038I Pass  40: suminf.    3.95188 (20) obj. -540.197 iterations 9
Cbc0038I Pass  41: suminf.    5.50444 (21) obj. -540.197 iterations 23
Cbc0038I Pass  42: suminf.    4.13286 (16) obj. -540.197 iterations 14
Cbc0038I Pass  43: suminf.    4.13286 (16) obj. -540.197 iterations 0
Cbc0038I Pass  44: suminf.    7.01264 (25) obj. -540.197 iterations 25
Cbc0038I Pass  45: suminf.    5.97248 (26) obj. -540.197 iterations 5
Cbc0038I Pass  46: suminf.    4.92898 (21) obj. -540.197 iterations 10
Cbc0038I Pass  47: suminf.    8.40242 (22) obj. -540.197 iterations 30
Cbc0038I Pass  48: suminf.    4.72792 (16) obj. -540.197 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 132 rows 72 columns - 1 fixed gives 131, 71 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 360 - took 0.05 seconds
Cbc0012I Integer solution of 360 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0012I Integer solution of -2185 found by DiveCoefficient after 19 iterations and 0 nodes (0.07 seconds)
Cbc0013I At root node, 0 cuts changed objective from -4136.9846 to -2185 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 940 row cuts average 2.8 elements, 8 column cuts (8 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2185, took 19 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

