Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-14) rows, 29 (-4) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 0.000192957 - average 3.78348e-06, 7 fixed columns
Coin0506I Presolve 36 (-15) rows, 21 (-8) columns and 107 (-46) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Coin0511I After Postsolve, objective 95.216163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Clp0000I Optimal - objective value 95.216163
Coin0511I After Postsolve, objective 95.216163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.21616298 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.260%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.32584
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.3783 iterations 17
Cbc0038I Solution found of -43.3783
Cbc0038I Relaxing continuous gives -43.3783
Cbc0038I Rounding solution of -55.0331 is better than previous of -43.3783

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 16 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -55.0331 to -58.1263 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.1324
Cbc0038I Pass   2: suminf.    0.66988 (2) obj. -61.1324 iterations 3
Cbc0038I Pass   3: suminf.    0.46250 (1) obj. -68.9216 iterations 3
Cbc0038I Pass   4: suminf.    0.31005 (1) obj. -61.1324 iterations 1
Cbc0038I Pass   5: suminf.    0.69716 (4) obj. -61.1324 iterations 9
Cbc0038I Pass   6: suminf.    0.69716 (4) obj. -61.1324 iterations 0
Cbc0038I Pass   7: suminf.    0.85437 (2) obj. -62.0191 iterations 6
Cbc0038I Pass   8: suminf.    0.37134 (1) obj. -61.1324 iterations 3
Cbc0038I Pass   9: suminf.    0.48889 (1) obj. -67.1386 iterations 1
Cbc0038I Pass  10: suminf.    0.28750 (1) obj. -67.2398 iterations 5
Cbc0038I Pass  11: suminf.    0.16797 (1) obj. -61.1324 iterations 1
Cbc0038I Pass  12: suminf.    0.28750 (1) obj. -67.2398 iterations 1
Cbc0038I Pass  13: suminf.    0.76965 (3) obj. -61.1324 iterations 8
Cbc0038I Pass  14: suminf.    0.45327 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  15: suminf.    0.42500 (1) obj. -61.1324 iterations 2
Cbc0038I Pass  16: suminf.    0.34920 (1) obj. -61.1324 iterations 1
Cbc0038I Pass  17: suminf.    0.42500 (1) obj. -65.0055 iterations 1
Cbc0038I Pass  18: suminf.    1.58766 (6) obj. -61.1324 iterations 11
Cbc0038I Pass  19: suminf.    1.56121 (6) obj. -61.1324 iterations 2
Cbc0038I Pass  20: suminf.    1.09139 (4) obj. -61.1324 iterations 7
Cbc0038I Pass  21: suminf.    0.86056 (4) obj. -61.1324 iterations 2
Cbc0038I Pass  22: suminf.    0.36894 (2) obj. -61.1324 iterations 5
Cbc0038I Pass  23: suminf.    0.36325 (2) obj. -61.1324 iterations 1
Cbc0038I Pass  24: suminf.    0.38736 (1) obj. -61.1324 iterations 2
Cbc0038I Pass  25: suminf.    0.30000 (1) obj. -65.5959 iterations 1
Cbc0038I Pass  26: suminf.    1.99368 (5) obj. -61.1324 iterations 6
Cbc0038I Pass  27: suminf.    1.38262 (4) obj. -61.1324 iterations 3
Cbc0038I Pass  28: suminf.    1.10097 (4) obj. -61.1324 iterations 3
Cbc0038I Pass  29: suminf.    0.92533 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  30: suminf.    0.83569 (3) obj. -61.1324 iterations 3
Cbc0038I Pass  31: suminf.    0.46209 (2) obj. -61.1324 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -58.1263 to -58.8423 (0.04 seconds)
Cbc0038I Round again with cutoff of -66.5433
Cbc0038I Pass  31: suminf.    0.87404 (2) obj. -66.5433 iterations 0
Cbc0038I Pass  32: suminf.    0.46250 (1) obj. -68.9216 iterations 3
Cbc0038I Pass  33: suminf.    0.41595 (1) obj. -66.5433 iterations 1
Cbc0038I Pass  34: suminf.    3.69906 (10) obj. -66.5433 iterations 16
Cbc0038I Pass  35: suminf.    1.88073 (6) obj. -66.5433 iterations 11
Cbc0038I Pass  36: suminf.    0.63348 (3) obj. -66.5433 iterations 5
Cbc0038I Pass  37: suminf.    0.99541 (3) obj. -66.5433 iterations 4
Cbc0038I Pass  38: suminf.    0.64008 (2) obj. -66.5433 iterations 2
Cbc0038I Pass  39: suminf.    0.63355 (2) obj. -66.5433 iterations 1
Cbc0038I Pass  40: suminf.    0.97639 (4) obj. -66.5433 iterations 10
Cbc0038I Pass  41: suminf.    0.97639 (4) obj. -66.5433 iterations 1
Cbc0038I Pass  42: suminf.    1.29080 (4) obj. -66.5433 iterations 3
Cbc0038I Pass  43: suminf.    0.88195 (3) obj. -66.5433 iterations 1
Cbc0038I Pass  44: suminf.    1.95117 (6) obj. -66.5433 iterations 10
Cbc0038I Pass  45: suminf.    1.00010 (5) obj. -66.5433 iterations 5
Cbc0038I Pass  46: suminf.    1.57679 (6) obj. -66.5433 iterations 6
Cbc0038I Pass  47: suminf.    1.50329 (6) obj. -66.5433 iterations 2
Cbc0038I Pass  48: suminf.    0.85356 (4) obj. -66.5433 iterations 5
Cbc0038I Pass  49: suminf.    0.53402 (2) obj. -66.5433 iterations 3
Cbc0038I Pass  50: suminf.    0.64634 (2) obj. -66.5433 iterations 1
Cbc0038I Pass  51: suminf.    1.12994 (3) obj. -66.5433 iterations 9
Cbc0038I Pass  52: suminf.    0.49036 (2) obj. -66.5433 iterations 4
Cbc0038I Pass  53: suminf.    0.32500 (1) obj. -66.5433 iterations 2
Cbc0038I Pass  54: suminf.    0.23473 (1) obj. -66.5433 iterations 1
Cbc0038I Pass  55: suminf.    2.09100 (9) obj. -66.5433 iterations 16
Cbc0038I Pass  56: suminf.    1.57053 (4) obj. -66.5433 iterations 8
Cbc0038I Pass  57: suminf.    1.29235 (4) obj. -66.5433 iterations 2
Cbc0038I Pass  58: suminf.    1.16622 (4) obj. -66.5433 iterations 2
Cbc0038I Pass  59: suminf.    1.77761 (6) obj. -66.5433 iterations 5
Cbc0038I Pass  60: suminf.    1.33257 (6) obj. -66.5433 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -58.8423 - took 0.05 seconds
Cbc0012I Integer solution of -58.842297 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 23 rows 17 columns
Cbc0031I 9 added rows had average density of 22.888889
Cbc0013I At root node, 9 cuts changed objective from -88.18671 to -76.101895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 783 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 483 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0004I Integer solution of -59.468867 found after 2340 iterations and 9 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -59.46886699999999, took 2738 iterations and 20 nodes (0.31 seconds)
Cbc0032I Strong branching done 228 times (1630 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.32

