Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 63 (-15) columns and 341 (-112) elements
Clp1000I sum of infeasibilities 3.03664e-05 - average 2.73571e-07, 57 fixed columns
Coin0506I Presolve 5 (-106) rows, 6 (-57) columns and 16 (-325) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 14656.964
Clp0000I Optimal - objective value 14656.964
Coin0511I After Postsolve, objective 14656.964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.32327014 - largest nonzero change 0 ( 0%) - largest zero change 2.754588e-05
Clp0000I Optimal - objective value 14656.964
Clp0000I Optimal - objective value 14656.964
Clp0000I Optimal - objective value 14656.964
Coin0511I After Postsolve, objective 14656.964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14656.96384 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 63 columns (62 integer (62 of which binary)) and 358 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.12727
Cbc0038I Pass   1: suminf.    0.92683 (4) obj. -14609.4 iterations 10
Cbc0038I Solution found of -4946.16
Cbc0038I Relaxing continuous gives -4961.84
Cbc0038I Rounding solution of -11506.3 is better than previous of -4961.84

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -11506.3 to -11902.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -12177.7
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.92683 (4) obj. -14609.4 iterations 0
Cbc0038I Pass   3: suminf.    0.08271 (1) obj. -12177.7 iterations 10
Cbc0038I Pass   4: suminf.    0.08271 (1) obj. -12177.7 iterations 2
Cbc0038I Pass   5: suminf.    0.25532 (2) obj. -14349 iterations 8
Cbc0038I Pass   6: suminf.    0.88040 (2) obj. -12177.7 iterations 6
Cbc0038I Pass   7: suminf.    1.95417 (5) obj. -12177.7 iterations 11
Cbc0038I Pass   8: suminf.    1.43916 (4) obj. -12177.7 iterations 6
Cbc0038I Pass   9: suminf.    3.20103 (7) obj. -12177.7 iterations 8
Cbc0038I Pass  10: suminf.    0.10168 (2) obj. -12177.7 iterations 10
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -12529.6 iterations 6
Cbc0038I Solution found of -12529.6
Cbc0038I Relaxing continuous gives -12529.6
Cbc0038I Rounding solution of -13051.3 is better than previous of -12529.6

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13372.5
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.92683 (4) obj. -14609.4 iterations 0
Cbc0038I Pass  13: suminf.    0.44144 (1) obj. -13372.5 iterations 11
Cbc0038I Pass  14: suminf.    0.44144 (1) obj. -13372.5 iterations 0
Cbc0038I Pass  15: suminf.    0.25532 (2) obj. -14349 iterations 9
Cbc0038I Pass  16: suminf.    0.53744 (2) obj. -13372.5 iterations 6
Cbc0038I Pass  17: suminf.    1.03694 (4) obj. -13372.5 iterations 10
Cbc0038I Pass  18: suminf.    1.03694 (4) obj. -13372.5 iterations 5
Cbc0038I Pass  19: suminf.    0.25532 (2) obj. -14349 iterations 6
Cbc0038I Pass  20: suminf.    1.23825 (6) obj. -13372.5 iterations 10
Cbc0038I Pass  21: suminf.    0.88171 (2) obj. -13372.5 iterations 8
Cbc0038I Pass  22: suminf.    0.97872 (2) obj. -13710.4 iterations 5
Cbc0038I Pass  23: suminf.    0.85014 (2) obj. -13372.5 iterations 6
Cbc0038I Pass  24: suminf.    0.85014 (2) obj. -13372.5 iterations 5
Cbc0038I Pass  25: suminf.    0.97872 (2) obj. -13710.4 iterations 2
Cbc0038I Pass  26: suminf.    1.06346 (4) obj. -13564.2 iterations 11
Cbc0038I Pass  27: suminf.    0.93551 (2) obj. -13372.5 iterations 10
Cbc0038I Pass  28: suminf.    0.78475 (4) obj. -14069.7 iterations 12
Cbc0038I Pass  29: suminf.    0.44144 (1) obj. -13372.5 iterations 11
Cbc0038I Pass  30: suminf.    0.44144 (1) obj. -13372.5 iterations 0
Cbc0038I Pass  31: suminf.    0.25532 (2) obj. -14349 iterations 8
Cbc0038I Pass  32: suminf.    0.53744 (2) obj. -13372.5 iterations 6
Cbc0038I Pass  33: suminf.    1.26441 (4) obj. -13832.5 iterations 12
Cbc0038I Pass  34: suminf.    0.80607 (2) obj. -13372.5 iterations 10
Cbc0038I Pass  35: suminf.    0.93617 (2) obj. -13825.7 iterations 5
Cbc0038I Pass  36: suminf.    0.97872 (2) obj. -13710.4 iterations 9
Cbc0038I Pass  37: suminf.    0.88171 (2) obj. -13372.5 iterations 6
Cbc0038I Pass  38: suminf.    0.97872 (2) obj. -13710.4 iterations 4
Cbc0038I Pass  39: suminf.    1.27778 (3) obj. -13747.3 iterations 3
Cbc0038I Pass  40: suminf.    1.20339 (3) obj. -13372.5 iterations 3
Cbc0038I Pass  41: suminf.    1.10493 (4) obj. -13372.5 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 63 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -13051.3 - took 0.02 seconds
Cbc0012I Integer solution of -13051.334 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 109 rows 63 columns, reduced to 6 rows 7 columns
Cbc0031I 7 added rows had average density of 14.571429
Cbc0013I At root node, 7 cuts changed objective from -14656.964 to -13910.168 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 4.1 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 61.5 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0004I Integer solution of -13653.81 found after 96 iterations and 1 nodes (0.23 seconds)
Cbc0001I Search completed - best objective -13653.81, took 114 iterations and 2 nodes (0.29 seconds)
Cbc0032I Strong branching done 18 times (105 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.29

