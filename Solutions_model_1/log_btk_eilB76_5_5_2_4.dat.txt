Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 68 (-10) columns and 382 (-71) elements
Clp1000I sum of infeasibilities 3.17777e-05 - average 2.50218e-07, 13 fixed columns
Coin0506I Presolve 97 (-30) rows, 52 (-16) columns and 290 (-92) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.1817511 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Coin0511I After Postsolve, objective 42.764781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Coin0511I After Postsolve, objective 42.764781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.76478057 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.49729
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.1774 iterations 36
Cbc0038I Solution found of -13.1774
Cbc0038I Relaxing continuous gives -13.1774
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 41 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -13.1774 to -21.7488 (0.02 seconds)
Cbc0038I Round again with cutoff of -23.7765
Cbc0038I Pass   2: suminf.    0.87068 (5) obj. -23.7765 iterations 5
Cbc0038I Pass   3: suminf.    0.89599 (4) obj. -23.7765 iterations 7
Cbc0038I Pass   4: suminf.    0.88449 (4) obj. -23.7765 iterations 2
Cbc0038I Pass   5: suminf.    0.55058 (3) obj. -23.7765 iterations 4
Cbc0038I Pass   6: suminf.    0.54049 (2) obj. -23.7765 iterations 2
Cbc0038I Pass   7: suminf.    0.86341 (3) obj. -23.7765 iterations 5
Cbc0038I Pass   8: suminf.    0.86341 (3) obj. -23.7765 iterations 0
Cbc0038I Pass   9: suminf.    0.79985 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  10: suminf.    0.66817 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  11: suminf.    2.56144 (7) obj. -23.7765 iterations 11
Cbc0038I Pass  12: suminf.    1.62682 (6) obj. -23.7765 iterations 13
Cbc0038I Pass  13: suminf.    1.15551 (5) obj. -23.7765 iterations 2
Cbc0038I Pass  14: suminf.    1.37030 (4) obj. -23.7765 iterations 7
Cbc0038I Pass  15: suminf.    0.91695 (5) obj. -23.7765 iterations 3
Cbc0038I Pass  16: suminf.    0.87068 (5) obj. -23.7765 iterations 2
Cbc0038I Pass  17: suminf.    0.89599 (4) obj. -23.7765 iterations 7
Cbc0038I Pass  18: suminf.    0.88449 (4) obj. -23.7765 iterations 2
Cbc0038I Pass  19: suminf.    0.55058 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  20: suminf.    0.54049 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  21: suminf.    0.86341 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  22: suminf.    0.86341 (3) obj. -23.7765 iterations 0
Cbc0038I Pass  23: suminf.    0.79985 (3) obj. -23.7765 iterations 3
Cbc0038I Pass  24: suminf.    0.66817 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  25: suminf.    1.13317 (3) obj. -23.7765 iterations 12
Cbc0038I Pass  26: suminf.    0.67238 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  27: suminf.    0.16245 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  28: suminf.    0.16133 (3) obj. -23.7765 iterations 1
Cbc0038I Pass  29: suminf.    0.51504 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  30: suminf.    0.47767 (3) obj. -23.7765 iterations 1
Cbc0038I Pass  31: suminf.    2.93117 (11) obj. -23.7765 iterations 15
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4261
Cbc0038I Pass  31: suminf.    1.20866 (6) obj. -27.4261 iterations 2
Cbc0038I Pass  32: suminf.    1.43068 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  33: suminf.    0.79773 (4) obj. -27.4261 iterations 3
Cbc0038I Pass  34: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  35: suminf.    4.30749 (18) obj. -27.4261 iterations 24
Cbc0038I Pass  36: suminf.    1.88051 (12) obj. -27.4261 iterations 33
Cbc0038I Pass  37: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  38: suminf.    1.43068 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  39: suminf.    0.79773 (4) obj. -27.4261 iterations 3
Cbc0038I Pass  40: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  41: suminf.    2.03773 (8) obj. -27.4261 iterations 16
Cbc0038I Pass  42: suminf.    1.33579 (5) obj. -27.4261 iterations 10
Cbc0038I Pass  43: suminf.    1.20313 (5) obj. -27.4261 iterations 6
Cbc0038I Pass  44: suminf.    1.20313 (5) obj. -27.4261 iterations 1
Cbc0038I Pass  45: suminf.    1.40132 (5) obj. -27.4261 iterations 6
Cbc0038I Pass  46: suminf.    2.86292 (10) obj. -27.4261 iterations 16
Cbc0038I Pass  47: suminf.    1.00945 (5) obj. -27.4261 iterations 14
Cbc0038I Pass  48: suminf.    0.77569 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  49: suminf.    0.77107 (3) obj. -27.4261 iterations 2
Cbc0038I Pass  50: suminf.    1.13340 (4) obj. -27.4261 iterations 4
Cbc0038I Pass  51: suminf.    0.97693 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  52: suminf.    0.48844 (3) obj. -27.4261 iterations 3
Cbc0038I Pass  53: suminf.    0.88063 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  54: suminf.    0.88063 (5) obj. -27.4261 iterations 0
Cbc0038I Pass  55: suminf.    1.08686 (4) obj. -27.4261 iterations 9
Cbc0038I Pass  56: suminf.    1.00945 (5) obj. -27.4261 iterations 2
Cbc0038I Pass  57: suminf.    0.77569 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  58: suminf.    0.77107 (3) obj. -27.4261 iterations 2
Cbc0038I Pass  59: suminf.    1.13340 (4) obj. -27.4261 iterations 4
Cbc0038I Pass  60: suminf.    0.97693 (4) obj. -27.4261 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 66 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -21.7488 - took 0.04 seconds
Cbc0012I Integer solution of -21.74879 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 41 rows 22 columns
Cbc0031I 14 added rows had average density of 33.357143
Cbc0013I At root node, 14 cuts changed objective from -42.024713 to -33.521526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5334 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -21.74879, took 5522 iterations and 32 nodes (0.63 seconds)
Cbc0032I Strong branching done 444 times (8087 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 89 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.64

