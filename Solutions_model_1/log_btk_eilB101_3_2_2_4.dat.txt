Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 100 (-3) columns and 542 (-61) elements
Clp1000I sum of infeasibilities 3.27547e-06 - average 1.8717e-08, 11 fixed columns
Coin0506I Presolve 153 (-22) rows, 89 (-11) columns and 476 (-66) elements
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.5755947 - largest nonzero change 0 ( 0%) - largest zero change 2.3379487e-05
Clp0000I Optimal - objective value 38.576444
Clp0000I Optimal - objective value 38.576444
Coin0511I After Postsolve, objective 38.576444, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.576444
Clp0000I Optimal - objective value 38.576444
Clp0000I Optimal - objective value 38.576444
Coin0511I After Postsolve, objective 38.576444, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.57644402 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 174 rows, 100 columns (99 integer (99 of which binary)) and 551 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.955%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 7.45237
Cbc0038I Solution found of 2.25821
Cbc0038I Relaxing continuous gives -4.36491
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 100 columns, reduced to 89 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -4.36491 to -7.80265 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.8537
Cbc0038I Pass   1: suminf.    1.14846 (37) obj. -10.8537 iterations 75
Cbc0038I Pass   2: suminf.    1.03742 (5) obj. -10.8537 iterations 43
Cbc0038I Pass   3: suminf.    0.64855 (6) obj. -10.8537 iterations 5
Cbc0038I Pass   4: suminf.    1.05872 (4) obj. -10.8537 iterations 11
Cbc0038I Pass   5: suminf.    0.95118 (5) obj. -10.8537 iterations 2
Cbc0038I Pass   6: suminf.    1.83783 (6) obj. -10.8537 iterations 12
Cbc0038I Pass   7: suminf.    1.83783 (6) obj. -10.8537 iterations 0
Cbc0038I Pass   8: suminf.    1.29091 (5) obj. -10.8537 iterations 8
Cbc0038I Pass   9: suminf.    1.29091 (5) obj. -10.8537 iterations 2
Cbc0038I Pass  10: suminf.    1.04609 (5) obj. -10.8537 iterations 9
Cbc0038I Pass  11: suminf.    0.94501 (4) obj. -10.8537 iterations 1
Cbc0038I Pass  12: suminf.    1.13384 (5) obj. -10.8537 iterations 6
Cbc0038I Pass  13: suminf.    1.13384 (5) obj. -10.8537 iterations 0
Cbc0038I Pass  14: suminf.    1.83783 (6) obj. -10.8537 iterations 7
Cbc0038I Pass  15: suminf.    1.83783 (6) obj. -10.8537 iterations 0
Cbc0038I Pass  16: suminf.    1.29091 (5) obj. -10.8537 iterations 8
Cbc0038I Pass  17: suminf.    1.29091 (5) obj. -10.8537 iterations 2
Cbc0038I Pass  18: suminf.    1.04609 (5) obj. -10.8537 iterations 9
Cbc0038I Pass  19: suminf.    0.94501 (4) obj. -10.8537 iterations 1
Cbc0038I Pass  20: suminf.    1.13384 (5) obj. -10.8537 iterations 6
Cbc0038I Pass  21: suminf.    1.13384 (5) obj. -10.8537 iterations 0
Cbc0038I Pass  22: suminf.    1.83783 (6) obj. -10.8537 iterations 7
Cbc0038I Pass  23: suminf.    1.83783 (6) obj. -10.8537 iterations 0
Cbc0038I Pass  24: suminf.    1.29091 (5) obj. -10.8537 iterations 8
Cbc0038I Pass  25: suminf.    1.29091 (5) obj. -10.8537 iterations 2
Cbc0038I Pass  26: suminf.    1.04609 (5) obj. -10.8537 iterations 9
Cbc0038I Pass  27: suminf.    0.94501 (4) obj. -10.8537 iterations 1
Cbc0038I Pass  28: suminf.    1.13384 (5) obj. -10.8537 iterations 6
Cbc0038I Pass  29: suminf.    1.13384 (5) obj. -10.8537 iterations 0
Cbc0038I Pass  30: suminf.    1.83783 (6) obj. -10.8537 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 100 columns, reduced to 100 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.80265 - took 0.09 seconds
Cbc0012I Integer solution of -7.80265 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 174 rows 100 columns, reduced to 89 rows 53 columns
Cbc0031I 29 added rows had average density of 60.413793
Cbc0013I At root node, 29 cuts changed objective from -38.312474 to -32.1272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16514 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1699 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 99.8 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.80265 best solution, best possible -32.1272 (1.40 seconds)
Cbc0038I Full problem 174 rows 100 columns, reduced to 89 rows 53 columns
Cbc0038I Full problem 174 rows 100 columns, reduced to 4 rows 5 columns
Cbc0001I Search completed - best objective -7.80265, took 13325 iterations and 102 nodes (1.92 seconds)
Cbc0032I Strong branching done 1074 times (23349 iterations), fathomed 7 nodes and fixed 35 variables
Cbc0035I Maximum depth 40, 358 variables fixed on reduced cost
Total time (CPU seconds):       1.86   (Wallclock seconds):       1.93

