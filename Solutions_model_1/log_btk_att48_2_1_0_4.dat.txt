Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 61 (-38) rows, 35 (-15) columns and 154 (-131) elements
Clp0000I Optimal - objective value 14793.686
Coin0511I After Postsolve, objective 14793.686, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14793.68566 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 61 rows, 35 columns (34 integer (34 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.414%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.06128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13431.2 iterations 13
Cbc0038I Solution found of -13431.2
Cbc0038I Relaxing continuous gives -13431.2
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -13431.2 to -13431.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -13567.4
Cbc0038I Pass   2: suminf.    0.10405 (4) obj. -13567.4 iterations 7
Cbc0038I Pass   3: suminf.    0.10405 (4) obj. -13567.4 iterations 2
Cbc0038I Pass   4: suminf.    0.35715 (3) obj. -13567.4 iterations 10
Cbc0038I Pass   5: suminf.    0.42882 (2) obj. -13567.4 iterations 6
Cbc0038I Pass   6: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass   7: suminf.    1.24059 (6) obj. -13567.4 iterations 10
Cbc0038I Pass   8: suminf.    0.10313 (4) obj. -13567.4 iterations 4
Cbc0038I Pass   9: suminf.    0.04657 (2) obj. -13567.4 iterations 7
Cbc0038I Pass  10: suminf.    2.00000 (6) obj. -13567.4 iterations 7
Cbc0038I Pass  11: suminf.    1.02662 (8) obj. -13567.4 iterations 7
Cbc0038I Pass  12: suminf.    1.00000 (9) obj. -13567.4 iterations 1
Cbc0038I Pass  13: suminf.    2.33428 (7) obj. -13567.4 iterations 10
Cbc0038I Pass  14: suminf.    0.10405 (4) obj. -13567.4 iterations 13
Cbc0038I Pass  15: suminf.    0.10405 (4) obj. -13567.4 iterations 1
Cbc0038I Pass  16: suminf.    0.35715 (3) obj. -13567.4 iterations 8
Cbc0038I Pass  17: suminf.    0.42882 (2) obj. -13567.4 iterations 5
Cbc0038I Pass  18: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass  19: suminf.    1.29027 (5) obj. -13567.4 iterations 6
Cbc0038I Pass  20: suminf.    0.10425 (2) obj. -13567.4 iterations 7
Cbc0038I Pass  21: suminf.    0.05212 (1) obj. -13567.4 iterations 1
Cbc0038I Pass  22: suminf.    0.31502 (1) obj. -13567.4 iterations 1
Cbc0038I Pass  23: suminf.    1.84658 (5) obj. -13567.4 iterations 8
Cbc0038I Pass  24: suminf.    1.33268 (5) obj. -13567.4 iterations 4
Cbc0038I Pass  25: suminf.    0.57440 (4) obj. -13567.4 iterations 1
Cbc0038I Pass  26: suminf.    0.35715 (3) obj. -13567.4 iterations 9
Cbc0038I Pass  27: suminf.    0.35715 (3) obj. -13567.4 iterations 0
Cbc0038I Pass  28: suminf.    0.42882 (2) obj. -13567.4 iterations 4
Cbc0038I Pass  29: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass  30: suminf.    0.36656 (3) obj. -13567.4 iterations 15
Cbc0038I Pass  31: suminf.    0.26518 (2) obj. -13567.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 18 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -13431.2 to -13482 (0.01 seconds)
Cbc0038I Round again with cutoff of -13812.7
Cbc0038I Pass  31: suminf.    0.44113 (4) obj. -13812.7 iterations 0
Cbc0038I Pass  32: suminf.    0.44113 (4) obj. -13812.7 iterations 2
Cbc0038I Pass  33: suminf.    0.59808 (3) obj. -13812.7 iterations 15
Cbc0038I Pass  34: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  35: suminf.    0.60727 (3) obj. -13812.7 iterations 8
Cbc0038I Pass  36: suminf.    2.00000 (7) obj. -13812.7 iterations 10
Cbc0038I Pass  37: suminf.    0.44113 (4) obj. -13812.7 iterations 8
Cbc0038I Pass  38: suminf.    0.44113 (4) obj. -13812.7 iterations 2
Cbc0038I Pass  39: suminf.    0.59808 (3) obj. -13812.7 iterations 13
Cbc0038I Pass  40: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  41: suminf.    0.60727 (3) obj. -13812.7 iterations 7
Cbc0038I Pass  42: suminf.    2.39774 (10) obj. -13812.7 iterations 12
Cbc0038I Pass  43: suminf.    2.00000 (7) obj. -13812.7 iterations 16
Cbc0038I Pass  44: suminf.    0.67096 (5) obj. -13812.7 iterations 9
Cbc0038I Pass  45: suminf.    0.67096 (5) obj. -13812.7 iterations 0
Cbc0038I Pass  46: suminf.    2.04624 (9) obj. -13812.7 iterations 15
Cbc0038I Pass  47: suminf.    0.91794 (5) obj. -13812.7 iterations 11
Cbc0038I Pass  48: suminf.    0.59808 (3) obj. -13812.7 iterations 2
Cbc0038I Pass  49: suminf.    0.60727 (3) obj. -13812.7 iterations 6
Cbc0038I Pass  50: suminf.    2.06658 (7) obj. -13812.7 iterations 9
Cbc0038I Pass  51: suminf.    0.44113 (4) obj. -13812.7 iterations 5
Cbc0038I Pass  52: suminf.    0.44113 (4) obj. -13812.7 iterations 1
Cbc0038I Pass  53: suminf.    0.59808 (3) obj. -13812.7 iterations 14
Cbc0038I Pass  54: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  55: suminf.    0.60727 (3) obj. -13812.7 iterations 7
Cbc0038I Pass  56: suminf.    2.26168 (13) obj. -13812.7 iterations 11
Cbc0038I Pass  57: suminf.    2.12744 (9) obj. -13812.7 iterations 1
Cbc0038I Pass  58: suminf.    0.91794 (5) obj. -13812.7 iterations 11
Cbc0038I Pass  59: suminf.    1.35151 (6) obj. -13812.7 iterations 3
Cbc0038I Pass  60: suminf.    1.27814 (4) obj. -13812.7 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -13482 - took 0.02 seconds
Cbc0012I Integer solution of -13482.033 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 61 rows 35 columns, reduced to 11 rows 9 columns
Cbc0031I 10 added rows had average density of 10.2
Cbc0013I At root node, 10 cuts changed objective from -14793.686 to -13815.115 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 96 row cuts average 5.7 elements, 6 column cuts (6 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13482.033, took 175 iterations and 6 nodes (0.56 seconds)
Cbc0032I Strong branching done 44 times (235 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.56

