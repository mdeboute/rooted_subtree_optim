Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 230 (-114) rows, 117 (-56) columns and 574 (-280) elements
Clp0000I Optimal - objective value 42746981
Coin0511I After Postsolve, objective 42746981, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42746981.25 - 76 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 230 rows, 117 columns (116 integer (116 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.833%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 7.33286
Cbc0038I Solution found of -3.45826e+07
Cbc0038I Relaxing continuous gives -3.45826e+07
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 230 rows 117 columns, reduced to 58 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -3.53991e+07
Cbc0038I Pass   1: suminf.    0.73324 (31) obj. -3.53991e+07 iterations 62
Cbc0038I Pass   2: suminf.    5.95006 (14) obj. -3.53991e+07 iterations 16
Cbc0038I Pass   3: suminf.    5.95006 (14) obj. -3.53991e+07 iterations 1
Cbc0038I Pass   4: suminf.    0.70783 (27) obj. -3.53991e+07 iterations 25
Cbc0038I Pass   5: suminf.    6.50548 (28) obj. -3.53991e+07 iterations 14
Cbc0038I Pass   6: suminf.    6.50548 (28) obj. -3.53991e+07 iterations 0
Cbc0038I Pass   7: suminf.    0.73324 (31) obj. -3.53991e+07 iterations 27
Cbc0038I Pass   8: suminf.    0.73324 (31) obj. -3.53991e+07 iterations 5
Cbc0038I Pass   9: suminf.    5.12500 (19) obj. -3.97281e+07 iterations 12
Cbc0038I Pass  10: suminf.    0.68161 (26) obj. -3.53991e+07 iterations 43
Cbc0038I Pass  11: suminf.    5.13837 (13) obj. -3.53991e+07 iterations 17
Cbc0038I Pass  12: suminf.    4.84062 (26) obj. -3.53991e+07 iterations 4
Cbc0038I Pass  13: suminf.    0.73324 (31) obj. -3.53991e+07 iterations 24
Cbc0038I Pass  14: suminf.    0.73324 (31) obj. -3.53991e+07 iterations 5
Cbc0038I Pass  15: suminf.    4.49408 (26) obj. -3.53991e+07 iterations 22
Cbc0038I Pass  16: suminf.    4.49408 (26) obj. -3.53991e+07 iterations 0
Cbc0038I Pass  17: suminf.    4.49240 (25) obj. -3.53991e+07 iterations 1
Cbc0038I Pass  18: suminf.    4.90133 (14) obj. -3.53991e+07 iterations 19
Cbc0038I Pass  19: suminf.    0.73324 (31) obj. -3.53991e+07 iterations 36
Cbc0038I Pass  20: suminf.    2.62898 (12) obj. -3.72296e+07 iterations 9
Cbc0038I Pass  21: suminf.    0.68161 (26) obj. -3.53991e+07 iterations 31
Cbc0038I Pass  22: suminf.    3.99532 (12) obj. -3.53991e+07 iterations 12
Cbc0038I Pass  23: suminf.    0.70783 (27) obj. -3.53991e+07 iterations 35
Cbc0038I Pass  24: suminf.    2.54392 (11) obj. -3.53991e+07 iterations 12
Cbc0038I Pass  25: suminf.    0.70358 (29) obj. -3.53991e+07 iterations 19
Cbc0038I Pass  26: suminf.    0.67577 (26) obj. -3.53991e+07 iterations 22
Cbc0038I Pass  27: suminf.   17.94003 (40) obj. -3.53991e+07 iterations 20
Cbc0038I Pass  28: suminf.    0.71135 (18) obj. -3.53991e+07 iterations 13
Cbc0038I Pass  29: suminf.    0.71135 (18) obj. -3.53991e+07 iterations 7
Cbc0038I Pass  30: suminf.    3.24157 (17) obj. -3.53991e+07 iterations 8
Cbc0038I Rounding solution of -3.46228e+07 is better than previous of -3.45826e+07

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 230 rows 117 columns, reduced to 132 rows 71 columns - 4 fixed gives 93, 60 - ok now
Cbc0038I Full problem 230 rows 117 columns, reduced to 93 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -3.68686e+07
Cbc0038I Pass  30: suminf.    2.05306 (31) obj. -3.68686e+07 iterations 0
Cbc0038I Pass  31: suminf.   15.22108 (37) obj. -3.68686e+07 iterations 19
Cbc0038I Pass  32: suminf.   15.22108 (37) obj. -3.68686e+07 iterations 0
Cbc0038I Pass  33: suminf.    2.27693 (19) obj. -3.68686e+07 iterations 13
Cbc0038I Pass  34: suminf.    1.90851 (26) obj. -3.68686e+07 iterations 7
Cbc0038I Pass  35: suminf.    4.73077 (10) obj. -3.78551e+07 iterations 11
Cbc0038I Pass  36: suminf.    5.16064 (13) obj. -3.68686e+07 iterations 16
Cbc0038I Pass  37: suminf.    4.02954 (12) obj. -3.68686e+07 iterations 7
Cbc0038I Pass  38: suminf.    4.02954 (12) obj. -3.68686e+07 iterations 0
Cbc0038I Pass  39: suminf.    1.98192 (27) obj. -3.68686e+07 iterations 12
Cbc0038I Pass  40: suminf.   12.24555 (34) obj. -3.68686e+07 iterations 15
Cbc0038I Pass  41: suminf.   12.24555 (34) obj. -3.68686e+07 iterations 0
Cbc0038I Pass  42: suminf.   10.93489 (34) obj. -3.68686e+07 iterations 2
Cbc0038I Pass  43: suminf.   10.57318 (35) obj. -3.68686e+07 iterations 3
Cbc0038I Pass  44: suminf.   10.57318 (35) obj. -3.68686e+07 iterations 0
Cbc0038I Pass  45: suminf.    5.60469 (13) obj. -3.68686e+07 iterations 18
Cbc0038I Pass  46: suminf.    5.11164 (25) obj. -3.68686e+07 iterations 11
Cbc0038I Pass  47: suminf.    1.98192 (27) obj. -3.68686e+07 iterations 16
Cbc0038I Pass  48: suminf.    1.98192 (27) obj. -3.68686e+07 iterations 1
Cbc0038I Pass  49: suminf.   15.22108 (37) obj. -3.68686e+07 iterations 20
Cbc0038I Pass  50: suminf.   15.22108 (37) obj. -3.68686e+07 iterations 1
Cbc0038I Pass  51: suminf.    1.71548 (14) obj. -3.68686e+07 iterations 5
Cbc0038I Pass  52: suminf.    1.71436 (12) obj. -3.68686e+07 iterations 8
Cbc0038I Pass  53: suminf.    5.21555 (12) obj. -3.98339e+07 iterations 7
Cbc0038I Pass  54: suminf.    1.90851 (26) obj. -3.68686e+07 iterations 12
Cbc0038I Pass  55: suminf.    4.73077 (10) obj. -3.78551e+07 iterations 10
Cbc0038I Pass  56: suminf.    3.31749 (23) obj. -3.68686e+07 iterations 14
Cbc0038I Pass  57: suminf.    3.29564 (24) obj. -3.68686e+07 iterations 6
Cbc0038I Pass  58: suminf.    2.27046 (12) obj. -3.68686e+07 iterations 12
Cbc0038I Pass  59: suminf.    2.46028 (13) obj. -3.68686e+07 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 230 rows 117 columns, reduced to 93 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -3.46228e+07 - took 0.06 seconds
Cbc0012I Integer solution of -34624415 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 230 rows 117 columns, reduced to 61 rows 38 columns
Cbc0031I 6 added rows had average density of 39.333333
Cbc0013I At root node, 6 cuts changed objective from -42746981 to -34626787 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 651 row cuts average 3.0 elements, 14 column cuts (14 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 45.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 38.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 2371.5038 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -34624415, took 225 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

