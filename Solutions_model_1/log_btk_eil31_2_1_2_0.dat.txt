Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.21387e-05 - average 2.42773e-07, 2 fixed columns
Coin0506I Presolve 46 (-4) rows, 26 (-2) columns and 136 (-12) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Coin0511I After Postsolve, objective 74.581193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Coin0511I After Postsolve, objective 74.581193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.5811927 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.53591
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.48086 iterations 22
Cbc0038I Solution found of -1.48086
Cbc0038I Relaxing continuous gives -1.48086
Cbc0038I Rounding solution of -14.0743 is better than previous of -1.48086

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -14.0743 to -42.8705 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.999
Cbc0038I Pass   2: suminf.    1.01783 (3) obj. -45.999 iterations 4
Cbc0038I Pass   3: suminf.    0.21138 (1) obj. -45.999 iterations 2
Cbc0038I Pass   4: suminf.    0.21138 (1) obj. -45.999 iterations 1
Cbc0038I Pass   5: suminf.    0.28589 (1) obj. -45.999 iterations 1
Cbc0038I Pass   6: suminf.    0.94115 (4) obj. -45.999 iterations 10
Cbc0038I Pass   7: suminf.    0.76803 (4) obj. -45.999 iterations 4
Cbc0038I Pass   8: suminf.    0.50628 (2) obj. -45.999 iterations 4
Cbc0038I Pass   9: suminf.    0.43460 (2) obj. -45.999 iterations 2
Cbc0038I Pass  10: suminf.    0.22021 (2) obj. -45.999 iterations 3
Cbc0038I Pass  11: suminf.    0.74195 (2) obj. -45.999 iterations 2
Cbc0038I Pass  12: suminf.    2.46743 (7) obj. -45.999 iterations 7
Cbc0038I Pass  13: suminf.    0.45407 (4) obj. -45.999 iterations 6
Cbc0038I Pass  14: suminf.    0.57481 (3) obj. -45.999 iterations 3
Cbc0038I Pass  15: suminf.    0.56371 (3) obj. -45.999 iterations 1
Cbc0038I Pass  16: suminf.    0.75313 (2) obj. -45.999 iterations 1
Cbc0038I Pass  17: suminf.    0.70357 (2) obj. -45.999 iterations 2
Cbc0038I Pass  18: suminf.    0.39666 (2) obj. -45.999 iterations 1
Cbc0038I Pass  19: suminf.    0.40110 (1) obj. -45.999 iterations 2
Cbc0038I Pass  20: suminf.    0.28455 (1) obj. -45.999 iterations 1
Cbc0038I Pass  21: suminf.    0.85249 (3) obj. -45.999 iterations 5
Cbc0038I Pass  22: suminf.    0.16260 (1) obj. -45.999 iterations 3
Cbc0038I Pass  23: suminf.    0.19226 (1) obj. -45.999 iterations 1
Cbc0038I Pass  24: suminf.    0.75013 (2) obj. -45.999 iterations 9
Cbc0038I Pass  25: suminf.    0.32064 (2) obj. -45.999 iterations 8
Cbc0038I Pass  26: suminf.    0.95491 (3) obj. -45.999 iterations 2
Cbc0038I Pass  27: suminf.    0.43834 (2) obj. -45.999 iterations 3
Cbc0038I Pass  28: suminf.    0.74723 (4) obj. -45.999 iterations 7
Cbc0038I Pass  29: suminf.    0.38753 (2) obj. -45.999 iterations 4
Cbc0038I Pass  30: suminf.    0.42142 (2) obj. -45.999 iterations 5
Cbc0038I Pass  31: suminf.    0.82539 (3) obj. -45.999 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -42.8705 to -45.4766 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.6301
Cbc0038I Pass  31: suminf.    1.23518 (3) obj. -51.6301 iterations 0
Cbc0038I Pass  32: suminf.    0.56582 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  33: suminf.    0.43918 (2) obj. -51.6301 iterations 3
Cbc0038I Pass  34: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  35: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  36: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  37: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  38: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  39: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  40: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  41: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  42: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  43: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  44: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  45: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  46: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  47: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  48: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  49: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  50: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  51: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  52: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  53: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  54: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  55: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  56: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  57: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  58: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  59: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  60: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -45.4766 - took 0.06 seconds
Cbc0012I Integer solution of -45.47663 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 19 columns
Cbc0031I 12 added rows had average density of 16
Cbc0013I At root node, 12 cuts changed objective from -74.154543 to -58.101783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1403 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 776 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0016I Integer solution of -45.734407 found by strong branching after 3184 iterations and 13 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -45.73440699999999, took 3188 iterations and 14 nodes (0.28 seconds)
Cbc0032I Strong branching done 166 times (1751 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.28

