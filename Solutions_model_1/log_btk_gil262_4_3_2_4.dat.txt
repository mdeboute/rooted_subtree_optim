Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 261 (-3) columns and 1498 (-47) elements
Clp1000I sum of infeasibilities 1.17063e-05 - average 2.32268e-08, 56 fixed columns
Coin0506I Presolve 394 (-110) rows, 205 (-56) columns and 1168 (-330) elements
Clp0029I End of values pass after 205 iterations
Clp0014I Perturbing problem by 0.001% of 2.0048876 - largest nonzero change 0 ( 0%) - largest zero change 2.6314508e-05
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Coin0511I After Postsolve, objective 144.25253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Coin0511I After Postsolve, objective 144.25253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.2525254 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 261 columns (260 integer (260 of which binary)) and 1498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 83 integers unsatisfied sum - 11.8079
Cbc0038I Solution found of 4.11586
Cbc0038I Relaxing continuous gives -10.5646
Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 154 rows 84 columns
Cbc0038I Mini branch and bound improved solution from -10.5646 to -83.4894 (0.15 seconds)
Cbc0038I Round again with cutoff of -89.5658
Cbc0038I Pass   1: suminf.    3.84529 (42) obj. -89.5658 iterations 179
Cbc0038I Pass   2: suminf.    3.84529 (42) obj. -89.5658 iterations 0
Cbc0038I Pass   3: suminf.    2.03984 (8) obj. -89.5658 iterations 70
Cbc0038I Pass   4: suminf.    1.36943 (7) obj. -89.5658 iterations 10
Cbc0038I Pass   5: suminf.    2.17984 (9) obj. -89.5658 iterations 23
Cbc0038I Pass   6: suminf.    1.42761 (8) obj. -89.5658 iterations 9
Cbc0038I Pass   7: suminf.    2.09549 (7) obj. -89.5658 iterations 14
Cbc0038I Pass   8: suminf.    1.43900 (7) obj. -89.5658 iterations 10
Cbc0038I Pass   9: suminf.    2.74956 (8) obj. -89.5658 iterations 11
Cbc0038I Pass  10: suminf.    1.75244 (7) obj. -89.5658 iterations 11
Cbc0038I Pass  11: suminf.    1.96277 (6) obj. -89.5658 iterations 24
Cbc0038I Pass  12: suminf.    1.36689 (6) obj. -89.5658 iterations 9
Cbc0038I Pass  13: suminf.    1.23059 (5) obj. -89.5658 iterations 4
Cbc0038I Pass  14: suminf.    6.31259 (19) obj. -89.5658 iterations 35
Cbc0038I Pass  15: suminf.    3.51044 (12) obj. -89.5658 iterations 28
Cbc0038I Pass  16: suminf.    3.48894 (14) obj. -89.5658 iterations 2
Cbc0038I Pass  17: suminf.    2.62467 (8) obj. -89.5658 iterations 21
Cbc0038I Pass  18: suminf.    2.24156 (8) obj. -89.5658 iterations 13
Cbc0038I Pass  19: suminf.    2.20804 (6) obj. -89.5658 iterations 7
Cbc0038I Pass  20: suminf.    1.75818 (6) obj. -89.5658 iterations 14
Cbc0038I Pass  21: suminf.    2.59298 (7) obj. -89.5658 iterations 24
Cbc0038I Pass  22: suminf.    2.10177 (7) obj. -89.5658 iterations 8
Cbc0038I Pass  23: suminf.    1.62453 (7) obj. -89.5658 iterations 23
Cbc0038I Pass  24: suminf.    1.43963 (9) obj. -89.5658 iterations 7
Cbc0038I Pass  25: suminf.    2.45965 (8) obj. -89.5658 iterations 11
Cbc0038I Pass  26: suminf.    2.11907 (7) obj. -89.5658 iterations 14
Cbc0038I Pass  27: suminf.    2.11392 (8) obj. -89.5658 iterations 3
Cbc0038I Pass  28: suminf.    2.91896 (8) obj. -89.5658 iterations 24
Cbc0038I Pass  29: suminf.    2.62156 (10) obj. -89.5658 iterations 26
Cbc0038I Pass  30: suminf.    2.31763 (7) obj. -89.5658 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 193 rows 105 columns
Cbc0038I Mini branch and bound improved solution from -83.4894 to -84.177 (0.36 seconds)
Cbc0038I Round again with cutoff of -100.503
Cbc0038I Pass  30: suminf.    4.52194 (53) obj. -100.503 iterations 1
Cbc0038I Pass  31: suminf.    4.52194 (53) obj. -100.503 iterations 0
Cbc0038I Pass  32: suminf.    5.40433 (16) obj. -100.503 iterations 63
Cbc0038I Pass  33: suminf.    3.30726 (12) obj. -100.503 iterations 17
Cbc0038I Pass  34: suminf.    3.19429 (13) obj. -100.503 iterations 4
Cbc0038I Pass  35: suminf.    4.08895 (10) obj. -100.503 iterations 15
Cbc0038I Pass  36: suminf.    2.85843 (10) obj. -100.503 iterations 11
Cbc0038I Pass  37: suminf.    4.23943 (11) obj. -100.503 iterations 14
Cbc0038I Pass  38: suminf.    2.37892 (11) obj. -100.503 iterations 7
Cbc0038I Pass  39: suminf.    2.24379 (9) obj. -100.503 iterations 7
Cbc0038I Pass  40: suminf.    3.17530 (9) obj. -100.503 iterations 11
Cbc0038I Pass  41: suminf.    2.49106 (9) obj. -100.503 iterations 7
Cbc0038I Pass  42: suminf.    2.97101 (9) obj. -100.503 iterations 12
Cbc0038I Pass  43: suminf.    7.76981 (26) obj. -100.503 iterations 52
Cbc0038I Pass  44: suminf.    3.45855 (14) obj. -100.503 iterations 64
Cbc0038I Pass  45: suminf.    2.85769 (12) obj. -100.503 iterations 20
Cbc0038I Pass  46: suminf.    3.67779 (10) obj. -100.503 iterations 14
Cbc0038I Pass  47: suminf.    3.08681 (10) obj. -100.503 iterations 5
Cbc0038I Pass  48: suminf.    2.57776 (9) obj. -100.503 iterations 6
Cbc0038I Pass  49: suminf.    4.01862 (9) obj. -100.503 iterations 11
Cbc0038I Pass  50: suminf.    3.04607 (9) obj. -100.503 iterations 4
Cbc0038I Pass  51: suminf.    2.98179 (10) obj. -100.503 iterations 5
Cbc0038I Pass  52: suminf.    3.76700 (11) obj. -100.503 iterations 12
Cbc0038I Pass  53: suminf.    3.27201 (10) obj. -100.503 iterations 3
Cbc0038I Pass  54: suminf.    2.80589 (10) obj. -100.503 iterations 5
Cbc0038I Pass  55: suminf.    2.36942 (10) obj. -100.503 iterations 6
Cbc0038I Pass  56: suminf.    4.09035 (10) obj. -100.503 iterations 15
Cbc0038I Pass  57: suminf.    2.52744 (9) obj. -100.503 iterations 11
Cbc0038I Pass  58: suminf.    5.52279 (19) obj. -100.503 iterations 46
Cbc0038I Pass  59: suminf.    3.25908 (12) obj. -100.503 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 220 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -84.177 to -92.6206 (0.65 seconds)
Cbc0038I Round again with cutoff of -113.628
Cbc0038I Pass  59: suminf.    5.33556 (58) obj. -113.628 iterations 4
Cbc0038I Pass  60: suminf.    5.33556 (58) obj. -113.628 iterations 0
Cbc0038I Pass  61: suminf.    5.65768 (17) obj. -113.628 iterations 74
Cbc0038I Pass  62: suminf.    4.96402 (17) obj. -113.628 iterations 36
Cbc0038I Pass  63: suminf.    5.17529 (16) obj. -113.628 iterations 20
Cbc0038I Pass  64: suminf.    4.33642 (34) obj. -113.628 iterations 58
Cbc0038I Pass  65: suminf.    5.65117 (17) obj. -113.628 iterations 56
Cbc0038I Pass  66: suminf.    4.05451 (15) obj. -113.628 iterations 24
Cbc0038I Pass  67: suminf.    3.81005 (15) obj. -113.628 iterations 14
Cbc0038I Pass  68: suminf.    4.56381 (16) obj. -113.628 iterations 19
Cbc0038I Pass  69: suminf.    3.78382 (11) obj. -113.628 iterations 19
Cbc0038I Pass  70: suminf.    3.16606 (11) obj. -113.628 iterations 13
Cbc0038I Pass  71: suminf.    3.16606 (11) obj. -113.628 iterations 1
Cbc0038I Pass  72: suminf.    3.80862 (16) obj. -113.628 iterations 23
Cbc0038I Pass  73: suminf.    2.91114 (11) obj. -113.628 iterations 10
Cbc0038I Pass  74: suminf.    2.48716 (10) obj. -113.628 iterations 7
Cbc0038I Pass  75: suminf.    2.89209 (12) obj. -113.628 iterations 9
Cbc0038I Pass  76: suminf.    1.91359 (12) obj. -113.628 iterations 12
Cbc0038I Pass  77: suminf.    1.90187 (12) obj. -113.628 iterations 2
Cbc0038I Pass  78: suminf.    3.54014 (12) obj. -113.628 iterations 13
Cbc0038I Pass  79: suminf.    2.38356 (12) obj. -113.628 iterations 12
Cbc0038I Pass  80: suminf.    8.23699 (26) obj. -113.628 iterations 55
Cbc0038I Pass  81: suminf.    2.99354 (13) obj. -113.628 iterations 54
Cbc0038I Pass  82: suminf.    2.57359 (11) obj. -113.628 iterations 6
Cbc0038I Pass  83: suminf.    2.34389 (11) obj. -113.628 iterations 10
Cbc0038I Pass  84: suminf.    4.47779 (13) obj. -113.628 iterations 21
Cbc0038I Pass  85: suminf.    2.38798 (11) obj. -113.628 iterations 14
Cbc0038I Pass  86: suminf.    2.22706 (9) obj. -113.628 iterations 12
Cbc0038I Pass  87: suminf.    4.00736 (14) obj. -113.628 iterations 26
Cbc0038I Pass  88: suminf.    2.69940 (12) obj. -113.628 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 222 rows 119 columns
Cbc0038I Mini branch and bound did not improve solution (0.91 seconds)
Cbc0038I After 0.91 seconds - Feasibility pump exiting with objective of -92.6206 - took 0.85 seconds
Cbc0012I Integer solution of -92.62064 found by feasibility pump after 0 iterations and 0 nodes (0.91 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 154 rows 84 columns
Cbc0031I 44 added rows had average density of 114.38636
Cbc0013I At root node, 44 cuts changed objective from -144.25253 to -133.90627 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 46016 row cuts average 3.2 elements, 1 column cuts (1 active)  in 1.185 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3401 row cuts average 259.0 elements, 0 column cuts (0 active)  in 1.147 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.261 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.190 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 254.3 elements, 0 column cuts (0 active)  in 0.573 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.62064 best solution, best possible -133.90627 (13.83 seconds)
Cbc0010I After 3 nodes, 4 on tree, -92.62064 best solution, best possible -133.90627 (14.53 seconds)
Cbc0010I After 9 nodes, 10 on tree, -92.62064 best solution, best possible -133.90627 (15.23 seconds)
Cbc0010I After 42 nodes, 10 on tree, -92.62064 best solution, best possible -133.90627 (15.94 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 25 rows 20 columns
Cbc0010I After 87 nodes, 8 on tree, -92.62064 best solution, best possible -133.90627 (16.70 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 62 rows 39 columns
Cbc0010I After 178 nodes, 7 on tree, -92.62064 best solution, best possible -133.90627 (17.40 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 109 rows 60 columns
Cbc0010I After 235 nodes, 2 on tree, -92.62064 best solution, best possible -94.477435 (18.11 seconds)
Cbc0001I Search completed - best objective -92.62064000000001, took 31320 iterations and 242 nodes (18.22 seconds)
Cbc0032I Strong branching done 2528 times (69001 iterations), fathomed 11 nodes and fixed 70 variables
Cbc0035I Maximum depth 77, 948 variables fixed on reduced cost
Total time (CPU seconds):       17.36   (Wallclock seconds):       18.32

