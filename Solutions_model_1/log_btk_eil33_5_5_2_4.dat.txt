Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 1.11577e-05 - average 1.95749e-07, 6 fixed columns
Coin0506I Presolve 45 (-12) rows, 27 (-6) columns and 136 (-36) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Coin0511I After Postsolve, objective 80.325188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Clp0000I Optimal - objective value 80.325188
Coin0511I After Postsolve, objective 80.325188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.32518845 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.47056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.03659 iterations 16
Cbc0038I Solution found of 0.03659
Cbc0038I Relaxing continuous gives 0.03659
Cbc0038I Rounding solution of -23.2128 is better than previous of 0.03659

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -23.2128 to -32.6827 (0.02 seconds)
Cbc0038I Round again with cutoff of -37.4324
Cbc0038I Pass   2: suminf.    1.38666 (5) obj. -37.4324 iterations 4
Cbc0038I Pass   3: suminf.    1.38666 (5) obj. -37.4324 iterations 1
Cbc0038I Pass   4: suminf.    0.44427 (2) obj. -37.4324 iterations 5
Cbc0038I Pass   5: suminf.    0.37111 (3) obj. -37.4324 iterations 3
Cbc0038I Pass   6: suminf.    1.03350 (3) obj. -37.4324 iterations 6
Cbc0038I Pass   7: suminf.    0.87019 (3) obj. -37.4324 iterations 2
Cbc0038I Pass   8: suminf.    0.82225 (3) obj. -37.4324 iterations 2
Cbc0038I Pass   9: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  10: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  11: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  12: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  13: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  14: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  15: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  16: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  17: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  18: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  19: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  20: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  21: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  22: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  23: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  24: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  25: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I Pass  26: suminf.    0.82225 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  27: suminf.    1.16624 (4) obj. -37.4324 iterations 3
Cbc0038I Pass  28: suminf.    1.13709 (4) obj. -37.4324 iterations 1
Cbc0038I Pass  29: suminf.    1.02763 (3) obj. -37.4324 iterations 4
Cbc0038I Pass  30: suminf.    1.02303 (3) obj. -37.4324 iterations 1
Cbc0038I Pass  31: suminf.    0.83123 (3) obj. -37.4324 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.6827 - took 0.03 seconds
Cbc0012I Integer solution of -32.68272 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 20 columns
Cbc0031I 16 added rows had average density of 22.1875
Cbc0013I At root node, 16 cuts changed objective from -80.178154 to -51.802665 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2674 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1302 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -35.09749 found by DiveCoefficient after 3026 iterations and 9 nodes (0.31 seconds)
Cbc0001I Search completed - best objective -35.09748999999999, took 3176 iterations and 24 nodes (0.32 seconds)
Cbc0032I Strong branching done 230 times (2385 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 7, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.32

