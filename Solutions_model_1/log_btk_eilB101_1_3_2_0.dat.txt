Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 101 (-2) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 1.67577e-05 - average 9.36186e-08, 22 fixed columns
Coin0506I Presolve 137 (-42) rows, 79 (-22) columns and 424 (-128) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 1.6656697 - largest nonzero change 0 ( 0%) - largest zero change 2.7019603e-05
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Coin0511I After Postsolve, objective 34.965223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Coin0511I After Postsolve, objective 34.965223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.96522317 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 101 columns (100 integer (100 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.922%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 8.42239
Cbc0038I Solution found of 5.50178
Cbc0038I Relaxing continuous gives -2.90899
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 78 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -2.90899 to -4.28276 (0.07 seconds)
Cbc0038I Round again with cutoff of -7.35109
Cbc0038I Pass   1: suminf.    0.90498 (35) obj. -7.35109 iterations 58
Cbc0038I Pass   2: suminf.    2.18304 (8) obj. -7.35109 iterations 34
Cbc0038I Pass   3: suminf.    1.89324 (8) obj. -7.35109 iterations 3
Cbc0038I Pass   4: suminf.    1.29987 (6) obj. -7.35109 iterations 4
Cbc0038I Pass   5: suminf.    1.29745 (7) obj. -7.35109 iterations 2
Cbc0038I Pass   6: suminf.    1.76542 (8) obj. -7.35109 iterations 10
Cbc0038I Pass   7: suminf.    1.71282 (7) obj. -7.35109 iterations 2
Cbc0038I Pass   8: suminf.    2.92813 (7) obj. -7.35109 iterations 5
Cbc0038I Pass   9: suminf.    1.21596 (6) obj. -7.35109 iterations 5
Cbc0038I Pass  10: suminf.    1.10665 (4) obj. -7.35109 iterations 1
Cbc0038I Pass  11: suminf.    1.10665 (4) obj. -7.35109 iterations 0
Cbc0038I Pass  12: suminf.    1.31954 (4) obj. -7.35109 iterations 7
Cbc0038I Pass  13: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  14: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  15: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  16: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  17: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  18: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  19: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  20: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  21: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  22: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  23: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  24: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  25: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  26: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  27: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  28: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  29: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  30: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Rounding solution of -6.35683 is better than previous of -4.28276

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -12.8739
Cbc0038I Pass  30: suminf.    2.03014 (35) obj. -12.8739 iterations 0
Cbc0038I Pass  31: suminf.    2.76860 (9) obj. -12.8739 iterations 30
Cbc0038I Pass  32: suminf.    1.97694 (9) obj. -12.8739 iterations 5
Cbc0038I Pass  33: suminf.    2.99110 (8) obj. -12.8739 iterations 10
Cbc0038I Pass  34: suminf.    2.08269 (7) obj. -12.8739 iterations 4
Cbc0038I Pass  35: suminf.    1.83109 (6) obj. -12.8739 iterations 4
Cbc0038I Pass  36: suminf.    1.61240 (5) obj. -12.8739 iterations 2
Cbc0038I Pass  37: suminf.    1.61264 (6) obj. -12.8739 iterations 2
Cbc0038I Pass  38: suminf.    2.07421 (9) obj. -12.8739 iterations 6
Cbc0038I Pass  39: suminf.    1.82228 (5) obj. -12.8739 iterations 3
Cbc0038I Pass  40: suminf.    1.66124 (4) obj. -12.8739 iterations 6
Cbc0038I Pass  41: suminf.    1.65994 (4) obj. -12.8739 iterations 2
Cbc0038I Pass  42: suminf.    1.88926 (11) obj. -12.8739 iterations 5
Cbc0038I Pass  43: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  44: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  45: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  46: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  47: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I Pass  48: suminf.    1.88926 (11) obj. -12.8739 iterations 12
Cbc0038I Pass  49: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  50: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  51: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  52: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  53: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I Pass  54: suminf.    1.88926 (11) obj. -12.8739 iterations 12
Cbc0038I Pass  55: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  56: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  57: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  58: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  59: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -6.35683 - took 0.17 seconds
Cbc0012I Integer solution of -6.35683 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 79 rows 48 columns
Cbc0031I 31 added rows had average density of 75.935484
Cbc0013I At root node, 31 cuts changed objective from -34.965223 to -26.358983 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15216 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1775 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.35683 best solution, best possible -26.358983 (1.50 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 64 rows 39 columns
Cbc0012I Integer solution of -6.35901 found by RINS after 11070 iterations and 43 nodes (1.86 seconds)
Cbc0012I Integer solution of -6.401617 found by rounding after 12341 iterations and 62 nodes (1.97 seconds)
Cbc0001I Search completed - best objective -6.401617000000002, took 12651 iterations and 76 nodes (1.99 seconds)
Cbc0032I Strong branching done 978 times (21008 iterations), fathomed 4 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 273 variables fixed on reduced cost
Total time (CPU seconds):       1.93   (Wallclock seconds):       2.01

