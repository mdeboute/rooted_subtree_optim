Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 20 (-4) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 2.18328e-05 - average 6.23795e-07, 0 fixed columns
Coin0506I Presolve 35 (0) rows, 20 (0) columns and 102 (0) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Coin0511I After Postsolve, objective 54.542854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Clp0000I Optimal - objective value 54.542854
Coin0511I After Postsolve, objective 54.542854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.5428542 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.31561
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.0417 iterations 12
Cbc0038I Solution found of -21.0417
Cbc0038I Relaxing continuous gives -21.0417
Cbc0038I Rounding solution of -23.8514 is better than previous of -21.0417

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -23.8514 to -24.5125 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.3806
Cbc0038I Pass   2: suminf.    0.37089 (3) obj. -27.3806 iterations 3
Cbc0038I Pass   3: suminf.    0.92774 (3) obj. -27.3806 iterations 4
Cbc0038I Pass   4: suminf.    0.40574 (2) obj. -27.3806 iterations 2
Cbc0038I Pass   5: suminf.    0.23163 (1) obj. -27.3806 iterations 1
Cbc0038I Pass   6: suminf.    0.35078 (1) obj. -27.3806 iterations 1
Cbc0038I Pass   7: suminf.    1.13936 (3) obj. -27.3806 iterations 5
Cbc0038I Pass   8: suminf.    1.49362 (4) obj. -27.3806 iterations 8
Cbc0038I Pass   9: suminf.    1.49362 (4) obj. -27.3806 iterations 1
Cbc0038I Pass  10: suminf.    0.37089 (3) obj. -27.3806 iterations 6
Cbc0038I Pass  11: suminf.    0.92774 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  12: suminf.    0.40574 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  13: suminf.    0.23163 (1) obj. -27.3806 iterations 1
Cbc0038I Pass  14: suminf.    0.35078 (1) obj. -27.3806 iterations 1
Cbc0038I Pass  15: suminf.    1.22724 (4) obj. -27.3806 iterations 6
Cbc0038I Pass  16: suminf.    0.74025 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  17: suminf.    0.20649 (3) obj. -27.3806 iterations 5
Cbc0038I Pass  18: suminf.    0.20649 (3) obj. -27.3806 iterations 0
Cbc0038I Pass  19: suminf.    1.05218 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  20: suminf.    1.01410 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  21: suminf.    0.46915 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  22: suminf.    0.11700 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  23: suminf.    0.35482 (2) obj. -27.3806 iterations 6
Cbc0038I Pass  24: suminf.    0.20649 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  25: suminf.    1.05218 (3) obj. -27.3806 iterations 4
Cbc0038I Pass  26: suminf.    1.01410 (3) obj. -27.3806 iterations 1
Cbc0038I Pass  27: suminf.    0.46915 (2) obj. -27.3806 iterations 2
Cbc0038I Pass  28: suminf.    0.11700 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  29: suminf.    0.66958 (2) obj. -27.3806 iterations 5
Cbc0038I Pass  30: suminf.    0.46752 (1) obj. -27.3806 iterations 2
Cbc0038I Pass  31: suminf.    0.20649 (3) obj. -27.3806 iterations 3
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -32.5429
Cbc0038I Pass  31: suminf.    0.67294 (3) obj. -32.5429 iterations 0
Cbc0038I Pass  32: suminf.    0.91843 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  33: suminf.    0.34912 (1) obj. -32.5429 iterations 2
Cbc0038I Pass  34: suminf.    0.44654 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  35: suminf.    1.18462 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  36: suminf.    1.20066 (4) obj. -32.5429 iterations 4
Cbc0038I Pass  37: suminf.    1.20066 (4) obj. -32.5429 iterations 0
Cbc0038I Pass  38: suminf.    0.41067 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  39: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  40: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  41: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  42: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  43: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  44: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  45: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  46: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  47: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  48: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  49: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  50: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  51: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  52: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  53: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  54: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I Pass  55: suminf.    0.55803 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  56: suminf.    0.41067 (3) obj. -32.5429 iterations 5
Cbc0038I Pass  57: suminf.    0.32822 (2) obj. -32.5429 iterations 1
Cbc0038I Pass  58: suminf.    0.58007 (3) obj. -32.5429 iterations 3
Cbc0038I Pass  59: suminf.    0.50854 (3) obj. -32.5429 iterations 1
Cbc0038I Pass  60: suminf.    1.12758 (3) obj. -32.5429 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.5125 - took 0.02 seconds
Cbc0012I Integer solution of -24.512541 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 24 rows 14 columns
Cbc0031I 10 added rows had average density of 10.4
Cbc0013I At root node, 10 cuts changed objective from -53.191987 to -32.241786 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 967 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 672 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.5125411, took 1782 iterations and 2 nodes (0.15 seconds)
Cbc0032I Strong branching done 20 times (209 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

