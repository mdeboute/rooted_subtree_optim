Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 66 (-12) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 7.87416e-05 - average 6.8471e-07, 12 fixed columns
Coin0506I Presolve 87 (-28) rows, 52 (-14) columns and 272 (-83) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.254096 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Coin0511I After Postsolve, objective 89.669294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25630628 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Clp0000I Optimal - objective value 89.669294
Coin0511I After Postsolve, objective 89.669294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.66929422 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 66 columns (65 integer (65 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.37692
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.5224 iterations 40
Cbc0038I Solution found of -29.5224
Cbc0038I Relaxing continuous gives -29.5224
Cbc0038I Rounding solution of -41.8176 is better than previous of -29.5224

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 39 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -41.8176 to -59.2362 (0.07 seconds)
Cbc0038I Round again with cutoff of -62.2796
Cbc0038I Pass   2: suminf.    1.81985 (7) obj. -62.2796 iterations 11
Cbc0038I Pass   3: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass   4: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass   5: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass   6: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass   7: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass   8: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass   9: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  10: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  11: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  12: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  13: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  14: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  15: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  16: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  17: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  18: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  19: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  20: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  21: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  22: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  23: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  24: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I Pass  25: suminf.    0.84507 (5) obj. -62.2796 iterations 6
Cbc0038I Pass  26: suminf.    0.66491 (2) obj. -62.2796 iterations 9
Cbc0038I Pass  27: suminf.    0.38697 (3) obj. -62.2796 iterations 3
Cbc0038I Pass  28: suminf.    0.53806 (4) obj. -62.2796 iterations 5
Cbc0038I Pass  29: suminf.    1.83961 (6) obj. -62.2796 iterations 6
Cbc0038I Pass  30: suminf.    1.81985 (7) obj. -62.2796 iterations 1
Cbc0038I Pass  31: suminf.    1.51570 (5) obj. -62.2796 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -59.2362 to -61.2808 (0.14 seconds)
Cbc0038I Round again with cutoff of -67.7576
Cbc0038I Pass  31: suminf.    2.18207 (8) obj. -67.7576 iterations 1
Cbc0038I Pass  32: suminf.    1.34375 (6) obj. -67.7576 iterations 13
Cbc0038I Pass  33: suminf.    1.08137 (5) obj. -67.7576 iterations 5
Cbc0038I Pass  34: suminf.    0.85148 (3) obj. -67.7576 iterations 8
Cbc0038I Pass  35: suminf.    0.67043 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  36: suminf.    1.10885 (6) obj. -67.7576 iterations 8
Cbc0038I Pass  37: suminf.    2.08666 (6) obj. -67.7576 iterations 7
Cbc0038I Pass  38: suminf.    0.85973 (4) obj. -67.7576 iterations 6
Cbc0038I Pass  39: suminf.    1.32369 (5) obj. -67.7576 iterations 5
Cbc0038I Pass  40: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  41: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  42: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  43: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  44: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  45: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  46: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  47: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  48: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  49: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  50: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  51: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  52: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  53: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  54: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  55: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I Pass  56: suminf.    0.92335 (4) obj. -67.7576 iterations 2
Cbc0038I Pass  57: suminf.    1.66717 (6) obj. -67.7576 iterations 10
Cbc0038I Pass  58: suminf.    0.97725 (5) obj. -67.7576 iterations 2
Cbc0038I Pass  59: suminf.    1.32369 (5) obj. -67.7576 iterations 9
Cbc0038I Pass  60: suminf.    0.99877 (4) obj. -67.7576 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 66 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -61.2808 - took 0.16 seconds
Cbc0012I Integer solution of -61.28076 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 115 rows 66 columns, reduced to 39 rows 26 columns
Cbc0031I 18 added rows had average density of 41.5
Cbc0013I At root node, 18 cuts changed objective from -89.669294 to -80.63479 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5314 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 988 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 147 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0010I After 21 nodes, 9 on tree, -61.28076 best solution, best possible -80.63479 (0.68 seconds)
Cbc0012I Integer solution of -61.8165 found by DiveCoefficient after 4794 iterations and 31 nodes (0.70 seconds)
Cbc0001I Search completed - best objective -61.81649999999999, took 5007 iterations and 38 nodes (0.71 seconds)
Cbc0032I Strong branching done 494 times (7871 iterations), fathomed 5 nodes and fixed 31 variables
Cbc0035I Maximum depth 13, 179 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.72

