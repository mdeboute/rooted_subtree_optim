Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 33 (-30) rows, 18 (-14) columns and 95 (-82) elements
Clp0000I Optimal - objective value 92.24353
Coin0511I After Postsolve, objective 92.24353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.24352987 - 20 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 18 columns (17 integer (17 of which binary)) and 95 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.63199
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5 iterations 18
Cbc0038I Solution found of -5
Cbc0038I Relaxing continuous gives -5
Cbc0038I Rounding solution of -14 is better than previous of -5

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -14 to -19 (0.02 seconds)
Cbc0038I Round again with cutoff of -27.1224
Cbc0038I Pass   2: suminf.    0.77617 (4) obj. -27.1224 iterations 2
Cbc0038I Pass   3: suminf.    0.43143 (2) obj. -35.5796 iterations 6
Cbc0038I Pass   4: suminf.    0.93023 (3) obj. -27.1224 iterations 4
Cbc0038I Pass   5: suminf.    0.50429 (2) obj. -27.1224 iterations 5
Cbc0038I Pass   6: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass   7: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass   8: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass   9: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  10: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  11: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  12: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  13: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  14: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  15: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  16: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  17: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  18: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  19: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  20: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  21: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  22: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  23: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  24: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  25: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  26: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  27: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  28: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  29: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  30: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  31: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -19 - took 0.02 seconds
Cbc0012I Integer solution of -19 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 10 added rows had average density of 13.8
Cbc0013I At root node, 10 cuts changed objective from -91.225327 to -48.322851 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 765 row cuts average 2.9 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 248 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 62 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19, took 1470 iterations and 6 nodes (0.19 seconds)
Cbc0032I Strong branching done 78 times (503 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.19

