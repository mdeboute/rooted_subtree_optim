Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-12) rows, 76 (-2) columns and 430 (-23) elements
Clp1000I sum of infeasibilities 2.40859e-05 - average 1.68433e-07, 20 fixed columns
Coin0506I Presolve 100 (-43) rows, 54 (-22) columns and 301 (-129) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.34781245 - largest nonzero change 0 ( 0%) - largest zero change 2.9269876e-05
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Coin0511I After Postsolve, objective 58.930213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Coin0511I After Postsolve, objective 58.930213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.93021328 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 143 rows, 76 columns (75 integer (75 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 7.42983
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.0931 iterations 38
Cbc0038I Solution found of -11.0931
Cbc0038I Relaxing continuous gives -11.0931
Cbc0038I Rounding solution of -25.4594 is better than previous of -11.0931

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -25.4594 to -26.5342 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.7739
Cbc0038I Pass   2: suminf.    1.74251 (6) obj. -29.7739 iterations 10
Cbc0038I Pass   3: suminf.    1.34431 (6) obj. -29.7739 iterations 9
Cbc0038I Pass   4: suminf.    1.34431 (6) obj. -29.7739 iterations 0
Cbc0038I Pass   5: suminf.    0.82032 (2) obj. -29.7739 iterations 8
Cbc0038I Pass   6: suminf.    0.63185 (3) obj. -29.7739 iterations 2
Cbc0038I Pass   7: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass   8: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass   9: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  10: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  11: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  12: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  13: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  14: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  15: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  16: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  17: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  18: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  19: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  20: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  21: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  22: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  23: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  24: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  25: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  26: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  27: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  28: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  29: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  30: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  31: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Rounding solution of -30.2015 is better than previous of -26.5342

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -35.9473
Cbc0038I Pass  31: suminf.    2.39841 (7) obj. -35.9473 iterations 2
Cbc0038I Pass  32: suminf.    2.39916 (6) obj. -35.9473 iterations 7
Cbc0038I Pass  33: suminf.    1.88025 (5) obj. -35.9473 iterations 1
Cbc0038I Pass  34: suminf.    1.17911 (6) obj. -35.9473 iterations 7
Cbc0038I Pass  35: suminf.    1.17911 (6) obj. -35.9473 iterations 0
Cbc0038I Pass  36: suminf.    2.42265 (6) obj. -35.9473 iterations 5
Cbc0038I Pass  37: suminf.    2.42265 (6) obj. -35.9473 iterations 0
Cbc0038I Pass  38: suminf.    2.23588 (8) obj. -35.9473 iterations 12
Cbc0038I Pass  39: suminf.    1.96501 (6) obj. -35.9473 iterations 11
Cbc0038I Pass  40: suminf.    1.08875 (6) obj. -35.9473 iterations 9
Cbc0038I Pass  41: suminf.    1.06945 (4) obj. -35.9473 iterations 3
Cbc0038I Pass  42: suminf.    1.31345 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  43: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  44: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  45: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  46: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  47: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  48: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  49: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  50: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  51: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  52: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  53: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  54: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  55: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  56: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  57: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  58: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  59: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  60: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -30.2015 - took 0.06 seconds
Cbc0012I Integer solution of -30.45613 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 143 rows 76 columns, reduced to 59 rows 34 columns
Cbc0031I 25 added rows had average density of 44.36
Cbc0013I At root node, 25 cuts changed objective from -58.930213 to -45.180768 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10229 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1543 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.45613 best solution, best possible -45.180768 (0.74 seconds)
Cbc0004I Integer solution of -31.66725 found after 6788 iterations and 18 nodes (0.83 seconds)
Cbc0001I Search completed - best objective -31.66725, took 7421 iterations and 36 nodes (0.86 seconds)
Cbc0032I Strong branching done 498 times (9131 iterations), fathomed 1 nodes and fixed 28 variables
Cbc0035I Maximum depth 12, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.87

