Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 65 (-40) rows, 35 (-18) columns and 193 (-110) elements
Clp0000I Optimal - objective value 73.295684
Coin0511I After Postsolve, objective 73.295684, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.29568359 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 35 columns (34 integer (34 of which binary)) and 193 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.535%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 6.18193
Cbc0038I Pass   1: suminf.    0.07143 (1) obj. -39.6071 iterations 18
Cbc0038I Solution found of -37
Cbc0038I Relaxing continuous gives -37
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 35 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -37 to -52.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -55.0295
Cbc0038I Pass   2: suminf.    0.52270 (7) obj. -55.0295 iterations 6
Cbc0038I Pass   3: suminf.    0.52270 (7) obj. -55.0295 iterations 1
Cbc0038I Pass   4: suminf.    2.01992 (7) obj. -55.0295 iterations 14
Cbc0038I Pass   5: suminf.    1.00724 (3) obj. -55.0295 iterations 5
Cbc0038I Pass   6: suminf.    0.59880 (5) obj. -55.0295 iterations 7
Cbc0038I Pass   7: suminf.    2.68220 (8) obj. -55.0295 iterations 9
Cbc0038I Pass   8: suminf.    2.85367 (11) obj. -55.0295 iterations 13
Cbc0038I Pass   9: suminf.    2.55389 (9) obj. -55.0295 iterations 7
Cbc0038I Pass  10: suminf.    3.37777 (9) obj. -55.0295 iterations 19
Cbc0038I Pass  11: suminf.    1.00724 (3) obj. -55.0295 iterations 7
Cbc0038I Pass  12: suminf.    0.59880 (5) obj. -55.0295 iterations 7
Cbc0038I Pass  13: suminf.    2.68220 (8) obj. -55.0295 iterations 9
Cbc0038I Pass  14: suminf.    2.99197 (8) obj. -55.0295 iterations 8
Cbc0038I Pass  15: suminf.    1.93189 (6) obj. -55.0295 iterations 3
Cbc0038I Pass  16: suminf.    1.72944 (6) obj. -55.0295 iterations 6
Cbc0038I Pass  17: suminf.    1.62676 (6) obj. -55.0295 iterations 2
Cbc0038I Pass  18: suminf.    3.33758 (8) obj. -55.0295 iterations 7
Cbc0038I Pass  19: suminf.    0.34919 (2) obj. -55.0295 iterations 9
Cbc0038I Pass  20: suminf.    0.41833 (3) obj. -55.0295 iterations 2
Cbc0038I Pass  21: suminf.    3.07438 (9) obj. -55.0295 iterations 11
Cbc0038I Pass  22: suminf.    0.72066 (3) obj. -55.0295 iterations 10
Cbc0038I Pass  23: suminf.    2.75556 (8) obj. -55.0295 iterations 9
Cbc0038I Pass  24: suminf.    1.44938 (7) obj. -55.0295 iterations 7
Cbc0038I Pass  25: suminf.    1.12852 (3) obj. -55.0295 iterations 7
Cbc0038I Pass  26: suminf.    1.02625 (3) obj. -55.0295 iterations 2
Cbc0038I Pass  27: suminf.    0.76653 (3) obj. -55.0295 iterations 2
Cbc0038I Pass  28: suminf.    0.66608 (3) obj. -55.0295 iterations 3
Cbc0038I Pass  29: suminf.    1.12852 (3) obj. -55.0295 iterations 4
Cbc0038I Pass  30: suminf.    2.98086 (11) obj. -55.0295 iterations 13
Cbc0038I Pass  31: suminf.    0.98589 (6) obj. -55.0295 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 35 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -52.5 - took 0.02 seconds
Cbc0012I Integer solution of -52.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 65 rows 35 columns, reduced to 24 rows 16 columns
Cbc0031I 5 added rows had average density of 20
Cbc0013I At root node, 5 cuts changed objective from -73.295684 to -54.691453 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 438 row cuts average 3.1 elements, 4 column cuts (4 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 304 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -52.5, took 1315 iterations and 2 nodes (0.12 seconds)
Cbc0032I Strong branching done 24 times (166 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

