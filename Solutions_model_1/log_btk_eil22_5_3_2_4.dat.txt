Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 19 (-5) columns and 93 (-36) elements
Clp1000I sum of infeasibilities 1.29495e-05 - average 4.17725e-07, 1 fixed columns
Coin0506I Presolve 26 (-5) rows, 16 (-3) columns and 77 (-16) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 6.0272744 - largest nonzero change 0 ( 0%) - largest zero change 1.7295226e-05
Clp0000I Optimal - objective value 117.88236
Clp0000I Optimal - objective value 117.88236
Coin0511I After Postsolve, objective 117.88236, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.88236
Clp0000I Optimal - objective value 117.88236
Clp0000I Optimal - objective value 117.88236
Coin0511I After Postsolve, objective 117.88236, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.882357 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 93 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.86566
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -58 iterations 6
Cbc0038I Solution found of -58
Cbc0038I Relaxing continuous gives -58
Cbc0038I Rounding solution of -68 is better than previous of -58

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -68 to -94.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -97.2881
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.45127 (5) obj. -97.2881 iterations 6
Cbc0038I Pass   3: suminf.    1.45127 (5) obj. -97.2881 iterations 0
Cbc0038I Pass   4: suminf.    0.14185 (2) obj. -97.2881 iterations 9
Cbc0038I Pass   5: suminf.    0.10170 (2) obj. -97.2881 iterations 3
Cbc0038I Pass   6: suminf.    0.11111 (1) obj. -97.2881 iterations 3
Cbc0038I Pass   7: suminf.    0.11209 (2) obj. -97.2881 iterations 1
Cbc0038I Pass   8: suminf.    1.15313 (5) obj. -97.2881 iterations 6
Cbc0038I Pass   9: suminf.    0.69903 (2) obj. -97.2881 iterations 5
Cbc0038I Pass  10: suminf.    2.09718 (6) obj. -97.2881 iterations 5
Cbc0038I Pass  11: suminf.    1.23302 (3) obj. -97.2881 iterations 3
Cbc0038I Pass  12: suminf.    0.29739 (4) obj. -97.2881 iterations 6
Cbc0038I Pass  13: suminf.    1.86806 (5) obj. -97.2881 iterations 5
Cbc0038I Pass  14: suminf.    1.45127 (5) obj. -97.2881 iterations 3
Cbc0038I Pass  15: suminf.    1.45127 (5) obj. -97.2881 iterations 0
Cbc0038I Pass  16: suminf.    0.14185 (2) obj. -97.2881 iterations 8
Cbc0038I Pass  17: suminf.    0.10170 (2) obj. -97.2881 iterations 2
Cbc0038I Pass  18: suminf.    0.11111 (1) obj. -97.2881 iterations 2
Cbc0038I Pass  19: suminf.    1.60343 (4) obj. -97.2881 iterations 5
Cbc0038I Pass  20: suminf.    0.36117 (1) obj. -97.2881 iterations 6
Cbc0038I Pass  21: suminf.    0.14480 (4) obj. -97.2881 iterations 5
Cbc0038I Pass  22: suminf.    0.14480 (4) obj. -97.2881 iterations 0
Cbc0038I Pass  23: suminf.    0.10932 (3) obj. -97.2881 iterations 3
Cbc0038I Pass  24: suminf.    1.51451 (6) obj. -97.2881 iterations 6
Cbc0038I Pass  25: suminf.    1.31176 (4) obj. -97.2881 iterations 1
Cbc0038I Pass  26: suminf.    0.14185 (2) obj. -97.2881 iterations 6
Cbc0038I Pass  27: suminf.    0.10170 (2) obj. -97.2881 iterations 2
Cbc0038I Pass  28: suminf.    0.11111 (1) obj. -97.2881 iterations 2
Cbc0038I Pass  29: suminf.    0.69903 (2) obj. -97.2881 iterations 4
Cbc0038I Pass  30: suminf.    1.04164 (5) obj. -97.2881 iterations 6
Cbc0038I Pass  31: suminf.    0.11111 (1) obj. -97.5 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -94.5 - took 0.01 seconds
Cbc0012I Integer solution of -94.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 31 rows 19 columns, reduced to 12 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -117.88236 to -89.324444 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -94.5, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

