Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 0.00010376 - average 2.88221e-06, 3 fixed columns
Coin0506I Presolve 31 (-5) rows, 19 (-3) columns and 92 (-16) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Coin0511I After Postsolve, objective 71.554014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Clp0000I Optimal - objective value 71.554014
Coin0511I After Postsolve, objective 71.554014, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.55401362 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.45128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.338 iterations 14
Cbc0038I Solution found of -16.338
Cbc0038I Relaxing continuous gives -16.338
Cbc0038I Rounding solution of -31.8249 is better than previous of -16.338

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.8249 to -32.7702 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.4179
Cbc0038I Pass   2: suminf.    0.44760 (3) obj. -36.4179 iterations 3
Cbc0038I Pass   3: suminf.    0.44760 (3) obj. -36.4179 iterations 0
Cbc0038I Pass   4: suminf.    0.42857 (1) obj. -36.4179 iterations 5
Cbc0038I Pass   5: suminf.    0.26834 (1) obj. -36.4179 iterations 1
Cbc0038I Pass   6: suminf.    1.40419 (3) obj. -36.4179 iterations 4
Cbc0038I Pass   7: suminf.    0.83489 (3) obj. -36.4179 iterations 3
Cbc0038I Pass   8: suminf.    0.44012 (3) obj. -36.4179 iterations 6
Cbc0038I Pass   9: suminf.    0.47619 (1) obj. -36.4179 iterations 5
Cbc0038I Pass  10: suminf.    0.26302 (1) obj. -36.4179 iterations 1
Cbc0038I Pass  11: suminf.    0.68541 (2) obj. -36.4179 iterations 7
Cbc0038I Pass  12: suminf.    0.44760 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  13: suminf.    0.42857 (1) obj. -36.4179 iterations 5
Cbc0038I Pass  14: suminf.    0.26834 (1) obj. -36.4179 iterations 1
Cbc0038I Pass  15: suminf.    0.73771 (2) obj. -36.4179 iterations 2
Cbc0038I Pass  16: suminf.    0.32367 (2) obj. -36.4179 iterations 3
Cbc0038I Pass  17: suminf.    0.75385 (5) obj. -36.4179 iterations 7
Cbc0038I Pass  18: suminf.    1.14097 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  19: suminf.    1.05279 (3) obj. -36.4179 iterations 2
Cbc0038I Pass  20: suminf.    0.76947 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  21: suminf.    1.14097 (3) obj. -36.4179 iterations 4
Cbc0038I Pass  22: suminf.    2.25989 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  23: suminf.    0.97989 (4) obj. -36.4179 iterations 3
Cbc0038I Pass  24: suminf.    1.86335 (6) obj. -36.4179 iterations 8
Cbc0038I Pass  25: suminf.    1.96404 (6) obj. -36.4179 iterations 4
Cbc0038I Pass  26: suminf.    1.80468 (5) obj. -36.4179 iterations 4
Cbc0038I Pass  27: suminf.    1.80468 (5) obj. -36.4179 iterations 0
Cbc0038I Pass  28: suminf.    1.89899 (7) obj. -36.4179 iterations 5
Cbc0038I Pass  29: suminf.    1.57377 (7) obj. -36.4179 iterations 3
Cbc0038I Pass  30: suminf.    0.68891 (4) obj. -36.4179 iterations 6
Cbc0038I Pass  31: suminf.    0.51376 (3) obj. -36.4179 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -32.7702 to -33.5185 (0.04 seconds)
Cbc0038I Round again with cutoff of -42.9836
Cbc0038I Pass  31: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  32: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  33: suminf.    0.45707 (1) obj. -42.9836 iterations 4
Cbc0038I Pass  34: suminf.    0.46490 (1) obj. -42.9836 iterations 1
Cbc0038I Pass  35: suminf.    1.50516 (5) obj. -42.9836 iterations 9
Cbc0038I Pass  36: suminf.    0.51369 (3) obj. -42.9836 iterations 6
Cbc0038I Pass  37: suminf.    1.00815 (5) obj. -42.9836 iterations 3
Cbc0038I Pass  38: suminf.    0.58937 (4) obj. -42.9836 iterations 3
Cbc0038I Pass  39: suminf.    1.58129 (4) obj. -42.9836 iterations 6
Cbc0038I Pass  40: suminf.    0.71107 (4) obj. -42.9836 iterations 4
Cbc0038I Pass  41: suminf.    0.45707 (1) obj. -42.9836 iterations 4
Cbc0038I Pass  42: suminf.    0.46490 (1) obj. -42.9836 iterations 1
Cbc0038I Pass  43: suminf.    0.93949 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  44: suminf.    0.46490 (1) obj. -42.9836 iterations 3
Cbc0038I Pass  45: suminf.    1.94802 (7) obj. -42.9836 iterations 10
Cbc0038I Pass  46: suminf.    0.53738 (3) obj. -42.9836 iterations 6
Cbc0038I Pass  47: suminf.    0.59689 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  48: suminf.    0.57438 (3) obj. -42.9836 iterations 1
Cbc0038I Pass  49: suminf.    1.09958 (5) obj. -42.9836 iterations 6
Cbc0038I Pass  50: suminf.    0.72394 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  51: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  52: suminf.    0.82236 (5) obj. -42.9836 iterations 7
Cbc0038I Pass  53: suminf.    0.62105 (5) obj. -42.9836 iterations 5
Cbc0038I Pass  54: suminf.    1.42232 (5) obj. -42.9836 iterations 5
Cbc0038I Pass  55: suminf.    0.73746 (3) obj. -42.9836 iterations 1
Cbc0038I Pass  56: suminf.    0.49942 (2) obj. -42.9836 iterations 1
Cbc0038I Pass  57: suminf.    0.72394 (3) obj. -42.9836 iterations 3
Cbc0038I Pass  58: suminf.    0.72394 (3) obj. -42.9836 iterations 0
Cbc0038I Pass  59: suminf.    0.82236 (5) obj. -42.9836 iterations 7
Cbc0038I Pass  60: suminf.    0.62105 (5) obj. -42.9836 iterations 5
Cbc0038I Rounding solution of -33.5405 is better than previous of -33.5185

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -50.8625
Cbc0038I Pass  60: suminf.    1.05555 (3) obj. -50.8625 iterations 0
Cbc0038I Pass  61: suminf.    1.05555 (3) obj. -50.8625 iterations 0
Cbc0038I Pass  62: suminf.    0.79317 (8) obj. -50.8625 iterations 9
Cbc0038I Pass  63: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  64: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  65: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  66: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  67: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  68: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  69: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  70: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  71: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  72: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  73: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  74: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  75: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  76: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  77: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  78: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  79: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  80: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  81: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  82: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  83: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I Pass  84: suminf.    1.91485 (6) obj. -50.8625 iterations 2
Cbc0038I Pass  85: suminf.    1.05555 (3) obj. -50.8625 iterations 4
Cbc0038I Pass  86: suminf.    0.79317 (8) obj. -50.8625 iterations 7
Cbc0038I Pass  87: suminf.    0.79317 (8) obj. -50.8625 iterations 1
Cbc0038I Pass  88: suminf.    2.58157 (8) obj. -50.8625 iterations 8
Cbc0038I Pass  89: suminf.    1.96845 (7) obj. -50.8625 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -33.5405 - took 0.05 seconds
Cbc0012I Integer solution of -33.54046 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 8 added rows had average density of 17.375
Cbc0013I At root node, 8 cuts changed objective from -69.246605 to -46.730738 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 809 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 742 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -33.54046, took 1654 iterations and 8 nodes (0.21 seconds)
Cbc0032I Strong branching done 70 times (375 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.21

