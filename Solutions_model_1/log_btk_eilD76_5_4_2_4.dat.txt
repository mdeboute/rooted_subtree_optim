Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 1.56145e-05 - average 1.12334e-07, 13 fixed columns
Coin0506I Presolve 113 (-26) rows, 63 (-13) columns and 345 (-77) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.7245147 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 48.009013
Clp0000I Optimal - objective value 48.009013
Coin0511I After Postsolve, objective 48.009013, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.009013
Clp0000I Optimal - objective value 48.009013
Clp0000I Optimal - objective value 48.009013
Coin0511I After Postsolve, objective 48.009013, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.00901349 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 11.7758
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.3312 iterations 76
Cbc0038I Solution found of 15.3312
Cbc0038I Relaxing continuous gives 15.3312
Cbc0038I Rounding solution of 4.41694 is better than previous of 15.3312

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 4.41694 to -24.8112 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.1311
Cbc0038I Pass   2: suminf.    6.57472 (27) obj. -27.1311 iterations 42
Cbc0038I Pass   3: suminf.    6.25379 (50) obj. -27.1311 iterations 21
Cbc0038I Pass   4: suminf.    0.52256 (4) obj. -27.1311 iterations 54
Cbc0038I Pass   5: suminf.    0.17399 (3) obj. -27.1311 iterations 3
Cbc0038I Pass   6: suminf.    1.32490 (5) obj. -27.1311 iterations 8
Cbc0038I Pass   7: suminf.    1.16885 (5) obj. -27.1311 iterations 3
Cbc0038I Pass   8: suminf.    1.79530 (5) obj. -27.1311 iterations 4
Cbc0038I Pass   9: suminf.    1.65324 (4) obj. -27.1311 iterations 2
Cbc0038I Pass  10: suminf.    1.82758 (5) obj. -27.1311 iterations 3
Cbc0038I Pass  11: suminf.    1.17841 (6) obj. -27.1311 iterations 2
Cbc0038I Pass  12: suminf.    1.16885 (5) obj. -27.1311 iterations 1
Cbc0038I Pass  13: suminf.    1.79530 (5) obj. -27.1311 iterations 4
Cbc0038I Pass  14: suminf.    1.65324 (4) obj. -27.1311 iterations 2
Cbc0038I Pass  15: suminf.    1.82758 (5) obj. -27.1311 iterations 3
Cbc0038I Pass  16: suminf.    1.17841 (6) obj. -27.1311 iterations 2
Cbc0038I Pass  17: suminf.    1.16885 (5) obj. -27.1311 iterations 1
Cbc0038I Pass  18: suminf.    1.79530 (5) obj. -27.1311 iterations 4
Cbc0038I Pass  19: suminf.    1.65324 (4) obj. -27.1311 iterations 2
Cbc0038I Pass  20: suminf.    1.82758 (5) obj. -27.1311 iterations 3
Cbc0038I Pass  21: suminf.    1.17841 (6) obj. -27.1311 iterations 2
Cbc0038I Pass  22: suminf.    1.16885 (5) obj. -27.1311 iterations 1
Cbc0038I Pass  23: suminf.    1.79530 (5) obj. -27.1311 iterations 4
Cbc0038I Pass  24: suminf.    1.65324 (4) obj. -27.1311 iterations 2
Cbc0038I Pass  25: suminf.    1.82758 (5) obj. -27.1311 iterations 3
Cbc0038I Pass  26: suminf.    1.17841 (6) obj. -27.1311 iterations 2
Cbc0038I Pass  27: suminf.    1.16885 (5) obj. -27.1311 iterations 1
Cbc0038I Pass  28: suminf.    1.79530 (5) obj. -27.1311 iterations 4
Cbc0038I Pass  29: suminf.    1.65324 (4) obj. -27.1311 iterations 2
Cbc0038I Pass  30: suminf.    1.82758 (5) obj. -27.1311 iterations 3
Cbc0038I Pass  31: suminf.    1.17841 (6) obj. -27.1311 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 105 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -24.8112 to -24.8878 (0.11 seconds)
Cbc0038I Round again with cutoff of -31.3067
Cbc0038I Pass  31: suminf.    7.43286 (27) obj. -31.3067 iterations 0
Cbc0038I Pass  32: suminf.    2.25379 (8) obj. -31.3067 iterations 36
Cbc0038I Pass  33: suminf.    1.73730 (6) obj. -31.3067 iterations 5
Cbc0038I Pass  34: suminf.    2.82808 (7) obj. -31.3067 iterations 8
Cbc0038I Pass  35: suminf.    2.82808 (7) obj. -31.3067 iterations 0
Cbc0038I Pass  36: suminf.    1.81597 (7) obj. -31.3067 iterations 16
Cbc0038I Pass  37: suminf.    1.81264 (6) obj. -31.3067 iterations 2
Cbc0038I Pass  38: suminf.    2.21128 (8) obj. -31.3067 iterations 7
Cbc0038I Pass  39: suminf.    1.24075 (6) obj. -31.3067 iterations 3
Cbc0038I Pass  40: suminf.    1.21320 (5) obj. -31.3067 iterations 1
Cbc0038I Pass  41: suminf.    1.81597 (7) obj. -31.3067 iterations 7
Cbc0038I Pass  42: suminf.    1.81264 (6) obj. -31.3067 iterations 2
Cbc0038I Pass  43: suminf.    2.21128 (8) obj. -31.3067 iterations 7
Cbc0038I Pass  44: suminf.    1.24075 (6) obj. -31.3067 iterations 3
Cbc0038I Pass  45: suminf.    1.21320 (5) obj. -31.3067 iterations 1
Cbc0038I Pass  46: suminf.    1.81597 (7) obj. -31.3067 iterations 7
Cbc0038I Pass  47: suminf.    1.81264 (6) obj. -31.3067 iterations 2
Cbc0038I Pass  48: suminf.    2.21128 (8) obj. -31.3067 iterations 7
Cbc0038I Pass  49: suminf.    1.24075 (6) obj. -31.3067 iterations 3
Cbc0038I Pass  50: suminf.    1.21320 (5) obj. -31.3067 iterations 1
Cbc0038I Pass  51: suminf.    1.81597 (7) obj. -31.3067 iterations 7
Cbc0038I Pass  52: suminf.    1.81264 (6) obj. -31.3067 iterations 2
Cbc0038I Pass  53: suminf.    2.21128 (8) obj. -31.3067 iterations 7
Cbc0038I Pass  54: suminf.    1.24075 (6) obj. -31.3067 iterations 3
Cbc0038I Pass  55: suminf.    1.21320 (5) obj. -31.3067 iterations 1
Cbc0038I Pass  56: suminf.    1.81597 (7) obj. -31.3067 iterations 7
Cbc0038I Pass  57: suminf.    1.81264 (6) obj. -31.3067 iterations 2
Cbc0038I Pass  58: suminf.    2.21128 (8) obj. -31.3067 iterations 7
Cbc0038I Pass  59: suminf.    1.24075 (6) obj. -31.3067 iterations 3
Cbc0038I Pass  60: suminf.    1.21320 (5) obj. -31.3067 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 84 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -24.8878 - took 0.15 seconds
Cbc0012I Integer solution of -24.887819 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 70 rows 40 columns
Cbc0012I Integer solution of -24.902849 found by RINS after 0 iterations and 0 nodes (0.21 seconds)
Cbc0031I 29 added rows had average density of 50.862069
Cbc0013I At root node, 29 cuts changed objective from -48.009013 to -39.411372 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15518 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2378 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.902849 best solution, best possible -39.411372 (1.14 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 3 rows 10 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 5 rows 8 columns
Cbc0012I Integer solution of -24.906449 found by rounding after 10600 iterations and 126 nodes (1.32 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 5 rows 10 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 9 rows 15 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 4 rows 11 columns
Cbc0010I After 508 nodes, 7 on tree, -24.906449 best solution, best possible -37.397714 (1.84 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 4 rows 9 columns
Cbc0001I Search completed - best objective -24.906448903, took 20317 iterations and 1561 nodes (2.03 seconds)
Cbc0032I Strong branching done 2854 times (20809 iterations), fathomed 119 nodes and fixed 154 variables
Cbc0041I Maximum depth 15, 1390 variables fixed on reduced cost (complete fathoming 46 times, 911 nodes taking 3883 iterations)
Total time (CPU seconds):       1.95   (Wallclock seconds):       2.04

