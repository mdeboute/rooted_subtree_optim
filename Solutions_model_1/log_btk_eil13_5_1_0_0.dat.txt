Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 13 (-2) columns and 56 (-19) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 17 (-2) rows, 12 (-1) columns and 50 (-6) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 104.65801
Clp0000I Optimal - objective value 104.65801
Coin0511I After Postsolve, objective 104.65801, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 104.65801
Clp0000I Optimal - objective value 104.65801
Clp0000I Optimal - objective value 104.65801
Coin0511I After Postsolve, objective 104.65801, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.6580138 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.123%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.95908
Cbc0038I Solution found of -24.9251
Cbc0038I Relaxing continuous gives -41.7852
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -41.7852 to -63.3629 (0.01 seconds)
Cbc0038I Round again with cutoff of -66.8021
Cbc0038I Pass   1: suminf.    1.22249 (11) obj. -66.8021 iterations 5
Cbc0038I Pass   2: suminf.    1.54412 (5) obj. -66.8021 iterations 11
Cbc0038I Pass   3: suminf.    0.68781 (3) obj. -66.8021 iterations 3
Cbc0038I Pass   4: suminf.    0.39768 (1) obj. -66.8021 iterations 3
Cbc0038I Pass   5: suminf.    0.42105 (1) obj. -72.8627 iterations 2
Cbc0038I Pass   6: suminf.    1.80616 (4) obj. -66.8021 iterations 3
Cbc0038I Pass   7: suminf.    0.68672 (2) obj. -66.8021 iterations 3
Cbc0038I Pass   8: suminf.    1.09103 (3) obj. -66.8021 iterations 3
Cbc0038I Pass   9: suminf.    1.24103 (4) obj. -66.8021 iterations 4
Cbc0038I Pass  10: suminf.    0.39515 (2) obj. -66.8021 iterations 3
Cbc0038I Pass  11: suminf.    0.36842 (1) obj. -66.8021 iterations 1
Cbc0038I Pass  12: suminf.    0.48540 (1) obj. -66.8021 iterations 1
Cbc0038I Pass  13: suminf.    0.74853 (3) obj. -66.8021 iterations 6
Cbc0038I Pass  14: suminf.    0.50802 (2) obj. -66.8021 iterations 3
Cbc0038I Pass  15: suminf.    0.59182 (2) obj. -66.8021 iterations 3
Cbc0038I Pass  16: suminf.    0.78752 (4) obj. -66.8021 iterations 2
Cbc0038I Pass  17: suminf.    0.59182 (2) obj. -66.8021 iterations 2
Cbc0038I Pass  18: suminf.    0.70852 (2) obj. -66.8021 iterations 3
Cbc0038I Pass  19: suminf.    1.31733 (3) obj. -66.8021 iterations 2
Cbc0038I Pass  20: suminf.    0.27347 (2) obj. -66.8021 iterations 1
Cbc0038I Pass  21: suminf.    0.26316 (1) obj. -66.8021 iterations 1
Cbc0038I Pass  22: suminf.    0.26004 (1) obj. -66.8021 iterations 1
Cbc0038I Pass  23: suminf.    0.93179 (3) obj. -66.8021 iterations 6
Cbc0038I Pass  24: suminf.    0.58298 (4) obj. -66.8021 iterations 2
Cbc0038I Pass  25: suminf.    0.59182 (2) obj. -66.8021 iterations 6
Cbc0038I Pass  26: suminf.    0.59182 (2) obj. -66.8021 iterations 0
Cbc0038I Pass  27: suminf.    0.50802 (2) obj. -66.8021 iterations 2
Cbc0038I Pass  28: suminf.    0.32514 (2) obj. -66.8021 iterations 7
Cbc0038I Pass  29: suminf.    0.32514 (2) obj. -66.8021 iterations 0
Cbc0038I Pass  30: suminf.    0.68672 (2) obj. -66.8021 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -63.3629 - took 0.01 seconds
Cbc0012I Integer solution of -63.3629 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 6 added rows had average density of 9.6666667
Cbc0013I At root node, 6 cuts changed objective from -97.753636 to -67.425981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 276 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 264 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 170 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -63.3629, took 951 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 20 times (101 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

