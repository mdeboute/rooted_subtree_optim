Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 169 (-26) elements
Clp1000I sum of infeasibilities 1.11434e-05 - average 2.02608e-07, 0 fixed columns
Coin0506I Presolve 55 (0) rows, 33 (0) columns and 169 (0) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 3.2734157 - largest nonzero change 0 ( 0%) - largest zero change 1.9188505e-05
Clp0000I Optimal - objective value 85.484514
Clp0000I Optimal - objective value 85.484514
Coin0511I After Postsolve, objective 85.484514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.484514
Clp0000I Optimal - objective value 85.484514
Clp0000I Optimal - objective value 85.484514
Coin0511I After Postsolve, objective 85.484514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.48451358 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 169 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.08043
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.16638 iterations 24
Cbc0038I Solution found of 3.16638
Cbc0038I Relaxing continuous gives 3.16638
Cbc0038I Rounding solution of -5.00661 is better than previous of 3.16638

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 39 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -5.00661 to -35.1952 (0.06 seconds)
Cbc0038I Round again with cutoff of -40.2242
Cbc0038I Pass   2: suminf.    2.13764 (6) obj. -40.2242 iterations 6
Cbc0038I Pass   3: suminf.    0.78455 (3) obj. -40.2242 iterations 6
Cbc0038I Pass   4: suminf.    0.75645 (3) obj. -40.2242 iterations 1
Cbc0038I Pass   5: suminf.    0.57989 (2) obj. -40.2242 iterations 2
Cbc0038I Pass   6: suminf.    0.27321 (3) obj. -40.2242 iterations 2
Cbc0038I Pass   7: suminf.    0.96338 (3) obj. -40.2242 iterations 4
Cbc0038I Pass   8: suminf.    0.71441 (3) obj. -40.2242 iterations 1
Cbc0038I Pass   9: suminf.    0.95691 (3) obj. -40.2242 iterations 1
Cbc0038I Pass  10: suminf.    0.79381 (3) obj. -40.2242 iterations 2
Cbc0038I Pass  11: suminf.    1.52208 (6) obj. -40.2242 iterations 6
Cbc0038I Pass  12: suminf.    1.09781 (3) obj. -40.2242 iterations 3
Cbc0038I Pass  13: suminf.    0.98504 (3) obj. -40.2242 iterations 2
Cbc0038I Pass  14: suminf.    1.07557 (4) obj. -40.2242 iterations 2
Cbc0038I Pass  15: suminf.    1.05959 (4) obj. -40.2242 iterations 1
Cbc0038I Pass  16: suminf.    0.68368 (3) obj. -40.2242 iterations 4
Cbc0038I Pass  17: suminf.    0.65107 (3) obj. -40.2242 iterations 1
Cbc0038I Pass  18: suminf.    1.12704 (3) obj. -40.2242 iterations 1
Cbc0038I Pass  19: suminf.    0.76057 (3) obj. -40.2242 iterations 1
Cbc0038I Pass  20: suminf.    1.26985 (4) obj. -40.2242 iterations 6
Cbc0038I Pass  21: suminf.    1.31776 (4) obj. -40.2242 iterations 2
Cbc0038I Pass  22: suminf.    1.31776 (4) obj. -40.2242 iterations 0
Cbc0038I Pass  23: suminf.    0.68368 (3) obj. -40.2242 iterations 3
Cbc0038I Pass  24: suminf.    0.65107 (3) obj. -40.2242 iterations 1
Cbc0038I Pass  25: suminf.    1.12704 (3) obj. -40.2242 iterations 1
Cbc0038I Pass  26: suminf.    0.76057 (3) obj. -40.2242 iterations 1
Cbc0038I Pass  27: suminf.    1.58445 (7) obj. -40.2242 iterations 11
Cbc0038I Pass  28: suminf.    1.52623 (7) obj. -40.2242 iterations 2
Cbc0038I Pass  29: suminf.    0.96467 (4) obj. -40.2242 iterations 8
Cbc0038I Pass  30: suminf.    0.96467 (4) obj. -40.2242 iterations 1
Cbc0038I Pass  31: suminf.    1.20673 (4) obj. -40.2242 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 42 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -35.1952 - took 0.08 seconds
Cbc0012I Integer solution of -35.19522 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 39 rows 24 columns
Cbc0031I 16 added rows had average density of 20.625
Cbc0013I At root node, 16 cuts changed objective from -85.484514 to -66.154269 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3013 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 998 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0012I Integer solution of -36.34032 found by rounding after 3960 iterations and 9 nodes (0.44 seconds)
Cbc0001I Search completed - best objective -36.34032000000001, took 4567 iterations and 22 nodes (0.47 seconds)
Cbc0032I Strong branching done 326 times (4438 iterations), fathomed 2 nodes and fixed 15 variables
Cbc0035I Maximum depth 7, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.48

