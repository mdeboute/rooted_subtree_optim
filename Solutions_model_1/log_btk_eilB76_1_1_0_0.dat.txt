Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 66 (-12) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 9.32203e-06 - average 8.10612e-08, 20 fixed columns
Coin0506I Presolve 76 (-39) rows, 46 (-20) columns and 237 (-118) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.24241861 - largest nonzero change 0 ( 0%) - largest zero change 2.664141e-05
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Coin0511I After Postsolve, objective 50.833232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Coin0511I After Postsolve, objective 50.833232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.83323157 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 66 columns (65 integer (65 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.584%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 4.16173
Cbc0038I Solution found of -4.00011
Cbc0038I Relaxing continuous gives -4.40577
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -4.40577 to -24.204 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.8622
Cbc0038I Pass   1: suminf.    1.45836 (10) obj. -26.8622 iterations 39
Cbc0038I Pass   2: suminf.    0.82753 (3) obj. -26.8622 iterations 19
Cbc0038I Pass   3: suminf.    0.82753 (3) obj. -26.8622 iterations 0
Cbc0038I Pass   4: suminf.    1.33257 (5) obj. -26.8622 iterations 9
Cbc0038I Pass   5: suminf.    0.88031 (3) obj. -26.8622 iterations 4
Cbc0038I Pass   6: suminf.    0.65875 (3) obj. -26.8622 iterations 4
Cbc0038I Pass   7: suminf.    0.65875 (3) obj. -26.8622 iterations 0
Cbc0038I Pass   8: suminf.    1.20408 (4) obj. -26.8622 iterations 5
Cbc0038I Pass   9: suminf.    2.37402 (6) obj. -26.8622 iterations 14
Cbc0038I Pass  10: suminf.    1.09288 (4) obj. -26.8622 iterations 9
Cbc0038I Pass  11: suminf.    0.99817 (4) obj. -26.8622 iterations 4
Cbc0038I Pass  12: suminf.    1.12616 (4) obj. -26.8622 iterations 12
Cbc0038I Pass  13: suminf.    0.99260 (3) obj. -26.8622 iterations 3
Cbc0038I Pass  14: suminf.    0.78584 (3) obj. -26.8622 iterations 4
Cbc0038I Pass  15: suminf.    0.78584 (3) obj. -26.8622 iterations 0
Cbc0038I Pass  16: suminf.    0.57906 (4) obj. -26.8622 iterations 6
Cbc0038I Pass  17: suminf.    0.55017 (4) obj. -26.8622 iterations 7
Cbc0038I Pass  18: suminf.    0.95104 (4) obj. -26.8622 iterations 13
Cbc0038I Pass  19: suminf.    0.66399 (2) obj. -26.8622 iterations 11
Cbc0038I Pass  20: suminf.    1.12254 (3) obj. -26.8622 iterations 5
Cbc0038I Pass  21: suminf.    0.72959 (3) obj. -26.8622 iterations 4
Cbc0038I Pass  22: suminf.    1.99597 (7) obj. -26.8622 iterations 21
Cbc0038I Pass  23: suminf.    1.70385 (6) obj. -26.8622 iterations 8
Cbc0038I Pass  24: suminf.    1.70972 (5) obj. -26.8622 iterations 5
Cbc0038I Pass  25: suminf.    1.64426 (5) obj. -26.8622 iterations 3
Cbc0038I Pass  26: suminf.    1.15082 (4) obj. -26.8622 iterations 5
Cbc0038I Pass  27: suminf.    1.05409 (4) obj. -26.8622 iterations 2
Cbc0038I Pass  28: suminf.    0.76226 (2) obj. -26.8622 iterations 8
Cbc0038I Pass  29: suminf.    0.76456 (2) obj. -26.8622 iterations 1
Cbc0038I Pass  30: suminf.    0.82991 (3) obj. -26.8622 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -24.204 to -24.4044 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.6467
Cbc0038I Pass  30: suminf.    1.83436 (11) obj. -31.6467 iterations 3
Cbc0038I Pass  31: suminf.    1.07236 (4) obj. -31.6467 iterations 20
Cbc0038I Pass  32: suminf.    1.07236 (4) obj. -31.6467 iterations 0
Cbc0038I Pass  33: suminf.    1.48427 (5) obj. -31.6467 iterations 12
Cbc0038I Pass  34: suminf.    0.81320 (4) obj. -31.6467 iterations 8
Cbc0038I Pass  35: suminf.    0.81256 (5) obj. -31.6467 iterations 2
Cbc0038I Pass  36: suminf.    1.08237 (5) obj. -31.6467 iterations 12
Cbc0038I Pass  37: suminf.    1.06239 (6) obj. -31.6467 iterations 2
Cbc0038I Pass  38: suminf.    1.17559 (4) obj. -31.6467 iterations 9
Cbc0038I Pass  39: suminf.    0.72064 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  40: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  41: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  42: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  43: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  44: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  45: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  46: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  47: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  48: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  49: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  50: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  51: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  52: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  53: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  54: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  55: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  56: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  57: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  58: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  59: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.4044 - took 0.05 seconds
Cbc0012I Integer solution of -24.40442 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 114 rows 66 columns, reduced to 45 rows 27 columns
Cbc0031I 14 added rows had average density of 44.214286
Cbc0013I At root node, 14 cuts changed objective from -50.784697 to -42.928517 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3894 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1065 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0012I Integer solution of -28.61352 found by rounding after 3674 iterations and 9 nodes (0.40 seconds)
Cbc0012I Integer solution of -29.32872 found by rounding after 3684 iterations and 10 nodes (0.40 seconds)
Cbc0001I Search completed - best objective -29.32872, took 3854 iterations and 16 nodes (0.40 seconds)
Cbc0032I Strong branching done 246 times (3257 iterations), fathomed 0 nodes and fixed 33 variables
Cbc0035I Maximum depth 6, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.41

