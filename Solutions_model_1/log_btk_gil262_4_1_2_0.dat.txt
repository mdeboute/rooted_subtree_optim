Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 262 (-2) columns and 1504 (-41) elements
Clp1000I sum of infeasibilities 3.53108e-05 - average 6.97841e-08, 81 fixed columns
Coin0506I Presolve 343 (-163) rows, 180 (-82) columns and 1021 (-483) elements
Clp0029I End of values pass after 180 iterations
Clp0014I Perturbing problem by 0.001% of 2.098485 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Coin0511I After Postsolve, objective 149.32914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Coin0511I After Postsolve, objective 149.32914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.3291448 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 262 columns (261 integer (261 of which binary)) and 1504 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 14.473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20.0829 iterations 143
Cbc0038I Solution found of 20.0829
Cbc0038I Relaxing continuous gives 20.0829
Cbc0038I Rounding solution of -21.3363 is better than previous of 20.0829

Cbc0038I Before mini branch and bound, 206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -21.3363 to -78.1033 (0.18 seconds)
Cbc0038I Round again with cutoff of -85.2259
Cbc0038I Pass   2: suminf.    3.35770 (12) obj. -85.2259 iterations 23
Cbc0038I Pass   3: suminf.    3.04529 (10) obj. -85.2259 iterations 15
Cbc0038I Pass   4: suminf.    2.97794 (10) obj. -85.2259 iterations 4
Cbc0038I Pass   5: suminf.    2.97794 (10) obj. -85.2259 iterations 3
Cbc0038I Pass   6: suminf.    3.09235 (8) obj. -85.2259 iterations 13
Cbc0038I Pass   7: suminf.    2.35269 (6) obj. -85.2259 iterations 18
Cbc0038I Pass   8: suminf.    1.72696 (7) obj. -85.2259 iterations 8
Cbc0038I Pass   9: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  10: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  11: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  12: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  13: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I Pass  14: suminf.    1.05339 (4) obj. -85.2259 iterations 3
Cbc0038I Pass  15: suminf.    2.13160 (7) obj. -85.2259 iterations 25
Cbc0038I Pass  16: suminf.    1.76259 (6) obj. -85.2259 iterations 2
Cbc0038I Pass  17: suminf.    1.72696 (7) obj. -85.2259 iterations 3
Cbc0038I Pass  18: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  19: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  20: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  21: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  22: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I Pass  23: suminf.    1.05339 (4) obj. -85.2259 iterations 3
Cbc0038I Pass  24: suminf.    2.13160 (7) obj. -85.2259 iterations 25
Cbc0038I Pass  25: suminf.    1.76259 (6) obj. -85.2259 iterations 2
Cbc0038I Pass  26: suminf.    1.72696 (7) obj. -85.2259 iterations 3
Cbc0038I Pass  27: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  28: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  29: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  30: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  31: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 114 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -78.1033 to -79.1217 (0.40 seconds)
Cbc0038I Round again with cutoff of -98.0466
Cbc0038I Pass  31: suminf.    4.07769 (14) obj. -98.0466 iterations 4
Cbc0038I Pass  32: suminf.    3.71921 (13) obj. -98.0466 iterations 19
Cbc0038I Pass  33: suminf.    3.65853 (12) obj. -98.0466 iterations 13
Cbc0038I Pass  34: suminf.    3.44564 (10) obj. -98.0466 iterations 20
Cbc0038I Pass  35: suminf.    3.08146 (9) obj. -98.0466 iterations 26
Cbc0038I Pass  36: suminf.    3.08146 (9) obj. -98.0466 iterations 0
Cbc0038I Pass  37: suminf.    2.91153 (10) obj. -98.0466 iterations 8
Cbc0038I Pass  38: suminf.    2.25604 (7) obj. -98.0466 iterations 11
Cbc0038I Pass  39: suminf.    1.86944 (7) obj. -98.0466 iterations 10
Cbc0038I Pass  40: suminf.    2.93825 (8) obj. -98.0466 iterations 14
Cbc0038I Pass  41: suminf.    2.86459 (8) obj. -98.0466 iterations 3
Cbc0038I Pass  42: suminf.    2.74820 (8) obj. -98.0466 iterations 2
Cbc0038I Pass  43: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  44: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  45: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  46: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I Pass  47: suminf.    1.96578 (7) obj. -98.0466 iterations 12
Cbc0038I Pass  48: suminf.    2.78501 (9) obj. -98.0466 iterations 29
Cbc0038I Pass  49: suminf.    2.74820 (8) obj. -98.0466 iterations 13
Cbc0038I Pass  50: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  51: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  52: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  53: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I Pass  54: suminf.    1.96578 (7) obj. -98.0466 iterations 12
Cbc0038I Pass  55: suminf.    2.78501 (9) obj. -98.0466 iterations 29
Cbc0038I Pass  56: suminf.    2.74820 (8) obj. -98.0466 iterations 13
Cbc0038I Pass  57: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  58: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  59: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  60: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 114 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.64 seconds)
Cbc0038I After 0.64 seconds - Feasibility pump exiting with objective of -79.1217 - took 0.56 seconds
Cbc0012I Integer solution of -79.1217 found by feasibility pump after 0 iterations and 0 nodes (0.64 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 101 rows 57 columns
Cbc0012I Integer solution of -81.93182 found by RINS after 0 iterations and 0 nodes (0.77 seconds)
Cbc0031I 38 added rows had average density of 171.71053
Cbc0013I At root node, 38 cuts changed objective from -149.32914 to -132.68695 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25959 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.969 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2846 row cuts average 258.7 elements, 0 column cuts (0 active)  in 0.812 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 252.0 elements, 0 column cuts (0 active)  in 0.333 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -81.93182 best solution, best possible -132.68695 (9.00 seconds)
Cbc0010I After 4 nodes, 5 on tree, -81.93182 best solution, best possible -132.68695 (9.85 seconds)
Cbc0010I After 15 nodes, 9 on tree, -81.93182 best solution, best possible -132.68695 (10.58 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 15 rows 13 columns
Cbc0010I After 65 nodes, 13 on tree, -81.93182 best solution, best possible -132.68695 (11.30 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 61 rows 39 columns
Cbc0012I Integer solution of -82.3955 found by RINS after 19541 iterations and 92 nodes (11.60 seconds)
Cbc0010I After 124 nodes, 15 on tree, -82.3955 best solution, best possible -132.68695 (12.00 seconds)
Cbc0010I After 207 nodes, 11 on tree, -82.3955 best solution, best possible -132.68695 (12.72 seconds)
Cbc0010I After 283 nodes, 12 on tree, -82.3955 best solution, best possible -132.68695 (13.43 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 173 rows 94 columns
Cbc0010I After 323 nodes, 9 on tree, -82.3955 best solution, best possible -132.68695 (14.15 seconds)
Cbc0010I After 381 nodes, 10 on tree, -82.3955 best solution, best possible -132.68695 (14.87 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 59 rows 42 columns
Cbc0038I Full problem 506 rows 262 columns, reduced to 9 rows 12 columns
Cbc0010I After 501 nodes, 12 on tree, -82.3955 best solution, best possible -132.68695 (15.57 seconds)
Cbc0001I Search completed - best objective -82.39549999999997, took 36972 iterations and 528 nodes (15.97 seconds)
Cbc0032I Strong branching done 4038 times (91747 iterations), fathomed 27 nodes and fixed 194 variables
Cbc0035I Maximum depth 48, 2487 variables fixed on reduced cost
Total time (CPU seconds):       15.42   (Wallclock seconds):       16.06

