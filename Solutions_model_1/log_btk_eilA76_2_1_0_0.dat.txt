Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000117599 - average 8.71104e-07, 28 fixed columns
Coin0506I Presolve 79 (-56) rows, 46 (-29) columns and 242 (-170) elements
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Coin0511I After Postsolve, objective 95.380372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Clp0000I Optimal - objective value 95.380372
Coin0511I After Postsolve, objective 95.380372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.38037223 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 75 columns (74 integer (74 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.59758
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.5086 iterations 43
Cbc0038I Solution found of -21.5086
Cbc0038I Relaxing continuous gives -21.5086
Cbc0038I Rounding solution of -30.6178 is better than previous of -21.5086

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 51 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -30.6178 to -68.5073 (0.02 seconds)
Cbc0038I Round again with cutoff of -71.1947
Cbc0038I Pass   2: suminf.    2.67612 (8) obj. -71.1947 iterations 16
Cbc0038I Pass   3: suminf.    1.86543 (5) obj. -71.1947 iterations 6
Cbc0038I Pass   4: suminf.    1.11081 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   5: suminf.    0.53482 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   6: suminf.    0.53260 (3) obj. -71.1947 iterations 3
Cbc0038I Pass   7: suminf.    1.35173 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   8: suminf.    0.66082 (3) obj. -71.1947 iterations 11
Cbc0038I Pass   9: suminf.    2.47896 (9) obj. -71.1947 iterations 18
Cbc0038I Pass  10: suminf.    2.38700 (9) obj. -71.1947 iterations 8
Cbc0038I Pass  11: suminf.    1.77637 (5) obj. -71.1947 iterations 26
Cbc0038I Pass  12: suminf.    1.70133 (5) obj. -71.1947 iterations 10
Cbc0038I Pass  13: suminf.    1.97649 (6) obj. -71.1947 iterations 9
Cbc0038I Pass  14: suminf.    1.97649 (6) obj. -71.1947 iterations 0
Cbc0038I Pass  15: suminf.    0.53260 (3) obj. -71.1947 iterations 10
Cbc0038I Pass  16: suminf.    0.53260 (3) obj. -71.1947 iterations 5
Cbc0038I Pass  17: suminf.    1.35173 (3) obj. -71.1947 iterations 9
Cbc0038I Pass  18: suminf.    0.66082 (3) obj. -71.1947 iterations 10
Cbc0038I Pass  19: suminf.    2.07274 (10) obj. -71.1947 iterations 12
Cbc0038I Pass  20: suminf.    1.17525 (4) obj. -71.1947 iterations 13
Cbc0038I Pass  21: suminf.    1.17525 (4) obj. -71.1947 iterations 1
Cbc0038I Pass  22: suminf.    1.26818 (4) obj. -71.1947 iterations 8
Cbc0038I Pass  23: suminf.    3.43345 (14) obj. -71.1947 iterations 22
Cbc0038I Pass  24: suminf.    1.04584 (5) obj. -71.1947 iterations 20
Cbc0038I Pass  25: suminf.    1.96107 (5) obj. -71.1947 iterations 10
Cbc0038I Pass  26: suminf.    1.70124 (5) obj. -71.1947 iterations 2
Cbc0038I Pass  27: suminf.    1.61538 (5) obj. -71.1947 iterations 1
Cbc0038I Pass  28: suminf.    3.42051 (13) obj. -71.1947 iterations 19
Cbc0038I Pass  29: suminf.    2.22875 (9) obj. -71.1947 iterations 11
Cbc0038I Pass  30: suminf.    1.37548 (5) obj. -71.1947 iterations 16
Cbc0038I Pass  31: suminf.    1.36593 (6) obj. -71.1947 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -68.5073 to -72.0353 (0.06 seconds)
Cbc0038I Round again with cutoff of -76.7044
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.05147 (10) obj. -76.7044 iterations 2
Cbc0038I Pass  32: suminf.    2.40042 (8) obj. -76.7044 iterations 12
Cbc0038I Pass  33: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  34: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  35: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  36: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  37: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  38: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  39: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  40: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  41: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  42: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  43: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  44: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  45: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  46: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  47: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  48: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  49: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  50: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  51: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  52: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  53: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  54: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I Pass  55: suminf.    1.17727 (5) obj. -76.7044 iterations 7
Cbc0038I Pass  56: suminf.    1.70148 (7) obj. -76.7044 iterations 3
Cbc0038I Pass  57: suminf.    1.70148 (7) obj. -76.7044 iterations 0
Cbc0038I Pass  58: suminf.    1.89204 (5) obj. -76.7044 iterations 20
Cbc0038I Pass  59: suminf.    1.82878 (6) obj. -76.7044 iterations 5
Cbc0038I Pass  60: suminf.    1.17727 (5) obj. -76.7044 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -72.0353 - took 0.07 seconds
Cbc0012I Integer solution of -72.03533 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 53 rows 32 columns
Cbc0031I 18 added rows had average density of 46.277778
Cbc0013I At root node, 18 cuts changed objective from -95.380372 to -84.943628 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3686 row cuts average 3.3 elements, 7 column cuts (7 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1010 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 45.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -72.03533, took 4410 iterations and 20 nodes (0.64 seconds)
Cbc0032I Strong branching done 242 times (2038 iterations), fathomed 2 nodes and fixed 40 variables
Cbc0035I Maximum depth 4, 67 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.65

