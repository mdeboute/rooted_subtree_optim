Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 2.16637e-05 - average 1.66644e-07, 13 fixed columns
Coin0506I Presolve 106 (-24) rows, 63 (-13) columns and 330 (-74) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 3.0569803 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Coin0511I After Postsolve, objective 34.142892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Coin0511I After Postsolve, objective 34.142892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.14289243 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.19918
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.8822 iterations 42
Cbc0038I Solution found of 11.8822
Cbc0038I Relaxing continuous gives 11.8822
Cbc0038I Rounding solution of 1.28016 is better than previous of 11.8822

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 65 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.28016 to -5.04045 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.95078
Cbc0038I Pass   2: suminf.    1.02823 (28) obj. -7.95078 iterations 27
Cbc0038I Pass   3: suminf.    1.00833 (29) obj. -7.95078 iterations 6
Cbc0038I Pass   4: suminf.    1.48196 (9) obj. -7.95078 iterations 29
Cbc0038I Pass   5: suminf.    0.68906 (5) obj. -7.95078 iterations 9
Cbc0038I Pass   6: suminf.    2.08053 (7) obj. -7.95078 iterations 10
Cbc0038I Pass   7: suminf.    1.43689 (4) obj. -7.95078 iterations 6
Cbc0038I Pass   8: suminf.    1.18835 (3) obj. -7.95078 iterations 1
Cbc0038I Pass   9: suminf.    1.18730 (5) obj. -7.95078 iterations 3
Cbc0038I Pass  10: suminf.    1.18730 (5) obj. -7.95078 iterations 0
Cbc0038I Pass  11: suminf.    2.01458 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  12: suminf.    1.66590 (7) obj. -7.95078 iterations 1
Cbc0038I Pass  13: suminf.    1.70315 (5) obj. -7.95078 iterations 6
Cbc0038I Pass  14: suminf.    1.64621 (5) obj. -7.95078 iterations 1
Cbc0038I Pass  15: suminf.    2.05903 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  16: suminf.    1.13932 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  17: suminf.    1.00516 (8) obj. -7.95078 iterations 5
Cbc0038I Pass  18: suminf.    4.54879 (15) obj. -7.95078 iterations 25
Cbc0038I Pass  19: suminf.    2.48206 (9) obj. -7.95078 iterations 10
Cbc0038I Pass  20: suminf.    2.48206 (9) obj. -7.95078 iterations 0
Cbc0038I Pass  21: suminf.    1.51891 (6) obj. -7.95078 iterations 20
Cbc0038I Pass  22: suminf.    1.48479 (5) obj. -7.95078 iterations 1
Cbc0038I Pass  23: suminf.    1.41182 (5) obj. -7.95078 iterations 4
Cbc0038I Pass  24: suminf.    1.39468 (4) obj. -7.95078 iterations 1
Cbc0038I Pass  25: suminf.    1.48479 (5) obj. -7.95078 iterations 3
Cbc0038I Pass  26: suminf.    3.07431 (10) obj. -7.95078 iterations 18
Cbc0038I Pass  27: suminf.    2.12261 (7) obj. -7.95078 iterations 8
Cbc0038I Pass  28: suminf.    1.80503 (5) obj. -7.95078 iterations 8
Cbc0038I Pass  29: suminf.    1.79178 (6) obj. -7.95078 iterations 1
Cbc0038I Pass  30: suminf.    2.57873 (7) obj. -7.95078 iterations 7
Cbc0038I Pass  31: suminf.    1.93721 (8) obj. -7.95078 iterations 2
Cbc0038I Rounding solution of -5.06209 is better than previous of -5.04045

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -13.1892
Cbc0038I Pass  31: suminf.    2.38871 (28) obj. -13.1892 iterations 0
Cbc0038I Pass  32: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  33: suminf.    2.69266 (11) obj. -13.1892 iterations 40
Cbc0038I Pass  34: suminf.    1.73744 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  35: suminf.    2.49593 (8) obj. -13.1892 iterations 14
Cbc0038I Pass  36: suminf.    2.18597 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  37: suminf.    3.32039 (10) obj. -13.1892 iterations 13
Cbc0038I Pass  38: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  39: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  40: suminf.    2.38871 (28) obj. -13.1892 iterations 23
Cbc0038I Pass  41: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  42: suminf.    3.20115 (9) obj. -13.1892 iterations 24
Cbc0038I Pass  43: suminf.    2.53367 (8) obj. -13.1892 iterations 1
Cbc0038I Pass  44: suminf.    1.89399 (13) obj. -13.1892 iterations 21
Cbc0038I Pass  45: suminf.    1.89428 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  46: suminf.    1.41482 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  47: suminf.    2.32387 (7) obj. -13.1892 iterations 11
Cbc0038I Pass  48: suminf.    2.06007 (7) obj. -13.1892 iterations 3
Cbc0038I Pass  49: suminf.    3.32039 (10) obj. -13.1892 iterations 8
Cbc0038I Pass  50: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  51: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  52: suminf.    2.38871 (28) obj. -13.1892 iterations 22
Cbc0038I Pass  53: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  54: suminf.    2.69266 (11) obj. -13.1892 iterations 41
Cbc0038I Pass  55: suminf.    1.73744 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  56: suminf.    2.49593 (8) obj. -13.1892 iterations 14
Cbc0038I Pass  57: suminf.    2.18597 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  58: suminf.    3.32039 (10) obj. -13.1892 iterations 13
Cbc0038I Pass  59: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  60: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -5.06209 - took 0.10 seconds
Cbc0012I Integer solution of -5.06209 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -5.25049 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 27 added rows had average density of 60.037037
Cbc0013I At root node, 27 cuts changed objective from -34.142892 to -26.086883 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15020 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1829 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.25049 best solution, best possible -26.086883 (1.05 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 51 rows 33 columns
Cbc0012I Integer solution of -6.92074 found by rounding after 10811 iterations and 65 nodes (1.36 seconds)
Cbc0001I Search completed - best objective -6.920739999999999, took 11367 iterations and 76 nodes (1.38 seconds)
Cbc0032I Strong branching done 872 times (17973 iterations), fathomed 4 nodes and fixed 20 variables
Cbc0035I Maximum depth 33, 271 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.39

