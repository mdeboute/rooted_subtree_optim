Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 239 (-112) rows, 120 (-56) columns and 712 (-331) elements
Clp0000I Optimal - objective value 21671359
Coin0511I After Postsolve, objective 21671359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21671359.11 - 91 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 239 rows, 120 columns (119 integer (119 of which binary)) and 712 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.820%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 11.2321
Cbc0038I Solution found of -1.67836e+07
Cbc0038I Relaxing continuous gives -1.67836e+07
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 239 rows 120 columns, reduced to 53 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -1.67836e+07 to -1.9643e+07 (0.02 seconds)
Cbc0038I Round again with cutoff of -1.98459e+07
Cbc0038I Pass   1: suminf.    1.28843 (5) obj. -1.98459e+07 iterations 32
Cbc0038I Pass   2: suminf.    1.28843 (5) obj. -1.98459e+07 iterations 0
Cbc0038I Pass   3: suminf.    0.12500 (1) obj. -2.00182e+07 iterations 16
Cbc0038I Pass   4: suminf.    0.12500 (1) obj. -2.00182e+07 iterations 0
Cbc0038I Pass   5: suminf.    0.18706 (1) obj. -1.98459e+07 iterations 1
Cbc0038I Pass   6: suminf.    1.71164 (4) obj. -1.98459e+07 iterations 21
Cbc0038I Pass   7: suminf.    1.23125 (5) obj. -1.98459e+07 iterations 20
Cbc0038I Pass   8: suminf.    1.01899 (3) obj. -1.98459e+07 iterations 19
Cbc0038I Pass   9: suminf.    0.17014 (1) obj. -1.98459e+07 iterations 9
Cbc0038I Pass  10: suminf.    0.50000 (1) obj. -2.03113e+07 iterations 2
Cbc0038I Pass  11: suminf.    6.86482 (28) obj. -1.98459e+07 iterations 26
Cbc0038I Pass  12: suminf.    1.34282 (4) obj. -1.98459e+07 iterations 31
Cbc0038I Pass  13: suminf.    0.60346 (3) obj. -1.98459e+07 iterations 5
Cbc0038I Pass  14: suminf.    0.37893 (4) obj. -1.98459e+07 iterations 11
Cbc0038I Pass  15: suminf.    1.01899 (3) obj. -1.98459e+07 iterations 15
Cbc0038I Pass  16: suminf.    0.17014 (1) obj. -1.98459e+07 iterations 9
Cbc0038I Pass  17: suminf.    0.50000 (1) obj. -2.03113e+07 iterations 2
Cbc0038I Pass  18: suminf.    0.92997 (4) obj. -1.98459e+07 iterations 17
Cbc0038I Pass  19: suminf.    0.92997 (4) obj. -1.98459e+07 iterations 13
Cbc0038I Pass  20: suminf.    0.17014 (1) obj. -1.98459e+07 iterations 23
Cbc0038I Pass  21: suminf.    0.17014 (1) obj. -1.98459e+07 iterations 0
Cbc0038I Pass  22: suminf.    0.30000 (1) obj. -2.00291e+07 iterations 2
Cbc0038I Pass  23: suminf.    0.56545 (5) obj. -1.98459e+07 iterations 16
Cbc0038I Pass  24: suminf.    0.56539 (2) obj. -1.98459e+07 iterations 12
Cbc0038I Pass  25: suminf.    0.17014 (1) obj. -1.98459e+07 iterations 20
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -2.03113e+07 iterations 2
Cbc0038I Pass  27: suminf.    0.94119 (3) obj. -1.98459e+07 iterations 17
Cbc0038I Pass  28: suminf.    0.37893 (4) obj. -1.98459e+07 iterations 9
Cbc0038I Pass  29: suminf.    1.01899 (3) obj. -1.98459e+07 iterations 13
Cbc0038I Pass  30: suminf.    0.62986 (2) obj. -1.98459e+07 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 239 rows 120 columns, reduced to 57 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -1.9643e+07 to -2.03284e+07 (0.04 seconds)
Cbc0038I Round again with cutoff of -2.0597e+07
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.58401 (7) obj. -2.0597e+07 iterations 5
Cbc0038I Pass  31: suminf.    0.37157 (2) obj. -2.0597e+07 iterations 12
Cbc0038I Pass  32: suminf.    0.69498 (3) obj. -2.0597e+07 iterations 13
Cbc0038I Pass  33: suminf.    1.02459 (20) obj. -2.0597e+07 iterations 27
Cbc0038I Pass  34: suminf.    0.99335 (31) obj. -2.0597e+07 iterations 9
Cbc0038I Pass  35: suminf.    9.88540 (28) obj. -2.0597e+07 iterations 45
Cbc0038I Pass  36: suminf.    9.88540 (28) obj. -2.0597e+07 iterations 4
Cbc0038I Pass  37: suminf.    0.99419 (23) obj. -2.0597e+07 iterations 10
Cbc0038I Pass  38: suminf.    0.37157 (2) obj. -2.0597e+07 iterations 17
Cbc0038I Pass  39: suminf.    0.69498 (3) obj. -2.0597e+07 iterations 9
Cbc0038I Pass  40: suminf.    0.50470 (3) obj. -2.0597e+07 iterations 20
Cbc0038I Pass  41: suminf.    0.99335 (31) obj. -2.0597e+07 iterations 25
Cbc0038I Pass  42: suminf.    0.99335 (31) obj. -2.0597e+07 iterations 6
Cbc0038I Pass  43: suminf.   10.71844 (24) obj. -2.0597e+07 iterations 30
Cbc0038I Pass  44: suminf.    0.60040 (4) obj. -2.0597e+07 iterations 26
Cbc0038I Pass  45: suminf.    0.37157 (2) obj. -2.0597e+07 iterations 6
Cbc0038I Pass  46: suminf.    0.69498 (3) obj. -2.0597e+07 iterations 13
Cbc0038I Pass  47: suminf.    1.13407 (26) obj. -2.0597e+07 iterations 29
Cbc0038I Pass  48: suminf.    0.92064 (6) obj. -2.0597e+07 iterations 37
Cbc0038I Pass  49: suminf.    0.92064 (6) obj. -2.0597e+07 iterations 5
Cbc0038I Pass  50: suminf.    2.61411 (7) obj. -2.0597e+07 iterations 14
Cbc0038I Pass  51: suminf.    0.30707 (4) obj. -2.0597e+07 iterations 18
Cbc0038I Pass  52: suminf.    0.30707 (4) obj. -2.0597e+07 iterations 0
Cbc0038I Pass  53: suminf.    0.50701 (4) obj. -2.0597e+07 iterations 13
Cbc0038I Pass  54: suminf.    0.59704 (6) obj. -2.0597e+07 iterations 13
Cbc0038I Pass  55: suminf.    0.61893 (5) obj. -2.0597e+07 iterations 15
Cbc0038I Pass  56: suminf.    0.92796 (6) obj. -2.0597e+07 iterations 19
Cbc0038I Pass  57: suminf.    0.92796 (6) obj. -2.0597e+07 iterations 3
Cbc0038I Pass  58: suminf.    0.92796 (6) obj. -2.0597e+07 iterations 10
Cbc0038I Pass  59: suminf.    0.49498 (9) obj. -2.0597e+07 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 239 rows 120 columns, reduced to 88 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2.03284e+07 - took 0.04 seconds
Cbc0012I Integer solution of -20328429 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 239 rows 120 columns, reduced to 54 rows 40 columns
Cbc0031I 5 added rows had average density of 51
Cbc0013I At root node, 5 cuts changed objective from -21671359 to -20460800 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 3.0 elements, 16 column cuts (16 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 29 row cuts average 60.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20328429, took 101 iterations and 2 nodes (0.10 seconds)
Cbc0032I Strong branching done 20 times (129 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

