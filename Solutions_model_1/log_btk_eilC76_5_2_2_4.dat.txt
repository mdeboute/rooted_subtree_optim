Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 0.000144654 - average 1.04068e-06, 8 fixed columns
Coin0506I Presolve 123 (-16) rows, 68 (-8) columns and 374 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 0.28419459 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Coin0511I After Postsolve, objective 41.282106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Clp0000I Optimal - objective value 41.282106
Coin0511I After Postsolve, objective 41.282106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.28210606 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 9.42899
Cbc0038I Solution found of 7.00749
Cbc0038I Relaxing continuous gives -2.89982
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -2.89982 to -7.06963 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.491
Cbc0038I Pass   1: suminf.    1.71795 (34) obj. -10.491 iterations 34
Cbc0038I Pass   2: suminf.    2.58218 (8) obj. -10.491 iterations 39
Cbc0038I Pass   3: suminf.    1.95673 (6) obj. -10.491 iterations 6
Cbc0038I Pass   4: suminf.    0.97050 (3) obj. -10.491 iterations 10
Cbc0038I Pass   5: suminf.    0.82736 (3) obj. -10.491 iterations 2
Cbc0038I Pass   6: suminf.    0.71340 (3) obj. -10.491 iterations 5
Cbc0038I Pass   7: suminf.    0.71340 (3) obj. -10.491 iterations 0
Cbc0038I Pass   8: suminf.    0.90664 (4) obj. -10.491 iterations 2
Cbc0038I Pass   9: suminf.    0.51787 (3) obj. -10.491 iterations 5
Cbc0038I Pass  10: suminf.    0.81437 (4) obj. -10.491 iterations 6
Cbc0038I Pass  11: suminf.    2.17114 (9) obj. -10.491 iterations 26
Cbc0038I Pass  12: suminf.    1.16295 (5) obj. -10.491 iterations 15
Cbc0038I Pass  13: suminf.    1.47934 (4) obj. -10.491 iterations 8
Cbc0038I Pass  14: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  15: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  16: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  17: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  18: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  19: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  20: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  21: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  22: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  23: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  24: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  25: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Pass  26: suminf.    0.98865 (4) obj. -10.491 iterations 5
Cbc0038I Pass  27: suminf.    0.95054 (4) obj. -10.491 iterations 1
Cbc0038I Pass  28: suminf.    1.47934 (4) obj. -10.491 iterations 5
Cbc0038I Pass  29: suminf.    1.05649 (5) obj. -10.491 iterations 2
Cbc0038I Pass  30: suminf.    0.87685 (5) obj. -10.491 iterations 1
Cbc0038I Rounding solution of -7.98744 is better than previous of -7.06963

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -16.6492
Cbc0038I Pass  30: suminf.    3.11161 (34) obj. -16.6492 iterations 0
Cbc0038I Pass  31: suminf.    4.01482 (11) obj. -16.6492 iterations 38
Cbc0038I Pass  32: suminf.    2.89098 (7) obj. -16.6492 iterations 9
Cbc0038I Pass  33: suminf.    2.73453 (9) obj. -16.6492 iterations 3
Cbc0038I Pass  34: suminf.    2.37034 (7) obj. -16.6492 iterations 6
Cbc0038I Pass  35: suminf.    2.43344 (6) obj. -16.6492 iterations 7
Cbc0038I Pass  36: suminf.    2.23197 (9) obj. -16.6492 iterations 5
Cbc0038I Pass  37: suminf.    2.32238 (7) obj. -16.6492 iterations 13
Cbc0038I Pass  38: suminf.    2.06672 (6) obj. -16.6492 iterations 1
Cbc0038I Pass  39: suminf.    2.05540 (9) obj. -16.6492 iterations 11
Cbc0038I Pass  40: suminf.    1.45777 (5) obj. -16.6492 iterations 12
Cbc0038I Pass  41: suminf.    1.45777 (5) obj. -16.6492 iterations 0
Cbc0038I Pass  42: suminf.    1.43340 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  43: suminf.    1.36029 (6) obj. -16.6492 iterations 1
Cbc0038I Pass  44: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  45: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  46: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  47: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  48: suminf.    1.36029 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  49: suminf.    1.36029 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  50: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  51: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  52: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  53: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  54: suminf.    1.36029 (6) obj. -16.6492 iterations 8
Cbc0038I Pass  55: suminf.    1.36029 (6) obj. -16.6492 iterations 0
Cbc0038I Pass  56: suminf.    0.96558 (5) obj. -16.6492 iterations 5
Cbc0038I Pass  57: suminf.    0.95636 (6) obj. -16.6492 iterations 3
Cbc0038I Pass  58: suminf.    1.82149 (6) obj. -16.6492 iterations 6
Cbc0038I Pass  59: suminf.    1.82149 (6) obj. -16.6492 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -7.98744 to -11.9145 (0.19 seconds)
Cbc0038I Round again with cutoff of -24.0391
Cbc0038I Pass  59: suminf.    4.78400 (34) obj. -24.0391 iterations 0
Cbc0038I Pass  60: suminf.    3.48761 (12) obj. -24.0391 iterations 39
Cbc0038I Pass  61: suminf.    2.15302 (7) obj. -24.0391 iterations 12
Cbc0038I Pass  62: suminf.    2.68943 (7) obj. -24.0391 iterations 6
Cbc0038I Pass  63: suminf.    2.54808 (7) obj. -24.0391 iterations 5
Cbc0038I Pass  64: suminf.    2.40877 (10) obj. -24.0391 iterations 5
Cbc0038I Pass  65: suminf.    3.16497 (10) obj. -24.0391 iterations 9
Cbc0038I Pass  66: suminf.    2.88348 (9) obj. -24.0391 iterations 1
Cbc0038I Pass  67: suminf.    3.03121 (12) obj. -24.0391 iterations 10
Cbc0038I Pass  68: suminf.    3.03121 (12) obj. -24.0391 iterations 0
Cbc0038I Pass  69: suminf.    3.29540 (10) obj. -24.0391 iterations 16
Cbc0038I Pass  70: suminf.    5.86324 (16) obj. -24.0391 iterations 24
Cbc0038I Pass  71: suminf.    4.92552 (15) obj. -24.0391 iterations 12
Cbc0038I Pass  72: suminf.    1.64620 (7) obj. -24.0391 iterations 15
Cbc0038I Pass  73: suminf.    1.46150 (7) obj. -24.0391 iterations 3
Cbc0038I Pass  74: suminf.    2.94449 (7) obj. -24.0391 iterations 7
Cbc0038I Pass  75: suminf.    2.99361 (8) obj. -24.0391 iterations 4
Cbc0038I Pass  76: suminf.    2.88195 (7) obj. -24.0391 iterations 1
Cbc0038I Pass  77: suminf.    2.94449 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  78: suminf.    5.53357 (19) obj. -24.0391 iterations 23
Cbc0038I Pass  79: suminf.    3.15035 (12) obj. -24.0391 iterations 11
Cbc0038I Pass  80: suminf.    3.94806 (14) obj. -24.0391 iterations 20
Cbc0038I Pass  81: suminf.    3.75130 (10) obj. -24.0391 iterations 11
Cbc0038I Pass  82: suminf.    1.64620 (7) obj. -24.0391 iterations 7
Cbc0038I Pass  83: suminf.    1.46150 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  84: suminf.    2.94449 (7) obj. -24.0391 iterations 8
Cbc0038I Pass  85: suminf.    2.99361 (8) obj. -24.0391 iterations 4
Cbc0038I Pass  86: suminf.    2.88195 (7) obj. -24.0391 iterations 1
Cbc0038I Pass  87: suminf.    2.94449 (7) obj. -24.0391 iterations 4
Cbc0038I Pass  88: suminf.    4.67129 (13) obj. -24.0391 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -11.9145 - took 0.24 seconds
Cbc0012I Integer solution of -11.914523 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 83 rows 47 columns
Cbc0031I 23 added rows had average density of 60.434783
Cbc0013I At root node, 23 cuts changed objective from -41.282106 to -34.168112 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11186 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2072 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.914523 best solution, best possible -34.168112 (1.06 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 64 rows 39 columns
Cbc0038I Full problem 139 rows 76 columns, reduced to 68 rows 42 columns
Cbc0001I Search completed - best objective -11.914523, took 10792 iterations and 132 nodes (1.64 seconds)
Cbc0032I Strong branching done 1458 times (23724 iterations), fathomed 12 nodes and fixed 28 variables
Cbc0035I Maximum depth 34, 299 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       1.65

