Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 4.02797e-05 - average 2.96174e-07, 20 fixed columns
Coin0506I Presolve 91 (-45) rows, 53 (-23) columns and 280 (-136) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Coin0511I After Postsolve, objective 65.255454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Coin0511I After Postsolve, objective 65.255454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.2554539 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 425 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.97607
Cbc0038I Solution found of -2.45054
Cbc0038I Relaxing continuous gives -4.95881
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 52 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -4.95881 to -36.7661 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.6151
Cbc0038I Pass   1: suminf.    3.04888 (18) obj. -39.6151 iterations 56
Cbc0038I Pass   2: suminf.    2.68578 (7) obj. -39.6151 iterations 20
Cbc0038I Pass   3: suminf.    1.34805 (6) obj. -39.6151 iterations 5
Cbc0038I Pass   4: suminf.    1.06468 (4) obj. -39.6151 iterations 3
Cbc0038I Pass   5: suminf.    1.22946 (4) obj. -39.6151 iterations 5
Cbc0038I Pass   6: suminf.    1.84352 (5) obj. -39.6151 iterations 5
Cbc0038I Pass   7: suminf.    1.80541 (5) obj. -39.6151 iterations 3
Cbc0038I Pass   8: suminf.    2.02676 (5) obj. -39.6151 iterations 5
Cbc0038I Pass   9: suminf.    1.91445 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  10: suminf.    1.91445 (5) obj. -39.6151 iterations 0
Cbc0038I Pass  11: suminf.    1.46985 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  12: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  13: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  14: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  15: suminf.    1.61467 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  16: suminf.    0.93960 (4) obj. -39.6151 iterations 4
Cbc0038I Pass  17: suminf.    2.50464 (7) obj. -39.6151 iterations 6
Cbc0038I Pass  18: suminf.    1.77569 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  19: suminf.    1.55310 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  20: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  21: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  22: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  23: suminf.    1.61467 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  24: suminf.    0.93960 (4) obj. -39.6151 iterations 4
Cbc0038I Pass  25: suminf.    2.50464 (7) obj. -39.6151 iterations 6
Cbc0038I Pass  26: suminf.    1.77569 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  27: suminf.    1.55310 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  28: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  29: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  30: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -36.7661 to -38.3249 (0.10 seconds)
Cbc0038I Round again with cutoff of -44.7432
Cbc0038I Pass  30: suminf.    3.59447 (18) obj. -44.7432 iterations 0
Cbc0038I Pass  31: suminf.    2.30680 (6) obj. -44.7432 iterations 16
Cbc0038I Pass  32: suminf.    1.81759 (6) obj. -44.7432 iterations 3
Cbc0038I Pass  33: suminf.    2.30022 (8) obj. -44.7432 iterations 7
Cbc0038I Pass  34: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  35: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  36: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  37: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  38: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  39: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  40: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  41: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  42: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  43: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  44: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  45: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  46: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  47: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  48: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  49: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  50: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  51: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  52: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  53: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  54: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  55: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  56: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  57: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  58: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  59: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -38.3249 - took 0.13 seconds
Cbc0012I Integer solution of -38.32488 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 53 rows 35 columns
Cbc0031I 17 added rows had average density of 59.588235
Cbc0013I At root node, 17 cuts changed objective from -65.255454 to -58.026594 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11770 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1564 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 130 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.32488 best solution, best possible -58.026594 (0.83 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 6 rows 10 columns
Cbc0038I Full problem 135 rows 76 columns, reduced to 60 rows 37 columns
Cbc0001I Search completed - best objective -38.32488000000001, took 9900 iterations and 122 nodes (1.10 seconds)
Cbc0032I Strong branching done 786 times (12988 iterations), fathomed 11 nodes and fixed 38 variables
Cbc0035I Maximum depth 20, 316 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.11

