Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 0.000948488 - average 2.43202e-05, 16 fixed columns
Coin0506I Presolve 5 (-34) rows, 6 (-16) columns and 16 (-98) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 7978.3421
Clp0000I Optimal - objective value 7978.3421
Coin0511I After Postsolve, objective 7978.3421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1009158 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 7978.3421
Clp0000I Optimal - objective value 7978.3421
Clp0000I Optimal - objective value 7978.3421
Coin0511I After Postsolve, objective 7978.3421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7978.342084 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.660287
Cbc0038I Pass   1: suminf.    0.17727 (1) obj. -6531.28 iterations 10
Cbc0038I Solution found of -5997.15
Cbc0038I Relaxing continuous gives -5997.15
Cbc0038I Rounding solution of -6080.89 is better than previous of -5997.15

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6130.3
Cbc0038I Pass   2: suminf.    0.17727 (1) obj. -6531.28 iterations 0
Cbc0038I Pass   3: suminf.    0.06197 (2) obj. -6130.3 iterations 3
Cbc0038I Pass   4: suminf.    0.23227 (2) obj. -6130.3 iterations 1
Cbc0038I Pass   5: suminf.    0.60283 (2) obj. -6130.3 iterations 5
Cbc0038I Pass   6: suminf.    0.30615 (2) obj. -6130.3 iterations 5
Cbc0038I Pass   7: suminf.    0.60283 (2) obj. -6130.3 iterations 1
Cbc0038I Pass   8: suminf.    0.91109 (4) obj. -6130.3 iterations 5
Cbc0038I Pass   9: suminf.    0.91109 (4) obj. -6130.3 iterations 0
Cbc0038I Pass  10: suminf.    0.25766 (2) obj. -6130.3 iterations 5
Cbc0038I Pass  11: suminf.    0.21670 (2) obj. -6130.3 iterations 2
Cbc0038I Pass  12: suminf.    0.21670 (2) obj. -6130.3 iterations 1
Cbc0038I Pass  13: suminf.    0.21670 (2) obj. -6130.3 iterations 1
Cbc0038I Pass  14: suminf.    0.04412 (2) obj. -6130.3 iterations 8
Cbc0038I Pass  15: suminf.    0.04412 (2) obj. -6130.3 iterations 1
Cbc0038I Pass  16: suminf.    0.31972 (2) obj. -6130.3 iterations 1
Cbc0038I Pass  17: suminf.    0.91755 (4) obj. -6130.3 iterations 10
Cbc0038I Pass  18: suminf.    0.12274 (2) obj. -6130.3 iterations 5
Cbc0038I Pass  19: suminf.    0.59632 (2) obj. -6130.3 iterations 4
Cbc0038I Pass  20: suminf.    0.76467 (2) obj. -6130.3 iterations 1
Cbc0038I Pass  21: suminf.    0.60235 (2) obj. -6286.05 iterations 1
Cbc0038I Pass  22: suminf.    1.02861 (5) obj. -6130.3 iterations 4
Cbc0038I Pass  23: suminf.    0.85403 (2) obj. -6130.3 iterations 5
Cbc0038I Pass  24: suminf.    0.53199 (3) obj. -6130.3 iterations 2
Cbc0038I Pass  25: suminf.    0.34575 (3) obj. -6130.3 iterations 3
Cbc0038I Pass  26: suminf.    0.34575 (3) obj. -6130.3 iterations 0
Cbc0038I Pass  27: suminf.    0.53199 (3) obj. -6130.3 iterations 3
Cbc0038I Pass  28: suminf.    1.07779 (4) obj. -6130.3 iterations 3
Cbc0038I Pass  29: suminf.    0.47379 (4) obj. -6130.3 iterations 3
Cbc0038I Pass  30: suminf.    0.54486 (2) obj. -6130.3 iterations 4
Cbc0038I Pass  31: suminf.    0.28863 (2) obj. -6286.19 iterations 2
Cbc0038I Rounding solution of -6222.72 is better than previous of -6080.89

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 10 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6293.17
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.17727 (1) obj. -6531.28 iterations 0
Cbc0038I Pass  32: suminf.    0.45596 (1) obj. -6293.17 iterations 2
Cbc0038I Pass  33: suminf.    1.75384 (4) obj. -6293.17 iterations 2
Cbc0038I Pass  34: suminf.    0.41383 (1) obj. -6293.17 iterations 4
Cbc0038I Pass  35: suminf.    0.49356 (3) obj. -6293.17 iterations 8
Cbc0038I Pass  36: suminf.    0.39445 (2) obj. -6293.17 iterations 1
Cbc0038I Pass  37: suminf.    1.07155 (3) obj. -6374.39 iterations 7
Cbc0038I Pass  38: suminf.    0.43471 (2) obj. -6293.17 iterations 5
Cbc0038I Pass  39: suminf.    0.43471 (2) obj. -6293.17 iterations 1
Cbc0038I Pass  40: suminf.    0.43586 (2) obj. -6293.17 iterations 2
Cbc0038I Pass  41: suminf.    0.36004 (2) obj. -6431.57 iterations 2
Cbc0038I Pass  42: suminf.    1.32969 (3) obj. -6293.17 iterations 6
Cbc0038I Pass  43: suminf.    0.79733 (3) obj. -6293.17 iterations 4
Cbc0038I Pass  44: suminf.    0.69926 (3) obj. -6349.82 iterations 1
Cbc0038I Pass  45: suminf.    0.47409 (2) obj. -6293.17 iterations 3
Cbc0038I Pass  46: suminf.    0.47409 (2) obj. -6293.17 iterations 0
Cbc0038I Pass  47: suminf.    0.37650 (5) obj. -6293.17 iterations 8
Cbc0038I Pass  48: suminf.    0.21207 (3) obj. -6293.17 iterations 9
Cbc0038I Pass  49: suminf.    0.44557 (2) obj. -6293.17 iterations 6
Cbc0038I Pass  50: suminf.    0.44557 (2) obj. -6293.17 iterations 1
Cbc0038I Pass  51: suminf.    0.57856 (2) obj. -6293.17 iterations 1
Cbc0038I Pass  52: suminf.    0.53098 (2) obj. -6378.19 iterations 1
Cbc0038I Pass  53: suminf.    0.25909 (1) obj. -6360.35 iterations 11
Cbc0038I Pass  54: suminf.    0.25909 (1) obj. -6360.35 iterations 1
Cbc0038I Pass  55: suminf.    0.36258 (1) obj. -6293.17 iterations 2
Cbc0038I Pass  56: suminf.    0.99875 (3) obj. -6293.17 iterations 9
Cbc0038I Pass  57: suminf.    0.73259 (4) obj. -6293.17 iterations 7
Cbc0038I Pass  58: suminf.    0.45341 (2) obj. -6293.17 iterations 5
Cbc0038I Pass  59: suminf.    0.43580 (2) obj. -6293.17 iterations 1
Cbc0038I Pass  60: suminf.    0.77147 (3) obj. -6293.17 iterations 4
Cbc0038I Rounding solution of -6268.29 is better than previous of -6222.72

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 10 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6377.7
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.17727 (1) obj. -6531.28 iterations 0
Cbc0038I Pass  61: suminf.    0.41383 (1) obj. -6377.7 iterations 2
Cbc0038I Pass  62: suminf.    1.29978 (6) obj. -6377.7 iterations 15
Cbc0038I Pass  63: suminf.    0.43636 (1) obj. -6397.49 iterations 5
Cbc0038I Pass  64: suminf.    0.40589 (1) obj. -6377.7 iterations 2
Cbc0038I Pass  65: suminf.    0.31107 (2) obj. -6377.7 iterations 3
Cbc0038I Pass  66: suminf.    0.31107 (2) obj. -6377.7 iterations 1
Cbc0038I Pass  67: suminf.    0.63460 (2) obj. -6377.7 iterations 1
Cbc0038I Pass  68: suminf.    0.53455 (2) obj. -6377.7 iterations 8
Cbc0038I Pass  69: suminf.    0.53455 (2) obj. -6377.7 iterations 2
Cbc0038I Pass  70: suminf.    0.93176 (2) obj. -6434.2 iterations 4
Cbc0038I Pass  71: suminf.    0.85356 (2) obj. -6377.7 iterations 3
Cbc0038I Pass  72: suminf.    0.85356 (2) obj. -6377.7 iterations 1
Cbc0038I Pass  73: suminf.    0.99065 (2) obj. -6377.7 iterations 1
Cbc0038I Pass  74: suminf.    0.85356 (2) obj. -6377.7 iterations 3
Cbc0038I Pass  75: suminf.    0.90073 (3) obj. -6377.7 iterations 6
Cbc0038I Pass  76: suminf.    0.52476 (2) obj. -6377.7 iterations 3
Cbc0038I Pass  77: suminf.    0.71687 (2) obj. -6377.7 iterations 1
Cbc0038I Pass  78: suminf.    1.74669 (5) obj. -6377.7 iterations 12
Cbc0038I Pass  79: suminf.    0.48439 (2) obj. -6377.7 iterations 10
Cbc0038I Pass  80: suminf.    0.45127 (3) obj. -6377.7 iterations 4
Cbc0038I Pass  81: suminf.    0.48970 (2) obj. -6377.7 iterations 7
Cbc0038I Pass  82: suminf.    0.48970 (2) obj. -6377.7 iterations 0
Cbc0038I Pass  83: suminf.    0.76406 (3) obj. -6377.7 iterations 3
Cbc0038I Pass  84: suminf.    0.59998 (3) obj. -6472.48 iterations 1
Cbc0038I Pass  85: suminf.    0.48970 (2) obj. -6377.7 iterations 5
Cbc0038I Pass  86: suminf.    1.68165 (5) obj. -6377.7 iterations 4
Cbc0038I Pass  87: suminf.    1.39630 (5) obj. -6377.7 iterations 5
Cbc0038I Pass  88: suminf.    0.79571 (4) obj. -6377.7 iterations 4
Cbc0038I Pass  89: suminf.    0.18636 (1) obj. -6382.55 iterations 4
Cbc0038I Rounding solution of -6423.75 is better than previous of -6268.29

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 11 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -6469.11
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 5
Cbc0038I Pass  89: suminf.    0.17727 (1) obj. -6531.28 iterations 0
Cbc0038I Pass  90: suminf.    0.27303 (1) obj. -6469.11 iterations 1
Cbc0038I Pass  91: suminf.    1.05036 (5) obj. -6469.11 iterations 7
Cbc0038I Pass  92: suminf.    0.47831 (2) obj. -6469.11 iterations 5
Cbc0038I Pass  93: suminf.    0.53055 (4) obj. -6469.11 iterations 7
Cbc0038I Pass  94: suminf.    0.53055 (4) obj. -6469.11 iterations 0
Cbc0038I Pass  95: suminf.    0.54091 (2) obj. -6469.11 iterations 4
Cbc0038I Pass  96: suminf.    0.51463 (2) obj. -6469.11 iterations 1
Cbc0038I Pass  97: suminf.    0.74633 (3) obj. -6469.11 iterations 3
Cbc0038I Pass  98: suminf.    0.19466 (2) obj. -6469.11 iterations 3
Cbc0038I Pass  99: suminf.    0.64485 (4) obj. -6469.11 iterations 4
Cbc0038I Pass 100: suminf.    0.64485 (4) obj. -6469.11 iterations 0
Cbc0038I Pass 101: suminf.    0.43548 (2) obj. -6469.11 iterations 3
Cbc0038I Pass 102: suminf.    0.59273 (3) obj. -6469.11 iterations 3
Cbc0038I Pass 103: suminf.    0.51463 (2) obj. -6469.11 iterations 3
Cbc0038I Pass 104: suminf.    0.53055 (4) obj. -6469.11 iterations 6
Cbc0038I Pass 105: suminf.    0.53055 (4) obj. -6469.11 iterations 0
Cbc0038I Pass 106: suminf.    0.54091 (2) obj. -6469.11 iterations 4
Cbc0038I Pass 107: suminf.    0.18930 (3) obj. -6469.11 iterations 4
Cbc0038I Pass 108: suminf.    0.10912 (2) obj. -6469.11 iterations 3
Cbc0038I Pass 109: suminf.    0.10912 (2) obj. -6469.11 iterations 0
Cbc0038I Pass 110: suminf.    0.10912 (2) obj. -6469.11 iterations 0
Cbc0038I Pass 111: suminf.    0.53055 (4) obj. -6469.11 iterations 7
Cbc0038I Pass 112: suminf.    0.53055 (4) obj. -6469.11 iterations 0
Cbc0038I Pass 113: suminf.    0.54091 (2) obj. -6469.11 iterations 3
Cbc0038I Pass 114: suminf.    0.51463 (2) obj. -6469.11 iterations 1
Cbc0038I Pass 115: suminf.    0.86087 (3) obj. -6469.11 iterations 4
Cbc0038I Pass 116: suminf.    0.68972 (5) obj. -6469.11 iterations 7
Cbc0038I Pass 117: suminf.    0.54091 (2) obj. -6469.11 iterations 7
Cbc0038I Pass 118: suminf.    1.27857 (9) obj. -6469.11 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -6423.75 - took 0.04 seconds
Cbc0012I Integer solution of -6423.748 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 39 rows 22 columns, reduced to 6 rows 8 columns
Cbc0031I 11 added rows had average density of 12.636364
Cbc0013I At root node, 11 cuts changed objective from -6574.9525 to -6463.9314 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 76 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 415 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 262 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6423.748000000001, took 1078 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 30 times (180 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

