Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 4.01448e-05 - average 2.16999e-07, 9 fixed columns
Coin0506I Presolve 167 (-18) rows, 92 (-9) columns and 510 (-54) elements
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.3038189 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Coin0511I After Postsolve, objective 50.069123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Clp0000I Optimal - objective value 50.069123
Coin0511I After Postsolve, objective 50.069123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.06912322 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 12.9638
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.9501 iterations 69
Cbc0038I Solution found of -3.9501
Cbc0038I Relaxing continuous gives -3.9501
Cbc0038I Rounding solution of -10.3236 is better than previous of -3.9501

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -10.3236 to -20.2116 (0.06 seconds)
Cbc0038I Round again with cutoff of -23.1974
Cbc0038I Pass   2: suminf.    2.80262 (12) obj. -23.1974 iterations 15
Cbc0038I Pass   3: suminf.    1.74085 (8) obj. -23.1974 iterations 16
Cbc0038I Pass   4: suminf.    1.63033 (8) obj. -23.1974 iterations 5
Cbc0038I Pass   5: suminf.    0.87408 (5) obj. -23.1974 iterations 9
Cbc0038I Pass   6: suminf.    1.87399 (5) obj. -23.1974 iterations 5
Cbc0038I Pass   7: suminf.    1.73574 (5) obj. -23.1974 iterations 1
Cbc0038I Pass   8: suminf.    1.56333 (6) obj. -23.1974 iterations 2
Cbc0038I Pass   9: suminf.    1.87871 (6) obj. -23.1974 iterations 5
Cbc0038I Pass  10: suminf.    1.87871 (6) obj. -23.1974 iterations 0
Cbc0038I Pass  11: suminf.    1.80659 (6) obj. -23.1974 iterations 8
Cbc0038I Pass  12: suminf.    1.80659 (6) obj. -23.1974 iterations 0
Cbc0038I Pass  13: suminf.    1.73672 (6) obj. -23.1974 iterations 7
Cbc0038I Pass  14: suminf.    1.73012 (6) obj. -23.1974 iterations 1
Cbc0038I Pass  15: suminf.    1.96585 (5) obj. -23.1974 iterations 5
Cbc0038I Pass  16: suminf.    1.70838 (7) obj. -23.1974 iterations 4
Cbc0038I Pass  17: suminf.    1.70838 (7) obj. -23.1974 iterations 0
Cbc0038I Pass  18: suminf.    1.86109 (7) obj. -23.1974 iterations 7
Cbc0038I Pass  19: suminf.    1.86109 (7) obj. -23.1974 iterations 0
Cbc0038I Pass  20: suminf.    1.89193 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  21: suminf.    1.89251 (7) obj. -23.1974 iterations 1
Cbc0038I Pass  22: suminf.    1.71485 (6) obj. -23.1974 iterations 4
Cbc0038I Pass  23: suminf.    1.68031 (6) obj. -23.1974 iterations 2
Cbc0038I Pass  24: suminf.    2.11088 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  25: suminf.    1.83504 (7) obj. -23.1974 iterations 2
Cbc0038I Pass  26: suminf.    1.89251 (7) obj. -23.1974 iterations 7
Cbc0038I Pass  27: suminf.    1.71485 (6) obj. -23.1974 iterations 4
Cbc0038I Pass  28: suminf.    1.68031 (6) obj. -23.1974 iterations 2
Cbc0038I Pass  29: suminf.    2.11088 (7) obj. -23.1974 iterations 6
Cbc0038I Pass  30: suminf.    1.83504 (7) obj. -23.1974 iterations 2
Cbc0038I Pass  31: suminf.    1.89251 (7) obj. -23.1974 iterations 7
Cbc0038I Rounding solution of -21.4594 is better than previous of -20.2116

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -21.4594 to -22.2029 (0.12 seconds)
Cbc0038I Round again with cutoff of -28.5718
Cbc0038I Pass  31: suminf.    3.46215 (15) obj. -28.5718 iterations 3
Cbc0038I Pass  32: suminf.    3.46215 (15) obj. -28.5718 iterations 0
Cbc0038I Pass  33: suminf.    3.08525 (10) obj. -28.5718 iterations 12
Cbc0038I Pass  34: suminf.    2.65929 (11) obj. -28.5718 iterations 3
Cbc0038I Pass  35: suminf.    2.65929 (11) obj. -28.5718 iterations 0
Cbc0038I Pass  36: suminf.    2.71889 (11) obj. -28.5718 iterations 10
Cbc0038I Pass  37: suminf.    2.71889 (11) obj. -28.5718 iterations 0
Cbc0038I Pass  38: suminf.    3.15462 (10) obj. -28.5718 iterations 8
Cbc0038I Pass  39: suminf.    2.74325 (9) obj. -28.5718 iterations 3
Cbc0038I Pass  40: suminf.    2.14129 (8) obj. -28.5718 iterations 1
Cbc0038I Pass  41: suminf.    2.42893 (7) obj. -28.5718 iterations 9
Cbc0038I Pass  42: suminf.    2.36973 (7) obj. -28.5718 iterations 1
Cbc0038I Pass  43: suminf.    2.54803 (7) obj. -28.5718 iterations 4
Cbc0038I Pass  44: suminf.    2.19604 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  45: suminf.    2.19604 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  46: suminf.    2.59365 (7) obj. -28.5718 iterations 9
Cbc0038I Pass  47: suminf.    2.59459 (7) obj. -28.5718 iterations 1
Cbc0038I Pass  48: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I Pass  49: suminf.    2.35435 (6) obj. -28.5718 iterations 2
Cbc0038I Pass  50: suminf.    2.15871 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  51: suminf.    2.15871 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  52: suminf.    2.60611 (7) obj. -28.5718 iterations 7
Cbc0038I Pass  53: suminf.    2.59459 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  54: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I Pass  55: suminf.    2.35435 (6) obj. -28.5718 iterations 2
Cbc0038I Pass  56: suminf.    2.15871 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  57: suminf.    2.15871 (7) obj. -28.5718 iterations 0
Cbc0038I Pass  58: suminf.    2.60611 (7) obj. -28.5718 iterations 7
Cbc0038I Pass  59: suminf.    2.59459 (7) obj. -28.5718 iterations 2
Cbc0038I Pass  60: suminf.    2.56288 (7) obj. -28.5718 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -22.2029 - took 0.17 seconds
Cbc0012I Integer solution of -22.202902 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 102 rows 58 columns
Cbc0031I 35 added rows had average density of 57
Cbc0013I At root node, 35 cuts changed objective from -50.069123 to -41.258279 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27067 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3074 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 225 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.202902 best solution, best possible -41.258279 (2.42 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 12 rows 13 columns
Cbc0004I Integer solution of -22.311062 found after 14917 iterations and 43 nodes (2.79 seconds)
Cbc0004I Integer solution of -22.54477 found after 14951 iterations and 47 nodes (2.80 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 70 rows 41 columns
Cbc0010I After 136 nodes, 7 on tree, -22.54477 best solution, best possible -36.439736 (3.12 seconds)
Cbc0001I Search completed - best objective -22.54477, took 18948 iterations and 152 nodes (3.15 seconds)
Cbc0032I Strong branching done 1496 times (29015 iterations), fathomed 8 nodes and fixed 59 variables
Cbc0035I Maximum depth 45, 299 variables fixed on reduced cost
Total time (CPU seconds):       3.01   (Wallclock seconds):       3.17

