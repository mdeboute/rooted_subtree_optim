Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 340 (-187) rows, 180 (-84) columns and 1024 (-521) elements
Clp1000I sum of infeasibilities 3.79862e-05 - average 1.11724e-07, 165 fixed columns
Coin0506I Presolve 10 (-330) rows, 12 (-168) columns and 39 (-985) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 226416.48
Clp0000I Optimal - objective value 226416.48
Coin0511I After Postsolve, objective 226416.48, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1250041 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 226416.48
Clp0000I Optimal - objective value 226416.48
Clp0000I Optimal - objective value 226416.48
Coin0511I After Postsolve, objective 226416.48, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 226416.4838 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 340 rows, 180 columns (179 integer (179 of which binary)) and 1024 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.520%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.28405
Cbc0038I Solution found of -212978
Cbc0038I Relaxing continuous gives -212978
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 340 rows 180 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -214321
Cbc0038I Reduced cost fixing fixed 66 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04926 (1) obj. -214321 iterations 56
Cbc0038I Pass   2: suminf.    0.30612 (1) obj. -214399 iterations 15
Cbc0038I Pass   3: suminf.    0.30404 (1) obj. -214321 iterations 4
Cbc0038I Pass   4: suminf.    1.08471 (5) obj. -214321 iterations 34
Cbc0038I Pass   5: suminf.    0.71360 (5) obj. -214321 iterations 24
Cbc0038I Pass   6: suminf.    0.64946 (5) obj. -214321 iterations 26
Cbc0038I Pass   7: suminf.    0.04926 (1) obj. -214321 iterations 48
Cbc0038I Pass   8: suminf.    0.04926 (1) obj. -214321 iterations 0
Cbc0038I Pass   9: suminf.    0.30612 (1) obj. -214399 iterations 14
Cbc0038I Pass  10: suminf.    0.30404 (1) obj. -214321 iterations 4
Cbc0038I Pass  11: suminf.    0.52085 (4) obj. -214321 iterations 20
Cbc0038I Pass  12: suminf.    0.35584 (3) obj. -214321 iterations 19
Cbc0038I Pass  13: suminf.    1.77323 (4) obj. -214321 iterations 20
Cbc0038I Pass  14: suminf.    1.32597 (6) obj. -214321 iterations 34
Cbc0038I Pass  15: suminf.    0.77213 (5) obj. -214321 iterations 12
Cbc0038I Pass  16: suminf.    0.45641 (4) obj. -214321 iterations 6
Cbc0038I Pass  17: suminf.    1.69998 (5) obj. -214321 iterations 10
Cbc0038I Pass  18: suminf.    1.32958 (7) obj. -214321 iterations 18
Cbc0038I Pass  19: suminf.    1.32711 (11) obj. -214321 iterations 11
Cbc0038I Pass  20: suminf.    2.37995 (8) obj. -214321 iterations 23
Cbc0038I Pass  21: suminf.    0.25108 (1) obj. -214321 iterations 10
Cbc0038I Pass  22: suminf.    0.13265 (1) obj. -218735 iterations 4
Cbc0038I Pass  23: suminf.    0.96507 (3) obj. -214321 iterations 12
Cbc0038I Pass  24: suminf.    0.33318 (2) obj. -214321 iterations 14
Cbc0038I Pass  25: suminf.    0.33559 (1) obj. -214321 iterations 12
Cbc0038I Pass  26: suminf.    1.75638 (11) obj. -214321 iterations 29
Cbc0038I Pass  27: suminf.    0.43325 (3) obj. -214321 iterations 39
Cbc0038I Pass  28: suminf.    0.86078 (5) obj. -214321 iterations 19
Cbc0038I Pass  29: suminf.    0.72868 (3) obj. -214321 iterations 12
Cbc0038I Pass  30: suminf.    0.63223 (2) obj. -219372 iterations 20
Cbc0038I Rounding solution of -214614 is better than previous of -212978

Cbc0038I Before mini branch and bound, 153 integers at bound fixed and 0 continuous
Cbc0038I Full problem 340 rows 180 columns, reduced to 31 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -216974
Cbc0038I Reduced cost fixing fixed 82 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.14649 (1) obj. -216974 iterations 0
Cbc0038I Pass  31: suminf.    0.69997 (2) obj. -216974 iterations 15
Cbc0038I Pass  32: suminf.    0.61679 (2) obj. -216974 iterations 6
Cbc0038I Pass  33: suminf.    0.50420 (2) obj. -216974 iterations 8
Cbc0038I Pass  34: suminf.    0.53544 (2) obj. -216974 iterations 6
Cbc0038I Pass  35: suminf.    1.45145 (5) obj. -216974 iterations 24
Cbc0038I Pass  36: suminf.    0.98620 (6) obj. -216974 iterations 38
Cbc0038I Pass  37: suminf.    1.29887 (7) obj. -216974 iterations 20
Cbc0038I Pass  38: suminf.    0.77935 (3) obj. -216974 iterations 16
Cbc0038I Pass  39: suminf.    1.20177 (4) obj. -216974 iterations 17
Cbc0038I Pass  40: suminf.    0.88316 (6) obj. -216974 iterations 11
Cbc0038I Pass  41: suminf.    1.26095 (4) obj. -216974 iterations 22
Cbc0038I Pass  42: suminf.    1.26095 (4) obj. -216974 iterations 15
Cbc0038I Pass  43: suminf.    1.82303 (4) obj. -216974 iterations 15
Cbc0038I Pass  44: suminf.    0.99503 (4) obj. -216974 iterations 26
Cbc0038I Pass  45: suminf.    1.15810 (5) obj. -216974 iterations 25
Cbc0038I Pass  46: suminf.    0.95181 (5) obj. -216974 iterations 13
Cbc0038I Pass  47: suminf.    1.37445 (4) obj. -216974 iterations 19
Cbc0038I Pass  48: suminf.    1.11300 (5) obj. -216974 iterations 6
Cbc0038I Pass  49: suminf.    1.33096 (4) obj. -216974 iterations 6
Cbc0038I Pass  50: suminf.    1.19192 (3) obj. -216974 iterations 5
Cbc0038I Pass  51: suminf.    0.46810 (3) obj. -216974 iterations 18
Cbc0038I Pass  52: suminf.    0.46810 (3) obj. -216974 iterations 0
Cbc0038I Pass  53: suminf.    1.15810 (5) obj. -216974 iterations 18
Cbc0038I Pass  54: suminf.    0.95181 (5) obj. -216974 iterations 13
Cbc0038I Pass  55: suminf.    1.37445 (4) obj. -216974 iterations 19
Cbc0038I Pass  56: suminf.    1.11300 (5) obj. -216974 iterations 6
Cbc0038I Pass  57: suminf.    1.33096 (4) obj. -216974 iterations 6
Cbc0038I Pass  58: suminf.    1.19192 (3) obj. -216974 iterations 5
Cbc0038I Pass  59: suminf.    0.46810 (3) obj. -216974 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 340 rows 180 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -214614 - took 0.09 seconds
Cbc0012I Integer solution of -214613.75 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 340 rows 180 columns, reduced to 8 rows 9 columns
Cbc0031I 6 added rows had average density of 20.5
Cbc0013I At root node, 6 cuts changed objective from -226416.48 to -221802.01 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 55 row cuts average 2.4 elements, 11 column cuts (11 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 58 row cuts average 25.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0012I Integer solution of -216257.96 found by DiveCoefficient after 220 iterations and 6 nodes (0.21 seconds)
Cbc0001I Search completed - best objective -216257.96, took 289 iterations and 10 nodes (0.22 seconds)
Cbc0032I Strong branching done 86 times (536 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 103 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

