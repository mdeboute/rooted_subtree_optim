Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 2.24884e-05 - average 4.58946e-07, 4 fixed columns
Coin0506I Presolve 39 (-10) rows, 24 (-5) columns and 118 (-30) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Coin0511I After Postsolve, objective 237.68876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Clp0000I Optimal - objective value 237.68876
Coin0511I After Postsolve, objective 237.68876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 237.6887623 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.851%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.62191
Cbc0038I Pass   1: suminf.    0.04211 (1) obj. -199.587 iterations 9
Cbc0038I Solution found of -123.221
Cbc0038I Relaxing continuous gives -123.221
Cbc0038I Rounding solution of -152.022 is better than previous of -123.221

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -152.022 to -186.27 (0.01 seconds)
Cbc0038I Round again with cutoff of -191.256
Cbc0038I Pass   2: suminf.    0.04211 (1) obj. -199.587 iterations 0
Cbc0038I Pass   3: suminf.    0.80954 (2) obj. -191.256 iterations 3
Cbc0038I Pass   4: suminf.    0.43271 (2) obj. -230.181 iterations 2
Cbc0038I Pass   5: suminf.    0.58398 (2) obj. -224.947 iterations 4
Cbc0038I Pass   6: suminf.    0.18947 (1) obj. -204.75 iterations 2
Cbc0038I Pass   7: suminf.    0.61462 (2) obj. -191.256 iterations 3
Cbc0038I Pass   8: suminf.    0.41830 (2) obj. -222.673 iterations 2
Cbc0038I Pass   9: suminf.    2.49453 (7) obj. -191.256 iterations 8
Cbc0038I Pass  10: suminf.    0.82091 (2) obj. -191.256 iterations 6
Cbc0038I Pass  11: suminf.    0.82091 (2) obj. -191.256 iterations 0
Cbc0038I Pass  12: suminf.    0.33894 (2) obj. -191.256 iterations 1
Cbc0038I Pass  13: suminf.    1.35154 (4) obj. -191.256 iterations 8
Cbc0038I Pass  14: suminf.    1.28218 (4) obj. -191.256 iterations 2
Cbc0038I Pass  15: suminf.    0.71768 (2) obj. -191.256 iterations 4
Cbc0038I Pass  16: suminf.    0.62376 (2) obj. -202.141 iterations 1
Cbc0038I Pass  17: suminf.    0.53124 (2) obj. -191.256 iterations 2
Cbc0038I Pass  18: suminf.    0.53124 (2) obj. -191.256 iterations 0
Cbc0038I Pass  19: suminf.    2.17606 (6) obj. -191.256 iterations 5
Cbc0038I Pass  20: suminf.    1.75568 (5) obj. -191.256 iterations 5
Cbc0038I Pass  21: suminf.    0.53124 (2) obj. -191.256 iterations 6
Cbc0038I Pass  22: suminf.    0.53124 (2) obj. -191.256 iterations 0
Cbc0038I Pass  23: suminf.    0.61378 (2) obj. -191.256 iterations 1
Cbc0038I Pass  24: suminf.    1.00600 (5) obj. -191.256 iterations 7
Cbc0038I Pass  25: suminf.    0.47629 (2) obj. -191.256 iterations 6
Cbc0038I Pass  26: suminf.    0.72263 (2) obj. -210.724 iterations 1
Cbc0038I Pass  27: suminf.    0.31458 (2) obj. -191.256 iterations 6
Cbc0038I Pass  28: suminf.    0.31458 (2) obj. -191.256 iterations 0
Cbc0038I Pass  29: suminf.    0.80902 (2) obj. -191.256 iterations 2
Cbc0038I Pass  30: suminf.    0.80902 (2) obj. -191.256 iterations 0
Cbc0038I Pass  31: suminf.    0.61066 (2) obj. -214.445 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -186.27 to -198.732 (0.03 seconds)
Cbc0038I Round again with cutoff of -206.212
Cbc0038I Pass  31: suminf.    0.12668 (2) obj. -206.212 iterations 1
Cbc0038I Pass  32: suminf.    0.78519 (2) obj. -206.212 iterations 1
Cbc0038I Pass  33: suminf.    0.78519 (2) obj. -206.212 iterations 1
Cbc0038I Pass  34: suminf.    0.37773 (2) obj. -220.755 iterations 6
Cbc0038I Pass  35: suminf.    0.37773 (2) obj. -220.755 iterations 1
Cbc0038I Pass  36: suminf.    0.83981 (2) obj. -206.212 iterations 5
Cbc0038I Pass  37: suminf.    0.49633 (2) obj. -206.212 iterations 2
Cbc0038I Pass  38: suminf.    0.83981 (2) obj. -206.212 iterations 1
Cbc0038I Pass  39: suminf.    3.19176 (9) obj. -206.212 iterations 8
Cbc0038I Pass  40: suminf.    1.80683 (8) obj. -206.212 iterations 2
Cbc0038I Pass  41: suminf.    1.75635 (7) obj. -206.212 iterations 3
Cbc0038I Pass  42: suminf.    0.65698 (3) obj. -206.212 iterations 6
Cbc0038I Pass  43: suminf.    0.47305 (2) obj. -206.212 iterations 2
Cbc0038I Pass  44: suminf.    0.41830 (2) obj. -206.212 iterations 3
Cbc0038I Pass  45: suminf.    0.20813 (2) obj. -206.212 iterations 1
Cbc0038I Pass  46: suminf.    0.66037 (2) obj. -206.212 iterations 1
Cbc0038I Pass  47: suminf.    0.60906 (3) obj. -206.212 iterations 8
Cbc0038I Pass  48: suminf.    0.60906 (3) obj. -206.212 iterations 1
Cbc0038I Pass  49: suminf.    1.04324 (4) obj. -206.212 iterations 5
Cbc0038I Pass  50: suminf.    1.04324 (4) obj. -206.212 iterations 0
Cbc0038I Pass  51: suminf.    0.97327 (3) obj. -206.212 iterations 3
Cbc0038I Pass  52: suminf.    0.97327 (3) obj. -206.212 iterations 0
Cbc0038I Pass  53: suminf.    0.96155 (3) obj. -206.212 iterations 2
Cbc0038I Pass  54: suminf.    0.91503 (4) obj. -206.212 iterations 2
Cbc0038I Pass  55: suminf.    0.42076 (2) obj. -206.212 iterations 4
Cbc0038I Pass  56: suminf.    0.31683 (2) obj. -214.26 iterations 1
Cbc0038I Pass  57: suminf.    0.57563 (3) obj. -206.212 iterations 5
Cbc0038I Pass  58: suminf.    0.21782 (2) obj. -221.927 iterations 3
Cbc0038I Pass  59: suminf.    0.42076 (2) obj. -206.212 iterations 1
Cbc0038I Pass  60: suminf.    0.42076 (2) obj. -206.212 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -198.732 - took 0.02 seconds
Cbc0012I Integer solution of -198.7323 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 8 rows 7 columns
Cbc0031I 8 added rows had average density of 18.75
Cbc0013I At root node, 8 cuts changed objective from -236.12884 to -214.99307 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 269 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 377 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -198.7323, took 1789 iterations and 26 nodes (0.19 seconds)
Cbc0032I Strong branching done 204 times (945 iterations), fathomed 8 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.21

