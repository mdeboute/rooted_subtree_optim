Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 10 (-7) rows, 7 (-2) columns and 27 (-12) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 8 (-2) rows, 6 (-1) columns and 21 (-6) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 48.588495
Clp0000I Optimal - objective value 48.588495
Coin0511I After Postsolve, objective 48.588495, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.588495
Clp0000I Optimal - objective value 48.588495
Clp0000I Optimal - objective value 48.588495
Coin0511I After Postsolve, objective 48.588495, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.58849479 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 10 rows, 7 columns (6 integer (6 of which binary)) and 27 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.619%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.82874
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25 iterations 4
Cbc0038I Solution found of -25
Cbc0038I Relaxing continuous gives -25
Cbc0038I Rounding solution of -30.5 is better than previous of -25

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 7 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -32.7588
Cbc0038I Pass   2: suminf.    0.39789 (1) obj. -32.7588 iterations 1
Cbc0038I Pass   3: suminf.    0.10506 (1) obj. -32.7588 iterations 1
Cbc0038I Pass   4: suminf.    0.48495 (3) obj. -32.7588 iterations 7
Cbc0038I Pass   5: suminf.    0.34381 (2) obj. -32.7588 iterations 2
Cbc0038I Pass   6: suminf.    0.59590 (2) obj. -32.7588 iterations 1
Cbc0038I Pass   7: suminf.    0.59590 (2) obj. -32.7588 iterations 0
Cbc0038I Pass   8: suminf.    0.59590 (2) obj. -32.7588 iterations 0
Cbc0038I Pass   9: suminf.    0.99961 (2) obj. -32.7588 iterations 2
Cbc0038I Pass  10: suminf.    0.88112 (2) obj. -32.7588 iterations 1
Cbc0038I Pass  11: suminf.    0.99961 (2) obj. -32.7588 iterations 1
Cbc0038I Pass  12: suminf.    0.59590 (2) obj. -32.7588 iterations 1
Cbc0038I Pass  13: suminf.    0.59590 (2) obj. -32.7588 iterations 0
Cbc0038I Pass  14: suminf.    0.64951 (2) obj. -32.7588 iterations 3
Cbc0038I Pass  15: suminf.    0.10506 (1) obj. -32.7588 iterations 1
Cbc0038I Pass  16: suminf.    0.39789 (1) obj. -32.7588 iterations 1
Cbc0038I Pass  17: suminf.    0.39789 (1) obj. -32.7588 iterations 0
Cbc0038I Pass  18: suminf.    0.71805 (3) obj. -32.7588 iterations 3
Cbc0038I Pass  19: suminf.    0.34381 (2) obj. -32.7588 iterations 2
Cbc0038I Pass  20: suminf.    0.59590 (2) obj. -32.7588 iterations 1
Cbc0038I Pass  21: suminf.    0.59590 (2) obj. -32.7588 iterations 0
Cbc0038I Pass  22: suminf.    0.59590 (2) obj. -32.7588 iterations 0
Cbc0038I Pass  23: suminf.    0.59590 (2) obj. -32.7588 iterations 0
Cbc0038I Pass  24: suminf.    0.59590 (2) obj. -32.7588 iterations 0
Cbc0038I Pass  25: suminf.    0.73441 (3) obj. -32.7588 iterations 3
Cbc0038I Pass  26: suminf.    0.59590 (2) obj. -32.7588 iterations 4
Cbc0038I Pass  27: suminf.    0.73622 (4) obj. -32.7588 iterations 5
Cbc0038I Pass  28: suminf.    0.72683 (5) obj. -32.7588 iterations 1
Cbc0038I Pass  29: suminf.    0.48495 (3) obj. -32.7588 iterations 5
Cbc0038I Pass  30: suminf.    0.34381 (2) obj. -32.7588 iterations 1
Cbc0038I Pass  31: suminf.    0.37762 (2) obj. -32.7588 iterations 1
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 7 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -35.9247
Cbc0038I Pass  31: suminf.    0.43976 (1) obj. -35.9247 iterations 0
Cbc0038I Pass  32: suminf.    0.25231 (1) obj. -35.9247 iterations 1
Cbc0038I Pass  33: suminf.    1.54799 (5) obj. -35.9247 iterations 8
Cbc0038I Pass  34: suminf.    1.36231 (5) obj. -35.9247 iterations 2
Cbc0038I Pass  35: suminf.    1.47223 (4) obj. -35.9247 iterations 5
Cbc0038I Pass  36: suminf.    1.17468 (3) obj. -35.9247 iterations 2
Cbc0038I Pass  37: suminf.    1.00000 (3) obj. -35.9247 iterations 1
Cbc0038I Pass  38: suminf.    0.96625 (3) obj. -35.9247 iterations 1
Cbc0038I Pass  39: suminf.    1.47223 (4) obj. -35.9247 iterations 2
Cbc0038I Pass  40: suminf.    1.10863 (4) obj. -35.9247 iterations 1
Cbc0038I Pass  41: suminf.    1.09449 (5) obj. -35.9247 iterations 1
Cbc0038I Pass  42: suminf.    0.75155 (3) obj. -35.9247 iterations 5
Cbc0038I Pass  43: suminf.    0.53282 (2) obj. -35.9247 iterations 1
Cbc0038I Pass  44: suminf.    0.82324 (3) obj. -35.9247 iterations 3
Cbc0038I Pass  45: suminf.    1.00000 (3) obj. -35.9247 iterations 5
Cbc0038I Pass  46: suminf.    0.96625 (3) obj. -35.9247 iterations 1
Cbc0038I Pass  47: suminf.    1.47223 (4) obj. -35.9247 iterations 2
Cbc0038I Pass  48: suminf.    1.17468 (3) obj. -35.9247 iterations 2
Cbc0038I Pass  49: suminf.    0.96625 (3) obj. -35.9247 iterations 2
Cbc0038I Pass  50: suminf.    0.96625 (3) obj. -35.9247 iterations 0
Cbc0038I Pass  51: suminf.    0.96625 (3) obj. -35.9247 iterations 0
Cbc0038I Pass  52: suminf.    0.53391 (2) obj. -35.9247 iterations 3
Cbc0038I Pass  53: suminf.    0.53282 (2) obj. -35.9247 iterations 1
Cbc0038I Pass  54: suminf.    0.82324 (3) obj. -35.9247 iterations 4
Cbc0038I Pass  55: suminf.    1.00000 (3) obj. -35.9247 iterations 5
Cbc0038I Pass  56: suminf.    0.96625 (3) obj. -35.9247 iterations 1
Cbc0038I Pass  57: suminf.    1.47223 (4) obj. -35.9247 iterations 2
Cbc0038I Pass  58: suminf.    1.17468 (3) obj. -35.9247 iterations 2
Cbc0038I Pass  59: suminf.    1.10863 (4) obj. -35.9247 iterations 3
Cbc0038I Pass  60: suminf.    1.09449 (5) obj. -35.9247 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 7 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -30.5 - took 0.00 seconds
Cbc0012I Integer solution of -30.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 4 added rows had average density of 4.75
Cbc0013I At root node, 23 cuts changed objective from -48.588495 to -30.834499 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 7 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30.5, took 10 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

