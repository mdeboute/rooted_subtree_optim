Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 99 (-4) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 0.000139168 - average 7.68886e-07, 24 fixed columns
Coin0506I Presolve 128 (-53) rows, 72 (-27) columns and 393 (-159) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.23934688 - largest nonzero change 0 ( 0%) - largest zero change 2.609685e-05
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Coin0511I After Postsolve, objective 39.599694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Coin0511I After Postsolve, objective 39.599694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.599694 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 8.21127
Cbc0038I Solution found of 6.31003
Cbc0038I Relaxing continuous gives -1.25788
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -1.25788 to -13.3505 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.9755
Cbc0038I Pass   1: suminf.    2.64299 (36) obj. -15.9755 iterations 68
Cbc0038I Pass   2: suminf.    0.99010 (8) obj. -15.9755 iterations 45
Cbc0038I Pass   3: suminf.    0.47616 (5) obj. -15.9755 iterations 3
Cbc0038I Pass   4: suminf.    2.22527 (6) obj. -15.9755 iterations 26
Cbc0038I Pass   5: suminf.    2.22527 (6) obj. -15.9755 iterations 1
Cbc0038I Pass   6: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass   7: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass   8: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass   9: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  10: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  11: suminf.    2.31795 (6) obj. -15.9755 iterations 17
Cbc0038I Pass  12: suminf.    2.28060 (6) obj. -15.9755 iterations 4
Cbc0038I Pass  13: suminf.    2.39327 (6) obj. -15.9755 iterations 11
Cbc0038I Pass  14: suminf.    2.22527 (6) obj. -15.9755 iterations 10
Cbc0038I Pass  15: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  16: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  17: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  18: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  19: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  20: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  21: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  22: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  23: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  24: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  25: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  26: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  27: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  28: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  29: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  30: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 90 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -13.3505 to -14.3345 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.7003
Cbc0038I Pass  30: suminf.    3.49148 (36) obj. -20.7003 iterations 0
Cbc0038I Pass  31: suminf.    2.48410 (9) obj. -20.7003 iterations 39
Cbc0038I Pass  32: suminf.    2.05359 (8) obj. -20.7003 iterations 4
Cbc0038I Pass  33: suminf.    2.90303 (10) obj. -20.7003 iterations 25
Cbc0038I Pass  34: suminf.    2.62949 (11) obj. -20.7003 iterations 8
Cbc0038I Pass  35: suminf.    3.68713 (10) obj. -20.7003 iterations 17
Cbc0038I Pass  36: suminf.    2.47232 (9) obj. -20.7003 iterations 11
Cbc0038I Pass  37: suminf.    2.42648 (10) obj. -20.7003 iterations 5
Cbc0038I Pass  38: suminf.    2.55364 (7) obj. -20.7003 iterations 18
Cbc0038I Pass  39: suminf.    2.09243 (7) obj. -20.7003 iterations 10
Cbc0038I Pass  40: suminf.    2.02846 (8) obj. -20.7003 iterations 5
Cbc0038I Pass  41: suminf.    2.25022 (9) obj. -20.7003 iterations 15
Cbc0038I Pass  42: suminf.    2.25022 (9) obj. -20.7003 iterations 1
Cbc0038I Pass  43: suminf.    2.73549 (10) obj. -20.7003 iterations 28
Cbc0038I Pass  44: suminf.    2.73549 (10) obj. -20.7003 iterations 0
Cbc0038I Pass  45: suminf.    3.74207 (11) obj. -20.7003 iterations 24
Cbc0038I Pass  46: suminf.    2.55952 (9) obj. -20.7003 iterations 8
Cbc0038I Pass  47: suminf.    4.32758 (15) obj. -20.7003 iterations 21
Cbc0038I Pass  48: suminf.    3.94754 (15) obj. -20.7003 iterations 1
Cbc0038I Pass  49: suminf.    4.00290 (14) obj. -20.7003 iterations 24
Cbc0038I Pass  50: suminf.    2.78081 (10) obj. -20.7003 iterations 9
Cbc0038I Pass  51: suminf.    4.50890 (13) obj. -20.7003 iterations 25
Cbc0038I Pass  52: suminf.    4.05317 (13) obj. -20.7003 iterations 31
Cbc0038I Pass  53: suminf.    2.66326 (11) obj. -20.7003 iterations 25
Cbc0038I Pass  54: suminf.    2.62355 (10) obj. -20.7003 iterations 3
Cbc0038I Pass  55: suminf.    3.54763 (8) obj. -20.7003 iterations 23
Cbc0038I Pass  56: suminf.    3.27259 (9) obj. -20.7003 iterations 5
Cbc0038I Pass  57: suminf.    3.04502 (8) obj. -20.7003 iterations 16
Cbc0038I Pass  58: suminf.    3.14014 (9) obj. -20.7003 iterations 19
Cbc0038I Pass  59: suminf.    2.51317 (8) obj. -20.7003 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 90 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -14.3345 - took 0.11 seconds
Cbc0012I Integer solution of -14.33455 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 78 rows 46 columns
Cbc0031I 24 added rows had average density of 67.291667
Cbc0013I At root node, 24 cuts changed objective from -39.599694 to -33.45007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14510 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2175 row cuts average 98.9 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 97.7 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.33455 best solution, best possible -33.45007 (1.43 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 50 rows 32 columns
Cbc0038I Full problem 181 rows 99 columns, reduced to 44 rows 26 columns
Cbc0001I Search completed - best objective -14.33455, took 12826 iterations and 114 nodes (1.98 seconds)
Cbc0032I Strong branching done 1230 times (22702 iterations), fathomed 8 nodes and fixed 82 variables
Cbc0035I Maximum depth 30, 517 variables fixed on reduced cost
Total time (CPU seconds):       1.88   (Wallclock seconds):       2.00

