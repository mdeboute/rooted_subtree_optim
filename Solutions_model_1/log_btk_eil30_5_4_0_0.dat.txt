Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 29 (-3) columns and 154 (-23) elements
Clp1000I sum of infeasibilities 2.9378e-06 - average 5.64962e-08, 4 fixed columns
Coin0506I Presolve 41 (-11) rows, 25 (-4) columns and 124 (-30) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Coin0511I After Postsolve, objective 81.751084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Coin0511I After Postsolve, objective 81.751084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.75108439 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 52 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.981%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.86481
Cbc0038I Pass   1: suminf.    0.20565 (2) obj. -37.7588 iterations 23
Cbc0038I Solution found of 9.9472
Cbc0038I Relaxing continuous gives 7.50365
Cbc0038I Rounding solution of -8.221 is better than previous of 7.50365

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.221 to -19.8918 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.0778
Cbc0038I Pass   2: suminf.    0.20565 (2) obj. -37.7588 iterations 0
Cbc0038I Pass   3: suminf.    0.47553 (2) obj. -26.0778 iterations 4
Cbc0038I Pass   4: suminf.    0.13356 (2) obj. -26.0778 iterations 3
Cbc0038I Pass   5: suminf.    0.31379 (2) obj. -26.0778 iterations 5
Cbc0038I Pass   6: suminf.    0.05000 (1) obj. -26.0778 iterations 3
Cbc0038I Pass   7: suminf.    0.17375 (1) obj. -26.0778 iterations 4
Cbc0038I Pass   8: suminf.    0.23397 (1) obj. -26.0778 iterations 2
Cbc0038I Pass   9: suminf.    2.16174 (8) obj. -26.0778 iterations 9
Cbc0038I Pass  10: suminf.    1.87059 (8) obj. -26.0778 iterations 3
Cbc0038I Pass  11: suminf.    0.38308 (3) obj. -26.0778 iterations 8
Cbc0038I Pass  12: suminf.    1.75382 (5) obj. -26.0778 iterations 4
Cbc0038I Pass  13: suminf.    0.71532 (3) obj. -26.0778 iterations 3
Cbc0038I Pass  14: suminf.    0.22202 (1) obj. -26.0778 iterations 7
Cbc0038I Pass  15: suminf.    0.05000 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  16: suminf.    0.17375 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  17: suminf.    0.23397 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  18: suminf.    2.26960 (9) obj. -26.0778 iterations 9
Cbc0038I Pass  19: suminf.    2.13649 (9) obj. -26.0778 iterations 3
Cbc0038I Pass  20: suminf.    0.76626 (2) obj. -26.0778 iterations 10
Cbc0038I Pass  21: suminf.    0.41649 (1) obj. -26.0778 iterations 3
Cbc0038I Pass  22: suminf.    0.36768 (1) obj. -26.0778 iterations 1
Cbc0038I Pass  23: suminf.    0.97407 (5) obj. -26.0778 iterations 7
Cbc0038I Pass  24: suminf.    0.91413 (5) obj. -26.0778 iterations 2
Cbc0038I Pass  25: suminf.    0.75742 (2) obj. -26.0778 iterations 13
Cbc0038I Pass  26: suminf.    0.69142 (2) obj. -26.0778 iterations 1
Cbc0038I Pass  27: suminf.    0.41316 (1) obj. -26.0778 iterations 3
Cbc0038I Pass  28: suminf.    0.37080 (1) obj. -26.0778 iterations 1
Cbc0038I Pass  29: suminf.    0.41724 (2) obj. -26.0778 iterations 2
Cbc0038I Pass  30: suminf.    0.41724 (2) obj. -26.0778 iterations 0
Cbc0038I Pass  31: suminf.    0.22202 (1) obj. -26.0778 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -19.8918 to -20.003 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.2125
Cbc0038I Pass  31: suminf.    0.20565 (2) obj. -37.7588 iterations 0
Cbc0038I Pass  32: suminf.    0.78764 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  33: suminf.    0.34053 (2) obj. -37.2125 iterations 1
Cbc0038I Pass  34: suminf.    3.46545 (9) obj. -37.2125 iterations 13
Cbc0038I Pass  35: suminf.    1.75271 (5) obj. -37.2125 iterations 8
Cbc0038I Pass  36: suminf.    0.89815 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  37: suminf.    0.89815 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  38: suminf.    1.09925 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  39: suminf.    1.09925 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  40: suminf.    0.63808 (3) obj. -37.2125 iterations 11
Cbc0038I Pass  41: suminf.    0.78764 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  42: suminf.    0.34053 (2) obj. -37.2125 iterations 1
Cbc0038I Pass  43: suminf.    0.20565 (2) obj. -37.7588 iterations 3
Cbc0038I Pass  44: suminf.    5.54751 (12) obj. -37.2125 iterations 14
Cbc0038I Pass  45: suminf.    1.63004 (5) obj. -37.2125 iterations 10
Cbc0038I Pass  46: suminf.    1.33917 (4) obj. -37.2125 iterations 1
Cbc0038I Pass  47: suminf.    0.84753 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  48: suminf.    0.84753 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  49: suminf.    1.10690 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  50: suminf.    1.10690 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  51: suminf.    3.02754 (10) obj. -37.2125 iterations 11
Cbc0038I Pass  52: suminf.    1.82456 (7) obj. -37.2125 iterations 2
Cbc0038I Pass  53: suminf.    0.81713 (3) obj. -37.2125 iterations 11
Cbc0038I Pass  54: suminf.    0.44458 (1) obj. -37.2125 iterations 3
Cbc0038I Pass  55: suminf.    0.05104 (2) obj. -37.2125 iterations 3
Cbc0038I Pass  56: suminf.    0.64716 (2) obj. -37.2125 iterations 2
Cbc0038I Pass  57: suminf.    3.90858 (11) obj. -37.2125 iterations 6
Cbc0038I Pass  58: suminf.    0.64716 (2) obj. -37.2125 iterations 8
Cbc0038I Pass  59: suminf.    1.35818 (6) obj. -37.2125 iterations 14
Cbc0038I Pass  60: suminf.    1.35818 (6) obj. -37.2125 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -20.003 - took 0.06 seconds
Cbc0012I Integer solution of -20.00301 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 29 columns, reduced to 32 rows 20 columns
Cbc0031I 10 added rows had average density of 21.4
Cbc0013I At root node, 10 cuts changed objective from -81.751084 to -44.092324 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1600 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 766 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 82 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.00300999999999, took 2085 iterations and 6 nodes (0.20 seconds)
Cbc0032I Strong branching done 68 times (763 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.20

