Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 20 (-5) columns and 103 (-32) elements
Clp1000I sum of infeasibilities 1.58041e-07 - average 4.51545e-09, 2 fixed columns
Coin0506I Presolve 26 (-9) rows, 18 (-2) columns and 81 (-22) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Coin0511I After Postsolve, objective 168.72455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Coin0511I After Postsolve, objective 168.72455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.724551 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.03073
Cbc0038I Pass   1: suminf.    1.60191 (4) obj. -109.586 iterations 15
Cbc0038I Pass   2: suminf.    1.04053 (3) obj. -99.3085 iterations 1
Cbc0038I Solution found of -38.0187
Cbc0038I Relaxing continuous gives -38.0187
Cbc0038I Rounding solution of -71.9318 is better than previous of -38.0187

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -71.9318 to -131.385 (0.02 seconds)
Cbc0038I Round again with cutoff of -134.928
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.88259 (7) obj. -134.928 iterations 4
Cbc0038I Pass   4: suminf.    0.88259 (7) obj. -134.928 iterations 0
Cbc0038I Pass   5: suminf.    0.81002 (6) obj. -134.928 iterations 7
Cbc0038I Pass   6: suminf.    0.23037 (2) obj. -134.928 iterations 3
Cbc0038I Pass   7: suminf.    0.67001 (3) obj. -134.928 iterations 3
Cbc0038I Pass   8: suminf.    0.66362 (4) obj. -134.928 iterations 2
Cbc0038I Pass   9: suminf.    0.57967 (3) obj. -134.928 iterations 1
Cbc0038I Pass  10: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  11: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  12: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  13: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  14: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  15: suminf.    0.73634 (5) obj. -134.928 iterations 6
Cbc0038I Pass  16: suminf.    0.73634 (5) obj. -134.928 iterations 0
Cbc0038I Pass  17: suminf.    0.81684 (5) obj. -134.928 iterations 7
Cbc0038I Pass  18: suminf.    0.57967 (3) obj. -134.928 iterations 2
Cbc0038I Pass  19: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  20: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  21: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  22: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  23: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  24: suminf.    0.41933 (2) obj. -134.928 iterations 4
Cbc0038I Pass  25: suminf.    0.66362 (4) obj. -134.928 iterations 3
Cbc0038I Pass  26: suminf.    0.57967 (3) obj. -134.928 iterations 1
Cbc0038I Pass  27: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  28: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  29: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  30: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  31: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  32: suminf.    1.12249 (7) obj. -134.928 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -131.385 - took 0.02 seconds
Cbc0012I Integer solution of -131.3848 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 15 cuts changed objective from -166.81489 to -131.3848 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.2 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 17 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -131.3848, took 22 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

