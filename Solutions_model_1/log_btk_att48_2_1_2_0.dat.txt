Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 48 (-2) columns and 262 (-23) elements
Clp1000I sum of infeasibilities 1.6712e-06 - average 1.92092e-08, 1 fixed columns
Coin0506I Presolve 85 (-2) rows, 47 (-1) columns and 256 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 23.857128 - largest nonzero change 2.6920564e-05 ( 0.00039217652%) - largest zero change 1.0549131e-05
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Coin0511I After Postsolve, objective 1725.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Coin0511I After Postsolve, objective 1725.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1725.310015 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 48 columns (47 integer (47 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 11.5072
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 871.698 iterations 34
Cbc0038I Solution found of 871.698
Cbc0038I Relaxing continuous gives 871.698
Cbc0038I Rounding solution of 720.592 is better than previous of 871.698

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 720.592 to -112.474 (0.03 seconds)
Cbc0038I Round again with cutoff of -273.758
Cbc0038I Pass   2: suminf.    2.51185 (12) obj. -273.758 iterations 12
Cbc0038I Pass   3: suminf.    2.55643 (10) obj. -273.758 iterations 15
Cbc0038I Pass   4: suminf.    2.08283 (8) obj. -273.758 iterations 2
Cbc0038I Pass   5: suminf.    2.11268 (6) obj. -273.758 iterations 11
Cbc0038I Pass   6: suminf.    2.11268 (6) obj. -273.758 iterations 0
Cbc0038I Pass   7: suminf.    2.14221 (7) obj. -273.758 iterations 8
Cbc0038I Pass   8: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass   9: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  10: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  11: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  12: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  13: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Pass  14: suminf.    2.07844 (6) obj. -273.758 iterations 8
Cbc0038I Pass  15: suminf.    2.07388 (5) obj. -273.758 iterations 1
Cbc0038I Pass  16: suminf.    2.14221 (7) obj. -273.758 iterations 5
Cbc0038I Pass  17: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass  18: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  19: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  20: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  21: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  22: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Pass  23: suminf.    2.07844 (6) obj. -273.758 iterations 8
Cbc0038I Pass  24: suminf.    2.07388 (5) obj. -273.758 iterations 1
Cbc0038I Pass  25: suminf.    2.14221 (7) obj. -273.758 iterations 5
Cbc0038I Pass  26: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass  27: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  28: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  29: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  30: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  31: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Rounding solution of -257.417 is better than previous of -112.474

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -564.068
Cbc0038I Pass  31: suminf.    3.76896 (16) obj. -564.068 iterations 5
Cbc0038I Pass  32: suminf.    2.78674 (11) obj. -564.068 iterations 10
Cbc0038I Pass  33: suminf.    2.78674 (11) obj. -564.068 iterations 0
Cbc0038I Pass  34: suminf.    2.43339 (7) obj. -564.068 iterations 10
Cbc0038I Pass  35: suminf.    2.43339 (7) obj. -564.068 iterations 0
Cbc0038I Pass  36: suminf.    2.46288 (7) obj. -564.068 iterations 2
Cbc0038I Pass  37: suminf.    2.82679 (7) obj. -564.068 iterations 11
Cbc0038I Pass  38: suminf.    2.10032 (5) obj. -564.068 iterations 3
Cbc0038I Pass  39: suminf.    1.97888 (5) obj. -564.068 iterations 1
Cbc0038I Pass  40: suminf.    1.95030 (6) obj. -564.068 iterations 2
Cbc0038I Pass  41: suminf.    2.60105 (7) obj. -564.068 iterations 3
Cbc0038I Pass  42: suminf.    1.86962 (7) obj. -564.068 iterations 3
Cbc0038I Pass  43: suminf.    2.65500 (8) obj. -564.068 iterations 3
Cbc0038I Pass  44: suminf.    2.53597 (9) obj. -564.068 iterations 1
Cbc0038I Pass  45: suminf.    2.83640 (8) obj. -564.068 iterations 6
Cbc0038I Pass  46: suminf.    2.83640 (8) obj. -564.068 iterations 0
Cbc0038I Pass  47: suminf.    2.24332 (7) obj. -564.068 iterations 9
Cbc0038I Pass  48: suminf.    2.24332 (7) obj. -564.068 iterations 0
Cbc0038I Pass  49: suminf.    2.86142 (7) obj. -564.068 iterations 2
Cbc0038I Pass  50: suminf.    2.18243 (8) obj. -564.068 iterations 4
Cbc0038I Pass  51: suminf.    2.18243 (8) obj. -564.068 iterations 0
Cbc0038I Pass  52: suminf.    3.00000 (9) obj. -564.068 iterations 4
Cbc0038I Pass  53: suminf.    2.24296 (9) obj. -564.068 iterations 9
Cbc0038I Pass  54: suminf.    2.18079 (9) obj. -564.068 iterations 5
Cbc0038I Pass  55: suminf.    2.71031 (8) obj. -564.068 iterations 5
Cbc0038I Pass  56: suminf.    2.71031 (8) obj. -564.068 iterations 0
Cbc0038I Pass  57: suminf.    2.64927 (9) obj. -564.068 iterations 3
Cbc0038I Pass  58: suminf.    2.64927 (9) obj. -564.068 iterations 0
Cbc0038I Pass  59: suminf.    2.96569 (7) obj. -564.068 iterations 4
Cbc0038I Pass  60: suminf.    2.78781 (7) obj. -564.068 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -257.417 - took 0.09 seconds
Cbc0012I Integer solution of -257.4169 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 25 added rows had average density of 20.48
Cbc0013I At root node, 25 cuts changed objective from -1725.31 to -1051.7903 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10982 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2353 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -257.4169 best solution, best possible -1051.7903 (0.76 seconds)
Cbc0001I Search completed - best objective -257.4168999999999, took 8451 iterations and 22 nodes (1.02 seconds)
Cbc0032I Strong branching done 378 times (8531 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 10, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.03

