Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 9.05757e-06 - average 4.89598e-08, 40 fixed columns
Coin0506I Presolve 107 (-78) rows, 61 (-40) columns and 330 (-234) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0398073 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Coin0511I After Postsolve, objective 86.809975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20284948 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Coin0511I After Postsolve, objective 86.809975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.80997494 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.43055
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.8026 iterations 54
Cbc0038I Solution found of -10.8026
Cbc0038I Relaxing continuous gives -10.8026
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.8026 to -59.4062 (0.06 seconds)
Cbc0038I Round again with cutoff of -62.1466
Cbc0038I Pass   2: suminf.    2.29483 (7) obj. -62.1466 iterations 14
Cbc0038I Pass   3: suminf.    1.28315 (4) obj. -62.1466 iterations 10
Cbc0038I Pass   4: suminf.    1.46040 (8) obj. -62.1466 iterations 23
Cbc0038I Pass   5: suminf.    1.37781 (6) obj. -62.1466 iterations 12
Cbc0038I Pass   6: suminf.    1.46454 (4) obj. -62.1466 iterations 8
Cbc0038I Pass   7: suminf.    1.45306 (5) obj. -62.1466 iterations 5
Cbc0038I Pass   8: suminf.    1.69638 (5) obj. -62.1466 iterations 10
Cbc0038I Pass   9: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  10: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  11: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  12: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  13: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  14: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  15: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  16: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  17: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  18: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  19: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  20: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  21: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  22: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  23: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  24: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  25: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  26: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  27: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  28: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  29: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  30: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  31: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -59.4062 - took 0.09 seconds
Cbc0012I Integer solution of -59.40618 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 73 rows 42 columns
Cbc0031I 23 added rows had average density of 65.956522
Cbc0013I At root node, 23 cuts changed objective from -86.809975 to -79.50795 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8053 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1705 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 97.4 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -59.40618 best solution, best possible -79.50795 (0.90 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 27 rows 17 columns
Cbc0001I Search completed - best objective -59.40617999999998, took 8521 iterations and 80 nodes (1.22 seconds)
Cbc0032I Strong branching done 806 times (16255 iterations), fathomed 17 nodes and fixed 21 variables
Cbc0035I Maximum depth 24, 381 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.23

