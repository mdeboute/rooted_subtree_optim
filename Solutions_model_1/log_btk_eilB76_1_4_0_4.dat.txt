Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 58 (-20) columns and 323 (-130) elements
Clp1000I sum of infeasibilities 0 - average 0, 52 fixed columns
Coin0506I Presolve 5 (-102) rows, 5 (-53) columns and 16 (-307) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Coin0511I After Postsolve, objective 16098.311, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35938432 - largest nonzero change 0 ( 0%) - largest zero change 2.9292214e-05
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Clp0000I Optimal - objective value 16098.311
Coin0511I After Postsolve, objective 16098.311, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16098.31144 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 58 columns (57 integer (57 of which binary)) and 351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.328%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.64801
Cbc0038I Solution found of -13044.1
Cbc0038I Relaxing continuous gives -13044.1
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -13044.1 to -13213.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -13501.8
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.12630 (2) obj. -13501.8 iterations 13
Cbc0038I Pass   2: suminf.    0.72340 (2) obj. -15665.6 iterations 5
Cbc0038I Pass   3: suminf.    1.00974 (4) obj. -13501.8 iterations 8
Cbc0038I Pass   4: suminf.    0.48881 (1) obj. -13501.8 iterations 6
Cbc0038I Pass   5: suminf.    0.04545 (1) obj. -15438.3 iterations 1
Cbc0038I Pass   6: suminf.    1.18256 (6) obj. -13501.8 iterations 6
Cbc0038I Pass   7: suminf.    1.58721 (6) obj. -13501.8 iterations 14
Cbc0038I Pass   8: suminf.    0.36735 (2) obj. -14269.1 iterations 6
Cbc0038I Pass   9: suminf.    0.34789 (3) obj. -13501.8 iterations 6
Cbc0038I Pass  10: suminf.    0.34789 (3) obj. -13501.8 iterations 0
Cbc0038I Pass  11: suminf.    0.72795 (4) obj. -13911.1 iterations 7
Cbc0038I Pass  12: suminf.    0.52626 (3) obj. -13501.8 iterations 4
Cbc0038I Pass  13: suminf.    0.90603 (5) obj. -13501.8 iterations 19
Cbc0038I Pass  14: suminf.    0.90603 (5) obj. -13501.8 iterations 1
Cbc0038I Pass  15: suminf.    0.83473 (2) obj. -13501.8 iterations 9
Cbc0038I Pass  16: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  17: suminf.    1.26994 (4) obj. -13931.1 iterations 10
Cbc0038I Pass  18: suminf.    1.26994 (4) obj. -13931.1 iterations 4
Cbc0038I Pass  19: suminf.    0.83473 (2) obj. -13501.8 iterations 10
Cbc0038I Pass  20: suminf.    1.45313 (3) obj. -14692.1 iterations 5
Cbc0038I Pass  21: suminf.    1.88022 (6) obj. -13501.8 iterations 6
Cbc0038I Pass  22: suminf.    0.49244 (3) obj. -13501.8 iterations 7
Cbc0038I Pass  23: suminf.    0.17021 (2) obj. -13784.9 iterations 1
Cbc0038I Pass  24: suminf.    0.24834 (2) obj. -13501.8 iterations 3
Cbc0038I Pass  25: suminf.    1.45313 (3) obj. -14692.1 iterations 10
Cbc0038I Pass  26: suminf.    0.83473 (2) obj. -13501.8 iterations 7
Cbc0038I Pass  27: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  28: suminf.    0.93405 (4) obj. -15300.7 iterations 4
Cbc0038I Pass  29: suminf.    0.12630 (2) obj. -13501.8 iterations 7
Cbc0038I Pass  30: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Rounding solution of -14419 is better than previous of -13213.3

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -14419 to -14476.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -14800.6
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.48470 (2) obj. -14800.6 iterations 0
Cbc0038I Pass  31: suminf.    0.72340 (2) obj. -15665.6 iterations 6
Cbc0038I Pass  32: suminf.    0.48682 (3) obj. -14800.6 iterations 5
Cbc0038I Pass  33: suminf.    0.45297 (2) obj. -14800.6 iterations 5
Cbc0038I Pass  34: suminf.    0.48470 (2) obj. -14800.6 iterations 2
Cbc0038I Pass  35: suminf.    0.60786 (4) obj. -14800.6 iterations 8
Cbc0038I Pass  36: suminf.    0.34043 (2) obj. -14831.4 iterations 8
Cbc0038I Pass  37: suminf.    0.48470 (2) obj. -14800.6 iterations 4
Cbc0038I Pass  38: suminf.    0.48470 (2) obj. -14800.6 iterations 0
Cbc0038I Pass  39: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Pass  40: suminf.    0.20835 (3) obj. -14800.6 iterations 5
Cbc0038I Pass  41: suminf.    0.09868 (3) obj. -14800.6 iterations 8
Cbc0038I Pass  42: suminf.    0.06250 (2) obj. -15466.4 iterations 8
Cbc0038I Pass  43: suminf.    0.04545 (1) obj. -15438.3 iterations 1
Cbc0038I Pass  44: suminf.    0.19883 (1) obj. -14800.6 iterations 1
Cbc0038I Pass  45: suminf.    0.35989 (5) obj. -14800.6 iterations 8
Cbc0038I Pass  46: suminf.    0.35989 (5) obj. -14800.6 iterations 2
Cbc0038I Pass  47: suminf.    0.83332 (3) obj. -14800.6 iterations 3
Cbc0038I Pass  48: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  49: suminf.    0.80687 (2) obj. -14800.6 iterations 3
Cbc0038I Pass  50: suminf.    1.31417 (3) obj. -14800.6 iterations 4
Cbc0038I Pass  51: suminf.    0.86127 (3) obj. -14996.5 iterations 7
Cbc0038I Pass  52: suminf.    0.35989 (5) obj. -14800.6 iterations 8
Cbc0038I Pass  53: suminf.    0.83332 (3) obj. -14800.6 iterations 3
Cbc0038I Pass  54: suminf.    0.68085 (2) obj. -15257.3 iterations 3
Cbc0038I Pass  55: suminf.    0.80687 (2) obj. -14800.6 iterations 3
Cbc0038I Pass  56: suminf.    0.58724 (3) obj. -14800.6 iterations 6
Cbc0038I Pass  57: suminf.    0.48470 (2) obj. -14800.6 iterations 4
Cbc0038I Pass  58: suminf.    0.72340 (2) obj. -15665.6 iterations 4
Cbc0038I Pass  59: suminf.    1.81250 (4) obj. -14953.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 19 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14476.1 - took 0.02 seconds
Cbc0012I Integer solution of -14476.14 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 58 columns, reduced to 11 rows 8 columns
Cbc0031I 6 added rows had average density of 14.333333
Cbc0013I At root node, 6 cuts changed objective from -16098.311 to -15276.474 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 3.1 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14476.14, took 207 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 30 times (144 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

