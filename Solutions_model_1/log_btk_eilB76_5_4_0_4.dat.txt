Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 61 (-17) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 1.55051e-08 - average 1.44908e-10, 55 fixed columns
Coin0506I Presolve 5 (-102) rows, 6 (-55) columns and 16 (-314) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Coin0511I After Postsolve, objective 15986.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35446509 - largest nonzero change 1.5018368e-05 ( 0.0011689744%) - largest zero change 2.8195251e-05
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Coin0511I After Postsolve, objective 15986.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15986.46723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 61 columns (60 integer (60 of which binary)) and 345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.508929
Cbc0038I Solution found of -14330.2
Cbc0038I Relaxing continuous gives -14330.2
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -14495.9
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03716 (1) obj. -14495.9 iterations 9
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -15763 iterations 1
Cbc0038I Pass   3: suminf.    1.11106 (3) obj. -14495.9 iterations 9
Cbc0038I Pass   4: suminf.    0.31828 (3) obj. -15281.7 iterations 7
Cbc0038I Pass   5: suminf.    0.10290 (3) obj. -14495.9 iterations 8
Cbc0038I Pass   6: suminf.    0.10290 (3) obj. -14495.9 iterations 0
Cbc0038I Pass   7: suminf.    0.31828 (3) obj. -15281.7 iterations 8
Cbc0038I Pass   8: suminf.    1.25345 (5) obj. -14495.9 iterations 7
Cbc0038I Pass   9: suminf.    0.41352 (1) obj. -14495.9 iterations 9
Cbc0038I Pass  10: suminf.    0.31828 (3) obj. -15281.7 iterations 3
Cbc0038I Pass  11: suminf.    0.10290 (3) obj. -14495.9 iterations 7
Cbc0038I Pass  12: suminf.    0.10290 (3) obj. -14495.9 iterations 0
Cbc0038I Pass  13: suminf.    0.31828 (3) obj. -15281.7 iterations 7
Cbc0038I Pass  14: suminf.    0.56115 (2) obj. -15053.5 iterations 11
Cbc0038I Pass  15: suminf.    0.41361 (1) obj. -14495.9 iterations 7
Cbc0038I Pass  16: suminf.    0.48649 (1) obj. -15037 iterations 1
Cbc0038I Pass  17: suminf.    1.14935 (4) obj. -14495.9 iterations 15
Cbc0038I Pass  18: suminf.    0.03716 (1) obj. -14495.9 iterations 14
Cbc0038I Pass  19: suminf.    0.32143 (1) obj. -15763 iterations 2
Cbc0038I Pass  20: suminf.    0.76684 (3) obj. -14495.9 iterations 6
Cbc0038I Pass  21: suminf.    0.31778 (2) obj. -14495.9 iterations 3
Cbc0038I Pass  22: suminf.    0.80821 (2) obj. -14495.9 iterations 9
Cbc0038I Pass  23: suminf.    0.26014 (2) obj. -14495.9 iterations 4
Cbc0038I Pass  24: suminf.    0.36106 (3) obj. -14495.9 iterations 3
Cbc0038I Pass  25: suminf.    0.26014 (2) obj. -14495.9 iterations 4
Cbc0038I Pass  26: suminf.    1.16679 (5) obj. -14495.9 iterations 11
Cbc0038I Pass  27: suminf.    0.44000 (1) obj. -14964.5 iterations 8
Cbc0038I Pass  28: suminf.    0.01719 (1) obj. -14495.9 iterations 7
Cbc0038I Pass  29: suminf.    0.73201 (2) obj. -15334.3 iterations 2
Cbc0038I Pass  30: suminf.    0.01719 (1) obj. -14495.9 iterations 2
Cbc0038I Rounding solution of -14419.2 is better than previous of -14330.2

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -14419.2 to -14519.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -14813.1
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.10833 (1) obj. -14813.1 iterations 0
Cbc0038I Pass  31: suminf.    0.32143 (1) obj. -15763 iterations 1
Cbc0038I Pass  32: suminf.    0.52120 (3) obj. -14813.1 iterations 4
Cbc0038I Pass  33: suminf.    0.37500 (2) obj. -15159 iterations 6
Cbc0038I Pass  34: suminf.    0.59547 (3) obj. -14813.1 iterations 11
Cbc0038I Pass  35: suminf.    0.60886 (4) obj. -14813.1 iterations 10
Cbc0038I Pass  36: suminf.    0.08836 (1) obj. -14813.1 iterations 9
Cbc0038I Pass  37: suminf.    0.73201 (2) obj. -15334.3 iterations 2
Cbc0038I Pass  38: suminf.    0.08836 (1) obj. -14813.1 iterations 2
Cbc0038I Pass  39: suminf.    0.86447 (3) obj. -14813.1 iterations 10
Cbc0038I Pass  40: suminf.    1.23963 (5) obj. -14813.1 iterations 7
Cbc0038I Pass  41: suminf.    0.62463 (2) obj. -14813.1 iterations 12
Cbc0038I Pass  42: suminf.    0.62463 (2) obj. -14813.1 iterations 2
Cbc0038I Pass  43: suminf.    0.48860 (1) obj. -14813.1 iterations 3
Cbc0038I Pass  44: suminf.    0.36387 (2) obj. -15652.8 iterations 3
Cbc0038I Pass  45: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I Pass  46: suminf.    0.58262 (2) obj. -14813.1 iterations 12
Cbc0038I Pass  47: suminf.    0.47217 (1) obj. -14813.1 iterations 5
Cbc0038I Pass  48: suminf.    0.48649 (1) obj. -15037 iterations 1
Cbc0038I Pass  49: suminf.    0.31828 (3) obj. -15281.7 iterations 5
Cbc0038I Pass  50: suminf.    0.31828 (3) obj. -15281.7 iterations 0
Cbc0038I Pass  51: suminf.    0.33733 (3) obj. -14813.1 iterations 4
Cbc0038I Pass  52: suminf.    0.33733 (3) obj. -14813.1 iterations 0
Cbc0038I Pass  53: suminf.    0.55367 (2) obj. -14813.1 iterations 3
Cbc0038I Pass  54: suminf.    0.48860 (1) obj. -14813.1 iterations 2
Cbc0038I Pass  55: suminf.    0.36387 (2) obj. -15652.8 iterations 3
Cbc0038I Pass  56: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I Pass  57: suminf.    0.62463 (2) obj. -14813.1 iterations 0
Cbc0038I Pass  58: suminf.    0.62463 (2) obj. -14813.1 iterations 5
Cbc0038I Pass  59: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14519.7 - took 0.02 seconds
Cbc0012I Integer solution of -14519.74 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 61 columns, reduced to 2 rows 2 columns
Cbc0031I 4 added rows had average density of 7.75
Cbc0013I At root node, 11 cuts changed objective from -15986.467 to -14519.74 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 3.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -14519.74, took 54 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

