Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 48 (-2) columns and 266 (-19) elements
Clp1000I sum of infeasibilities 0.00085885 - average 9.65e-06, 3 fixed columns
Coin0506I Presolve 84 (-5) rows, 45 (-3) columns and 250 (-16) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 2007.6981
Clp0000I Optimal - objective value 2007.6981
Coin0511I After Postsolve, objective 2007.6981, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2007.6981
Clp0000I Optimal - objective value 2007.6981
Clp0000I Optimal - objective value 2007.6981
Coin0511I After Postsolve, objective 2007.6981, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2007.698086 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 48 columns (47 integer (47 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 12.5944
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 834.057 iterations 31
Cbc0038I Solution found of 834.057
Cbc0038I Relaxing continuous gives 834.057
Cbc0038I Rounding solution of 472.319 is better than previous of 834.057

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 56 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 472.319 to -115.628 (0.05 seconds)
Cbc0038I Round again with cutoff of -304.835
Cbc0038I Pass   2: suminf.    2.10299 (7) obj. -304.835 iterations 7
Cbc0038I Pass   3: suminf.    2.09898 (6) obj. -304.835 iterations 1
Cbc0038I Pass   4: suminf.    2.59320 (8) obj. -304.835 iterations 6
Cbc0038I Pass   5: suminf.    2.55155 (9) obj. -304.835 iterations 1
Cbc0038I Pass   6: suminf.    2.55155 (9) obj. -304.835 iterations 0
Cbc0038I Pass   7: suminf.    2.39771 (7) obj. -304.835 iterations 8
Cbc0038I Pass   8: suminf.    1.48922 (5) obj. -304.835 iterations 2
Cbc0038I Pass   9: suminf.    2.19660 (6) obj. -304.835 iterations 5
Cbc0038I Pass  10: suminf.    2.69961 (7) obj. -304.835 iterations 3
Cbc0038I Pass  11: suminf.    2.32626 (8) obj. -304.835 iterations 2
Cbc0038I Pass  12: suminf.    2.72609 (7) obj. -304.835 iterations 6
Cbc0038I Pass  13: suminf.    2.72609 (7) obj. -304.835 iterations 0
Cbc0038I Pass  14: suminf.    2.22346 (6) obj. -304.835 iterations 3
Cbc0038I Pass  15: suminf.    2.19660 (6) obj. -304.835 iterations 2
Cbc0038I Pass  16: suminf.    2.69961 (7) obj. -304.835 iterations 3
Cbc0038I Pass  17: suminf.    2.32626 (8) obj. -304.835 iterations 2
Cbc0038I Pass  18: suminf.    2.72609 (7) obj. -304.835 iterations 6
Cbc0038I Pass  19: suminf.    2.72609 (7) obj. -304.835 iterations 0
Cbc0038I Pass  20: suminf.    2.22346 (6) obj. -304.835 iterations 3
Cbc0038I Pass  21: suminf.    2.19660 (6) obj. -304.835 iterations 2
Cbc0038I Pass  22: suminf.    2.69961 (7) obj. -304.835 iterations 3
Cbc0038I Pass  23: suminf.    2.32626 (8) obj. -304.835 iterations 2
Cbc0038I Pass  24: suminf.    2.72609 (7) obj. -304.835 iterations 6
Cbc0038I Pass  25: suminf.    2.72609 (7) obj. -304.835 iterations 0
Cbc0038I Pass  26: suminf.    2.22346 (6) obj. -304.835 iterations 3
Cbc0038I Pass  27: suminf.    2.19660 (6) obj. -304.835 iterations 2
Cbc0038I Pass  28: suminf.    2.69961 (7) obj. -304.835 iterations 3
Cbc0038I Pass  29: suminf.    2.32626 (8) obj. -304.835 iterations 2
Cbc0038I Pass  30: suminf.    2.72609 (7) obj. -304.835 iterations 6
Cbc0038I Pass  31: suminf.    2.72609 (7) obj. -304.835 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 56 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -115.628 - took 0.11 seconds
Cbc0012I Integer solution of -115.628 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 89 rows 48 columns, reduced to 56 rows 34 columns
Cbc0031I 29 added rows had average density of 31.551724
Cbc0013I At root node, 29 cuts changed objective from -2007.6981 to -1209.2986 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7472 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1791 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 44.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -115.628 best solution, best possible -1209.2986 (0.72 seconds)
Cbc0004I Integer solution of -316.967 found after 8179 iterations and 21 nodes (0.92 seconds)
Cbc0001I Search completed - best objective -316.967, took 8772 iterations and 30 nodes (0.94 seconds)
Cbc0032I Strong branching done 448 times (10786 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 14, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.95

