Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-62) rows, 77 (-26) columns and 434 (-169) elements
Clp1000I sum of infeasibilities 3.9939e-06 - average 2.79294e-08, 57 fixed columns
Coin0506I Presolve 24 (-119) rows, 18 (-59) columns and 78 (-356) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 0.32904934 - largest nonzero change 0 ( 0%) - largest zero change 1.9533613e-05
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Coin0511I After Postsolve, objective 21765.854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8199859 - largest nonzero change 1.5013563e-05 ( 0.0015013563%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Coin0511I After Postsolve, objective 21765.854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21765.85427 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 142 rows, 77 columns (76 integer (76 of which binary)) and 448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.391%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.80583
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20564 iterations 27
Cbc0038I Solution found of -20564
Cbc0038I Relaxing continuous gives -20564
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -20684.2
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04046 (2) obj. -20684.2 iterations 11
Cbc0038I Pass   3: suminf.    0.48048 (3) obj. -21724.5 iterations 22
Cbc0038I Pass   4: suminf.    0.47696 (5) obj. -20684.2 iterations 17
Cbc0038I Pass   5: suminf.    0.44953 (2) obj. -20684.2 iterations 12
Cbc0038I Pass   6: suminf.    0.46154 (2) obj. -20719.8 iterations 12
Cbc0038I Pass   7: suminf.    1.04777 (4) obj. -20684.2 iterations 19
Cbc0038I Pass   8: suminf.    0.93853 (3) obj. -20684.2 iterations 11
Cbc0038I Pass   9: suminf.    0.86957 (3) obj. -21624 iterations 13
Cbc0038I Pass  10: suminf.    0.82558 (3) obj. -21624.2 iterations 2
Cbc0038I Pass  11: suminf.    0.30867 (2) obj. -20684.2 iterations 13
Cbc0038I Pass  12: suminf.    0.25641 (2) obj. -20839.4 iterations 11
Cbc0038I Pass  13: suminf.    0.54509 (4) obj. -20684.2 iterations 12
Cbc0038I Pass  14: suminf.    0.54509 (4) obj. -20684.2 iterations 3
Cbc0038I Pass  15: suminf.    0.59198 (3) obj. -20684.2 iterations 14
Cbc0038I Pass  16: suminf.    0.48600 (2) obj. -20684.2 iterations 5
Cbc0038I Pass  17: suminf.    0.51282 (2) obj. -21144 iterations 12
Cbc0038I Pass  18: suminf.    0.51282 (2) obj. -21144 iterations 0
Cbc0038I Pass  19: suminf.    0.66762 (2) obj. -20684.2 iterations 11
Cbc0038I Pass  20: suminf.    0.83599 (7) obj. -20684.2 iterations 20
Cbc0038I Pass  21: suminf.    0.81517 (6) obj. -20684.2 iterations 9
Cbc0038I Pass  22: suminf.    0.98765 (5) obj. -21077.2 iterations 19
Cbc0038I Pass  23: suminf.    0.79951 (2) obj. -20684.2 iterations 11
Cbc0038I Pass  24: suminf.    0.82051 (2) obj. -20746.5 iterations 11
Cbc0038I Pass  25: suminf.    1.41943 (6) obj. -21021.1 iterations 5
Cbc0038I Pass  26: suminf.    0.42262 (2) obj. -20684.2 iterations 10
Cbc0038I Pass  27: suminf.    0.42262 (2) obj. -20684.2 iterations 3
Cbc0038I Pass  28: suminf.    0.81481 (2) obj. -21246.4 iterations 5
Cbc0038I Pass  29: suminf.    0.77387 (3) obj. -21292 iterations 1
Cbc0038I Pass  30: suminf.    1.06947 (5) obj. -20684.2 iterations 14
Cbc0038I Pass  31: suminf.    0.46828 (2) obj. -20684.2 iterations 14
Cbc0038I Rounding solution of -20643.9 is better than previous of -20564

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -20643.9 to -20783 (0.03 seconds)
Cbc0038I Round again with cutoff of -20979.5
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.13990 (2) obj. -20979.5 iterations 0
Cbc0038I Pass  32: suminf.    0.48048 (3) obj. -21724.5 iterations 22
Cbc0038I Pass  33: suminf.    0.35238 (4) obj. -20979.5 iterations 15
Cbc0038I Pass  34: suminf.    0.11298 (2) obj. -20979.5 iterations 15
Cbc0038I Pass  35: suminf.    0.86957 (3) obj. -21624 iterations 10
Cbc0038I Pass  36: suminf.    0.82558 (3) obj. -21624.2 iterations 2
Cbc0038I Pass  37: suminf.    0.68781 (5) obj. -20979.5 iterations 11
Cbc0038I Pass  38: suminf.    0.53244 (3) obj. -20979.5 iterations 8
Cbc0038I Pass  39: suminf.    0.95935 (2) obj. -20979.5 iterations 9
Cbc0038I Pass  40: suminf.    1.31640 (3) obj. -20979.5 iterations 6
Cbc0038I Pass  41: suminf.    1.03241 (4) obj. -20979.5 iterations 8
Cbc0038I Pass  42: suminf.    1.23982 (7) obj. -20979.5 iterations 11
Cbc0038I Pass  43: suminf.    0.74346 (5) obj. -21362.3 iterations 12
Cbc0038I Pass  44: suminf.    0.42649 (2) obj. -20979.5 iterations 12
Cbc0038I Pass  45: suminf.    0.51282 (2) obj. -21236 iterations 9
Cbc0038I Pass  46: suminf.    1.21125 (3) obj. -20979.5 iterations 13
Cbc0038I Pass  47: suminf.    0.51282 (2) obj. -21144 iterations 7
Cbc0038I Pass  48: suminf.    0.56819 (2) obj. -20979.5 iterations 9
Cbc0038I Pass  49: suminf.    0.85207 (3) obj. -20979.5 iterations 11
Cbc0038I Pass  50: suminf.    0.85207 (3) obj. -20979.5 iterations 2
Cbc0038I Pass  51: suminf.    1.00382 (3) obj. -20979.5 iterations 14
Cbc0038I Pass  52: suminf.    0.49648 (2) obj. -20979.5 iterations 3
Cbc0038I Pass  53: suminf.    0.72597 (2) obj. -20979.5 iterations 11
Cbc0038I Pass  54: suminf.    0.81481 (2) obj. -21246.4 iterations 4
Cbc0038I Pass  55: suminf.    0.77387 (3) obj. -21292 iterations 1
Cbc0038I Pass  56: suminf.    1.92114 (6) obj. -20979.5 iterations 9
Cbc0038I Pass  57: suminf.    0.98765 (5) obj. -21077.2 iterations 10
Cbc0038I Pass  58: suminf.    0.93828 (5) obj. -20979.5 iterations 8
Cbc0038I Pass  59: suminf.    1.55403 (7) obj. -20979.5 iterations 11
Cbc0038I Pass  60: suminf.    0.93828 (5) obj. -20979.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 28 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -20783 - took 0.03 seconds
Cbc0012I Integer solution of -20782.95 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 142 rows 77 columns, reduced to 13 rows 12 columns
Cbc0031I 9 added rows had average density of 27.555556
Cbc0013I At root node, 9 cuts changed objective from -21765.854 to -21399.294 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0010I After 13 nodes, 3 on tree, -20782.95 best solution, best possible -21379.481 (0.70 seconds)
Cbc0001I Search completed - best objective -20782.95, took 407 iterations and 16 nodes (0.76 seconds)
Cbc0032I Strong branching done 132 times (804 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.76

