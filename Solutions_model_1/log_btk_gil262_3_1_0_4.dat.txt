Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 372 (-155) rows, 193 (-71) columns and 1114 (-431) elements
Clp1000I sum of infeasibilities 0.000615899 - average 1.65564e-06, 180 fixed columns
Coin0506I Presolve 12 (-360) rows, 12 (-181) columns and 43 (-1071) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 242391.16
Clp0000I Optimal - objective value 242391.16
Coin0511I After Postsolve, objective 242391.16, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14716546 - largest nonzero change 0 ( 0%) - largest zero change 2.9979603e-05
Clp0000I Optimal - objective value 242391.16
Clp0000I Optimal - objective value 242391.16
Clp0000I Optimal - objective value 242391.16
Coin0511I After Postsolve, objective 242391.16, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 242391.1647 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 372 rows, 193 columns (192 integer (192 of which binary)) and 1114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.495%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 0.365413
Cbc0038I Pass   1: suminf.    0.04225 (1) obj. -241549 iterations 46
Cbc0038I Solution found of -222936
Cbc0038I Relaxing continuous gives -222936
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 193 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -224882
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04225 (1) obj. -241549 iterations 0
Cbc0038I Pass   3: suminf.    0.07477 (8) obj. -224882 iterations 41
Cbc0038I Pass   4: suminf.    2.06919 (5) obj. -224882 iterations 23
Cbc0038I Pass   5: suminf.    2.00922 (6) obj. -224882 iterations 8
Cbc0038I Pass   6: suminf.    0.07477 (8) obj. -224882 iterations 45
Cbc0038I Pass   7: suminf.    3.07224 (7) obj. -224882 iterations 42
Cbc0038I Pass   8: suminf.    1.68460 (10) obj. -224882 iterations 30
Cbc0038I Pass   9: suminf.    2.62855 (7) obj. -224882 iterations 27
Cbc0038I Pass  10: suminf.    2.62855 (7) obj. -224882 iterations 14
Cbc0038I Pass  11: suminf.    3.17173 (7) obj. -224882 iterations 24
Cbc0038I Pass  12: suminf.    1.68460 (10) obj. -224882 iterations 24
Cbc0038I Pass  13: suminf.    1.68460 (10) obj. -224882 iterations 0
Cbc0038I Pass  14: suminf.    2.62855 (7) obj. -224882 iterations 25
Cbc0038I Pass  15: suminf.    2.62855 (7) obj. -224882 iterations 12
Cbc0038I Pass  16: suminf.    3.17173 (7) obj. -224882 iterations 24
Cbc0038I Pass  17: suminf.    1.68460 (10) obj. -224882 iterations 24
Cbc0038I Pass  18: suminf.    1.68460 (10) obj. -224882 iterations 0
Cbc0038I Pass  19: suminf.    2.62855 (7) obj. -224882 iterations 26
Cbc0038I Pass  20: suminf.    2.62855 (7) obj. -224882 iterations 13
Cbc0038I Pass  21: suminf.    3.17173 (7) obj. -224882 iterations 23
Cbc0038I Pass  22: suminf.    1.68460 (10) obj. -224882 iterations 24
Cbc0038I Pass  23: suminf.    1.68460 (10) obj. -224882 iterations 0
Cbc0038I Pass  24: suminf.    2.62855 (7) obj. -224882 iterations 25
Cbc0038I Pass  25: suminf.    2.62855 (7) obj. -224882 iterations 12
Cbc0038I Pass  26: suminf.    3.17173 (7) obj. -224882 iterations 24
Cbc0038I Pass  27: suminf.    1.68460 (10) obj. -224882 iterations 24
Cbc0038I Pass  28: suminf.    1.68460 (10) obj. -224882 iterations 0
Cbc0038I Pass  29: suminf.    2.62855 (7) obj. -224882 iterations 25
Cbc0038I Pass  30: suminf.    2.62855 (7) obj. -224882 iterations 12
Cbc0038I Pass  31: suminf.    3.17173 (7) obj. -224882 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 193 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -222936 - took 0.05 seconds
Cbc0012I Integer solution of -222936.19 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 372 rows 193 columns, reduced to 2 rows 2 columns
Cbc0031I 6 added rows had average density of 48.333333
Cbc0013I At root node, 6 cuts changed objective from -242391.16 to -234858.45 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.0 elements, 46 column cuts (46 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 55.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 55.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 30 row cuts average 54.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 188.1 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -222936.19 best solution, best possible -234655.85 (0.79 seconds)
Cbc0012I Integer solution of -225206.09 found by DiveCoefficient after 330 iterations and 6 nodes (1.41 seconds)
Cbc0010I After 10 nodes, 4 on tree, -225206.09 best solution, best possible -234655.85 (1.65 seconds)
Cbc0001I Search completed - best objective -225206.092, took 514 iterations and 14 nodes (1.65 seconds)
Cbc0032I Strong branching done 122 times (1182 iterations), fathomed 3 nodes and fixed 7 variables
Cbc0035I Maximum depth 6, 75 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.67

