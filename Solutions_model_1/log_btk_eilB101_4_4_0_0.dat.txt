Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 171 (-34) rows, 92 (-11) columns and 518 (-85) elements
Clp1000I sum of infeasibilities 1.83781e-05 - average 1.07474e-07, 24 fixed columns
Coin0506I Presolve 123 (-48) rows, 67 (-25) columns and 372 (-146) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Coin0511I After Postsolve, objective 113.9485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Coin0511I After Postsolve, objective 113.9485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.9484969 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 170 rows, 92 columns (91 integer (91 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.59936
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.7636 iterations 56
Cbc0038I Solution found of -18.7636
Cbc0038I Relaxing continuous gives -18.7636
Cbc0038I Rounding solution of -52.5543 is better than previous of -18.7636

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 92 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -52.5543 to -81.4367 (0.04 seconds)
Cbc0038I Round again with cutoff of -84.6774
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.25349 (5) obj. -84.6774 iterations 12
Cbc0038I Pass   3: suminf.    1.25349 (5) obj. -84.6774 iterations 0
Cbc0038I Pass   4: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass   5: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass   6: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass   7: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass   8: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass   9: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  10: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  11: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  12: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  13: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  14: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  15: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  16: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  17: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  18: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  19: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  20: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  21: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  22: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  23: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  24: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  25: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  26: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  27: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  28: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  29: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  30: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  31: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 92 columns, reduced to 66 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -81.4367 - took 0.05 seconds
Cbc0012I Integer solution of -81.43666 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 170 rows 92 columns, reduced to 59 rows 33 columns
Cbc0031I 21 added rows had average density of 32.714286
Cbc0013I At root node, 21 cuts changed objective from -113.84334 to -103.99918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7387 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 949 row cuts average 88.5 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 88.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -81.43666 best solution, best possible -103.99918 (0.74 seconds)
Cbc0001I Search completed - best objective -81.43665999999999, took 7313 iterations and 32 nodes (0.88 seconds)
Cbc0032I Strong branching done 388 times (7025 iterations), fathomed 6 nodes and fixed 35 variables
Cbc0035I Maximum depth 8, 106 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.89

