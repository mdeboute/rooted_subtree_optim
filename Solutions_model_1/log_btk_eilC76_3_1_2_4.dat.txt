Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 0.00131137 - average 9.43431e-06, 10 fixed columns
Coin0506I Presolve 121 (-18) rows, 66 (-10) columns and 366 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Coin0511I After Postsolve, objective 35.5688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Coin0511I After Postsolve, objective 35.5688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.56879966 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 8.93939
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.82169 iterations 62
Cbc0038I Solution found of 3.82169
Cbc0038I Relaxing continuous gives 3.82169
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 3.82169 to -4.52566 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.63006
Cbc0038I Pass   2: suminf.    1.11204 (23) obj. -7.63006 iterations 33
Cbc0038I Pass   3: suminf.    0.89211 (52) obj. -7.63006 iterations 27
Cbc0038I Pass   4: suminf.    1.56772 (10) obj. -7.63006 iterations 54
Cbc0038I Pass   5: suminf.    0.95089 (6) obj. -7.63006 iterations 4
Cbc0038I Pass   6: suminf.    1.23807 (8) obj. -7.63006 iterations 13
Cbc0038I Pass   7: suminf.    1.23807 (8) obj. -7.63006 iterations 0
Cbc0038I Pass   8: suminf.    1.60663 (5) obj. -7.63006 iterations 12
Cbc0038I Pass   9: suminf.    1.68469 (6) obj. -7.63006 iterations 11
Cbc0038I Pass  10: suminf.    0.73082 (4) obj. -7.63006 iterations 4
Cbc0038I Pass  11: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  12: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  13: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  14: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  15: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  16: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  17: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  18: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  19: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  20: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  21: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  22: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  23: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  24: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  25: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  26: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  27: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  28: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  29: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  30: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  31: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 107 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -4.52566 to -4.53346 (0.12 seconds)
Cbc0038I Round again with cutoff of -13.2178
Cbc0038I Pass  31: suminf.    3.01204 (23) obj. -13.2178 iterations 0
Cbc0038I Pass  32: suminf.    2.62262 (9) obj. -13.2178 iterations 28
Cbc0038I Pass  33: suminf.    2.25840 (8) obj. -13.2178 iterations 2
Cbc0038I Pass  34: suminf.    3.13266 (10) obj. -13.2178 iterations 29
Cbc0038I Pass  35: suminf.    2.90633 (18) obj. -13.2178 iterations 8
Cbc0038I Pass  36: suminf.    1.26445 (7) obj. -13.2178 iterations 28
Cbc0038I Pass  37: suminf.    1.14122 (6) obj. -13.2178 iterations 4
Cbc0038I Pass  38: suminf.    2.87027 (9) obj. -13.2178 iterations 11
Cbc0038I Pass  39: suminf.    2.44748 (13) obj. -13.2178 iterations 7
Cbc0038I Pass  40: suminf.    2.40353 (12) obj. -13.2178 iterations 1
Cbc0038I Pass  41: suminf.    1.68125 (9) obj. -13.2178 iterations 12
Cbc0038I Pass  42: suminf.    1.64340 (8) obj. -13.2178 iterations 9
Cbc0038I Pass  43: suminf.    2.21040 (8) obj. -13.2178 iterations 14
Cbc0038I Pass  44: suminf.    1.82752 (7) obj. -13.2178 iterations 2
Cbc0038I Pass  45: suminf.    1.82075 (7) obj. -13.2178 iterations 2
Cbc0038I Pass  46: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  47: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  48: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  49: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  50: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I Pass  51: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  52: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  53: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  54: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  55: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I Pass  56: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  57: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  58: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  59: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  60: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -4.53346 - took 0.15 seconds
Cbc0012I Integer solution of -4.53346 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0031I 20 added rows had average density of 65.2
Cbc0013I At root node, 20 cuts changed objective from -35.5688 to -29.493615 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12993 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1782 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.53346 best solution, best possible -29.493615 (1.02 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 30 rows 18 columns
Cbc0004I Integer solution of -4.6571 found after 10082 iterations and 60 nodes (1.28 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 78 rows 44 columns
Cbc0001I Search completed - best objective -4.6571, took 12869 iterations and 132 nodes (1.65 seconds)
Cbc0032I Strong branching done 1514 times (25570 iterations), fathomed 4 nodes and fixed 55 variables
Cbc0035I Maximum depth 29, 196 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       1.66

