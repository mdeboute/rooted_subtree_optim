Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 62 (-16) columns and 335 (-118) elements
Clp1000I sum of infeasibilities 0.000152213 - average 1.39645e-06, 53 fixed columns
Coin0506I Presolve 9 (-100) rows, 9 (-53) columns and 29 (-306) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 17218.126
Clp0000I Optimal - objective value 17218.126
Coin0511I After Postsolve, objective 17218.126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26986367 - largest nonzero change 2.7588992e-05 ( 0.0023693761%) - largest zero change 2.4798178e-05
Clp0000I Optimal - objective value 17218.126
Clp0000I Optimal - objective value 17218.126
Clp0000I Optimal - objective value 17218.126
Coin0511I After Postsolve, objective 17218.126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17218.12608 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 109 rows, 62 columns (61 integer (61 of which binary)) and 335 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.381%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.27704
Cbc0038I Pass   1: suminf.    0.45833 (1) obj. -15855 iterations 19
Cbc0038I Solution found of -13996.6
Cbc0038I Relaxing continuous gives -13996.6
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 62 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -13996.6 to -15492.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -15665
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45833 (1) obj. -15855 iterations 0
Cbc0038I Pass   3: suminf.    0.48629 (1) obj. -15665 iterations 2
Cbc0038I Pass   4: suminf.    1.33007 (5) obj. -15665 iterations 8
Cbc0038I Pass   5: suminf.    1.01273 (6) obj. -15665 iterations 5
Cbc0038I Pass   6: suminf.    0.52829 (4) obj. -15665 iterations 12
Cbc0038I Pass   7: suminf.    0.52829 (4) obj. -15665 iterations 5
Cbc0038I Pass   8: suminf.    1.33333 (4) obj. -16433.2 iterations 4
Cbc0038I Pass   9: suminf.    0.52829 (4) obj. -15665 iterations 8
Cbc0038I Pass  10: suminf.    1.01134 (11) obj. -15665 iterations 16
Cbc0038I Pass  11: suminf.    0.49649 (3) obj. -15665 iterations 9
Cbc0038I Pass  12: suminf.    0.46978 (4) obj. -15665 iterations 9
Cbc0038I Pass  13: suminf.    0.77788 (5) obj. -15665 iterations 16
Cbc0038I Pass  14: suminf.    0.73705 (6) obj. -15665 iterations 6
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -16265.8 iterations 9
Cbc0038I Solution found of -16265.8
Cbc0038I Relaxing continuous gives -16265.8
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 62 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -16456.3
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  16: suminf.    0.55536 (6) obj. -16456.3 iterations 3
Cbc0038I Pass  17: suminf.    1.02435 (4) obj. -16456.3 iterations 15
Cbc0038I Pass  18: suminf.    0.42791 (2) obj. -16834.7 iterations 11
Cbc0038I Pass  19: suminf.    0.38297 (1) obj. -16456.3 iterations 4
Cbc0038I Pass  20: suminf.    0.38297 (1) obj. -16456.3 iterations 0
Cbc0038I Pass  21: suminf.    0.45603 (5) obj. -16456.3 iterations 9
Cbc0038I Pass  22: suminf.    0.41137 (6) obj. -16456.3 iterations 5
Cbc0038I Pass  23: suminf.    1.71850 (5) obj. -16456.3 iterations 13
Cbc0038I Pass  24: suminf.    1.65517 (6) obj. -16456.3 iterations 5
Cbc0038I Pass  25: suminf.    0.44444 (4) obj. -16692.8 iterations 7
Cbc0038I Pass  26: suminf.    0.27892 (2) obj. -16456.3 iterations 7
Cbc0038I Pass  27: suminf.    0.44651 (2) obj. -16520.7 iterations 10
Cbc0038I Pass  28: suminf.    0.44651 (2) obj. -16520.7 iterations 0
Cbc0038I Pass  29: suminf.    0.49936 (1) obj. -16456.3 iterations 4
Cbc0038I Pass  30: suminf.    2.95103 (7) obj. -16456.3 iterations 14
Cbc0038I Pass  31: suminf.    0.90708 (4) obj. -16456.3 iterations 10
Cbc0038I Pass  32: suminf.    0.90708 (4) obj. -16456.3 iterations 0
Cbc0038I Pass  33: suminf.    1.19895 (5) obj. -16922 iterations 13
Cbc0038I Pass  34: suminf.    1.19895 (5) obj. -16922 iterations 0
Cbc0038I Pass  35: suminf.    0.90708 (4) obj. -16456.3 iterations 10
Cbc0038I Pass  36: suminf.    1.34317 (6) obj. -16456.3 iterations 7
Cbc0038I Pass  37: suminf.    0.43111 (2) obj. -16456.3 iterations 8
Cbc0038I Pass  38: suminf.    0.39324 (5) obj. -16456.3 iterations 10
Cbc0038I Pass  39: suminf.    0.27892 (2) obj. -16456.3 iterations 5
Cbc0038I Pass  40: suminf.    0.44651 (2) obj. -16520.7 iterations 10
Cbc0038I Pass  41: suminf.    0.44651 (2) obj. -16520.7 iterations 0
Cbc0038I Pass  42: suminf.    0.49936 (1) obj. -16456.3 iterations 4
Cbc0038I Pass  43: suminf.    0.74169 (3) obj. -16456.3 iterations 6
Cbc0038I Pass  44: suminf.    0.92341 (4) obj. -16652.6 iterations 9
Cbc0038I Pass  45: suminf.    0.90756 (3) obj. -16456.3 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 62 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -16265.8 to -16384.3 (0.03 seconds)
Cbc0038I Round again with cutoff of -16684.8
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 4
Cbc0038I Pass  45: suminf.    0.60170 (6) obj. -16684.8 iterations 0
Cbc0038I Pass  46: suminf.    0.86432 (4) obj. -16684.8 iterations 14
Cbc0038I Pass  47: suminf.    0.46154 (1) obj. -16975.2 iterations 9
Cbc0038I Pass  48: suminf.    0.45146 (1) obj. -16684.8 iterations 3
Cbc0038I Pass  49: suminf.    0.94826 (4) obj. -16684.8 iterations 4
Cbc0038I Pass  50: suminf.    0.94567 (3) obj. -16684.8 iterations 3
Cbc0038I Pass  51: suminf.    0.51529 (3) obj. -16684.8 iterations 7
Cbc0038I Pass  52: suminf.    0.60170 (6) obj. -16684.8 iterations 8
Cbc0038I Pass  53: suminf.    0.86432 (4) obj. -16684.8 iterations 12
Cbc0038I Pass  54: suminf.    0.46154 (1) obj. -16975.2 iterations 7
Cbc0038I Pass  55: suminf.    0.45146 (1) obj. -16684.8 iterations 2
Cbc0038I Pass  56: suminf.    0.51529 (3) obj. -16684.8 iterations 8
Cbc0038I Pass  57: suminf.    0.51529 (3) obj. -16684.8 iterations 0
Cbc0038I Pass  58: suminf.    0.60170 (6) obj. -16684.8 iterations 8
Cbc0038I Pass  59: suminf.    0.86432 (4) obj. -16684.8 iterations 12
Cbc0038I Pass  60: suminf.    0.46154 (1) obj. -16975.2 iterations 7
Cbc0038I Pass  61: suminf.    0.45146 (1) obj. -16684.8 iterations 2
Cbc0038I Pass  62: suminf.    1.05219 (4) obj. -16684.8 iterations 6
Cbc0038I Pass  63: suminf.    0.89069 (3) obj. -16684.8 iterations 8
Cbc0038I Pass  64: suminf.    0.51989 (2) obj. -16684.8 iterations 4
Cbc0038I Pass  65: suminf.    0.51529 (3) obj. -16684.8 iterations 8
Cbc0038I Pass  66: suminf.    0.60170 (6) obj. -16684.8 iterations 8
Cbc0038I Pass  67: suminf.    0.86432 (4) obj. -16684.8 iterations 12
Cbc0038I Pass  68: suminf.    0.46154 (1) obj. -16975.2 iterations 7
Cbc0038I Pass  69: suminf.    0.45146 (1) obj. -16684.8 iterations 2
Cbc0038I Pass  70: suminf.    1.14299 (4) obj. -16684.8 iterations 7
Cbc0038I Pass  71: suminf.    0.45146 (1) obj. -16684.8 iterations 7
Cbc0038I Pass  72: suminf.    0.95512 (4) obj. -16684.8 iterations 11
Cbc0038I Pass  73: suminf.    0.89069 (3) obj. -16684.8 iterations 6
Cbc0038I Pass  74: suminf.    0.51989 (2) obj. -16684.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 62 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -16384.3 - took 0.03 seconds
Cbc0012I Integer solution of -16384.28 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 109 rows 62 columns, reduced to 4 rows 6 columns
Cbc0031I 4 added rows had average density of 12.5
Cbc0013I At root node, 4 cuts changed objective from -17218.126 to -16708.197 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16384.28, took 203 iterations and 6 nodes (0.07 seconds)
Cbc0032I Strong branching done 52 times (217 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 50 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

