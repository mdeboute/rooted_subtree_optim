Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 341 (-10) rows, 172 (-4) columns and 1020 (-23) elements
Clp1000I sum of infeasibilities 5.36839e-06 - average 1.57431e-08, 129 fixed columns
Coin0506I Presolve 82 (-259) rows, 43 (-129) columns and 244 (-776) elements
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Coin0511I After Postsolve, objective 8563256.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30425414 - largest nonzero change 0 ( 0%) - largest zero change 2.9727844e-05
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Coin0511I After Postsolve, objective 8563256.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8563256.529 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 341 rows, 172 columns (171 integer (171 of which binary)) and 1020 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.571%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 15.3656
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.54979e+06 iterations 86
Cbc0038I Solution found of -5.54979e+06
Cbc0038I Relaxing continuous gives -5.54979e+06
Cbc0038I Rounding solution of -7.16307e+06 is better than previous of -5.54979e+06

Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 172 columns, reduced to 82 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -7.16307e+06 to -8.44618e+06 (0.01 seconds)
Cbc0038I Round again with cutoff of -8.45789e+06
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    8.84262 (37) obj. -8.45789e+06 iterations 76
Cbc0038I Pass   3: suminf.    8.84262 (37) obj. -8.45789e+06 iterations 1
Cbc0038I Pass   4: suminf.    9.49487 (29) obj. -8.45789e+06 iterations 37
Cbc0038I Pass   5: suminf.   14.10358 (32) obj. -8.45789e+06 iterations 28
Cbc0038I Pass   6: suminf.   12.58639 (32) obj. -8.45789e+06 iterations 47
Cbc0038I Pass   7: suminf.   12.19650 (31) obj. -8.45789e+06 iterations 17
Cbc0038I Pass   8: suminf.   12.19442 (31) obj. -8.45789e+06 iterations 1
Cbc0038I Pass   9: suminf.   13.51904 (30) obj. -8.45789e+06 iterations 29
Cbc0038I Pass  10: suminf.    9.55609 (31) obj. -8.45789e+06 iterations 22
Cbc0038I Pass  11: suminf.    5.66856 (32) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  12: suminf.    5.66856 (32) obj. -8.45789e+06 iterations 1
Cbc0038I Pass  13: suminf.    8.86182 (23) obj. -8.45789e+06 iterations 51
Cbc0038I Pass  14: suminf.    8.40372 (19) obj. -8.45789e+06 iterations 19
Cbc0038I Pass  15: suminf.    8.03259 (19) obj. -8.45789e+06 iterations 55
Cbc0038I Pass  16: suminf.    8.03259 (19) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  17: suminf.    8.19148 (19) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  18: suminf.    8.90247 (30) obj. -8.45789e+06 iterations 15
Cbc0038I Pass  19: suminf.    6.88836 (32) obj. -8.45789e+06 iterations 19
Cbc0038I Pass  20: suminf.    6.61784 (30) obj. -8.45789e+06 iterations 6
Cbc0038I Pass  21: suminf.    9.26904 (25) obj. -8.45789e+06 iterations 52
Cbc0038I Pass  22: suminf.    7.03384 (21) obj. -8.45789e+06 iterations 22
Cbc0038I Pass  23: suminf.    6.86091 (22) obj. -8.45789e+06 iterations 26
Cbc0038I Pass  24: suminf.    6.37834 (32) obj. -8.45789e+06 iterations 14
Cbc0038I Pass  25: suminf.    5.95991 (32) obj. -8.45789e+06 iterations 20
Cbc0038I Pass  26: suminf.    6.79748 (15) obj. -8.45789e+06 iterations 10
Cbc0038I Pass  27: suminf.    6.75758 (18) obj. -8.45789e+06 iterations 1
Cbc0038I Pass  28: suminf.    8.35181 (36) obj. -8.45789e+06 iterations 32
Cbc0038I Pass  29: suminf.    8.23910 (35) obj. -8.45789e+06 iterations 5
Cbc0038I Pass  30: suminf.    9.98537 (23) obj. -8.45789e+06 iterations 39
Cbc0038I Pass  31: suminf.    9.06926 (23) obj. -8.45789e+06 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 113 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 172 columns, reduced to 101 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -8.44618e+06 - took 0.03 seconds
Cbc0012I Integer solution of -8446177.7 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 341 rows 172 columns, reduced to 82 rows 43 columns
Cbc0031I 9 added rows had average density of 73.444444
Cbc0013I At root node, 9 cuts changed objective from -8563256.5 to -8450745.3 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 616 row cuts average 3.0 elements, 20 column cuts (20 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8446177.699999999, took 155 iterations and 0 nodes (0.11 seconds)
Cbc0032I Strong branching done 12 times (149 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

