Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 57 (-21) columns and 311 (-142) elements
Clp1000I sum of infeasibilities 1.42669e-05 - average 1.39871e-07, 26 fixed columns
Coin0506I Presolve 33 (-69) rows, 25 (-32) columns and 110 (-201) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 1138.515
Clp0000I Optimal - objective value 1138.515
Coin0511I After Postsolve, objective 1138.515, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1138.515
Clp0000I Optimal - objective value 1138.515
Clp0000I Optimal - objective value 1138.515
Coin0511I After Postsolve, objective 1138.515, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1138.515017 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 102 rows, 57 columns (56 integer (56 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.526%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.66372
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -979.501 iterations 28
Cbc0038I Solution found of -979.501
Cbc0038I Relaxing continuous gives -979.501
Cbc0038I Rounding solution of -1022.99 is better than previous of -979.501

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 57 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -1022.99 to -1032.66 (0.01 seconds)
Cbc0038I Round again with cutoff of -1043.25
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.62740 (2) obj. -1043.25 iterations 7
Cbc0038I Pass   3: suminf.    0.48485 (1) obj. -1113.62 iterations 11
Cbc0038I Pass   4: suminf.    0.02128 (1) obj. -1043.25 iterations 2
Cbc0038I Pass   5: suminf.    1.40950 (5) obj. -1043.25 iterations 17
Cbc0038I Pass   6: suminf.    0.79826 (4) obj. -1043.25 iterations 9
Cbc0038I Pass   7: suminf.    0.61470 (2) obj. -1043.25 iterations 6
Cbc0038I Pass   8: suminf.    0.30303 (1) obj. -1087.92 iterations 5
Cbc0038I Pass   9: suminf.    0.38347 (1) obj. -1043.25 iterations 2
Cbc0038I Pass  10: suminf.    0.29630 (1) obj. -1043.25 iterations 22
Cbc0038I Pass  11: suminf.    0.29630 (1) obj. -1043.25 iterations 4
Cbc0038I Pass  12: suminf.    0.53517 (2) obj. -1043.25 iterations 7
Cbc0038I Pass  13: suminf.    0.36816 (2) obj. -1048.57 iterations 7
Cbc0038I Pass  14: suminf.    1.04550 (6) obj. -1043.25 iterations 18
Cbc0038I Pass  15: suminf.    0.67664 (4) obj. -1043.25 iterations 11
Cbc0038I Pass  16: suminf.    0.31769 (2) obj. -1043.25 iterations 9
Cbc0038I Pass  17: suminf.    0.31769 (2) obj. -1043.25 iterations 0
Cbc0038I Pass  18: suminf.    1.12518 (3) obj. -1067.21 iterations 4
Cbc0038I Pass  19: suminf.    0.54054 (3) obj. -1058.04 iterations 3
Cbc0038I Pass  20: suminf.    0.33714 (1) obj. -1043.25 iterations 3
Cbc0038I Pass  21: suminf.    3.09109 (11) obj. -1043.25 iterations 21
Cbc0038I Pass  22: suminf.    1.14076 (4) obj. -1043.25 iterations 15
Cbc0038I Pass  23: suminf.    1.06263 (3) obj. -1043.25 iterations 1
Cbc0038I Pass  24: suminf.    1.12518 (3) obj. -1067.21 iterations 6
Cbc0038I Pass  25: suminf.    0.54054 (3) obj. -1058.04 iterations 3
Cbc0038I Pass  26: suminf.    0.33714 (1) obj. -1043.25 iterations 3
Cbc0038I Pass  27: suminf.    1.47354 (10) obj. -1043.25 iterations 17
Cbc0038I Pass  28: suminf.    0.43313 (3) obj. -1043.25 iterations 11
Cbc0038I Pass  29: suminf.    1.19827 (6) obj. -1043.25 iterations 12
Cbc0038I Pass  30: suminf.    0.51624 (4) obj. -1043.25 iterations 10
Cbc0038I Pass  31: suminf.    2.90819 (10) obj. -1043.25 iterations 9
Cbc0038I Rounding solution of -1069.69 is better than previous of -1032.66

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 57 columns, reduced to 27 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -1069.69 to -1094.73 (0.03 seconds)
Cbc0038I Round again with cutoff of -1103.49
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.77973 (2) obj. -1103.49 iterations 0
Cbc0038I Pass  32: suminf.    0.48485 (1) obj. -1113.62 iterations 11
Cbc0038I Pass  33: suminf.    0.44402 (1) obj. -1103.49 iterations 2
Cbc0038I Pass  34: suminf.    0.62549 (4) obj. -1103.49 iterations 11
Cbc0038I Pass  35: suminf.    0.47099 (4) obj. -1103.49 iterations 9
Cbc0038I Pass  36: suminf.    0.48871 (4) obj. -1103.49 iterations 22
Cbc0038I Pass  37: suminf.    0.48871 (4) obj. -1103.49 iterations 0
Cbc0038I Pass  38: suminf.    0.77973 (2) obj. -1103.49 iterations 12
Cbc0038I Pass  39: suminf.    0.48485 (1) obj. -1113.62 iterations 11
Cbc0038I Pass  40: suminf.    0.44402 (1) obj. -1103.49 iterations 1
Cbc0038I Pass  41: suminf.    0.64073 (3) obj. -1103.49 iterations 16
Cbc0038I Pass  42: suminf.    0.64073 (3) obj. -1103.49 iterations 4
Cbc0038I Pass  43: suminf.    1.09403 (3) obj. -1105.88 iterations 8
Cbc0038I Pass  44: suminf.    1.06129 (3) obj. -1103.49 iterations 4
Cbc0038I Pass  45: suminf.    1.30789 (5) obj. -1103.49 iterations 7
Cbc0038I Pass  46: suminf.    1.13328 (6) obj. -1103.49 iterations 7
Cbc0038I Pass  47: suminf.    1.33710 (4) obj. -1103.49 iterations 9
Cbc0038I Pass  48: suminf.    1.21890 (3) obj. -1111.04 iterations 4
Cbc0038I Pass  49: suminf.    1.19820 (3) obj. -1103.49 iterations 3
Cbc0038I Pass  50: suminf.    0.62009 (2) obj. -1103.49 iterations 6
Cbc0038I Pass  51: suminf.    0.62009 (2) obj. -1103.49 iterations 7
Cbc0038I Pass  52: suminf.    1.33994 (4) obj. -1103.49 iterations 8
Cbc0038I Pass  53: suminf.    0.64073 (3) obj. -1103.49 iterations 9
Cbc0038I Pass  54: suminf.    1.09403 (3) obj. -1105.88 iterations 7
Cbc0038I Pass  55: suminf.    1.06129 (3) obj. -1103.49 iterations 3
Cbc0038I Pass  56: suminf.    1.14926 (5) obj. -1103.49 iterations 10
Cbc0038I Pass  57: suminf.    1.13328 (6) obj. -1103.49 iterations 6
Cbc0038I Pass  58: suminf.    1.33710 (4) obj. -1103.49 iterations 9
Cbc0038I Pass  59: suminf.    1.21890 (3) obj. -1111.04 iterations 4
Cbc0038I Pass  60: suminf.    1.19820 (3) obj. -1103.49 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 57 columns, reduced to 23 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1094.73 - took 0.02 seconds
Cbc0012I Integer solution of -1094.7293 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 102 rows 57 columns, reduced to 13 rows 12 columns
Cbc0031I 6 added rows had average density of 28.666667
Cbc0013I At root node, 6 cuts changed objective from -1138.515 to -1119.3927 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 55.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1094.7293, took 388 iterations and 14 nodes (0.09 seconds)
Cbc0032I Strong branching done 112 times (619 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

