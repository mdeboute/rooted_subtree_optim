Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 99 (-4) columns and 540 (-63) elements
Clp1000I sum of infeasibilities 8.19148e-05 - average 4.68085e-07, 21 fixed columns
Coin0506I Presolve 130 (-45) rows, 76 (-23) columns and 404 (-136) elements
Clp0029I End of values pass after 76 iterations
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Coin0511I After Postsolve, objective 33.955232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Coin0511I After Postsolve, objective 33.955232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.95523161 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 175 rows, 99 columns (98 integer (98 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.19941
Cbc0038I Solution found of 7.3593
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 0 to -7.38457 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.005
Cbc0038I Pass   1: suminf.    1.79055 (29) obj. -10.005 iterations 60
Cbc0038I Pass   2: suminf.    2.48993 (8) obj. -10.005 iterations 41
Cbc0038I Pass   3: suminf.    1.77625 (6) obj. -10.005 iterations 5
Cbc0038I Pass   4: suminf.    1.32349 (5) obj. -10.005 iterations 2
Cbc0038I Pass   5: suminf.    1.30008 (4) obj. -10.005 iterations 5
Cbc0038I Pass   6: suminf.    1.09023 (4) obj. -10.005 iterations 3
Cbc0038I Pass   7: suminf.    0.84016 (6) obj. -10.005 iterations 2
Cbc0038I Pass   8: suminf.    1.52343 (6) obj. -10.005 iterations 13
Cbc0038I Pass   9: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  10: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  11: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  12: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  13: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  14: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  15: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  16: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  17: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  18: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  19: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  20: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  21: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  22: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  23: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  24: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  25: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  26: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  27: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  28: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  29: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  30: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 81 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -7.38457 to -7.97597 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.7216
Cbc0038I Pass  30: suminf.    2.63465 (29) obj. -14.7216 iterations 0
Cbc0038I Pass  31: suminf.    2.64848 (10) obj. -14.7216 iterations 28
Cbc0038I Pass  32: suminf.    1.49148 (7) obj. -14.7216 iterations 13
Cbc0038I Pass  33: suminf.    2.04073 (8) obj. -14.7216 iterations 9
Cbc0038I Pass  34: suminf.    1.54602 (5) obj. -14.7216 iterations 7
Cbc0038I Pass  35: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  36: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  37: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  38: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  39: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  40: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  41: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  42: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  43: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  44: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  45: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  46: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  47: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  48: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  49: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  50: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  51: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  52: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  53: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  54: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  55: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  56: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  57: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  58: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  59: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 81 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.97597 - took 0.09 seconds
Cbc0012I Integer solution of -7.97597 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 72 rows 43 columns
Cbc0031I 28 added rows had average density of 68.5
Cbc0013I At root node, 28 cuts changed objective from -33.587955 to -27.956925 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17879 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2366 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.97597 best solution, best possible -27.956925 (1.33 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 70 rows 42 columns
Cbc0012I Integer solution of -8.28271 found by RINS after 11667 iterations and 41 nodes (1.77 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 8 rows 11 columns
Cbc0010I After 154 nodes, 3 on tree, -8.28271 best solution, best possible -27.956925 (2.04 seconds)
Cbc0001I Search completed - best objective -8.282710000000002, took 15134 iterations and 176 nodes (2.08 seconds)
Cbc0032I Strong branching done 1390 times (24946 iterations), fathomed 18 nodes and fixed 62 variables
Cbc0035I Maximum depth 42, 587 variables fixed on reduced cost
Total time (CPU seconds):       2.00   (Wallclock seconds):       2.10

