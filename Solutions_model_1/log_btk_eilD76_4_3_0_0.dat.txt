Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 2.07844e-05 - average 1.50612e-07, 12 fixed columns
Coin0506I Presolve 115 (-23) rows, 64 (-12) columns and 350 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.32358326 - largest nonzero change 0 ( 0%) - largest zero change 2.3241849e-05
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Coin0511I After Postsolve, objective 62.211844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Coin0511I After Postsolve, objective 62.211844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.21184438 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 11.2363
Cbc0038I Solution found of 1.39244
Cbc0038I Relaxing continuous gives -6.30458
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -6.30458 to -38.4987 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.8701
Cbc0038I Pass   1: suminf.    4.96983 (40) obj. -40.8701 iterations 39
Cbc0038I Pass   2: suminf.    4.96983 (40) obj. -40.8701 iterations 0
Cbc0038I Pass   3: suminf.    1.59049 (7) obj. -40.8701 iterations 38
Cbc0038I Pass   4: suminf.    1.52226 (7) obj. -40.8701 iterations 4
Cbc0038I Pass   5: suminf.    2.67590 (8) obj. -40.8701 iterations 13
Cbc0038I Pass   6: suminf.    2.07965 (9) obj. -40.8701 iterations 4
Cbc0038I Pass   7: suminf.    1.08131 (4) obj. -40.8701 iterations 4
Cbc0038I Pass   8: suminf.    1.51329 (4) obj. -40.8701 iterations 2
Cbc0038I Pass   9: suminf.    1.51069 (4) obj. -40.8701 iterations 1
Cbc0038I Pass  10: suminf.    1.32558 (4) obj. -40.8701 iterations 5
Cbc0038I Pass  11: suminf.    1.29113 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  12: suminf.    1.51329 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  13: suminf.    1.89030 (9) obj. -40.8701 iterations 26
Cbc0038I Pass  14: suminf.    1.50531 (8) obj. -40.8701 iterations 9
Cbc0038I Pass  15: suminf.    2.55404 (11) obj. -40.8701 iterations 17
Cbc0038I Pass  16: suminf.    1.57503 (7) obj. -40.8701 iterations 5
Cbc0038I Pass  17: suminf.    2.09042 (7) obj. -40.8701 iterations 6
Cbc0038I Pass  18: suminf.    1.68500 (8) obj. -40.8701 iterations 6
Cbc0038I Pass  19: suminf.    3.75994 (10) obj. -40.8701 iterations 13
Cbc0038I Pass  20: suminf.    1.34771 (5) obj. -40.8701 iterations 13
Cbc0038I Pass  21: suminf.    1.04703 (4) obj. -40.8701 iterations 4
Cbc0038I Pass  22: suminf.    1.51329 (4) obj. -40.8701 iterations 8
Cbc0038I Pass  23: suminf.    1.51069 (4) obj. -40.8701 iterations 1
Cbc0038I Pass  24: suminf.    1.32558 (4) obj. -40.8701 iterations 5
Cbc0038I Pass  25: suminf.    1.29113 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  26: suminf.    1.51329 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  27: suminf.    6.20554 (15) obj. -40.8701 iterations 29
Cbc0038I Pass  28: suminf.    4.12929 (11) obj. -40.8701 iterations 15
Cbc0038I Pass  29: suminf.    4.02466 (10) obj. -40.8701 iterations 5
Cbc0038I Pass  30: suminf.    3.11012 (9) obj. -40.8701 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 109 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -38.4987 to -39.4544 (0.09 seconds)
Cbc0038I Round again with cutoff of -45.1385
Cbc0038I Pass  30: suminf.    5.72733 (40) obj. -45.1385 iterations 0
Cbc0038I Pass  31: suminf.    5.72733 (40) obj. -45.1385 iterations 0
Cbc0038I Pass  32: suminf.    1.64595 (6) obj. -45.1385 iterations 36
Cbc0038I Pass  33: suminf.    1.48893 (6) obj. -45.1385 iterations 11
Cbc0038I Pass  34: suminf.    2.12734 (6) obj. -45.1385 iterations 14
Cbc0038I Pass  35: suminf.    1.93991 (6) obj. -45.1385 iterations 3
Cbc0038I Pass  36: suminf.    1.70754 (4) obj. -45.1385 iterations 6
Cbc0038I Pass  37: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  38: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  39: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  40: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  41: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  42: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  43: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  44: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  45: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  46: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  47: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  48: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  49: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  50: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  51: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  52: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  53: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  54: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  55: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  56: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  57: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  58: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  59: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -39.4544 - took 0.11 seconds
Cbc0012I Integer solution of -39.45437 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 97 rows 55 columns
Cbc0031I 30 added rows had average density of 56.9
Cbc0013I At root node, 30 cuts changed objective from -62.211844 to -55.586234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19663 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3475 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -39.45437 best solution, best possible -55.586234 (1.27 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 39 rows 30 columns
Cbc0038I Full problem 138 rows 76 columns, reduced to 6 rows 6 columns
Cbc0001I Search completed - best objective -39.45437, took 12417 iterations and 100 nodes (1.67 seconds)
Cbc0032I Strong branching done 1268 times (19200 iterations), fathomed 14 nodes and fixed 69 variables
Cbc0035I Maximum depth 21, 210 variables fixed on reduced cost
Total time (CPU seconds):       1.62   (Wallclock seconds):       1.69

