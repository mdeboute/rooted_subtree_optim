Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 383 (-144) rows, 199 (-65) columns and 1148 (-397) elements
Clp1000I sum of infeasibilities 1.7977e-07 - average 4.69372e-10, 189 fixed columns
Coin0506I Presolve 11 (-372) rows, 10 (-189) columns and 36 (-1112) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Coin0511I After Postsolve, objective 209062.65, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0898152 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Clp0000I Optimal - objective value 209062.65
Coin0511I After Postsolve, objective 209062.65, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 209062.6482 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 383 rows, 199 columns (198 integer (198 of which binary)) and 1148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.480%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.24556
Cbc0038I Solution found of -189664
Cbc0038I Relaxing continuous gives -189664
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -191604
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.08837 (3) obj. -191604 iterations 47
Cbc0038I Pass   2: suminf.    0.80170 (5) obj. -191604 iterations 28
Cbc0038I Pass   3: suminf.    0.77300 (5) obj. -191604 iterations 19
Cbc0038I Pass   4: suminf.    0.71146 (2) obj. -194755 iterations 19
Cbc0038I Pass   5: suminf.    0.19508 (3) obj. -191604 iterations 3
Cbc0038I Pass   6: suminf.    0.86026 (3) obj. -191604 iterations 30
Cbc0038I Pass   7: suminf.    0.86026 (3) obj. -191604 iterations 0
Cbc0038I Pass   8: suminf.    1.11444 (3) obj. -191604 iterations 27
Cbc0038I Pass   9: suminf.    1.11444 (3) obj. -191604 iterations 3
Cbc0038I Pass  10: suminf.    0.25253 (1) obj. -195336 iterations 5
Cbc0038I Pass  11: suminf.    0.09273 (1) obj. -191604 iterations 15
Cbc0038I Pass  12: suminf.    0.31959 (1) obj. -197334 iterations 15
Cbc0038I Pass  13: suminf.    1.97882 (8) obj. -191604 iterations 35
Cbc0038I Pass  14: suminf.    0.73324 (3) obj. -191604 iterations 26
Cbc0038I Pass  15: suminf.    0.39270 (2) obj. -192950 iterations 13
Cbc0038I Pass  16: suminf.    0.43718 (2) obj. -191604 iterations 4
Cbc0038I Pass  17: suminf.    0.79175 (3) obj. -191604 iterations 14
Cbc0038I Pass  18: suminf.    0.79175 (3) obj. -191604 iterations 10
Cbc0038I Pass  19: suminf.    0.30177 (3) obj. -191604 iterations 45
Cbc0038I Pass  20: suminf.    0.30177 (3) obj. -191604 iterations 0
Cbc0038I Pass  21: suminf.    1.24092 (4) obj. -191604 iterations 27
Cbc0038I Pass  22: suminf.    1.64496 (8) obj. -191604 iterations 20
Cbc0038I Pass  23: suminf.    1.38924 (5) obj. -191604 iterations 13
Cbc0038I Pass  24: suminf.    0.39362 (1) obj. -194129 iterations 19
Cbc0038I Pass  25: suminf.    0.47215 (1) obj. -191604 iterations 5
Cbc0038I Pass  26: suminf.    0.78772 (4) obj. -191604 iterations 21
Cbc0038I Pass  27: suminf.    0.58446 (3) obj. -191604 iterations 19
Cbc0038I Pass  28: suminf.    0.57723 (2) obj. -191604 iterations 22
Cbc0038I Pass  29: suminf.    0.21494 (3) obj. -191604 iterations 27
Cbc0038I Pass  30: suminf.    1.11771 (5) obj. -191604 iterations 27
Cbc0038I Rounding solution of -198705 is better than previous of -189664

Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -200776
Cbc0038I Reduced cost fixing fixed 91 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.52013 (12) obj. -200776 iterations 4
Cbc0038I Pass  31: suminf.    0.54826 (4) obj. -200776 iterations 41
Cbc0038I Pass  32: suminf.    0.36979 (1) obj. -200776 iterations 8
Cbc0038I Pass  33: suminf.    0.47178 (2) obj. -203019 iterations 5
Cbc0038I Pass  34: suminf.    0.44524 (4) obj. -200776 iterations 13
Cbc0038I Pass  35: suminf.    0.35762 (6) obj. -200776 iterations 23
Cbc0038I Pass  36: suminf.    0.55754 (3) obj. -200776 iterations 17
Cbc0038I Pass  37: suminf.    0.48071 (6) obj. -200776 iterations 7
Cbc0038I Pass  38: suminf.    0.52013 (12) obj. -200776 iterations 32
Cbc0038I Pass  39: suminf.    0.52013 (12) obj. -200776 iterations 0
Cbc0038I Pass  40: suminf.    1.29009 (9) obj. -200776 iterations 30
Cbc0038I Pass  41: suminf.    2.26878 (10) obj. -200776 iterations 23
Cbc0038I Pass  42: suminf.    0.14831 (3) obj. -200776 iterations 41
Cbc0038I Pass  43: suminf.    0.62061 (5) obj. -200776 iterations 24
Cbc0038I Pass  44: suminf.    0.90354 (11) obj. -200776 iterations 19
Cbc0038I Pass  45: suminf.    0.51039 (3) obj. -200776 iterations 18
Cbc0038I Pass  46: suminf.    1.09266 (4) obj. -200776 iterations 24
Cbc0038I Pass  47: suminf.    0.95746 (6) obj. -200776 iterations 37
Cbc0038I Pass  48: suminf.    0.58788 (3) obj. -200776 iterations 8
Cbc0038I Pass  49: suminf.    0.36979 (1) obj. -200776 iterations 14
Cbc0038I Pass  50: suminf.    0.47178 (2) obj. -203019 iterations 5
Cbc0038I Pass  51: suminf.    2.72841 (8) obj. -200776 iterations 19
Cbc0038I Pass  52: suminf.    0.37254 (4) obj. -200776 iterations 30
Cbc0038I Pass  53: suminf.    0.14831 (3) obj. -200776 iterations 19
Cbc0038I Pass  54: suminf.    0.62061 (5) obj. -200776 iterations 24
Cbc0038I Pass  55: suminf.    0.78774 (7) obj. -200776 iterations 33
Cbc0038I Pass  56: suminf.    0.51649 (4) obj. -200776 iterations 25
Cbc0038I Pass  57: suminf.    0.55089 (4) obj. -200776 iterations 28
Cbc0038I Pass  58: suminf.    0.37051 (3) obj. -200776 iterations 5
Cbc0038I Pass  59: suminf.    0.51649 (4) obj. -200776 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -198705 to -201140 (0.13 seconds)
Cbc0038I Round again with cutoff of -203517
Cbc0038I Reduced cost fixing fixed 113 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.72691 (9) obj. -203517 iterations 6
Cbc0038I Pass  60: suminf.    0.61477 (3) obj. -203517 iterations 38
Cbc0038I Pass  61: suminf.    0.61477 (3) obj. -203517 iterations 0
Cbc0038I Pass  62: suminf.    0.87143 (5) obj. -203517 iterations 25
Cbc0038I Pass  63: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  64: suminf.    0.75509 (3) obj. -203517 iterations 16
Cbc0038I Pass  65: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  66: suminf.    0.73711 (2) obj. -203517 iterations 10
Cbc0038I Pass  67: suminf.    1.41948 (4) obj. -203517 iterations 17
Cbc0038I Pass  68: suminf.    0.92912 (6) obj. -203517 iterations 19
Cbc0038I Pass  69: suminf.    0.83630 (3) obj. -203517 iterations 16
Cbc0038I Pass  70: suminf.    2.14771 (9) obj. -203517 iterations 28
Cbc0038I Pass  71: suminf.    0.58273 (10) obj. -203517 iterations 32
Cbc0038I Pass  72: suminf.    0.31463 (9) obj. -203517 iterations 1
Cbc0038I Pass  73: suminf.    0.61477 (3) obj. -203517 iterations 35
Cbc0038I Pass  74: suminf.    0.61477 (3) obj. -203517 iterations 0
Cbc0038I Pass  75: suminf.    0.87143 (5) obj. -203517 iterations 23
Cbc0038I Pass  76: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  77: suminf.    0.75509 (3) obj. -203517 iterations 15
Cbc0038I Pass  78: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  79: suminf.    0.73711 (2) obj. -203517 iterations 11
Cbc0038I Pass  80: suminf.    0.61477 (3) obj. -203517 iterations 18
Cbc0038I Pass  81: suminf.    0.61477 (3) obj. -203517 iterations 6
Cbc0038I Pass  82: suminf.    0.87143 (5) obj. -203517 iterations 23
Cbc0038I Pass  83: suminf.    0.87143 (5) obj. -203517 iterations 0
Cbc0038I Pass  84: suminf.    0.75509 (3) obj. -203517 iterations 14
Cbc0038I Pass  85: suminf.    0.71209 (3) obj. -203517 iterations 2
Cbc0038I Pass  86: suminf.    0.73711 (2) obj. -203517 iterations 10
Cbc0038I Pass  87: suminf.    1.06212 (5) obj. -203517 iterations 23
Cbc0038I Pass  88: suminf.    0.87143 (5) obj. -203517 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 383 rows 199 columns, reduced to 21 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -201140 - took 0.14 seconds
Cbc0012I Integer solution of -201140.08 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 383 rows 199 columns, reduced to 7 rows 6 columns
Cbc0031I 4 added rows had average density of 20.25
Cbc0013I At root node, 4 cuts changed objective from -209062.65 to -205582.72 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 3.0 elements, 9 column cuts (9 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 193.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -201140.08 best solution, best possible -205554.94 (0.64 seconds)
Cbc0001I Search completed - best objective -201140.08, took 187 iterations and 8 nodes (0.90 seconds)
Cbc0032I Strong branching done 64 times (314 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.91

