Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 6.84291e-05 - average 4.99483e-07, 16 fixed columns
Coin0506I Presolve 107 (-30) rows, 60 (-16) columns and 327 (-91) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Coin0511I After Postsolve, objective 65.778724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Coin0511I After Postsolve, objective 65.778724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.77872398 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.86139
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.53171 iterations 50
Cbc0038I Solution found of 2.53171
Cbc0038I Relaxing continuous gives 2.53171
Cbc0038I Rounding solution of -25.3825 is better than previous of 2.53171

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -25.3825 to -35.7728 (0.05 seconds)
Cbc0038I Round again with cutoff of -38.7735
Cbc0038I Pass   2: suminf.    3.90293 (12) obj. -38.7735 iterations 19
Cbc0038I Pass   3: suminf.    3.87030 (11) obj. -38.7735 iterations 5
Cbc0038I Pass   4: suminf.    1.28769 (5) obj. -38.7735 iterations 14
Cbc0038I Pass   5: suminf.    0.98155 (3) obj. -38.7735 iterations 2
Cbc0038I Pass   6: suminf.    1.40539 (4) obj. -38.7735 iterations 8
Cbc0038I Pass   7: suminf.    1.40539 (4) obj. -38.7735 iterations 0
Cbc0038I Pass   8: suminf.    1.15930 (4) obj. -38.7735 iterations 5
Cbc0038I Pass   9: suminf.    1.11571 (4) obj. -38.7735 iterations 1
Cbc0038I Pass  10: suminf.    1.40539 (4) obj. -38.7735 iterations 6
Cbc0038I Pass  11: suminf.    1.45771 (6) obj. -38.7735 iterations 22
Cbc0038I Pass  12: suminf.    1.06049 (5) obj. -38.7735 iterations 15
Cbc0038I Pass  13: suminf.    1.07971 (3) obj. -38.7735 iterations 8
Cbc0038I Pass  14: suminf.    0.56071 (3) obj. -38.7735 iterations 2
Cbc0038I Pass  15: suminf.    0.83786 (3) obj. -38.7735 iterations 7
Cbc0038I Pass  16: suminf.    1.25449 (3) obj. -38.7735 iterations 3
Cbc0038I Pass  17: suminf.    1.25449 (3) obj. -38.7735 iterations 0
Cbc0038I Pass  18: suminf.    0.97206 (3) obj. -38.7735 iterations 6
Cbc0038I Pass  19: suminf.    2.21592 (8) obj. -38.7735 iterations 17
Cbc0038I Pass  20: suminf.    1.51568 (5) obj. -38.7735 iterations 9
Cbc0038I Pass  21: suminf.    0.92852 (2) obj. -38.7735 iterations 10
Cbc0038I Pass  22: suminf.    0.86539 (3) obj. -38.7735 iterations 1
Cbc0038I Pass  23: suminf.    1.22210 (3) obj. -38.7735 iterations 4
Cbc0038I Pass  24: suminf.    1.13637 (4) obj. -38.7735 iterations 1
Cbc0038I Pass  25: suminf.    1.30138 (3) obj. -38.7735 iterations 7
Cbc0038I Pass  26: suminf.    1.15547 (3) obj. -38.7735 iterations 4
Cbc0038I Pass  27: suminf.    2.13119 (7) obj. -38.7735 iterations 34
Cbc0038I Pass  28: suminf.    0.97750 (4) obj. -38.7735 iterations 12
Cbc0038I Pass  29: suminf.    0.48276 (1) obj. -38.7735 iterations 7
Cbc0038I Pass  30: suminf.    0.39354 (2) obj. -38.7735 iterations 2
Cbc0038I Pass  31: suminf.    0.84960 (2) obj. -38.7735 iterations 8
Cbc0038I Rounding solution of -35.9837 is better than previous of -35.7728

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -35.9837 to -36.6415 (0.10 seconds)
Cbc0038I Round again with cutoff of -44.1745
Cbc0038I Pass  31: suminf.    4.08041 (12) obj. -44.1745 iterations 3
Cbc0038I Pass  32: suminf.    2.42257 (10) obj. -44.1745 iterations 11
Cbc0038I Pass  33: suminf.    1.45308 (9) obj. -44.1745 iterations 7
Cbc0038I Pass  34: suminf.    1.45308 (9) obj. -44.1745 iterations 1
Cbc0038I Pass  35: suminf.    2.61809 (6) obj. -44.1745 iterations 18
Cbc0038I Pass  36: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  37: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  38: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  39: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  40: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  41: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  42: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  43: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  44: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  45: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  46: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  47: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  48: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  49: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  50: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  51: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  52: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  53: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  54: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  55: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  56: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  57: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  58: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  59: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  60: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -36.6415 - took 0.11 seconds
Cbc0012I Integer solution of -36.64147 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 76 rows 44 columns
Cbc0031I 27 added rows had average density of 44.444444
Cbc0013I At root node, 27 cuts changed objective from -65.778724 to -57.419279 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11328 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1776 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.64147 best solution, best possible -57.419279 (0.94 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 46 rows 31 columns
Cbc0038I Full problem 137 rows 76 columns, reduced to 5 rows 9 columns
Cbc0004I Integer solution of -36.6762 found after 10081 iterations and 133 nodes (1.30 seconds)
Cbc0001I Search completed - best objective -36.6762, took 11326 iterations and 184 nodes (1.37 seconds)
Cbc0032I Strong branching done 1230 times (17111 iterations), fathomed 17 nodes and fixed 56 variables
Cbc0035I Maximum depth 35, 548 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.38

