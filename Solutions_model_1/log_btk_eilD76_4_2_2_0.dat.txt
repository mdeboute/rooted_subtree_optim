Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 5.24215e-05 - average 3.91205e-07, 5 fixed columns
Coin0506I Presolve 125 (-9) rows, 70 (-5) columns and 382 (-28) elements
Clp0000I Optimal - objective value 50.582944
Clp0000I Optimal - objective value 50.582944
Coin0511I After Postsolve, objective 50.582944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.582944
Clp0000I Optimal - objective value 50.582944
Clp0000I Optimal - objective value 50.582944
Coin0511I After Postsolve, objective 50.582944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.58294381 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 10.198
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.85262 iterations 64
Cbc0038I Solution found of 3.85262
Cbc0038I Relaxing continuous gives 3.85262
Cbc0038I Rounding solution of -8.27549 is better than previous of 3.85262

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 89 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -8.27549 to -23.3832 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.1033
Cbc0038I Pass   2: suminf.    4.41635 (22) obj. -26.1033 iterations 27
Cbc0038I Pass   3: suminf.    3.61461 (13) obj. -26.1033 iterations 30
Cbc0038I Pass   4: suminf.    3.18280 (13) obj. -26.1033 iterations 6
Cbc0038I Pass   5: suminf.    3.18280 (13) obj. -26.1033 iterations 0
Cbc0038I Pass   6: suminf.    3.86877 (11) obj. -26.1033 iterations 19
Cbc0038I Pass   7: suminf.    2.73212 (9) obj. -26.1033 iterations 6
Cbc0038I Pass   8: suminf.    3.53066 (9) obj. -26.1033 iterations 14
Cbc0038I Pass   9: suminf.    3.26438 (9) obj. -26.1033 iterations 3
Cbc0038I Pass  10: suminf.    2.08062 (6) obj. -26.1033 iterations 9
Cbc0038I Pass  11: suminf.    1.98646 (7) obj. -26.1033 iterations 3
Cbc0038I Pass  12: suminf.    2.18422 (7) obj. -26.1033 iterations 6
Cbc0038I Pass  13: suminf.    2.18422 (7) obj. -26.1033 iterations 0
Cbc0038I Pass  14: suminf.    2.39537 (7) obj. -26.1033 iterations 7
Cbc0038I Pass  15: suminf.    2.26111 (8) obj. -26.1033 iterations 3
Cbc0038I Pass  16: suminf.    2.55000 (9) obj. -26.1033 iterations 9
Cbc0038I Pass  17: suminf.    2.18422 (7) obj. -26.1033 iterations 3
Cbc0038I Pass  18: suminf.    2.18422 (7) obj. -26.1033 iterations 0
Cbc0038I Pass  19: suminf.    2.39537 (7) obj. -26.1033 iterations 7
Cbc0038I Pass  20: suminf.    2.26111 (8) obj. -26.1033 iterations 3
Cbc0038I Pass  21: suminf.    2.55000 (9) obj. -26.1033 iterations 9
Cbc0038I Pass  22: suminf.    2.18422 (7) obj. -26.1033 iterations 3
Cbc0038I Pass  23: suminf.    2.18422 (7) obj. -26.1033 iterations 0
Cbc0038I Pass  24: suminf.    2.39537 (7) obj. -26.1033 iterations 7
Cbc0038I Pass  25: suminf.    2.26111 (8) obj. -26.1033 iterations 3
Cbc0038I Pass  26: suminf.    2.55000 (9) obj. -26.1033 iterations 9
Cbc0038I Pass  27: suminf.    2.18422 (7) obj. -26.1033 iterations 3
Cbc0038I Pass  28: suminf.    2.18422 (7) obj. -26.1033 iterations 0
Cbc0038I Pass  29: suminf.    2.39537 (7) obj. -26.1033 iterations 7
Cbc0038I Pass  30: suminf.    2.26111 (8) obj. -26.1033 iterations 3
Cbc0038I Pass  31: suminf.    2.55000 (9) obj. -26.1033 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 89 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -23.3832 - took 0.11 seconds
Cbc0012I Integer solution of -23.3832 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 89 rows 51 columns
Cbc0031I 20 added rows had average density of 43.55
Cbc0013I At root node, 20 cuts changed objective from -50.582944 to -42.634678 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16660 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2988 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 174 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 74.6 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.3832 best solution, best possible -42.634678 (1.12 seconds)
Cbc0012I Integer solution of -24.34866 found by rounding after 8890 iterations and 21 nodes (1.29 seconds)
Cbc0004I Integer solution of -26.38645 found after 9300 iterations and 39 nodes (1.32 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 66 rows 39 columns
Cbc0001I Search completed - best objective -26.38645, took 10754 iterations and 78 nodes (1.43 seconds)
Cbc0032I Strong branching done 928 times (17715 iterations), fathomed 6 nodes and fixed 46 variables
Cbc0035I Maximum depth 27, 172 variables fixed on reduced cost
Total time (CPU seconds):       1.40   (Wallclock seconds):       1.45

