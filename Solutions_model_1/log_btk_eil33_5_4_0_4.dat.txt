Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 37 (-32) rows, 20 (-15) columns and 108 (-87) elements
Clp0000I Optimal - objective value 133.63976
Coin0511I After Postsolve, objective 133.63976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.639757 - 20 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.86771
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -33 iterations 12
Cbc0038I Solution found of -33
Cbc0038I Relaxing continuous gives -33
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.2889
Cbc0038I Pass   2: suminf.    0.13276 (1) obj. -43.2889 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -43.2889 iterations 1
Cbc0038I Solution found of -43.2889
Cbc0038I Relaxing continuous gives -47.5
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -64.9279
Cbc0038I Pass   4: suminf.    0.42849 (2) obj. -64.9279 iterations 1
Cbc0038I Pass   5: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass   6: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass   7: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass   8: suminf.    1.18957 (3) obj. -64.9279 iterations 3
Cbc0038I Pass   9: suminf.    0.36774 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  10: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  11: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  12: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  13: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass  14: suminf.    0.36774 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  15: suminf.    0.36774 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  16: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  17: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  18: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  19: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass  20: suminf.    0.31470 (1) obj. -64.9279 iterations 1
Cbc0038I Pass  21: suminf.    0.31470 (1) obj. -64.9279 iterations 1
Cbc0038I Pass  22: suminf.    0.42849 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  23: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  24: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  25: suminf.    3.03353 (7) obj. -64.9279 iterations 7
Cbc0038I Pass  26: suminf.    0.54889 (3) obj. -64.9279 iterations 8
Cbc0038I Pass  27: suminf.    0.31036 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  28: suminf.    0.51309 (3) obj. -64.9279 iterations 5
Cbc0038I Pass  29: suminf.    0.50777 (3) obj. -64.9279 iterations 1
Cbc0038I Pass  30: suminf.    0.45558 (2) obj. -64.9279 iterations 4
Cbc0038I Pass  31: suminf.    0.39288 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  32: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  33: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.5 - took 0.03 seconds
Cbc0012I Integer solution of -47.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -59.25 found by DiveCoefficient after 1504 iterations and 0 nodes (0.14 seconds)
Cbc0031I 8 added rows had average density of 17.625
Cbc0013I At root node, 8 cuts changed objective from -133.63976 to -74.572343 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 918 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 440 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 102 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -59.25, took 1578 iterations and 2 nodes (0.14 seconds)
Cbc0032I Strong branching done 26 times (316 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

