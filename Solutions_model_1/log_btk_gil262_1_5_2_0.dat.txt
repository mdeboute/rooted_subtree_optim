Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.05077e-05 - average 2.08486e-08, 105 fixed columns
Coin0506I Presolve 296 (-208) rows, 157 (-105) columns and 883 (-617) elements
Clp0029I End of values pass after 157 iterations
Clp0014I Perturbing problem by 0.001% of 0.15898797 - largest nonzero change 0 ( 0%) - largest zero change 2.9960057e-05
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Coin0511I After Postsolve, objective 138.04675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13543764 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Coin0511I After Postsolve, objective 138.04675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.0467519 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 67 integers unsatisfied sum - 12.8458
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.0842 iterations 219
Cbc0038I Solution found of 18.0842
Cbc0038I Relaxing continuous gives 18.0842
Cbc0038I Rounding solution of -59.6452 is better than previous of 18.0842

Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 124 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -59.6452 to -63.3405 (0.07 seconds)
Cbc0038I Round again with cutoff of -70.8113
Cbc0038I Pass   2: suminf.    4.34215 (14) obj. -70.8113 iterations 34
Cbc0038I Pass   3: suminf.    1.77594 (6) obj. -70.8113 iterations 27
Cbc0038I Pass   4: suminf.    1.11933 (7) obj. -70.8113 iterations 5
Cbc0038I Pass   5: suminf.    2.93175 (11) obj. -70.8113 iterations 20
Cbc0038I Pass   6: suminf.    2.72674 (8) obj. -70.8113 iterations 7
Cbc0038I Pass   7: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass   8: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass   9: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I Pass  10: suminf.    2.99103 (10) obj. -70.8113 iterations 0
Cbc0038I Pass  11: suminf.    2.91452 (9) obj. -70.8113 iterations 15
Cbc0038I Pass  12: suminf.    2.28940 (8) obj. -70.8113 iterations 5
Cbc0038I Pass  13: suminf.    2.03342 (6) obj. -70.8113 iterations 11
Cbc0038I Pass  14: suminf.    1.32149 (5) obj. -70.8113 iterations 9
Cbc0038I Pass  15: suminf.    0.96468 (5) obj. -70.8113 iterations 7
Cbc0038I Pass  16: suminf.    2.72674 (8) obj. -70.8113 iterations 18
Cbc0038I Pass  17: suminf.    2.72674 (8) obj. -70.8113 iterations 0
Cbc0038I Pass  18: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass  19: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass  20: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I Pass  21: suminf.    2.99103 (10) obj. -70.8113 iterations 0
Cbc0038I Pass  22: suminf.    2.91452 (9) obj. -70.8113 iterations 15
Cbc0038I Pass  23: suminf.    2.28940 (8) obj. -70.8113 iterations 5
Cbc0038I Pass  24: suminf.    2.03342 (6) obj. -70.8113 iterations 11
Cbc0038I Pass  25: suminf.    1.32149 (5) obj. -70.8113 iterations 9
Cbc0038I Pass  26: suminf.    0.96468 (5) obj. -70.8113 iterations 7
Cbc0038I Pass  27: suminf.    2.72674 (8) obj. -70.8113 iterations 18
Cbc0038I Pass  28: suminf.    2.72674 (8) obj. -70.8113 iterations 0
Cbc0038I Pass  29: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass  30: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass  31: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 131 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -63.3405 to -67.0189 (0.14 seconds)
Cbc0038I Round again with cutoff of -84.2584
Cbc0038I Pass  31: suminf.    5.05193 (15) obj. -84.2584 iterations 2
Cbc0038I Pass  32: suminf.    4.12111 (12) obj. -84.2584 iterations 26
Cbc0038I Pass  33: suminf.    3.32603 (13) obj. -84.2584 iterations 18
Cbc0038I Pass  34: suminf.    3.46521 (11) obj. -84.2584 iterations 23
Cbc0038I Pass  35: suminf.    2.98866 (11) obj. -84.2584 iterations 14
Cbc0038I Pass  36: suminf.    2.96596 (10) obj. -84.2584 iterations 17
Cbc0038I Pass  37: suminf.    2.63854 (10) obj. -84.2584 iterations 5
Cbc0038I Pass  38: suminf.    3.02185 (11) obj. -84.2584 iterations 22
Cbc0038I Pass  39: suminf.    3.01228 (12) obj. -84.2584 iterations 2
Cbc0038I Pass  40: suminf.    2.81337 (9) obj. -84.2584 iterations 19
Cbc0038I Pass  41: suminf.    2.22442 (7) obj. -84.2584 iterations 9
Cbc0038I Pass  42: suminf.    2.16605 (8) obj. -84.2584 iterations 1
Cbc0038I Pass  43: suminf.    3.09478 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  44: suminf.    3.07121 (9) obj. -84.2584 iterations 4
Cbc0038I Pass  45: suminf.    3.07121 (9) obj. -84.2584 iterations 3
Cbc0038I Pass  46: suminf.    2.57739 (8) obj. -84.2584 iterations 13
Cbc0038I Pass  47: suminf.    2.10496 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  48: suminf.    2.10496 (8) obj. -84.2584 iterations 0
Cbc0038I Pass  49: suminf.    3.05222 (9) obj. -84.2584 iterations 20
Cbc0038I Pass  50: suminf.    3.04704 (9) obj. -84.2584 iterations 5
Cbc0038I Pass  51: suminf.    2.60045 (9) obj. -84.2584 iterations 15
Cbc0038I Pass  52: suminf.    2.48054 (8) obj. -84.2584 iterations 7
Cbc0038I Pass  53: suminf.    3.42642 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  54: suminf.    3.06321 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  55: suminf.    3.04704 (9) obj. -84.2584 iterations 17
Cbc0038I Pass  56: suminf.    2.60045 (9) obj. -84.2584 iterations 15
Cbc0038I Pass  57: suminf.    2.48054 (8) obj. -84.2584 iterations 7
Cbc0038I Pass  58: suminf.    3.42642 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  59: suminf.    3.06321 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  60: suminf.    3.04704 (9) obj. -84.2584 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 133 rows 73 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -67.0189 - took 0.19 seconds
Cbc0012I Integer solution of -67.01886 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 126 rows 69 columns
Cbc0031I 57 added rows had average density of 106.21053
Cbc0013I At root node, 57 cuts changed objective from -138.04675 to -126.83911 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 54771 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.583 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3765 row cuts average 257.4 elements, 0 column cuts (0 active)  in 0.611 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.633 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 185.2 elements, 0 column cuts (0 active)  in 0.236 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -67.01886 best solution, best possible -126.83911 (6.75 seconds)
Cbc0010I After 8 nodes, 9 on tree, -67.01886 best solution, best possible -126.83911 (7.46 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 23 rows 21 columns
Cbc0010I After 52 nodes, 12 on tree, -67.01886 best solution, best possible -126.83911 (8.17 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -67.09353 found by RINS after 29413 iterations and 92 nodes (8.31 seconds)
Cbc0012I Integer solution of -67.1207 found by rounding after 31097 iterations and 141 nodes (8.47 seconds)
Cbc0012I Integer solution of -67.21092 found by rounding after 31697 iterations and 158 nodes (8.50 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 177 rows 103 columns
Cbc0012I Integer solution of -69.12097 found by RINS after 33791 iterations and 200 nodes (8.82 seconds)
Cbc0010I After 205 nodes, 9 on tree, -69.12097 best solution, best possible -126.83911 (8.87 seconds)
Cbc0012I Integer solution of -71.04449 found by rounding after 35149 iterations and 221 nodes (8.98 seconds)
Cbc0012I Integer solution of -74.3026 found by rounding after 38313 iterations and 281 nodes (9.47 seconds)
Cbc0010I After 300 nodes, 18 on tree, -74.3026 best solution, best possible -126.83911 (9.58 seconds)
Cbc0012I Integer solution of -75.37432 found by rounding after 42825 iterations and 388 nodes (9.95 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -78.5536 found by rounding after 43212 iterations and 407 nodes (10.00 seconds)
Cbc0012I Integer solution of -80.87289 found by rounding after 45408 iterations and 471 nodes (10.16 seconds)
Cbc0010I After 514 nodes, 16 on tree, -80.87289 best solution, best possible -126.83911 (10.28 seconds)
Cbc0004I Integer solution of -80.9534 found after 48269 iterations and 588 nodes (10.41 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 108 rows 67 columns
Cbc0001I Search completed - best objective -80.95340000000002, took 50867 iterations and 636 nodes (10.60 seconds)
Cbc0032I Strong branching done 4846 times (103301 iterations), fathomed 98 nodes and fixed 348 variables
Cbc0035I Maximum depth 76, 2876 variables fixed on reduced cost
Total time (CPU seconds):       10.37   (Wallclock seconds):       10.68

