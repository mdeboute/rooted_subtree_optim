Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 146 (-59) rows, 80 (-23) columns and 446 (-157) elements
Clp1000I sum of infeasibilities 0.000102512 - average 7.02135e-07, 61 fixed columns
Coin0506I Presolve 5 (-141) rows, 6 (-74) columns and 18 (-428) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 21953.89
Clp0000I Optimal - objective value 21953.89
Coin0511I After Postsolve, objective 21953.89, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.3417915 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 21953.89
Clp0000I Optimal - objective value 21953.89
Clp0000I Optimal - objective value 21953.89
Coin0511I After Postsolve, objective 21953.89, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21953.89016 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 146 rows, 80 columns (79 integer (79 of which binary)) and 446 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.05322
Cbc0038I Pass   1: suminf.    0.50836 (2) obj. -21598.7 iterations 22
Cbc0038I Solution found of -18065.8
Cbc0038I Relaxing continuous gives -18065.8
Cbc0038I Rounding solution of -20296.6 is better than previous of -18065.8

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 80 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20462.3
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50836 (2) obj. -21598.7 iterations 0
Cbc0038I Pass   3: suminf.    0.14050 (2) obj. -20462.3 iterations 17
Cbc0038I Pass   4: suminf.    0.14050 (2) obj. -20462.3 iterations 6
Cbc0038I Pass   5: suminf.    0.06619 (1) obj. -20462.3 iterations 7
Cbc0038I Pass   6: suminf.    1.13334 (5) obj. -20462.3 iterations 21
Cbc0038I Pass   7: suminf.    0.27304 (2) obj. -20462.3 iterations 11
Cbc0038I Pass   8: suminf.    0.38106 (2) obj. -20462.3 iterations 11
Cbc0038I Pass   9: suminf.    0.38106 (2) obj. -20462.3 iterations 0
Cbc0038I Pass  10: suminf.    0.59128 (2) obj. -20462.3 iterations 10
Cbc0038I Pass  11: suminf.    0.81532 (3) obj. -20462.3 iterations 13
Cbc0038I Pass  12: suminf.    0.63341 (2) obj. -20617.2 iterations 7
Cbc0038I Pass  13: suminf.    0.22862 (2) obj. -20462.3 iterations 17
Cbc0038I Pass  14: suminf.    0.22862 (2) obj. -20462.3 iterations 0
Cbc0038I Pass  15: suminf.    0.38631 (2) obj. -20808.1 iterations 7
Cbc0038I Pass  16: suminf.    3.00775 (10) obj. -20462.3 iterations 33
Cbc0038I Pass  17: suminf.    1.17092 (4) obj. -20462.3 iterations 3
Cbc0038I Pass  18: suminf.    1.36834 (4) obj. -20462.3 iterations 19
Cbc0038I Pass  19: suminf.    0.51951 (2) obj. -21186.4 iterations 17
Cbc0038I Pass  20: suminf.    0.11111 (1) obj. -20690.3 iterations 2
Cbc0038I Pass  21: suminf.    0.16825 (1) obj. -20462.3 iterations 1
Cbc0038I Pass  22: suminf.    0.39719 (3) obj. -20462.3 iterations 13
Cbc0038I Pass  23: suminf.    0.07692 (1) obj. -20490.8 iterations 9
Cbc0038I Pass  24: suminf.    0.27500 (2) obj. -20462.3 iterations 9
Cbc0038I Pass  25: suminf.    0.51127 (5) obj. -20462.3 iterations 14
Cbc0038I Pass  26: suminf.    0.07127 (1) obj. -20462.3 iterations 16
Cbc0038I Pass  27: suminf.    0.14286 (1) obj. -20635 iterations 5
Cbc0038I Pass  28: suminf.    1.17342 (4) obj. -20462.3 iterations 20
Cbc0038I Pass  29: suminf.    0.82273 (3) obj. -20462.3 iterations 13
Cbc0038I Pass  30: suminf.    0.80783 (3) obj. -20462.3 iterations 8
Cbc0038I Pass  31: suminf.    0.36036 (3) obj. -20462.3 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 80 columns, reduced to 53 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -18065.8 to -21155 (0.05 seconds)
Cbc0038I Round again with cutoff of -21314.8
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.50836 (2) obj. -21598.7 iterations 0
Cbc0038I Pass  32: suminf.    0.64050 (2) obj. -21314.8 iterations 11
Cbc0038I Pass  33: suminf.    1.18739 (3) obj. -21314.8 iterations 9
Cbc0038I Pass  34: suminf.    0.90576 (4) obj. -21314.8 iterations 10
Cbc0038I Pass  35: suminf.    0.46100 (2) obj. -21314.8 iterations 18
Cbc0038I Pass  36: suminf.    0.58717 (2) obj. -21314.8 iterations 3
Cbc0038I Pass  37: suminf.    0.52320 (2) obj. -21455.1 iterations 3
Cbc0038I Pass  38: suminf.    1.22261 (4) obj. -21314.8 iterations 17
Cbc0038I Pass  39: suminf.    0.52320 (2) obj. -21455.1 iterations 16
Cbc0038I Pass  40: suminf.    0.64050 (2) obj. -21314.8 iterations 10
Cbc0038I Pass  41: suminf.    0.50836 (2) obj. -21598.7 iterations 5
Cbc0038I Pass  42: suminf.    1.03401 (5) obj. -21314.8 iterations 13
Cbc0038I Pass  43: suminf.    0.49721 (4) obj. -21314.8 iterations 11
Cbc0038I Pass  44: suminf.    0.85317 (3) obj. -21314.8 iterations 15
Cbc0038I Pass  45: suminf.    0.85317 (3) obj. -21314.8 iterations 0
Cbc0038I Pass  46: suminf.    0.50836 (2) obj. -21598.7 iterations 12
Cbc0038I Pass  47: suminf.    0.50836 (2) obj. -21598.7 iterations 0
Cbc0038I Pass  48: suminf.    0.64050 (2) obj. -21314.8 iterations 9
Cbc0038I Pass  49: suminf.    1.09799 (3) obj. -21314.8 iterations 8
Cbc0038I Pass  50: suminf.    1.08409 (4) obj. -21314.8 iterations 11
Cbc0038I Pass  51: suminf.    1.73364 (5) obj. -21314.8 iterations 17
Cbc0038I Pass  52: suminf.    0.83013 (2) obj. -21368.6 iterations 8
Cbc0038I Pass  53: suminf.    0.09430 (1) obj. -21314.8 iterations 6
Cbc0038I Pass  54: suminf.    0.03704 (1) obj. -21403.1 iterations 5
Cbc0038I Pass  55: suminf.    0.05918 (1) obj. -21314.8 iterations 1
Cbc0038I Pass  56: suminf.    1.45441 (4) obj. -21314.8 iterations 15
Cbc0038I Pass  57: suminf.    0.18524 (4) obj. -21314.8 iterations 10
Cbc0038I Pass  58: suminf.    1.59191 (5) obj. -21314.8 iterations 13
Cbc0038I Pass  59: suminf.    0.82625 (2) obj. -21314.8 iterations 10
Cbc0038I Pass  60: suminf.    0.48571 (1) obj. -21651.9 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 80 columns, reduced to 13 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -21155 to -21272.9 (0.06 seconds)
Cbc0038I Round again with cutoff of -21506.5
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.52193 (4) obj. -21770.7 iterations 1
Cbc0038I Pass  61: suminf.    0.96260 (4) obj. -21506.5 iterations 14
Cbc0038I Pass  62: suminf.    0.96260 (4) obj. -21506.5 iterations 0
Cbc0038I Pass  63: suminf.    0.52193 (4) obj. -21770.7 iterations 13
Cbc0038I Pass  64: suminf.    1.35794 (6) obj. -21506.5 iterations 13
Cbc0038I Pass  65: suminf.    0.52208 (3) obj. -21506.5 iterations 17
Cbc0038I Pass  66: suminf.    0.78092 (3) obj. -21506.5 iterations 20
Cbc0038I Pass  67: suminf.    0.78092 (3) obj. -21506.5 iterations 7
Cbc0038I Pass  68: suminf.    0.65883 (5) obj. -21506.5 iterations 18
Cbc0038I Pass  69: suminf.    0.69004 (3) obj. -21506.5 iterations 15
Cbc0038I Pass  70: suminf.    0.49894 (2) obj. -21506.5 iterations 16
Cbc0038I Pass  71: suminf.    0.41858 (4) obj. -21506.5 iterations 13
Cbc0038I Pass  72: suminf.    1.26096 (4) obj. -21514.6 iterations 18
Cbc0038I Pass  73: suminf.    1.26096 (4) obj. -21514.6 iterations 0
Cbc0038I Pass  74: suminf.    0.69500 (5) obj. -21506.5 iterations 16
Cbc0038I Pass  75: suminf.    0.56918 (5) obj. -21506.5 iterations 5
Cbc0038I Pass  76: suminf.    1.43460 (4) obj. -21755.6 iterations 18
Cbc0038I Pass  77: suminf.    0.57788 (2) obj. -21506.5 iterations 15
Cbc0038I Pass  78: suminf.    0.57788 (2) obj. -21506.5 iterations 6
Cbc0038I Pass  79: suminf.    0.80038 (2) obj. -21506.5 iterations 8
Cbc0038I Pass  80: suminf.    0.74110 (2) obj. -21660.6 iterations 2
Cbc0038I Pass  81: suminf.    0.79861 (4) obj. -21506.5 iterations 20
Cbc0038I Pass  82: suminf.    0.75551 (3) obj. -21506.5 iterations 4
Cbc0038I Pass  83: suminf.    0.57788 (2) obj. -21506.5 iterations 23
Cbc0038I Pass  84: suminf.    0.57788 (2) obj. -21506.5 iterations 5
Cbc0038I Pass  85: suminf.    0.80038 (2) obj. -21506.5 iterations 9
Cbc0038I Pass  86: suminf.    0.74110 (2) obj. -21660.6 iterations 2
Cbc0038I Pass  87: suminf.    0.57788 (2) obj. -21506.5 iterations 12
Cbc0038I Pass  88: suminf.    1.09701 (4) obj. -21506.5 iterations 14
Cbc0038I Pass  89: suminf.    1.09701 (4) obj. -21506.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 80 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -21272.9 - took 0.06 seconds
Cbc0012I Integer solution of -21272.927 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 146 rows 80 columns, reduced to 4 rows 5 columns
Cbc0031I 4 added rows had average density of 22.25
Cbc0013I At root node, 4 cuts changed objective from -21953.89 to -21660.365 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.7 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 77.8 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0010I After 8 nodes, 3 on tree, -21272.927 best solution, best possible -21660.365 (0.69 seconds)
Cbc0012I Integer solution of -21345.847 found by DiveCoefficient after 246 iterations and 13 nodes (0.78 seconds)
Cbc0001I Search completed - best objective -21345.847, took 339 iterations and 18 nodes (1.02 seconds)
Cbc0032I Strong branching done 132 times (500 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 75 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       1.03

