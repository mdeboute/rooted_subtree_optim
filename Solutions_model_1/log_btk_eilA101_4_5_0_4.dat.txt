Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 142 (-63) rows, 78 (-25) columns and 434 (-169) elements
Clp1000I sum of infeasibilities 3.00625e-06 - average 2.11708e-08, 67 fixed columns
Coin0506I Presolve 7 (-135) rows, 8 (-70) columns and 24 (-410) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Coin0511I After Postsolve, objective 27548.958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4599542 - largest nonzero change 2.6417538e-05 ( 0.0014761077%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Coin0511I After Postsolve, objective 27548.958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 27548.95756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 142 rows, 78 columns (77 integer (77 of which binary)) and 434 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.536585
Cbc0038I Pass   1: suminf.    0.45179 (2) obj. -27478.9 iterations 15
Cbc0038I Solution found of -21810.7
Cbc0038I Relaxing continuous gives -21810.7
Cbc0038I Rounding solution of -24823.4 is better than previous of -21810.7

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -24823.4 to -25282.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -25509
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45179 (2) obj. -27478.9 iterations 0
Cbc0038I Pass   3: suminf.    0.12052 (1) obj. -25509 iterations 2
Cbc0038I Pass   4: suminf.    0.05714 (1) obj. -25775.5 iterations 1
Cbc0038I Pass   5: suminf.    0.73167 (3) obj. -25509 iterations 17
Cbc0038I Pass   6: suminf.    0.70398 (2) obj. -25534.9 iterations 8
Cbc0038I Pass   7: suminf.    0.19645 (1) obj. -25509 iterations 2
Cbc0038I Pass   8: suminf.    0.17143 (1) obj. -25614.2 iterations 1
Cbc0038I Pass   9: suminf.    1.63437 (7) obj. -25509 iterations 16
Cbc0038I Pass  10: suminf.    1.63437 (7) obj. -25509 iterations 4
Cbc0038I Pass  11: suminf.    0.36250 (2) obj. -27147.8 iterations 12
Cbc0038I Pass  12: suminf.    0.36250 (2) obj. -27147.8 iterations 2
Cbc0038I Pass  13: suminf.    0.09107 (1) obj. -25509 iterations 3
Cbc0038I Pass  14: suminf.    0.09107 (1) obj. -25509 iterations 0
Cbc0038I Pass  15: suminf.    0.77282 (4) obj. -25509 iterations 24
Cbc0038I Pass  16: suminf.    0.76060 (3) obj. -25509 iterations 10
Cbc0038I Pass  17: suminf.    0.52857 (2) obj. -26348 iterations 5
Cbc0038I Pass  18: suminf.    0.27778 (1) obj. -26085.4 iterations 3
Cbc0038I Pass  19: suminf.    0.45540 (2) obj. -25509 iterations 2
Cbc0038I Pass  20: suminf.    1.15681 (4) obj. -25509 iterations 15
Cbc0038I Pass  21: suminf.    1.15681 (4) obj. -25509 iterations 3
Cbc0038I Pass  22: suminf.    0.41667 (1) obj. -26602.6 iterations 12
Cbc0038I Pass  23: suminf.    0.22032 (1) obj. -25509 iterations 2
Cbc0038I Pass  24: suminf.    0.31896 (3) obj. -25509 iterations 19
Cbc0038I Pass  25: suminf.    0.31896 (3) obj. -25509 iterations 1
Cbc0038I Pass  26: suminf.    0.22857 (1) obj. -26270 iterations 10
Cbc0038I Pass  27: suminf.    0.40953 (1) obj. -25509 iterations 1
Cbc0038I Pass  28: suminf.    0.78157 (3) obj. -25509 iterations 11
Cbc0038I Pass  29: suminf.    0.32277 (2) obj. -25509 iterations 10
Cbc0038I Pass  30: suminf.    0.45357 (2) obj. -25877.1 iterations 1
Cbc0038I Pass  31: suminf.    1.56702 (6) obj. -25509 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 17 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -25282.3 to -26501.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -26710.7
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.45179 (2) obj. -27478.9 iterations 0
Cbc0038I Pass  32: suminf.    0.50025 (2) obj. -26710.7 iterations 1
Cbc0038I Pass  33: suminf.    0.50025 (2) obj. -26710.7 iterations 3
Cbc0038I Pass  34: suminf.    0.44881 (1) obj. -26710.7 iterations 6
Cbc0038I Pass  35: suminf.    0.37321 (3) obj. -26710.7 iterations 11
Cbc0038I Pass  36: suminf.    0.37321 (3) obj. -26710.7 iterations 2
Cbc0038I Pass  37: suminf.    0.50025 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  38: suminf.    0.51470 (3) obj. -26710.7 iterations 10
Cbc0038I Pass  39: suminf.    0.22870 (2) obj. -26710.7 iterations 13
Cbc0038I Pass  40: suminf.    0.69876 (2) obj. -26710.7 iterations 7
Cbc0038I Pass  41: suminf.    0.52013 (3) obj. -26710.7 iterations 8
Cbc0038I Pass  42: suminf.    0.77259 (3) obj. -26710.7 iterations 16
Cbc0038I Pass  43: suminf.    0.55893 (2) obj. -27197.4 iterations 7
Cbc0038I Pass  44: suminf.    0.49081 (2) obj. -26710.7 iterations 1
Cbc0038I Pass  45: suminf.    0.49081 (2) obj. -26710.7 iterations 3
Cbc0038I Pass  46: suminf.    0.61702 (2) obj. -26710.7 iterations 9
Cbc0038I Pass  47: suminf.    0.49081 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  48: suminf.    0.82146 (3) obj. -26710.7 iterations 14
Cbc0038I Pass  49: suminf.    0.40898 (2) obj. -26710.7 iterations 12
Cbc0038I Pass  50: suminf.    0.45714 (2) obj. -26752.3 iterations 9
Cbc0038I Pass  51: suminf.    0.43740 (2) obj. -26710.7 iterations 2
Cbc0038I Pass  52: suminf.    0.49694 (2) obj. -26710.7 iterations 8
Cbc0038I Pass  53: suminf.    0.11707 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  54: suminf.    0.11111 (1) obj. -26715.9 iterations 12
Cbc0038I Pass  55: suminf.    0.11285 (1) obj. -26710.7 iterations 2
Cbc0038I Pass  56: suminf.    0.86963 (3) obj. -26710.7 iterations 16
Cbc0038I Pass  57: suminf.    0.77579 (3) obj. -26710.7 iterations 9
Cbc0038I Pass  58: suminf.    0.36418 (2) obj. -26710.7 iterations 6
Cbc0038I Pass  59: suminf.    0.19643 (2) obj. -27182.7 iterations 1
Cbc0038I Pass  60: suminf.    0.72666 (5) obj. -26710.7 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26501.1 - took 0.02 seconds
Cbc0012I Integer solution of -26501.098 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 142 rows 78 columns, reduced to 5 rows 6 columns
Cbc0031I 6 added rows had average density of 14.833333
Cbc0013I At root node, 6 cuts changed objective from -27548.958 to -26980.623 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 9.6 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 76.4 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26501.098, took 232 iterations and 6 nodes (0.56 seconds)
Cbc0032I Strong branching done 54 times (267 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.57

