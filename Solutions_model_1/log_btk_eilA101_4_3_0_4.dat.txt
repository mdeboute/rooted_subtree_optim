Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-75) rows, 72 (-31) columns and 398 (-205) elements
Clp1000I sum of infeasibilities 3.38538e-06 - average 2.60414e-08, 62 fixed columns
Coin0506I Presolve 8 (-122) rows, 9 (-63) columns and 28 (-370) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 29001.284
Clp0000I Optimal - objective value 29001.284
Coin0511I After Postsolve, objective 29001.284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.3335055 - largest nonzero change 1.8052555e-05 ( 0.0012833346%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 29001.284
Clp0000I Optimal - objective value 29001.284
Clp0000I Optimal - objective value 29001.284
Coin0511I After Postsolve, objective 29001.284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 29001.284 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 72 columns (71 integer (71 of which binary)) and 398 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.226%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.0301
Cbc0038I Pass   1: suminf.    0.65402 (3) obj. -27906.2 iterations 17
Cbc0038I Pass   2: suminf.    0.65402 (3) obj. -27906.2 iterations 0
Cbc0038I Solution found of -21344.1
Cbc0038I Relaxing continuous gives -21344.1
Cbc0038I Rounding solution of -25571.2 is better than previous of -21344.1

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -25571.2 to -27216.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -27394.8
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.65402 (3) obj. -27906.2 iterations 0
Cbc0038I Pass   4: suminf.    0.65402 (3) obj. -27906.2 iterations 0
Cbc0038I Pass   5: suminf.    0.91638 (3) obj. -27394.8 iterations 14
Cbc0038I Pass   6: suminf.    0.67651 (2) obj. -27394.8 iterations 5
Cbc0038I Pass   7: suminf.    0.80560 (2) obj. -27394.8 iterations 7
Cbc0038I Pass   8: suminf.    0.75556 (2) obj. -27588.4 iterations 2
Cbc0038I Pass   9: suminf.    0.91638 (3) obj. -27394.8 iterations 6
Cbc0038I Pass  10: suminf.    2.17043 (6) obj. -27394.8 iterations 14
Cbc0038I Pass  11: suminf.    0.72327 (5) obj. -27394.8 iterations 4
Cbc0038I Pass  12: suminf.    0.68765 (5) obj. -27394.8 iterations 3
Cbc0038I Pass  13: suminf.    2.59250 (9) obj. -27394.8 iterations 17
Cbc0038I Pass  14: suminf.    0.88416 (9) obj. -27394.8 iterations 7
Cbc0038I Pass  15: suminf.    0.88416 (9) obj. -27394.8 iterations 0
Cbc0038I Pass  16: suminf.    0.31304 (5) obj. -27394.8 iterations 16
Cbc0038I Pass  17: suminf.    0.31304 (5) obj. -27394.8 iterations 0
Cbc0038I Pass  18: suminf.    1.44124 (4) obj. -27394.8 iterations 16
Cbc0038I Pass  19: suminf.    0.91638 (3) obj. -27394.8 iterations 5
Cbc0038I Pass  20: suminf.    0.67651 (2) obj. -27394.8 iterations 5
Cbc0038I Pass  21: suminf.    0.80560 (2) obj. -27394.8 iterations 6
Cbc0038I Pass  22: suminf.    0.75556 (2) obj. -27588.4 iterations 2
Cbc0038I Pass  23: suminf.    2.44004 (9) obj. -27394.8 iterations 9
Cbc0038I Pass  24: suminf.    1.16176 (11) obj. -27394.8 iterations 11
Cbc0038I Pass  25: suminf.    0.31304 (5) obj. -27394.8 iterations 21
Cbc0038I Pass  26: suminf.    0.31304 (5) obj. -27394.8 iterations 0
Cbc0038I Pass  27: suminf.    1.44124 (4) obj. -27394.8 iterations 16
Cbc0038I Pass  28: suminf.    0.91638 (3) obj. -27394.8 iterations 5
Cbc0038I Pass  29: suminf.    0.67651 (2) obj. -27394.8 iterations 4
Cbc0038I Pass  30: suminf.    0.80560 (2) obj. -27394.8 iterations 4
Cbc0038I Pass  31: suminf.    0.75556 (2) obj. -27588.4 iterations 2
Cbc0038I Pass  32: suminf.    0.65754 (3) obj. -27394.8 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -27216.3 - took 0.02 seconds
Cbc0012I Integer solution of -27216.329 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 130 rows 72 columns, reduced to 8 rows 8 columns
Cbc0031I 7 added rows had average density of 39.285714
Cbc0013I At root node, 7 cuts changed objective from -29001.284 to -28096.547 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 3.0 elements, 15 column cuts (15 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0004I Integer solution of -27632.809 found after 125 iterations and 2 nodes (0.36 seconds)
Cbc0001I Search completed - best objective -27632.809, took 167 iterations and 4 nodes (0.46 seconds)
Cbc0032I Strong branching done 56 times (277 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.47

