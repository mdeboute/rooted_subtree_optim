Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 42 (-21) rows, 23 (-9) columns and 124 (-53) elements
Clp0000I Optimal - objective value 106.56309
Coin0511I After Postsolve, objective 106.56309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.5630868 - 29 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 23 columns (22 integer (22 of which binary)) and 124 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.885%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.86165
Cbc0038I Pass   1: suminf.    0.17500 (1) obj. -68.425 iterations 14
Cbc0038I Solution found of -63
Cbc0038I Relaxing continuous gives -63
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 23 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -63 to -72 (0.01 seconds)
Cbc0038I Round again with cutoff of -76.0123
Cbc0038I Pass   2: suminf.    0.25386 (2) obj. -76.0123 iterations 1
Cbc0038I Pass   3: suminf.    0.21433 (2) obj. -76.0123 iterations 2
Cbc0038I Pass   4: suminf.    0.56522 (2) obj. -80.7609 iterations 4
Cbc0038I Pass   5: suminf.    0.08025 (1) obj. -76.0123 iterations 4
Cbc0038I Pass   6: suminf.    0.21251 (1) obj. -76.0123 iterations 1
Cbc0038I Pass   7: suminf.    0.79352 (3) obj. -76.0123 iterations 4
Cbc0038I Pass   8: suminf.    0.61896 (4) obj. -76.0123 iterations 6
Cbc0038I Pass   9: suminf.    0.43431 (3) obj. -76.0123 iterations 7
Cbc0038I Pass  10: suminf.    2.29227 (8) obj. -76.0123 iterations 6
Cbc0038I Pass  11: suminf.    1.14676 (4) obj. -76.0123 iterations 6
Cbc0038I Pass  12: suminf.    0.08025 (1) obj. -76.0123 iterations 6
Cbc0038I Pass  13: suminf.    0.21251 (1) obj. -76.0123 iterations 1
Cbc0038I Pass  14: suminf.    0.20345 (6) obj. -76.0123 iterations 6
Cbc0038I Pass  15: suminf.    0.16049 (2) obj. -76.0123 iterations 2
Cbc0038I Pass  16: suminf.    1.52695 (7) obj. -76.0123 iterations 3
Cbc0038I Pass  17: suminf.    0.43431 (3) obj. -76.0123 iterations 2
Cbc0038I Pass  18: suminf.    1.91581 (8) obj. -76.0123 iterations 6
Cbc0038I Pass  19: suminf.    0.27250 (2) obj. -76.0123 iterations 6
Cbc0038I Pass  20: suminf.    0.08025 (1) obj. -76.0123 iterations 2
Cbc0038I Pass  21: suminf.    0.21251 (1) obj. -76.0123 iterations 1
Cbc0038I Pass  22: suminf.    0.08025 (1) obj. -76.0123 iterations 5
Cbc0038I Pass  23: suminf.    0.08025 (1) obj. -76.0123 iterations 1
Cbc0038I Pass  24: suminf.    0.21251 (1) obj. -76.0123 iterations 1
Cbc0038I Pass  25: suminf.    0.97649 (4) obj. -76.0123 iterations 5
Cbc0038I Pass  26: suminf.    3.80520 (14) obj. -76.0123 iterations 6
Cbc0038I Pass  27: suminf.    0.60929 (3) obj. -76.0123 iterations 8
Cbc0038I Pass  28: suminf.    1.80903 (7) obj. -76.0123 iterations 4
Cbc0038I Pass  29: suminf.    0.28998 (2) obj. -76.0123 iterations 4
Cbc0038I Pass  30: suminf.    1.86042 (5) obj. -76.0123 iterations 5
Cbc0038I Pass  31: suminf.    1.19363 (6) obj. -76.0123 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 23 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -72 - took 0.03 seconds
Cbc0012I Integer solution of -72 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 42 rows 23 columns, reduced to 17 rows 12 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -103.12354 to -103.12354 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -72, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

