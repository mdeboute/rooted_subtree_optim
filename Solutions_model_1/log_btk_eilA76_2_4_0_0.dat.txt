Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 72 (-6) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 0.000151448 - average 1.14733e-06, 17 fixed columns
Coin0506I Presolve 92 (-40) rows, 55 (-17) columns and 287 (-113) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.26449426 - largest nonzero change 0 ( 0%) - largest zero change 2.7926465e-05
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Coin0511I After Postsolve, objective 53.587487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25356529 - largest nonzero change 0 ( 0%) - largest zero change 2.2016773e-05
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Clp0000I Optimal - objective value 53.587487
Coin0511I After Postsolve, objective 53.587487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.5874867 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 72 columns (71 integer (71 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 7.5136
Cbc0038I Solution found of -4.1067
Cbc0038I Relaxing continuous gives -4.1067
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -4.1067 to -22.3082 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.4362
Cbc0038I Pass   1: suminf.    2.03878 (12) obj. -25.4362 iterations 58
Cbc0038I Pass   2: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass   3: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass   4: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass   5: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass   6: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass   7: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass   8: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass   9: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass  10: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass  11: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass  12: suminf.    3.24279 (8) obj. -25.4362 iterations 17
Cbc0038I Pass  13: suminf.    2.81891 (7) obj. -25.4362 iterations 4
Cbc0038I Pass  14: suminf.    2.81212 (7) obj. -25.4362 iterations 1
Cbc0038I Pass  15: suminf.    2.06745 (12) obj. -25.4362 iterations 17
Cbc0038I Pass  16: suminf.    2.03878 (12) obj. -25.4362 iterations 1
Cbc0038I Pass  17: suminf.    2.02825 (6) obj. -25.4362 iterations 13
Cbc0038I Pass  18: suminf.    1.61367 (6) obj. -25.4362 iterations 4
Cbc0038I Pass  19: suminf.    2.39363 (8) obj. -25.4362 iterations 14
Cbc0038I Pass  20: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I Pass  21: suminf.    2.05997 (6) obj. -25.4362 iterations 11
Cbc0038I Pass  22: suminf.    1.85903 (6) obj. -25.4362 iterations 2
Cbc0038I Pass  23: suminf.    1.85903 (6) obj. -25.4362 iterations 0
Cbc0038I Pass  24: suminf.    1.88927 (7) obj. -25.4362 iterations 8
Cbc0038I Pass  25: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I Pass  26: suminf.    2.05997 (6) obj. -25.4362 iterations 11
Cbc0038I Pass  27: suminf.    1.85903 (6) obj. -25.4362 iterations 2
Cbc0038I Pass  28: suminf.    1.85903 (6) obj. -25.4362 iterations 0
Cbc0038I Pass  29: suminf.    1.88927 (7) obj. -25.4362 iterations 8
Cbc0038I Pass  30: suminf.    1.87581 (7) obj. -25.4362 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 66 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -22.3082 - took 0.07 seconds
Cbc0012I Integer solution of -22.30815 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 39 columns
Cbc0031I 27 added rows had average density of 34.592593
Cbc0013I At root node, 27 cuts changed objective from -53.587487 to -43.067257 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10654 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1990 row cuts average 62.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.30815 best solution, best possible -43.067257 (0.71 seconds)
Cbc0016I Integer solution of -22.4412 found by strong branching after 7852 iterations and 46 nodes (0.88 seconds)
Cbc0001I Search completed - best objective -22.4412, took 8437 iterations and 56 nodes (0.90 seconds)
Cbc0032I Strong branching done 646 times (12570 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 22, 185 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       0.91

