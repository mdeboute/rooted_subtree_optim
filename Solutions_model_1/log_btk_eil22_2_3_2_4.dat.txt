Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-31) rows, 12 (-12) columns and 50 (-79) elements
Clp1000I sum of infeasibilities 1.221e-07 - average 7.63127e-09, 3 fixed columns
Coin0506I Presolve 11 (-5) rows, 9 (-3) columns and 34 (-16) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 0.3428296 - largest nonzero change 0 ( 0%) - largest zero change 1.0940741e-05
Clp0000I Optimal - objective value 68.684689
Clp0000I Optimal - objective value 68.684689
Coin0511I After Postsolve, objective 68.684689, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.684689
Clp0000I Optimal - objective value 68.684689
Clp0000I Optimal - objective value 68.684689
Coin0511I After Postsolve, objective 68.684689, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.68468908 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 50 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.30724
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.6667 iterations 4
Cbc0038I Solution found of -25.6667
Cbc0038I Relaxing continuous gives -25.6667
Cbc0038I Rounding solution of -26 is better than previous of -25.6667

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.2605
Cbc0038I Pass   2: suminf.    0.12820 (2) obj. -30.2605 iterations 1
Cbc0038I Pass   3: suminf.    0.29550 (2) obj. -30.2605 iterations 3
Cbc0038I Pass   4: suminf.    0.25574 (1) obj. -30.2605 iterations 1
Cbc0038I Pass   5: suminf.    0.48009 (1) obj. -30.2605 iterations 1
Cbc0038I Pass   6: suminf.    1.16301 (3) obj. -30.2605 iterations 3
Cbc0038I Pass   7: suminf.    0.36177 (1) obj. -30.2605 iterations 2
Cbc0038I Pass   8: suminf.    0.07388 (2) obj. -30.2605 iterations 2
Cbc0038I Pass   9: suminf.    0.85552 (2) obj. -30.2605 iterations 1
Cbc0038I Pass  10: suminf.    0.85552 (2) obj. -30.2605 iterations 0
Cbc0038I Pass  11: suminf.    1.04272 (4) obj. -30.2605 iterations 3
Cbc0038I Pass  12: suminf.    0.96003 (4) obj. -30.2605 iterations 2
Cbc0038I Pass  13: suminf.    0.71424 (2) obj. -30.2605 iterations 3
Cbc0038I Pass  14: suminf.    0.73624 (2) obj. -30.2605 iterations 3
Cbc0038I Pass  15: suminf.    0.84532 (2) obj. -30.2605 iterations 1
Cbc0038I Pass  16: suminf.    0.84532 (2) obj. -30.2605 iterations 0
Cbc0038I Pass  17: suminf.    0.41967 (2) obj. -30.2605 iterations 2
Cbc0038I Pass  18: suminf.    0.90064 (2) obj. -30.2605 iterations 2
Cbc0038I Pass  19: suminf.    0.92094 (4) obj. -30.2605 iterations 2
Cbc0038I Pass  20: suminf.    0.90064 (2) obj. -30.2605 iterations 1
Cbc0038I Pass  21: suminf.    1.43159 (4) obj. -30.2605 iterations 4
Cbc0038I Pass  22: suminf.    1.41332 (4) obj. -30.2605 iterations 1
Cbc0038I Pass  23: suminf.    0.84384 (3) obj. -30.2605 iterations 5
Cbc0038I Pass  24: suminf.    0.75597 (3) obj. -30.2605 iterations 1
Cbc0038I Pass  25: suminf.    0.72355 (2) obj. -30.2605 iterations 1
Cbc0038I Pass  26: suminf.    0.07388 (2) obj. -30.2605 iterations 3
Cbc0038I Pass  27: suminf.    0.85552 (2) obj. -30.2605 iterations 1
Cbc0038I Pass  28: suminf.    0.85552 (2) obj. -30.2605 iterations 0
Cbc0038I Pass  29: suminf.    0.36177 (1) obj. -30.2605 iterations 1
Cbc0038I Pass  30: suminf.    0.36177 (1) obj. -30.2605 iterations 0
Cbc0038I Pass  31: suminf.    1.22395 (3) obj. -30.2605 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -26 - took 0.01 seconds
Cbc0012I Integer solution of -26.000033 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 12 columns, reduced to 7 rows 5 columns
Cbc0031I 6 added rows had average density of 10.166667
Cbc0013I At root node, 6 cuts changed objective from -68.603423 to -30.134018 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 182 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 288 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.754 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.000033 best solution, best possible -30.134018 (1.42 seconds)
Cbc0001I Search completed - best objective -26.000033, took 859 iterations and 2 nodes (1.42 seconds)
Cbc0032I Strong branching done 16 times (76 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       1.43

