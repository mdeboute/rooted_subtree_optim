Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 64 (-14) columns and 352 (-101) elements
Clp1000I sum of infeasibilities 0 - average 0, 56 fixed columns
Coin0506I Presolve 8 (-107) rows, 8 (-56) columns and 26 (-326) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 17814.886
Clp0000I Optimal - objective value 17814.886
Coin0511I After Postsolve, objective 17814.886, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9003051 - largest nonzero change 1.7772851e-05 ( 0.0012833346%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 17814.886
Clp0000I Optimal - objective value 17814.886
Clp0000I Optimal - objective value 17814.886
Coin0511I After Postsolve, objective 17814.886, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17814.88578 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 64 columns (63 integer (63 of which binary)) and 354 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.417%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.661017
Cbc0038I Pass   1: suminf.    0.03704 (1) obj. -17515 iterations 15
Cbc0038I Solution found of -13777.3
Cbc0038I Relaxing continuous gives -13777.3
Cbc0038I Rounding solution of -13882.3 is better than previous of -13777.3

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14275.5
Cbc0038I Pass   2: suminf.    0.03704 (1) obj. -17515 iterations 0
Cbc0038I Pass   3: suminf.    0.12836 (1) obj. -14275.5 iterations 6
Cbc0038I Pass   4: suminf.    0.84853 (2) obj. -14275.5 iterations 24
Cbc0038I Pass   5: suminf.    0.84853 (2) obj. -14275.5 iterations 4
Cbc0038I Pass   6: suminf.    0.31034 (1) obj. -15293.8 iterations 9
Cbc0038I Pass   7: suminf.    0.43508 (1) obj. -14275.5 iterations 1
Cbc0038I Pass   8: suminf.    1.40022 (5) obj. -14275.5 iterations 13
Cbc0038I Pass   9: suminf.    0.67175 (3) obj. -14275.5 iterations 8
Cbc0038I Pass  10: suminf.    0.20049 (1) obj. -14275.5 iterations 13
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -15073.5 iterations 2
Cbc0038I Solution found of -15073.5
Cbc0038I Relaxing continuous gives -15073.5
Cbc0038I Rounding solution of -16783.7 is better than previous of -15073.5

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -16989.9
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.03704 (1) obj. -17515 iterations 0
Cbc0038I Pass  13: suminf.    0.17232 (1) obj. -16989.9 iterations 3
Cbc0038I Pass  14: suminf.    0.03704 (1) obj. -17515 iterations 10
Cbc0038I Pass  15: suminf.    1.43360 (8) obj. -16989.9 iterations 20
Cbc0038I Pass  16: suminf.    0.97228 (4) obj. -16989.9 iterations 7
Cbc0038I Pass  17: suminf.    0.55086 (5) obj. -16989.9 iterations 7
Cbc0038I Pass  18: suminf.    0.92304 (3) obj. -16989.9 iterations 8
Cbc0038I Pass  19: suminf.    0.88206 (4) obj. -16989.9 iterations 5
Cbc0038I Pass  20: suminf.    0.88390 (3) obj. -17343.6 iterations 7
Cbc0038I Pass  21: suminf.    0.88390 (3) obj. -17343.6 iterations 0
Cbc0038I Pass  22: suminf.    0.88206 (4) obj. -16989.9 iterations 8
Cbc0038I Pass  23: suminf.    0.32038 (3) obj. -16989.9 iterations 13
Cbc0038I Pass  24: suminf.    0.15152 (1) obj. -17115.2 iterations 5
Cbc0038I Pass  25: suminf.    0.18646 (1) obj. -16989.9 iterations 5
Cbc0038I Pass  26: suminf.    0.15152 (1) obj. -17115.2 iterations 5
Cbc0038I Pass  27: suminf.    0.91804 (4) obj. -16989.9 iterations 7
Cbc0038I Pass  28: suminf.    0.90323 (4) obj. -17003.4 iterations 2
Cbc0038I Pass  29: suminf.    2.43578 (6) obj. -16989.9 iterations 10
Cbc0038I Pass  30: suminf.    2.22229 (6) obj. -16989.9 iterations 8
Cbc0038I Pass  31: suminf.    0.32038 (3) obj. -16989.9 iterations 10
Cbc0038I Pass  32: suminf.    0.15152 (1) obj. -17115.2 iterations 2
Cbc0038I Pass  33: suminf.    0.18646 (1) obj. -16989.9 iterations 3
Cbc0038I Pass  34: suminf.    0.48310 (4) obj. -16989.9 iterations 6
Cbc0038I Pass  35: suminf.    0.43806 (3) obj. -16989.9 iterations 10
Cbc0038I Pass  36: suminf.    0.82470 (4) obj. -16989.9 iterations 8
Cbc0038I Pass  37: suminf.    0.51027 (2) obj. -17340.8 iterations 3
Cbc0038I Pass  38: suminf.    0.88206 (4) obj. -16989.9 iterations 9
Cbc0038I Pass  39: suminf.    0.88390 (3) obj. -17343.6 iterations 5
Cbc0038I Pass  40: suminf.    0.88390 (3) obj. -17343.6 iterations 0
Cbc0038I Pass  41: suminf.    0.88206 (4) obj. -16989.9 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 24 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -15073.5 to -17045 (0.03 seconds)
Cbc0038I Round again with cutoff of -17275.9
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 4
Cbc0038I Pass  41: suminf.    0.03704 (1) obj. -17515 iterations 0
Cbc0038I Pass  42: suminf.    0.09863 (1) obj. -17275.9 iterations 3
Cbc0038I Pass  43: suminf.    0.64303 (4) obj. -17275.9 iterations 5
Cbc0038I Pass  44: suminf.    0.64303 (4) obj. -17275.9 iterations 0
Cbc0038I Pass  45: suminf.    1.56929 (6) obj. -17275.9 iterations 12
Cbc0038I Pass  46: suminf.    0.85450 (3) obj. -17275.9 iterations 6
Cbc0038I Pass  47: suminf.    0.84617 (6) obj. -17275.9 iterations 8
Cbc0038I Pass  48: suminf.    0.33317 (4) obj. -17275.9 iterations 10
Cbc0038I Pass  49: suminf.    0.99826 (3) obj. -17275.9 iterations 9
Cbc0038I Pass  50: suminf.    0.98350 (2) obj. -17275.9 iterations 4
Cbc0038I Pass  51: suminf.    0.88390 (3) obj. -17343.6 iterations 8
Cbc0038I Pass  52: suminf.    0.98350 (2) obj. -17275.9 iterations 8
Cbc0038I Pass  53: suminf.    0.68032 (3) obj. -17275.9 iterations 13
Cbc0038I Pass  54: suminf.    0.64303 (4) obj. -17275.9 iterations 3
Cbc0038I Pass  55: suminf.    1.56929 (6) obj. -17275.9 iterations 11
Cbc0038I Pass  56: suminf.    0.85450 (3) obj. -17275.9 iterations 6
Cbc0038I Pass  57: suminf.    0.64303 (4) obj. -17275.9 iterations 8
Cbc0038I Pass  58: suminf.    0.64303 (4) obj. -17275.9 iterations 1
Cbc0038I Pass  59: suminf.    0.60972 (5) obj. -17275.9 iterations 11
Cbc0038I Pass  60: suminf.    0.33317 (4) obj. -17275.9 iterations 2
Cbc0038I Pass  61: suminf.    0.99826 (3) obj. -17275.9 iterations 9
Cbc0038I Pass  62: suminf.    0.98350 (2) obj. -17275.9 iterations 4
Cbc0038I Pass  63: suminf.    0.88390 (3) obj. -17343.6 iterations 8
Cbc0038I Pass  64: suminf.    0.98350 (2) obj. -17275.9 iterations 8
Cbc0038I Pass  65: suminf.    0.97297 (2) obj. -17385.3 iterations 11
Cbc0038I Pass  66: suminf.    0.92933 (2) obj. -17275.9 iterations 8
Cbc0038I Pass  67: suminf.    0.92933 (2) obj. -17275.9 iterations 1
Cbc0038I Pass  68: suminf.    0.97297 (2) obj. -17385.3 iterations 4
Cbc0038I Pass  69: suminf.    0.52614 (2) obj. -17275.9 iterations 10
Cbc0038I Pass  70: suminf.    0.51027 (2) obj. -17340.8 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 64 columns, reduced to 17 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -17045 - took 0.03 seconds
Cbc0012I Integer solution of -17044.969 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 115 rows 64 columns, reduced to 4 rows 4 columns
Cbc0031I 5 added rows had average density of 16.4
Cbc0013I At root node, 5 cuts changed objective from -17814.886 to -17540.551 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 2.4 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -17044.969, took 180 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 44 times (245 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

