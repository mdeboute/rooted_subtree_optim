Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-9) rows, 22 (-3) columns and 116 (-19) elements
Clp1000I sum of infeasibilities 0 - average 0, 13 fixed columns
Coin0506I Presolve 9 (-31) rows, 9 (-13) columns and 30 (-86) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 7754.0658
Clp0000I Optimal - objective value 7754.0658
Coin0511I After Postsolve, objective 7754.0658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.0913352 - largest nonzero change 2.6331912e-05 ( 0.0026331912%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 7754.0658
Clp0000I Optimal - objective value 7754.0658
Clp0000I Optimal - objective value 7754.0658
Coin0511I After Postsolve, objective 7754.0658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7754.065784 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.646%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.99378
Cbc0038I Pass   1: suminf.    0.31931 (1) obj. -6293.02 iterations 8
Cbc0038I Solution found of -4593.24
Cbc0038I Relaxing continuous gives -4593.24
Cbc0038I Rounding solution of -5757 is better than previous of -4593.24

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5920.02
Cbc0038I Pass   2: suminf.    0.31931 (1) obj. -6293.02 iterations 0
Cbc0038I Pass   3: suminf.    0.24924 (1) obj. -5920.02 iterations 1
Cbc0038I Pass   4: suminf.    0.25152 (2) obj. -5920.02 iterations 4
Cbc0038I Pass   5: suminf.    0.25152 (2) obj. -5920.02 iterations 0
Cbc0038I Pass   6: suminf.    0.23267 (1) obj. -6523.54 iterations 2
Cbc0038I Pass   7: suminf.    0.11930 (1) obj. -5920.02 iterations 1
Cbc0038I Pass   8: suminf.    0.13724 (2) obj. -5920.02 iterations 3
Cbc0038I Pass   9: suminf.    0.13724 (2) obj. -5920.02 iterations 1
Cbc0038I Pass  10: suminf.    0.08416 (1) obj. -5974.92 iterations 2
Cbc0038I Pass  11: suminf.    0.07385 (1) obj. -5920.02 iterations 1
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -6114.46 iterations 2
Cbc0038I Solution found of -6114.46
Cbc0038I Relaxing continuous gives -6114.46
Cbc0038I Rounding solution of -6277.68 is better than previous of -6114.46

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6499.59
Cbc0038I Pass  13: suminf.    0.51370 (2) obj. -6499.59 iterations 1
Cbc0038I Pass  14: suminf.    0.51370 (2) obj. -6499.59 iterations 0
Cbc0038I Pass  15: suminf.    0.30732 (1) obj. -7023.07 iterations 2
Cbc0038I Pass  16: suminf.    0.40565 (1) obj. -6499.59 iterations 1
Cbc0038I Pass  17: suminf.    1.04672 (3) obj. -6499.59 iterations 5
Cbc0038I Pass  18: suminf.    0.51395 (2) obj. -6499.59 iterations 2
Cbc0038I Pass  19: suminf.    0.27594 (1) obj. -6499.59 iterations 1
Cbc0038I Pass  20: suminf.    0.38780 (1) obj. -7095.11 iterations 1
Cbc0038I Pass  21: suminf.    0.37154 (2) obj. -6499.59 iterations 8
Cbc0038I Pass  22: suminf.    0.37154 (2) obj. -6499.59 iterations 0
Cbc0038I Pass  23: suminf.    0.23049 (1) obj. -6787.45 iterations 2
Cbc0038I Pass  24: suminf.    0.17641 (1) obj. -6499.59 iterations 1
Cbc0038I Pass  25: suminf.    0.36356 (1) obj. -6499.59 iterations 2
Cbc0038I Pass  26: suminf.    0.36356 (1) obj. -6499.59 iterations 0
Cbc0038I Pass  27: suminf.    0.41341 (1) obj. -6764.99 iterations 1
Cbc0038I Pass  28: suminf.    0.40901 (1) obj. -6499.59 iterations 3
Cbc0038I Pass  29: suminf.    0.40901 (1) obj. -6499.59 iterations 1
Cbc0038I Pass  30: suminf.    0.44268 (1) obj. -6678.83 iterations 1
Cbc0038I Pass  31: suminf.    1.36137 (3) obj. -6709.09 iterations 6
Cbc0038I Pass  32: suminf.    0.87040 (2) obj. -6499.59 iterations 4
Cbc0038I Pass  33: suminf.    0.46707 (1) obj. -6691.48 iterations 2
Cbc0038I Pass  34: suminf.    0.43103 (1) obj. -6499.59 iterations 1
Cbc0038I Pass  35: suminf.    0.23929 (1) obj. -6499.59 iterations 5
Cbc0038I Pass  36: suminf.    0.23929 (1) obj. -6499.59 iterations 0
Cbc0038I Pass  37: suminf.    0.30244 (1) obj. -6835.78 iterations 1
Cbc0038I Pass  38: suminf.    0.11798 (1) obj. -6499.59 iterations 9
Cbc0038I Pass  39: suminf.    0.11798 (1) obj. -6499.59 iterations 0
Cbc0038I Pass  40: suminf.    0.12073 (1) obj. -6514.26 iterations 1
Cbc0038I Pass  41: suminf.    0.37998 (1) obj. -6499.59 iterations 9
Cbc0038I Pass  42: suminf.    0.37998 (1) obj. -6499.59 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -6277.68 - took 0.01 seconds
Cbc0012I Integer solution of -6277.6801 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 39 rows 22 columns, reduced to 11 rows 8 columns
Cbc0031I 16 added rows had average density of 12.5
Cbc0013I At root node, 16 cuts changed objective from -7387.2398 to -6617.0254 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 433 row cuts average 3.6 elements, 4 column cuts (4 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 203 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 135 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.692 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6277.6801 best solution, best possible -6617.0246 (1.35 seconds)
Cbc0012I Integer solution of -6431.2561 found by rounding after 897 iterations and 1 nodes (1.36 seconds)
Cbc0001I Search completed - best objective -6431.2561, took 992 iterations and 2 nodes (1.44 seconds)
Cbc0032I Strong branching done 32 times (265 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       1.44

