Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 275 (-28) elements
Clp1000I sum of infeasibilities 3.66952e-05 - average 4.07725e-07, 2 fixed columns
Coin0506I Presolve 86 (-4) rows, 49 (-2) columns and 263 (-12) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Coin0511I After Postsolve, objective 33.980836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Clp0000I Optimal - objective value 33.980836
Coin0511I After Postsolve, objective 33.980836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.98083607 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 275 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.70563
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.94997 iterations 38
Cbc0038I Solution found of 9.94997
Cbc0038I Relaxing continuous gives 9.94997
Cbc0038I Rounding solution of 7.79028 is better than previous of 9.94997

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 7.79028 to -1.89273 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.10163
Cbc0038I Pass   2: suminf.    2.06919 (8) obj. -5.10163 iterations 9
Cbc0038I Pass   3: suminf.    1.96003 (7) obj. -5.10163 iterations 1
Cbc0038I Pass   4: suminf.    2.18037 (7) obj. -5.10163 iterations 6
Cbc0038I Pass   5: suminf.    2.11201 (6) obj. -5.10163 iterations 1
Cbc0038I Pass   6: suminf.    2.44646 (7) obj. -5.10163 iterations 5
Cbc0038I Pass   7: suminf.    2.18037 (7) obj. -5.10163 iterations 2
Cbc0038I Pass   8: suminf.    2.38873 (10) obj. -5.10163 iterations 16
Cbc0038I Pass   9: suminf.    2.31840 (8) obj. -5.10163 iterations 3
Cbc0038I Pass  10: suminf.    1.85680 (6) obj. -5.10163 iterations 16
Cbc0038I Pass  11: suminf.    1.83028 (6) obj. -5.10163 iterations 2
Cbc0038I Pass  12: suminf.    2.27920 (6) obj. -5.10163 iterations 2
Cbc0038I Pass  13: suminf.    2.06919 (8) obj. -5.10163 iterations 4
Cbc0038I Pass  14: suminf.    1.96003 (7) obj. -5.10163 iterations 1
Cbc0038I Pass  15: suminf.    2.18037 (7) obj. -5.10163 iterations 6
Cbc0038I Pass  16: suminf.    2.11201 (6) obj. -5.10163 iterations 1
Cbc0038I Pass  17: suminf.    2.44646 (7) obj. -5.10163 iterations 5
Cbc0038I Pass  18: suminf.    2.18037 (7) obj. -5.10163 iterations 2
Cbc0038I Pass  19: suminf.    3.89903 (9) obj. -5.10163 iterations 17
Cbc0038I Pass  20: suminf.    2.06298 (10) obj. -5.10163 iterations 13
Cbc0038I Pass  21: suminf.    2.37383 (8) obj. -5.10163 iterations 12
Cbc0038I Pass  22: suminf.    2.36056 (8) obj. -5.10163 iterations 1
Cbc0038I Pass  23: suminf.    2.46641 (6) obj. -5.10163 iterations 9
Cbc0038I Pass  24: suminf.    1.65248 (6) obj. -5.10163 iterations 6
Cbc0038I Pass  25: suminf.    1.62169 (5) obj. -5.10163 iterations 1
Cbc0038I Pass  26: suminf.    1.52741 (6) obj. -5.10163 iterations 5
Cbc0038I Pass  27: suminf.    1.49691 (5) obj. -5.10163 iterations 1
Cbc0038I Pass  28: suminf.    1.65248 (6) obj. -5.10163 iterations 5
Cbc0038I Pass  29: suminf.    2.72609 (10) obj. -5.10163 iterations 18
Cbc0038I Pass  30: suminf.    1.37787 (6) obj. -5.10163 iterations 7
Cbc0038I Pass  31: suminf.    1.37787 (6) obj. -5.10163 iterations 0
Cbc0038I Rounding solution of -1.91942 is better than previous of -1.89273

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -10.8775
Cbc0038I Pass  31: suminf.    2.95107 (11) obj. -10.8775 iterations 4
Cbc0038I Pass  32: suminf.    2.95107 (11) obj. -10.8775 iterations 0
Cbc0038I Pass  33: suminf.    2.15227 (8) obj. -10.8775 iterations 9
Cbc0038I Pass  34: suminf.    2.12669 (8) obj. -10.8775 iterations 2
Cbc0038I Pass  35: suminf.    3.03493 (10) obj. -10.8775 iterations 8
Cbc0038I Pass  36: suminf.    2.28684 (7) obj. -10.8775 iterations 2
Cbc0038I Pass  37: suminf.    1.98823 (7) obj. -10.8775 iterations 4
Cbc0038I Pass  38: suminf.    2.59849 (7) obj. -10.8775 iterations 6
Cbc0038I Pass  39: suminf.    2.16628 (8) obj. -10.8775 iterations 3
Cbc0038I Pass  40: suminf.    4.41595 (15) obj. -10.8775 iterations 20
Cbc0038I Pass  41: suminf.    2.83580 (11) obj. -10.8775 iterations 11
Cbc0038I Pass  42: suminf.    2.47529 (12) obj. -10.8775 iterations 2
Cbc0038I Pass  43: suminf.    2.08071 (10) obj. -10.8775 iterations 4
Cbc0038I Pass  44: suminf.    2.08071 (10) obj. -10.8775 iterations 0
Cbc0038I Pass  45: suminf.    1.43387 (5) obj. -10.8775 iterations 16
Cbc0038I Pass  46: suminf.    1.42083 (6) obj. -10.8775 iterations 2
Cbc0038I Pass  47: suminf.    1.55534 (5) obj. -10.8775 iterations 6
Cbc0038I Pass  48: suminf.    1.55534 (5) obj. -10.8775 iterations 0
Cbc0038I Pass  49: suminf.    1.49005 (6) obj. -10.8775 iterations 5
Cbc0038I Pass  50: suminf.    4.02722 (12) obj. -10.8775 iterations 18
Cbc0038I Pass  51: suminf.    1.57457 (6) obj. -10.8775 iterations 10
Cbc0038I Pass  52: suminf.    1.57330 (6) obj. -10.8775 iterations 1
Cbc0038I Pass  53: suminf.    1.93347 (7) obj. -10.8775 iterations 16
Cbc0038I Pass  54: suminf.    1.69969 (5) obj. -10.8775 iterations 2
Cbc0038I Pass  55: suminf.    1.47656 (4) obj. -10.8775 iterations 5
Cbc0038I Pass  56: suminf.    1.85455 (6) obj. -10.8775 iterations 6
Cbc0038I Pass  57: suminf.    2.63466 (10) obj. -10.8775 iterations 14
Cbc0038I Pass  58: suminf.    2.36912 (10) obj. -10.8775 iterations 6
Cbc0038I Pass  59: suminf.    2.95107 (11) obj. -10.8775 iterations 18
Cbc0038I Pass  60: suminf.    2.95107 (11) obj. -10.8775 iterations 0
Cbc0038I Rounding solution of -2.09254 is better than previous of -1.91942

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -17.8085
Cbc0038I Pass  60: suminf.    4.22655 (14) obj. -17.8085 iterations 3
Cbc0038I Pass  61: suminf.    4.22655 (14) obj. -17.8085 iterations 0
Cbc0038I Pass  62: suminf.    3.82473 (10) obj. -17.8085 iterations 11
Cbc0038I Pass  63: suminf.    3.29848 (9) obj. -17.8085 iterations 4
Cbc0038I Pass  64: suminf.    2.89549 (9) obj. -17.8085 iterations 4
Cbc0038I Pass  65: suminf.    2.89549 (9) obj. -17.8085 iterations 0
Cbc0038I Pass  66: suminf.    3.39019 (9) obj. -17.8085 iterations 10
Cbc0038I Pass  67: suminf.    3.19649 (8) obj. -17.8085 iterations 2
Cbc0038I Pass  68: suminf.    2.57205 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  69: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  70: suminf.    3.39019 (9) obj. -17.8085 iterations 5
Cbc0038I Pass  71: suminf.    4.77975 (16) obj. -17.8085 iterations 15
Cbc0038I Pass  72: suminf.    4.72419 (15) obj. -17.8085 iterations 9
Cbc0038I Pass  73: suminf.    4.64176 (11) obj. -17.8085 iterations 20
Cbc0038I Pass  74: suminf.    3.83486 (10) obj. -17.8085 iterations 7
Cbc0038I Pass  75: suminf.    3.07980 (9) obj. -17.8085 iterations 1
Cbc0038I Pass  76: suminf.    3.00415 (9) obj. -17.8085 iterations 9
Cbc0038I Pass  77: suminf.    2.57205 (8) obj. -17.8085 iterations 6
Cbc0038I Pass  78: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  79: suminf.    3.39019 (9) obj. -17.8085 iterations 5
Cbc0038I Pass  80: suminf.    3.19649 (8) obj. -17.8085 iterations 2
Cbc0038I Pass  81: suminf.    2.57205 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  82: suminf.    3.59829 (10) obj. -17.8085 iterations 10
Cbc0038I Pass  83: suminf.    2.60513 (10) obj. -17.8085 iterations 10
Cbc0038I Pass  84: suminf.    2.60513 (10) obj. -17.8085 iterations 0
Cbc0038I Pass  85: suminf.    3.49407 (10) obj. -17.8085 iterations 9
Cbc0038I Pass  86: suminf.    3.19649 (8) obj. -17.8085 iterations 3
Cbc0038I Pass  87: suminf.    2.57205 (8) obj. -17.8085 iterations 4
Cbc0038I Pass  88: suminf.    2.57205 (8) obj. -17.8085 iterations 0
Cbc0038I Pass  89: suminf.    3.39019 (9) obj. -17.8085 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -2.09254 - took 0.15 seconds
Cbc0012I Integer solution of -2.09254 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 68 rows 40 columns
Cbc0031I 25 added rows had average density of 27.04
Cbc0013I At root node, 25 cuts changed objective from -33.980836 to -22.716718 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1914 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.09254 best solution, best possible -22.716718 (0.72 seconds)
Cbc0001I Search completed - best objective -2.092540000000007, took 8014 iterations and 38 nodes (0.82 seconds)
Cbc0032I Strong branching done 504 times (8099 iterations), fathomed 3 nodes and fixed 30 variables
Cbc0035I Maximum depth 9, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.82

