Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-9) rows, 33 (-2) columns and 178 (-17) elements
Clp1000I sum of infeasibilities 0.000395417 - average 6.59029e-06, 1 fixed columns
Coin0506I Presolve 56 (-4) rows, 32 (-1) columns and 168 (-10) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 2.9720688 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 90.575732
Clp0000I Optimal - objective value 90.575732
Coin0511I After Postsolve, objective 90.575732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.575732
Clp0000I Optimal - objective value 90.575732
Clp0000I Optimal - objective value 90.575732
Coin0511I After Postsolve, objective 90.575732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.57573236 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.87725
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -22.0147 iterations 17
Cbc0038I Solution found of -22.0147
Cbc0038I Relaxing continuous gives -22.0147
Cbc0038I Rounding solution of -24.4668 is better than previous of -22.0147

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -24.4668 to -37.0357 (0.01 seconds)
Cbc0038I Round again with cutoff of -42.3898
Cbc0038I Pass   2: suminf.    0.55688 (3) obj. -42.3898 iterations 4
Cbc0038I Pass   3: suminf.    1.29873 (4) obj. -42.3898 iterations 3
Cbc0038I Pass   4: suminf.    0.24331 (2) obj. -42.3898 iterations 4
Cbc0038I Pass   5: suminf.    0.74215 (2) obj. -42.3898 iterations 3
Cbc0038I Pass   6: suminf.    0.74215 (2) obj. -42.3898 iterations 0
Cbc0038I Pass   7: suminf.    0.64362 (3) obj. -42.3898 iterations 2
Cbc0038I Pass   8: suminf.    1.26482 (4) obj. -42.3898 iterations 5
Cbc0038I Pass   9: suminf.    0.81318 (4) obj. -42.3898 iterations 2
Cbc0038I Pass  10: suminf.    0.71162 (3) obj. -42.3898 iterations 1
Cbc0038I Pass  11: suminf.    1.59789 (5) obj. -42.3898 iterations 6
Cbc0038I Pass  12: suminf.    1.16146 (4) obj. -42.3898 iterations 6
Cbc0038I Pass  13: suminf.    1.16146 (4) obj. -42.3898 iterations 2
Cbc0038I Pass  14: suminf.    1.16146 (4) obj. -42.3898 iterations 2
Cbc0038I Pass  15: suminf.    1.26482 (4) obj. -42.3898 iterations 5
Cbc0038I Pass  16: suminf.    0.81318 (4) obj. -42.3898 iterations 2
Cbc0038I Pass  17: suminf.    0.71162 (3) obj. -42.3898 iterations 1
Cbc0038I Pass  18: suminf.    2.23840 (7) obj. -42.3898 iterations 11
Cbc0038I Pass  19: suminf.    2.15525 (6) obj. -42.3898 iterations 7
Cbc0038I Pass  20: suminf.    1.13401 (3) obj. -42.3898 iterations 6
Cbc0038I Pass  21: suminf.    1.13401 (3) obj. -42.3898 iterations 0
Cbc0038I Pass  22: suminf.    0.87932 (4) obj. -42.3898 iterations 4
Cbc0038I Pass  23: suminf.    0.69794 (3) obj. -42.3898 iterations 2
Cbc0038I Pass  24: suminf.    0.69794 (3) obj. -42.3898 iterations 0
Cbc0038I Pass  25: suminf.    1.31181 (3) obj. -42.3898 iterations 2
Cbc0038I Pass  26: suminf.    2.76183 (8) obj. -42.3898 iterations 7
Cbc0038I Pass  27: suminf.    1.31849 (5) obj. -42.3898 iterations 10
Cbc0038I Pass  28: suminf.    1.23841 (4) obj. -42.3898 iterations 6
Cbc0038I Pass  29: suminf.    0.53855 (2) obj. -42.3898 iterations 4
Cbc0038I Pass  30: suminf.    0.66060 (2) obj. -42.3898 iterations 2
Cbc0038I Pass  31: suminf.    1.35836 (6) obj. -42.3898 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 35 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -37.0357 to -38.116 (0.04 seconds)
Cbc0038I Round again with cutoff of -52.027
Cbc0038I Pass  31: suminf.    0.92851 (4) obj. -52.027 iterations 1
Cbc0038I Pass  32: suminf.    1.48201 (5) obj. -52.027 iterations 4
Cbc0038I Pass  33: suminf.    1.29544 (4) obj. -52.027 iterations 1
Cbc0038I Pass  34: suminf.    1.26098 (4) obj. -52.027 iterations 5
Cbc0038I Pass  35: suminf.    0.91920 (3) obj. -52.027 iterations 2
Cbc0038I Pass  36: suminf.    0.91354 (3) obj. -52.027 iterations 1
Cbc0038I Pass  37: suminf.    1.26098 (4) obj. -52.027 iterations 4
Cbc0038I Pass  38: suminf.    1.95211 (8) obj. -52.027 iterations 12
Cbc0038I Pass  39: suminf.    0.99825 (5) obj. -52.027 iterations 8
Cbc0038I Pass  40: suminf.    1.21494 (4) obj. -52.027 iterations 4
Cbc0038I Pass  41: suminf.    1.09553 (4) obj. -52.027 iterations 1
Cbc0038I Pass  42: suminf.    1.00151 (4) obj. -52.027 iterations 3
Cbc0038I Pass  43: suminf.    1.84864 (5) obj. -52.027 iterations 6
Cbc0038I Pass  44: suminf.    1.49151 (6) obj. -52.027 iterations 3
Cbc0038I Pass  45: suminf.    1.35412 (5) obj. -52.027 iterations 1
Cbc0038I Pass  46: suminf.    1.13951 (4) obj. -52.027 iterations 3
Cbc0038I Pass  47: suminf.    1.41745 (5) obj. -52.027 iterations 7
Cbc0038I Pass  48: suminf.    1.41745 (5) obj. -52.027 iterations 0
Cbc0038I Pass  49: suminf.    0.94926 (4) obj. -52.027 iterations 3
Cbc0038I Pass  50: suminf.    0.93918 (4) obj. -52.027 iterations 2
Cbc0038I Pass  51: suminf.    1.78384 (6) obj. -52.027 iterations 8
Cbc0038I Pass  52: suminf.    1.35412 (5) obj. -52.027 iterations 2
Cbc0038I Pass  53: suminf.    1.13951 (4) obj. -52.027 iterations 3
Cbc0038I Pass  54: suminf.    1.41745 (5) obj. -52.027 iterations 7
Cbc0038I Pass  55: suminf.    1.41745 (5) obj. -52.027 iterations 0
Cbc0038I Pass  56: suminf.    0.94926 (4) obj. -52.027 iterations 3
Cbc0038I Pass  57: suminf.    0.93918 (4) obj. -52.027 iterations 2
Cbc0038I Pass  58: suminf.    1.78384 (6) obj. -52.027 iterations 8
Cbc0038I Pass  59: suminf.    1.35412 (5) obj. -52.027 iterations 2
Cbc0038I Pass  60: suminf.    1.13951 (4) obj. -52.027 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -38.116 - took 0.05 seconds
Cbc0012I Integer solution of -38.116 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 22 rows 16 columns
Cbc0031I 14 added rows had average density of 24.142857
Cbc0013I At root node, 14 cuts changed objective from -90.575732 to -68.030735 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2000 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1183 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -38.11600000000001, took 3721 iterations and 26 nodes (0.41 seconds)
Cbc0032I Strong branching done 294 times (3428 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 6, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.42

