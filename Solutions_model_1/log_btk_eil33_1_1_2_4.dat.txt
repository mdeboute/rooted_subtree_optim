Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 2.09657e-05 - average 3.67819e-07, 0 fixed columns
Coin0506I Presolve 57 (0) rows, 33 (0) columns and 172 (0) elements
Clp0014I Perturbing problem by 0.001% of 3.0170835 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Coin0511I After Postsolve, objective 105.31511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Coin0511I After Postsolve, objective 105.31511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.3151052 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.20036
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.3818 iterations 25
Cbc0038I Solution found of -15.3818
Cbc0038I Relaxing continuous gives -15.3818
Cbc0038I Rounding solution of -32.9598 is better than previous of -15.3818

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -32.9598 to -45.1758 (0.06 seconds)
Cbc0038I Round again with cutoff of -51.1899
Cbc0038I Pass   2: suminf.    1.44998 (7) obj. -51.1899 iterations 5
Cbc0038I Pass   3: suminf.    0.77108 (3) obj. -51.1899 iterations 7
Cbc0038I Pass   4: suminf.    0.77108 (3) obj. -51.1899 iterations 0
Cbc0038I Pass   5: suminf.    1.34771 (4) obj. -51.1899 iterations 6
Cbc0038I Pass   6: suminf.    1.30751 (4) obj. -51.1899 iterations 3
Cbc0038I Pass   7: suminf.    1.19525 (5) obj. -51.1899 iterations 2
Cbc0038I Pass   8: suminf.    1.26981 (4) obj. -51.1899 iterations 6
Cbc0038I Pass   9: suminf.    0.74499 (4) obj. -51.1899 iterations 1
Cbc0038I Pass  10: suminf.    0.67894 (3) obj. -51.1899 iterations 1
Cbc0038I Pass  11: suminf.    1.04610 (4) obj. -51.1899 iterations 4
Cbc0038I Pass  12: suminf.    0.99778 (3) obj. -51.1899 iterations 1
Cbc0038I Pass  13: suminf.    0.67894 (3) obj. -51.1899 iterations 4
Cbc0038I Pass  14: suminf.    1.35892 (5) obj. -51.1899 iterations 11
Cbc0038I Pass  15: suminf.    0.88566 (5) obj. -51.1899 iterations 7
Cbc0038I Pass  16: suminf.    0.57221 (3) obj. -51.1899 iterations 5
Cbc0038I Pass  17: suminf.    0.47923 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  18: suminf.    0.76198 (3) obj. -51.1899 iterations 6
Cbc0038I Pass  19: suminf.    0.57328 (2) obj. -51.1899 iterations 3
Cbc0038I Pass  20: suminf.    0.57328 (2) obj. -51.1899 iterations 0
Cbc0038I Pass  21: suminf.    0.89538 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  22: suminf.    0.77058 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  23: suminf.    1.04086 (5) obj. -51.1899 iterations 4
Cbc0038I Pass  24: suminf.    1.04086 (5) obj. -51.1899 iterations 1
Cbc0038I Pass  25: suminf.    0.57328 (2) obj. -51.1899 iterations 6
Cbc0038I Pass  26: suminf.    0.57328 (2) obj. -51.1899 iterations 0
Cbc0038I Pass  27: suminf.    0.89538 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  28: suminf.    0.77058 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  29: suminf.    2.05685 (10) obj. -51.1899 iterations 10
Cbc0038I Pass  30: suminf.    1.65881 (5) obj. -51.1899 iterations 6
Cbc0038I Pass  31: suminf.    0.56636 (3) obj. -51.1899 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -45.1758 - took 0.09 seconds
Cbc0012I Integer solution of -45.17585 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 24 columns
Cbc0031I 13 added rows had average density of 28.846154
Cbc0013I At root node, 13 cuts changed objective from -105.31511 to -74.585706 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2785 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1248 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0038I Full problem 57 rows 33 columns, reduced to 10 rows 13 columns
Cbc0038I Full problem 57 rows 33 columns, reduced to 4 rows 5 columns
Cbc0001I Search completed - best objective -45.17585, took 4938 iterations and 100 nodes (0.62 seconds)
Cbc0032I Strong branching done 740 times (6387 iterations), fathomed 12 nodes and fixed 19 variables
Cbc0035I Maximum depth 10, 134 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.62

