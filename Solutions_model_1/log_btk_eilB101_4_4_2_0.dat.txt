Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 96 (-7) columns and 530 (-73) elements
Clp1000I sum of infeasibilities 2.04193e-05 - average 1.18031e-07, 10 fixed columns
Coin0506I Presolve 153 (-20) rows, 86 (-10) columns and 470 (-60) elements
Clp0029I End of values pass after 86 iterations
Clp0000I Optimal - objective value 48.20894
Clp0000I Optimal - objective value 48.20894
Coin0511I After Postsolve, objective 48.20894, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.20894
Clp0000I Optimal - objective value 48.20894
Clp0000I Optimal - objective value 48.20894
Coin0511I After Postsolve, objective 48.20894, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.20893998 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 172 rows, 96 columns (95 integer (95 of which binary)) and 536 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.993%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.50434
Cbc0038I Solution found of 1.22471
Cbc0038I Relaxing continuous gives -6.49898
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 96 columns, reduced to 81 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -6.49898 to -19.3898 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.27
Cbc0038I Pass   1: suminf.    2.24966 (36) obj. -22.27 iterations 63
Cbc0038I Pass   2: suminf.    2.62576 (7) obj. -22.27 iterations 37
Cbc0038I Pass   3: suminf.    2.62576 (7) obj. -22.27 iterations 1
Cbc0038I Pass   4: suminf.    1.67404 (7) obj. -22.27 iterations 27
Cbc0038I Pass   5: suminf.    1.48292 (13) obj. -22.27 iterations 7
Cbc0038I Pass   6: suminf.    2.64335 (7) obj. -22.27 iterations 19
Cbc0038I Pass   7: suminf.    1.39499 (4) obj. -22.27 iterations 7
Cbc0038I Pass   8: suminf.    1.17637 (4) obj. -22.27 iterations 3
Cbc0038I Pass   9: suminf.    2.29328 (7) obj. -22.27 iterations 9
Cbc0038I Pass  10: suminf.    2.21168 (9) obj. -22.27 iterations 2
Cbc0038I Pass  11: suminf.    1.73790 (6) obj. -22.27 iterations 15
Cbc0038I Pass  12: suminf.    1.38550 (5) obj. -22.27 iterations 2
Cbc0038I Pass  13: suminf.    1.80899 (7) obj. -22.27 iterations 10
Cbc0038I Pass  14: suminf.    1.80899 (7) obj. -22.27 iterations 0
Cbc0038I Pass  15: suminf.    2.59242 (8) obj. -22.27 iterations 14
Cbc0038I Pass  16: suminf.    2.17074 (7) obj. -22.27 iterations 4
Cbc0038I Pass  17: suminf.    2.30135 (6) obj. -22.27 iterations 7
Cbc0038I Pass  18: suminf.    1.95444 (6) obj. -22.27 iterations 6
Cbc0038I Pass  19: suminf.    2.22189 (6) obj. -22.27 iterations 9
Cbc0038I Pass  20: suminf.    2.15495 (6) obj. -22.27 iterations 5
Cbc0038I Pass  21: suminf.    2.35212 (8) obj. -22.27 iterations 22
Cbc0038I Pass  22: suminf.    2.20767 (9) obj. -22.27 iterations 8
Cbc0038I Pass  23: suminf.    1.68479 (7) obj. -22.27 iterations 9
Cbc0038I Pass  24: suminf.    1.39328 (6) obj. -22.27 iterations 11
Cbc0038I Pass  25: suminf.    1.37577 (6) obj. -22.27 iterations 12
Cbc0038I Pass  26: suminf.    1.19818 (6) obj. -22.27 iterations 5
Cbc0038I Pass  27: suminf.    2.24338 (8) obj. -22.27 iterations 14
Cbc0038I Pass  28: suminf.    2.21222 (10) obj. -22.27 iterations 2
Cbc0038I Pass  29: suminf.    1.73790 (6) obj. -22.27 iterations 15
Cbc0038I Pass  30: suminf.    1.38550 (5) obj. -22.27 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 172 rows 96 columns, reduced to 97 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -19.3898 - took 0.09 seconds
Cbc0012I Integer solution of -19.38982 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 172 rows 96 columns, reduced to 81 rows 47 columns
Cbc0031I 35 added rows had average density of 40.828571
Cbc0013I At root node, 35 cuts changed objective from -48.190324 to -42.192275 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22638 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2862 row cuts average 95.8 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 179 row cuts average 95.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.38982 best solution, best possible -42.192275 (1.67 seconds)
Cbc0038I Full problem 172 rows 96 columns, reduced to 70 rows 43 columns
Cbc0038I Full problem 172 rows 96 columns, reduced to 33 rows 21 columns
Cbc0001I Search completed - best objective -19.38982, took 16742 iterations and 120 nodes (2.24 seconds)
Cbc0032I Strong branching done 1220 times (19297 iterations), fathomed 2 nodes and fixed 84 variables
Cbc0035I Maximum depth 36, 250 variables fixed on reduced cost
Total time (CPU seconds):       2.16   (Wallclock seconds):       2.26

