Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 0.000344717 - average 1.8143e-06, 17 fixed columns
Coin0506I Presolve 151 (-39) rows, 81 (-20) columns and 456 (-118) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 2.344423 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Coin0511I After Postsolve, objective 40.063149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2391794 - largest nonzero change 0 ( 0%) - largest zero change 2.9075471e-05
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Clp0000I Optimal - objective value 40.063149
Coin0511I After Postsolve, objective 40.063149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.06314943 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 13.3217
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.79866 iterations 92
Cbc0038I Solution found of 6.79866
Cbc0038I Relaxing continuous gives 6.79866
Cbc0038I Rounding solution of -15.7979 is better than previous of 6.79866

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 102 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -15.7979 to -17.5482 (0.06 seconds)
Cbc0038I Round again with cutoff of -19.7998
Cbc0038I Pass   2: suminf.    2.66053 (13) obj. -19.7998 iterations 25
Cbc0038I Pass   3: suminf.    2.66053 (13) obj. -19.7998 iterations 0
Cbc0038I Pass   4: suminf.    2.20120 (10) obj. -19.7998 iterations 22
Cbc0038I Pass   5: suminf.    2.08720 (9) obj. -19.7998 iterations 5
Cbc0038I Pass   6: suminf.    1.19049 (5) obj. -19.7998 iterations 12
Cbc0038I Pass   7: suminf.    0.96268 (4) obj. -19.7998 iterations 2
Cbc0038I Pass   8: suminf.    1.14310 (3) obj. -19.7998 iterations 4
Cbc0038I Pass   9: suminf.    0.84110 (3) obj. -19.7998 iterations 2
Cbc0038I Pass  10: suminf.    0.95936 (5) obj. -19.7998 iterations 5
Cbc0038I Pass  11: suminf.    0.95936 (5) obj. -19.7998 iterations 0
Cbc0038I Pass  12: suminf.    1.74130 (5) obj. -19.7998 iterations 4
Cbc0038I Pass  13: suminf.    1.39385 (4) obj. -19.7998 iterations 4
Cbc0038I Pass  14: suminf.    1.51823 (4) obj. -19.7998 iterations 3
Cbc0038I Pass  15: suminf.    1.42688 (4) obj. -19.7998 iterations 1
Cbc0038I Pass  16: suminf.    2.02544 (9) obj. -19.7998 iterations 21
Cbc0038I Pass  17: suminf.    0.53809 (2) obj. -19.7998 iterations 15
Cbc0038I Pass  18: suminf.    0.44149 (3) obj. -19.7998 iterations 7
Cbc0038I Pass  19: suminf.    0.44149 (3) obj. -19.7998 iterations 0
Cbc0038I Pass  20: suminf.    0.99906 (3) obj. -19.7998 iterations 3
Cbc0038I Pass  21: suminf.    6.96638 (22) obj. -19.7998 iterations 32
Cbc0038I Pass  22: suminf.    3.53842 (12) obj. -19.7998 iterations 33
Cbc0038I Pass  23: suminf.    1.64285 (6) obj. -19.7998 iterations 16
Cbc0038I Pass  24: suminf.    1.57001 (5) obj. -19.7998 iterations 1
Cbc0038I Pass  25: suminf.    1.56117 (5) obj. -19.7998 iterations 1
Cbc0038I Pass  26: suminf.    1.99822 (6) obj. -19.7998 iterations 3
Cbc0038I Pass  27: suminf.    2.88262 (11) obj. -19.7998 iterations 21
Cbc0038I Pass  28: suminf.    1.76016 (6) obj. -19.7998 iterations 13
Cbc0038I Pass  29: suminf.    1.73233 (6) obj. -19.7998 iterations 1
Cbc0038I Pass  30: suminf.    2.00777 (6) obj. -19.7998 iterations 8
Cbc0038I Pass  31: suminf.    1.57006 (5) obj. -19.7998 iterations 3
Cbc0038I Rounding solution of -18.0538 is better than previous of -17.5482

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 114 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -18.0538 to -19.4506 (0.13 seconds)
Cbc0038I Round again with cutoff of -23.8525
Cbc0038I Pass  31: suminf.    3.66671 (13) obj. -23.8525 iterations 0
Cbc0038I Pass  32: suminf.    3.64114 (12) obj. -23.8525 iterations 7
Cbc0038I Pass  33: suminf.    2.69334 (11) obj. -23.8525 iterations 13
Cbc0038I Pass  34: suminf.    1.63853 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  35: suminf.    1.04167 (5) obj. -23.8525 iterations 5
Cbc0038I Pass  36: suminf.    2.27050 (8) obj. -23.8525 iterations 15
Cbc0038I Pass  37: suminf.    2.27268 (8) obj. -23.8525 iterations 1
Cbc0038I Pass  38: suminf.    2.70596 (8) obj. -23.8525 iterations 14
Cbc0038I Pass  39: suminf.    2.20954 (8) obj. -23.8525 iterations 4
Cbc0038I Pass  40: suminf.    3.14601 (8) obj. -23.8525 iterations 7
Cbc0038I Pass  41: suminf.    2.66253 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  42: suminf.    2.54355 (9) obj. -23.8525 iterations 17
Cbc0038I Pass  43: suminf.    1.87334 (7) obj. -23.8525 iterations 11
Cbc0038I Pass  44: suminf.    2.52397 (7) obj. -23.8525 iterations 12
Cbc0038I Pass  45: suminf.    1.61492 (7) obj. -23.8525 iterations 6
Cbc0038I Pass  46: suminf.    2.55791 (8) obj. -23.8525 iterations 6
Cbc0038I Pass  47: suminf.    2.10106 (8) obj. -23.8525 iterations 4
Cbc0038I Pass  48: suminf.    2.50942 (7) obj. -23.8525 iterations 17
Cbc0038I Pass  49: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  50: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  51: suminf.    2.17937 (8) obj. -23.8525 iterations 2
Cbc0038I Pass  52: suminf.    2.17937 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  53: suminf.    2.50942 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  54: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  55: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I Pass  56: suminf.    2.17937 (8) obj. -23.8525 iterations 2
Cbc0038I Pass  57: suminf.    2.17937 (8) obj. -23.8525 iterations 5
Cbc0038I Pass  58: suminf.    2.50942 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  59: suminf.    1.80479 (7) obj. -23.8525 iterations 5
Cbc0038I Pass  60: suminf.    2.35036 (8) obj. -23.8525 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 106 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -19.4506 - took 0.17 seconds
Cbc0012I Integer solution of -19.450598 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 103 rows 56 columns
Cbc0012I Integer solution of -19.55482 found by RINS after 0 iterations and 0 nodes (0.25 seconds)
Cbc0031I 35 added rows had average density of 65.6
Cbc0013I At root node, 35 cuts changed objective from -40.063149 to -33.62866 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24671 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2925 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 467 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.55482 best solution, best possible -33.62866 (1.89 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 36 rows 29 columns
Cbc0012I Integer solution of -20.40449 found by RINS after 13708 iterations and 41 nodes (2.19 seconds)
Cbc0001I Search completed - best objective -20.40449, took 15557 iterations and 82 nodes (2.27 seconds)
Cbc0032I Strong branching done 902 times (18985 iterations), fathomed 3 nodes and fixed 33 variables
Cbc0035I Maximum depth 34, 184 variables fixed on reduced cost
Total time (CPU seconds):       2.22   (Wallclock seconds):       2.29

