Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 371 (-156) rows, 198 (-66) columns and 1121 (-424) elements
Clp1000I sum of infeasibilities 1.59051e-05 - average 4.28708e-08, 193 fixed columns
Coin0506I Presolve 4 (-367) rows, 4 (-194) columns and 10 (-1111) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 260600.61
Clp0000I Optimal - objective value 260600.61
Coin0511I After Postsolve, objective 260600.61, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1459804 - largest nonzero change 0 ( 0%) - largest zero change 2.9992169e-05
Clp0000I Optimal - objective value 260600.61
Clp0000I Optimal - objective value 260600.61
Clp0000I Optimal - objective value 260600.61
Coin0511I After Postsolve, objective 260600.61, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 260600.6148 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 371 rows, 198 columns (197 integer (197 of which binary)) and 1121 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.469%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.334479
Cbc0038I Pass   1: suminf.    0.32911 (2) obj. -255926 iterations 27
Cbc0038I Solution found of -182322
Cbc0038I Relaxing continuous gives -182322
Cbc0038I Rounding solution of -228838 is better than previous of -182322

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 198 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -228838 to -240548 (0.03 seconds)
Cbc0038I Round again with cutoff of -242554
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32087 (2) obj. -259959 iterations 10
Cbc0038I Pass   3: suminf.    0.06222 (1) obj. -242554 iterations 14
Cbc0038I Pass   4: suminf.    0.06222 (1) obj. -242554 iterations 0
Cbc0038I Pass   5: suminf.    0.37037 (1) obj. -249551 iterations 11
Cbc0038I Pass   6: suminf.    0.18066 (1) obj. -242554 iterations 5
Cbc0038I Pass   7: suminf.    1.95132 (6) obj. -242554 iterations 38
Cbc0038I Pass   8: suminf.    0.26048 (4) obj. -242554 iterations 27
Cbc0038I Pass   9: suminf.    0.26048 (4) obj. -242554 iterations 0
Cbc0038I Pass  10: suminf.    1.24797 (4) obj. -242554 iterations 18
Cbc0038I Pass  11: suminf.    1.23258 (4) obj. -242554 iterations 6
Cbc0038I Pass  12: suminf.    0.65827 (3) obj. -242554 iterations 12
Cbc0038I Pass  13: suminf.    0.42715 (1) obj. -242554 iterations 11
Cbc0038I Pass  14: suminf.    0.38413 (2) obj. -247023 iterations 10
Cbc0038I Pass  15: suminf.    0.42715 (1) obj. -242554 iterations 13
Cbc0038I Pass  16: suminf.    0.81435 (4) obj. -242554 iterations 38
Cbc0038I Pass  17: suminf.    0.64554 (4) obj. -242554 iterations 15
Cbc0038I Pass  18: suminf.    0.90913 (3) obj. -242554 iterations 20
Cbc0038I Pass  19: suminf.    0.34335 (1) obj. -242554 iterations 9
Cbc0038I Pass  20: suminf.    0.28477 (2) obj. -246812 iterations 8
Cbc0038I Pass  21: suminf.    0.60899 (2) obj. -242554 iterations 13
Cbc0038I Pass  22: suminf.    0.38413 (2) obj. -247023 iterations 9
Cbc0038I Pass  23: suminf.    0.42715 (1) obj. -242554 iterations 11
Cbc0038I Pass  24: suminf.    0.42715 (1) obj. -242554 iterations 0
Cbc0038I Pass  25: suminf.    0.43320 (4) obj. -242554 iterations 34
Cbc0038I Pass  26: suminf.    0.42792 (3) obj. -242554 iterations 20
Cbc0038I Pass  27: suminf.    0.43008 (2) obj. -251432 iterations 14
Cbc0038I Solution found of -248916
Cbc0038I Relaxing continuous gives -248916
Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 198 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -248916 to -253041 (0.06 seconds)
Cbc0038I Round again with cutoff of -254553
Cbc0038I Reduced cost fixing fixed 148 variables on major pass 3
Cbc0038I Pass  28: suminf.    0.32087 (2) obj. -259959 iterations 0
Cbc0038I Pass  29: suminf.    0.45280 (2) obj. -254553 iterations 12
Cbc0038I Pass  30: suminf.    0.45280 (2) obj. -254553 iterations 0
Cbc0038I Pass  31: suminf.    0.67799 (3) obj. -254553 iterations 12
Cbc0038I Pass  32: suminf.    0.37791 (1) obj. -254553 iterations 14
Cbc0038I Pass  33: suminf.    0.32087 (2) obj. -259959 iterations 4
Cbc0038I Pass  34: suminf.    0.45280 (2) obj. -254553 iterations 12
Cbc0038I Pass  35: suminf.    0.45280 (2) obj. -254553 iterations 0
Cbc0038I Pass  36: suminf.    0.67799 (3) obj. -254553 iterations 12
Cbc0038I Pass  37: suminf.    0.37791 (1) obj. -254553 iterations 14
Cbc0038I Pass  38: suminf.    0.32087 (2) obj. -259959 iterations 4
Cbc0038I Pass  39: suminf.    0.45280 (2) obj. -254553 iterations 12
Cbc0038I Pass  40: suminf.    0.45280 (2) obj. -254553 iterations 0
Cbc0038I Pass  41: suminf.    0.67799 (3) obj. -254553 iterations 12
Cbc0038I Pass  42: suminf.    0.37791 (1) obj. -254553 iterations 14
Cbc0038I Pass  43: suminf.    0.32087 (2) obj. -259959 iterations 4
Cbc0038I Pass  44: suminf.    0.45280 (2) obj. -254553 iterations 12
Cbc0038I Pass  45: suminf.    0.45280 (2) obj. -254553 iterations 0
Cbc0038I Pass  46: suminf.    0.67799 (3) obj. -254553 iterations 12
Cbc0038I Pass  47: suminf.    0.37791 (1) obj. -254553 iterations 14
Cbc0038I Pass  48: suminf.    0.32087 (2) obj. -259959 iterations 4
Cbc0038I Pass  49: suminf.    0.45280 (2) obj. -254553 iterations 12
Cbc0038I Pass  50: suminf.    0.45280 (2) obj. -254553 iterations 0
Cbc0038I Pass  51: suminf.    0.67799 (3) obj. -254553 iterations 12
Cbc0038I Pass  52: suminf.    0.37791 (1) obj. -254553 iterations 14
Cbc0038I Pass  53: suminf.    0.32087 (2) obj. -259959 iterations 4
Cbc0038I Pass  54: suminf.    0.45280 (2) obj. -254553 iterations 12
Cbc0038I Pass  55: suminf.    0.45280 (2) obj. -254553 iterations 0
Cbc0038I Pass  56: suminf.    0.67799 (3) obj. -254553 iterations 12
Cbc0038I Pass  57: suminf.    0.37791 (1) obj. -254553 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 371 rows 198 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -253041 - took 0.06 seconds
Cbc0012I Integer solution of -253041.06 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 371 rows 198 columns, reduced to 4 rows 5 columns
Cbc0031I 7 added rows had average density of 17.714286
Cbc0013I At root node, 7 cuts changed objective from -260600.61 to -255830.66 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 47 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 193.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -253041.06, took 181 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 46 times (253 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 134 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

