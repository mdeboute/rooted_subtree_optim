Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 32 (-3) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 6.47113e-07 - average 1.15556e-08, 5 fixed columns
Coin0506I Presolve 44 (-12) rows, 27 (-5) columns and 135 (-33) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Coin0511I After Postsolve, objective 95.171234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Clp0000I Optimal - objective value 95.171234
Coin0511I After Postsolve, objective 95.171234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.17123357 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 56 rows, 32 columns (31 integer (31 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.596%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.68457
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.5145 iterations 21
Cbc0038I Solution found of -13.5145
Cbc0038I Relaxing continuous gives -13.5145
Cbc0038I Rounding solution of -18.6564 is better than previous of -13.5145

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -18.6564 to -43.7716 (0.03 seconds)
Cbc0038I Round again with cutoff of -48.9116
Cbc0038I Pass   2: suminf.    0.71649 (2) obj. -48.9116 iterations 2
Cbc0038I Pass   3: suminf.    0.26124 (4) obj. -48.9116 iterations 4
Cbc0038I Pass   4: suminf.    0.45271 (2) obj. -48.9116 iterations 6
Cbc0038I Pass   5: suminf.    0.45271 (2) obj. -48.9116 iterations 0
Cbc0038I Pass   6: suminf.    0.71649 (2) obj. -48.9116 iterations 6
Cbc0038I Pass   7: suminf.    2.96077 (8) obj. -48.9116 iterations 9
Cbc0038I Pass   8: suminf.    1.68609 (4) obj. -48.9116 iterations 3
Cbc0038I Pass   9: suminf.    0.55785 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  10: suminf.    0.55785 (2) obj. -48.9116 iterations 0
Cbc0038I Pass  11: suminf.    0.91354 (2) obj. -48.9116 iterations 1
Cbc0038I Pass  12: suminf.    0.78223 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  13: suminf.    0.55251 (2) obj. -48.9116 iterations 2
Cbc0038I Pass  14: suminf.    0.78223 (2) obj. -48.9116 iterations 1
Cbc0038I Pass  15: suminf.    2.15107 (8) obj. -48.9116 iterations 16
Cbc0038I Pass  16: suminf.    0.76621 (4) obj. -48.9116 iterations 7
Cbc0038I Pass  17: suminf.    1.20898 (3) obj. -48.9116 iterations 8
Cbc0038I Pass  18: suminf.    0.24031 (3) obj. -48.9116 iterations 3
Cbc0038I Pass  19: suminf.    0.44554 (2) obj. -48.9116 iterations 4
Cbc0038I Pass  20: suminf.    0.22935 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  21: suminf.    0.40884 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  22: suminf.    1.98463 (4) obj. -48.9116 iterations 5
Cbc0038I Pass  23: suminf.    1.26065 (3) obj. -48.9116 iterations 2
Cbc0038I Pass  24: suminf.    0.82190 (3) obj. -48.9116 iterations 1
Cbc0038I Pass  25: suminf.    0.67621 (4) obj. -48.9116 iterations 2
Cbc0038I Pass  26: suminf.    0.68621 (2) obj. -48.9116 iterations 4
Cbc0038I Pass  27: suminf.    0.39148 (2) obj. -48.9116 iterations 3
Cbc0038I Pass  28: suminf.    0.16812 (1) obj. -48.9116 iterations 2
Cbc0038I Pass  29: suminf.    0.47133 (1) obj. -48.9116 iterations 1
Cbc0038I Pass  30: suminf.    2.31596 (6) obj. -48.9116 iterations 11
Cbc0038I Pass  31: suminf.    1.41833 (4) obj. -48.9116 iterations 3
Cbc0038I Rounding solution of -47.6114 is better than previous of -43.7716

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -47.6114 to -52.8094 (0.05 seconds)
Cbc0038I Round again with cutoff of -61.2818
Cbc0038I Pass  31: suminf.    1.24209 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  32: suminf.    1.09900 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  33: suminf.    1.33454 (4) obj. -61.2818 iterations 6
Cbc0038I Pass  34: suminf.    1.33454 (4) obj. -61.2818 iterations 2
Cbc0038I Pass  35: suminf.    1.24209 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  36: suminf.    2.30446 (6) obj. -61.2818 iterations 8
Cbc0038I Pass  37: suminf.    1.17886 (5) obj. -61.2818 iterations 4
Cbc0038I Pass  38: suminf.    1.17886 (5) obj. -61.2818 iterations 0
Cbc0038I Pass  39: suminf.    0.78333 (2) obj. -61.2818 iterations 5
Cbc0038I Pass  40: suminf.    0.43390 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  41: suminf.    0.78333 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  42: suminf.    0.99323 (10) obj. -61.2818 iterations 16
Cbc0038I Pass  43: suminf.    0.74541 (5) obj. -61.2818 iterations 9
Cbc0038I Pass  44: suminf.    0.76172 (3) obj. -61.2818 iterations 7
Cbc0038I Pass  45: suminf.    0.74492 (4) obj. -61.2818 iterations 1
Cbc0038I Pass  46: suminf.    1.42516 (5) obj. -61.2818 iterations 4
Cbc0038I Pass  47: suminf.    0.72113 (4) obj. -61.2818 iterations 3
Cbc0038I Pass  48: suminf.    0.90463 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  49: suminf.    0.90463 (4) obj. -61.2818 iterations 1
Cbc0038I Pass  50: suminf.    0.91912 (4) obj. -61.2818 iterations 4
Cbc0038I Pass  51: suminf.    1.53524 (5) obj. -61.2818 iterations 20
Cbc0038I Pass  52: suminf.    0.61938 (3) obj. -61.2818 iterations 10
Cbc0038I Pass  53: suminf.    0.62151 (3) obj. -61.2818 iterations 4
Cbc0038I Pass  54: suminf.    0.78333 (2) obj. -61.2818 iterations 3
Cbc0038I Pass  55: suminf.    0.43390 (2) obj. -61.2818 iterations 2
Cbc0038I Pass  56: suminf.    1.20868 (6) obj. -61.2818 iterations 11
Cbc0038I Pass  57: suminf.    0.88493 (3) obj. -61.2818 iterations 5
Cbc0038I Pass  58: suminf.    1.01748 (3) obj. -61.2818 iterations 5
Cbc0038I Pass  59: suminf.    0.82711 (3) obj. -61.2818 iterations 2
Cbc0038I Pass  60: suminf.    0.44895 (3) obj. -61.2818 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 32 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -52.8094 - took 0.06 seconds
Cbc0012I Integer solution of -52.809362 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 56 rows 32 columns, reduced to 35 rows 21 columns
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -95.171234 to -73.820178 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1852 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 775 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -52.80936199999999, took 2497 iterations and 8 nodes (0.31 seconds)
Cbc0032I Strong branching done 132 times (1317 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

