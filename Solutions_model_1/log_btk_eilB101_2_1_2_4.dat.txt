Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 168 (-37) rows, 96 (-7) columns and 520 (-83) elements
Clp1000I sum of infeasibilities 9.86997e-05 - average 5.87498e-07, 31 fixed columns
Coin0506I Presolve 94 (-74) rows, 57 (-39) columns and 294 (-226) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Coin0511I After Postsolve, objective 46.871095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20450111 - largest nonzero change 0 ( 0%) - largest zero change 2.8539162e-05
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Coin0511I After Postsolve, objective 46.871095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.87109507 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 96 columns (95 integer (95 of which binary)) and 525 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.55321
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.2376 iterations 84
Cbc0038I Solution found of -0.2376
Cbc0038I Relaxing continuous gives -0.2376
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -0.2376 to -20.2736 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.9334
Cbc0038I Pass   2: suminf.    2.51546 (12) obj. -22.9334 iterations 22
Cbc0038I Pass   3: suminf.    1.31385 (5) obj. -22.9334 iterations 21
Cbc0038I Pass   4: suminf.    1.31385 (5) obj. -22.9334 iterations 1
Cbc0038I Pass   5: suminf.    1.81896 (6) obj. -22.9334 iterations 20
Cbc0038I Pass   6: suminf.    1.78701 (7) obj. -22.9334 iterations 5
Cbc0038I Pass   7: suminf.    2.02310 (5) obj. -22.9334 iterations 15
Cbc0038I Pass   8: suminf.    1.46680 (5) obj. -22.9334 iterations 3
Cbc0038I Pass   9: suminf.    1.81863 (7) obj. -22.9334 iterations 17
Cbc0038I Pass  10: suminf.    1.41994 (7) obj. -22.9334 iterations 8
Cbc0038I Pass  11: suminf.    0.93127 (3) obj. -22.9334 iterations 12
Cbc0038I Pass  12: suminf.    0.91185 (4) obj. -22.9334 iterations 2
Cbc0038I Pass  13: suminf.    0.97542 (3) obj. -22.9334 iterations 6
Cbc0038I Pass  14: suminf.    0.62672 (2) obj. -22.9334 iterations 3
Cbc0038I Pass  15: suminf.    2.87167 (10) obj. -22.9334 iterations 30
Cbc0038I Pass  16: suminf.    1.98918 (9) obj. -22.9334 iterations 16
Cbc0038I Pass  17: suminf.    1.98918 (9) obj. -22.9334 iterations 0
Cbc0038I Pass  18: suminf.    2.71983 (8) obj. -22.9334 iterations 17
Cbc0038I Pass  19: suminf.    1.99727 (7) obj. -22.9334 iterations 8
Cbc0038I Pass  20: suminf.    1.88232 (7) obj. -22.9334 iterations 4
Cbc0038I Pass  21: suminf.    1.25282 (4) obj. -22.9334 iterations 10
Cbc0038I Pass  22: suminf.    1.91679 (6) obj. -22.9334 iterations 9
Cbc0038I Pass  23: suminf.    1.78701 (7) obj. -22.9334 iterations 9
Cbc0038I Pass  24: suminf.    2.02310 (5) obj. -22.9334 iterations 14
Cbc0038I Pass  25: suminf.    1.46680 (5) obj. -22.9334 iterations 3
Cbc0038I Pass  26: suminf.    1.81959 (10) obj. -22.9334 iterations 15
Cbc0038I Pass  27: suminf.    1.67075 (8) obj. -22.9334 iterations 8
Cbc0038I Pass  28: suminf.    1.67075 (8) obj. -22.9334 iterations 1
Cbc0038I Pass  29: suminf.    1.37830 (3) obj. -22.9334 iterations 9
Cbc0038I Pass  30: suminf.    0.95644 (4) obj. -22.9334 iterations 9
Cbc0038I Pass  31: suminf.    1.30853 (3) obj. -22.9334 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -20.2736 to -20.5426 (0.10 seconds)
Cbc0038I Round again with cutoff of -27.7209
Cbc0038I Pass  31: suminf.    3.16616 (14) obj. -27.7209 iterations 2
Cbc0038I Pass  32: suminf.    1.76532 (7) obj. -27.7209 iterations 22
Cbc0038I Pass  33: suminf.    1.55960 (8) obj. -27.7209 iterations 5
Cbc0038I Pass  34: suminf.    0.84935 (3) obj. -27.7209 iterations 17
Cbc0038I Pass  35: suminf.    0.84935 (3) obj. -27.7209 iterations 1
Cbc0038I Pass  36: suminf.    1.14280 (3) obj. -27.7209 iterations 6
Cbc0038I Pass  37: suminf.    2.13306 (7) obj. -27.7209 iterations 17
Cbc0038I Pass  38: suminf.    2.02503 (7) obj. -27.7209 iterations 10
Cbc0038I Pass  39: suminf.    3.55478 (10) obj. -27.7209 iterations 15
Cbc0038I Pass  40: suminf.    2.11666 (11) obj. -27.7209 iterations 11
Cbc0038I Pass  41: suminf.    1.93655 (12) obj. -27.7209 iterations 6
Cbc0038I Pass  42: suminf.    3.75893 (12) obj. -27.7209 iterations 13
Cbc0038I Pass  43: suminf.    3.75893 (12) obj. -27.7209 iterations 4
Cbc0038I Pass  44: suminf.    2.71221 (10) obj. -27.7209 iterations 34
Cbc0038I Pass  45: suminf.    2.71221 (10) obj. -27.7209 iterations 0
Cbc0038I Pass  46: suminf.    2.13124 (7) obj. -27.7209 iterations 14
Cbc0038I Pass  47: suminf.    2.04566 (8) obj. -27.7209 iterations 5
Cbc0038I Pass  48: suminf.    1.44869 (5) obj. -27.7209 iterations 13
Cbc0038I Pass  49: suminf.    0.94856 (3) obj. -27.7209 iterations 2
Cbc0038I Pass  50: suminf.    1.43930 (4) obj. -27.7209 iterations 10
Cbc0038I Pass  51: suminf.    1.43930 (4) obj. -27.7209 iterations 0
Cbc0038I Pass  52: suminf.    1.48524 (4) obj. -27.7209 iterations 4
Cbc0038I Pass  53: suminf.    1.42177 (4) obj. -27.7209 iterations 4
Cbc0038I Pass  54: suminf.    1.45881 (5) obj. -27.7209 iterations 6
Cbc0038I Pass  55: suminf.    5.28747 (16) obj. -27.7209 iterations 24
Cbc0038I Pass  56: suminf.    3.78082 (11) obj. -27.7209 iterations 22
Cbc0038I Pass  57: suminf.    3.56492 (11) obj. -27.7209 iterations 2
Cbc0038I Pass  58: suminf.    1.98193 (5) obj. -27.7209 iterations 14
Cbc0038I Pass  59: suminf.    1.74747 (5) obj. -27.7209 iterations 3
Cbc0038I Pass  60: suminf.    1.34453 (6) obj. -27.7209 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 84 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -20.5426 - took 0.13 seconds
Cbc0012I Integer solution of -20.54263 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 168 rows 96 columns, reduced to 70 rows 43 columns
Cbc0031I 23 added rows had average density of 68.347826
Cbc0013I At root node, 23 cuts changed objective from -46.871095 to -38.564846 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10117 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1601 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.54263 best solution, best possible -38.564846 (1.14 seconds)
Cbc0038I Full problem 168 rows 96 columns, reduced to 7 rows 9 columns
Cbc0038I Full problem 168 rows 96 columns, reduced to 61 rows 36 columns
Cbc0001I Search completed - best objective -20.54263, took 10468 iterations and 122 nodes (1.62 seconds)
Cbc0032I Strong branching done 1144 times (20236 iterations), fathomed 13 nodes and fixed 79 variables
Cbc0035I Maximum depth 32, 488 variables fixed on reduced cost
Total time (CPU seconds):       1.56   (Wallclock seconds):       1.64

