Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 262 (-2) columns and 1506 (-39) elements
Clp1000I sum of infeasibilities 0.000106771 - average 2.10594e-07, 107 fixed columns
Coin0506I Presolve 286 (-221) rows, 150 (-112) columns and 845 (-661) elements
Clp0029I End of values pass after 150 iterations
Clp0014I Perturbing problem by 0.001% of 0.15794768 - largest nonzero change 0 ( 0%) - largest zero change 2.9214168e-05
Clp0000I Optimal - objective value 113.36162
Clp0000I Optimal - objective value 113.36162
Coin0511I After Postsolve, objective 113.36162, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13327034 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 113.36162
Clp0000I Optimal - objective value 113.36162
Clp0000I Optimal - objective value 113.36162
Coin0511I After Postsolve, objective 113.36162, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.3616229 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 262 columns (261 integer (261 of which binary)) and 1506 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 78 integers unsatisfied sum - 12.542
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.5464 iterations 257
Cbc0038I Solution found of 12.5464
Cbc0038I Relaxing continuous gives 12.5464
Cbc0038I Rounding solution of -6.45137 is better than previous of 12.5464

Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 146 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -6.45137 to -49.3907 (0.08 seconds)
Cbc0038I Round again with cutoff of -55.7879
Cbc0038I Pass   2: suminf.    4.10309 (35) obj. -55.7879 iterations 56
Cbc0038I Pass   3: suminf.    3.78198 (57) obj. -55.7879 iterations 43
Cbc0038I Pass   4: suminf.    2.83374 (9) obj. -55.7879 iterations 82
Cbc0038I Pass   5: suminf.    2.42959 (8) obj. -55.7879 iterations 4
Cbc0038I Pass   6: suminf.    3.10867 (12) obj. -55.7879 iterations 33
Cbc0038I Pass   7: suminf.    3.06496 (13) obj. -55.7879 iterations 2
Cbc0038I Pass   8: suminf.    3.16931 (9) obj. -55.7879 iterations 22
Cbc0038I Pass   9: suminf.    2.40100 (7) obj. -55.7879 iterations 7
Cbc0038I Pass  10: suminf.    2.10922 (7) obj. -55.7879 iterations 9
Cbc0038I Pass  11: suminf.    3.06198 (9) obj. -55.7879 iterations 12
Cbc0038I Pass  12: suminf.    2.77972 (11) obj. -55.7879 iterations 11
Cbc0038I Pass  13: suminf.    3.19157 (10) obj. -55.7879 iterations 18
Cbc0038I Pass  14: suminf.    2.68984 (9) obj. -55.7879 iterations 10
Cbc0038I Pass  15: suminf.    3.29826 (9) obj. -55.7879 iterations 20
Cbc0038I Pass  16: suminf.    2.62472 (8) obj. -55.7879 iterations 6
Cbc0038I Pass  17: suminf.    2.60657 (8) obj. -55.7879 iterations 3
Cbc0038I Pass  18: suminf.    3.06211 (8) obj. -55.7879 iterations 9
Cbc0038I Pass  19: suminf.    2.58860 (8) obj. -55.7879 iterations 9
Cbc0038I Pass  20: suminf.    3.09180 (8) obj. -55.7879 iterations 11
Cbc0038I Pass  21: suminf.    3.05388 (9) obj. -55.7879 iterations 14
Cbc0038I Pass  22: suminf.    3.12411 (10) obj. -55.7879 iterations 22
Cbc0038I Pass  23: suminf.    2.50207 (9) obj. -55.7879 iterations 8
Cbc0038I Pass  24: suminf.    2.50207 (9) obj. -55.7879 iterations 0
Cbc0038I Pass  25: suminf.    3.92609 (9) obj. -55.7879 iterations 12
Cbc0038I Pass  26: suminf.    3.09777 (10) obj. -55.7879 iterations 17
Cbc0038I Pass  27: suminf.    3.01919 (10) obj. -55.7879 iterations 7
Cbc0038I Pass  28: suminf.    3.63690 (9) obj. -55.7879 iterations 13
Cbc0038I Pass  29: suminf.    3.12535 (9) obj. -55.7879 iterations 10
Cbc0038I Pass  30: suminf.    3.13959 (9) obj. -55.7879 iterations 11
Cbc0038I Pass  31: suminf.    4.61987 (13) obj. -55.7879 iterations 57
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 212 rows 113 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -49.3907 - took 0.19 seconds
Cbc0012I Integer solution of -49.39075 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 146 rows 79 columns
Cbc0031I 29 added rows had average density of 171.72414
Cbc0013I At root node, 29 cuts changed objective from -113.36162 to -101.82256 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 38670 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.507 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3167 row cuts average 259.3 elements, 0 column cuts (0 active)  in 0.513 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.540 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 256.6 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -49.39075 best solution, best possible -101.82256 (5.87 seconds)
Cbc0010I After 17 nodes, 8 on tree, -49.39075 best solution, best possible -101.82256 (6.57 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 43 rows 29 columns
Cbc0012I Integer solution of -50.87622 found by rounding after 25620 iterations and 43 nodes (6.88 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 3 rows 4 columns
Cbc0010I After 135 nodes, 16 on tree, -50.87622 best solution, best possible -101.82256 (7.27 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 52 rows 33 columns
Cbc0010I After 263 nodes, 15 on tree, -50.87622 best solution, best possible -101.82256 (7.98 seconds)
Cbc0016I Integer solution of -51.04994 found by strong branching after 34951 iterations and 307 nodes (8.12 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 19 rows 17 columns
Cbc0010I After 428 nodes, 15 on tree, -51.04994 best solution, best possible -101.82256 (8.69 seconds)
Cbc0010I After 492 nodes, 31 on tree, -51.04994 best solution, best possible -101.82256 (9.39 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 67 rows 42 columns
Cbc0001I Search completed - best objective -51.04993999999999, took 48661 iterations and 638 nodes (10.02 seconds)
Cbc0032I Strong branching done 5438 times (131092 iterations), fathomed 15 nodes and fixed 164 variables
Cbc0035I Maximum depth 103, 893 variables fixed on reduced cost
Total time (CPU seconds):       9.77   (Wallclock seconds):       10.07

