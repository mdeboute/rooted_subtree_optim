Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 0.000152538 - average 1.18246e-06, 11 fixed columns
Coin0506I Presolve 108 (-21) rows, 64 (-11) columns and 337 (-63) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Coin0511I After Postsolve, objective 60.490378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Clp0000I Optimal - objective value 60.490378
Coin0511I After Postsolve, objective 60.490378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.49037826 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.4832
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.78916 iterations 50
Cbc0038I Solution found of -6.78916
Cbc0038I Relaxing continuous gives -6.78916
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 62 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -6.78916 to -24.1808 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.8118
Cbc0038I Pass   2: suminf.    1.96909 (9) obj. -27.8118 iterations 8
Cbc0038I Pass   3: suminf.    1.04853 (4) obj. -27.8118 iterations 11
Cbc0038I Pass   4: suminf.    0.58086 (4) obj. -27.8118 iterations 2
Cbc0038I Pass   5: suminf.    1.82753 (5) obj. -27.8118 iterations 5
Cbc0038I Pass   6: suminf.    1.07506 (3) obj. -27.8118 iterations 2
Cbc0038I Pass   7: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass   8: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass   9: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  10: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  11: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  12: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  13: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  14: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  15: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  16: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  17: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  18: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  19: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  20: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  21: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  22: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  23: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  24: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  25: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I Pass  26: suminf.    0.84149 (4) obj. -27.8118 iterations 3
Cbc0038I Pass  27: suminf.    0.71623 (3) obj. -27.8118 iterations 5
Cbc0038I Pass  28: suminf.    0.69462 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  29: suminf.    1.07418 (4) obj. -27.8118 iterations 6
Cbc0038I Pass  30: suminf.    1.07506 (3) obj. -27.8118 iterations 1
Cbc0038I Pass  31: suminf.    1.40473 (3) obj. -27.8118 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -24.1808 to -25.4097 (0.09 seconds)
Cbc0038I Round again with cutoff of -34.3475
Cbc0038I Pass  31: suminf.    2.64313 (10) obj. -34.3475 iterations 1
Cbc0038I Pass  32: suminf.    1.17271 (5) obj. -34.3475 iterations 16
Cbc0038I Pass  33: suminf.    1.17271 (5) obj. -34.3475 iterations 0
Cbc0038I Pass  34: suminf.    1.01352 (5) obj. -34.3475 iterations 8
Cbc0038I Pass  35: suminf.    1.01352 (5) obj. -34.3475 iterations 0
Cbc0038I Pass  36: suminf.    2.06825 (5) obj. -34.3475 iterations 6
Cbc0038I Pass  37: suminf.    1.62008 (5) obj. -34.3475 iterations 1
Cbc0038I Pass  38: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  39: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  40: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  41: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  42: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  43: suminf.    1.08157 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  44: suminf.    0.88488 (4) obj. -34.3475 iterations 1
Cbc0038I Pass  45: suminf.    2.02085 (6) obj. -34.3475 iterations 7
Cbc0038I Pass  46: suminf.    1.62008 (5) obj. -34.3475 iterations 2
Cbc0038I Pass  47: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  48: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  49: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  50: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  51: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  52: suminf.    1.08157 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  53: suminf.    0.88488 (4) obj. -34.3475 iterations 1
Cbc0038I Pass  54: suminf.    2.02085 (6) obj. -34.3475 iterations 7
Cbc0038I Pass  55: suminf.    1.62008 (5) obj. -34.3475 iterations 2
Cbc0038I Pass  56: suminf.    1.55967 (4) obj. -34.3475 iterations 6
Cbc0038I Pass  57: suminf.    1.21237 (4) obj. -34.3475 iterations 5
Cbc0038I Pass  58: suminf.    1.21237 (4) obj. -34.3475 iterations 0
Cbc0038I Pass  59: suminf.    1.55602 (4) obj. -34.3475 iterations 4
Cbc0038I Pass  60: suminf.    1.55602 (4) obj. -34.3475 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 63 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -25.4097 - took 0.10 seconds
Cbc0012I Integer solution of -25.40972 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 62 rows 38 columns
Cbc0031I 26 added rows had average density of 60.5
Cbc0013I At root node, 26 cuts changed objective from -60.490378 to -53.131049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11482 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1473 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 200 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.40972 best solution, best possible -53.131049 (0.89 seconds)
Cbc0012I Integer solution of -25.69264 found by rounding after 8586 iterations and 29 nodes (1.12 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 17 rows 13 columns
Cbc0012I Integer solution of -27.39507 found by RINS after 9038 iterations and 41 nodes (1.15 seconds)
Cbc0004I Integer solution of -27.79897 found after 9321 iterations and 53 nodes (1.17 seconds)
Cbc0012I Integer solution of -27.79902 found by rounding after 10114 iterations and 84 nodes (1.22 seconds)
Cbc0004I Integer solution of -27.85314 found after 10195 iterations and 92 nodes (1.23 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -27.885 found by rounding after 10940 iterations and 123 nodes (1.28 seconds)
Cbc0001I Search completed - best objective -27.885, took 11370 iterations and 142 nodes (1.30 seconds)
Cbc0032I Strong branching done 1170 times (18229 iterations), fathomed 6 nodes and fixed 74 variables
Cbc0035I Maximum depth 27, 398 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.32

