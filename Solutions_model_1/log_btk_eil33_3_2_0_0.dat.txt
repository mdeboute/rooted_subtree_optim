Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 32 (-3) columns and 171 (-24) elements
Clp1000I sum of infeasibilities 1.89465e-05 - average 3.32394e-07, 3 fixed columns
Coin0506I Presolve 51 (-6) rows, 29 (-3) columns and 153 (-18) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Coin0511I After Postsolve, objective 100.10517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Coin0511I After Postsolve, objective 100.10517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.1051685 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 32 columns (31 integer (31 of which binary)) and 171 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.644%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.6319
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.0663 iterations 22
Cbc0038I Solution found of -20.0663
Cbc0038I Relaxing continuous gives -20.0663
Cbc0038I Rounding solution of -30.5067 is better than previous of -20.0663

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -30.5067 to -48.8965 (0.03 seconds)
Cbc0038I Round again with cutoff of -54.0174
Cbc0038I Pass   2: suminf.    0.32653 (3) obj. -54.0174 iterations 3
Cbc0038I Pass   3: suminf.    0.32653 (3) obj. -54.0174 iterations 0
Cbc0038I Pass   4: suminf.    0.25188 (2) obj. -54.0174 iterations 4
Cbc0038I Pass   5: suminf.    0.25188 (2) obj. -54.0174 iterations 0
Cbc0038I Pass   6: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass   7: suminf.    0.45040 (2) obj. -54.0174 iterations 0
Cbc0038I Pass   8: suminf.    0.78336 (3) obj. -54.0174 iterations 3
Cbc0038I Pass   9: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass  10: suminf.    2.07203 (6) obj. -54.0174 iterations 7
Cbc0038I Pass  11: suminf.    1.68098 (6) obj. -54.0174 iterations 4
Cbc0038I Pass  12: suminf.    1.31304 (5) obj. -54.0174 iterations 3
Cbc0038I Pass  13: suminf.    1.90032 (6) obj. -54.0174 iterations 6
Cbc0038I Pass  14: suminf.    0.45939 (2) obj. -54.0174 iterations 6
Cbc0038I Pass  15: suminf.    0.45040 (2) obj. -54.0174 iterations 1
Cbc0038I Pass  16: suminf.    0.78336 (3) obj. -54.0174 iterations 3
Cbc0038I Pass  17: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass  18: suminf.    0.78336 (3) obj. -54.0174 iterations 4
Cbc0038I Pass  19: suminf.    2.60991 (8) obj. -54.0174 iterations 10
Cbc0038I Pass  20: suminf.    0.84743 (4) obj. -54.0174 iterations 5
Cbc0038I Pass  21: suminf.    0.84743 (4) obj. -54.0174 iterations 0
Cbc0038I Pass  22: suminf.    0.85598 (3) obj. -54.0174 iterations 4
Cbc0038I Pass  23: suminf.    0.18127 (1) obj. -54.0174 iterations 4
Cbc0038I Pass  24: suminf.    0.18127 (1) obj. -54.0174 iterations 1
Cbc0038I Pass  25: suminf.    0.42446 (1) obj. -54.0174 iterations 2
Cbc0038I Pass  26: suminf.    2.06009 (6) obj. -54.0174 iterations 5
Cbc0038I Pass  27: suminf.    1.88225 (6) obj. -54.0174 iterations 5
Cbc0038I Pass  28: suminf.    0.92207 (3) obj. -54.0174 iterations 5
Cbc0038I Pass  29: suminf.    0.92207 (3) obj. -54.0174 iterations 0
Cbc0038I Pass  30: suminf.    0.31514 (3) obj. -54.0174 iterations 3
Cbc0038I Pass  31: suminf.    0.31514 (3) obj. -54.0174 iterations 0
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -63.235
Cbc0038I Pass  31: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  32: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  33: suminf.    0.58472 (2) obj. -63.235 iterations 3
Cbc0038I Pass  34: suminf.    0.57565 (3) obj. -63.235 iterations 2
Cbc0038I Pass  35: suminf.    1.02020 (3) obj. -63.235 iterations 5
Cbc0038I Pass  36: suminf.    0.77668 (2) obj. -63.235 iterations 2
Cbc0038I Pass  37: suminf.    0.77668 (2) obj. -63.235 iterations 0
Cbc0038I Pass  38: suminf.    2.83083 (8) obj. -63.235 iterations 7
Cbc0038I Pass  39: suminf.    1.73120 (7) obj. -63.235 iterations 7
Cbc0038I Pass  40: suminf.    1.73120 (7) obj. -63.235 iterations 0
Cbc0038I Pass  41: suminf.    1.10746 (3) obj. -63.235 iterations 7
Cbc0038I Pass  42: suminf.    0.65280 (3) obj. -63.235 iterations 3
Cbc0038I Pass  43: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  44: suminf.    0.58472 (2) obj. -63.235 iterations 3
Cbc0038I Pass  45: suminf.    0.57565 (3) obj. -63.235 iterations 2
Cbc0038I Pass  46: suminf.    1.02020 (3) obj. -63.235 iterations 5
Cbc0038I Pass  47: suminf.    0.77668 (2) obj. -63.235 iterations 2
Cbc0038I Pass  48: suminf.    0.77668 (2) obj. -63.235 iterations 0
Cbc0038I Pass  49: suminf.    1.01469 (3) obj. -63.235 iterations 8
Cbc0038I Pass  50: suminf.    1.01469 (3) obj. -63.235 iterations 0
Cbc0038I Pass  51: suminf.    0.96756 (3) obj. -63.235 iterations 2
Cbc0038I Pass  52: suminf.    0.95316 (3) obj. -63.235 iterations 1
Cbc0038I Pass  53: suminf.    0.95233 (3) obj. -63.235 iterations 2
Cbc0038I Pass  54: suminf.    0.67287 (4) obj. -63.235 iterations 2
Cbc0038I Pass  55: suminf.    1.04684 (4) obj. -63.235 iterations 5
Cbc0038I Pass  56: suminf.    0.88307 (3) obj. -63.235 iterations 1
Cbc0038I Pass  57: suminf.    0.71592 (3) obj. -63.235 iterations 1
Cbc0038I Pass  58: suminf.    0.82051 (3) obj. -63.235 iterations 2
Cbc0038I Pass  59: suminf.    0.53505 (4) obj. -63.235 iterations 2
Cbc0038I Pass  60: suminf.    1.81893 (5) obj. -63.235 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -48.8965 - took 0.06 seconds
Cbc0012I Integer solution of -48.89648 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 57 rows 32 columns, reduced to 39 rows 23 columns
Cbc0031I 14 added rows had average density of 24.142857
Cbc0013I At root node, 14 cuts changed objective from -100.10517 to -73.959696 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1688 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 774 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 148 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.89648, took 3057 iterations and 14 nodes (0.43 seconds)
Cbc0032I Strong branching done 158 times (1551 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.40   (Wallclock seconds):       0.44

