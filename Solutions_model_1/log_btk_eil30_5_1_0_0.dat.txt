Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 28 (-4) columns and 142 (-35) elements
Clp1000I sum of infeasibilities 9.10731e-06 - average 1.93773e-07, 6 fixed columns
Coin0506I Presolve 36 (-11) rows, 22 (-6) columns and 108 (-34) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Coin0511I After Postsolve, objective 87.267147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Coin0511I After Postsolve, objective 87.267147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.26714703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.74459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.65746 iterations 19
Cbc0038I Solution found of -5.65746
Cbc0038I Relaxing continuous gives -5.65746
Cbc0038I Rounding solution of -24.596 is better than previous of -5.65746

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.8632
Cbc0038I Pass   2: suminf.    0.55613 (2) obj. -30.8632 iterations 2
Cbc0038I Pass   3: suminf.    0.18548 (1) obj. -30.8632 iterations 2
Cbc0038I Pass   4: suminf.    0.75466 (4) obj. -30.8632 iterations 8
Cbc0038I Pass   5: suminf.    0.70586 (3) obj. -30.8632 iterations 3
Cbc0038I Pass   6: suminf.    0.24464 (2) obj. -30.8632 iterations 3
Cbc0038I Pass   7: suminf.    0.45036 (2) obj. -30.8632 iterations 4
Cbc0038I Pass   8: suminf.    0.15323 (1) obj. -30.8632 iterations 2
Cbc0038I Pass   9: suminf.    1.15685 (4) obj. -30.8632 iterations 5
Cbc0038I Pass  10: suminf.    1.15685 (4) obj. -30.8632 iterations 1
Cbc0038I Pass  11: suminf.    0.46874 (2) obj. -30.8632 iterations 6
Cbc0038I Pass  12: suminf.    0.25142 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  13: suminf.    0.56126 (2) obj. -30.8632 iterations 3
Cbc0038I Pass  14: suminf.    0.47730 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  15: suminf.    1.07133 (3) obj. -30.8632 iterations 3
Cbc0038I Pass  16: suminf.    0.74502 (3) obj. -30.8632 iterations 1
Cbc0038I Pass  17: suminf.    0.93174 (2) obj. -30.8632 iterations 3
Cbc0038I Pass  18: suminf.    0.53661 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  19: suminf.    0.31760 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  20: suminf.    0.76412 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  21: suminf.    1.29916 (7) obj. -30.8632 iterations 10
Cbc0038I Pass  22: suminf.    1.05726 (7) obj. -30.8632 iterations 6
Cbc0038I Pass  23: suminf.    0.62771 (3) obj. -30.8632 iterations 8
Cbc0038I Pass  24: suminf.    0.62771 (3) obj. -30.8632 iterations 0
Cbc0038I Pass  25: suminf.    0.74722 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  26: suminf.    0.74384 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  27: suminf.    0.82288 (3) obj. -30.8632 iterations 2
Cbc0038I Pass  28: suminf.    0.78927 (6) obj. -30.8632 iterations 7
Cbc0038I Pass  29: suminf.    0.63545 (4) obj. -30.8632 iterations 2
Cbc0038I Pass  30: suminf.    0.75114 (3) obj. -30.8632 iterations 5
Cbc0038I Pass  31: suminf.    0.60975 (3) obj. -30.8632 iterations 1
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -42.144
Cbc0038I Pass  31: suminf.    0.27200 (3) obj. -42.144 iterations 1
Cbc0038I Pass  32: suminf.    0.27200 (3) obj. -42.144 iterations 0
Cbc0038I Pass  33: suminf.    0.59705 (2) obj. -42.144 iterations 3
Cbc0038I Pass  34: suminf.    0.44863 (2) obj. -42.144 iterations 1
Cbc0038I Pass  35: suminf.    0.67684 (3) obj. -42.144 iterations 2
Cbc0038I Pass  36: suminf.    0.67684 (3) obj. -42.144 iterations 0
Cbc0038I Pass  37: suminf.    0.86717 (3) obj. -42.144 iterations 1
Cbc0038I Pass  38: suminf.    1.61295 (5) obj. -42.144 iterations 4
Cbc0038I Pass  39: suminf.    1.42580 (4) obj. -42.144 iterations 2
Cbc0038I Pass  40: suminf.    0.61993 (2) obj. -42.144 iterations 4
Cbc0038I Pass  41: suminf.    0.53151 (2) obj. -42.144 iterations 1
Cbc0038I Pass  42: suminf.    0.79265 (3) obj. -42.144 iterations 2
Cbc0038I Pass  43: suminf.    0.79265 (3) obj. -42.144 iterations 0
Cbc0038I Pass  44: suminf.    0.88630 (3) obj. -42.144 iterations 1
Cbc0038I Pass  45: suminf.    1.23627 (5) obj. -42.144 iterations 10
Cbc0038I Pass  46: suminf.    0.88806 (3) obj. -42.144 iterations 6
Cbc0038I Pass  47: suminf.    0.62546 (2) obj. -42.144 iterations 2
Cbc0038I Pass  48: suminf.    0.36765 (3) obj. -42.144 iterations 2
Cbc0038I Pass  49: suminf.    0.36765 (3) obj. -42.144 iterations 0
Cbc0038I Pass  50: suminf.    0.63630 (2) obj. -42.144 iterations 3
Cbc0038I Pass  51: suminf.    0.52429 (2) obj. -42.144 iterations 1
Cbc0038I Pass  52: suminf.    0.75290 (3) obj. -42.144 iterations 2
Cbc0038I Pass  53: suminf.    0.75290 (3) obj. -42.144 iterations 0
Cbc0038I Pass  54: suminf.    0.99109 (3) obj. -42.144 iterations 1
Cbc0038I Pass  55: suminf.    3.04062 (8) obj. -42.144 iterations 6
Cbc0038I Pass  56: suminf.    0.82472 (3) obj. -42.144 iterations 5
Cbc0038I Pass  57: suminf.    0.77987 (3) obj. -42.144 iterations 1
Cbc0038I Pass  58: suminf.    0.70366 (4) obj. -42.144 iterations 7
Cbc0038I Pass  59: suminf.    0.69379 (3) obj. -42.144 iterations 1
Cbc0038I Pass  60: suminf.    0.58366 (3) obj. -42.144 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.596 - took 0.03 seconds
Cbc0012I Integer solution of -24.596011 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 11 added rows had average density of 19
Cbc0013I At root node, 11 cuts changed objective from -87.267147 to -46.59464 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1739 row cuts average 4.1 elements, 2 column cuts (2 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 840 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.769 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.596011 best solution, best possible -46.593677 (1.55 seconds)
Cbc0016I Integer solution of -31.86196 found by strong branching after 2351 iterations and 4 nodes (1.58 seconds)
Cbc0001I Search completed - best objective -31.86196000000001, took 2397 iterations and 6 nodes (1.58 seconds)
Cbc0032I Strong branching done 94 times (981 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.58

