Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 4.91259e-06 - average 8.46999e-08, 1 fixed columns
Coin0506I Presolve 56 (-2) rows, 32 (-1) columns and 168 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 3.2465719 - largest nonzero change 0 ( 0%) - largest zero change 1.4786182e-05
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Coin0511I After Postsolve, objective 86.684309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Coin0511I After Postsolve, objective 86.684309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.68430945 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.25304
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.7137 iterations 19
Cbc0038I Solution found of -11.7137
Cbc0038I Relaxing continuous gives -11.7137
Cbc0038I Rounding solution of -24.6254 is better than previous of -11.7137

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -24.6254 to -32.857 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.2398
Cbc0038I Pass   2: suminf.    0.71149 (2) obj. -38.2398 iterations 3
Cbc0038I Pass   3: suminf.    0.77321 (2) obj. -38.2398 iterations 2
Cbc0038I Pass   4: suminf.    0.10574 (4) obj. -38.2398 iterations 6
Cbc0038I Pass   5: suminf.    0.09112 (2) obj. -38.2398 iterations 4
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -38.2398 iterations 2
Cbc0038I Pass   7: suminf.    0.18722 (1) obj. -38.2398 iterations 1
Cbc0038I Pass   8: suminf.    0.63127 (4) obj. -38.2398 iterations 5
Cbc0038I Pass   9: suminf.    0.57429 (3) obj. -38.2398 iterations 1
Cbc0038I Pass  10: suminf.    0.56662 (2) obj. -38.2398 iterations 10
Cbc0038I Pass  11: suminf.    0.63289 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  12: suminf.    0.56662 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  13: suminf.    2.39120 (8) obj. -38.2398 iterations 11
Cbc0038I Pass  14: suminf.    0.82708 (2) obj. -38.2398 iterations 4
Cbc0038I Pass  15: suminf.    0.79950 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  16: suminf.    0.80072 (4) obj. -38.2398 iterations 7
Cbc0038I Pass  17: suminf.    0.56349 (5) obj. -38.2398 iterations 2
Cbc0038I Pass  18: suminf.    0.98812 (3) obj. -38.2398 iterations 5
Cbc0038I Pass  19: suminf.    0.73005 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  20: suminf.    0.70410 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  21: suminf.    2.60928 (8) obj. -38.2398 iterations 10
Cbc0038I Pass  22: suminf.    0.97034 (3) obj. -38.2398 iterations 6
Cbc0038I Pass  23: suminf.    0.68265 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  24: suminf.    0.84610 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  25: suminf.    3.10739 (10) obj. -38.2398 iterations 12
Cbc0038I Pass  26: suminf.    0.83921 (3) obj. -38.2398 iterations 12
Cbc0038I Pass  27: suminf.    0.79973 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  28: suminf.    0.71497 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  29: suminf.    0.71497 (2) obj. -38.2398 iterations 0
Cbc0038I Pass  30: suminf.    1.69069 (6) obj. -38.2398 iterations 13
Cbc0038I Pass  31: suminf.    0.65827 (4) obj. -38.2398 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 46 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -32.857 to -37.2923 (0.06 seconds)
Cbc0038I Round again with cutoff of -47.9287
Cbc0038I Pass  31: suminf.    0.97137 (2) obj. -47.9287 iterations 0
Cbc0038I Pass  32: suminf.    0.88780 (4) obj. -47.9287 iterations 4
Cbc0038I Pass  33: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  34: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  35: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  36: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  37: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  38: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  39: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  40: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  41: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  42: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  43: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  44: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  45: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  46: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  47: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  48: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  49: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  50: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  51: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  52: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  53: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  54: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  55: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  56: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  57: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  58: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  59: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  60: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -37.2923 - took 0.07 seconds
Cbc0012I Integer solution of -37.292252 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 34 rows 22 columns
Cbc0031I 14 added rows had average density of 31.071429
Cbc0013I At root node, 14 cuts changed objective from -86.684309 to -62.397639 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2610 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 741 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.292252, took 3208 iterations and 12 nodes (0.42 seconds)
Cbc0032I Strong branching done 196 times (2497 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 4, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.43

