Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 60 (-18) columns and 326 (-127) elements
Clp1000I sum of infeasibilities 6.54274e-07 - average 6.17239e-09, 50 fixed columns
Coin0506I Presolve 9 (-97) rows, 9 (-51) columns and 32 (-294) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 17752.457
Clp0000I Optimal - objective value 17752.457
Coin0511I After Postsolve, objective 17752.457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8320477 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 17752.457
Clp0000I Optimal - objective value 17752.457
Clp0000I Optimal - objective value 17752.457
Coin0511I After Postsolve, objective 17752.457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17752.45655 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 60 columns (59 integer (59 of which binary)) and 401 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.444%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.17544
Cbc0038I Solution found of -14228
Cbc0038I Relaxing continuous gives -14228
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 60 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -14580.5
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.10244 (3) obj. -14580.5 iterations 9
Cbc0038I Pass   2: suminf.    1.17181 (3) obj. -16872.8 iterations 5
Cbc0038I Pass   3: suminf.    1.17181 (3) obj. -16872.8 iterations 0
Cbc0038I Pass   4: suminf.    0.10244 (3) obj. -14580.5 iterations 6
Cbc0038I Pass   5: suminf.    0.96241 (4) obj. -14588.1 iterations 16
Cbc0038I Pass   6: suminf.    0.29516 (1) obj. -14580.5 iterations 9
Cbc0038I Pass   7: suminf.    0.34483 (1) obj. -16346.4 iterations 4
Cbc0038I Pass   8: suminf.    0.10244 (3) obj. -14580.5 iterations 4
Cbc0038I Pass   9: suminf.    1.17181 (3) obj. -16872.8 iterations 5
Cbc0038I Pass  10: suminf.    1.17181 (3) obj. -16872.8 iterations 0
Cbc0038I Pass  11: suminf.    0.10244 (3) obj. -14580.5 iterations 6
Cbc0038I Pass  12: suminf.    0.76818 (2) obj. -14580.5 iterations 14
Cbc0038I Pass  13: suminf.    0.48000 (1) obj. -14716.4 iterations 7
Cbc0038I Pass  14: suminf.    0.44675 (1) obj. -14580.5 iterations 2
Cbc0038I Pass  15: suminf.    0.14222 (2) obj. -14580.5 iterations 12
Cbc0038I Pass  16: suminf.    0.14222 (2) obj. -14580.5 iterations 5
Cbc0038I Pass  17: suminf.    0.05608 (3) obj. -14580.5 iterations 8
Cbc0038I Pass  18: suminf.    0.05608 (3) obj. -14580.5 iterations 0
Cbc0038I Pass  19: suminf.    1.28634 (3) obj. -15734.7 iterations 5
Cbc0038I Pass  20: suminf.    0.67332 (3) obj. -14580.5 iterations 2
Cbc0038I Pass  21: suminf.    0.10115 (3) obj. -14580.5 iterations 6
Cbc0038I Pass  22: suminf.    0.10115 (3) obj. -14580.5 iterations 0
Cbc0038I Pass  23: suminf.    0.42553 (2) obj. -15553.8 iterations 5
Cbc0038I Pass  24: suminf.    0.42553 (2) obj. -15553.8 iterations 0
Cbc0038I Pass  25: suminf.    1.68953 (5) obj. -14580.5 iterations 14
Cbc0038I Pass  26: suminf.    0.54573 (2) obj. -14856.4 iterations 8
Cbc0038I Pass  27: suminf.    0.54573 (2) obj. -14856.4 iterations 0
Cbc0038I Pass  28: suminf.    0.03425 (1) obj. -14580.5 iterations 4
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. -14719.5 iterations 3
Cbc0038I Solution found of -14719.5
Cbc0038I Relaxing continuous gives -14719.5
Cbc0038I Rounding solution of -16766.2 is better than previous of -14719.5

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 60 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16963.4
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.79623 (2) obj. -16963.4 iterations 2
Cbc0038I Pass  31: suminf.    1.01387 (3) obj. -16963.4 iterations 4
Cbc0038I Pass  32: suminf.    1.25096 (4) obj. -16963.4 iterations 6
Cbc0038I Pass  33: suminf.    0.73627 (6) obj. -16963.4 iterations 8
Cbc0038I Pass  34: suminf.    0.62473 (7) obj. -16963.4 iterations 2
Cbc0038I Pass  35: suminf.    1.65918 (5) obj. -16963.4 iterations 9
Cbc0038I Pass  36: suminf.    0.43930 (3) obj. -16963.4 iterations 3
Cbc0038I Pass  37: suminf.    0.19919 (2) obj. -16963.4 iterations 3
Cbc0038I Pass  38: suminf.    0.43930 (3) obj. -16963.4 iterations 4
Cbc0038I Pass  39: suminf.    0.44567 (2) obj. -17414.4 iterations 4
Cbc0038I Pass  40: suminf.    0.44567 (2) obj. -17414.4 iterations 0
Cbc0038I Pass  41: suminf.    0.19919 (2) obj. -16963.4 iterations 5
Cbc0038I Pass  42: suminf.    0.30738 (3) obj. -16963.4 iterations 3
Cbc0038I Pass  43: suminf.    0.76412 (5) obj. -16963.4 iterations 2
Cbc0038I Pass  44: suminf.    0.64034 (5) obj. -16963.4 iterations 2
Cbc0038I Pass  45: suminf.    0.34718 (7) obj. -16963.4 iterations 11
Cbc0038I Pass  46: suminf.    0.05967 (3) obj. -16963.4 iterations 5
Cbc0038I Pass  47: suminf.    0.88400 (3) obj. -16963.4 iterations 7
Cbc0038I Pass  48: suminf.    0.88400 (3) obj. -16963.4 iterations 0
Cbc0038I Pass  49: suminf.    0.79623 (2) obj. -16963.4 iterations 5
Cbc0038I Pass  50: suminf.    0.79623 (2) obj. -16963.4 iterations 0
Cbc0038I Pass  51: suminf.    1.01387 (3) obj. -16963.4 iterations 4
Cbc0038I Pass  52: suminf.    0.62942 (3) obj. -16963.4 iterations 8
Cbc0038I Pass  53: suminf.    0.52336 (2) obj. -17156.6 iterations 3
Cbc0038I Pass  54: suminf.    0.19919 (2) obj. -16963.4 iterations 5
Cbc0038I Pass  55: suminf.    0.19919 (2) obj. -16963.4 iterations 0
Cbc0038I Pass  56: suminf.    0.43930 (3) obj. -16963.4 iterations 4
Cbc0038I Pass  57: suminf.    2.51392 (6) obj. -16963.4 iterations 9
Cbc0038I Pass  58: suminf.    0.79623 (2) obj. -16963.4 iterations 6
Cbc0038I Pass  59: suminf.    0.79623 (2) obj. -16963.4 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 60 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16766.2 - took 0.02 seconds
Cbc0012I Integer solution of -16766.19 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 101 rows 60 columns, reduced to 0 rows 0 columns
Cbc0031I 6 added rows had average density of 6.3333333
Cbc0013I At root node, 6 cuts changed objective from -17752.457 to -16840.414 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.3 elements, 15 column cuts (15 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16766.19, took 54 iterations and 0 nodes (0.04 seconds)
Cbc0032I Strong branching done 6 times (13 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

