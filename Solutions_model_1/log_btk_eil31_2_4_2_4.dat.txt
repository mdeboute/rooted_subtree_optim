Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-18) rows, 26 (-7) columns and 138 (-45) elements
Clp1000I sum of infeasibilities 8.47856e-06 - average 1.80395e-07, 5 fixed columns
Coin0506I Presolve 35 (-12) rows, 20 (-6) columns and 102 (-36) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Coin0511I After Postsolve, objective 55.475077, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Coin0511I After Postsolve, objective 55.475077, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.47507724 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 26 columns (25 integer (25 of which binary)) and 145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.35688
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.9463 iterations 12
Cbc0038I Solution found of -24.9463
Cbc0038I Relaxing continuous gives -24.9463
Cbc0038I Rounding solution of -25.9546 is better than previous of -24.9463

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -25.9546 to -31.3865 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.7954
Cbc0038I Pass   2: suminf.    0.32877 (1) obj. -33.7954 iterations 1
Cbc0038I Pass   3: suminf.    0.45263 (1) obj. -33.7954 iterations 1
Cbc0038I Pass   4: suminf.    1.55226 (6) obj. -33.7954 iterations 4
Cbc0038I Pass   5: suminf.    0.57838 (2) obj. -33.7954 iterations 6
Cbc0038I Pass   6: suminf.    0.96561 (4) obj. -33.7954 iterations 4
Cbc0038I Pass   7: suminf.    0.56306 (3) obj. -33.7954 iterations 5
Cbc0038I Pass   8: suminf.    0.40779 (2) obj. -33.7954 iterations 2
Cbc0038I Pass   9: suminf.    0.40779 (2) obj. -33.7954 iterations 0
Cbc0038I Pass  10: suminf.    0.59142 (2) obj. -33.7954 iterations 2
Cbc0038I Pass  11: suminf.    0.57838 (2) obj. -33.7954 iterations 1
Cbc0038I Pass  12: suminf.    0.45263 (1) obj. -33.7954 iterations 2
Cbc0038I Pass  13: suminf.    0.32877 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  14: suminf.    1.16237 (5) obj. -33.7954 iterations 6
Cbc0038I Pass  15: suminf.    0.53796 (2) obj. -33.7954 iterations 5
Cbc0038I Pass  16: suminf.    1.97244 (6) obj. -33.7954 iterations 11
Cbc0038I Pass  17: suminf.    1.42816 (4) obj. -33.7954 iterations 4
Cbc0038I Pass  18: suminf.    0.79158 (3) obj. -33.7954 iterations 2
Cbc0038I Pass  19: suminf.    0.38120 (2) obj. -33.7954 iterations 5
Cbc0038I Pass  20: suminf.    0.28889 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  21: suminf.    0.27236 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  22: suminf.    1.25444 (4) obj. -33.7954 iterations 6
Cbc0038I Pass  23: suminf.    0.86500 (5) obj. -33.7954 iterations 5
Cbc0038I Pass  24: suminf.    0.73939 (3) obj. -33.7954 iterations 9
Cbc0038I Pass  25: suminf.    0.26316 (1) obj. -33.7954 iterations 2
Cbc0038I Pass  26: suminf.    0.26316 (1) obj. -33.7954 iterations 0
Cbc0038I Pass  27: suminf.    0.59987 (2) obj. -33.7954 iterations 2
Cbc0038I Pass  28: suminf.    0.59987 (2) obj. -33.7954 iterations 0
Cbc0038I Pass  29: suminf.    0.56240 (2) obj. -33.7954 iterations 4
Cbc0038I Pass  30: suminf.    0.55154 (2) obj. -33.7954 iterations 1
Cbc0038I Pass  31: suminf.    0.45556 (1) obj. -33.7954 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.3865 to -32.3948 (0.02 seconds)
Cbc0038I Round again with cutoff of -38.1314
Cbc0038I Pass  31: suminf.    0.49181 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  32: suminf.    0.58837 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  33: suminf.    0.58837 (2) obj. -38.1314 iterations 0
Cbc0038I Pass  34: suminf.    0.56740 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  35: suminf.    1.87884 (8) obj. -38.1314 iterations 12
Cbc0038I Pass  36: suminf.    1.60725 (6) obj. -38.1314 iterations 5
Cbc0038I Pass  37: suminf.    1.84855 (6) obj. -38.1314 iterations 11
Cbc0038I Pass  38: suminf.    1.21721 (4) obj. -38.1314 iterations 3
Cbc0038I Pass  39: suminf.    0.90864 (3) obj. -38.1314 iterations 3
Cbc0038I Pass  40: suminf.    0.80708 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  41: suminf.    0.80399 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  42: suminf.    0.78889 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  43: suminf.    0.80399 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  44: suminf.    1.85735 (7) obj. -38.1314 iterations 14
Cbc0038I Pass  45: suminf.    1.68299 (5) obj. -38.1314 iterations 2
Cbc0038I Pass  46: suminf.    1.67476 (6) obj. -38.1314 iterations 1
Cbc0038I Pass  47: suminf.    0.53430 (2) obj. -38.1314 iterations 9
Cbc0038I Pass  48: suminf.    0.47276 (2) obj. -38.1314 iterations 3
Cbc0038I Pass  49: suminf.    0.64897 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  50: suminf.    0.63999 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  51: suminf.    1.00034 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  52: suminf.    1.00034 (3) obj. -38.1314 iterations 0
Cbc0038I Pass  53: suminf.    0.89616 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  54: suminf.    2.08430 (9) obj. -38.1314 iterations 9
Cbc0038I Pass  55: suminf.    1.36601 (6) obj. -38.1314 iterations 4
Cbc0038I Pass  56: suminf.    0.84569 (4) obj. -38.1314 iterations 7
Cbc0038I Pass  57: suminf.    0.84023 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  58: suminf.    0.67294 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  59: suminf.    0.84023 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  60: suminf.    1.04967 (3) obj. -38.1314 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -32.3948 - took 0.02 seconds
Cbc0012I Integer solution of -32.39482 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 46 rows 26 columns, reduced to 17 rows 12 columns
Cbc0031I 5 added rows had average density of 20
Cbc0013I At root node, 5 cuts changed objective from -55.475077 to -41.960408 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 571 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 649 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -32.88862 found by rounding after 1723 iterations and 4 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -32.88861999999999, took 1726 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 44 times (346 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

