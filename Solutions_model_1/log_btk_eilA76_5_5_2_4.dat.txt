Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 73 (-5) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 8.82187e-05 - average 6.63298e-07, 9 fixed columns
Coin0506I Presolve 115 (-18) rows, 63 (-10) columns and 348 (-56) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 0.26441511 - largest nonzero change 0 ( 0%) - largest zero change 2.7184261e-05
Clp0000I Optimal - objective value 48.285701
Clp0000I Optimal - objective value 48.285701
Coin0511I After Postsolve, objective 48.285701, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.285701
Clp0000I Optimal - objective value 48.285701
Clp0000I Optimal - objective value 48.285701
Coin0511I After Postsolve, objective 48.285701, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.28570108 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 73 columns (72 integer (72 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.556%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.86428
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.99605 iterations 46
Cbc0038I Solution found of -1.99605
Cbc0038I Relaxing continuous gives -1.99605
Cbc0038I Rounding solution of -8.28988 is better than previous of -1.99605

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 72 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -8.28988 to -21.5509 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.2216
Cbc0038I Pass   2: suminf.    2.26697 (11) obj. -24.2216 iterations 17
Cbc0038I Pass   3: suminf.    1.83266 (5) obj. -24.2216 iterations 16
Cbc0038I Pass   4: suminf.    1.07858 (3) obj. -24.2216 iterations 2
Cbc0038I Pass   5: suminf.    1.58015 (6) obj. -24.2216 iterations 5
Cbc0038I Pass   6: suminf.    1.53777 (6) obj. -24.2216 iterations 1
Cbc0038I Pass   7: suminf.    1.24739 (4) obj. -24.2216 iterations 4
Cbc0038I Pass   8: suminf.    1.55502 (8) obj. -24.2216 iterations 7
Cbc0038I Pass   9: suminf.    1.37409 (8) obj. -24.2216 iterations 4
Cbc0038I Pass  10: suminf.    1.23074 (4) obj. -24.2216 iterations 11
Cbc0038I Pass  11: suminf.    0.96324 (3) obj. -24.2216 iterations 4
Cbc0038I Pass  12: suminf.    1.10841 (3) obj. -24.2216 iterations 3
Cbc0038I Pass  13: suminf.    1.02599 (3) obj. -24.2216 iterations 2
Cbc0038I Pass  14: suminf.    2.76344 (8) obj. -24.2216 iterations 14
Cbc0038I Pass  15: suminf.    0.79488 (3) obj. -24.2216 iterations 8
Cbc0038I Pass  16: suminf.    0.74109 (3) obj. -24.2216 iterations 1
Cbc0038I Pass  17: suminf.    0.91485 (3) obj. -24.2216 iterations 10
Cbc0038I Pass  18: suminf.    0.91485 (3) obj. -24.2216 iterations 0
Cbc0038I Pass  19: suminf.    1.30405 (3) obj. -24.2216 iterations 2
Cbc0038I Pass  20: suminf.    4.44398 (15) obj. -24.2216 iterations 20
Cbc0038I Pass  21: suminf.    2.09666 (8) obj. -24.2216 iterations 22
Cbc0038I Pass  22: suminf.    1.23074 (4) obj. -24.2216 iterations 9
Cbc0038I Pass  23: suminf.    0.96324 (3) obj. -24.2216 iterations 2
Cbc0038I Pass  24: suminf.    1.10841 (3) obj. -24.2216 iterations 3
Cbc0038I Pass  25: suminf.    1.02599 (3) obj. -24.2216 iterations 2
Cbc0038I Pass  26: suminf.    4.85770 (16) obj. -24.2216 iterations 21
Cbc0038I Pass  27: suminf.    2.42321 (7) obj. -24.2216 iterations 26
Cbc0038I Pass  28: suminf.    1.01897 (4) obj. -24.2216 iterations 9
Cbc0038I Pass  29: suminf.    1.01897 (4) obj. -24.2216 iterations 2
Cbc0038I Pass  30: suminf.    1.26128 (3) obj. -24.2216 iterations 7
Cbc0038I Pass  31: suminf.    1.10836 (3) obj. -24.2216 iterations 1
Cbc0038I Rounding solution of -21.9121 is better than previous of -21.5509

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 96 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -29.0285
Cbc0038I Pass  31: suminf.    2.95677 (17) obj. -29.0285 iterations 4
Cbc0038I Pass  32: suminf.    3.58211 (10) obj. -29.0285 iterations 24
Cbc0038I Pass  33: suminf.    2.26052 (6) obj. -29.0285 iterations 7
Cbc0038I Pass  34: suminf.    1.80475 (5) obj. -29.0285 iterations 6
Cbc0038I Pass  35: suminf.    1.58727 (6) obj. -29.0285 iterations 7
Cbc0038I Pass  36: suminf.    1.57845 (5) obj. -29.0285 iterations 3
Cbc0038I Pass  37: suminf.    1.99011 (6) obj. -29.0285 iterations 6
Cbc0038I Pass  38: suminf.    1.99011 (6) obj. -29.0285 iterations 4
Cbc0038I Pass  39: suminf.    1.73856 (5) obj. -29.0285 iterations 7
Cbc0038I Pass  40: suminf.    1.34075 (6) obj. -29.0285 iterations 4
Cbc0038I Pass  41: suminf.    1.29011 (8) obj. -29.0285 iterations 9
Cbc0038I Pass  42: suminf.    1.66748 (6) obj. -29.0285 iterations 16
Cbc0038I Pass  43: suminf.    1.39883 (5) obj. -29.0285 iterations 4
Cbc0038I Pass  44: suminf.    1.35242 (8) obj. -29.0285 iterations 13
Cbc0038I Pass  45: suminf.    2.40239 (8) obj. -29.0285 iterations 25
Cbc0038I Pass  46: suminf.    1.45721 (5) obj. -29.0285 iterations 14
Cbc0038I Pass  47: suminf.    1.53535 (4) obj. -29.0285 iterations 5
Cbc0038I Pass  48: suminf.    0.91661 (3) obj. -29.0285 iterations 2
Cbc0038I Pass  49: suminf.    0.91661 (3) obj. -29.0285 iterations 0
Cbc0038I Pass  50: suminf.    3.16981 (9) obj. -29.0285 iterations 19
Cbc0038I Pass  51: suminf.    1.36799 (5) obj. -29.0285 iterations 18
Cbc0038I Pass  52: suminf.    1.44298 (4) obj. -29.0285 iterations 5
Cbc0038I Pass  53: suminf.    0.83694 (3) obj. -29.0285 iterations 3
Cbc0038I Pass  54: suminf.    0.83645 (3) obj. -29.0285 iterations 1
Cbc0038I Pass  55: suminf.    1.03277 (3) obj. -29.0285 iterations 11
Cbc0038I Pass  56: suminf.    0.91661 (3) obj. -29.0285 iterations 3
Cbc0038I Pass  57: suminf.    1.53535 (4) obj. -29.0285 iterations 3
Cbc0038I Pass  58: suminf.    0.91661 (3) obj. -29.0285 iterations 3
Cbc0038I Pass  59: suminf.    1.83659 (5) obj. -29.0285 iterations 7
Cbc0038I Pass  60: suminf.    1.58253 (6) obj. -29.0285 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 73 columns, reduced to 87 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -21.9121 - took 0.09 seconds
Cbc0012I Integer solution of -21.91214 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 133 rows 73 columns, reduced to 73 rows 40 columns
Cbc0031I 23 added rows had average density of 58.173913
Cbc0013I At root node, 23 cuts changed objective from -48.2564 to -40.856258 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7957 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1671 row cuts average 72.8 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 136 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.91214 best solution, best possible -40.856258 (0.77 seconds)
Cbc0001I Search completed - best objective -21.91213999999999, took 7325 iterations and 48 nodes (0.94 seconds)
Cbc0032I Strong branching done 646 times (12360 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 23, 117 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.95

