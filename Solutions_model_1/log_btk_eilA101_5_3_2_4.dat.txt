Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 101 (-2) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 3.28757e-05 - average 1.84695e-07, 13 fixed columns
Coin0506I Presolve 150 (-28) rows, 86 (-15) columns and 464 (-86) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 0.26375812 - largest nonzero change 0 ( 0%) - largest zero change 2.916819e-05
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Coin0511I After Postsolve, objective 35.298896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24182605 - largest nonzero change 0 ( 0%) - largest zero change 2.9528267e-05
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Coin0511I After Postsolve, objective 35.298896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.29889551 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 101 columns (100 integer (100 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.858%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 13.2539
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.45833 iterations 78
Cbc0038I Solution found of 9.45833
Cbc0038I Relaxing continuous gives 9.45833
Cbc0038I Rounding solution of 2.60412 is better than previous of 9.45833

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 100 rows 59 columns
Cbc0038I Mini branch and bound improved solution from 2.60412 to -2.32853 (0.05 seconds)
Cbc0038I Round again with cutoff of -5.62566
Cbc0038I Pass   2: suminf.    2.64713 (12) obj. -5.62566 iterations 18
Cbc0038I Pass   3: suminf.    1.64571 (7) obj. -5.62566 iterations 15
Cbc0038I Pass   4: suminf.    2.19071 (7) obj. -5.62566 iterations 10
Cbc0038I Pass   5: suminf.    2.01486 (9) obj. -5.62566 iterations 6
Cbc0038I Pass   6: suminf.    3.53414 (12) obj. -5.62566 iterations 26
Cbc0038I Pass   7: suminf.    3.21624 (11) obj. -5.62566 iterations 7
Cbc0038I Pass   8: suminf.    2.35859 (10) obj. -5.62566 iterations 11
Cbc0038I Pass   9: suminf.    2.13903 (8) obj. -5.62566 iterations 17
Cbc0038I Pass  10: suminf.    2.13903 (8) obj. -5.62566 iterations 0
Cbc0038I Pass  11: suminf.    1.98304 (10) obj. -5.62566 iterations 14
Cbc0038I Pass  12: suminf.    1.60488 (6) obj. -5.62566 iterations 7
Cbc0038I Pass  13: suminf.    2.25413 (7) obj. -5.62566 iterations 10
Cbc0038I Pass  14: suminf.    2.65038 (11) obj. -5.62566 iterations 8
Cbc0038I Pass  15: suminf.    3.74546 (14) obj. -5.62566 iterations 38
Cbc0038I Pass  16: suminf.    2.68498 (11) obj. -5.62566 iterations 18
Cbc0038I Pass  17: suminf.    3.27388 (10) obj. -5.62566 iterations 22
Cbc0038I Pass  18: suminf.    2.86347 (9) obj. -5.62566 iterations 2
Cbc0038I Pass  19: suminf.    2.86347 (9) obj. -5.62566 iterations 0
Cbc0038I Pass  20: suminf.    2.07064 (8) obj. -5.62566 iterations 9
Cbc0038I Pass  21: suminf.    1.64571 (7) obj. -5.62566 iterations 7
Cbc0038I Pass  22: suminf.    2.19071 (7) obj. -5.62566 iterations 8
Cbc0038I Pass  23: suminf.    2.01486 (9) obj. -5.62566 iterations 6
Cbc0038I Pass  24: suminf.    1.98939 (10) obj. -5.62566 iterations 23
Cbc0038I Pass  25: suminf.    1.82644 (8) obj. -5.62566 iterations 3
Cbc0038I Pass  26: suminf.    2.36896 (7) obj. -5.62566 iterations 20
Cbc0038I Pass  27: suminf.    2.31954 (7) obj. -5.62566 iterations 3
Cbc0038I Pass  28: suminf.    1.78947 (5) obj. -5.62566 iterations 11
Cbc0038I Pass  29: suminf.    1.73035 (6) obj. -5.62566 iterations 2
Cbc0038I Pass  30: suminf.    2.23662 (7) obj. -5.62566 iterations 6
Cbc0038I Pass  31: suminf.    2.02717 (9) obj. -5.62566 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -2.32853 to -2.41492 (0.11 seconds)
Cbc0038I Round again with cutoff of -11.5603
Cbc0038I Pass  31: suminf.    3.99116 (19) obj. -11.5603 iterations 4
Cbc0038I Pass  32: suminf.    2.75321 (8) obj. -11.5603 iterations 17
Cbc0038I Pass  33: suminf.    2.71462 (7) obj. -11.5603 iterations 3
Cbc0038I Pass  34: suminf.    2.80747 (9) obj. -11.5603 iterations 13
Cbc0038I Pass  35: suminf.    2.72142 (8) obj. -11.5603 iterations 1
Cbc0038I Pass  36: suminf.    3.33739 (9) obj. -11.5603 iterations 11
Cbc0038I Pass  37: suminf.    2.14631 (6) obj. -11.5603 iterations 5
Cbc0038I Pass  38: suminf.    3.81249 (13) obj. -11.5603 iterations 21
Cbc0038I Pass  39: suminf.    3.18478 (12) obj. -11.5603 iterations 9
Cbc0038I Pass  40: suminf.    3.18478 (12) obj. -11.5603 iterations 0
Cbc0038I Pass  41: suminf.    3.04826 (9) obj. -11.5603 iterations 17
Cbc0038I Pass  42: suminf.    2.81331 (9) obj. -11.5603 iterations 3
Cbc0038I Pass  43: suminf.    2.81331 (9) obj. -11.5603 iterations 0
Cbc0038I Pass  44: suminf.    3.24133 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  45: suminf.    2.72524 (7) obj. -11.5603 iterations 4
Cbc0038I Pass  46: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  47: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  48: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  49: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  50: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I Pass  51: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  52: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  53: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  54: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  55: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I Pass  56: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  57: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  58: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  59: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  60: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 107 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -2.41492 - took 0.16 seconds
Cbc0012I Integer solution of -2.41492 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 100 rows 59 columns
Cbc0012I Integer solution of -2.580823 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 33 added rows had average density of 68.848485
Cbc0013I At root node, 33 cuts changed objective from -35.298896 to -28.061232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21152 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2575 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.580823 best solution, best possible -28.061232 (1.55 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 88 rows 54 columns
Cbc0012I Integer solution of -3.84707 found by RINS after 12481 iterations and 41 nodes (1.96 seconds)
Cbc0012I Integer solution of -4.05072 found by rounding after 13734 iterations and 79 nodes (2.09 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 2 rows 3 columns
Cbc0016I Integer solution of -4.21131 found by strong branching after 14189 iterations and 101 nodes (2.12 seconds)
Cbc0001I Search completed - best objective -4.211310000000005, took 15385 iterations and 134 nodes (2.17 seconds)
Cbc0032I Strong branching done 1396 times (26553 iterations), fathomed 13 nodes and fixed 72 variables
Cbc0035I Maximum depth 42, 388 variables fixed on reduced cost
Total time (CPU seconds):       2.12   (Wallclock seconds):       2.19

