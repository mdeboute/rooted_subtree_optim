Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 72 (-6) columns and 388 (-65) elements
Clp1000I sum of infeasibilities 0.000603336 - average 4.78838e-06, 19 fixed columns
Coin0506I Presolve 86 (-40) rows, 51 (-21) columns and 266 (-122) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Coin0511I After Postsolve, objective 62.000931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Clp0000I Optimal - objective value 62.000931
Coin0511I After Postsolve, objective 62.000931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.00093105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 72 columns (71 integer (71 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.437%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.85214
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.34519 iterations 40
Cbc0038I Solution found of -6.34519
Cbc0038I Relaxing continuous gives -6.34519
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 50 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -6.34519 to -33.1273 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.989
Cbc0038I Pass   2: suminf.    1.81530 (7) obj. -35.989 iterations 11
Cbc0038I Pass   3: suminf.    0.99867 (4) obj. -35.989 iterations 7
Cbc0038I Pass   4: suminf.    0.90987 (5) obj. -35.989 iterations 3
Cbc0038I Pass   5: suminf.    0.78828 (5) obj. -35.989 iterations 12
Cbc0038I Pass   6: suminf.    0.64070 (2) obj. -35.989 iterations 5
Cbc0038I Pass   7: suminf.    0.64070 (2) obj. -35.989 iterations 2
Cbc0038I Pass   8: suminf.    0.75252 (2) obj. -35.989 iterations 3
Cbc0038I Pass   9: suminf.    0.74653 (4) obj. -35.989 iterations 11
Cbc0038I Pass  10: suminf.    0.39853 (3) obj. -35.989 iterations 9
Cbc0038I Pass  11: suminf.    0.78769 (4) obj. -35.989 iterations 9
Cbc0038I Pass  12: suminf.    0.53030 (3) obj. -35.989 iterations 2
Cbc0038I Pass  13: suminf.    0.54237 (2) obj. -35.989 iterations 8
Cbc0038I Pass  14: suminf.    0.48521 (2) obj. -35.989 iterations 3
Cbc0038I Pass  15: suminf.    1.69685 (8) obj. -35.989 iterations 12
Cbc0038I Pass  16: suminf.    1.14708 (4) obj. -35.989 iterations 14
Cbc0038I Pass  17: suminf.    0.53843 (2) obj. -35.989 iterations 10
Cbc0038I Pass  18: suminf.    0.39689 (3) obj. -35.989 iterations 5
Cbc0038I Pass  19: suminf.    1.02668 (4) obj. -35.989 iterations 5
Cbc0038I Pass  20: suminf.    0.83630 (3) obj. -35.989 iterations 2
Cbc0038I Pass  21: suminf.    0.55755 (3) obj. -35.989 iterations 5
Cbc0038I Pass  22: suminf.    2.48259 (7) obj. -35.989 iterations 24
Cbc0038I Pass  23: suminf.    0.79109 (5) obj. -35.989 iterations 9
Cbc0038I Pass  24: suminf.    0.66103 (5) obj. -35.989 iterations 3
Cbc0038I Pass  25: suminf.    0.90917 (4) obj. -35.989 iterations 14
Cbc0038I Pass  26: suminf.    0.62231 (3) obj. -35.989 iterations 4
Cbc0038I Pass  27: suminf.    0.60486 (3) obj. -35.989 iterations 8
Cbc0038I Pass  28: suminf.    0.59595 (3) obj. -35.989 iterations 3
Cbc0038I Pass  29: suminf.    0.65171 (3) obj. -35.989 iterations 9
Cbc0038I Pass  30: suminf.    1.69008 (8) obj. -35.989 iterations 15
Cbc0038I Pass  31: suminf.    1.65596 (5) obj. -35.989 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 65 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -33.1273 to -35.1523 (0.07 seconds)
Cbc0038I Round again with cutoff of -41.1399
Cbc0038I Pass  31: suminf.    2.18764 (9) obj. -41.1399 iterations 2
Cbc0038I Pass  32: suminf.    1.63111 (6) obj. -41.1399 iterations 10
Cbc0038I Pass  33: suminf.    1.63111 (6) obj. -41.1399 iterations 0
Cbc0038I Pass  34: suminf.    1.85557 (6) obj. -41.1399 iterations 9
Cbc0038I Pass  35: suminf.    1.70685 (6) obj. -41.1399 iterations 9
Cbc0038I Pass  36: suminf.    2.00510 (6) obj. -41.1399 iterations 11
Cbc0038I Pass  37: suminf.    1.71619 (6) obj. -41.1399 iterations 16
Cbc0038I Pass  38: suminf.    1.31369 (5) obj. -41.1399 iterations 9
Cbc0038I Pass  39: suminf.    0.84800 (4) obj. -41.1399 iterations 15
Cbc0038I Pass  40: suminf.    0.76065 (3) obj. -41.1399 iterations 5
Cbc0038I Pass  41: suminf.    2.17906 (6) obj. -41.1399 iterations 15
Cbc0038I Pass  42: suminf.    1.57870 (6) obj. -41.1399 iterations 18
Cbc0038I Pass  43: suminf.    1.69721 (4) obj. -41.1399 iterations 10
Cbc0038I Pass  44: suminf.    1.69785 (4) obj. -41.1399 iterations 4
Cbc0038I Pass  45: suminf.    1.69363 (4) obj. -41.1399 iterations 1
Cbc0038I Pass  46: suminf.    1.13263 (4) obj. -41.1399 iterations 3
Cbc0038I Pass  47: suminf.    1.10365 (4) obj. -41.1399 iterations 2
Cbc0038I Pass  48: suminf.    1.87275 (5) obj. -41.1399 iterations 9
Cbc0038I Pass  49: suminf.    1.78316 (6) obj. -41.1399 iterations 4
Cbc0038I Pass  50: suminf.    1.83378 (6) obj. -41.1399 iterations 7
Cbc0038I Pass  51: suminf.    1.38946 (5) obj. -41.1399 iterations 11
Cbc0038I Pass  52: suminf.    1.38894 (6) obj. -41.1399 iterations 1
Cbc0038I Pass  53: suminf.    1.78104 (5) obj. -41.1399 iterations 18
Cbc0038I Pass  54: suminf.    1.62717 (5) obj. -41.1399 iterations 6
Cbc0038I Pass  55: suminf.    0.87977 (3) obj. -41.1399 iterations 16
Cbc0038I Pass  56: suminf.    0.79203 (3) obj. -41.1399 iterations 3
Cbc0038I Pass  57: suminf.    1.04595 (4) obj. -41.1399 iterations 9
Cbc0038I Pass  58: suminf.    1.04595 (4) obj. -41.1399 iterations 0
Cbc0038I Pass  59: suminf.    1.07715 (5) obj. -41.1399 iterations 10
Cbc0038I Pass  60: suminf.    1.07715 (5) obj. -41.1399 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 72 columns, reduced to 54 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -35.1523 - took 0.08 seconds
Cbc0012I Integer solution of -35.15233 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 125 rows 72 columns, reduced to 52 rows 32 columns
Cbc0031I 19 added rows had average density of 47.315789
Cbc0013I At root node, 19 cuts changed objective from -61.743571 to -53.897581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9221 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1472 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 71.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -35.15233 best solution, best possible -53.897581 (0.70 seconds)
Cbc0001I Search completed - best objective -35.15232999999999, took 8016 iterations and 40 nodes (0.85 seconds)
Cbc0032I Strong branching done 488 times (9699 iterations), fathomed 2 nodes and fixed 48 variables
Cbc0035I Maximum depth 9, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.86

