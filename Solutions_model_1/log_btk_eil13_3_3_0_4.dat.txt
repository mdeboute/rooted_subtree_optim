Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 12 (-17) rows, 8 (-7) columns and 33 (-42) elements
Clp1000I sum of infeasibilities 7.83037e-09 - average 6.5253e-10, 0 fixed columns
Coin0506I Presolve 12 (0) rows, 8 (0) columns and 33 (0) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Coin0511I After Postsolve, objective 30.629719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Clp0000I Optimal - objective value 30.629719
Coin0511I After Postsolve, objective 30.629719, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30.62971883 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 12 rows, 8 columns (7 integer (7 of which binary)) and 33 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.353%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.50473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10 iterations 6
Cbc0038I Solution found of 10
Cbc0038I Relaxing continuous gives 10
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12 rows 8 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 10 to -10 (0.00 seconds)
Cbc0038I Round again with cutoff of -12.9312
Cbc0038I Pass   2: suminf.    0.88285 (4) obj. -12.9312 iterations 3
Cbc0038I Pass   3: suminf.    1.21840 (3) obj. -12.9312 iterations 4
Cbc0038I Pass   4: suminf.    0.91689 (3) obj. -12.9312 iterations 1
Cbc0038I Pass   5: suminf.    0.86980 (3) obj. -12.9312 iterations 5
Cbc0038I Pass   6: suminf.    0.81975 (4) obj. -12.9312 iterations 2
Cbc0038I Pass   7: suminf.    0.53511 (7) obj. -12.9312 iterations 5
Cbc0038I Pass   8: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I Pass   9: suminf.    0.87311 (6) obj. -12.9312 iterations 7
Cbc0038I Pass  10: suminf.    1.00630 (5) obj. -12.9312 iterations 2
Cbc0038I Pass  11: suminf.    1.21840 (3) obj. -12.9312 iterations 7
Cbc0038I Pass  12: suminf.    0.91689 (3) obj. -12.9312 iterations 1
Cbc0038I Pass  13: suminf.    0.91689 (3) obj. -12.9312 iterations 0
Cbc0038I Pass  14: suminf.    1.00347 (4) obj. -12.9312 iterations 5
Cbc0038I Pass  15: suminf.    0.81975 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  16: suminf.    0.53511 (7) obj. -12.9312 iterations 5
Cbc0038I Pass  17: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I Pass  18: suminf.    0.87311 (6) obj. -12.9312 iterations 7
Cbc0038I Pass  19: suminf.    0.86980 (3) obj. -12.9312 iterations 3
Cbc0038I Pass  20: suminf.    0.72429 (4) obj. -12.9312 iterations 7
Cbc0038I Pass  21: suminf.    0.83276 (2) obj. -12.9312 iterations 6
Cbc0038I Pass  22: suminf.    0.83029 (2) obj. -12.9312 iterations 2
Cbc0038I Pass  23: suminf.    0.83774 (2) obj. -12.9312 iterations 2
Cbc0038I Pass  24: suminf.    0.94053 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  25: suminf.    0.72429 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  26: suminf.    0.72429 (4) obj. -12.9312 iterations 0
Cbc0038I Pass  27: suminf.    0.72429 (4) obj. -12.9312 iterations 0
Cbc0038I Pass  28: suminf.    1.19315 (3) obj. -12.9312 iterations 3
Cbc0038I Pass  29: suminf.    0.98290 (4) obj. -12.9312 iterations 2
Cbc0038I Pass  30: suminf.    0.53511 (7) obj. -12.9312 iterations 6
Cbc0038I Pass  31: suminf.    0.53511 (7) obj. -12.9312 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12 rows 8 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -10 - took 0.00 seconds
Cbc0012I Integer solution of -10 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -30.312668 to -30.312668 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -10, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

