Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 21 (-8) rows, 13 (-2) columns and 60 (-15) elements
Clp1000I sum of infeasibilities 2.091e-09 - average 9.95712e-11, 2 fixed columns
Coin0506I Presolve 17 (-4) rows, 11 (-2) columns and 48 (-12) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 38.068427
Clp0000I Optimal - objective value 38.068427
Coin0511I After Postsolve, objective 38.068427, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.068427
Clp0000I Optimal - objective value 38.068427
Clp0000I Optimal - objective value 38.068427
Coin0511I After Postsolve, objective 38.068427, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.06842691 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 59 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.407%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.69258
Cbc0038I Solution found of -6.7375
Cbc0038I Relaxing continuous gives -6.7375
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -9.48514
Cbc0038I Pass   1: suminf.    0.11539 (2) obj. -9.48514 iterations 6
Cbc0038I Pass   2: suminf.    0.30132 (1) obj. -9.48514 iterations 4
Cbc0038I Pass   3: suminf.    0.27880 (1) obj. -9.48514 iterations 1
Cbc0038I Pass   4: suminf.    0.57094 (2) obj. -9.48514 iterations 4
Cbc0038I Pass   5: suminf.    0.49863 (2) obj. -9.48514 iterations 7
Cbc0038I Pass   6: suminf.    0.32300 (3) obj. -9.48514 iterations 4
Cbc0038I Pass   7: suminf.    0.65563 (2) obj. -9.48514 iterations 7
Cbc0038I Pass   8: suminf.    0.13716 (3) obj. -9.48514 iterations 6
Cbc0038I Pass   9: suminf.    0.13716 (3) obj. -9.48514 iterations 0
Cbc0038I Pass  10: suminf.    0.42526 (6) obj. -9.48514 iterations 5
Cbc0038I Pass  11: suminf.    0.88197 (3) obj. -9.48514 iterations 8
Cbc0038I Pass  12: suminf.    0.78090 (3) obj. -9.48514 iterations 2
Cbc0038I Pass  13: suminf.    0.38023 (1) obj. -9.48514 iterations 4
Cbc0038I Pass  14: suminf.    0.11539 (2) obj. -9.48514 iterations 2
Cbc0038I Pass  15: suminf.    0.30132 (1) obj. -9.48514 iterations 4
Cbc0038I Pass  16: suminf.    0.27880 (1) obj. -9.48514 iterations 1
Cbc0038I Pass  17: suminf.    0.64102 (3) obj. -9.48514 iterations 4
Cbc0038I Pass  18: suminf.    0.33597 (3) obj. -9.48514 iterations 2
Cbc0038I Pass  19: suminf.    0.42526 (6) obj. -9.48514 iterations 6
Cbc0038I Pass  20: suminf.    0.88197 (3) obj. -9.48514 iterations 8
Cbc0038I Pass  21: suminf.    0.78090 (3) obj. -9.48514 iterations 2
Cbc0038I Pass  22: suminf.    0.38023 (1) obj. -9.48514 iterations 4
Cbc0038I Pass  23: suminf.    0.11539 (2) obj. -9.48514 iterations 2
Cbc0038I Pass  24: suminf.    0.30132 (1) obj. -9.48514 iterations 4
Cbc0038I Pass  25: suminf.    0.27880 (1) obj. -9.48514 iterations 1
Cbc0038I Pass  26: suminf.    0.27880 (1) obj. -9.48514 iterations 0
Cbc0038I Pass  27: suminf.    0.97764 (4) obj. -9.48514 iterations 4
Cbc0038I Pass  28: suminf.    0.42526 (6) obj. -9.48514 iterations 7
Cbc0038I Pass  29: suminf.    0.88197 (3) obj. -9.48514 iterations 8
Cbc0038I Pass  30: suminf.    0.78090 (3) obj. -9.48514 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6.7375 - took 0.01 seconds
Cbc0012I Integer solution of -6.7375 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 9 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -34.101488 to -34.101488 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6.737500000000001, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

