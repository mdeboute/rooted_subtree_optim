Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 163 (-42) rows, 92 (-11) columns and 503 (-100) elements
Clp1000I sum of infeasibilities 0.000187167 - average 1.14827e-06, 19 fixed columns
Coin0506I Presolve 125 (-38) rows, 72 (-20) columns and 387 (-116) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.23782481 - largest nonzero change 0 ( 0%) - largest zero change 2.7980852e-05
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Coin0511I After Postsolve, objective 55.160699, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Clp0000I Optimal - objective value 55.160699
Coin0511I After Postsolve, objective 55.160699, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.16069852 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 162 rows, 92 columns (91 integer (91 of which binary)) and 515 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.081%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.02383
Cbc0038I Solution found of -1.51718
Cbc0038I Relaxing continuous gives -4.17314
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 61 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -4.17314 to -28.2823 (0.07 seconds)
Cbc0038I Round again with cutoff of -30.9703
Cbc0038I Pass   1: suminf.    2.43800 (16) obj. -30.9703 iterations 52
Cbc0038I Pass   2: suminf.    2.73341 (7) obj. -30.9703 iterations 18
Cbc0038I Pass   3: suminf.    2.22924 (6) obj. -30.9703 iterations 3
Cbc0038I Pass   4: suminf.    1.69463 (4) obj. -30.9703 iterations 7
Cbc0038I Pass   5: suminf.    1.22436 (5) obj. -30.9703 iterations 3
Cbc0038I Pass   6: suminf.    1.76714 (5) obj. -30.9703 iterations 5
Cbc0038I Pass   7: suminf.    1.68243 (5) obj. -30.9703 iterations 1
Cbc0038I Pass   8: suminf.    1.24653 (6) obj. -30.9703 iterations 6
Cbc0038I Pass   9: suminf.    1.24191 (4) obj. -30.9703 iterations 2
Cbc0038I Pass  10: suminf.    0.80883 (2) obj. -30.9703 iterations 4
Cbc0038I Pass  11: suminf.    0.67214 (2) obj. -30.9703 iterations 2
Cbc0038I Pass  12: suminf.    0.67214 (2) obj. -30.9703 iterations 0
Cbc0038I Pass  13: suminf.    0.80883 (2) obj. -30.9703 iterations 2
Cbc0038I Pass  14: suminf.    2.71667 (8) obj. -30.9703 iterations 18
Cbc0038I Pass  15: suminf.    1.31815 (5) obj. -30.9703 iterations 12
Cbc0038I Pass  16: suminf.    1.26953 (6) obj. -30.9703 iterations 11
Cbc0038I Pass  17: suminf.    1.07238 (6) obj. -30.9703 iterations 2
Cbc0038I Pass  18: suminf.    1.07238 (6) obj. -30.9703 iterations 1
Cbc0038I Pass  19: suminf.    1.42617 (5) obj. -30.9703 iterations 11
Cbc0038I Pass  20: suminf.    1.04996 (3) obj. -30.9703 iterations 4
Cbc0038I Pass  21: suminf.    0.53873 (5) obj. -30.9703 iterations 7
Cbc0038I Pass  22: suminf.    1.07699 (4) obj. -30.9703 iterations 5
Cbc0038I Pass  23: suminf.    0.60066 (4) obj. -30.9703 iterations 2
Cbc0038I Pass  24: suminf.    1.35316 (4) obj. -30.9703 iterations 9
Cbc0038I Pass  25: suminf.    1.19787 (4) obj. -30.9703 iterations 1
Cbc0038I Pass  26: suminf.    1.03794 (4) obj. -30.9703 iterations 1
Cbc0038I Pass  27: suminf.    0.79401 (3) obj. -30.9703 iterations 4
Cbc0038I Pass  28: suminf.    0.74899 (3) obj. -30.9703 iterations 1
Cbc0038I Pass  29: suminf.    3.29458 (11) obj. -30.9703 iterations 22
Cbc0038I Pass  30: suminf.    2.68438 (12) obj. -30.9703 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 88 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -28.2823 to -30.5367 (0.13 seconds)
Cbc0038I Round again with cutoff of -35.8084
Cbc0038I Pass  30: suminf.    2.96841 (18) obj. -35.8084 iterations 2
Cbc0038I Pass  31: suminf.    2.22759 (7) obj. -35.8084 iterations 23
Cbc0038I Pass  32: suminf.    1.03293 (4) obj. -35.8084 iterations 10
Cbc0038I Pass  33: suminf.    0.88298 (2) obj. -35.8084 iterations 6
Cbc0038I Pass  34: suminf.    0.49222 (2) obj. -35.8084 iterations 1
Cbc0038I Pass  35: suminf.    0.89770 (2) obj. -35.8084 iterations 4
Cbc0038I Pass  36: suminf.    0.89770 (2) obj. -35.8084 iterations 0
Cbc0038I Pass  37: suminf.    0.88298 (2) obj. -35.8084 iterations 3
Cbc0038I Pass  38: suminf.    1.61186 (7) obj. -35.8084 iterations 18
Cbc0038I Pass  39: suminf.    0.95736 (3) obj. -35.8084 iterations 13
Cbc0038I Pass  40: suminf.    1.24095 (5) obj. -35.8084 iterations 5
Cbc0038I Pass  41: suminf.    1.22563 (6) obj. -35.8084 iterations 1
Cbc0038I Pass  42: suminf.    1.72044 (5) obj. -35.8084 iterations 6
Cbc0038I Pass  43: suminf.    0.89209 (4) obj. -35.8084 iterations 6
Cbc0038I Pass  44: suminf.    1.42022 (5) obj. -35.8084 iterations 5
Cbc0038I Pass  45: suminf.    0.88879 (4) obj. -35.8084 iterations 5
Cbc0038I Pass  46: suminf.    2.43417 (11) obj. -35.8084 iterations 25
Cbc0038I Pass  47: suminf.    2.38809 (7) obj. -35.8084 iterations 7
Cbc0038I Pass  48: suminf.    2.25612 (6) obj. -35.8084 iterations 15
Cbc0038I Pass  49: suminf.    1.61904 (6) obj. -35.8084 iterations 6
Cbc0038I Pass  50: suminf.    1.61904 (6) obj. -35.8084 iterations 0
Cbc0038I Pass  51: suminf.    2.45387 (7) obj. -35.8084 iterations 5
Cbc0038I Pass  52: suminf.    2.12344 (6) obj. -35.8084 iterations 5
Cbc0038I Pass  53: suminf.    1.33558 (5) obj. -35.8084 iterations 8
Cbc0038I Pass  54: suminf.    1.32362 (5) obj. -35.8084 iterations 2
Cbc0038I Pass  55: suminf.    2.03397 (5) obj. -35.8084 iterations 7
Cbc0038I Pass  56: suminf.    1.85361 (4) obj. -35.8084 iterations 3
Cbc0038I Pass  57: suminf.    1.83330 (5) obj. -35.8084 iterations 1
Cbc0038I Pass  58: suminf.    1.57966 (6) obj. -35.8084 iterations 8
Cbc0038I Pass  59: suminf.    2.09469 (5) obj. -35.8084 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 92 columns, reduced to 82 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -30.5367 - took 0.17 seconds
Cbc0012I Integer solution of -30.53675 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 162 rows 92 columns, reduced to 62 rows 39 columns
Cbc0031I 22 added rows had average density of 48.227273
Cbc0013I At root node, 22 cuts changed objective from -55.160699 to -48.380957 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8949 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1599 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.53675 best solution, best possible -48.380957 (0.84 seconds)
Cbc0038I Full problem 162 rows 92 columns, reduced to 3 rows 3 columns
Cbc0001I Search completed - best objective -30.53675, took 8473 iterations and 98 nodes (1.11 seconds)
Cbc0032I Strong branching done 842 times (14381 iterations), fathomed 8 nodes and fixed 43 variables
Cbc0035I Maximum depth 21, 316 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.12

