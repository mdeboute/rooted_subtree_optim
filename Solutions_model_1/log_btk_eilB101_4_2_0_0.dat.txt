Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 146 (-59) rows, 79 (-24) columns and 443 (-160) elements
Clp1000I sum of infeasibilities 1.53737e-05 - average 1.05299e-07, 73 fixed columns
Coin0506I Presolve 5 (-141) rows, 5 (-74) columns and 12 (-431) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 8764.2724
Clp0000I Optimal - objective value 8764.2724
Coin0511I After Postsolve, objective 8764.2724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8740662 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 8764.2724
Clp0000I Optimal - objective value 8764.2724
Clp0000I Optimal - objective value 8764.2724
Coin0511I After Postsolve, objective 8764.2724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8764.272393 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 146 rows, 79 columns (78 integer (78 of which binary)) and 454 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.298%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.179104
Cbc0038I Pass   1: suminf.    0.10526 (2) obj. -8729.24 iterations 3
Cbc0038I Solution found of -4445.89
Cbc0038I Relaxing continuous gives -4450
Cbc0038I Rounding solution of -4478.03 is better than previous of -4450

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 79 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4906.65
Cbc0038I Pass   2: suminf.    0.10526 (2) obj. -8729.24 iterations 0
Cbc0038I Pass   3: suminf.    0.20200 (2) obj. -4906.65 iterations 8
Cbc0038I Pass   4: suminf.    0.45646 (3) obj. -4906.65 iterations 11
Cbc0038I Pass   5: suminf.    0.45646 (3) obj. -4906.65 iterations 6
Cbc0038I Pass   6: suminf.    0.70175 (2) obj. -6036.42 iterations 8
Cbc0038I Pass   7: suminf.    0.20200 (2) obj. -4906.65 iterations 1
Cbc0038I Pass   8: suminf.    1.13591 (5) obj. -4906.65 iterations 15
Cbc0038I Pass   9: suminf.    0.20200 (2) obj. -4906.65 iterations 12
Cbc0038I Pass  10: suminf.    0.94737 (2) obj. -6591.67 iterations 1
Cbc0038I Pass  11: suminf.    0.55518 (4) obj. -4906.65 iterations 14
Cbc0038I Pass  12: suminf.    0.55518 (4) obj. -4906.65 iterations 8
Cbc0038I Pass  13: suminf.    0.77193 (2) obj. -6204.98 iterations 6
Cbc0038I Pass  14: suminf.    0.19762 (2) obj. -4906.65 iterations 1
Cbc0038I Pass  15: suminf.    0.73409 (5) obj. -4906.65 iterations 8
Cbc0038I Pass  16: suminf.    0.18340 (2) obj. -4906.65 iterations 10
Cbc0038I Pass  17: suminf.    0.35088 (2) obj. -5285.25 iterations 1
Cbc0038I Pass  18: suminf.    0.82143 (5) obj. -4906.65 iterations 7
Cbc0038I Pass  19: suminf.    0.82143 (5) obj. -4906.65 iterations 3
Cbc0038I Pass  20: suminf.    0.87719 (2) obj. -6442.94 iterations 7
Cbc0038I Pass  21: suminf.    0.19762 (2) obj. -4906.65 iterations 1
Cbc0038I Pass  22: suminf.    0.50687 (3) obj. -4906.65 iterations 6
Cbc0038I Pass  23: suminf.    0.50687 (3) obj. -4906.65 iterations 2
Cbc0038I Pass  24: suminf.    0.45614 (2) obj. -5521.03 iterations 7
Cbc0038I Pass  25: suminf.    0.18437 (2) obj. -4906.65 iterations 1
Cbc0038I Pass  26: suminf.    1.18128 (6) obj. -4906.65 iterations 8
Cbc0038I Pass  27: suminf.    1.18128 (6) obj. -4906.65 iterations 1
Cbc0038I Pass  28: suminf.    0.87719 (2) obj. -6472.88 iterations 10
Cbc0038I Pass  29: suminf.    0.18437 (2) obj. -4906.65 iterations 1
Cbc0038I Pass  30: suminf.    0.81602 (6) obj. -4906.65 iterations 6
Cbc0038I Pass  31: suminf.    0.57259 (4) obj. -4906.65 iterations 3
Cbc0038I Rounding solution of -4482.13 is better than previous of -4478.03

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 79 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -4482.13 to -4563.36 (0.02 seconds)
Cbc0038I Round again with cutoff of -5678.18
Cbc0038I Pass  31: suminf.    0.10526 (2) obj. -8729.24 iterations 0
Cbc0038I Pass  32: suminf.    0.54328 (2) obj. -5678.18 iterations 8
Cbc0038I Pass  33: suminf.    0.92789 (4) obj. -5678.18 iterations 12
Cbc0038I Pass  34: suminf.    0.52469 (2) obj. -5678.18 iterations 16
Cbc0038I Pass  35: suminf.    0.77193 (2) obj. -6237.11 iterations 1
Cbc0038I Pass  36: suminf.    0.73161 (5) obj. -5678.18 iterations 13
Cbc0038I Pass  37: suminf.    0.64930 (3) obj. -5678.18 iterations 12
Cbc0038I Pass  38: suminf.    0.87719 (2) obj. -6472.88 iterations 10
Cbc0038I Pass  39: suminf.    0.52565 (2) obj. -5678.18 iterations 1
Cbc0038I Pass  40: suminf.    1.10414 (4) obj. -5678.18 iterations 9
Cbc0038I Pass  41: suminf.    0.53291 (2) obj. -5678.18 iterations 10
Cbc0038I Pass  42: suminf.    0.87719 (2) obj. -6456.48 iterations 1
Cbc0038I Pass  43: suminf.    2.63036 (8) obj. -5678.18 iterations 14
Cbc0038I Pass  44: suminf.    0.52432 (2) obj. -5678.18 iterations 14
Cbc0038I Pass  45: suminf.    0.86538 (3) obj. -6453.14 iterations 6
Cbc0038I Pass  46: suminf.    0.53004 (2) obj. -5678.18 iterations 3
Cbc0038I Pass  47: suminf.    0.53004 (2) obj. -5678.18 iterations 0
Cbc0038I Pass  48: suminf.    1.20260 (4) obj. -5678.18 iterations 7
Cbc0038I Pass  49: suminf.    0.97841 (3) obj. -5678.18 iterations 4
Cbc0038I Pass  50: suminf.    0.94737 (2) obj. -6859.58 iterations 5
Cbc0038I Pass  51: suminf.    0.53004 (2) obj. -5678.18 iterations 1
Cbc0038I Pass  52: suminf.    1.23623 (4) obj. -5678.18 iterations 10
Cbc0038I Pass  53: suminf.    0.71666 (3) obj. -5678.18 iterations 8
Cbc0038I Pass  54: suminf.    0.70175 (2) obj. -6036.42 iterations 2
Cbc0038I Pass  55: suminf.    0.54328 (2) obj. -5678.18 iterations 1
Cbc0038I Pass  56: suminf.    1.18042 (5) obj. -5678.18 iterations 13
Cbc0038I Pass  57: suminf.    0.80348 (3) obj. -5678.18 iterations 7
Cbc0038I Pass  58: suminf.    0.56140 (2) obj. -5737.24 iterations 2
Cbc0038I Pass  59: suminf.    0.53528 (2) obj. -5678.18 iterations 1
Cbc0038I Pass  60: suminf.    1.08255 (4) obj. -5678.18 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 79 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -4563.36 - took 0.02 seconds
Cbc0012I Integer solution of -4563.3595 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -4581.8124 found by DiveCoefficient after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 146 rows 79 columns, reduced to 7 rows 9 columns
Cbc0031I 5 added rows had average density of 39
Cbc0013I At root node, 5 cuts changed objective from -8764.2724 to -4624.7525 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.5 elements, 21 column cuts (21 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -4584.0646 found by DiveCoefficient after 116 iterations and 2 nodes (0.06 seconds)
Cbc0012I Integer solution of -4610.1737 found by rounding after 120 iterations and 3 nodes (0.06 seconds)
Cbc0012I Integer solution of -4617.8352 found by DiveCoefficient after 120 iterations and 3 nodes (0.06 seconds)
Cbc0001I Search completed - best objective -4617.83521, took 174 iterations and 8 nodes (0.07 seconds)
Cbc0032I Strong branching done 54 times (374 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

