Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-18) rows, 25 (-7) columns and 133 (-44) elements
Clp1000I sum of infeasibilities 0.00422538 - average 9.38974e-05, 9 fixed columns
Coin0506I Presolve 27 (-18) rows, 15 (-10) columns and 77 (-56) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 157.60342
Clp0000I Optimal - objective value 157.60342
Coin0511I After Postsolve, objective 157.60342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.27249311 - largest nonzero change 0 ( 0%) - largest zero change 2.1795363e-05
Clp0000I Optimal - objective value 157.60342
Clp0000I Optimal - objective value 157.60342
Clp0000I Optimal - objective value 157.60342
Coin0511I After Postsolve, objective 157.60342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 157.6034221 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 25 columns (24 integer (24 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.19593
Cbc0038I Pass   1: suminf.    0.71831 (2) obj. -114.154 iterations 12
Cbc0038I Solution found of -36.9
Cbc0038I Relaxing continuous gives -36.9
Cbc0038I Rounding solution of -44.1 is better than previous of -36.9

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -44.1 to -55.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -64.85
Cbc0038I Pass   2: suminf.    0.71831 (2) obj. -114.154 iterations 0
Cbc0038I Pass   3: suminf.    0.30397 (1) obj. -64.85 iterations 2
Cbc0038I Pass   4: suminf.    0.26613 (1) obj. -104.379 iterations 1
Cbc0038I Pass   5: suminf.    0.96061 (3) obj. -64.85 iterations 8
Cbc0038I Pass   6: suminf.    0.61132 (2) obj. -64.85 iterations 3
Cbc0038I Pass   7: suminf.    0.42742 (1) obj. -80.1512 iterations 2
Cbc0038I Pass   8: suminf.    0.26101 (1) obj. -64.85 iterations 1
Cbc0038I Pass   9: suminf.    0.83099 (2) obj. -89.2877 iterations 5
Cbc0038I Pass  10: suminf.    0.27896 (1) obj. -64.85 iterations 4
Cbc0038I Pass  11: suminf.    0.47581 (1) obj. -82.9504 iterations 1
Cbc0038I Pass  12: suminf.    0.26101 (1) obj. -64.85 iterations 2
Cbc0038I Pass  13: suminf.    1.09301 (5) obj. -64.85 iterations 7
Cbc0038I Pass  14: suminf.    0.80322 (3) obj. -64.85 iterations 1
Cbc0038I Pass  15: suminf.    0.42742 (1) obj. -80.1512 iterations 3
Cbc0038I Pass  16: suminf.    0.26101 (1) obj. -64.85 iterations 1
Cbc0038I Pass  17: suminf.    1.18538 (6) obj. -64.85 iterations 7
Cbc0038I Pass  18: suminf.    0.66647 (3) obj. -64.85 iterations 2
Cbc0038I Pass  19: suminf.    0.39516 (1) obj. -77.1851 iterations 3
Cbc0038I Pass  20: suminf.    0.26101 (1) obj. -64.85 iterations 1
Cbc0038I Pass  21: suminf.    0.90713 (4) obj. -64.85 iterations 5
Cbc0038I Pass  22: suminf.    0.90713 (4) obj. -64.85 iterations 1
Cbc0038I Pass  23: suminf.    0.91989 (4) obj. -64.85 iterations 8
Cbc0038I Pass  24: suminf.    0.40043 (3) obj. -64.85 iterations 5
Cbc0038I Pass  25: suminf.    0.47581 (1) obj. -64.85 iterations 2
Cbc0038I Pass  26: suminf.    0.46221 (1) obj. -64.85 iterations 1
Cbc0038I Pass  27: suminf.    0.57957 (4) obj. -64.85 iterations 5
Cbc0038I Pass  28: suminf.    0.39092 (2) obj. -64.85 iterations 2
Cbc0038I Pass  29: suminf.    0.36290 (1) obj. -64.85 iterations 1
Cbc0038I Pass  30: suminf.    0.33333 (1) obj. -64.85 iterations 1
Cbc0038I Pass  31: suminf.    1.64493 (5) obj. -64.85 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -55.3 to -75 (0.02 seconds)
Cbc0038I Round again with cutoff of -90.1
Cbc0038I Pass  31: suminf.    0.71831 (2) obj. -114.154 iterations 0
Cbc0038I Pass  32: suminf.    0.42142 (1) obj. -90.1 iterations 2
Cbc0038I Pass  33: suminf.    0.26613 (1) obj. -104.379 iterations 1
Cbc0038I Pass  34: suminf.    3.30240 (10) obj. -90.1 iterations 12
Cbc0038I Pass  35: suminf.    1.19784 (4) obj. -90.1 iterations 9
Cbc0038I Pass  36: suminf.    0.70465 (3) obj. -90.1 iterations 5
Cbc0038I Pass  37: suminf.    0.49973 (1) obj. -90.1 iterations 3
Cbc0038I Pass  38: suminf.    0.39516 (1) obj. -99.7149 iterations 1
Cbc0038I Pass  39: suminf.    1.73574 (9) obj. -90.1 iterations 11
Cbc0038I Pass  40: suminf.    0.64584 (3) obj. -90.1 iterations 10
Cbc0038I Pass  41: suminf.    1.12736 (6) obj. -90.1 iterations 5
Cbc0038I Pass  42: suminf.    1.12736 (6) obj. -90.1 iterations 0
Cbc0038I Pass  43: suminf.    0.71659 (3) obj. -90.1 iterations 8
Cbc0038I Pass  44: suminf.    0.71659 (3) obj. -90.1 iterations 0
Cbc0038I Pass  45: suminf.    0.50147 (3) obj. -90.1 iterations 2
Cbc0038I Pass  46: suminf.    0.50147 (3) obj. -90.1 iterations 0
Cbc0038I Pass  47: suminf.    2.81871 (9) obj. -90.1 iterations 7
Cbc0038I Pass  48: suminf.    1.08461 (5) obj. -90.1 iterations 4
Cbc0038I Pass  49: suminf.    0.78275 (3) obj. -90.1 iterations 7
Cbc0038I Pass  50: suminf.    0.78275 (3) obj. -90.1 iterations 0
Cbc0038I Pass  51: suminf.    0.56450 (3) obj. -90.1 iterations 2
Cbc0038I Pass  52: suminf.    0.56450 (3) obj. -90.1 iterations 0
Cbc0038I Pass  53: suminf.    0.75149 (2) obj. -90.1 iterations 4
Cbc0038I Pass  54: suminf.    0.75149 (2) obj. -90.1 iterations 0
Cbc0038I Pass  55: suminf.    0.39043 (1) obj. -90.1 iterations 2
Cbc0038I Pass  56: suminf.    0.37903 (1) obj. -91.148 iterations 1
Cbc0038I Pass  57: suminf.    0.37903 (1) obj. -91.148 iterations 1
Cbc0038I Pass  58: suminf.    0.37903 (1) obj. -91.148 iterations 1
Cbc0038I Pass  59: suminf.    0.81618 (3) obj. -99.1721 iterations 5
Cbc0038I Pass  60: suminf.    0.29839 (1) obj. -90.3633 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 45 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -75 - took 0.02 seconds
Cbc0012I Integer solution of -75 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 45 rows 25 columns, reduced to 22 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 4.1428571
Cbc0013I At root node, 7 cuts changed objective from -150.18616 to -76.219428 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 64 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0001I Search completed - best objective -75, took 57 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.09

