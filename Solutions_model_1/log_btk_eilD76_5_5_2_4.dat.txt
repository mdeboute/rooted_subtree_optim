Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.10305e-05 - average 8.48502e-08, 10 fixed columns
Coin0506I Presolve 109 (-21) rows, 65 (-11) columns and 340 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Coin0511I After Postsolve, objective 37.833742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Coin0511I After Postsolve, objective 37.833742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.83374231 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 12.0889
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20.232 iterations 56
Cbc0038I Solution found of 20.232
Cbc0038I Relaxing continuous gives 20.232
Cbc0038I Rounding solution of -6.81669 is better than previous of 20.232

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -6.81669 to -13.3824 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.8277
Cbc0038I Pass   2: suminf.    4.18265 (22) obj. -15.8277 iterations 25
Cbc0038I Pass   3: suminf.    3.85350 (17) obj. -15.8277 iterations 9
Cbc0038I Pass   4: suminf.    1.30534 (4) obj. -15.8277 iterations 24
Cbc0038I Pass   5: suminf.    1.30534 (4) obj. -15.8277 iterations 0
Cbc0038I Pass   6: suminf.    1.44644 (5) obj. -15.8277 iterations 8
Cbc0038I Pass   7: suminf.    1.44644 (5) obj. -15.8277 iterations 0
Cbc0038I Pass   8: suminf.    1.88367 (5) obj. -15.8277 iterations 5
Cbc0038I Pass   9: suminf.    1.88367 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  10: suminf.    2.13391 (5) obj. -15.8277 iterations 2
Cbc0038I Pass  11: suminf.    2.13391 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  12: suminf.    1.88367 (5) obj. -15.8277 iterations 2
Cbc0038I Pass  13: suminf.    4.00407 (10) obj. -15.8277 iterations 18
Cbc0038I Pass  14: suminf.    1.77443 (5) obj. -15.8277 iterations 15
Cbc0038I Pass  15: suminf.    0.97464 (5) obj. -15.8277 iterations 5
Cbc0038I Pass  16: suminf.    1.28877 (5) obj. -15.8277 iterations 8
Cbc0038I Pass  17: suminf.    1.28877 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  18: suminf.    1.58517 (4) obj. -15.8277 iterations 3
Cbc0038I Pass  19: suminf.    1.22131 (4) obj. -15.8277 iterations 2
Cbc0038I Pass  20: suminf.    2.16525 (8) obj. -15.8277 iterations 17
Cbc0038I Pass  21: suminf.    1.46833 (6) obj. -15.8277 iterations 3
Cbc0038I Pass  22: suminf.    1.07157 (7) obj. -15.8277 iterations 2
Cbc0038I Pass  23: suminf.    1.54603 (5) obj. -15.8277 iterations 10
Cbc0038I Pass  24: suminf.    1.49059 (5) obj. -15.8277 iterations 1
Cbc0038I Pass  25: suminf.    1.25265 (4) obj. -15.8277 iterations 3
Cbc0038I Pass  26: suminf.    1.25265 (4) obj. -15.8277 iterations 0
Cbc0038I Pass  27: suminf.    1.74913 (8) obj. -15.8277 iterations 30
Cbc0038I Pass  28: suminf.    1.57805 (7) obj. -15.8277 iterations 6
Cbc0038I Pass  29: suminf.    1.82522 (5) obj. -15.8277 iterations 10
Cbc0038I Pass  30: suminf.    1.60814 (5) obj. -15.8277 iterations 1
Cbc0038I Pass  31: suminf.    1.69805 (5) obj. -15.8277 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -13.3824 - took 0.09 seconds
Cbc0012I Integer solution of -13.382447 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 69 rows 40 columns
Cbc0031I 31 added rows had average density of 50.709677
Cbc0013I At root node, 31 cuts changed objective from -37.833742 to -30.098796 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15271 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1916 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.382447 best solution, best possible -30.098796 (1.03 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 64 rows 39 columns
Cbc0012I Integer solution of -13.453077 found by rounding after 11043 iterations and 61 nodes (1.31 seconds)
Cbc0016I Integer solution of -13.5141 found by strong branching after 11227 iterations and 75 nodes (1.33 seconds)
Cbc0012I Integer solution of -13.76037 found by rounding after 11333 iterations and 89 nodes (1.34 seconds)
Cbc0001I Search completed - best objective -13.76036999999999, took 11402 iterations and 94 nodes (1.35 seconds)
Cbc0032I Strong branching done 986 times (16783 iterations), fathomed 9 nodes and fixed 17 variables
Cbc0035I Maximum depth 25, 150 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.36

