Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 5.2832e-06 - average 1.17404e-07, 19 fixed columns
Coin0506I Presolve 7 (-38) rows, 6 (-20) columns and 20 (-115) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Coin0511I After Postsolve, objective 3617.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Clp0000I Optimal - objective value 3617.3261
Coin0511I After Postsolve, objective 3617.3261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3617.326096 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 26 columns (25 integer (25 of which binary)) and 143 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.806%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.802725
Cbc0038I Pass   1: suminf.    0.32222 (1) obj. -3240.12 iterations 4
Cbc0038I Solution found of -2637.75
Cbc0038I Relaxing continuous gives -2637.75
Cbc0038I Rounding solution of -2638.75 is better than previous of -2637.75

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2736.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32222 (1) obj. -3240.12 iterations 0
Cbc0038I Pass   3: suminf.    0.05560 (1) obj. -2736.83 iterations 3
Cbc0038I Pass   4: suminf.    0.45556 (1) obj. -3449.55 iterations 2
Cbc0038I Pass   5: suminf.    0.40663 (4) obj. -3276.08 iterations 6
Cbc0038I Pass   6: suminf.    0.04045 (1) obj. -2736.83 iterations 6
Cbc0038I Pass   7: suminf.    0.32500 (1) obj. -3243.9 iterations 2
Cbc0038I Pass   8: suminf.    1.05082 (4) obj. -2736.83 iterations 12
Cbc0038I Pass   9: suminf.    0.58739 (2) obj. -2736.83 iterations 7
Cbc0038I Pass  10: suminf.    0.53863 (2) obj. -2736.83 iterations 1
Cbc0038I Pass  11: suminf.    0.54094 (2) obj. -2740.96 iterations 1
Cbc0038I Pass  12: suminf.    0.54094 (2) obj. -2740.96 iterations 1
Cbc0038I Pass  13: suminf.    0.10669 (3) obj. -2736.83 iterations 8
Cbc0038I Pass  14: suminf.    0.05170 (2) obj. -2736.83 iterations 3
Cbc0038I Pass  15: suminf.    0.16250 (1) obj. -2918.1 iterations 3
Cbc0038I Pass  16: suminf.    0.05841 (1) obj. -2736.83 iterations 2
Cbc0038I Pass  17: suminf.    0.13684 (1) obj. -2876.6 iterations 1
Cbc0038I Pass  18: suminf.    0.16783 (3) obj. -2736.83 iterations 3
Cbc0038I Pass  19: suminf.    0.44762 (1) obj. -2736.83 iterations 14
Cbc0038I Pass  20: suminf.    0.37778 (1) obj. -2861.3 iterations 2
Cbc0038I Pass  21: suminf.    0.44762 (1) obj. -2736.83 iterations 1
Cbc0038I Pass  22: suminf.    0.05280 (1) obj. -2736.83 iterations 8
Cbc0038I Pass  23: suminf.    0.05280 (1) obj. -2736.83 iterations 2
Cbc0038I Pass  24: suminf.    0.07778 (1) obj. -2781.35 iterations 1
Cbc0038I Pass  25: suminf.    1.06208 (3) obj. -2736.83 iterations 5
Cbc0038I Pass  26: suminf.    0.45397 (1) obj. -2736.83 iterations 3
Cbc0038I Pass  27: suminf.    0.43750 (1) obj. -2765.75 iterations 1
Cbc0038I Pass  28: suminf.    0.96568 (3) obj. -2736.83 iterations 7
Cbc0038I Pass  29: suminf.    1.35139 (5) obj. -2736.83 iterations 10
Cbc0038I Pass  30: suminf.    0.37657 (3) obj. -2736.83 iterations 2
Cbc0038I Pass  31: suminf.    0.31266 (2) obj. -2736.83 iterations 3
Cbc0038I Rounding solution of -2665.75 is better than previous of -2638.75

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 26 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -2665.75 to -2670.75 (0.02 seconds)
Cbc0038I Round again with cutoff of -2912.93
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.32222 (1) obj. -3240.12 iterations 0
Cbc0038I Pass  32: suminf.    0.15442 (1) obj. -2912.93 iterations 3
Cbc0038I Pass  33: suminf.    0.45556 (1) obj. -3449.55 iterations 2
Cbc0038I Pass  34: suminf.    1.39915 (5) obj. -2912.93 iterations 9
Cbc0038I Pass  35: suminf.    0.67810 (2) obj. -2912.93 iterations 3
Cbc0038I Pass  36: suminf.    0.34824 (1) obj. -2912.93 iterations 5
Cbc0038I Pass  37: suminf.    0.26667 (1) obj. -3058.3 iterations 2
Cbc0038I Pass  38: suminf.    1.24321 (4) obj. -2912.93 iterations 6
Cbc0038I Pass  39: suminf.    0.65395 (4) obj. -2912.93 iterations 1
Cbc0038I Pass  40: suminf.    0.62619 (3) obj. -2912.93 iterations 1
Cbc0038I Pass  41: suminf.    0.34415 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  42: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  43: suminf.    0.28421 (1) obj. -3017.7 iterations 3
Cbc0038I Pass  44: suminf.    0.28421 (1) obj. -3017.7 iterations 2
Cbc0038I Pass  45: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  46: suminf.    1.35356 (7) obj. -2912.93 iterations 9
Cbc0038I Pass  47: suminf.    0.36360 (2) obj. -2912.93 iterations 12
Cbc0038I Pass  48: suminf.    0.15930 (2) obj. -2912.93 iterations 7
Cbc0038I Pass  49: suminf.    0.16250 (1) obj. -2918.1 iterations 1
Cbc0038I Pass  50: suminf.    1.87942 (5) obj. -2912.93 iterations 4
Cbc0038I Pass  51: suminf.    0.15723 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  52: suminf.    0.34737 (1) obj. -3251.76 iterations 1
Cbc0038I Pass  53: suminf.    0.34737 (1) obj. -3251.76 iterations 2
Cbc0038I Pass  54: suminf.    1.51724 (4) obj. -2984.47 iterations 5
Cbc0038I Pass  55: suminf.    0.62619 (3) obj. -2912.93 iterations 14
Cbc0038I Pass  56: suminf.    0.62619 (3) obj. -2912.93 iterations 2
Cbc0038I Pass  57: suminf.    0.34415 (1) obj. -2912.93 iterations 4
Cbc0038I Pass  58: suminf.    0.28421 (1) obj. -3017.7 iterations 1
Cbc0038I Pass  59: suminf.    0.56877 (4) obj. -2912.93 iterations 6
Cbc0038I Pass  60: suminf.    0.56877 (4) obj. -2912.93 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 26 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2670.75 - took 0.02 seconds
Cbc0012I Integer solution of -2670.75 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 26 columns, reduced to 10 rows 9 columns
Cbc0012I Integer solution of -2671.75 found by DiveCoefficient after 682 iterations and 0 nodes (0.10 seconds)
Cbc0031I 9 added rows had average density of 19.666667
Cbc0013I At root node, 9 cuts changed objective from -3617.3261 to -2707.1542 in 80 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 3.2 elements, 5 column cuts (5 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 146 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 91 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2671.75, took 823 iterations and 6 nodes (0.11 seconds)
Cbc0032I Strong branching done 54 times (305 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

