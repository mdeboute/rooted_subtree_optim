Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 5.23653e-05 - average 1.45459e-06, 0 fixed columns
Coin0506I Presolve 36 (0) rows, 22 (0) columns and 108 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 90.357338
Clp0000I Optimal - objective value 90.357338
Coin0511I After Postsolve, objective 90.357338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.357338
Clp0000I Optimal - objective value 90.357338
Clp0000I Optimal - objective value 90.357338
Coin0511I After Postsolve, objective 90.357338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.35733838 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.15106
Cbc0038I Solution found of -5.11799
Cbc0038I Relaxing continuous gives -23.4
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -23.4 to -40.9 (0.02 seconds)
Cbc0038I Round again with cutoff of -46
Cbc0038I Pass   1: suminf.    1.50517 (13) obj. -46 iterations 15
Cbc0038I Pass   2: suminf.    0.94772 (6) obj. -46 iterations 15
Cbc0038I Pass   3: suminf.    0.81746 (4) obj. -46 iterations 3
Cbc0038I Pass   4: suminf.    1.01571 (3) obj. -46 iterations 7
Cbc0038I Pass   5: suminf.    0.67328 (3) obj. -46 iterations 2
Cbc0038I Pass   6: suminf.    1.14647 (3) obj. -46 iterations 2
Cbc0038I Pass   7: suminf.    0.77046 (3) obj. -46 iterations 1
Cbc0038I Pass   8: suminf.    1.01856 (3) obj. -46 iterations 4
Cbc0038I Pass   9: suminf.    0.67382 (4) obj. -46 iterations 3
Cbc0038I Pass  10: suminf.    1.39015 (3) obj. -46 iterations 7
Cbc0038I Pass  11: suminf.    1.19242 (3) obj. -46 iterations 3
Cbc0038I Pass  12: suminf.    1.19242 (3) obj. -46 iterations 0
Cbc0038I Pass  13: suminf.    1.39015 (3) obj. -46 iterations 2
Cbc0038I Pass  14: suminf.    0.49003 (3) obj. -46 iterations 11
Cbc0038I Pass  15: suminf.    0.47416 (4) obj. -46 iterations 2
Cbc0038I Pass  16: suminf.    0.56046 (2) obj. -47.0879 iterations 3
Cbc0038I Pass  17: suminf.    0.40726 (2) obj. -46 iterations 2
Cbc0038I Pass  18: suminf.    0.87503 (3) obj. -46 iterations 5
Cbc0038I Pass  19: suminf.    0.82319 (3) obj. -46 iterations 3
Cbc0038I Pass  20: suminf.    1.02938 (3) obj. -46 iterations 2
Cbc0038I Pass  21: suminf.    0.92049 (3) obj. -46 iterations 1
Cbc0038I Pass  22: suminf.    0.87503 (3) obj. -46 iterations 4
Cbc0038I Pass  23: suminf.    1.41775 (5) obj. -46 iterations 4
Cbc0038I Pass  24: suminf.    1.21632 (4) obj. -46 iterations 1
Cbc0038I Pass  25: suminf.    1.78545 (5) obj. -46 iterations 5
Cbc0038I Pass  26: suminf.    1.78545 (5) obj. -46 iterations 0
Cbc0038I Pass  27: suminf.    0.67935 (3) obj. -46 iterations 8
Cbc0038I Pass  28: suminf.    0.67935 (3) obj. -46 iterations 0
Cbc0038I Pass  29: suminf.    1.34515 (3) obj. -46 iterations 5
Cbc0038I Pass  30: suminf.    1.34515 (3) obj. -46 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.9 - took 0.04 seconds
Cbc0012I Integer solution of -40.9 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 10 added rows had average density of 18.7
Cbc0013I At root node, 10 cuts changed objective from -90.357338 to -68.838878 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1312 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 600 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 63 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -40.89999999999999, took 2721 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 100 times (983 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

