Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 47 (-3) columns and 256 (-29) elements
Clp1000I sum of infeasibilities 2.13002e-05 - average 2.50591e-07, 11 fixed columns
Coin0506I Presolve 55 (-30) rows, 33 (-14) columns and 168 (-88) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 1.6841629 - largest nonzero change 0 ( 0%) - largest zero change 1.199713e-05
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Coin0511I After Postsolve, objective 2387.6579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Coin0511I After Postsolve, objective 2387.6579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2387.657857 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 47 columns (46 integer (46 of which binary)) and 256 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.859%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.2542
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 172.108 iterations 28
Cbc0038I Solution found of 172.108
Cbc0038I Relaxing continuous gives 172.108
Cbc0038I Rounding solution of -150.95 is better than previous of 172.108

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -150.95 to -456.675 (0.04 seconds)
Cbc0038I Round again with cutoff of -649.773
Cbc0038I Pass   2: suminf.    1.21796 (5) obj. -649.773 iterations 5
Cbc0038I Pass   3: suminf.    1.40658 (4) obj. -649.773 iterations 8
Cbc0038I Pass   4: suminf.    0.87389 (3) obj. -649.773 iterations 1
Cbc0038I Pass   5: suminf.    1.48377 (5) obj. -649.773 iterations 5
Cbc0038I Pass   6: suminf.    2.12772 (6) obj. -649.773 iterations 6
Cbc0038I Pass   7: suminf.    1.46664 (5) obj. -649.773 iterations 3
Cbc0038I Pass   8: suminf.    1.41022 (4) obj. -649.773 iterations 1
Cbc0038I Pass   9: suminf.    0.97191 (4) obj. -649.773 iterations 4
Cbc0038I Pass  10: suminf.    1.97886 (5) obj. -649.773 iterations 5
Cbc0038I Pass  11: suminf.    1.47447 (4) obj. -649.773 iterations 2
Cbc0038I Pass  12: suminf.    1.21339 (4) obj. -649.773 iterations 6
Cbc0038I Pass  13: suminf.    1.03892 (4) obj. -649.773 iterations 3
Cbc0038I Pass  14: suminf.    2.11680 (6) obj. -649.773 iterations 5
Cbc0038I Pass  15: suminf.    1.59844 (7) obj. -649.773 iterations 3
Cbc0038I Pass  16: suminf.    1.59844 (7) obj. -649.773 iterations 0
Cbc0038I Pass  17: suminf.    1.73938 (5) obj. -649.773 iterations 8
Cbc0038I Pass  18: suminf.    0.87709 (3) obj. -649.773 iterations 3
Cbc0038I Pass  19: suminf.    1.23509 (5) obj. -649.773 iterations 5
Cbc0038I Pass  20: suminf.    1.23509 (5) obj. -649.773 iterations 0
Cbc0038I Pass  21: suminf.    2.08731 (6) obj. -649.773 iterations 4
Cbc0038I Pass  22: suminf.    1.92877 (7) obj. -649.773 iterations 1
Cbc0038I Pass  23: suminf.    1.92877 (7) obj. -649.773 iterations 0
Cbc0038I Pass  24: suminf.    1.34812 (5) obj. -649.773 iterations 12
Cbc0038I Pass  25: suminf.    1.34812 (5) obj. -649.773 iterations 0
Cbc0038I Pass  26: suminf.    1.93994 (6) obj. -649.773 iterations 4
Cbc0038I Pass  27: suminf.    1.93994 (6) obj. -649.773 iterations 0
Cbc0038I Pass  28: suminf.    2.03847 (6) obj. -649.773 iterations 5
Cbc0038I Pass  29: suminf.    1.35527 (5) obj. -649.773 iterations 3
Cbc0038I Pass  30: suminf.    1.34812 (5) obj. -649.773 iterations 5
Cbc0038I Pass  31: suminf.    1.93994 (6) obj. -649.773 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -456.675 - took 0.05 seconds
Cbc0012I Integer solution of -456.6747 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0031I 22 added rows had average density of 25.818182
Cbc0013I At root node, 22 cuts changed objective from -2387.6579 to -1493.9052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4214 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1264 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0004I Integer solution of -489.7047 found after 4903 iterations and 12 nodes (0.53 seconds)
Cbc0016I Integer solution of -500.9147 found by strong branching after 5052 iterations and 15 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -500.9147000000003, took 5214 iterations and 18 nodes (0.54 seconds)
Cbc0032I Strong branching done 340 times (6731 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 8, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.54

