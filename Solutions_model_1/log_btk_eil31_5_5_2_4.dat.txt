Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 27 (-6) columns and 147 (-36) elements
Clp1000I sum of infeasibilities 2.22569e-06 - average 4.45138e-08, 3 fixed columns
Coin0506I Presolve 44 (-6) rows, 24 (-3) columns and 129 (-18) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Coin0511I After Postsolve, objective 121.87078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Coin0511I After Postsolve, objective 121.87078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.8707782 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 27 columns (26 integer (26 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.195%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.27533
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -73.8929 iterations 18
Cbc0038I Solution found of -73.8929
Cbc0038I Relaxing continuous gives -73.8929
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -73.8929 to -81.75 (0.02 seconds)
Cbc0038I Round again with cutoff of -84.4681
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.22295 (2) obj. -84.4681 iterations 1
Cbc0038I Pass   3: suminf.    0.12207 (2) obj. -84.4681 iterations 3
Cbc0038I Pass   4: suminf.    0.12207 (2) obj. -84.4681 iterations 0
Cbc0038I Pass   5: suminf.    0.75255 (3) obj. -84.4681 iterations 9
Cbc0038I Pass   6: suminf.    0.70033 (2) obj. -84.4681 iterations 1
Cbc0038I Pass   7: suminf.    0.74489 (2) obj. -84.4681 iterations 2
Cbc0038I Pass   8: suminf.    0.94534 (4) obj. -84.4681 iterations 6
Cbc0038I Pass   9: suminf.    0.63321 (3) obj. -84.4681 iterations 7
Cbc0038I Pass  10: suminf.    0.43272 (4) obj. -84.4681 iterations 5
Cbc0038I Pass  11: suminf.    0.37142 (4) obj. -84.4681 iterations 1
Cbc0038I Pass  12: suminf.    0.55976 (3) obj. -84.4681 iterations 4
Cbc0038I Pass  13: suminf.    0.55976 (3) obj. -84.4681 iterations 0
Cbc0038I Pass  14: suminf.    0.60765 (3) obj. -84.4681 iterations 2
Cbc0038I Pass  15: suminf.    0.58878 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  16: suminf.    1.45895 (6) obj. -84.4681 iterations 9
Cbc0038I Pass  17: suminf.    0.41984 (2) obj. -84.4681 iterations 4
Cbc0038I Pass  18: suminf.    0.40000 (1) obj. -84.4681 iterations 2
Cbc0038I Pass  19: suminf.    0.49551 (1) obj. -84.4681 iterations 1
Cbc0038I Pass  20: suminf.    1.04171 (3) obj. -84.4681 iterations 13
Cbc0038I Pass  21: suminf.    1.04171 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  22: suminf.    0.70033 (2) obj. -84.4681 iterations 7
Cbc0038I Pass  23: suminf.    0.74489 (2) obj. -84.4681 iterations 2
Cbc0038I Pass  24: suminf.    1.03465 (5) obj. -84.4681 iterations 6
Cbc0038I Pass  25: suminf.    0.55976 (3) obj. -84.4681 iterations 3
Cbc0038I Pass  26: suminf.    0.60765 (3) obj. -84.4681 iterations 2
Cbc0038I Pass  27: suminf.    0.58878 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  28: suminf.    0.55976 (3) obj. -84.4681 iterations 3
Cbc0038I Pass  29: suminf.    1.46514 (4) obj. -84.4681 iterations 3
Cbc0038I Pass  30: suminf.    0.71887 (3) obj. -84.4681 iterations 4
Cbc0038I Pass  31: suminf.    0.73467 (3) obj. -84.4681 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -81.75 to -85.8643 (0.04 seconds)
Cbc0038I Round again with cutoff of -90.4775
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.42579 (4) obj. -90.4775 iterations 1
Cbc0038I Pass  32: suminf.    0.65159 (4) obj. -90.4775 iterations 4
Cbc0038I Pass  33: suminf.    0.38750 (4) obj. -90.4775 iterations 3
Cbc0038I Pass  34: suminf.    0.94444 (3) obj. -98.2838 iterations 5
Cbc0038I Pass  35: suminf.    1.33157 (6) obj. -90.4775 iterations 7
Cbc0038I Pass  36: suminf.    0.76423 (5) obj. -90.4775 iterations 5
Cbc0038I Pass  37: suminf.    0.94682 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  38: suminf.    0.56833 (4) obj. -90.4775 iterations 3
Cbc0038I Pass  39: suminf.    1.25000 (3) obj. -92.3875 iterations 5
Cbc0038I Pass  40: suminf.    0.67322 (4) obj. -90.4775 iterations 5
Cbc0038I Pass  41: suminf.    1.94449 (7) obj. -90.4775 iterations 12
Cbc0038I Pass  42: suminf.    1.58667 (7) obj. -90.4775 iterations 6
Cbc0038I Pass  43: suminf.    1.35722 (10) obj. -90.4775 iterations 2
Cbc0038I Pass  44: suminf.    1.82928 (7) obj. -90.4775 iterations 13
Cbc0038I Pass  45: suminf.    1.56900 (6) obj. -90.4775 iterations 1
Cbc0038I Pass  46: suminf.    1.51070 (7) obj. -90.4775 iterations 2
Cbc0038I Pass  47: suminf.    1.77387 (6) obj. -90.4775 iterations 8
Cbc0038I Pass  48: suminf.    0.98561 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  49: suminf.    0.74065 (4) obj. -90.4775 iterations 4
Cbc0038I Pass  50: suminf.    0.73245 (5) obj. -90.4775 iterations 1
Cbc0038I Pass  51: suminf.    1.01162 (4) obj. -90.4775 iterations 8
Cbc0038I Pass  52: suminf.    0.46647 (2) obj. -90.4775 iterations 5
Cbc0038I Pass  53: suminf.    0.67663 (3) obj. -90.4775 iterations 4
Cbc0038I Pass  54: suminf.    0.54528 (2) obj. -90.4775 iterations 3
Cbc0038I Pass  55: suminf.    2.11770 (7) obj. -90.4775 iterations 11
Cbc0038I Pass  56: suminf.    1.03569 (4) obj. -90.4775 iterations 5
Cbc0038I Pass  57: suminf.    0.28503 (3) obj. -90.4775 iterations 15
Cbc0038I Pass  58: suminf.    0.28503 (3) obj. -90.4775 iterations 0
Cbc0038I Pass  59: suminf.    0.38750 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  60: suminf.    0.38750 (4) obj. -90.4775 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -85.8643 - took 0.04 seconds
Cbc0012I Integer solution of -85.86433 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 48 rows 27 columns, reduced to 28 rows 16 columns
Cbc0031I 11 added rows had average density of 18.545455
Cbc0013I At root node, 11 cuts changed objective from -108.9299 to -99.096088 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1013 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 804 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -85.86433, took 2374 iterations and 12 nodes (0.25 seconds)
Cbc0032I Strong branching done 140 times (1213 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.25

