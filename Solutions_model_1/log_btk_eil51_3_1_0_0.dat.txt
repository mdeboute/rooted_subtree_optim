Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 9.29793e-06 - average 9.99777e-08, 6 fixed columns
Coin0506I Presolve 80 (-13) rows, 44 (-7) columns and 240 (-40) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Coin0511I After Postsolve, objective 83.106958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Coin0511I After Postsolve, objective 83.106958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.10695845 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.44608
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.9964 iterations 28
Cbc0038I Solution found of 5.9964
Cbc0038I Relaxing continuous gives 5.9964
Cbc0038I Rounding solution of -3.00121 is better than previous of 5.9964

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -3.00121 to -43.9561 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.8713
Cbc0038I Pass   2: suminf.    1.57799 (6) obj. -47.8713 iterations 12
Cbc0038I Pass   3: suminf.    1.14722 (4) obj. -47.8713 iterations 2
Cbc0038I Pass   4: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass   5: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass   6: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass   7: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass   8: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass   9: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  10: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  11: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  12: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  13: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  14: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  15: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  16: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  17: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  18: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  19: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  20: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  21: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  22: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  23: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  24: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  25: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  26: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  27: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  28: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  29: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  30: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  31: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Rounding solution of -47.3581 is better than previous of -43.9561

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -47.3581 to -48.6318 (0.09 seconds)
Cbc0038I Round again with cutoff of -55.5269
Cbc0038I Pass  31: suminf.    2.03922 (9) obj. -55.5269 iterations 1
Cbc0038I Pass  32: suminf.    1.08947 (6) obj. -55.5269 iterations 3
Cbc0038I Pass  33: suminf.    1.08947 (6) obj. -55.5269 iterations 0
Cbc0038I Pass  34: suminf.    1.20856 (4) obj. -55.5269 iterations 8
Cbc0038I Pass  35: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  36: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  37: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  38: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  39: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  40: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  41: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  42: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  43: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  44: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  45: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  46: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  47: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  48: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  49: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  50: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  51: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  52: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  53: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  54: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  55: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  56: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  57: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  58: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  59: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  60: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -48.6318 - took 0.12 seconds
Cbc0012I Integer solution of -48.631827 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 58 rows 33 columns
Cbc0031I 17 added rows had average density of 32.529412
Cbc0013I At root node, 17 cuts changed objective from -83.106958 to -67.556932 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5971 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1158 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 140 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0010I After 16 nodes, 3 on tree, -48.631827 best solution, best possible -67.356181 (0.67 seconds)
Cbc0012I Integer solution of -49.385807 found by DiveCoefficient after 5259 iterations and 20 nodes (0.68 seconds)
Cbc0001I Search completed - best objective -49.38580710000001, took 5433 iterations and 32 nodes (0.69 seconds)
Cbc0032I Strong branching done 320 times (4618 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 82 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.70

