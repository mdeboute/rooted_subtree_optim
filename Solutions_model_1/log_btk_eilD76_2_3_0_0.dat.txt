Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 75 (-3) columns and 423 (-30) elements
Clp1000I sum of infeasibilities 2.9795e-05 - average 2.12821e-07, 9 fixed columns
Coin0506I Presolve 124 (-16) rows, 66 (-9) columns and 374 (-49) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.33416025 - largest nonzero change 0 ( 0%) - largest zero change 2.5825523e-05
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Coin0511I After Postsolve, objective 59.453568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Coin0511I After Postsolve, objective 59.453568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.45356839 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 75 columns (74 integer (74 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.57794
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.67825 iterations 53
Cbc0038I Solution found of -8.67825
Cbc0038I Relaxing continuous gives -8.67825
Cbc0038I Rounding solution of -29.0251 is better than previous of -8.67825

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -29.0251 to -36.7687 (0.06 seconds)
Cbc0038I Round again with cutoff of -39.0373
Cbc0038I Pass   2: suminf.    3.06180 (11) obj. -39.0373 iterations 29
Cbc0038I Pass   3: suminf.    3.06180 (11) obj. -39.0373 iterations 0
Cbc0038I Pass   4: suminf.    2.51164 (7) obj. -39.0373 iterations 23
Cbc0038I Pass   5: suminf.    2.23638 (7) obj. -39.0373 iterations 5
Cbc0038I Pass   6: suminf.    3.00308 (7) obj. -39.0373 iterations 5
Cbc0038I Pass   7: suminf.    1.85988 (5) obj. -39.0373 iterations 9
Cbc0038I Pass   8: suminf.    1.85988 (5) obj. -39.0373 iterations 0
Cbc0038I Pass   9: suminf.    1.51290 (4) obj. -39.0373 iterations 5
Cbc0038I Pass  10: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  11: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  12: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  13: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  14: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  15: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  16: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  17: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  18: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  19: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  20: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  21: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  22: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  23: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  24: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  25: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  26: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  27: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  28: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  29: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  30: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  31: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -36.7687 to -38.8483 (0.09 seconds)
Cbc0038I Round again with cutoff of -43.1205
Cbc0038I Pass  31: suminf.    3.73167 (11) obj. -43.1205 iterations 0
Cbc0038I Pass  32: suminf.    3.73167 (11) obj. -43.1205 iterations 0
Cbc0038I Pass  33: suminf.    1.58518 (6) obj. -43.1205 iterations 17
Cbc0038I Pass  34: suminf.    1.58518 (6) obj. -43.1205 iterations 2
Cbc0038I Pass  35: suminf.    2.75418 (10) obj. -43.1205 iterations 15
Cbc0038I Pass  36: suminf.    2.75418 (10) obj. -43.1205 iterations 0
Cbc0038I Pass  37: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  38: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  39: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  40: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  41: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  42: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  43: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  44: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  45: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  46: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  47: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  48: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  49: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  50: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  51: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  52: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  53: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  54: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  55: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  56: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  57: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  58: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  59: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  60: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -38.8483 - took 0.11 seconds
Cbc0012I Integer solution of -38.848269 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0031I 27 added rows had average density of 50.740741
Cbc0013I At root node, 27 cuts changed objective from -59.453568 to -51.990956 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14202 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1949 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 271 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.848269 best solution, best possible -51.990956 (0.99 seconds)
Cbc0001I Search completed - best objective -38.84826899999999, took 8798 iterations and 42 nodes (1.25 seconds)
Cbc0032I Strong branching done 576 times (14006 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 20, 59 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.26

