Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 22 (-3) columns and 108 (-27) elements
Clp1000I sum of infeasibilities 1.21512e-06 - average 3.37535e-08, 16 fixed columns
Coin0506I Presolve 4 (-32) rows, 5 (-17) columns and 10 (-98) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 3791.3637
Clp0000I Optimal - objective value 3791.3637
Coin0511I After Postsolve, objective 3791.3637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3791.3637
Clp0000I Optimal - objective value 3791.3637
Clp0000I Optimal - objective value 3791.3637
Coin0511I After Postsolve, objective 3791.3637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3791.363721 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.747%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.714316
Cbc0038I Pass   1: suminf.    0.42462 (2) obj. -3733.79 iterations 2
Cbc0038I Solution found of -2460.45
Cbc0038I Relaxing continuous gives -2460.45
Cbc0038I Rounding solution of -2683.57 is better than previous of -2460.45

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2792.02
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.42462 (2) obj. -3733.79 iterations 0
Cbc0038I Pass   3: suminf.    0.23223 (1) obj. -2792.02 iterations 3
Cbc0038I Pass   4: suminf.    0.11220 (1) obj. -3728 iterations 1
Cbc0038I Pass   5: suminf.    0.25854 (1) obj. -3565.22 iterations 3
Cbc0038I Pass   6: suminf.    0.25854 (1) obj. -3565.22 iterations 2
Cbc0038I Pass   7: suminf.    0.19990 (1) obj. -2792.02 iterations 1
Cbc0038I Pass   8: suminf.    0.17075 (1) obj. -2792.02 iterations 4
Cbc0038I Pass   9: suminf.    0.17075 (1) obj. -2792.02 iterations 2
Cbc0038I Pass  10: suminf.    0.36829 (1) obj. -3450.13 iterations 1
Cbc0038I Pass  11: suminf.    0.87289 (2) obj. -3433.2 iterations 2
Cbc0038I Pass  12: suminf.    0.16517 (1) obj. -2792.02 iterations 3
Cbc0038I Pass  13: suminf.    0.38878 (1) obj. -3428.86 iterations 1
Cbc0038I Pass  14: suminf.    0.23024 (1) obj. -3592.49 iterations 3
Cbc0038I Pass  15: suminf.    0.20909 (1) obj. -2792.02 iterations 1
Cbc0038I Pass  16: suminf.    0.23024 (1) obj. -3592.49 iterations 1
Cbc0038I Pass  17: suminf.    0.85421 (2) obj. -3123.91 iterations 11
Cbc0038I Pass  18: suminf.    0.24198 (1) obj. -2792.02 iterations 3
Cbc0038I Pass  19: suminf.    0.47220 (1) obj. -3120.7 iterations 1
Cbc0038I Pass  20: suminf.    0.34488 (1) obj. -3379.07 iterations 2
Cbc0038I Pass  21: suminf.    0.34488 (1) obj. -3379.07 iterations 0
Cbc0038I Pass  22: suminf.    0.24394 (1) obj. -2792.02 iterations 1
Cbc0038I Pass  23: suminf.    0.78348 (3) obj. -2792.02 iterations 2
Cbc0038I Pass  24: suminf.    0.24351 (1) obj. -2792.02 iterations 3
Cbc0038I Pass  25: suminf.    0.49854 (1) obj. -3160.3 iterations 1
Cbc0038I Pass  26: suminf.    0.47220 (1) obj. -3120.7 iterations 2
Cbc0038I Pass  27: suminf.    0.24198 (1) obj. -2792.02 iterations 2
Cbc0038I Pass  28: suminf.    0.47220 (1) obj. -3120.7 iterations 1
Cbc0038I Pass  29: suminf.    0.70750 (2) obj. -3126.08 iterations 4
Cbc0038I Pass  30: suminf.    0.20323 (1) obj. -2792.02 iterations 3
Cbc0038I Pass  31: suminf.    0.43561 (1) obj. -3123.79 iterations 1
Cbc0038I Rounding solution of -2684.26 is better than previous of -2683.57

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2987.23
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.42462 (2) obj. -3733.79 iterations 0
Cbc0038I Pass  32: suminf.    0.36896 (1) obj. -2987.23 iterations 3
Cbc0038I Pass  33: suminf.    0.11220 (1) obj. -3728 iterations 1
Cbc0038I Pass  34: suminf.    0.34390 (1) obj. -3462.08 iterations 6
Cbc0038I Pass  35: suminf.    0.34390 (1) obj. -3462.08 iterations 2
Cbc0038I Pass  36: suminf.    0.32351 (1) obj. -2987.23 iterations 1
Cbc0038I Pass  37: suminf.    0.30358 (1) obj. -2987.23 iterations 8
Cbc0038I Pass  38: suminf.    0.30358 (1) obj. -2987.23 iterations 2
Cbc0038I Pass  39: suminf.    0.40000 (1) obj. -3124.88 iterations 1
Cbc0038I Pass  40: suminf.    0.79080 (2) obj. -3149.14 iterations 8
Cbc0038I Pass  41: suminf.    0.30829 (1) obj. -2987.23 iterations 5
Cbc0038I Pass  42: suminf.    0.41951 (1) obj. -3146.02 iterations 1
Cbc0038I Pass  43: suminf.    0.47220 (1) obj. -3181.36 iterations 7
Cbc0038I Pass  44: suminf.    0.33623 (1) obj. -2987.23 iterations 2
Cbc0038I Pass  45: suminf.    0.47220 (1) obj. -3181.36 iterations 1
Cbc0038I Pass  46: suminf.    0.48853 (2) obj. -2987.23 iterations 5
Cbc0038I Pass  47: suminf.    0.48140 (3) obj. -2987.23 iterations 1
Cbc0038I Pass  48: suminf.    0.36927 (1) obj. -3400.57 iterations 2
Cbc0038I Pass  49: suminf.    0.34122 (1) obj. -2987.23 iterations 1
Cbc0038I Pass  50: suminf.    0.42528 (3) obj. -2987.23 iterations 2
Cbc0038I Pass  51: suminf.    0.28068 (1) obj. -2987.23 iterations 2
Cbc0038I Pass  52: suminf.    0.36244 (1) obj. -3103.96 iterations 1
Cbc0038I Pass  53: suminf.    0.42585 (1) obj. -3196.82 iterations 3
Cbc0038I Pass  54: suminf.    0.27906 (1) obj. -2987.23 iterations 1
Cbc0038I Pass  55: suminf.    0.42585 (1) obj. -3196.82 iterations 1
Cbc0038I Pass  56: suminf.    0.23116 (1) obj. -2987.23 iterations 6
Cbc0038I Pass  57: suminf.    0.23116 (1) obj. -2987.23 iterations 1
Cbc0038I Pass  58: suminf.    0.40024 (1) obj. -3228.63 iterations 1
Cbc0038I Pass  59: suminf.    0.58814 (3) obj. -2987.23 iterations 6
Cbc0038I Pass  60: suminf.    0.58814 (3) obj. -2987.23 iterations 0
Cbc0038I Rounding solution of -2705.54 is better than previous of -2684.26

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 17 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2705.54 to -2791.77 (0.03 seconds)
Cbc0038I Round again with cutoff of -3221.48
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.42462 (2) obj. -3733.79 iterations 0
Cbc0038I Pass  61: suminf.    0.46697 (1) obj. -3221.48 iterations 3
Cbc0038I Pass  62: suminf.    0.11220 (1) obj. -3728 iterations 1
Cbc0038I Pass  63: suminf.    0.33171 (1) obj. -3503.86 iterations 3
Cbc0038I Pass  64: suminf.    0.33171 (1) obj. -3503.86 iterations 1
Cbc0038I Pass  65: suminf.    0.47051 (1) obj. -3221.48 iterations 1
Cbc0038I Pass  66: suminf.    0.49019 (1) obj. -3221.48 iterations 5
Cbc0038I Pass  67: suminf.    0.49019 (1) obj. -3221.48 iterations 1
Cbc0038I Pass  68: suminf.    0.31707 (1) obj. -3496.67 iterations 1
Cbc0038I Pass  69: suminf.    0.28049 (1) obj. -3502.3 iterations 3
Cbc0038I Pass  70: suminf.    0.47717 (1) obj. -3221.48 iterations 1
Cbc0038I Pass  71: suminf.    0.28049 (1) obj. -3502.3 iterations 1
Cbc0038I Pass  72: suminf.    0.65512 (4) obj. -3221.48 iterations 6
Cbc0038I Pass  73: suminf.    0.57268 (2) obj. -3221.48 iterations 2
Cbc0038I Pass  74: suminf.    0.46195 (1) obj. -3221.48 iterations 1
Cbc0038I Pass  75: suminf.    0.49117 (1) obj. -3221.48 iterations 1
Cbc0038I Pass  76: suminf.    0.88068 (4) obj. -3221.48 iterations 7
Cbc0038I Pass  77: suminf.    0.26439 (1) obj. -3521.15 iterations 6
Cbc0038I Pass  78: suminf.    0.47428 (1) obj. -3221.48 iterations 1
Cbc0038I Pass  79: suminf.    1.21022 (3) obj. -3221.48 iterations 5
Cbc0038I Pass  80: suminf.    0.70249 (3) obj. -3221.48 iterations 2
Cbc0038I Pass  81: suminf.    0.46269 (1) obj. -3221.48 iterations 6
Cbc0038I Pass  82: suminf.    0.30829 (1) obj. -3441.93 iterations 1
Cbc0038I Pass  83: suminf.    0.72596 (2) obj. -3467.93 iterations 5
Cbc0038I Pass  84: suminf.    0.72596 (2) obj. -3467.93 iterations 1
Cbc0038I Pass  85: suminf.    0.45711 (1) obj. -3221.48 iterations 3
Cbc0038I Pass  86: suminf.    0.28780 (1) obj. -3463.2 iterations 1
Cbc0038I Pass  87: suminf.    0.67864 (2) obj. -3221.48 iterations 1
Cbc0038I Pass  88: suminf.    0.67864 (2) obj. -3221.48 iterations 0
Cbc0038I Pass  89: suminf.    1.03067 (3) obj. -3221.48 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2791.77 - took 0.03 seconds
Cbc0012I Integer solution of -2791.7725 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 3 rows 4 columns
Cbc0031I 2 added rows had average density of 5.5
Cbc0013I At root node, 11 cuts changed objective from -2827.6953 to -2791.7725 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2791.77248, took 24 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

