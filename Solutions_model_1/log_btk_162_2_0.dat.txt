Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-18) rows, 157 (-7) columns and 770 (-39) elements
Clp1000I sum of infeasibilities 0.147216 - average 0.000477974, 42 fixed columns
Coin0506I Presolve 218 (-90) rows, 115 (-42) columns and 548 (-222) elements
Clp0029I End of values pass after 115 iterations
Clp0014I Perturbing problem by 0.001% of 0.18227972 - largest nonzero change 0 ( 0%) - largest zero change 2.2294746e-05
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Coin0511I After Postsolve, objective 16208.668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.16784827 - largest nonzero change 1.0197441e-05 ( 0.0010197441%) - largest zero change 2.9590124e-05
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Clp0000I Optimal - objective value 16208.668
Coin0511I After Postsolve, objective 16208.668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16208.6682 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 308 rows, 157 columns (156 integer (156 of which binary)) and 770 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 27.9557
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 849.418 iterations 105
Cbc0038I Solution found of 849.418
Cbc0038I Relaxing continuous gives 849.418
Cbc0038I Rounding solution of -1664 is better than previous of 849.418

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - 0 fixed gives 214, 113 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3118.47
Cbc0038I Pass   2: suminf.    1.61619 (7) obj. -3118.47 iterations 20
Cbc0038I Pass   3: suminf.    1.61619 (7) obj. -3118.47 iterations 0
Cbc0038I Pass   4: suminf.    2.25397 (6) obj. -3118.47 iterations 23
Cbc0038I Pass   5: suminf.    1.81076 (6) obj. -3118.47 iterations 6
Cbc0038I Pass   6: suminf.    3.50564 (14) obj. -3118.47 iterations 46
Cbc0038I Pass   7: suminf.    0.48893 (5) obj. -3118.47 iterations 30
Cbc0038I Pass   8: suminf.    1.03540 (8) obj. -3118.47 iterations 16
Cbc0038I Pass   9: suminf.    1.36123 (11) obj. -3118.47 iterations 26
Cbc0038I Pass  10: suminf.    0.64759 (8) obj. -3118.47 iterations 17
Cbc0038I Pass  11: suminf.    0.94256 (5) obj. -3118.47 iterations 14
Cbc0038I Pass  12: suminf.    1.36123 (11) obj. -3118.47 iterations 25
Cbc0038I Pass  13: suminf.    3.61287 (19) obj. -3118.47 iterations 28
Cbc0038I Pass  14: suminf.    1.45179 (9) obj. -3118.47 iterations 13
Cbc0038I Pass  15: suminf.    0.48084 (6) obj. -3118.47 iterations 10
Cbc0038I Pass  16: suminf.    0.47440 (5) obj. -3118.47 iterations 2
Cbc0038I Pass  17: suminf.    0.86294 (4) obj. -3118.47 iterations 12
Cbc0038I Pass  18: suminf.    1.34447 (10) obj. -3118.47 iterations 15
Cbc0038I Pass  19: suminf.    0.67275 (8) obj. -3118.47 iterations 16
Cbc0038I Pass  20: suminf.    1.10790 (5) obj. -3118.47 iterations 15
Cbc0038I Pass  21: suminf.    1.72555 (7) obj. -3118.47 iterations 15
Cbc0038I Pass  22: suminf.    2.22176 (6) obj. -3118.47 iterations 20
Cbc0038I Pass  23: suminf.    0.68983 (5) obj. -3118.47 iterations 26
Cbc0038I Pass  24: suminf.    0.59766 (2) obj. -3118.47 iterations 8
Cbc0038I Pass  25: suminf.    0.45031 (2) obj. -3118.47 iterations 1
Cbc0038I Pass  26: suminf.    0.24291 (3) obj. -3118.47 iterations 22
Cbc0038I Pass  27: suminf.    0.58577 (6) obj. -3118.47 iterations 23
Cbc0038I Pass  28: suminf.    1.70204 (6) obj. -3118.47 iterations 24
Cbc0038I Pass  29: suminf.    1.51977 (7) obj. -3118.47 iterations 14
Cbc0038I Pass  30: suminf.    1.83490 (20) obj. -3118.47 iterations 29
Cbc0038I Pass  31: suminf.    1.69142 (21) obj. -3118.47 iterations 4
Cbc0038I Rounding solution of -3535.45 is better than previous of -1664

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 234 rows 122 columns - 4 fixed gives 199, 112 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 199 rows 112 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -6070.1
Cbc0038I Pass  31: suminf.    4.37800 (51) obj. -6070.1 iterations 9
Cbc0038I Pass  32: suminf.    4.37800 (51) obj. -6070.1 iterations 0
Cbc0038I Pass  33: suminf.    6.18581 (21) obj. -6070.1 iterations 53
Cbc0038I Pass  34: suminf.    4.91113 (20) obj. -6070.1 iterations 15
Cbc0038I Pass  35: suminf.    4.70595 (20) obj. -6070.1 iterations 2
Cbc0038I Pass  36: suminf.    6.59339 (20) obj. -6070.1 iterations 27
Cbc0038I Pass  37: suminf.    4.61805 (23) obj. -6070.1 iterations 34
Cbc0038I Pass  38: suminf.    4.33163 (22) obj. -6070.1 iterations 1
Cbc0038I Pass  39: suminf.    6.34638 (23) obj. -6070.1 iterations 23
Cbc0038I Pass  40: suminf.    3.95091 (20) obj. -6070.1 iterations 25
Cbc0038I Pass  41: suminf.    3.80942 (19) obj. -6070.1 iterations 3
Cbc0038I Pass  42: suminf.    6.53876 (20) obj. -6070.1 iterations 24
Cbc0038I Pass  43: suminf.    4.16434 (23) obj. -6070.1 iterations 20
Cbc0038I Pass  44: suminf.    6.22011 (22) obj. -6070.1 iterations 26
Cbc0038I Pass  45: suminf.    4.78100 (20) obj. -6070.1 iterations 18
Cbc0038I Pass  46: suminf.    6.01421 (20) obj. -6070.1 iterations 25
Cbc0038I Pass  47: suminf.    4.54338 (23) obj. -6070.1 iterations 25
Cbc0038I Pass  48: suminf.    4.16434 (23) obj. -6070.1 iterations 2
Cbc0038I Pass  49: suminf.    5.10087 (22) obj. -6070.1 iterations 19
Cbc0038I Pass  50: suminf.    3.71875 (26) obj. -6070.1 iterations 24
Cbc0038I Pass  51: suminf.    6.13603 (23) obj. -6070.1 iterations 36
Cbc0038I Pass  52: suminf.    4.70595 (20) obj. -6070.1 iterations 11
Cbc0038I Pass  53: suminf.    5.68216 (20) obj. -6070.1 iterations 17
Cbc0038I Pass  54: suminf.    4.82557 (21) obj. -6070.1 iterations 21
Cbc0038I Pass  55: suminf.    4.35400 (20) obj. -6070.1 iterations 2
Cbc0038I Pass  56: suminf.    6.34638 (23) obj. -6070.1 iterations 24
Cbc0038I Pass  57: suminf.    3.95091 (20) obj. -6070.1 iterations 23
Cbc0038I Pass  58: suminf.    3.80942 (19) obj. -6070.1 iterations 3
Cbc0038I Pass  59: suminf.    6.53876 (20) obj. -6070.1 iterations 23
Cbc0038I Pass  60: suminf.    4.16434 (23) obj. -6070.1 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 157 columns, reduced to 214 rows 113 columns - 2 fixed gives 209, 110 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 209 rows 110 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -3535.45 - took 0.05 seconds
Cbc0012I Integer solution of -3760.973 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 220 rows 117 columns - 7 fixed gives 192, 110 - still too large
Cbc0038I Full problem 308 rows 157 columns, reduced to 192 rows 110 columns - too large
Cbc0031I 25 added rows had average density of 70.6
Cbc0013I At root node, 25 cuts changed objective from -16208.668 to -11575.633 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23072 row cuts average 6.2 elements, 1 column cuts (1 active)  in 0.492 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1255 row cuts average 137.0 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 105 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 106.9 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3760.973 best solution, best possible -11575.633 (2.35 seconds)
Cbc0012I Integer solution of -4007.0245 found by DiveCoefficient after 7398 iterations and 9 nodes (2.94 seconds)
Cbc0012I Integer solution of -4260.1265 found by DiveCoefficient after 7476 iterations and 11 nodes (2.95 seconds)
Cbc0012I Integer solution of -4909.0535 found by rounding after 7524 iterations and 14 nodes (2.96 seconds)
Cbc0012I Integer solution of -5501.9595 found by rounding after 7525 iterations and 15 nodes (2.97 seconds)
Cbc0012I Integer solution of -5576.8345 found by rounding after 7716 iterations and 21 nodes (2.99 seconds)
Cbc0010I After 35 nodes, 12 on tree, -5576.8345 best solution, best possible -11575.633 (3.06 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 23 rows 20 columns
Cbc0012I Integer solution of -5953.7763 found by DiveCoefficient after 8560 iterations and 49 nodes (3.10 seconds)
Cbc0038I Full problem 308 rows 157 columns, reduced to 21 rows 22 columns
Cbc0016I Integer solution of -5970.5381 found by strong branching after 9611 iterations and 97 nodes (3.24 seconds)
Cbc0016I Integer solution of -6071.5721 found by strong branching after 9685 iterations and 104 nodes (3.25 seconds)
Cbc0012I Integer solution of -6347.3918 found by DiveCoefficient after 10512 iterations and 133 nodes (3.46 seconds)
Cbc0016I Integer solution of -6396.5379 found by strong branching after 10595 iterations and 144 nodes (3.48 seconds)
Cbc0016I Integer solution of -6397.5349 found by strong branching after 10625 iterations and 150 nodes (3.49 seconds)
Cbc0001I Search completed - best objective -6397.534854599995, took 10712 iterations and 158 nodes (3.50 seconds)
Cbc0032I Strong branching done 1268 times (25104 iterations), fathomed 32 nodes and fixed 35 variables
Cbc0035I Maximum depth 21, 463 variables fixed on reduced cost
Total time (CPU seconds):       3.37   (Wallclock seconds):       3.53

