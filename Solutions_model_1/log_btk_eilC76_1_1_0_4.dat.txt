Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 55 (-23) columns and 306 (-147) elements
Clp1000I sum of infeasibilities 1.75887e-05 - average 1.74146e-07, 20 fixed columns
Coin0506I Presolve 54 (-47) rows, 32 (-23) columns and 166 (-140) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Coin0511I After Postsolve, objective 190.87649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Coin0511I After Postsolve, objective 190.87649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 190.8764858 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 101 rows, 55 columns (54 integer (54 of which binary)) and 306 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.622%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.64681
Cbc0038I Pass   1: suminf.    0.58182 (2) obj. -145.372 iterations 15
Cbc0038I Pass   2: suminf.    0.58182 (2) obj. -145.372 iterations 0
Cbc0038I Solution found of -105.128
Cbc0038I Relaxing continuous gives -105.128
Cbc0038I Rounding solution of -112.676 is better than previous of -105.128

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 55 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -112.676 to -159.618 (0.01 seconds)
Cbc0038I Round again with cutoff of -162.744
Cbc0038I Pass   3: suminf.    1.10312 (4) obj. -162.744 iterations 5
Cbc0038I Pass   4: suminf.    0.34412 (2) obj. -162.744 iterations 8
Cbc0038I Pass   5: suminf.    1.05848 (8) obj. -162.744 iterations 7
Cbc0038I Pass   6: suminf.    1.10436 (5) obj. -162.744 iterations 9
Cbc0038I Pass   7: suminf.    0.36618 (2) obj. -162.744 iterations 8
Cbc0038I Pass   8: suminf.    0.49822 (1) obj. -162.744 iterations 3
Cbc0038I Pass   9: suminf.    0.94285 (7) obj. -162.744 iterations 10
Cbc0038I Pass  10: suminf.    0.48270 (2) obj. -162.744 iterations 13
Cbc0038I Pass  11: suminf.    1.46147 (7) obj. -162.744 iterations 12
Cbc0038I Pass  12: suminf.    0.62891 (6) obj. -162.744 iterations 7
Cbc0038I Pass  13: suminf.    0.10747 (2) obj. -162.744 iterations 2
Cbc0038I Pass  14: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  15: suminf.    1.89638 (9) obj. -162.744 iterations 14
Cbc0038I Pass  16: suminf.    1.50987 (7) obj. -162.744 iterations 4
Cbc0038I Pass  17: suminf.    1.84107 (4) obj. -162.744 iterations 8
Cbc0038I Pass  18: suminf.    0.10747 (2) obj. -162.744 iterations 6
Cbc0038I Pass  19: suminf.    0.10747 (2) obj. -162.744 iterations 0
Cbc0038I Pass  20: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  21: suminf.    4.08332 (15) obj. -162.744 iterations 16
Cbc0038I Pass  22: suminf.    2.49932 (11) obj. -162.744 iterations 9
Cbc0038I Pass  23: suminf.    1.29785 (8) obj. -162.744 iterations 10
Cbc0038I Pass  24: suminf.    0.50092 (4) obj. -162.744 iterations 3
Cbc0038I Pass  25: suminf.    0.25743 (3) obj. -162.744 iterations 7
Cbc0038I Pass  26: suminf.    0.19387 (3) obj. -162.744 iterations 1
Cbc0038I Pass  27: suminf.    0.99015 (6) obj. -162.744 iterations 10
Cbc0038I Pass  28: suminf.    1.98378 (5) obj. -162.744 iterations 8
Cbc0038I Pass  29: suminf.    0.10747 (2) obj. -162.744 iterations 6
Cbc0038I Pass  30: suminf.    0.10747 (2) obj. -162.744 iterations 0
Cbc0038I Pass  31: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  32: suminf.    6.07656 (15) obj. -162.744 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 55 columns, reduced to 55 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -159.618 - took 0.02 seconds
Cbc0012I Integer solution of -159.6176 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 101 rows 55 columns, reduced to 18 rows 14 columns
Cbc0031I 5 added rows had average density of 46
Cbc0013I At root node, 5 cuts changed objective from -190.87649 to -175.18148 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 269 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 372 row cuts average 46.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 41.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -159.6176, took 1326 iterations and 20 nodes (0.23 seconds)
Cbc0032I Strong branching done 148 times (850 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 116 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

