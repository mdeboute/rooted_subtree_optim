Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-30) rows, 21 (-12) columns and 104 (-79) elements
Clp1000I sum of infeasibilities 0 - average 0, 5 fixed columns
Coin0506I Presolve 26 (-9) rows, 16 (-5) columns and 76 (-28) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Coin0511I After Postsolve, objective 76.627075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Coin0511I After Postsolve, objective 76.627075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.6270748 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.21658
Cbc0038I Solution found of -13.3031
Cbc0038I Relaxing continuous gives -15.0966
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -15.0966 to -42.1726 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.0785
Cbc0038I Pass   1: suminf.    1.16162 (5) obj. -45.0785 iterations 11
Cbc0038I Pass   2: suminf.    0.26667 (1) obj. -52.4872 iterations 9
Cbc0038I Pass   3: suminf.    0.26667 (1) obj. -52.4872 iterations 0
Cbc0038I Pass   4: suminf.    0.41215 (2) obj. -45.0785 iterations 3
Cbc0038I Pass   5: suminf.    1.48929 (3) obj. -45.0785 iterations 4
Cbc0038I Pass   6: suminf.    0.34094 (1) obj. -45.0785 iterations 2
Cbc0038I Pass   7: suminf.    0.13333 (1) obj. -50.7962 iterations 3
Cbc0038I Pass   8: suminf.    0.13333 (1) obj. -50.7962 iterations 2
Cbc0038I Pass   9: suminf.    0.13333 (1) obj. -50.7962 iterations 2
Cbc0038I Pass  10: suminf.    0.45000 (1) obj. -47.419 iterations 5
Cbc0038I Pass  11: suminf.    0.37907 (1) obj. -45.0785 iterations 3
Cbc0038I Pass  12: suminf.    0.45000 (1) obj. -47.419 iterations 2
Cbc0038I Pass  13: suminf.    0.21667 (1) obj. -46.8984 iterations 3
Cbc0038I Pass  14: suminf.    0.16152 (1) obj. -45.0785 iterations 2
Cbc0038I Pass  15: suminf.    0.21667 (1) obj. -46.8984 iterations 2
Cbc0038I Pass  16: suminf.    1.35143 (9) obj. -45.0785 iterations 9
Cbc0038I Pass  17: suminf.    1.17403 (6) obj. -45.0785 iterations 4
Cbc0038I Pass  18: suminf.    0.83934 (3) obj. -45.0785 iterations 11
Cbc0038I Pass  19: suminf.    0.34435 (2) obj. -45.0785 iterations 3
Cbc0038I Pass  20: suminf.    0.51914 (3) obj. -45.0785 iterations 1
Cbc0038I Pass  21: suminf.    0.34435 (2) obj. -45.0785 iterations 1
Cbc0038I Pass  22: suminf.    1.01823 (4) obj. -45.0785 iterations 4
Cbc0038I Pass  23: suminf.    0.70955 (4) obj. -45.0785 iterations 2
Cbc0038I Pass  24: suminf.    0.63891 (4) obj. -45.0785 iterations 5
Cbc0038I Pass  25: suminf.    1.24346 (3) obj. -45.0785 iterations 11
Cbc0038I Pass  26: suminf.    0.49316 (1) obj. -45.0785 iterations 2
Cbc0038I Pass  27: suminf.    0.21046 (2) obj. -45.0785 iterations 3
Cbc0038I Pass  28: suminf.    0.40714 (2) obj. -45.0785 iterations 4
Cbc0038I Pass  29: suminf.    0.40714 (2) obj. -45.0785 iterations 0
Cbc0038I Pass  30: suminf.    0.40714 (2) obj. -45.0785 iterations 0
Cbc0038I Rounding solution of -44.706 is better than previous of -42.1726

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -44.706 to -50.0583 (0.03 seconds)
Cbc0038I Round again with cutoff of -54.2929
Cbc0038I Pass  30: suminf.    1.58189 (8) obj. -54.2929 iterations 1
Cbc0038I Pass  31: suminf.    1.13696 (3) obj. -54.2929 iterations 16
Cbc0038I Pass  32: suminf.    0.75259 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  33: suminf.    0.69778 (2) obj. -56.4749 iterations 2
Cbc0038I Pass  34: suminf.    0.64797 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  35: suminf.    0.75259 (2) obj. -54.2929 iterations 3
Cbc0038I Pass  36: suminf.    1.10912 (5) obj. -54.2929 iterations 8
Cbc0038I Pass  37: suminf.    0.83444 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  38: suminf.    0.97014 (3) obj. -54.2929 iterations 4
Cbc0038I Pass  39: suminf.    0.55394 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  40: suminf.    0.40155 (2) obj. -54.2929 iterations 2
Cbc0038I Pass  41: suminf.    0.40155 (2) obj. -54.2929 iterations 0
Cbc0038I Pass  42: suminf.    0.55394 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  43: suminf.    2.14846 (7) obj. -54.2929 iterations 9
Cbc0038I Pass  44: suminf.    1.33252 (6) obj. -54.2929 iterations 1
Cbc0038I Pass  45: suminf.    0.40155 (2) obj. -54.2929 iterations 6
Cbc0038I Pass  46: suminf.    2.00143 (6) obj. -54.2929 iterations 7
Cbc0038I Pass  47: suminf.    1.11654 (5) obj. -54.2929 iterations 3
Cbc0038I Pass  48: suminf.    1.06163 (3) obj. -54.2929 iterations 9
Cbc0038I Pass  49: suminf.    0.82992 (3) obj. -54.2929 iterations 2
Cbc0038I Pass  50: suminf.    0.94944 (3) obj. -54.2929 iterations 2
Cbc0038I Pass  51: suminf.    0.83373 (3) obj. -54.2929 iterations 1
Cbc0038I Pass  52: suminf.    1.66561 (6) obj. -54.2929 iterations 5
Cbc0038I Pass  53: suminf.    1.36694 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  54: suminf.    1.28247 (3) obj. -54.2929 iterations 5
Cbc0038I Pass  55: suminf.    1.16289 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  56: suminf.    0.27705 (2) obj. -54.2929 iterations 7
Cbc0038I Pass  57: suminf.    0.27705 (2) obj. -54.2929 iterations 0
Cbc0038I Pass  58: suminf.    1.07506 (3) obj. -54.2929 iterations 3
Cbc0038I Pass  59: suminf.    0.83263 (3) obj. -54.2929 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -50.0583 - took 0.03 seconds
Cbc0012I Integer solution of -50.058333 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 21 rows 13 columns
Cbc0031I 9 added rows had average density of 12.222222
Cbc0013I At root node, 9 cuts changed objective from -71.230539 to -55.960418 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 454 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.821 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -50.058333 best solution, best possible -55.960418 (1.67 seconds)
Cbc0001I Search completed - best objective -50.058333, took 1525 iterations and 2 nodes (1.69 seconds)
Cbc0032I Strong branching done 48 times (381 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.69

