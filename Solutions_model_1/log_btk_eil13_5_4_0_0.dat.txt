Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 15 (-14) rows, 12 (-3) columns and 47 (-28) elements
Clp1000I sum of infeasibilities 1.41944e-07 - average 9.46292e-09, 1 fixed columns
Coin0506I Presolve 14 (-1) rows, 11 (-1) columns and 43 (-4) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 66.733522
Clp0000I Optimal - objective value 66.733522
Coin0511I After Postsolve, objective 66.733522, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.733522
Clp0000I Optimal - objective value 66.733522
Clp0000I Optimal - objective value 66.733522
Coin0511I After Postsolve, objective 66.733522, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.73352166 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 14 rows, 12 columns (11 integer (11 of which binary)) and 46 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.63596
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -36.4481 iterations 5
Cbc0038I Solution found of -36.4481
Cbc0038I Relaxing continuous gives -36.4481
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 12 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -36.4481 to -38.415 (0.00 seconds)
Cbc0038I Round again with cutoff of -41.2469
Cbc0038I Pass   2: suminf.    0.15025 (1) obj. -41.2469 iterations 1
Cbc0038I Pass   3: suminf.    0.35294 (1) obj. -51.4673 iterations 2
Cbc0038I Pass   4: suminf.    0.12293 (2) obj. -41.2469 iterations 3
Cbc0038I Pass   5: suminf.    0.12293 (2) obj. -41.2469 iterations 0
Cbc0038I Pass   6: suminf.    0.13763 (2) obj. -41.2469 iterations 2
Cbc0038I Pass   7: suminf.    0.12293 (2) obj. -41.2469 iterations 2
Cbc0038I Pass   8: suminf.    0.70806 (2) obj. -41.2469 iterations 6
Cbc0038I Pass   9: suminf.    0.57381 (2) obj. -41.2469 iterations 2
Cbc0038I Pass  10: suminf.    0.47857 (2) obj. -41.2469 iterations 2
Cbc0038I Pass  11: suminf.    0.15789 (1) obj. -41.2469 iterations 1
Cbc0038I Pass  12: suminf.    0.17860 (1) obj. -41.2469 iterations 2
Cbc0038I Pass  13: suminf.    0.68683 (2) obj. -41.2469 iterations 4
Cbc0038I Pass  14: suminf.    0.05556 (1) obj. -44.5265 iterations 4
Cbc0038I Pass  15: suminf.    1.22181 (4) obj. -41.2469 iterations 5
Cbc0038I Pass  16: suminf.    0.75764 (3) obj. -41.2469 iterations 1
Cbc0038I Pass  17: suminf.    0.61350 (3) obj. -41.2469 iterations 5
Cbc0038I Pass  18: suminf.    0.17860 (1) obj. -41.2469 iterations 2
Cbc0038I Pass  19: suminf.    0.47857 (2) obj. -41.2469 iterations 3
Cbc0038I Pass  20: suminf.    0.15789 (1) obj. -41.2469 iterations 1
Cbc0038I Pass  21: suminf.    0.17860 (1) obj. -41.2469 iterations 2
Cbc0038I Pass  22: suminf.    0.57381 (2) obj. -41.2469 iterations 2
Cbc0038I Pass  23: suminf.    1.07442 (3) obj. -41.2469 iterations 5
Cbc0038I Pass  24: suminf.    1.07442 (3) obj. -41.2469 iterations 0
Cbc0038I Pass  25: suminf.    0.50272 (2) obj. -41.2469 iterations 4
Cbc0038I Pass  26: suminf.    0.43277 (2) obj. -41.2469 iterations 1
Cbc0038I Pass  27: suminf.    0.57719 (3) obj. -41.2469 iterations 4
Cbc0038I Pass  28: suminf.    0.57719 (3) obj. -41.2469 iterations 0
Cbc0038I Pass  29: suminf.    0.43277 (2) obj. -41.2469 iterations 6
Cbc0038I Pass  30: suminf.    0.41068 (2) obj. -41.2469 iterations 2
Cbc0038I Pass  31: suminf.    0.44482 (2) obj. -41.2469 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 12 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -38.415 - took 0.01 seconds
Cbc0012I Integer solution of -38.41495 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 14 rows 12 columns, reduced to 7 rows 6 columns
Cbc0031I 8 added rows had average density of 8.625
Cbc0013I At root node, 8 cuts changed objective from -66.733522 to -42.994555 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 260 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.41495, took 917 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 14 times (58 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

