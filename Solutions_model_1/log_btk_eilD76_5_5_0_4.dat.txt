Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 62 (-16) columns and 343 (-110) elements
Clp1000I sum of infeasibilities 7.0012e-05 - average 6.19575e-07, 25 fixed columns
Coin0506I Presolve 38 (-75) rows, 31 (-31) columns and 132 (-211) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 0.57387531 - largest nonzero change 1.2460872e-05 ( 0.00096990836%) - largest zero change 2.8096151e-05
Clp0000I Optimal - objective value 251.99658
Clp0000I Optimal - objective value 251.99658
Coin0511I After Postsolve, objective 251.99658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 251.99658
Clp0000I Optimal - objective value 251.99658
Clp0000I Optimal - objective value 251.99658
Coin0511I After Postsolve, objective 251.99658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 251.9965788 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 113 rows, 62 columns (61 integer (61 of which binary)) and 343 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.432%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.11866
Cbc0038I Pass   1: suminf.    0.18846 (3) obj. -203.073 iterations 17
Cbc0038I Pass   2: suminf.    0.18846 (3) obj. -203.073 iterations 0
Cbc0038I Solution found of -104.16
Cbc0038I Relaxing continuous gives -104.16
Cbc0038I Rounding solution of -182.931 is better than previous of -104.16

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -182.931 to -229.673 (0.01 seconds)
Cbc0038I Round again with cutoff of -231.906
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.40461 (5) obj. -231.906 iterations 4
Cbc0038I Pass   4: suminf.    0.27293 (4) obj. -231.906 iterations 5
Cbc0038I Pass   5: suminf.    1.64555 (5) obj. -231.906 iterations 14
Cbc0038I Pass   6: suminf.    1.20943 (4) obj. -231.906 iterations 2
Cbc0038I Pass   7: suminf.    1.03339 (4) obj. -231.906 iterations 11
Cbc0038I Pass   8: suminf.    1.00441 (5) obj. -231.906 iterations 7
Cbc0038I Pass   9: suminf.    0.24016 (3) obj. -231.906 iterations 12
Cbc0038I Pass  10: suminf.    1.59303 (6) obj. -231.906 iterations 17
Cbc0038I Pass  11: suminf.    1.39385 (5) obj. -231.906 iterations 5
Cbc0038I Pass  12: suminf.    2.18299 (8) obj. -231.906 iterations 6
Cbc0038I Pass  13: suminf.    2.10236 (6) obj. -231.906 iterations 3
Cbc0038I Pass  14: suminf.    0.48151 (3) obj. -231.906 iterations 13
Cbc0038I Pass  15: suminf.    0.36265 (2) obj. -231.906 iterations 1
Cbc0038I Pass  16: suminf.    0.66547 (2) obj. -231.906 iterations 9
Cbc0038I Pass  17: suminf.    0.27921 (2) obj. -231.906 iterations 2
Cbc0038I Pass  18: suminf.    0.18132 (1) obj. -231.906 iterations 1
Cbc0038I Pass  19: suminf.    0.74765 (5) obj. -231.906 iterations 13
Cbc0038I Pass  20: suminf.    0.01550 (2) obj. -231.906 iterations 11
Cbc0038I Pass  21: suminf.    1.61078 (6) obj. -231.906 iterations 9
Cbc0038I Pass  22: suminf.    0.94193 (3) obj. -231.906 iterations 8
Cbc0038I Pass  23: suminf.    0.82307 (2) obj. -231.906 iterations 1
Cbc0038I Pass  24: suminf.    0.68702 (3) obj. -231.906 iterations 7
Cbc0038I Pass  25: suminf.    0.94193 (3) obj. -231.906 iterations 7
Cbc0038I Pass  26: suminf.    2.20576 (8) obj. -231.906 iterations 15
Cbc0038I Pass  27: suminf.    1.56149 (6) obj. -231.906 iterations 10
Cbc0038I Pass  28: suminf.    1.96014 (6) obj. -231.906 iterations 12
Cbc0038I Pass  29: suminf.    1.20943 (4) obj. -231.906 iterations 3
Cbc0038I Pass  30: suminf.    1.03339 (4) obj. -231.906 iterations 11
Cbc0038I Pass  31: suminf.    1.00441 (5) obj. -231.906 iterations 7
Cbc0038I Pass  32: suminf.    0.24016 (3) obj. -231.906 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 27 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -229.673 to -231.537 (0.02 seconds)
Cbc0038I Round again with cutoff of -235.924
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.80390 (5) obj. -235.924 iterations 0
Cbc0038I Pass  33: suminf.    0.39604 (2) obj. -235.924 iterations 12
Cbc0038I Pass  34: suminf.    0.81826 (2) obj. -235.924 iterations 5
Cbc0038I Pass  35: suminf.    1.06688 (6) obj. -235.924 iterations 13
Cbc0038I Pass  36: suminf.    0.15674 (4) obj. -235.924 iterations 13
Cbc0038I Pass  37: suminf.    2.08614 (6) obj. -235.924 iterations 7
Cbc0038I Pass  38: suminf.    0.88264 (3) obj. -235.924 iterations 12
Cbc0038I Pass  39: suminf.    0.87810 (3) obj. -235.924 iterations 6
Cbc0038I Pass  40: suminf.    0.97471 (6) obj. -235.924 iterations 7
Cbc0038I Pass  41: suminf.    1.22564 (6) obj. -235.924 iterations 8
Cbc0038I Pass  42: suminf.    0.79061 (4) obj. -235.924 iterations 15
Cbc0038I Pass  43: suminf.    1.29705 (6) obj. -235.924 iterations 8
Cbc0038I Pass  44: suminf.    0.56917 (4) obj. -235.924 iterations 3
Cbc0038I Pass  45: suminf.    1.32804 (4) obj. -235.924 iterations 12
Cbc0038I Pass  46: suminf.    0.85826 (3) obj. -235.924 iterations 1
Cbc0038I Pass  47: suminf.    0.65043 (3) obj. -235.924 iterations 7
Cbc0038I Pass  48: suminf.    0.53157 (2) obj. -235.924 iterations 1
Cbc0038I Pass  49: suminf.    0.68332 (2) obj. -235.924 iterations 8
Cbc0038I Pass  50: suminf.    0.36368 (2) obj. -235.924 iterations 2
Cbc0038I Pass  51: suminf.    0.32827 (2) obj. -235.924 iterations 1
Cbc0038I Pass  52: suminf.    0.68332 (2) obj. -235.924 iterations 1
Cbc0038I Pass  53: suminf.    1.74605 (5) obj. -235.924 iterations 10
Cbc0038I Pass  54: suminf.    1.62908 (6) obj. -235.924 iterations 7
Cbc0038I Pass  55: suminf.    1.04299 (3) obj. -235.924 iterations 7
Cbc0038I Pass  56: suminf.    0.73920 (3) obj. -235.924 iterations 5
Cbc0038I Pass  57: suminf.    1.04299 (3) obj. -235.924 iterations 5
Cbc0038I Pass  58: suminf.    0.74966 (6) obj. -235.924 iterations 6
Cbc0038I Pass  59: suminf.    0.18442 (2) obj. -235.924 iterations 6
Cbc0038I Pass  60: suminf.    1.62908 (6) obj. -235.924 iterations 10
Cbc0038I Pass  61: suminf.    1.04299 (3) obj. -235.924 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 24 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -231.537 to -234.409 (0.03 seconds)
Cbc0038I Round again with cutoff of -240.746
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.28306 (5) obj. -240.746 iterations 0
Cbc0038I Pass  62: suminf.    0.71481 (4) obj. -240.746 iterations 10
Cbc0038I Pass  63: suminf.    0.32090 (3) obj. -240.746 iterations 13
Cbc0038I Pass  64: suminf.    1.10546 (4) obj. -240.746 iterations 9
Cbc0038I Pass  65: suminf.    1.27196 (4) obj. -240.746 iterations 6
Cbc0038I Pass  66: suminf.    1.10546 (4) obj. -240.746 iterations 6
Cbc0038I Pass  67: suminf.    1.47089 (6) obj. -240.746 iterations 11
Cbc0038I Pass  68: suminf.    1.54731 (6) obj. -240.746 iterations 16
Cbc0038I Pass  69: suminf.    1.22380 (6) obj. -240.746 iterations 9
Cbc0038I Pass  70: suminf.    0.71420 (4) obj. -240.746 iterations 8
Cbc0038I Pass  71: suminf.    0.94476 (6) obj. -240.746 iterations 17
Cbc0038I Pass  72: suminf.    0.70252 (4) obj. -240.746 iterations 2
Cbc0038I Pass  73: suminf.    0.88259 (6) obj. -240.746 iterations 10
Cbc0038I Pass  74: suminf.    2.80495 (7) obj. -240.746 iterations 9
Cbc0038I Pass  75: suminf.    1.12608 (4) obj. -240.746 iterations 6
Cbc0038I Pass  76: suminf.    1.09964 (3) obj. -240.746 iterations 5
Cbc0038I Pass  77: suminf.    1.10970 (6) obj. -240.746 iterations 7
Cbc0038I Pass  78: suminf.    1.09964 (3) obj. -240.746 iterations 6
Cbc0038I Pass  79: suminf.    0.70252 (4) obj. -240.746 iterations 6
Cbc0038I Pass  80: suminf.    0.88259 (6) obj. -240.746 iterations 10
Cbc0038I Pass  81: suminf.    0.71420 (4) obj. -240.746 iterations 3
Cbc0038I Pass  82: suminf.    0.94476 (6) obj. -240.746 iterations 14
Cbc0038I Pass  83: suminf.    1.11413 (6) obj. -240.746 iterations 10
Cbc0038I Pass  84: suminf.    0.78720 (4) obj. -240.746 iterations 4
Cbc0038I Pass  85: suminf.    0.32090 (3) obj. -240.746 iterations 6
Cbc0038I Pass  86: suminf.    1.10546 (4) obj. -240.746 iterations 8
Cbc0038I Pass  87: suminf.    0.71481 (4) obj. -240.746 iterations 5
Cbc0038I Pass  88: suminf.    1.51237 (6) obj. -240.746 iterations 9
Cbc0038I Pass  89: suminf.    1.51237 (6) obj. -240.746 iterations 2
Cbc0038I Pass  90: suminf.    1.47945 (4) obj. -240.746 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 18 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -234.409 - took 0.03 seconds
Cbc0012I Integer solution of -234.40877 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 113 rows 62 columns, reduced to 6 rows 9 columns
Cbc0031I 6 added rows had average density of 22.333333
Cbc0013I At root node, 6 cuts changed objective from -251.99658 to -241.61391 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 34 row cuts average 3.4 elements, 9 column cuts (9 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 29.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -234.40877, took 151 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 16 times (103 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

