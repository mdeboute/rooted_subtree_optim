Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 71 (-32) columns and 389 (-214) elements
Clp1000I sum of infeasibilities 0.000248758 - average 1.95873e-06, 62 fixed columns
Coin0506I Presolve 7 (-120) rows, 7 (-64) columns and 22 (-367) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Coin0511I After Postsolve, objective 26974.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9123714 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Coin0511I After Postsolve, objective 26974.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26974.55319 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 71 columns (70 integer (70 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.56876
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23322 iterations 24
Cbc0038I Solution found of -23322
Cbc0038I Relaxing continuous gives -23322
Cbc0038I Rounding solution of -23869.4 is better than previous of -23322

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24179.9
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.14587 (1) obj. -24179.9 iterations 1
Cbc0038I Pass   3: suminf.    0.36111 (1) obj. -25446 iterations 1
Cbc0038I Pass   4: suminf.    0.58069 (6) obj. -24179.9 iterations 11
Cbc0038I Pass   5: suminf.    0.07387 (1) obj. -24179.9 iterations 11
Cbc0038I Pass   6: suminf.    0.27778 (1) obj. -25379.3 iterations 1
Cbc0038I Pass   7: suminf.    0.10767 (2) obj. -24179.9 iterations 12
Cbc0038I Pass   8: suminf.    0.10767 (2) obj. -24179.9 iterations 4
Cbc0038I Pass   9: suminf.    0.30556 (1) obj. -25119.2 iterations 4
Cbc0038I Pass  10: suminf.    0.14587 (1) obj. -24179.9 iterations 1
Cbc0038I Pass  11: suminf.    0.89790 (5) obj. -24179.9 iterations 18
Cbc0038I Pass  12: suminf.    0.12479 (1) obj. -24179.9 iterations 14
Cbc0038I Pass  13: suminf.    0.13889 (1) obj. -24262.9 iterations 1
Cbc0038I Pass  14: suminf.    2.11136 (6) obj. -24179.9 iterations 10
Cbc0038I Pass  15: suminf.    0.93258 (3) obj. -24179.9 iterations 10
Cbc0038I Pass  16: suminf.    0.56595 (3) obj. -24782.7 iterations 4
Cbc0038I Pass  17: suminf.    1.15879 (4) obj. -24179.9 iterations 3
Cbc0038I Pass  18: suminf.    0.73329 (3) obj. -24179.9 iterations 14
Cbc0038I Pass  19: suminf.    0.37451 (2) obj. -24179.9 iterations 4
Cbc0038I Pass  20: suminf.    0.20226 (1) obj. -24179.9 iterations 1
Cbc0038I Pass  21: suminf.    0.04878 (2) obj. -25085.3 iterations 3
Cbc0038I Pass  22: suminf.    0.95939 (3) obj. -24179.9 iterations 4
Cbc0038I Pass  23: suminf.    0.71133 (4) obj. -24179.9 iterations 14
Cbc0038I Pass  24: suminf.    0.14587 (1) obj. -24179.9 iterations 7
Cbc0038I Pass  25: suminf.    0.22222 (1) obj. -24629 iterations 1
Cbc0038I Pass  26: suminf.    0.33543 (4) obj. -24179.9 iterations 10
Cbc0038I Pass  27: suminf.    0.33543 (4) obj. -24179.9 iterations 7
Cbc0038I Pass  28: suminf.    0.17594 (2) obj. -24614.1 iterations 15
Cbc0038I Solution found of -24296
Cbc0038I Relaxing continuous gives -24296
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -24296 to -25809.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -26042.7
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 3
Cbc0038I Pass  29: suminf.    0.73989 (3) obj. -26042.7 iterations 5
Cbc0038I Pass  30: suminf.    0.85531 (4) obj. -26042.7 iterations 11
Cbc0038I Pass  31: suminf.    0.85531 (4) obj. -26042.7 iterations 0
Cbc0038I Pass  32: suminf.    0.73989 (3) obj. -26042.7 iterations 11
Cbc0038I Pass  33: suminf.    0.78034 (3) obj. -26042.7 iterations 8
Cbc0038I Pass  34: suminf.    0.73989 (3) obj. -26042.7 iterations 7
Cbc0038I Pass  35: suminf.    0.85653 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  36: suminf.    0.85531 (4) obj. -26042.7 iterations 7
Cbc0038I Pass  37: suminf.    0.88327 (3) obj. -26042.7 iterations 10
Cbc0038I Pass  38: suminf.    0.80768 (3) obj. -26042.7 iterations 7
Cbc0038I Pass  39: suminf.    0.66543 (5) obj. -26042.7 iterations 13
Cbc0038I Pass  40: suminf.    0.65297 (5) obj. -26042.7 iterations 8
Cbc0038I Pass  41: suminf.    0.85531 (4) obj. -26042.7 iterations 10
Cbc0038I Pass  42: suminf.    0.85531 (4) obj. -26042.7 iterations 0
Cbc0038I Pass  43: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  44: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I Pass  45: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  46: suminf.    0.89182 (3) obj. -26042.7 iterations 6
Cbc0038I Pass  47: suminf.    1.27755 (4) obj. -26042.7 iterations 6
Cbc0038I Pass  48: suminf.    0.43885 (3) obj. -26042.7 iterations 8
Cbc0038I Pass  49: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  50: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  51: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I Pass  52: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  53: suminf.    1.23514 (3) obj. -26042.7 iterations 6
Cbc0038I Pass  54: suminf.    0.81425 (2) obj. -26042.7 iterations 5
Cbc0038I Pass  55: suminf.    0.91667 (2) obj. -26915.7 iterations 2
Cbc0038I Pass  56: suminf.    0.85531 (4) obj. -26042.7 iterations 3
Cbc0038I Pass  57: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  58: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25809.8 - took 0.02 seconds
Cbc0012I Integer solution of -25809.79 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 126 rows 71 columns, reduced to 7 rows 7 columns
Cbc0031I 7 added rows had average density of 7.1428571
Cbc0013I At root node, 7 cuts changed objective from -26974.553 to -26013.055 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25809.79, took 63 iterations and 0 nodes (0.24 seconds)
Cbc0032I Strong branching done 8 times (37 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.24

