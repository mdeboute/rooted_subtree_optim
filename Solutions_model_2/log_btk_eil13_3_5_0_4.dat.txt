Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 14 (-15) rows, 8 (-7) columns and 37 (-38) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 14 (0) rows, 8 (0) columns and 37 (0) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Coin0511I After Postsolve, objective 18.709829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Coin0511I After Postsolve, objective 18.709829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18.70982914 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 14 rows, 8 columns (7 integer (7 of which binary)) and 37 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.824%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.23989
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0 iterations 6
Cbc0038I Solution found of 0
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 8 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2.77089
Cbc0038I Pass   2: suminf.    0.10657 (1) obj. -2.77089 iterations 1
Cbc0038I Pass   3: suminf.    0.33786 (1) obj. -2.77089 iterations 2
Cbc0038I Pass   4: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass   5: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass   6: suminf.    0.21347 (4) obj. -2.77089 iterations 3
Cbc0038I Pass   7: suminf.    0.16173 (2) obj. -2.77089 iterations 1
Cbc0038I Pass   8: suminf.    0.16173 (2) obj. -2.77089 iterations 0
Cbc0038I Pass   9: suminf.    0.21347 (4) obj. -2.77089 iterations 1
Cbc0038I Pass  10: suminf.    0.16173 (2) obj. -2.77089 iterations 1
Cbc0038I Pass  11: suminf.    0.33786 (1) obj. -2.77089 iterations 3
Cbc0038I Pass  12: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  13: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass  14: suminf.    0.98303 (4) obj. -2.77089 iterations 3
Cbc0038I Pass  15: suminf.    0.98303 (4) obj. -2.77089 iterations 0
Cbc0038I Pass  16: suminf.    0.98303 (4) obj. -2.77089 iterations 0
Cbc0038I Pass  17: suminf.    1.16833 (5) obj. -2.77089 iterations 2
Cbc0038I Pass  18: suminf.    1.15388 (5) obj. -2.77089 iterations 1
Cbc0038I Pass  19: suminf.    0.33842 (1) obj. -2.77089 iterations 6
Cbc0038I Pass  20: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  21: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass  22: suminf.    0.61575 (2) obj. -2.77089 iterations 3
Cbc0038I Pass  23: suminf.    0.10657 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  24: suminf.    0.33786 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  25: suminf.    0.33786 (1) obj. -2.77089 iterations 0
Cbc0038I Pass  26: suminf.    0.33786 (1) obj. -2.77089 iterations 0
Cbc0038I Pass  27: suminf.    0.72753 (2) obj. -2.77089 iterations 2
Cbc0038I Pass  28: suminf.    1.28645 (4) obj. -2.77089 iterations 2
Cbc0038I Pass  29: suminf.    0.72753 (2) obj. -2.77089 iterations 2
Cbc0038I Pass  30: suminf.    1.09685 (4) obj. -2.77089 iterations 1
Cbc0038I Pass  31: suminf.    0.72753 (2) obj. -2.77089 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 8 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 0 - took 0.01 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -5 found by DiveCoefficient after 7 iterations and 0 nodes (0.01 seconds)
Cbc0013I At root node, 0 cuts changed objective from -18.709829 to -5 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5, took 7 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 21 (-6) rows, 22 (-4) columns and 114 (-37) elements
Clp1000I sum of infeasibilities 7.45786e-11 - average 3.55136e-12, 11 fixed columns
Coin0506I Presolve 12 (-9) rows, 11 (-11) columns and 43 (-71) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 210.00926
Clp0000I Optimal - objective value 210.00926
Coin0511I After Postsolve, objective 210.00926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8811794 - largest nonzero change 1.5045007e-05 ( 0.0008647613%) - largest zero change 1.919719e-05
Clp0000I Optimal - objective value 225.06481
Clp0000I Optimal - objective value 225.06481
Clp0000I Optimal - objective value 225.06481
Coin0511I After Postsolve, objective 225.06481, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 225.0648148 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 22 columns (22 integer (22 of which binary)) and 120 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.265
Cbc0038I Solution found of -134
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 22 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -135.146
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.07216 (2) obj. -135.146 iterations 7
Cbc0038I Pass   2: suminf.    0.14000 (2) obj. -135.96 iterations 3
Cbc0038I Pass   3: suminf.    0.07216 (2) obj. -135.146 iterations 3
Cbc0038I Pass   4: suminf.    0.07216 (2) obj. -135.146 iterations 2
Cbc0038I Pass   5: suminf.    0.07216 (2) obj. -135.146 iterations 2
Cbc0038I Pass   6: suminf.    0.14000 (2) obj. -135.96 iterations 3
Cbc0038I Pass   7: suminf.    0.07216 (2) obj. -135.146 iterations 4
Cbc0038I Pass   8: suminf.    0.07216 (2) obj. -135.146 iterations 3
Cbc0038I Pass   9: suminf.    0.07216 (2) obj. -135.146 iterations 2
Cbc0038I Pass  10: suminf.    0.07216 (2) obj. -135.146 iterations 1
Cbc0038I Pass  11: suminf.    0.07216 (2) obj. -135.146 iterations 2
Cbc0038I Pass  12: suminf.    0.07216 (2) obj. -135.146 iterations 3
Cbc0038I Pass  13: suminf.    0.07216 (2) obj. -135.146 iterations 2
Cbc0038I Pass  14: suminf.    0.07216 (2) obj. -135.146 iterations 1
Cbc0038I Pass  15: suminf.    0.10000 (1) obj. -135.2 iterations 3
Cbc0038I Pass  16: suminf.    0.07216 (2) obj. -135.146 iterations 5
Cbc0038I Pass  17: suminf.    0.07216 (2) obj. -135.146 iterations 4
Cbc0038I Pass  18: suminf.    0.10000 (1) obj. -135.2 iterations 6
Cbc0038I Pass  19: suminf.    0.07216 (2) obj. -135.146 iterations 4
Cbc0038I Pass  20: suminf.    0.07216 (2) obj. -135.146 iterations 1
Cbc0038I Pass  21: suminf.    0.10000 (1) obj. -135.2 iterations 4
Cbc0038I Pass  22: suminf.    0.10000 (1) obj. -135.2 iterations 5
Cbc0038I Pass  23: suminf.    0.22500 (2) obj. -135.7 iterations 4
Cbc0038I Pass  24: suminf.    0.07216 (2) obj. -135.146 iterations 5
Cbc0038I Pass  25: suminf.    0.07216 (2) obj. -135.146 iterations 1
Cbc0038I Pass  26: suminf.    0.07216 (2) obj. -135.146 iterations 1
Cbc0038I Pass  27: suminf.    0.07216 (2) obj. -135.146 iterations 3
Cbc0038I Pass  28: suminf.    0.07216 (2) obj. -135.146 iterations 1
Cbc0038I Pass  29: suminf.    0.10000 (1) obj. -135.2 iterations 5
Cbc0038I Pass  30: suminf.    0.15900 (2) obj. -135.146 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -134 - took 0.00 seconds
Cbc0012I Integer solution of -134 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0001I Search completed - best objective -134, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 14 (-15) rows, 8 (-7) columns and 37 (-38) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 14 (0) rows, 8 (0) columns and 37 (0) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Coin0511I After Postsolve, objective 18.709829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Clp0000I Optimal - objective value 18.709829
Coin0511I After Postsolve, objective 18.709829, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18.70982914 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 14 rows, 8 columns (7 integer (7 of which binary)) and 37 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.824%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.23989
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0 iterations 6
Cbc0038I Solution found of 0
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 8 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2.77089
Cbc0038I Pass   2: suminf.    0.10657 (1) obj. -2.77089 iterations 1
Cbc0038I Pass   3: suminf.    0.33786 (1) obj. -2.77089 iterations 2
Cbc0038I Pass   4: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass   5: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass   6: suminf.    0.21347 (4) obj. -2.77089 iterations 3
Cbc0038I Pass   7: suminf.    0.16173 (2) obj. -2.77089 iterations 1
Cbc0038I Pass   8: suminf.    0.16173 (2) obj. -2.77089 iterations 0
Cbc0038I Pass   9: suminf.    0.21347 (4) obj. -2.77089 iterations 1
Cbc0038I Pass  10: suminf.    0.16173 (2) obj. -2.77089 iterations 1
Cbc0038I Pass  11: suminf.    0.33786 (1) obj. -2.77089 iterations 3
Cbc0038I Pass  12: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  13: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass  14: suminf.    0.98303 (4) obj. -2.77089 iterations 3
Cbc0038I Pass  15: suminf.    0.98303 (4) obj. -2.77089 iterations 0
Cbc0038I Pass  16: suminf.    0.98303 (4) obj. -2.77089 iterations 0
Cbc0038I Pass  17: suminf.    1.16833 (5) obj. -2.77089 iterations 2
Cbc0038I Pass  18: suminf.    1.15388 (5) obj. -2.77089 iterations 1
Cbc0038I Pass  19: suminf.    0.33842 (1) obj. -2.77089 iterations 6
Cbc0038I Pass  20: suminf.    0.23568 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  21: suminf.    0.41427 (1) obj. -2.77089 iterations 1
Cbc0038I Pass  22: suminf.    0.61575 (2) obj. -2.77089 iterations 3
Cbc0038I Pass  23: suminf.    0.10657 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  24: suminf.    0.33786 (1) obj. -2.77089 iterations 2
Cbc0038I Pass  25: suminf.    0.33786 (1) obj. -2.77089 iterations 0
Cbc0038I Pass  26: suminf.    0.33786 (1) obj. -2.77089 iterations 0
Cbc0038I Pass  27: suminf.    0.72753 (2) obj. -2.77089 iterations 2
Cbc0038I Pass  28: suminf.    1.28645 (4) obj. -2.77089 iterations 2
Cbc0038I Pass  29: suminf.    0.72753 (2) obj. -2.77089 iterations 2
Cbc0038I Pass  30: suminf.    1.09685 (4) obj. -2.77089 iterations 1
Cbc0038I Pass  31: suminf.    0.72753 (2) obj. -2.77089 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 8 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 0 - took 0.01 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -5 found by DiveCoefficient after 7 iterations and 0 nodes (0.01 seconds)
Cbc0013I At root node, 0 cuts changed objective from -18.709829 to -5 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5, took 7 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 13 (-16) rows, 13 (-14) columns and 56 (-98) elements
Clp1000I sum of infeasibilities 5.85199e-09 - average 4.50153e-10, 9 fixed columns
Coin0506I Presolve 3 (-10) rows, 4 (-9) columns and 10 (-46) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value -4.8823529
Clp0000I Optimal - objective value -4.8823529
Coin0511I After Postsolve, objective -4.8823529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2403032 - largest nonzero change 0 ( 0%) - largest zero change 1.9850116e-05
Clp0000I Optimal - objective value 39.829709
Clp0000I Optimal - objective value 39.829709
Clp0000I Optimal - objective value 39.829709
Coin0511I After Postsolve, objective 39.829709, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.82970885 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 15 columns (15 integer (15 of which binary)) and 64 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.968%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.777381
Cbc0038I Pass   1: suminf.    0.62857 (2) obj. -19.6571 iterations 1
Cbc0038I Solution found of 0
Cbc0038I Rounding solution of -3.55271e-15 is better than previous of 0

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3.0442
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.62857 (2) obj. -19.6571 iterations 0
Cbc0038I Pass   3: suminf.    0.16022 (1) obj. -3.0442 iterations 3
Cbc0038I Pass   4: suminf.    0.42857 (1) obj. -10.8571 iterations 1
Cbc0038I Pass   5: suminf.    0.42857 (1) obj. -10.8571 iterations 0
Cbc0038I Pass   6: suminf.    1.85874 (5) obj. -3.0442 iterations 6
Cbc0038I Pass   7: suminf.    1.41705 (4) obj. -11.2496 iterations 2
Cbc0038I Pass   8: suminf.    0.92129 (4) obj. -3.0442 iterations 1
Cbc0038I Pass   9: suminf.    0.79568 (3) obj. -3.0442 iterations 5
Cbc0038I Pass  10: suminf.    0.62030 (3) obj. -3.0442 iterations 1
Cbc0038I Pass  11: suminf.    0.52864 (2) obj. -3.0442 iterations 1
Cbc0038I Pass  12: suminf.    0.62030 (3) obj. -3.0442 iterations 1
Cbc0038I Pass  13: suminf.    0.52864 (2) obj. -3.0442 iterations 1
Cbc0038I Pass  14: suminf.    0.91213 (4) obj. -3.0442 iterations 2
Cbc0038I Pass  15: suminf.    0.91213 (4) obj. -3.0442 iterations 0
Cbc0038I Pass  16: suminf.    0.79568 (3) obj. -3.0442 iterations 3
Cbc0038I Pass  17: suminf.    0.79568 (3) obj. -3.0442 iterations 0
Cbc0038I Pass  18: suminf.    0.62030 (3) obj. -3.0442 iterations 1
Cbc0038I Pass  19: suminf.    0.52864 (2) obj. -3.0442 iterations 1
Cbc0038I Pass  20: suminf.    0.52864 (2) obj. -3.0442 iterations 0
Cbc0038I Pass  21: suminf.    0.58127 (2) obj. -3.0442 iterations 2
Cbc0038I Pass  22: suminf.    0.58127 (2) obj. -3.0442 iterations 0
Cbc0038I Pass  23: suminf.    0.88659 (3) obj. -3.0442 iterations 2
Cbc0038I Pass  24: suminf.    0.66718 (3) obj. -3.0442 iterations 1
Cbc0038I Pass  25: suminf.    0.62857 (2) obj. -15.6571 iterations 5
Cbc0038I Pass  26: suminf.    0.37075 (1) obj. -3.0442 iterations 3
Cbc0038I Pass  27: suminf.    0.42857 (1) obj. -6.85714 iterations 1
Cbc0038I Pass  28: suminf.    0.57738 (2) obj. -3.64286 iterations 3
Cbc0038I Pass  29: suminf.    0.52749 (2) obj. -3.0442 iterations 1
Cbc0038I Pass  30: suminf.    0.62415 (2) obj. -3.0442 iterations 1
Cbc0038I Pass  31: suminf.    0.88659 (3) obj. -3.0442 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 15 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 0 to -5 (0.01 seconds)
Cbc0038I Round again with cutoff of -9.08849
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.62857 (2) obj. -19.6571 iterations 0
Cbc0038I Pass  32: suminf.    0.47834 (1) obj. -9.08849 iterations 2
Cbc0038I Pass  33: suminf.    0.42857 (1) obj. -10.8571 iterations 1
Cbc0038I Pass  34: suminf.    1.61828 (4) obj. -9.08849 iterations 3
Cbc0038I Pass  35: suminf.    1.01694 (3) obj. -9.08849 iterations 2
Cbc0038I Pass  36: suminf.    0.61789 (3) obj. -9.08849 iterations 4
Cbc0038I Pass  37: suminf.    0.52863 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  38: suminf.    0.42571 (2) obj. -9.08849 iterations 1
Cbc0038I Pass  39: suminf.    1.23309 (4) obj. -9.08849 iterations 3
Cbc0038I Pass  40: suminf.    1.23309 (4) obj. -9.08849 iterations 0
Cbc0038I Pass  41: suminf.    0.98153 (3) obj. -9.08849 iterations 2
Cbc0038I Pass  42: suminf.    0.98153 (3) obj. -9.08849 iterations 0
Cbc0038I Pass  43: suminf.    0.71613 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  44: suminf.    0.63624 (2) obj. -9.08849 iterations 1
Cbc0038I Pass  45: suminf.    1.17876 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  46: suminf.    1.37583 (4) obj. -9.08849 iterations 1
Cbc0038I Pass  47: suminf.    1.17876 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  48: suminf.    1.17876 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  49: suminf.    1.17876 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  50: suminf.    0.98153 (3) obj. -9.08849 iterations 3
Cbc0038I Pass  51: suminf.    0.71613 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  52: suminf.    0.63624 (2) obj. -9.08849 iterations 1
Cbc0038I Pass  53: suminf.    1.37496 (4) obj. -9.08849 iterations 4
Cbc0038I Pass  54: suminf.    1.37496 (4) obj. -9.08849 iterations 0
Cbc0038I Pass  55: suminf.    1.21571 (3) obj. -9.08849 iterations 3
Cbc0038I Pass  56: suminf.    0.71214 (3) obj. -9.08849 iterations 1
Cbc0038I Pass  57: suminf.    1.01614 (3) obj. -9.08849 iterations 9
Cbc0038I Pass  58: suminf.    0.32880 (2) obj. -9.08849 iterations 3
Cbc0038I Pass  59: suminf.    1.04458 (4) obj. -9.08849 iterations 2
Cbc0038I Pass  60: suminf.    0.32880 (2) obj. -9.08849 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 15 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -5 - took 0.01 seconds
Cbc0012I Integer solution of -5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 15 rows 15 columns, reduced to 5 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -21.442857 to -21.442857 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -5, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

