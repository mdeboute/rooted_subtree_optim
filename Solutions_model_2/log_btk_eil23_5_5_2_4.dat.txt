Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 22 (-3) columns and 109 (-26) elements
Clp1000I sum of infeasibilities 1.19058e-05 - average 3.30718e-07, 1 fixed columns
Coin0506I Presolve 28 (-8) rows, 21 (-1) columns and 91 (-18) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Coin0511I After Postsolve, objective 89.606337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Coin0511I After Postsolve, objective 89.606337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.60633697 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.12469
Cbc0038I Pass   1: suminf.    0.58819 (2) obj. -7.88487 iterations 12
Cbc0038I Solution found of 2.8659
Cbc0038I Relaxing continuous gives 2.8659
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2.8659 to -14.5316 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.0392
Cbc0038I Pass   2: suminf.    0.77255 (3) obj. -22.0392 iterations 1
Cbc0038I Pass   3: suminf.    0.37645 (2) obj. -22.0392 iterations 4
Cbc0038I Pass   4: suminf.    0.71782 (4) obj. -22.0392 iterations 3
Cbc0038I Pass   5: suminf.    1.02831 (5) obj. -22.0392 iterations 9
Cbc0038I Pass   6: suminf.    0.99212 (4) obj. -22.0392 iterations 1
Cbc0038I Pass   7: suminf.    1.02324 (4) obj. -22.0392 iterations 5
Cbc0038I Pass   8: suminf.    0.76505 (4) obj. -22.0392 iterations 2
Cbc0038I Pass   9: suminf.    0.70774 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  10: suminf.    1.14087 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  11: suminf.    1.03353 (4) obj. -22.0392 iterations 4
Cbc0038I Pass  12: suminf.    1.25970 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  13: suminf.    1.11408 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  14: suminf.    1.01641 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  15: suminf.    1.26092 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  16: suminf.    1.24605 (4) obj. -22.0392 iterations 3
Cbc0038I Pass  17: suminf.    1.21211 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  18: suminf.    1.18159 (5) obj. -22.0392 iterations 1
Cbc0038I Pass  19: suminf.    1.36996 (7) obj. -22.0392 iterations 3
Cbc0038I Pass  20: suminf.    1.27675 (4) obj. -22.0392 iterations 4
Cbc0038I Pass  21: suminf.    1.60013 (8) obj. -22.0392 iterations 4
Cbc0038I Pass  22: suminf.    2.61182 (7) obj. -22.0392 iterations 9
Cbc0038I Pass  23: suminf.    1.48442 (5) obj. -22.0392 iterations 6
Cbc0038I Pass  24: suminf.    0.68792 (3) obj. -22.0392 iterations 2
Cbc0038I Pass  25: suminf.    0.19625 (2) obj. -22.0392 iterations 1
Cbc0038I Pass  26: suminf.    0.70184 (4) obj. -22.0392 iterations 3
Cbc0038I Pass  27: suminf.    0.62794 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  28: suminf.    0.73038 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  29: suminf.    0.55726 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  30: suminf.    0.70184 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  31: suminf.    0.73626 (5) obj. -22.0392 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -14.5316 to -15.291 (0.04 seconds)
Cbc0038I Round again with cutoff of -35.5526
Cbc0038I Pass  31: suminf.    1.01140 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  32: suminf.    0.92320 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  33: suminf.    1.37749 (4) obj. -35.5526 iterations 7
Cbc0038I Pass  34: suminf.    1.06475 (3) obj. -35.5526 iterations 3
Cbc0038I Pass  35: suminf.    1.02106 (5) obj. -35.5526 iterations 7
Cbc0038I Pass  36: suminf.    0.98360 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  37: suminf.    1.02921 (4) obj. -35.5526 iterations 5
Cbc0038I Pass  38: suminf.    1.00407 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  39: suminf.    1.56267 (5) obj. -35.5526 iterations 5
Cbc0038I Pass  40: suminf.    1.35936 (4) obj. -35.5526 iterations 2
Cbc0038I Pass  41: suminf.    1.25993 (6) obj. -35.5526 iterations 2
Cbc0038I Pass  42: suminf.    1.23418 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  43: suminf.    1.88865 (6) obj. -35.5526 iterations 6
Cbc0038I Pass  44: suminf.    1.50817 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  45: suminf.    1.15068 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  46: suminf.    1.09275 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  47: suminf.    1.51970 (4) obj. -35.5526 iterations 6
Cbc0038I Pass  48: suminf.    1.22878 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  49: suminf.    1.14683 (4) obj. -35.5526 iterations 6
Cbc0038I Pass  50: suminf.    0.49740 (6) obj. -35.5526 iterations 9
Cbc0038I Pass  51: suminf.    0.35804 (3) obj. -35.5526 iterations 4
Cbc0038I Pass  52: suminf.    1.16448 (5) obj. -35.5526 iterations 7
Cbc0038I Pass  53: suminf.    1.07881 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  54: suminf.    1.19813 (5) obj. -35.5526 iterations 5
Cbc0038I Pass  55: suminf.    1.13087 (5) obj. -35.5526 iterations 3
Cbc0038I Pass  56: suminf.    1.29325 (4) obj. -35.5526 iterations 3
Cbc0038I Pass  57: suminf.    1.26802 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  58: suminf.    1.68171 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  59: suminf.    1.16779 (6) obj. -35.5526 iterations 2
Cbc0038I Pass  60: suminf.    1.13087 (5) obj. -35.5526 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -15.291 - took 0.05 seconds
Cbc0012I Integer solution of -15.291023 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 18 rows 15 columns
Cbc0031I 14 added rows had average density of 14.214286
Cbc0013I At root node, 14 cuts changed objective from -89.606337 to -29.186812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 976 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 906 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -16.07651 found by DiveCoefficient after 2049 iterations and 2 nodes (0.21 seconds)
Cbc0004I Integer solution of -16.333013 found after 2205 iterations and 3 nodes (0.22 seconds)
Cbc0012I Integer solution of -16.683113 found by rounding after 2219 iterations and 4 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -16.68311299999999, took 2453 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 84 times (680 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 42 (-4) columns and 321 (-67) elements
Clp1000I sum of infeasibilities 1.03442e-06 - average 2.87339e-08, 31 fixed columns
Coin0506I Presolve 11 (-25) rows, 11 (-31) columns and 40 (-281) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.6711711 - largest nonzero change 1.0404975e-05 ( 0.00091204228%) - largest zero change 0
Clp0000I Optimal - objective value 48.384423
Clp0000I Optimal - objective value 48.384423
Coin0511I After Postsolve, objective 48.384423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0616434 - largest nonzero change 2.8910446e-05 ( 0.0025228206%) - largest zero change 2.2907883e-05
Clp0000I Optimal - objective value 155.73411
Clp0000I Optimal - objective value 155.73411
Clp0000I Optimal - objective value 155.73411
Coin0511I After Postsolve, objective 155.73411, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 155.7341105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 41 columns (41 integer (41 of which binary)) and 310 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.052%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.5092
Cbc0038I Pass   1: suminf.    0.99358 (5) obj. -3.63271 iterations 12
Cbc0038I Pass   2: suminf.    0.99358 (5) obj. -3.63271 iterations 0
Cbc0038I Solution found of 13.79
Cbc0038I Rounding solution of 4.38203 is better than previous of 13.79

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 4.38203 to -13.8991 (0.02 seconds)
Cbc0038I Round again with cutoff of -20.6303
Cbc0038I Pass   3: suminf.    2.02206 (8) obj. -20.6303 iterations 1
Cbc0038I Pass   4: suminf.    2.02206 (8) obj. -20.6303 iterations 0
Cbc0038I Pass   5: suminf.    0.87123 (4) obj. -20.6303 iterations 10
Cbc0038I Pass   6: suminf.    0.44718 (3) obj. -20.6303 iterations 1
Cbc0038I Pass   7: suminf.    0.35440 (2) obj. -26.363 iterations 2
Cbc0038I Pass   8: suminf.    0.19022 (2) obj. -20.6303 iterations 1
Cbc0038I Pass   9: suminf.    1.86464 (5) obj. -21.8728 iterations 9
Cbc0038I Pass  10: suminf.    0.84148 (3) obj. -20.6303 iterations 4
Cbc0038I Pass  11: suminf.    0.51706 (3) obj. -20.6303 iterations 3
Cbc0038I Pass  12: suminf.    0.50126 (3) obj. -20.6303 iterations 1
Cbc0038I Pass  13: suminf.    0.40918 (2) obj. -20.6303 iterations 1
Cbc0038I Pass  14: suminf.    0.39128 (1) obj. -20.6303 iterations 1
Cbc0038I Pass  15: suminf.    0.40000 (1) obj. -20.9356 iterations 1
Cbc0038I Pass  16: suminf.    2.23302 (8) obj. -20.6303 iterations 15
Cbc0038I Pass  17: suminf.    1.78297 (6) obj. -20.6303 iterations 2
Cbc0038I Pass  18: suminf.    1.23452 (4) obj. -20.6303 iterations 3
Cbc0038I Pass  19: suminf.    1.23431 (6) obj. -20.6303 iterations 2
Cbc0038I Pass  20: suminf.    0.64406 (3) obj. -26.2024 iterations 5
Cbc0038I Pass  21: suminf.    0.33946 (3) obj. -20.6303 iterations 2
Cbc0038I Pass  22: suminf.    1.32455 (5) obj. -20.6303 iterations 8
Cbc0038I Pass  23: suminf.    1.04259 (4) obj. -20.6303 iterations 2
Cbc0038I Pass  24: suminf.    1.44872 (4) obj. -20.6303 iterations 3
Cbc0038I Pass  25: suminf.    1.43424 (5) obj. -20.6303 iterations 1
Cbc0038I Pass  26: suminf.    1.42402 (4) obj. -20.6303 iterations 2
Cbc0038I Pass  27: suminf.    1.41431 (5) obj. -20.6303 iterations 1
Cbc0038I Pass  28: suminf.    1.44872 (4) obj. -20.6303 iterations 2
Cbc0038I Pass  29: suminf.    2.71311 (7) obj. -20.6303 iterations 13
Cbc0038I Pass  30: suminf.    1.01958 (4) obj. -20.6303 iterations 11
Cbc0038I Pass  31: suminf.    0.68333 (2) obj. -21.5572 iterations 4
Cbc0038I Pass  32: suminf.    0.62472 (4) obj. -20.6303 iterations 3
Cbc0038I Rounding solution of -15.291 is better than previous of -13.8991

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 7 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -32.7463
Cbc0038I Pass  32: suminf.    2.50372 (9) obj. -32.7463 iterations 1
Cbc0038I Pass  33: suminf.    2.17725 (8) obj. -32.7463 iterations 1
Cbc0038I Pass  34: suminf.    0.84711 (3) obj. -32.7463 iterations 10
Cbc0038I Pass  35: suminf.    0.84505 (4) obj. -32.7463 iterations 1
Cbc0038I Pass  36: suminf.    0.69687 (3) obj. -34.0771 iterations 5
Cbc0038I Pass  37: suminf.    0.62459 (3) obj. -32.7463 iterations 2
Cbc0038I Pass  38: suminf.    4.19119 (11) obj. -32.7463 iterations 11
Cbc0038I Pass  39: suminf.    2.65380 (8) obj. -32.7463 iterations 1
Cbc0038I Pass  40: suminf.    2.65380 (8) obj. -32.7463 iterations 0
Cbc0038I Pass  41: suminf.    1.81193 (4) obj. -32.7463 iterations 5
Cbc0038I Pass  42: suminf.    1.61969 (5) obj. -32.7463 iterations 2
Cbc0038I Pass  43: suminf.    3.22358 (10) obj. -32.7463 iterations 19
Cbc0038I Pass  44: suminf.    3.22358 (10) obj. -32.7463 iterations 1
Cbc0038I Pass  45: suminf.    2.50304 (6) obj. -32.7463 iterations 9
Cbc0038I Pass  46: suminf.    1.80952 (4) obj. -46.4226 iterations 2
Cbc0038I Pass  47: suminf.    1.33333 (3) obj. -34.994 iterations 1
Cbc0038I Pass  48: suminf.    1.41306 (4) obj. -32.7463 iterations 5
Cbc0038I Pass  49: suminf.    1.47619 (3) obj. -33.7559 iterations 2
Cbc0038I Pass  50: suminf.    1.43413 (3) obj. -32.7463 iterations 1
Cbc0038I Pass  51: suminf.    1.42812 (3) obj. -32.7463 iterations 2
Cbc0038I Pass  52: suminf.    2.58509 (6) obj. -32.7463 iterations 9
Cbc0038I Pass  53: suminf.    1.95083 (6) obj. -32.7463 iterations 4
Cbc0038I Pass  54: suminf.    1.62425 (4) obj. -32.7463 iterations 4
Cbc0038I Pass  55: suminf.    1.60816 (5) obj. -32.7463 iterations 1
Cbc0038I Pass  56: suminf.    1.63918 (4) obj. -32.7463 iterations 2
Cbc0038I Pass  57: suminf.    1.61519 (5) obj. -32.7463 iterations 1
Cbc0038I Pass  58: suminf.    1.62425 (4) obj. -32.7463 iterations 2
Cbc0038I Pass  59: suminf.    1.76173 (6) obj. -32.7463 iterations 9
Cbc0038I Pass  60: suminf.    1.76173 (6) obj. -32.7463 iterations 0
Cbc0038I Pass  61: suminf.    1.39857 (4) obj. -32.7463 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 19 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -15.291 - took 0.02 seconds
Cbc0012I Integer solution of -15.291023 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 41 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -16.683113 found by DiveCoefficient after 100 iterations and 0 nodes (0.18 seconds)
Cbc0031I 10 added rows had average density of 12
Cbc0013I At root node, 10 cuts changed objective from -81.210403 to -18.571687 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 97 row cuts average 2.6 elements, 17 column cuts (17 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 62 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16.68311299999999, took 192 iterations and 4 nodes (0.30 seconds)
Cbc0032I Strong branching done 38 times (191 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.30

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 22 (-3) columns and 109 (-26) elements
Clp1000I sum of infeasibilities 1.19058e-05 - average 3.30718e-07, 1 fixed columns
Coin0506I Presolve 28 (-8) rows, 21 (-1) columns and 91 (-18) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Coin0511I After Postsolve, objective 89.606337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Clp0000I Optimal - objective value 89.606337
Coin0511I After Postsolve, objective 89.606337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.60633697 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.12469
Cbc0038I Pass   1: suminf.    0.58819 (2) obj. -7.88487 iterations 12
Cbc0038I Solution found of 2.8659
Cbc0038I Relaxing continuous gives 2.8659
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2.8659 to -14.5316 (0.01 seconds)
Cbc0038I Round again with cutoff of -22.0392
Cbc0038I Pass   2: suminf.    0.77255 (3) obj. -22.0392 iterations 1
Cbc0038I Pass   3: suminf.    0.37645 (2) obj. -22.0392 iterations 4
Cbc0038I Pass   4: suminf.    0.71782 (4) obj. -22.0392 iterations 3
Cbc0038I Pass   5: suminf.    1.02831 (5) obj. -22.0392 iterations 9
Cbc0038I Pass   6: suminf.    0.99212 (4) obj. -22.0392 iterations 1
Cbc0038I Pass   7: suminf.    1.02324 (4) obj. -22.0392 iterations 5
Cbc0038I Pass   8: suminf.    0.76505 (4) obj. -22.0392 iterations 2
Cbc0038I Pass   9: suminf.    0.70774 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  10: suminf.    1.14087 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  11: suminf.    1.03353 (4) obj. -22.0392 iterations 4
Cbc0038I Pass  12: suminf.    1.25970 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  13: suminf.    1.11408 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  14: suminf.    1.01641 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  15: suminf.    1.26092 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  16: suminf.    1.24605 (4) obj. -22.0392 iterations 3
Cbc0038I Pass  17: suminf.    1.21211 (4) obj. -22.0392 iterations 5
Cbc0038I Pass  18: suminf.    1.18159 (5) obj. -22.0392 iterations 1
Cbc0038I Pass  19: suminf.    1.36996 (7) obj. -22.0392 iterations 3
Cbc0038I Pass  20: suminf.    1.27675 (4) obj. -22.0392 iterations 4
Cbc0038I Pass  21: suminf.    1.60013 (8) obj. -22.0392 iterations 4
Cbc0038I Pass  22: suminf.    2.61182 (7) obj. -22.0392 iterations 9
Cbc0038I Pass  23: suminf.    1.48442 (5) obj. -22.0392 iterations 6
Cbc0038I Pass  24: suminf.    0.68792 (3) obj. -22.0392 iterations 2
Cbc0038I Pass  25: suminf.    0.19625 (2) obj. -22.0392 iterations 1
Cbc0038I Pass  26: suminf.    0.70184 (4) obj. -22.0392 iterations 3
Cbc0038I Pass  27: suminf.    0.62794 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  28: suminf.    0.73038 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  29: suminf.    0.55726 (3) obj. -22.0392 iterations 1
Cbc0038I Pass  30: suminf.    0.70184 (4) obj. -22.0392 iterations 2
Cbc0038I Pass  31: suminf.    0.73626 (5) obj. -22.0392 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -14.5316 to -15.291 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.5526
Cbc0038I Pass  31: suminf.    1.01140 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  32: suminf.    0.92320 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  33: suminf.    1.37749 (4) obj. -35.5526 iterations 7
Cbc0038I Pass  34: suminf.    1.06475 (3) obj. -35.5526 iterations 3
Cbc0038I Pass  35: suminf.    1.02106 (5) obj. -35.5526 iterations 7
Cbc0038I Pass  36: suminf.    0.98360 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  37: suminf.    1.02921 (4) obj. -35.5526 iterations 5
Cbc0038I Pass  38: suminf.    1.00407 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  39: suminf.    1.56267 (5) obj. -35.5526 iterations 5
Cbc0038I Pass  40: suminf.    1.35936 (4) obj. -35.5526 iterations 2
Cbc0038I Pass  41: suminf.    1.25993 (6) obj. -35.5526 iterations 2
Cbc0038I Pass  42: suminf.    1.23418 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  43: suminf.    1.88865 (6) obj. -35.5526 iterations 6
Cbc0038I Pass  44: suminf.    1.50817 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  45: suminf.    1.15068 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  46: suminf.    1.09275 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  47: suminf.    1.51970 (4) obj. -35.5526 iterations 6
Cbc0038I Pass  48: suminf.    1.22878 (5) obj. -35.5526 iterations 2
Cbc0038I Pass  49: suminf.    1.14683 (4) obj. -35.5526 iterations 6
Cbc0038I Pass  50: suminf.    0.49740 (6) obj. -35.5526 iterations 9
Cbc0038I Pass  51: suminf.    0.35804 (3) obj. -35.5526 iterations 4
Cbc0038I Pass  52: suminf.    1.16448 (5) obj. -35.5526 iterations 7
Cbc0038I Pass  53: suminf.    1.07881 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  54: suminf.    1.19813 (5) obj. -35.5526 iterations 5
Cbc0038I Pass  55: suminf.    1.13087 (5) obj. -35.5526 iterations 3
Cbc0038I Pass  56: suminf.    1.29325 (4) obj. -35.5526 iterations 3
Cbc0038I Pass  57: suminf.    1.26802 (4) obj. -35.5526 iterations 1
Cbc0038I Pass  58: suminf.    1.68171 (5) obj. -35.5526 iterations 4
Cbc0038I Pass  59: suminf.    1.16779 (6) obj. -35.5526 iterations 2
Cbc0038I Pass  60: suminf.    1.13087 (5) obj. -35.5526 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15.291 - took 0.05 seconds
Cbc0012I Integer solution of -15.291023 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 18 rows 15 columns
Cbc0031I 14 added rows had average density of 14.214286
Cbc0013I At root node, 14 cuts changed objective from -89.606337 to -29.186812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 976 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 906 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -16.07651 found by DiveCoefficient after 2049 iterations and 2 nodes (0.17 seconds)
Cbc0004I Integer solution of -16.333013 found after 2205 iterations and 3 nodes (0.18 seconds)
Cbc0012I Integer solution of -16.683113 found by rounding after 2219 iterations and 4 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -16.68311299999999, took 2453 iterations and 8 nodes (0.19 seconds)
Cbc0032I Strong branching done 84 times (680 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 41 (-6) columns and 299 (-90) elements
Clp1000I sum of infeasibilities 3.87599e-10 - average 1.10742e-11, 27 fixed columns
Coin0506I Presolve 7 (-28) rows, 11 (-30) columns and 31 (-268) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.477991 - largest nonzero change 2.7000066e-05 ( 0.0021869008%) - largest zero change 0
Clp0000I Optimal - objective value 39.566772
Clp0000I Optimal - objective value 39.566772
Coin0511I After Postsolve, objective 39.566772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3430596 - largest nonzero change 2.8884858e-05 ( 0.0024275985%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 99.250415
Clp0000I Optimal - objective value 99.250415
Clp0000I Optimal - objective value 99.250415
Coin0511I After Postsolve, objective 99.250415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.25041456 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 41 columns (41 integer (41 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.964%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.02305
Cbc0038I Pass   1: suminf.    1.55656 (7) obj. -9.22167 iterations 13
Cbc0038I Pass   2: suminf.    1.55656 (7) obj. -9.22167 iterations 1
Cbc0038I Solution found of 13.79
Cbc0038I Rounding solution of 4.38203 is better than previous of 13.79

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 4.38203 to -13.8991 (0.02 seconds)
Cbc0038I Round again with cutoff of -20.4977
Cbc0038I Pass   3: suminf.    2.57875 (10) obj. -20.4977 iterations 1
Cbc0038I Pass   4: suminf.    1.87874 (8) obj. -20.4977 iterations 1
Cbc0038I Pass   5: suminf.    1.27451 (5) obj. -20.4977 iterations 12
Cbc0038I Pass   6: suminf.    1.26455 (6) obj. -20.4977 iterations 1
Cbc0038I Pass   7: suminf.    1.38289 (4) obj. -20.4977 iterations 6
Cbc0038I Pass   8: suminf.    0.96174 (4) obj. -20.4977 iterations 2
Cbc0038I Pass   9: suminf.    0.44339 (3) obj. -20.4977 iterations 1
Cbc0038I Pass  10: suminf.    0.40410 (2) obj. -28.0984 iterations 2
Cbc0038I Pass  11: suminf.    0.18642 (2) obj. -20.4977 iterations 1
Cbc0038I Pass  12: suminf.    1.44421 (4) obj. -20.4977 iterations 6
Cbc0038I Pass  13: suminf.    1.03647 (3) obj. -20.4977 iterations 2
Cbc0038I Pass  14: suminf.    0.45000 (1) obj. -22.6856 iterations 3
Cbc0038I Pass  15: suminf.    0.38749 (1) obj. -20.4977 iterations 1
Cbc0038I Pass  16: suminf.    2.01576 (6) obj. -20.4977 iterations 15
Cbc0038I Pass  17: suminf.    1.62943 (5) obj. -20.4977 iterations 3
Cbc0038I Pass  18: suminf.    1.30351 (5) obj. -20.4977 iterations 6
Cbc0038I Pass  19: suminf.    0.58041 (3) obj. -20.4977 iterations 5
Cbc0038I Pass  20: suminf.    0.35140 (2) obj. -21.4736 iterations 2
Cbc0038I Pass  21: suminf.    0.32345 (2) obj. -20.4977 iterations 2
Cbc0038I Pass  22: suminf.    1.34246 (5) obj. -20.4977 iterations 9
Cbc0038I Pass  23: suminf.    1.00411 (4) obj. -20.4977 iterations 2
Cbc0038I Pass  24: suminf.    1.44241 (4) obj. -20.4977 iterations 3
Cbc0038I Pass  25: suminf.    1.40595 (5) obj. -20.4977 iterations 1
Cbc0038I Pass  26: suminf.    1.39258 (5) obj. -20.4977 iterations 1
Cbc0038I Pass  27: suminf.    1.68333 (4) obj. -25.5572 iterations 3
Cbc0038I Pass  28: suminf.    1.39258 (5) obj. -20.4977 iterations 4
Cbc0038I Pass  29: suminf.    3.32908 (8) obj. -20.4977 iterations 11
Cbc0038I Pass  30: suminf.    1.79639 (7) obj. -20.4977 iterations 9
Cbc0038I Pass  31: suminf.    0.68333 (2) obj. -21.5572 iterations 5
Cbc0038I Pass  32: suminf.    0.59642 (4) obj. -20.4977 iterations 3
Cbc0038I Rounding solution of -15.291 is better than previous of -13.8991

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -32.3751
Cbc0038I Pass  32: suminf.    2.68218 (10) obj. -32.3751 iterations 0
Cbc0038I Pass  33: suminf.    2.68218 (10) obj. -32.3751 iterations 0
Cbc0038I Pass  34: suminf.    0.80558 (4) obj. -32.3751 iterations 15
Cbc0038I Pass  35: suminf.    0.80558 (4) obj. -32.3751 iterations 0
Cbc0038I Pass  36: suminf.    0.81377 (3) obj. -36.7653 iterations 4
Cbc0038I Pass  37: suminf.    0.58512 (3) obj. -32.3751 iterations 3
Cbc0038I Pass  38: suminf.    2.75867 (8) obj. -32.3751 iterations 15
Cbc0038I Pass  39: suminf.    2.48661 (7) obj. -32.3751 iterations 4
Cbc0038I Pass  40: suminf.    1.77523 (6) obj. -32.3751 iterations 2
Cbc0038I Pass  41: suminf.    1.87104 (4) obj. -32.3751 iterations 4
Cbc0038I Pass  42: suminf.    1.87104 (4) obj. -32.3751 iterations 0
Cbc0038I Pass  43: suminf.    1.56360 (4) obj. -32.3751 iterations 1
Cbc0038I Pass  44: suminf.    1.56360 (4) obj. -32.3751 iterations 0
Cbc0038I Pass  45: suminf.    1.87104 (4) obj. -32.3751 iterations 2
Cbc0038I Pass  46: suminf.    2.89115 (8) obj. -32.3751 iterations 16
Cbc0038I Pass  47: suminf.    1.01503 (5) obj. -32.3751 iterations 12
Cbc0038I Pass  48: suminf.    1.26667 (4) obj. -36.9038 iterations 2
Cbc0038I Pass  49: suminf.    2.03010 (7) obj. -32.3751 iterations 13
Cbc0038I Pass  50: suminf.    1.29584 (4) obj. -32.3751 iterations 3
Cbc0038I Pass  51: suminf.    1.55957 (5) obj. -32.3751 iterations 3
Cbc0038I Pass  52: suminf.    2.01176 (8) obj. -32.3751 iterations 10
Cbc0038I Pass  53: suminf.    2.01176 (8) obj. -32.3751 iterations 0
Cbc0038I Pass  54: suminf.    1.92932 (5) obj. -32.3751 iterations 4
Cbc0038I Pass  55: suminf.    1.66746 (5) obj. -32.3751 iterations 3
Cbc0038I Pass  56: suminf.    1.69498 (4) obj. -32.3751 iterations 1
Cbc0038I Pass  57: suminf.    1.66746 (5) obj. -32.3751 iterations 1
Cbc0038I Pass  58: suminf.    3.71509 (9) obj. -32.3751 iterations 11
Cbc0038I Pass  59: suminf.    3.44902 (8) obj. -32.3751 iterations 2
Cbc0038I Pass  60: suminf.    1.51020 (4) obj. -32.3751 iterations 8
Cbc0038I Pass  61: suminf.    1.50275 (5) obj. -32.3751 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15.291 - took 0.02 seconds
Cbc0012I Integer solution of -15.291023 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 41 columns, reduced to 2 rows 5 columns
Cbc0031I 11 added rows had average density of 11.818182
Cbc0013I At root node, 11 cuts changed objective from -79.884762 to -17.858625 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 2.5 elements, 16 column cuts (16 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 63 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0016I Integer solution of -15.817723 found by strong branching after 177 iterations and 1 nodes (0.35 seconds)
Cbc0012I Integer solution of -16.683113 found by DiveCoefficient after 200 iterations and 2 nodes (0.37 seconds)
Cbc0001I Search completed - best objective -16.68311299999999, took 274 iterations and 2 nodes (0.51 seconds)
Cbc0032I Strong branching done 30 times (182 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.51

