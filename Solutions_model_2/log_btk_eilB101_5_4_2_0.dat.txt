Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 100 (-3) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 0.00012527 - average 7.24103e-07, 47 fixed columns
Coin0506I Presolve 71 (-102) rows, 46 (-54) columns and 226 (-312) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Coin0511I After Postsolve, objective 64.906238, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2035531 - largest nonzero change 0 ( 0%) - largest zero change 2.9789125e-05
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Coin0511I After Postsolve, objective 64.906238, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.90623848 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 100 columns (99 integer (99 of which binary)) and 541 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.876%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.23532
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.1518 iterations 42
Cbc0038I Solution found of 0.1518
Cbc0038I Relaxing continuous gives 0.1518
Cbc0038I Rounding solution of -24.9215 is better than previous of 0.1518

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 35 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -24.9215 to -40.752 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.1675
Cbc0038I Pass   2: suminf.    1.81163 (7) obj. -43.1675 iterations 11
Cbc0038I Pass   3: suminf.    0.71751 (3) obj. -43.1675 iterations 7
Cbc0038I Pass   4: suminf.    0.72124 (4) obj. -43.1675 iterations 9
Cbc0038I Pass   5: suminf.    0.72124 (4) obj. -43.1675 iterations 0
Cbc0038I Pass   6: suminf.    0.99344 (3) obj. -43.1675 iterations 9
Cbc0038I Pass   7: suminf.    0.99344 (3) obj. -43.1675 iterations 0
Cbc0038I Pass   8: suminf.    2.95224 (10) obj. -43.1675 iterations 22
Cbc0038I Pass   9: suminf.    2.14686 (10) obj. -43.1675 iterations 17
Cbc0038I Pass  10: suminf.    2.14686 (10) obj. -43.1675 iterations 0
Cbc0038I Pass  11: suminf.    1.81989 (7) obj. -43.1675 iterations 21
Cbc0038I Pass  12: suminf.    1.52944 (5) obj. -43.1675 iterations 3
Cbc0038I Pass  13: suminf.    1.00073 (4) obj. -43.1675 iterations 12
Cbc0038I Pass  14: suminf.    1.00073 (4) obj. -43.1675 iterations 1
Cbc0038I Pass  15: suminf.    1.26027 (3) obj. -43.1675 iterations 9
Cbc0038I Pass  16: suminf.    0.96876 (4) obj. -43.1675 iterations 4
Cbc0038I Pass  17: suminf.    0.78127 (4) obj. -43.1675 iterations 9
Cbc0038I Pass  18: suminf.    1.03205 (4) obj. -43.1675 iterations 7
Cbc0038I Pass  19: suminf.    0.66432 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  20: suminf.    4.63889 (13) obj. -43.1675 iterations 41
Cbc0038I Pass  21: suminf.    1.22388 (6) obj. -43.1675 iterations 20
Cbc0038I Pass  22: suminf.    1.23287 (8) obj. -43.1675 iterations 4
Cbc0038I Pass  23: suminf.    1.52273 (6) obj. -43.1675 iterations 21
Cbc0038I Pass  24: suminf.    1.34885 (6) obj. -43.1675 iterations 4
Cbc0038I Pass  25: suminf.    1.08545 (3) obj. -43.1675 iterations 14
Cbc0038I Pass  26: suminf.    0.90991 (3) obj. -43.1675 iterations 3
Cbc0038I Pass  27: suminf.    1.01537 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  28: suminf.    1.00556 (3) obj. -43.1675 iterations 2
Cbc0038I Pass  29: suminf.    0.97199 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  30: suminf.    0.76991 (3) obj. -43.1675 iterations 3
Cbc0038I Pass  31: suminf.    4.42113 (12) obj. -43.1675 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 66 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -40.752 to -41.4433 (0.06 seconds)
Cbc0038I Round again with cutoff of -47.5153
Cbc0038I Pass  31: suminf.    2.14253 (7) obj. -47.5153 iterations 0
Cbc0038I Pass  32: suminf.    1.08364 (4) obj. -47.5153 iterations 12
Cbc0038I Pass  33: suminf.    1.41521 (5) obj. -47.5153 iterations 5
Cbc0038I Pass  34: suminf.    1.10671 (7) obj. -47.5153 iterations 14
Cbc0038I Pass  35: suminf.    1.22886 (7) obj. -47.5153 iterations 18
Cbc0038I Pass  36: suminf.    1.14652 (7) obj. -47.5153 iterations 1
Cbc0038I Pass  37: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  38: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  39: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  40: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  41: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  42: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  43: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  44: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  45: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  46: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  47: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  48: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  49: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  50: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  51: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  52: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  53: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  54: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  55: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  56: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  57: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  58: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  59: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  60: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 39 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -41.4433 - took 0.08 seconds
Cbc0012I Integer solution of -41.44332 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 173 rows 100 columns, reduced to 36 rows 24 columns
Cbc0031I 16 added rows had average density of 68.25
Cbc0013I At root node, 16 cuts changed objective from -64.906238 to -55.419217 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5624 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1469 row cuts average 97.1 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0012I Integer solution of -41.66751 found by rounding after 4761 iterations and 15 nodes (0.63 seconds)
Cbc0012I Integer solution of -41.66873 found by rounding after 5306 iterations and 43 nodes (0.68 seconds)
Cbc0010I After 53 nodes, 9 on tree, -41.66873 best solution, best possible -55.419215 (0.69 seconds)
Cbc0001I Search completed - best objective -41.66873, took 6322 iterations and 80 nodes (0.76 seconds)
Cbc0032I Strong branching done 632 times (8312 iterations), fathomed 9 nodes and fixed 55 variables
Cbc0035I Maximum depth 13, 419 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-85) rows, 144 (-58) columns and 2606 (-3047) elements
Clp1000I sum of infeasibilities 1.92704e-06 - average 1.61936e-08, 48 fixed columns
Coin0506I Presolve 76 (-43) rows, 95 (-49) columns and 1268 (-1338) elements
Clp0006I 0  Obj 80.893928 Dual inf 8.8502483 (95)
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 2.1210227 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 91.503578
Clp0000I Optimal - objective value 91.503578
Coin0511I After Postsolve, objective 91.503578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 91.503578
Clp0000I Optimal - objective value 91.503578
Clp0000I Optimal - objective value 91.503578
Clp0000I Optimal - objective value 91.503578
Coin0511I After Postsolve, objective 91.503578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.50357763 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 143 columns (143 integer (143 of which binary)) and 2577 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.865%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 3.78812
Cbc0038I Pass   1: suminf.    1.76125 (32) obj. -57.832 iterations 15
Cbc0038I Pass   2: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass   3: suminf.    0.53804 (12) obj. -33.417 iterations 20
Cbc0038I Solution found of -21.955
Cbc0038I Rounding solution of -24.769 is better than previous of -21.955

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -24.769 to -27.5124 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.942
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.76125 (32) obj. -57.832 iterations 0
Cbc0038I Pass   5: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass   6: suminf.    0.48146 (8) obj. -31.942 iterations 26
Cbc0038I Pass   7: suminf.    0.58903 (8) obj. -31.942 iterations 15
Cbc0038I Pass   8: suminf.    0.99118 (5) obj. -31.942 iterations 11
Cbc0038I Pass   9: suminf.    0.99118 (5) obj. -31.942 iterations 3
Cbc0038I Pass  10: suminf.    1.12831 (6) obj. -31.942 iterations 6
Cbc0038I Pass  11: suminf.    0.93720 (6) obj. -31.942 iterations 5
Cbc0038I Pass  12: suminf.    1.25687 (6) obj. -31.942 iterations 12
Cbc0038I Pass  13: suminf.    1.25687 (6) obj. -31.942 iterations 5
Cbc0038I Pass  14: suminf.    0.57391 (6) obj. -31.942 iterations 6
Cbc0038I Pass  15: suminf.    0.55571 (6) obj. -31.942 iterations 6
Cbc0038I Pass  16: suminf.    1.33525 (6) obj. -31.942 iterations 8
Cbc0038I Pass  17: suminf.    2.18399 (17) obj. -31.942 iterations 35
Cbc0038I Pass  18: suminf.    1.00929 (14) obj. -33.8348 iterations 6
Cbc0038I Pass  19: suminf.    1.22980 (5) obj. -31.942 iterations 26
Cbc0038I Pass  20: suminf.    1.13855 (7) obj. -31.942 iterations 6
Cbc0038I Pass  21: suminf.    1.16269 (7) obj. -31.942 iterations 10
Cbc0038I Pass  22: suminf.    1.16269 (7) obj. -31.942 iterations 4
Cbc0038I Pass  23: suminf.    0.76276 (5) obj. -31.942 iterations 9
Cbc0038I Pass  24: suminf.    0.66826 (6) obj. -31.942 iterations 6
Cbc0038I Pass  25: suminf.    0.85671 (8) obj. -31.942 iterations 11
Cbc0038I Pass  26: suminf.    0.82377 (6) obj. -31.942 iterations 10
Cbc0038I Pass  27: suminf.    1.29004 (7) obj. -31.942 iterations 17
Cbc0038I Pass  28: suminf.    0.60445 (7) obj. -31.942 iterations 2
Cbc0038I Pass  29: suminf.    1.00173 (5) obj. -31.942 iterations 12
Cbc0038I Pass  30: suminf.    1.00173 (5) obj. -31.942 iterations 2
Cbc0038I Pass  31: suminf.    1.00019 (5) obj. -31.942 iterations 11
Cbc0038I Pass  32: suminf.    0.99495 (5) obj. -31.942 iterations 10
Cbc0038I Pass  33: suminf.    1.00696 (5) obj. -31.942 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -27.5124 to -31.1333 (0.07 seconds)
Cbc0038I Round again with cutoff of -39.9151
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.76125 (32) obj. -57.832 iterations 0
Cbc0038I Pass  34: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass  35: suminf.    0.79663 (10) obj. -39.9151 iterations 24
Cbc0038I Pass  36: suminf.    0.79109 (10) obj. -40.0042 iterations 1
Cbc0038I Pass  37: suminf.    1.75627 (12) obj. -39.9151 iterations 25
Cbc0038I Pass  38: suminf.    1.75627 (12) obj. -39.9151 iterations 0
Cbc0038I Pass  39: suminf.    1.65354 (9) obj. -39.9151 iterations 17
Cbc0038I Pass  40: suminf.    1.40210 (10) obj. -39.9151 iterations 6
Cbc0038I Pass  41: suminf.    1.42325 (10) obj. -39.9151 iterations 15
Cbc0038I Pass  42: suminf.    1.42325 (10) obj. -39.9151 iterations 3
Cbc0038I Pass  43: suminf.    1.40210 (10) obj. -39.9151 iterations 4
Cbc0038I Pass  44: suminf.    1.86284 (16) obj. -39.9151 iterations 20
Cbc0038I Pass  45: suminf.    1.77644 (14) obj. -39.9151 iterations 5
Cbc0038I Pass  46: suminf.    2.17289 (11) obj. -39.9151 iterations 26
Cbc0038I Pass  47: suminf.    2.13185 (11) obj. -39.9151 iterations 3
Cbc0038I Pass  48: suminf.    2.91002 (11) obj. -39.9151 iterations 9
Cbc0038I Pass  49: suminf.    2.91002 (11) obj. -39.9151 iterations 1
Cbc0038I Pass  50: suminf.    2.77255 (10) obj. -39.9151 iterations 3
Cbc0038I Pass  51: suminf.    2.16520 (10) obj. -39.9151 iterations 5
Cbc0038I Pass  52: suminf.    2.17099 (10) obj. -39.9151 iterations 7
Cbc0038I Pass  53: suminf.    2.17099 (10) obj. -39.9151 iterations 1
Cbc0038I Pass  54: suminf.    2.77255 (10) obj. -39.9151 iterations 4
Cbc0038I Pass  55: suminf.    2.86192 (13) obj. -39.9151 iterations 15
Cbc0038I Pass  56: suminf.    2.30773 (13) obj. -39.9151 iterations 7
Cbc0038I Pass  57: suminf.    2.77255 (10) obj. -39.9151 iterations 19
Cbc0038I Pass  58: suminf.    2.16520 (10) obj. -39.9151 iterations 5
Cbc0038I Pass  59: suminf.    2.17099 (10) obj. -39.9151 iterations 8
Cbc0038I Pass  60: suminf.    2.17099 (10) obj. -39.9151 iterations 1
Cbc0038I Pass  61: suminf.    2.77255 (10) obj. -39.9151 iterations 5
Cbc0038I Pass  62: suminf.    1.56807 (17) obj. -39.9151 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 31 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -31.1333 to -36.4222 (0.14 seconds)
Cbc0038I Round again with cutoff of -49.4828
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.76125 (32) obj. -57.832 iterations 0
Cbc0038I Pass  63: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass  64: suminf.    1.36679 (19) obj. -49.4828 iterations 15
Cbc0038I Pass  65: suminf.    1.31427 (19) obj. -50.354 iterations 1
Cbc0038I Pass  66: suminf.    2.11281 (20) obj. -49.4828 iterations 36
Cbc0038I Pass  67: suminf.    1.93986 (22) obj. -49.4828 iterations 5
Cbc0038I Pass  68: suminf.    2.11281 (20) obj. -49.4828 iterations 6
Cbc0038I Pass  69: suminf.    1.88458 (22) obj. -49.4828 iterations 4
Cbc0038I Pass  70: suminf.    2.62820 (19) obj. -49.4828 iterations 17
Cbc0038I Pass  71: suminf.    2.62820 (19) obj. -49.4828 iterations 3
Cbc0038I Pass  72: suminf.    2.66791 (19) obj. -49.4828 iterations 6
Cbc0038I Pass  73: suminf.    2.66791 (19) obj. -49.4828 iterations 4
Cbc0038I Pass  74: suminf.    2.62820 (19) obj. -49.4828 iterations 7
Cbc0038I Pass  75: suminf.    3.39670 (23) obj. -49.4828 iterations 19
Cbc0038I Pass  76: suminf.    2.03197 (22) obj. -49.4828 iterations 11
Cbc0038I Pass  77: suminf.    2.03197 (22) obj. -49.4828 iterations 1
Cbc0038I Pass  78: suminf.    3.00953 (20) obj. -49.4828 iterations 25
Cbc0038I Pass  79: suminf.    1.91288 (22) obj. -49.4828 iterations 3
Cbc0038I Pass  80: suminf.    1.91288 (22) obj. -49.4828 iterations 0
Cbc0038I Pass  81: suminf.    3.00953 (20) obj. -49.4828 iterations 10
Cbc0038I Pass  82: suminf.    3.19937 (22) obj. -49.4828 iterations 18
Cbc0038I Pass  83: suminf.    3.03329 (22) obj. -49.4828 iterations 4
Cbc0038I Pass  84: suminf.    3.12105 (20) obj. -49.4828 iterations 13
Cbc0038I Pass  85: suminf.    2.69042 (23) obj. -49.4828 iterations 4
Cbc0038I Pass  86: suminf.    3.00953 (20) obj. -49.4828 iterations 18
Cbc0038I Pass  87: suminf.    1.91288 (22) obj. -49.4828 iterations 3
Cbc0038I Pass  88: suminf.    1.91288 (22) obj. -49.4828 iterations 0
Cbc0038I Pass  89: suminf.    2.66791 (19) obj. -49.4828 iterations 12
Cbc0038I Pass  90: suminf.    2.66791 (19) obj. -49.4828 iterations 4
Cbc0038I Pass  91: suminf.    2.62820 (19) obj. -49.4828 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 40 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -36.4222 - took 0.12 seconds
Cbc0012I Integer solution of -36.422168 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 118 rows 143 columns, reduced to 28 rows 32 columns
Cbc0031I 55 added rows had average density of 36.890909
Cbc0013I At root node, 55 cuts changed objective from -71.807517 to -47.193415 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11329 row cuts average 10.8 elements, 5 column cuts (5 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1459 row cuts average 121.3 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 316 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 729 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 311 row cuts average 80.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 242 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.676 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.422168 best solution, best possible -47.193415 (2.49 seconds)
Cbc0012I Integer solution of -37.601918 found by DiveCoefficient after 4007 iterations and 4 nodes (3.03 seconds)
Cbc0010I After 10 nodes, 7 on tree, -37.601918 best solution, best possible -46.594496 (3.21 seconds)
Cbc0012I Integer solution of -38.78659 found by rounding after 4132 iterations and 11 nodes (3.26 seconds)
Cbc0012I Integer solution of -40.96204 found by DiveCoefficient after 4258 iterations and 13 nodes (3.36 seconds)
Cbc0016I Integer solution of -41.37877 found by strong branching after 4849 iterations and 34 nodes (3.91 seconds)
Cbc0010I After 34 nodes, 11 on tree, -41.37877 best solution, best possible -46.594496 (3.91 seconds)
Cbc0038I Full problem 118 rows 143 columns, reduced to 9 rows 15 columns
Cbc0016I Integer solution of -41.66873 found by strong branching after 5268 iterations and 44 nodes (4.40 seconds)
Cbc0010I After 49 nodes, 10 on tree, -41.66873 best solution, best possible -46.594496 (4.63 seconds)
Cbc0010I After 66 nodes, 9 on tree, -41.66873 best solution, best possible -46.594496 (5.35 seconds)
Cbc0001I Search completed - best objective -41.66873, took 6836 iterations and 80 nodes (5.61 seconds)
Cbc0032I Strong branching done 916 times (11904 iterations), fathomed 11 nodes and fixed 15 variables
Cbc0035I Maximum depth 19, 417 variables fixed on reduced cost
Total time (CPU seconds):       3.88   (Wallclock seconds):       5.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 100 (-3) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 0.00012527 - average 7.24103e-07, 47 fixed columns
Coin0506I Presolve 71 (-102) rows, 46 (-54) columns and 226 (-312) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Coin0511I After Postsolve, objective 64.906238, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2035531 - largest nonzero change 0 ( 0%) - largest zero change 2.9789125e-05
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Clp0000I Optimal - objective value 64.906238
Coin0511I After Postsolve, objective 64.906238, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.90623848 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 100 columns (99 integer (99 of which binary)) and 541 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.876%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.23532
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.1518 iterations 42
Cbc0038I Solution found of 0.1518
Cbc0038I Relaxing continuous gives 0.1518
Cbc0038I Rounding solution of -24.9215 is better than previous of 0.1518

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 35 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -24.9215 to -40.752 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.1675
Cbc0038I Pass   2: suminf.    1.81163 (7) obj. -43.1675 iterations 11
Cbc0038I Pass   3: suminf.    0.71751 (3) obj. -43.1675 iterations 7
Cbc0038I Pass   4: suminf.    0.72124 (4) obj. -43.1675 iterations 9
Cbc0038I Pass   5: suminf.    0.72124 (4) obj. -43.1675 iterations 0
Cbc0038I Pass   6: suminf.    0.99344 (3) obj. -43.1675 iterations 9
Cbc0038I Pass   7: suminf.    0.99344 (3) obj. -43.1675 iterations 0
Cbc0038I Pass   8: suminf.    2.95224 (10) obj. -43.1675 iterations 22
Cbc0038I Pass   9: suminf.    2.14686 (10) obj. -43.1675 iterations 17
Cbc0038I Pass  10: suminf.    2.14686 (10) obj. -43.1675 iterations 0
Cbc0038I Pass  11: suminf.    1.81989 (7) obj. -43.1675 iterations 21
Cbc0038I Pass  12: suminf.    1.52944 (5) obj. -43.1675 iterations 3
Cbc0038I Pass  13: suminf.    1.00073 (4) obj. -43.1675 iterations 12
Cbc0038I Pass  14: suminf.    1.00073 (4) obj. -43.1675 iterations 1
Cbc0038I Pass  15: suminf.    1.26027 (3) obj. -43.1675 iterations 9
Cbc0038I Pass  16: suminf.    0.96876 (4) obj. -43.1675 iterations 4
Cbc0038I Pass  17: suminf.    0.78127 (4) obj. -43.1675 iterations 9
Cbc0038I Pass  18: suminf.    1.03205 (4) obj. -43.1675 iterations 7
Cbc0038I Pass  19: suminf.    0.66432 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  20: suminf.    4.63889 (13) obj. -43.1675 iterations 41
Cbc0038I Pass  21: suminf.    1.22388 (6) obj. -43.1675 iterations 20
Cbc0038I Pass  22: suminf.    1.23287 (8) obj. -43.1675 iterations 4
Cbc0038I Pass  23: suminf.    1.52273 (6) obj. -43.1675 iterations 21
Cbc0038I Pass  24: suminf.    1.34885 (6) obj. -43.1675 iterations 4
Cbc0038I Pass  25: suminf.    1.08545 (3) obj. -43.1675 iterations 14
Cbc0038I Pass  26: suminf.    0.90991 (3) obj. -43.1675 iterations 3
Cbc0038I Pass  27: suminf.    1.01537 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  28: suminf.    1.00556 (3) obj. -43.1675 iterations 2
Cbc0038I Pass  29: suminf.    0.97199 (3) obj. -43.1675 iterations 4
Cbc0038I Pass  30: suminf.    0.76991 (3) obj. -43.1675 iterations 3
Cbc0038I Pass  31: suminf.    4.42113 (12) obj. -43.1675 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 66 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -40.752 to -41.4433 (0.07 seconds)
Cbc0038I Round again with cutoff of -47.5153
Cbc0038I Pass  31: suminf.    2.14253 (7) obj. -47.5153 iterations 0
Cbc0038I Pass  32: suminf.    1.08364 (4) obj. -47.5153 iterations 12
Cbc0038I Pass  33: suminf.    1.41521 (5) obj. -47.5153 iterations 5
Cbc0038I Pass  34: suminf.    1.10671 (7) obj. -47.5153 iterations 14
Cbc0038I Pass  35: suminf.    1.22886 (7) obj. -47.5153 iterations 18
Cbc0038I Pass  36: suminf.    1.14652 (7) obj. -47.5153 iterations 1
Cbc0038I Pass  37: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  38: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  39: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  40: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  41: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  42: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  43: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  44: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  45: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  46: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  47: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  48: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  49: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  50: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  51: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  52: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  53: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  54: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I Pass  55: suminf.    2.66861 (7) obj. -47.5153 iterations 13
Cbc0038I Pass  56: suminf.    1.78490 (6) obj. -47.5153 iterations 11
Cbc0038I Pass  57: suminf.    1.77903 (8) obj. -47.5153 iterations 9
Cbc0038I Pass  58: suminf.    1.97696 (6) obj. -47.5153 iterations 21
Cbc0038I Pass  59: suminf.    1.16776 (6) obj. -47.5153 iterations 6
Cbc0038I Pass  60: suminf.    1.14652 (7) obj. -47.5153 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 100 columns, reduced to 39 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -41.4433 - took 0.07 seconds
Cbc0012I Integer solution of -41.44332 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 173 rows 100 columns, reduced to 36 rows 24 columns
Cbc0031I 16 added rows had average density of 68.25
Cbc0013I At root node, 16 cuts changed objective from -64.906238 to -55.419217 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5624 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1469 row cuts average 97.1 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -41.44332 best solution, best possible -55.419215 (0.68 seconds)
Cbc0012I Integer solution of -41.66751 found by rounding after 4761 iterations and 15 nodes (0.70 seconds)
Cbc0012I Integer solution of -41.66873 found by rounding after 5306 iterations and 43 nodes (0.75 seconds)
Cbc0001I Search completed - best objective -41.66873, took 6322 iterations and 80 nodes (0.85 seconds)
Cbc0032I Strong branching done 632 times (8312 iterations), fathomed 9 nodes and fixed 55 variables
Cbc0035I Maximum depth 13, 419 variables fixed on reduced cost
Total time (CPU seconds):       0.82   (Wallclock seconds):       0.86

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-87) rows, 143 (-60) columns and 2571 (-3083) elements
Clp1000I sum of infeasibilities 1.65308e-07 - average 1.40091e-09, 86 fixed columns
Coin0506I Presolve 36 (-82) rows, 57 (-86) columns and 181 (-2390) elements
Clp0006I 0  Obj 20.18296 Dual inf 5.5548806 (57)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 1.2895705 - largest nonzero change 1.357918e-05 ( 0.0008409402%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 21.115843
Clp0000I Optimal - objective value 21.115843
Coin0511I After Postsolve, objective 21.115843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21.115843 Dual inf 77.836817 (45)
Clp0014I Perturbing problem by 0.001% of 1.4377122 - largest nonzero change 2.5816127e-05 ( 0.0025816127%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 82.590583
Clp0000I Optimal - objective value 82.590583
Clp0000I Optimal - objective value 82.590583
Coin0511I After Postsolve, objective 82.590583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.59058315 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 143 columns (143 integer (143 of which binary)) and 2576 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.865%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 4.76695
Cbc0038I Pass   1: suminf.    1.76125 (32) obj. -57.832 iterations 18
Cbc0038I Pass   2: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass   3: suminf.    0.53804 (12) obj. -33.417 iterations 20
Cbc0038I Solution found of -21.955
Cbc0038I Rounding solution of -24.769 is better than previous of -21.955

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -24.769 to -27.5124 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.0788
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.76125 (32) obj. -57.832 iterations 0
Cbc0038I Pass   5: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass   6: suminf.    0.48997 (8) obj. -32.0788 iterations 26
Cbc0038I Pass   7: suminf.    0.63182 (8) obj. -32.0788 iterations 17
Cbc0038I Pass   8: suminf.    1.03679 (5) obj. -32.0788 iterations 12
Cbc0038I Pass   9: suminf.    1.03679 (5) obj. -32.0788 iterations 5
Cbc0038I Pass  10: suminf.    1.15159 (6) obj. -32.0788 iterations 8
Cbc0038I Pass  11: suminf.    0.97404 (6) obj. -32.0788 iterations 6
Cbc0038I Pass  12: suminf.    1.30249 (6) obj. -32.0788 iterations 17
Cbc0038I Pass  13: suminf.    1.30249 (6) obj. -32.0788 iterations 5
Cbc0038I Pass  14: suminf.    0.66574 (6) obj. -32.0788 iterations 6
Cbc0038I Pass  15: suminf.    0.60290 (6) obj. -32.0788 iterations 6
Cbc0038I Pass  16: suminf.    1.38087 (6) obj. -32.0788 iterations 13
Cbc0038I Pass  17: suminf.    2.14816 (17) obj. -32.0788 iterations 34
Cbc0038I Pass  18: suminf.    1.00929 (14) obj. -33.8348 iterations 6
Cbc0038I Pass  19: suminf.    1.27542 (5) obj. -32.0788 iterations 26
Cbc0038I Pass  20: suminf.    1.17899 (8) obj. -32.0788 iterations 6
Cbc0038I Pass  21: suminf.    0.71714 (5) obj. -32.0788 iterations 11
Cbc0038I Pass  22: suminf.    0.70468 (6) obj. -32.0788 iterations 8
Cbc0038I Pass  23: suminf.    0.99512 (8) obj. -32.0788 iterations 12
Cbc0038I Pass  24: suminf.    0.99512 (8) obj. -32.0788 iterations 0
Cbc0038I Pass  25: suminf.    1.20416 (7) obj. -32.0788 iterations 15
Cbc0038I Pass  26: suminf.    0.65218 (5) obj. -32.3469 iterations 5
Cbc0038I Pass  27: suminf.    1.20416 (7) obj. -32.0788 iterations 10
Cbc0038I Pass  28: suminf.    1.91222 (14) obj. -32.0788 iterations 22
Cbc0038I Pass  29: suminf.    1.75393 (15) obj. -32.0788 iterations 3
Cbc0038I Pass  30: suminf.    2.67057 (9) obj. -32.0788 iterations 29
Cbc0038I Pass  31: suminf.    1.08254 (6) obj. -32.0788 iterations 7
Cbc0038I Pass  32: suminf.    1.07492 (5) obj. -32.0788 iterations 1
Cbc0038I Pass  33: suminf.    1.79618 (8) obj. -32.0788 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 48 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -27.5124 to -36.7624 (0.08 seconds)
Cbc0038I Round again with cutoff of -44.0452
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.76125 (32) obj. -57.832 iterations 0
Cbc0038I Pass  34: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass  35: suminf.    2.01524 (19) obj. -44.0452 iterations 37
Cbc0038I Pass  36: suminf.    2.16448 (14) obj. -44.0452 iterations 25
Cbc0038I Pass  37: suminf.    2.14165 (14) obj. -44.0452 iterations 7
Cbc0038I Pass  38: suminf.    2.00999 (12) obj. -44.0452 iterations 13
Cbc0038I Pass  39: suminf.    2.00999 (12) obj. -44.0452 iterations 1
Cbc0038I Pass  40: suminf.    2.02226 (12) obj. -44.0452 iterations 6
Cbc0038I Pass  41: suminf.    2.02226 (12) obj. -44.0452 iterations 5
Cbc0038I Pass  42: suminf.    2.00999 (12) obj. -44.0452 iterations 10
Cbc0038I Pass  43: suminf.    1.97180 (12) obj. -44.0452 iterations 13
Cbc0038I Pass  44: suminf.    1.82473 (12) obj. -44.0452 iterations 7
Cbc0038I Pass  45: suminf.    1.80010 (11) obj. -44.0452 iterations 14
Cbc0038I Pass  46: suminf.    1.72855 (11) obj. -44.0452 iterations 5
Cbc0038I Pass  47: suminf.    2.78313 (16) obj. -44.0452 iterations 18
Cbc0038I Pass  48: suminf.    1.46852 (12) obj. -44.0452 iterations 8
Cbc0038I Pass  49: suminf.    1.85402 (11) obj. -44.0452 iterations 19
Cbc0038I Pass  50: suminf.    4.99975 (21) obj. -44.0452 iterations 19
Cbc0038I Pass  51: suminf.    2.14452 (16) obj. -44.0452 iterations 15
Cbc0038I Pass  52: suminf.    2.10855 (16) obj. -44.0452 iterations 4
Cbc0038I Pass  53: suminf.    2.96556 (14) obj. -44.0452 iterations 13
Cbc0038I Pass  54: suminf.    2.12788 (13) obj. -44.0452 iterations 6
Cbc0038I Pass  55: suminf.    2.12788 (13) obj. -44.0452 iterations 0
Cbc0038I Pass  56: suminf.    2.36229 (12) obj. -44.0452 iterations 8
Cbc0038I Pass  57: suminf.    1.72855 (11) obj. -44.0452 iterations 7
Cbc0038I Pass  58: suminf.    1.80010 (11) obj. -44.0452 iterations 4
Cbc0038I Pass  59: suminf.    2.16061 (16) obj. -44.0452 iterations 17
Cbc0038I Pass  60: suminf.    2.16061 (16) obj. -44.0452 iterations 4
Cbc0038I Pass  61: suminf.    3.02229 (13) obj. -44.0452 iterations 24
Cbc0038I Pass  62: suminf.    2.47951 (13) obj. -44.0452 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -36.7624 to -41.0995 (0.17 seconds)
Cbc0038I Round again with cutoff of -52.7845
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.76125 (32) obj. -57.832 iterations 0
Cbc0038I Pass  63: suminf.    1.76125 (32) obj. -57.832 iterations 1
Cbc0038I Pass  64: suminf.    1.42260 (27) obj. -52.7845 iterations 29
Cbc0038I Pass  65: suminf.    1.35180 (25) obj. -52.7845 iterations 9
Cbc0038I Pass  66: suminf.    3.15851 (22) obj. -52.7845 iterations 34
Cbc0038I Pass  67: suminf.    2.77530 (24) obj. -52.7845 iterations 5
Cbc0038I Pass  68: suminf.    2.55857 (22) obj. -52.7845 iterations 10
Cbc0038I Pass  69: suminf.    2.53827 (22) obj. -52.7845 iterations 7
Cbc0038I Pass  70: suminf.    2.70874 (21) obj. -52.7845 iterations 13
Cbc0038I Pass  71: suminf.    2.62045 (22) obj. -52.7845 iterations 6
Cbc0038I Pass  72: suminf.    2.70874 (21) obj. -52.7845 iterations 13
Cbc0038I Pass  73: suminf.    3.50603 (25) obj. -52.7845 iterations 23
Cbc0038I Pass  74: suminf.    3.43543 (24) obj. -52.7845 iterations 7
Cbc0038I Pass  75: suminf.    2.70874 (22) obj. -52.7845 iterations 13
Cbc0038I Pass  76: suminf.    2.70271 (23) obj. -52.7845 iterations 3
Cbc0038I Pass  77: suminf.    2.73999 (23) obj. -52.7845 iterations 11
Cbc0038I Pass  78: suminf.    2.73999 (23) obj. -52.7845 iterations 5
Cbc0038I Pass  79: suminf.    2.70874 (21) obj. -52.7845 iterations 18
Cbc0038I Pass  80: suminf.    2.62045 (22) obj. -52.7845 iterations 6
Cbc0038I Pass  81: suminf.    2.70874 (21) obj. -52.7845 iterations 13
Cbc0038I Pass  82: suminf.    4.04198 (24) obj. -52.7845 iterations 18
Cbc0038I Pass  83: suminf.    3.76310 (25) obj. -52.7845 iterations 3
Cbc0038I Pass  84: suminf.    4.04198 (24) obj. -52.7845 iterations 11
Cbc0038I Pass  85: suminf.    3.65828 (25) obj. -52.7845 iterations 5
Cbc0038I Pass  86: suminf.    4.04198 (24) obj. -52.7845 iterations 12
Cbc0038I Pass  87: suminf.    4.54945 (28) obj. -52.7845 iterations 24
Cbc0038I Pass  88: suminf.    3.67169 (25) obj. -52.7845 iterations 7
Cbc0038I Pass  89: suminf.    3.91177 (23) obj. -52.7845 iterations 16
Cbc0038I Pass  90: suminf.    3.52094 (24) obj. -52.7845 iterations 12
Cbc0038I Pass  91: suminf.    3.27952 (21) obj. -52.7845 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 143 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -41.0995 - took 0.15 seconds
Cbc0012I Integer solution of -41.09951 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 118 rows 143 columns, reduced to 8 rows 9 columns
Cbc0031I 57 added rows had average density of 16.614035
Cbc0013I At root node, 57 cuts changed objective from -73.176022 to -48.405712 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 2759 row cuts average 9.8 elements, 9 column cuts (28 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 312 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 83.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -41.09951 best solution, best possible -48.405712 (0.69 seconds)
Cbc0010I After 10 nodes, 8 on tree, -41.09951 best solution, best possible -46.556239 (1.43 seconds)
Cbc0010I After 34 nodes, 15 on tree, -41.09951 best solution, best possible -46.556239 (2.16 seconds)
Cbc0038I Full problem 118 rows 143 columns, reduced to 10 rows 15 columns
Cbc0012I Integer solution of -41.44332 found by RINS after 1783 iterations and 41 nodes (2.38 seconds)
Cbc0016I Integer solution of -41.66751 found by strong branching after 1889 iterations and 46 nodes (2.53 seconds)
Cbc0016I Integer solution of -41.66873 found by strong branching after 1929 iterations and 48 nodes (2.58 seconds)
Cbc0038I Full problem 175 rows 143 columns, reduced to 102 rows 127 columns
Cbc0044I Reduced cost fixing - 102 rows, 127 columns - restarting search
Cbc0038I Initial state - 45 integers unsatisfied sum - 6.29582
Cbc0038I Pass   1: suminf.    2.20410 (31) obj. -66.4976 iterations 20
Cbc0038I Pass   2: suminf.    1.71324 (27) obj. -64.0511 iterations 2
Cbc0038I Pass   3: suminf.    0.79934 (7) obj. -41.6687 iterations 40
Cbc0038I Pass   4: suminf.    0.51329 (7) obj. -41.6687 iterations 4
Cbc0038I Pass   5: suminf.    1.49494 (5) obj. -41.6687 iterations 12
Cbc0038I Pass   6: suminf.    1.49494 (5) obj. -41.6687 iterations 3
Cbc0038I Pass   7: suminf.    0.59066 (4) obj. -41.6687 iterations 13
Cbc0038I Pass   8: suminf.    0.28616 (4) obj. -41.6687 iterations 9
Cbc0038I Pass   9: suminf.    0.59066 (4) obj. -41.6687 iterations 4
Cbc0038I Pass  10: suminf.    2.57069 (16) obj. -41.6687 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.65 seconds)
Cbc0038I Full problem 103 rows 127 columns, reduced to 103 rows 127 columns - too large
Cbc0038I After 2.66 seconds - Feasibility pump exiting - took 0.02 seconds
Cbc0031I 50 added rows had average density of 43.52
Cbc0013I At root node, 50 cuts changed objective from -72.244815 to -47.12112 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4961 row cuts average 2.6 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 401 row cuts average 116.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 274 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 816 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 856 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 154 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.764 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 740 row cuts average 14.9 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -47.12112 (5.10 seconds)
Cbc0010I After 23 nodes, 8 on tree, 1e+50 best solution, best possible -47.12112 (6.11 seconds)
Cbc0010I After 38 nodes, 5 on tree, 1e+50 best solution, best possible -47.12112 (7.12 seconds)
Cbc0010I After 58 nodes, 8 on tree, 1e+50 best solution, best possible -47.12112 (8.14 seconds)
Cbc0010I After 91 nodes, 8 on tree, 1e+50 best solution, best possible -47.12112 (9.23 seconds)
Cbc0001I Search completed - best objective 1e+50, took 9864 iterations and 120 nodes (9.77 seconds)
Cbc0032I Strong branching done 1418 times (19553 iterations), fathomed 10 nodes and fixed 32 variables
Cbc0035I Maximum depth 13, 622 variables fixed on reduced cost
Cbc0038I Probing was tried 365 times and created 6579 cuts of which 0 were active after adding rounds of cuts (0.214 seconds)
Cbc0038I Gomory was tried 355 times and created 413 cuts of which 0 were active after adding rounds of cuts (0.198 seconds)
Cbc0038I Knapsack was tried 355 times and created 1746 cuts of which 0 were active after adding rounds of cuts (0.133 seconds)
Cbc0038I Clique was tried 355 times and created 2033 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Cbc0038I MixedIntegerRounding2 was tried 355 times and created 1711 cuts of which 0 were active after adding rounds of cuts (0.165 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I TwoMirCuts was tried 355 times and created 304 cuts of which 0 were active after adding rounds of cuts (0.095 seconds)
Cbc0038I ZeroHalf was tried 355 times and created 720 cuts of which 0 were active after adding rounds of cuts (2.578 seconds)
Cbc0038I Stored from first was tried 355 times and created 1439 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -41.66873, took 11829 iterations and 170 nodes (9.77 seconds)
Cbc0032I Strong branching done 764 times (8730 iterations), fathomed 5 nodes and fixed 11 variables
Cbc0035I Maximum depth 21, 171 variables fixed on reduced cost
Total time (CPU seconds):       6.21   (Wallclock seconds):       9.78

