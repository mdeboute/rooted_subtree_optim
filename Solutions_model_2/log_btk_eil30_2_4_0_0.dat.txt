Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 29 (-3) columns and 155 (-22) elements
Clp1000I sum of infeasibilities 0.0010145 - average 1.95097e-05, 9 fixed columns
Coin0506I Presolve 28 (-24) rows, 20 (-9) columns and 90 (-65) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 136.35413
Clp0000I Optimal - objective value 136.35413
Coin0511I After Postsolve, objective 136.35413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 136.35413
Clp0000I Optimal - objective value 136.35413
Clp0000I Optimal - objective value 136.35413
Coin0511I After Postsolve, objective 136.35413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.3541321 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 29 columns (28 integer (28 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.799%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.43441
Cbc0038I Pass   1: suminf.    0.12403 (2) obj. -43.6094 iterations 13
Cbc0038I Solution found of 30.6632
Cbc0038I Relaxing continuous gives 30.6632
Cbc0038I Rounding solution of -25.2405 is better than previous of 30.6632

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -25.2405 to -63.6356 (0.01 seconds)
Cbc0038I Round again with cutoff of -70.4895
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.69510 (6) obj. -70.4895 iterations 3
Cbc0038I Pass   3: suminf.    0.51617 (2) obj. -70.4895 iterations 10
Cbc0038I Pass   4: suminf.    0.51617 (2) obj. -70.4895 iterations 0
Cbc0038I Pass   5: suminf.    0.75028 (2) obj. -70.4895 iterations 3
Cbc0038I Pass   6: suminf.    0.51617 (2) obj. -70.4895 iterations 1
Cbc0038I Pass   7: suminf.    0.80738 (4) obj. -70.4895 iterations 9
Cbc0038I Pass   8: suminf.    0.66947 (4) obj. -70.4895 iterations 5
Cbc0038I Pass   9: suminf.    1.24216 (3) obj. -70.4895 iterations 5
Cbc0038I Pass  10: suminf.    0.65962 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  11: suminf.    0.53201 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  12: suminf.    0.65962 (2) obj. -70.4895 iterations 2
Cbc0038I Pass  13: suminf.    1.24202 (4) obj. -70.4895 iterations 3
Cbc0038I Pass  14: suminf.    0.37727 (1) obj. -70.4895 iterations 3
Cbc0038I Pass  15: suminf.    0.27176 (1) obj. -70.4895 iterations 1
Cbc0038I Pass  16: suminf.    1.42870 (8) obj. -70.4895 iterations 7
Cbc0038I Pass  17: suminf.    1.07617 (7) obj. -70.4895 iterations 1
Cbc0038I Pass  18: suminf.    1.11862 (3) obj. -70.4895 iterations 11
Cbc0038I Pass  19: suminf.    0.44725 (3) obj. -70.4895 iterations 1
Cbc0038I Pass  20: suminf.    0.44725 (3) obj. -70.4895 iterations 0
Cbc0038I Pass  21: suminf.    1.24216 (3) obj. -70.4895 iterations 4
Cbc0038I Pass  22: suminf.    0.65962 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  23: suminf.    0.53201 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  24: suminf.    0.65962 (2) obj. -70.4895 iterations 2
Cbc0038I Pass  25: suminf.    1.26646 (5) obj. -70.4895 iterations 2
Cbc0038I Pass  26: suminf.    0.88281 (3) obj. -70.4895 iterations 2
Cbc0038I Pass  27: suminf.    1.11831 (5) obj. -70.4895 iterations 3
Cbc0038I Pass  28: suminf.    0.65016 (2) obj. -70.4895 iterations 2
Cbc0038I Pass  29: suminf.    2.77837 (8) obj. -70.4895 iterations 15
Cbc0038I Pass  30: suminf.    1.67856 (6) obj. -70.4895 iterations 7
Cbc0038I Pass  31: suminf.    1.10812 (4) obj. -70.4895 iterations 6
Cbc0038I Rounding solution of -68.3106 is better than previous of -63.6356

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 43 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -82.8262
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.04876 (6) obj. -82.8262 iterations 0
Cbc0038I Pass  32: suminf.    0.88398 (3) obj. -82.8262 iterations 10
Cbc0038I Pass  33: suminf.    0.88398 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  34: suminf.    1.30985 (3) obj. -82.8262 iterations 4
Cbc0038I Pass  35: suminf.    1.05897 (3) obj. -82.8262 iterations 1
Cbc0038I Pass  36: suminf.    1.05897 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  37: suminf.    1.46499 (3) obj. -82.8262 iterations 3
Cbc0038I Pass  38: suminf.    1.05897 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  39: suminf.    2.18674 (7) obj. -82.8262 iterations 9
Cbc0038I Pass  40: suminf.    1.78667 (6) obj. -82.8262 iterations 2
Cbc0038I Pass  41: suminf.    0.29741 (4) obj. -82.8262 iterations 8
Cbc0038I Pass  42: suminf.    0.21928 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  43: suminf.    1.11932 (3) obj. -82.8262 iterations 7
Cbc0038I Pass  44: suminf.    1.11932 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  45: suminf.    1.08524 (4) obj. -82.8262 iterations 5
Cbc0038I Pass  46: suminf.    0.88398 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  47: suminf.    0.88398 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  48: suminf.    1.30985 (3) obj. -82.8262 iterations 4
Cbc0038I Pass  49: suminf.    1.05897 (3) obj. -82.8262 iterations 1
Cbc0038I Pass  50: suminf.    1.05897 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  51: suminf.    1.46499 (3) obj. -82.8262 iterations 3
Cbc0038I Pass  52: suminf.    1.05897 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  53: suminf.    3.78496 (12) obj. -82.8262 iterations 11
Cbc0038I Pass  54: suminf.    2.25158 (6) obj. -82.8262 iterations 6
Cbc0038I Pass  55: suminf.    0.96472 (6) obj. -82.8262 iterations 1
Cbc0038I Pass  56: suminf.    0.96472 (6) obj. -82.8262 iterations 0
Cbc0038I Pass  57: suminf.    0.88745 (4) obj. -82.8262 iterations 7
Cbc0038I Pass  58: suminf.    0.88745 (4) obj. -82.8262 iterations 0
Cbc0038I Pass  59: suminf.    1.64079 (4) obj. -82.8262 iterations 6
Cbc0038I Pass  60: suminf.    0.60899 (2) obj. -82.8262 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -68.3106 - took 0.05 seconds
Cbc0012I Integer solution of -68.3106 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 52 rows 29 columns, reduced to 26 rows 18 columns
Cbc0031I 10 added rows had average density of 12
Cbc0013I At root node, 10 cuts changed objective from -132.17324 to -73.104615 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1252 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 757 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -68.31059999999999, took 1761 iterations and 2 nodes (0.14 seconds)
Cbc0032I Strong branching done 16 times (167 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-13) rows, 53 (-7) columns and 499 (-113) elements
Clp1000I sum of infeasibilities 3.63798e-11 - average 7.42445e-13, 48 fixed columns
Coin0506I Presolve 5 (-44) rows, 5 (-48) columns and 16 (-483) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 40.210416
Clp0000I Optimal - objective value 40.210416
Coin0511I After Postsolve, objective 40.210416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21648196 - largest nonzero change 0 ( 0%) - largest zero change 2.9831018e-05
Clp0000I Optimal - objective value 183.02064
Clp0000I Optimal - objective value 183.02064
Clp0000I Optimal - objective value 183.02064
Coin0511I After Postsolve, objective 183.02064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 183.0206447 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 54 columns (54 integer (54 of which binary)) and 511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.900%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.05506
Cbc0038I Pass   1: suminf.    3.25732 (16) obj. -112.28 iterations 5
Cbc0038I Pass   2: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Solution found of 25.9882
Cbc0038I Rounding solution of -25.2405 is better than previous of 25.9882

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -35.6819
Cbc0038I Pass   3: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass   4: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass   5: suminf.    0.57362 (2) obj. -35.6819 iterations 27
Cbc0038I Pass   6: suminf.    0.21705 (2) obj. -44.6014 iterations 2
Cbc0038I Pass   7: suminf.    1.60702 (7) obj. -35.6819 iterations 10
Cbc0038I Pass   8: suminf.    1.53654 (5) obj. -35.6819 iterations 4
Cbc0038I Pass   9: suminf.    1.08570 (4) obj. -35.6819 iterations 1
Cbc0038I Pass  10: suminf.    1.03986 (4) obj. -35.6819 iterations 2
Cbc0038I Pass  11: suminf.    1.03986 (4) obj. -35.6819 iterations 0
Cbc0038I Pass  12: suminf.    0.49520 (2) obj. -35.6819 iterations 4
Cbc0038I Pass  13: suminf.    0.40581 (2) obj. -38.0745 iterations 1
Cbc0038I Pass  14: suminf.    1.71533 (6) obj. -53.7508 iterations 9
Cbc0038I Pass  15: suminf.    0.84712 (4) obj. -35.6819 iterations 4
Cbc0038I Pass  16: suminf.    0.28834 (3) obj. -35.6819 iterations 7
Cbc0038I Pass  17: suminf.    0.28394 (3) obj. -35.6819 iterations 2
Cbc0038I Pass  18: suminf.    0.60666 (3) obj. -35.6819 iterations 4
Cbc0038I Pass  19: suminf.    0.60666 (3) obj. -35.6819 iterations 3
Cbc0038I Pass  20: suminf.    0.28834 (3) obj. -35.6819 iterations 5
Cbc0038I Pass  21: suminf.    2.49614 (8) obj. -35.6819 iterations 14
Cbc0038I Pass  22: suminf.    2.45959 (7) obj. -38.9484 iterations 1
Cbc0038I Pass  23: suminf.    1.69814 (7) obj. -35.6819 iterations 8
Cbc0038I Pass  24: suminf.    1.69814 (7) obj. -35.6819 iterations 0
Cbc0038I Pass  25: suminf.    1.55995 (6) obj. -35.6819 iterations 3
Cbc0038I Pass  26: suminf.    1.42500 (6) obj. -35.6819 iterations 4
Cbc0038I Pass  27: suminf.    1.72794 (6) obj. -35.6819 iterations 1
Cbc0038I Pass  28: suminf.    1.69553 (5) obj. -35.6819 iterations 1
Cbc0038I Pass  29: suminf.    1.45777 (5) obj. -35.6819 iterations 1
Cbc0038I Pass  30: suminf.    3.59335 (15) obj. -35.6819 iterations 16
Cbc0038I Pass  31: suminf.    2.93434 (12) obj. -35.6819 iterations 3
Cbc0038I Pass  32: suminf.    1.76702 (5) obj. -35.6819 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 25.9882 to -38.91 (0.02 seconds)
Cbc0038I Round again with cutoff of -57.0587
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  33: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  34: suminf.    0.67544 (3) obj. -57.0587 iterations 25
Cbc0038I Pass  35: suminf.    0.39352 (3) obj. -63.5426 iterations 2
Cbc0038I Pass  36: suminf.    3.58038 (12) obj. -57.0587 iterations 24
Cbc0038I Pass  37: suminf.    3.57397 (12) obj. -57.0587 iterations 2
Cbc0038I Pass  38: suminf.    1.06467 (5) obj. -57.0587 iterations 10
Cbc0038I Pass  39: suminf.    0.98442 (5) obj. -58.9044 iterations 1
Cbc0038I Pass  40: suminf.    1.10747 (5) obj. -57.0587 iterations 3
Cbc0038I Pass  41: suminf.    2.74860 (9) obj. -57.0587 iterations 7
Cbc0038I Pass  42: suminf.    2.74860 (9) obj. -57.0587 iterations 1
Cbc0038I Pass  43: suminf.    2.13277 (6) obj. -57.0587 iterations 7
Cbc0038I Pass  44: suminf.    1.96483 (6) obj. -57.0587 iterations 2
Cbc0038I Pass  45: suminf.    2.13277 (6) obj. -57.0587 iterations 3
Cbc0038I Pass  46: suminf.    2.68406 (9) obj. -57.0587 iterations 14
Cbc0038I Pass  47: suminf.    2.60080 (9) obj. -59.3822 iterations 2
Cbc0038I Pass  48: suminf.    1.48560 (6) obj. -57.0587 iterations 8
Cbc0038I Pass  49: suminf.    1.43009 (6) obj. -57.0587 iterations 2
Cbc0038I Pass  50: suminf.    0.87664 (5) obj. -57.0587 iterations 3
Cbc0038I Pass  51: suminf.    0.87664 (5) obj. -57.0587 iterations 1
Cbc0038I Pass  52: suminf.    1.23644 (5) obj. -57.0587 iterations 1
Cbc0038I Pass  53: suminf.    1.23644 (5) obj. -57.0587 iterations 0
Cbc0038I Pass  54: suminf.    0.87664 (5) obj. -57.0587 iterations 3
Cbc0038I Pass  55: suminf.    2.83279 (9) obj. -57.0587 iterations 7
Cbc0038I Pass  56: suminf.    2.47968 (8) obj. -57.0587 iterations 2
Cbc0038I Pass  57: suminf.    1.68128 (5) obj. -57.0587 iterations 7
Cbc0038I Pass  58: suminf.    1.59851 (5) obj. -57.0587 iterations 2
Cbc0038I Pass  59: suminf.    2.33237 (10) obj. -57.0587 iterations 9
Cbc0038I Pass  60: suminf.    2.33237 (10) obj. -57.0587 iterations 1
Cbc0038I Pass  61: suminf.    1.30509 (6) obj. -57.0587 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -38.91 to -45.6525 (0.03 seconds)
Cbc0038I Round again with cutoff of -78.8369
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  62: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  63: suminf.    1.04184 (8) obj. -78.8369 iterations 25
Cbc0038I Pass  64: suminf.    1.04184 (8) obj. -78.8369 iterations 2
Cbc0038I Pass  65: suminf.    0.83435 (4) obj. -78.8369 iterations 6
Cbc0038I Pass  66: suminf.    0.81810 (4) obj. -79.2107 iterations 2
Cbc0038I Pass  67: suminf.    1.40447 (7) obj. -79.821 iterations 8
Cbc0038I Pass  68: suminf.    1.31417 (6) obj. -79.6295 iterations 4
Cbc0038I Pass  69: suminf.    0.76630 (5) obj. -78.8369 iterations 6
Cbc0038I Pass  70: suminf.    0.76630 (5) obj. -78.8369 iterations 0
Cbc0038I Pass  71: suminf.    1.14150 (5) obj. -78.8369 iterations 1
Cbc0038I Pass  72: suminf.    1.14150 (5) obj. -78.8369 iterations 0
Cbc0038I Pass  73: suminf.    0.76630 (5) obj. -78.8369 iterations 2
Cbc0038I Pass  74: suminf.    1.53008 (6) obj. -78.8369 iterations 2
Cbc0038I Pass  75: suminf.    1.53008 (6) obj. -78.8369 iterations 0
Cbc0038I Pass  76: suminf.    0.83435 (4) obj. -78.8369 iterations 3
Cbc0038I Pass  77: suminf.    0.81810 (4) obj. -79.2107 iterations 1
Cbc0038I Pass  78: suminf.    3.45171 (10) obj. -78.8369 iterations 17
Cbc0038I Pass  79: suminf.    2.91068 (10) obj. -78.8369 iterations 2
Cbc0038I Pass  80: suminf.    2.91068 (10) obj. -78.8369 iterations 0
Cbc0038I Pass  81: suminf.    3.12518 (8) obj. -78.8369 iterations 6
Cbc0038I Pass  82: suminf.    2.29202 (7) obj. -78.8369 iterations 2
Cbc0038I Pass  83: suminf.    2.36103 (7) obj. -78.8369 iterations 2
Cbc0038I Pass  84: suminf.    2.29202 (7) obj. -78.8369 iterations 1
Cbc0038I Pass  85: suminf.    2.84303 (8) obj. -78.8369 iterations 8
Cbc0038I Pass  86: suminf.    2.84303 (8) obj. -78.8369 iterations 0
Cbc0038I Pass  87: suminf.    1.42471 (6) obj. -78.8369 iterations 4
Cbc0038I Pass  88: suminf.    1.42064 (6) obj. -78.898 iterations 1
Cbc0038I Pass  89: suminf.    1.61375 (6) obj. -78.8369 iterations 3
Cbc0038I Pass  90: suminf.    1.61375 (6) obj. -78.8369 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -45.6525 - took 0.03 seconds
Cbc0012I Integer solution of -45.65246 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 50 rows 54 columns, reduced to 7 rows 8 columns
Cbc0031I 23 added rows had average density of 7.5652174
Cbc0013I At root node, 23 cuts changed objective from -129.65291 to -68.310613 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 275 row cuts average 4.2 elements, 7 column cuts (7 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0012I Integer solution of -68.3106 found by rounding after 165 iterations and 1 nodes (0.17 seconds)
Cbc0011I Exiting as integer gap of 1.337302e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -68.31059999999999, took 174 iterations and 2 nodes (0.17 seconds)
Cbc0032I Strong branching done 8 times (74 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 29 (-3) columns and 155 (-22) elements
Clp1000I sum of infeasibilities 0.0010145 - average 1.95097e-05, 9 fixed columns
Coin0506I Presolve 28 (-24) rows, 20 (-9) columns and 90 (-65) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 136.35413
Clp0000I Optimal - objective value 136.35413
Coin0511I After Postsolve, objective 136.35413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 136.35413
Clp0000I Optimal - objective value 136.35413
Clp0000I Optimal - objective value 136.35413
Coin0511I After Postsolve, objective 136.35413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.3541321 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 29 columns (28 integer (28 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.799%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.43441
Cbc0038I Pass   1: suminf.    0.12403 (2) obj. -43.6094 iterations 13
Cbc0038I Solution found of 30.6632
Cbc0038I Relaxing continuous gives 30.6632
Cbc0038I Rounding solution of -25.2405 is better than previous of 30.6632

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -25.2405 to -63.6356 (0.01 seconds)
Cbc0038I Round again with cutoff of -70.4895
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.69510 (6) obj. -70.4895 iterations 3
Cbc0038I Pass   3: suminf.    0.51617 (2) obj. -70.4895 iterations 10
Cbc0038I Pass   4: suminf.    0.51617 (2) obj. -70.4895 iterations 0
Cbc0038I Pass   5: suminf.    0.75028 (2) obj. -70.4895 iterations 3
Cbc0038I Pass   6: suminf.    0.51617 (2) obj. -70.4895 iterations 1
Cbc0038I Pass   7: suminf.    0.80738 (4) obj. -70.4895 iterations 9
Cbc0038I Pass   8: suminf.    0.66947 (4) obj. -70.4895 iterations 5
Cbc0038I Pass   9: suminf.    1.24216 (3) obj. -70.4895 iterations 5
Cbc0038I Pass  10: suminf.    0.65962 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  11: suminf.    0.53201 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  12: suminf.    0.65962 (2) obj. -70.4895 iterations 2
Cbc0038I Pass  13: suminf.    1.24202 (4) obj. -70.4895 iterations 3
Cbc0038I Pass  14: suminf.    0.37727 (1) obj. -70.4895 iterations 3
Cbc0038I Pass  15: suminf.    0.27176 (1) obj. -70.4895 iterations 1
Cbc0038I Pass  16: suminf.    1.42870 (8) obj. -70.4895 iterations 7
Cbc0038I Pass  17: suminf.    1.07617 (7) obj. -70.4895 iterations 1
Cbc0038I Pass  18: suminf.    1.11862 (3) obj. -70.4895 iterations 11
Cbc0038I Pass  19: suminf.    0.44725 (3) obj. -70.4895 iterations 1
Cbc0038I Pass  20: suminf.    0.44725 (3) obj. -70.4895 iterations 0
Cbc0038I Pass  21: suminf.    1.24216 (3) obj. -70.4895 iterations 4
Cbc0038I Pass  22: suminf.    0.65962 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  23: suminf.    0.53201 (2) obj. -70.4895 iterations 1
Cbc0038I Pass  24: suminf.    0.65962 (2) obj. -70.4895 iterations 2
Cbc0038I Pass  25: suminf.    1.26646 (5) obj. -70.4895 iterations 2
Cbc0038I Pass  26: suminf.    0.88281 (3) obj. -70.4895 iterations 2
Cbc0038I Pass  27: suminf.    1.11831 (5) obj. -70.4895 iterations 3
Cbc0038I Pass  28: suminf.    0.65016 (2) obj. -70.4895 iterations 2
Cbc0038I Pass  29: suminf.    2.77837 (8) obj. -70.4895 iterations 15
Cbc0038I Pass  30: suminf.    1.67856 (6) obj. -70.4895 iterations 7
Cbc0038I Pass  31: suminf.    1.10812 (4) obj. -70.4895 iterations 6
Cbc0038I Rounding solution of -68.3106 is better than previous of -63.6356

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 43 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -82.8262
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.04876 (6) obj. -82.8262 iterations 0
Cbc0038I Pass  32: suminf.    0.88398 (3) obj. -82.8262 iterations 10
Cbc0038I Pass  33: suminf.    0.88398 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  34: suminf.    1.30985 (3) obj. -82.8262 iterations 4
Cbc0038I Pass  35: suminf.    1.05897 (3) obj. -82.8262 iterations 1
Cbc0038I Pass  36: suminf.    1.05897 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  37: suminf.    1.46499 (3) obj. -82.8262 iterations 3
Cbc0038I Pass  38: suminf.    1.05897 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  39: suminf.    2.18674 (7) obj. -82.8262 iterations 9
Cbc0038I Pass  40: suminf.    1.78667 (6) obj. -82.8262 iterations 2
Cbc0038I Pass  41: suminf.    0.29741 (4) obj. -82.8262 iterations 8
Cbc0038I Pass  42: suminf.    0.21928 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  43: suminf.    1.11932 (3) obj. -82.8262 iterations 7
Cbc0038I Pass  44: suminf.    1.11932 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  45: suminf.    1.08524 (4) obj. -82.8262 iterations 5
Cbc0038I Pass  46: suminf.    0.88398 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  47: suminf.    0.88398 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  48: suminf.    1.30985 (3) obj. -82.8262 iterations 4
Cbc0038I Pass  49: suminf.    1.05897 (3) obj. -82.8262 iterations 1
Cbc0038I Pass  50: suminf.    1.05897 (3) obj. -82.8262 iterations 0
Cbc0038I Pass  51: suminf.    1.46499 (3) obj. -82.8262 iterations 3
Cbc0038I Pass  52: suminf.    1.05897 (3) obj. -82.8262 iterations 2
Cbc0038I Pass  53: suminf.    3.78496 (12) obj. -82.8262 iterations 11
Cbc0038I Pass  54: suminf.    2.25158 (6) obj. -82.8262 iterations 6
Cbc0038I Pass  55: suminf.    0.96472 (6) obj. -82.8262 iterations 1
Cbc0038I Pass  56: suminf.    0.96472 (6) obj. -82.8262 iterations 0
Cbc0038I Pass  57: suminf.    0.88745 (4) obj. -82.8262 iterations 7
Cbc0038I Pass  58: suminf.    0.88745 (4) obj. -82.8262 iterations 0
Cbc0038I Pass  59: suminf.    1.64079 (4) obj. -82.8262 iterations 6
Cbc0038I Pass  60: suminf.    0.60899 (2) obj. -82.8262 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -68.3106 - took 0.02 seconds
Cbc0012I Integer solution of -68.3106 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 29 columns, reduced to 26 rows 18 columns
Cbc0031I 10 added rows had average density of 12
Cbc0013I At root node, 10 cuts changed objective from -132.17324 to -73.104615 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1252 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 757 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -68.31059999999999, took 1761 iterations and 2 nodes (0.16 seconds)
Cbc0032I Strong branching done 16 times (167 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 53 (-8) columns and 499 (-114) elements
Clp1000I sum of infeasibilities 3.63798e-11 - average 7.42445e-13, 48 fixed columns
Coin0506I Presolve 5 (-44) rows, 5 (-48) columns and 16 (-483) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 40.210416
Clp0000I Optimal - objective value 40.210416
Coin0511I After Postsolve, objective 40.210416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21648196 - largest nonzero change 0 ( 0%) - largest zero change 2.9831018e-05
Clp0000I Optimal - objective value 183.02064
Clp0000I Optimal - objective value 183.02064
Clp0000I Optimal - objective value 183.02064
Coin0511I After Postsolve, objective 183.02064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 183.0206447 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 54 columns (54 integer (54 of which binary)) and 511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.900%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.05506
Cbc0038I Pass   1: suminf.    3.25732 (16) obj. -112.28 iterations 5
Cbc0038I Pass   2: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Solution found of 25.9882
Cbc0038I Rounding solution of -25.2405 is better than previous of 25.9882

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -35.6819
Cbc0038I Pass   3: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass   4: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass   5: suminf.    0.57362 (2) obj. -35.6819 iterations 27
Cbc0038I Pass   6: suminf.    0.21705 (2) obj. -44.6014 iterations 2
Cbc0038I Pass   7: suminf.    1.60702 (7) obj. -35.6819 iterations 10
Cbc0038I Pass   8: suminf.    1.53654 (5) obj. -35.6819 iterations 4
Cbc0038I Pass   9: suminf.    1.08570 (4) obj. -35.6819 iterations 1
Cbc0038I Pass  10: suminf.    1.03986 (4) obj. -35.6819 iterations 2
Cbc0038I Pass  11: suminf.    1.03986 (4) obj. -35.6819 iterations 0
Cbc0038I Pass  12: suminf.    0.49520 (2) obj. -35.6819 iterations 4
Cbc0038I Pass  13: suminf.    0.40581 (2) obj. -38.0745 iterations 1
Cbc0038I Pass  14: suminf.    1.71533 (6) obj. -53.7508 iterations 9
Cbc0038I Pass  15: suminf.    0.84712 (4) obj. -35.6819 iterations 4
Cbc0038I Pass  16: suminf.    0.28834 (3) obj. -35.6819 iterations 7
Cbc0038I Pass  17: suminf.    0.28394 (3) obj. -35.6819 iterations 2
Cbc0038I Pass  18: suminf.    0.60666 (3) obj. -35.6819 iterations 4
Cbc0038I Pass  19: suminf.    0.60666 (3) obj. -35.6819 iterations 3
Cbc0038I Pass  20: suminf.    0.28834 (3) obj. -35.6819 iterations 5
Cbc0038I Pass  21: suminf.    2.49614 (8) obj. -35.6819 iterations 14
Cbc0038I Pass  22: suminf.    2.45959 (7) obj. -38.9484 iterations 1
Cbc0038I Pass  23: suminf.    1.69814 (7) obj. -35.6819 iterations 8
Cbc0038I Pass  24: suminf.    1.69814 (7) obj. -35.6819 iterations 0
Cbc0038I Pass  25: suminf.    1.55995 (6) obj. -35.6819 iterations 3
Cbc0038I Pass  26: suminf.    1.42500 (6) obj. -35.6819 iterations 4
Cbc0038I Pass  27: suminf.    1.72794 (6) obj. -35.6819 iterations 1
Cbc0038I Pass  28: suminf.    1.69553 (5) obj. -35.6819 iterations 1
Cbc0038I Pass  29: suminf.    1.45777 (5) obj. -35.6819 iterations 1
Cbc0038I Pass  30: suminf.    3.59335 (15) obj. -35.6819 iterations 16
Cbc0038I Pass  31: suminf.    2.93434 (12) obj. -35.6819 iterations 3
Cbc0038I Pass  32: suminf.    1.76702 (5) obj. -35.6819 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 25.9882 to -38.91 (0.02 seconds)
Cbc0038I Round again with cutoff of -57.0587
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  33: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  34: suminf.    0.67544 (3) obj. -57.0587 iterations 25
Cbc0038I Pass  35: suminf.    0.39352 (3) obj. -63.5426 iterations 2
Cbc0038I Pass  36: suminf.    3.58038 (12) obj. -57.0587 iterations 24
Cbc0038I Pass  37: suminf.    3.57397 (12) obj. -57.0587 iterations 2
Cbc0038I Pass  38: suminf.    1.06467 (5) obj. -57.0587 iterations 10
Cbc0038I Pass  39: suminf.    0.98442 (5) obj. -58.9044 iterations 1
Cbc0038I Pass  40: suminf.    1.10747 (5) obj. -57.0587 iterations 3
Cbc0038I Pass  41: suminf.    2.74860 (9) obj. -57.0587 iterations 7
Cbc0038I Pass  42: suminf.    2.74860 (9) obj. -57.0587 iterations 1
Cbc0038I Pass  43: suminf.    2.13277 (6) obj. -57.0587 iterations 7
Cbc0038I Pass  44: suminf.    1.96483 (6) obj. -57.0587 iterations 2
Cbc0038I Pass  45: suminf.    2.13277 (6) obj. -57.0587 iterations 3
Cbc0038I Pass  46: suminf.    2.68406 (9) obj. -57.0587 iterations 14
Cbc0038I Pass  47: suminf.    2.60080 (9) obj. -59.3822 iterations 2
Cbc0038I Pass  48: suminf.    1.48560 (6) obj. -57.0587 iterations 8
Cbc0038I Pass  49: suminf.    1.43009 (6) obj. -57.0587 iterations 2
Cbc0038I Pass  50: suminf.    0.87664 (5) obj. -57.0587 iterations 3
Cbc0038I Pass  51: suminf.    0.87664 (5) obj. -57.0587 iterations 1
Cbc0038I Pass  52: suminf.    1.23644 (5) obj. -57.0587 iterations 1
Cbc0038I Pass  53: suminf.    1.23644 (5) obj. -57.0587 iterations 0
Cbc0038I Pass  54: suminf.    0.87664 (5) obj. -57.0587 iterations 3
Cbc0038I Pass  55: suminf.    2.83279 (9) obj. -57.0587 iterations 7
Cbc0038I Pass  56: suminf.    2.47968 (8) obj. -57.0587 iterations 2
Cbc0038I Pass  57: suminf.    1.68128 (5) obj. -57.0587 iterations 7
Cbc0038I Pass  58: suminf.    1.59851 (5) obj. -57.0587 iterations 2
Cbc0038I Pass  59: suminf.    2.33237 (10) obj. -57.0587 iterations 9
Cbc0038I Pass  60: suminf.    2.33237 (10) obj. -57.0587 iterations 1
Cbc0038I Pass  61: suminf.    1.30509 (6) obj. -57.0587 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -38.91 to -45.6525 (0.03 seconds)
Cbc0038I Round again with cutoff of -78.8369
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  62: suminf.    3.25732 (16) obj. -112.28 iterations 0
Cbc0038I Pass  63: suminf.    1.04184 (8) obj. -78.8369 iterations 25
Cbc0038I Pass  64: suminf.    1.04184 (8) obj. -78.8369 iterations 2
Cbc0038I Pass  65: suminf.    0.83435 (4) obj. -78.8369 iterations 6
Cbc0038I Pass  66: suminf.    0.81810 (4) obj. -79.2107 iterations 2
Cbc0038I Pass  67: suminf.    1.40447 (7) obj. -79.821 iterations 8
Cbc0038I Pass  68: suminf.    1.31417 (6) obj. -79.6295 iterations 4
Cbc0038I Pass  69: suminf.    0.76630 (5) obj. -78.8369 iterations 6
Cbc0038I Pass  70: suminf.    0.76630 (5) obj. -78.8369 iterations 0
Cbc0038I Pass  71: suminf.    1.14150 (5) obj. -78.8369 iterations 1
Cbc0038I Pass  72: suminf.    1.14150 (5) obj. -78.8369 iterations 0
Cbc0038I Pass  73: suminf.    0.76630 (5) obj. -78.8369 iterations 2
Cbc0038I Pass  74: suminf.    1.53008 (6) obj. -78.8369 iterations 2
Cbc0038I Pass  75: suminf.    1.53008 (6) obj. -78.8369 iterations 0
Cbc0038I Pass  76: suminf.    0.83435 (4) obj. -78.8369 iterations 3
Cbc0038I Pass  77: suminf.    0.81810 (4) obj. -79.2107 iterations 1
Cbc0038I Pass  78: suminf.    3.45171 (10) obj. -78.8369 iterations 17
Cbc0038I Pass  79: suminf.    2.91068 (10) obj. -78.8369 iterations 2
Cbc0038I Pass  80: suminf.    2.91068 (10) obj. -78.8369 iterations 0
Cbc0038I Pass  81: suminf.    3.12518 (8) obj. -78.8369 iterations 6
Cbc0038I Pass  82: suminf.    2.29202 (7) obj. -78.8369 iterations 2
Cbc0038I Pass  83: suminf.    2.36103 (7) obj. -78.8369 iterations 2
Cbc0038I Pass  84: suminf.    2.29202 (7) obj. -78.8369 iterations 1
Cbc0038I Pass  85: suminf.    2.84303 (8) obj. -78.8369 iterations 8
Cbc0038I Pass  86: suminf.    2.84303 (8) obj. -78.8369 iterations 0
Cbc0038I Pass  87: suminf.    1.42471 (6) obj. -78.8369 iterations 4
Cbc0038I Pass  88: suminf.    1.42064 (6) obj. -78.898 iterations 1
Cbc0038I Pass  89: suminf.    1.61375 (6) obj. -78.8369 iterations 3
Cbc0038I Pass  90: suminf.    1.61375 (6) obj. -78.8369 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 54 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -45.6525 - took 0.03 seconds
Cbc0012I Integer solution of -45.65246 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 50 rows 54 columns, reduced to 7 rows 8 columns
Cbc0031I 23 added rows had average density of 7.5652174
Cbc0013I At root node, 23 cuts changed objective from -129.65291 to -68.310613 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 275 row cuts average 4.2 elements, 7 column cuts (7 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0012I Integer solution of -68.3106 found by rounding after 165 iterations and 1 nodes (0.20 seconds)
Cbc0011I Exiting as integer gap of 1.337302e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -68.31059999999999, took 174 iterations and 2 nodes (0.20 seconds)
Cbc0032I Strong branching done 8 times (74 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.21

