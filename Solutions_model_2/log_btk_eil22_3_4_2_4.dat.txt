Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 8.43947e-06 - average 2.3443e-07, 3 fixed columns
Coin0506I Presolve 32 (-4) rows, 19 (-3) columns and 94 (-14) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 69.888942
Clp0000I Optimal - objective value 69.888942
Coin0511I After Postsolve, objective 69.888942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.888942
Clp0000I Optimal - objective value 69.888942
Clp0000I Optimal - objective value 69.888942
Coin0511I After Postsolve, objective 69.888942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.88894195 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.848%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.55375
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -12.9171 iterations 15
Cbc0038I Solution found of -12.9171
Cbc0038I Relaxing continuous gives -12.9171
Cbc0038I Rounding solution of -13.4021 is better than previous of -12.9171

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -13.4021 to -25.5478 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.7562
Cbc0038I Pass   2: suminf.    0.79087 (3) obj. -29.7562 iterations 4
Cbc0038I Pass   3: suminf.    1.54581 (4) obj. -29.7562 iterations 5
Cbc0038I Pass   4: suminf.    1.02912 (3) obj. -29.7562 iterations 2
Cbc0038I Pass   5: suminf.    0.84372 (3) obj. -29.7562 iterations 3
Cbc0038I Pass   6: suminf.    1.28872 (5) obj. -29.7562 iterations 4
Cbc0038I Pass   7: suminf.    0.84958 (2) obj. -29.7562 iterations 5
Cbc0038I Pass   8: suminf.    0.78217 (3) obj. -29.7562 iterations 3
Cbc0038I Pass   9: suminf.    1.58161 (4) obj. -29.7562 iterations 5
Cbc0038I Pass  10: suminf.    1.03600 (3) obj. -29.7562 iterations 2
Cbc0038I Pass  11: suminf.    0.83659 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  12: suminf.    1.71523 (5) obj. -29.7562 iterations 5
Cbc0038I Pass  13: suminf.    1.71523 (5) obj. -29.7562 iterations 1
Cbc0038I Pass  14: suminf.    0.99914 (3) obj. -29.7562 iterations 5
Cbc0038I Pass  15: suminf.    0.78217 (3) obj. -29.7562 iterations 2
Cbc0038I Pass  16: suminf.    0.78217 (3) obj. -29.7562 iterations 0
Cbc0038I Pass  17: suminf.    1.58161 (4) obj. -29.7562 iterations 5
Cbc0038I Pass  18: suminf.    1.03600 (3) obj. -29.7562 iterations 2
Cbc0038I Pass  19: suminf.    0.83659 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  20: suminf.    1.69242 (5) obj. -29.7562 iterations 6
Cbc0038I Pass  21: suminf.    1.26991 (5) obj. -29.7562 iterations 4
Cbc0038I Pass  22: suminf.    1.42336 (4) obj. -29.7562 iterations 7
Cbc0038I Pass  23: suminf.    0.78298 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  24: suminf.    1.04952 (4) obj. -29.7562 iterations 7
Cbc0038I Pass  25: suminf.    0.78217 (3) obj. -29.7562 iterations 4
Cbc0038I Pass  26: suminf.    1.58161 (4) obj. -29.7562 iterations 6
Cbc0038I Pass  27: suminf.    1.03600 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  28: suminf.    0.83659 (3) obj. -29.7562 iterations 4
Cbc0038I Pass  29: suminf.    1.64783 (6) obj. -29.7562 iterations 10
Cbc0038I Pass  30: suminf.    0.62691 (4) obj. -29.7562 iterations 5
Cbc0038I Pass  31: suminf.    0.43093 (3) obj. -29.7562 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.5478 to -25.7128 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.3312
Cbc0038I Pass  31: suminf.    1.19732 (5) obj. -37.3312 iterations 2
Cbc0038I Pass  32: suminf.    1.20409 (4) obj. -37.3312 iterations 4
Cbc0038I Pass  33: suminf.    0.78998 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  34: suminf.    0.72566 (5) obj. -37.3312 iterations 3
Cbc0038I Pass  35: suminf.    1.30987 (4) obj. -37.3312 iterations 6
Cbc0038I Pass  36: suminf.    0.77426 (3) obj. -37.3312 iterations 4
Cbc0038I Pass  37: suminf.    0.63677 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  38: suminf.    0.63053 (3) obj. -37.3312 iterations 2
Cbc0038I Pass  39: suminf.    0.91979 (3) obj. -37.3312 iterations 5
Cbc0038I Pass  40: suminf.    1.48421 (5) obj. -37.3312 iterations 2
Cbc0038I Pass  41: suminf.    1.14963 (5) obj. -37.3312 iterations 1
Cbc0038I Pass  42: suminf.    0.87595 (5) obj. -37.3312 iterations 3
Cbc0038I Pass  43: suminf.    1.33585 (5) obj. -37.3312 iterations 11
Cbc0038I Pass  44: suminf.    1.24560 (5) obj. -37.3312 iterations 1
Cbc0038I Pass  45: suminf.    1.78110 (8) obj. -37.3312 iterations 7
Cbc0038I Pass  46: suminf.    1.75211 (8) obj. -37.3312 iterations 1
Cbc0038I Pass  47: suminf.    2.38576 (7) obj. -37.3312 iterations 9
Cbc0038I Pass  48: suminf.    1.21009 (5) obj. -37.3312 iterations 5
Cbc0038I Pass  49: suminf.    1.19732 (5) obj. -37.3312 iterations 2
Cbc0038I Pass  50: suminf.    1.20409 (4) obj. -37.3312 iterations 4
Cbc0038I Pass  51: suminf.    0.78998 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  52: suminf.    0.72566 (5) obj. -37.3312 iterations 3
Cbc0038I Pass  53: suminf.    1.30987 (4) obj. -37.3312 iterations 6
Cbc0038I Pass  54: suminf.    0.77426 (3) obj. -37.3312 iterations 4
Cbc0038I Pass  55: suminf.    0.63677 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  56: suminf.    0.63053 (3) obj. -37.3312 iterations 2
Cbc0038I Pass  57: suminf.    0.91979 (3) obj. -37.3312 iterations 5
Cbc0038I Pass  58: suminf.    0.93620 (5) obj. -37.3312 iterations 4
Cbc0038I Pass  59: suminf.    3.25701 (10) obj. -37.3312 iterations 14
Cbc0038I Pass  60: suminf.    1.63791 (5) obj. -37.3312 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.7128 - took 0.05 seconds
Cbc0012I Integer solution of -25.7128 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 12 added rows had average density of 10.666667
Cbc0013I At root node, 12 cuts changed objective from -67.631251 to -39.950907 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 805 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 584 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.7128, took 1615 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 58 times (603 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-13) rows, 39 (-5) columns and 301 (-59) elements
Clp1000I sum of infeasibilities 1.20929e-08 - average 3.6645e-10, 22 fixed columns
Coin0506I Presolve 13 (-20) rows, 17 (-22) columns and 54 (-247) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.0231632 - largest nonzero change 1.8173624e-05 ( 0.00090868118%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 12.373803
Clp0000I Optimal - objective value 12.373803
Coin0511I After Postsolve, objective 12.373803, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8244952 - largest nonzero change 1.7480849e-05 ( 0.00090868118%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 81.054639
Clp0000I Optimal - objective value 81.054639
Clp0000I Optimal - objective value 81.054639
Coin0511I After Postsolve, objective 81.054639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.05463912 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 39 columns (39 integer (39 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.99649
Cbc0038I Pass   1: suminf.    1.10804 (9) obj. -12.5024 iterations 10
Cbc0038I Pass   2: suminf.    1.10804 (9) obj. -12.5024 iterations 1
Cbc0038I Solution found of 6.9179
Cbc0038I Rounding solution of -20.4478 is better than previous of 6.9179

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.1543
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.20891 (12) obj. -24.1543 iterations 2
Cbc0038I Pass   4: suminf.    2.20891 (12) obj. -24.1543 iterations 0
Cbc0038I Pass   5: suminf.    0.38547 (2) obj. -24.1543 iterations 22
Cbc0038I Pass   6: suminf.    0.38547 (2) obj. -24.1543 iterations 0
Cbc0038I Pass   7: suminf.    0.76667 (2) obj. -29.6212 iterations 4
Cbc0038I Pass   8: suminf.    1.43652 (5) obj. -30.0329 iterations 10
Cbc0038I Pass   9: suminf.    1.43652 (5) obj. -30.0329 iterations 0
Cbc0038I Pass  10: suminf.    0.56452 (2) obj. -24.1543 iterations 10
Cbc0038I Pass  11: suminf.    0.79333 (2) obj. -27.4358 iterations 4
Cbc0038I Pass  12: suminf.    1.80302 (5) obj. -24.1543 iterations 9
Cbc0038I Pass  13: suminf.    1.53764 (4) obj. -24.1543 iterations 4
Cbc0038I Pass  14: suminf.    0.79333 (2) obj. -24.4358 iterations 5
Cbc0038I Pass  15: suminf.    0.77370 (2) obj. -24.1543 iterations 3
Cbc0038I Pass  16: suminf.    1.51321 (8) obj. -24.1543 iterations 11
Cbc0038I Pass  17: suminf.    1.15581 (4) obj. -24.1543 iterations 7
Cbc0038I Pass  18: suminf.    1.05608 (3) obj. -24.1543 iterations 3
Cbc0038I Pass  19: suminf.    1.05608 (3) obj. -24.1543 iterations 1
Cbc0038I Pass  20: suminf.    1.01778 (3) obj. -24.9552 iterations 2
Cbc0038I Pass  21: suminf.    0.96193 (3) obj. -24.1543 iterations 2
Cbc0038I Pass  22: suminf.    1.90287 (8) obj. -24.1543 iterations 10
Cbc0038I Pass  23: suminf.    1.90287 (8) obj. -24.1543 iterations 1
Cbc0038I Pass  24: suminf.    2.07430 (6) obj. -24.1543 iterations 5
Cbc0038I Pass  25: suminf.    1.27679 (5) obj. -24.1543 iterations 1
Cbc0038I Pass  26: suminf.    1.27347 (3) obj. -24.1543 iterations 6
Cbc0038I Pass  27: suminf.    1.21040 (3) obj. -24.1543 iterations 1
Cbc0038I Pass  28: suminf.    1.27347 (3) obj. -24.1543 iterations 2
Cbc0038I Pass  29: suminf.    2.21583 (6) obj. -24.1543 iterations 9
Cbc0038I Pass  30: suminf.    1.51127 (5) obj. -24.1543 iterations 4
Cbc0038I Pass  31: suminf.    0.70113 (3) obj. -24.1543 iterations 6
Cbc0038I Pass  32: suminf.    0.51541 (2) obj. -24.1543 iterations 1
Cbc0038I Rounding solution of -20.9542 is better than previous of -20.4478

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -20.9542 to -23.5242 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.8258
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.27931 (12) obj. -30.8258 iterations 1
Cbc0038I Pass  33: suminf.    2.27931 (12) obj. -30.8258 iterations 0
Cbc0038I Pass  34: suminf.    0.87618 (3) obj. -30.8258 iterations 19
Cbc0038I Pass  35: suminf.    0.87618 (3) obj. -30.8258 iterations 2
Cbc0038I Pass  36: suminf.    1.21111 (3) obj. -35.7323 iterations 3
Cbc0038I Pass  37: suminf.    0.86899 (3) obj. -30.8258 iterations 2
Cbc0038I Pass  38: suminf.    0.87618 (3) obj. -30.8258 iterations 2
Cbc0038I Pass  39: suminf.    2.89078 (10) obj. -30.8258 iterations 12
Cbc0038I Pass  40: suminf.    1.99097 (8) obj. -30.8258 iterations 3
Cbc0038I Pass  41: suminf.    1.66916 (8) obj. -30.8258 iterations 4
Cbc0038I Pass  42: suminf.    1.61073 (6) obj. -30.8258 iterations 13
Cbc0038I Pass  43: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  44: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  45: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  46: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I Pass  47: suminf.    1.61073 (6) obj. -30.8258 iterations 2
Cbc0038I Pass  48: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  49: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  50: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  51: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I Pass  52: suminf.    1.61073 (6) obj. -30.8258 iterations 2
Cbc0038I Pass  53: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  54: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  55: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  56: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I Pass  57: suminf.    1.61073 (6) obj. -30.8258 iterations 2
Cbc0038I Pass  58: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  59: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  60: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  61: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.5242 - took 0.02 seconds
Cbc0012I Integer solution of -23.5242 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 39 columns, reduced to 7 rows 8 columns
Cbc0031I 16 added rows had average density of 12.5
Cbc0013I At root node, 16 cuts changed objective from -57.51192 to -29.852821 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1244 row cuts average 3.6 elements, 11 column cuts (11 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 75 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 107 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 198 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 262 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.804 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.5242 best solution, best possible -29.852821 (1.60 seconds)
Cbc0004I Integer solution of -25.7128 found after 1288 iterations and 6 nodes (2.00 seconds)
Cbc0001I Search completed - best objective -25.7128, took 1288 iterations and 6 nodes (2.00 seconds)
Cbc0032I Strong branching done 90 times (601 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       2.00

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 8.43947e-06 - average 2.3443e-07, 3 fixed columns
Coin0506I Presolve 32 (-4) rows, 19 (-3) columns and 94 (-14) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 69.888942
Clp0000I Optimal - objective value 69.888942
Coin0511I After Postsolve, objective 69.888942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.888942
Clp0000I Optimal - objective value 69.888942
Clp0000I Optimal - objective value 69.888942
Coin0511I After Postsolve, objective 69.888942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.88894195 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.848%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.55375
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -12.9171 iterations 15
Cbc0038I Solution found of -12.9171
Cbc0038I Relaxing continuous gives -12.9171
Cbc0038I Rounding solution of -13.4021 is better than previous of -12.9171

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -13.4021 to -25.5478 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.7562
Cbc0038I Pass   2: suminf.    0.79087 (3) obj. -29.7562 iterations 4
Cbc0038I Pass   3: suminf.    1.54581 (4) obj. -29.7562 iterations 5
Cbc0038I Pass   4: suminf.    1.02912 (3) obj. -29.7562 iterations 2
Cbc0038I Pass   5: suminf.    0.84372 (3) obj. -29.7562 iterations 3
Cbc0038I Pass   6: suminf.    1.28872 (5) obj. -29.7562 iterations 4
Cbc0038I Pass   7: suminf.    0.84958 (2) obj. -29.7562 iterations 5
Cbc0038I Pass   8: suminf.    0.78217 (3) obj. -29.7562 iterations 3
Cbc0038I Pass   9: suminf.    1.58161 (4) obj. -29.7562 iterations 5
Cbc0038I Pass  10: suminf.    1.03600 (3) obj. -29.7562 iterations 2
Cbc0038I Pass  11: suminf.    0.83659 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  12: suminf.    1.71523 (5) obj. -29.7562 iterations 5
Cbc0038I Pass  13: suminf.    1.71523 (5) obj. -29.7562 iterations 1
Cbc0038I Pass  14: suminf.    0.99914 (3) obj. -29.7562 iterations 5
Cbc0038I Pass  15: suminf.    0.78217 (3) obj. -29.7562 iterations 2
Cbc0038I Pass  16: suminf.    0.78217 (3) obj. -29.7562 iterations 0
Cbc0038I Pass  17: suminf.    1.58161 (4) obj. -29.7562 iterations 5
Cbc0038I Pass  18: suminf.    1.03600 (3) obj. -29.7562 iterations 2
Cbc0038I Pass  19: suminf.    0.83659 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  20: suminf.    1.69242 (5) obj. -29.7562 iterations 6
Cbc0038I Pass  21: suminf.    1.26991 (5) obj. -29.7562 iterations 4
Cbc0038I Pass  22: suminf.    1.42336 (4) obj. -29.7562 iterations 7
Cbc0038I Pass  23: suminf.    0.78298 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  24: suminf.    1.04952 (4) obj. -29.7562 iterations 7
Cbc0038I Pass  25: suminf.    0.78217 (3) obj. -29.7562 iterations 4
Cbc0038I Pass  26: suminf.    1.58161 (4) obj. -29.7562 iterations 6
Cbc0038I Pass  27: suminf.    1.03600 (3) obj. -29.7562 iterations 3
Cbc0038I Pass  28: suminf.    0.83659 (3) obj. -29.7562 iterations 4
Cbc0038I Pass  29: suminf.    1.64783 (6) obj. -29.7562 iterations 10
Cbc0038I Pass  30: suminf.    0.62691 (4) obj. -29.7562 iterations 5
Cbc0038I Pass  31: suminf.    0.43093 (3) obj. -29.7562 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.5478 to -25.7128 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.3312
Cbc0038I Pass  31: suminf.    1.19732 (5) obj. -37.3312 iterations 2
Cbc0038I Pass  32: suminf.    1.20409 (4) obj. -37.3312 iterations 4
Cbc0038I Pass  33: suminf.    0.78998 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  34: suminf.    0.72566 (5) obj. -37.3312 iterations 3
Cbc0038I Pass  35: suminf.    1.30987 (4) obj. -37.3312 iterations 6
Cbc0038I Pass  36: suminf.    0.77426 (3) obj. -37.3312 iterations 4
Cbc0038I Pass  37: suminf.    0.63677 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  38: suminf.    0.63053 (3) obj. -37.3312 iterations 2
Cbc0038I Pass  39: suminf.    0.91979 (3) obj. -37.3312 iterations 5
Cbc0038I Pass  40: suminf.    1.48421 (5) obj. -37.3312 iterations 2
Cbc0038I Pass  41: suminf.    1.14963 (5) obj. -37.3312 iterations 1
Cbc0038I Pass  42: suminf.    0.87595 (5) obj. -37.3312 iterations 3
Cbc0038I Pass  43: suminf.    1.33585 (5) obj. -37.3312 iterations 11
Cbc0038I Pass  44: suminf.    1.24560 (5) obj. -37.3312 iterations 1
Cbc0038I Pass  45: suminf.    1.78110 (8) obj. -37.3312 iterations 7
Cbc0038I Pass  46: suminf.    1.75211 (8) obj. -37.3312 iterations 1
Cbc0038I Pass  47: suminf.    2.38576 (7) obj. -37.3312 iterations 9
Cbc0038I Pass  48: suminf.    1.21009 (5) obj. -37.3312 iterations 5
Cbc0038I Pass  49: suminf.    1.19732 (5) obj. -37.3312 iterations 2
Cbc0038I Pass  50: suminf.    1.20409 (4) obj. -37.3312 iterations 4
Cbc0038I Pass  51: suminf.    0.78998 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  52: suminf.    0.72566 (5) obj. -37.3312 iterations 3
Cbc0038I Pass  53: suminf.    1.30987 (4) obj. -37.3312 iterations 6
Cbc0038I Pass  54: suminf.    0.77426 (3) obj. -37.3312 iterations 4
Cbc0038I Pass  55: suminf.    0.63677 (3) obj. -37.3312 iterations 3
Cbc0038I Pass  56: suminf.    0.63053 (3) obj. -37.3312 iterations 2
Cbc0038I Pass  57: suminf.    0.91979 (3) obj. -37.3312 iterations 5
Cbc0038I Pass  58: suminf.    0.93620 (5) obj. -37.3312 iterations 4
Cbc0038I Pass  59: suminf.    3.25701 (10) obj. -37.3312 iterations 14
Cbc0038I Pass  60: suminf.    1.63791 (5) obj. -37.3312 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.7128 - took 0.03 seconds
Cbc0012I Integer solution of -25.7128 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 12 added rows had average density of 10.666667
Cbc0013I At root node, 12 cuts changed objective from -67.631251 to -39.950907 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 805 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 584 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.7128, took 1615 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 58 times (603 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 39 (-6) columns and 301 (-60) elements
Clp1000I sum of infeasibilities 1.20929e-08 - average 3.6645e-10, 22 fixed columns
Coin0506I Presolve 13 (-20) rows, 17 (-22) columns and 54 (-247) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.0231632 - largest nonzero change 1.8173624e-05 ( 0.00090868118%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 12.373803
Clp0000I Optimal - objective value 12.373803
Coin0511I After Postsolve, objective 12.373803, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8244952 - largest nonzero change 1.7480849e-05 ( 0.00090868118%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 81.054639
Clp0000I Optimal - objective value 81.054639
Clp0000I Optimal - objective value 81.054639
Coin0511I After Postsolve, objective 81.054639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.05463912 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 39 columns (39 integer (39 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.99649
Cbc0038I Pass   1: suminf.    1.10804 (9) obj. -12.5024 iterations 10
Cbc0038I Pass   2: suminf.    1.10804 (9) obj. -12.5024 iterations 1
Cbc0038I Solution found of 6.9179
Cbc0038I Rounding solution of -20.4478 is better than previous of 6.9179

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.1543
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.20891 (12) obj. -24.1543 iterations 2
Cbc0038I Pass   4: suminf.    2.20891 (12) obj. -24.1543 iterations 0
Cbc0038I Pass   5: suminf.    0.38547 (2) obj. -24.1543 iterations 22
Cbc0038I Pass   6: suminf.    0.38547 (2) obj. -24.1543 iterations 0
Cbc0038I Pass   7: suminf.    0.76667 (2) obj. -29.6212 iterations 4
Cbc0038I Pass   8: suminf.    1.43652 (5) obj. -30.0329 iterations 10
Cbc0038I Pass   9: suminf.    1.43652 (5) obj. -30.0329 iterations 0
Cbc0038I Pass  10: suminf.    0.56452 (2) obj. -24.1543 iterations 10
Cbc0038I Pass  11: suminf.    0.79333 (2) obj. -27.4358 iterations 4
Cbc0038I Pass  12: suminf.    1.80302 (5) obj. -24.1543 iterations 9
Cbc0038I Pass  13: suminf.    1.53764 (4) obj. -24.1543 iterations 4
Cbc0038I Pass  14: suminf.    0.79333 (2) obj. -24.4358 iterations 5
Cbc0038I Pass  15: suminf.    0.77370 (2) obj. -24.1543 iterations 3
Cbc0038I Pass  16: suminf.    1.51321 (8) obj. -24.1543 iterations 11
Cbc0038I Pass  17: suminf.    1.15581 (4) obj. -24.1543 iterations 7
Cbc0038I Pass  18: suminf.    1.05608 (3) obj. -24.1543 iterations 3
Cbc0038I Pass  19: suminf.    1.05608 (3) obj. -24.1543 iterations 1
Cbc0038I Pass  20: suminf.    1.01778 (3) obj. -24.9552 iterations 2
Cbc0038I Pass  21: suminf.    0.96193 (3) obj. -24.1543 iterations 2
Cbc0038I Pass  22: suminf.    1.90287 (8) obj. -24.1543 iterations 10
Cbc0038I Pass  23: suminf.    1.90287 (8) obj. -24.1543 iterations 1
Cbc0038I Pass  24: suminf.    2.07430 (6) obj. -24.1543 iterations 5
Cbc0038I Pass  25: suminf.    1.27679 (5) obj. -24.1543 iterations 1
Cbc0038I Pass  26: suminf.    1.27347 (3) obj. -24.1543 iterations 6
Cbc0038I Pass  27: suminf.    1.21040 (3) obj. -24.1543 iterations 1
Cbc0038I Pass  28: suminf.    1.27347 (3) obj. -24.1543 iterations 2
Cbc0038I Pass  29: suminf.    2.21583 (6) obj. -24.1543 iterations 9
Cbc0038I Pass  30: suminf.    1.51127 (5) obj. -24.1543 iterations 4
Cbc0038I Pass  31: suminf.    0.70113 (3) obj. -24.1543 iterations 6
Cbc0038I Pass  32: suminf.    0.51541 (2) obj. -24.1543 iterations 1
Cbc0038I Rounding solution of -20.9542 is better than previous of -20.4478

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -20.9542 to -23.5242 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.8258
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.27931 (12) obj. -30.8258 iterations 1
Cbc0038I Pass  33: suminf.    2.27931 (12) obj. -30.8258 iterations 0
Cbc0038I Pass  34: suminf.    0.87618 (3) obj. -30.8258 iterations 19
Cbc0038I Pass  35: suminf.    0.87618 (3) obj. -30.8258 iterations 2
Cbc0038I Pass  36: suminf.    1.21111 (3) obj. -35.7323 iterations 3
Cbc0038I Pass  37: suminf.    0.86899 (3) obj. -30.8258 iterations 2
Cbc0038I Pass  38: suminf.    0.87618 (3) obj. -30.8258 iterations 2
Cbc0038I Pass  39: suminf.    2.89078 (10) obj. -30.8258 iterations 12
Cbc0038I Pass  40: suminf.    1.99097 (8) obj. -30.8258 iterations 3
Cbc0038I Pass  41: suminf.    1.66916 (8) obj. -30.8258 iterations 4
Cbc0038I Pass  42: suminf.    1.61073 (6) obj. -30.8258 iterations 13
Cbc0038I Pass  43: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  44: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  45: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  46: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I Pass  47: suminf.    1.61073 (6) obj. -30.8258 iterations 2
Cbc0038I Pass  48: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  49: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  50: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  51: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I Pass  52: suminf.    1.61073 (6) obj. -30.8258 iterations 2
Cbc0038I Pass  53: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  54: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  55: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  56: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I Pass  57: suminf.    1.61073 (6) obj. -30.8258 iterations 2
Cbc0038I Pass  58: suminf.    1.61073 (6) obj. -30.8258 iterations 1
Cbc0038I Pass  59: suminf.    1.68114 (5) obj. -30.8258 iterations 3
Cbc0038I Pass  60: suminf.    1.68114 (5) obj. -30.8258 iterations 1
Cbc0038I Pass  61: suminf.    1.73924 (5) obj. -30.8258 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23.5242 - took 0.03 seconds
Cbc0012I Integer solution of -23.5242 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 32 rows 39 columns, reduced to 7 rows 8 columns
Cbc0031I 16 added rows had average density of 12.5
Cbc0013I At root node, 16 cuts changed objective from -57.51192 to -29.852821 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1244 row cuts average 3.6 elements, 11 column cuts (11 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 75 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 107 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 198 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 262 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.733 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.5242 best solution, best possible -29.852821 (1.46 seconds)
Cbc0004I Integer solution of -25.7128 found after 1288 iterations and 6 nodes (1.81 seconds)
Cbc0001I Search completed - best objective -25.7128, took 1288 iterations and 6 nodes (1.81 seconds)
Cbc0032I Strong branching done 90 times (601 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.81

