Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 26 (-6) columns and 141 (-36) elements
Clp1000I sum of infeasibilities 6.37284e-06 - average 1.32768e-07, 1 fixed columns
Coin0506I Presolve 44 (-4) rows, 25 (-1) columns and 132 (-9) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 82.935669
Clp0000I Optimal - objective value 82.935669
Coin0511I After Postsolve, objective 82.935669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.935669
Clp0000I Optimal - objective value 82.935669
Clp0000I Optimal - objective value 82.935669
Coin0511I After Postsolve, objective 82.935669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.93566926 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 26 columns (25 integer (25 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.628%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.57642
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.5911 iterations 20
Cbc0038I Solution found of -29.5911
Cbc0038I Relaxing continuous gives -29.5911
Cbc0038I Rounding solution of -34.7797 is better than previous of -29.5911

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -39.5929
Cbc0038I Pass   2: suminf.    0.29244 (3) obj. -39.5929 iterations 4
Cbc0038I Pass   3: suminf.    0.83223 (4) obj. -39.5929 iterations 6
Cbc0038I Pass   4: suminf.    0.82991 (4) obj. -39.5929 iterations 1
Cbc0038I Pass   5: suminf.    1.47537 (5) obj. -39.5929 iterations 9
Cbc0038I Pass   6: suminf.    1.21910 (5) obj. -39.5929 iterations 3
Cbc0038I Pass   7: suminf.    1.31922 (4) obj. -39.5929 iterations 6
Cbc0038I Pass   8: suminf.    1.31922 (4) obj. -39.5929 iterations 0
Cbc0038I Pass   9: suminf.    1.55324 (4) obj. -39.5929 iterations 5
Cbc0038I Pass  10: suminf.    1.40242 (4) obj. -39.5929 iterations 1
Cbc0038I Pass  11: suminf.    3.34523 (9) obj. -39.5929 iterations 5
Cbc0038I Pass  12: suminf.    2.16212 (7) obj. -39.5929 iterations 4
Cbc0038I Pass  13: suminf.    1.87735 (6) obj. -39.5929 iterations 4
Cbc0038I Pass  14: suminf.    1.37509 (5) obj. -39.5929 iterations 5
Cbc0038I Pass  15: suminf.    1.33501 (6) obj. -39.5929 iterations 1
Cbc0038I Pass  16: suminf.    2.16860 (6) obj. -39.5929 iterations 6
Cbc0038I Pass  17: suminf.    1.65918 (6) obj. -39.5929 iterations 3
Cbc0038I Pass  18: suminf.    1.54572 (5) obj. -39.5929 iterations 7
Cbc0038I Pass  19: suminf.    1.30456 (5) obj. -39.5929 iterations 3
Cbc0038I Pass  20: suminf.    1.31922 (4) obj. -39.5929 iterations 7
Cbc0038I Pass  21: suminf.    1.31922 (4) obj. -39.5929 iterations 0
Cbc0038I Pass  22: suminf.    1.55324 (4) obj. -39.5929 iterations 5
Cbc0038I Pass  23: suminf.    1.40242 (4) obj. -39.5929 iterations 1
Cbc0038I Pass  24: suminf.    1.83309 (5) obj. -39.5929 iterations 3
Cbc0038I Pass  25: suminf.    1.27047 (5) obj. -39.5929 iterations 5
Cbc0038I Pass  26: suminf.    1.46404 (5) obj. -39.5929 iterations 6
Cbc0038I Pass  27: suminf.    1.46404 (5) obj. -39.5929 iterations 0
Cbc0038I Pass  28: suminf.    1.76873 (5) obj. -39.5929 iterations 5
Cbc0038I Pass  29: suminf.    1.30456 (5) obj. -39.5929 iterations 2
Cbc0038I Pass  30: suminf.    1.31922 (4) obj. -39.5929 iterations 7
Cbc0038I Pass  31: suminf.    1.31922 (4) obj. -39.5929 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -34.7797 - took 0.03 seconds
Cbc0012I Integer solution of -34.779717 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 17 added rows had average density of 13.882353
Cbc0013I At root node, 17 cuts changed objective from -82.9111 to -47.504571 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2269 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1151 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 46 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.779717 best solution, best possible -47.503608 (1.32 seconds)
Cbc0004I Integer solution of -34.911017 found after 2467 iterations and 2 nodes (1.32 seconds)
Cbc0001I Search completed - best objective -34.911017, took 2508 iterations and 4 nodes (1.33 seconds)
Cbc0032I Strong branching done 60 times (748 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 52 (-8) columns and 473 (-139) elements
Clp1000I sum of infeasibilities 0.000625643 - average 1.25129e-05, 40 fixed columns
Coin0506I Presolve 6 (-44) rows, 12 (-40) columns and 32 (-441) elements
Clp0006I 0  Obj 95.989884 Primal inf 1.3508066e-07 (1) Dual inf 9.2799579e+08 (12)
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 1.9353317 - largest nonzero change 0 ( 0%) - largest zero change 1.6039243e-05
Clp0000I Optimal - objective value 100.52422
Clp0000I Optimal - objective value 100.52422
Coin0511I After Postsolve, objective 100.52422, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 100.52422 Dual inf 202.19685 (29)
Clp0014I Perturbing problem by 0.001% of 1.3235515 - largest nonzero change 1.8094956e-05 ( 0.0018094956%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 177.65976
Clp0000I Optimal - objective value 177.65976
Clp0000I Optimal - objective value 177.65976
Coin0511I After Postsolve, objective 177.65976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.6597554 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 51 columns (51 integer (51 of which binary)) and 473 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.072%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 9.97642
Cbc0038I Pass   1: suminf.    5.18160 (17) obj. -104.649 iterations 15
Cbc0038I Pass   2: suminf.    5.18160 (17) obj. -104.649 iterations 0
Cbc0038I Solution found of -40.8227
Cbc0038I Rounding solution of -46.6001 is better than previous of -40.8227

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 51 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -46.6001 to -88.3203 (0.01 seconds)
Cbc0038I Round again with cutoff of -95.6939
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.18160 (17) obj. -104.649 iterations 0
Cbc0038I Pass   4: suminf.    5.18160 (17) obj. -104.649 iterations 0
Cbc0038I Pass   5: suminf.    1.15980 (5) obj. -95.6939 iterations 24
Cbc0038I Pass   6: suminf.    1.12492 (4) obj. -95.6939 iterations 1
Cbc0038I Pass   7: suminf.    0.95166 (3) obj. -95.6939 iterations 4
Cbc0038I Pass   8: suminf.    0.55933 (2) obj. -97.6678 iterations 3
Cbc0038I Pass   9: suminf.    0.95166 (3) obj. -95.6939 iterations 3
Cbc0038I Pass  10: suminf.    2.48223 (6) obj. -95.6939 iterations 11
Cbc0038I Pass  11: suminf.    1.69870 (5) obj. -95.6939 iterations 3
Cbc0038I Pass  12: suminf.    0.30010 (2) obj. -95.6939 iterations 5
Cbc0038I Pass  13: suminf.    0.72029 (2) obj. -95.6939 iterations 1
Cbc0038I Pass  14: suminf.    0.43667 (2) obj. -103.002 iterations 1
Cbc0038I Pass  15: suminf.    0.30010 (2) obj. -95.6939 iterations 2
Cbc0038I Pass  16: suminf.    2.13605 (9) obj. -95.6939 iterations 10
Cbc0038I Pass  17: suminf.    1.13050 (4) obj. -95.6939 iterations 4
Cbc0038I Pass  18: suminf.    0.69333 (2) obj. -106.11 iterations 4
Cbc0038I Pass  19: suminf.    0.49788 (1) obj. -95.6939 iterations 5
Cbc0038I Pass  20: suminf.    0.36000 (1) obj. -98.1099 iterations 4
Cbc0038I Pass  21: suminf.    2.38121 (6) obj. -108.716 iterations 16
Cbc0038I Pass  22: suminf.    1.59333 (4) obj. -106.807 iterations 6
Cbc0038I Pass  23: suminf.    0.48582 (2) obj. -95.6939 iterations 7
Cbc0038I Pass  24: suminf.    0.48582 (2) obj. -95.6939 iterations 1
Cbc0038I Pass  25: suminf.    0.80331 (2) obj. -95.6939 iterations 1
Cbc0038I Pass  26: suminf.    3.96368 (16) obj. -95.6939 iterations 19
Cbc0038I Pass  27: suminf.    3.35510 (8) obj. -97.3584 iterations 8
Cbc0038I Pass  28: suminf.    0.88782 (3) obj. -95.6939 iterations 14
Cbc0038I Pass  29: suminf.    0.87832 (4) obj. -95.6939 iterations 1
Cbc0038I Pass  30: suminf.    0.47460 (2) obj. -95.6939 iterations 6
Cbc0038I Pass  31: suminf.    0.47460 (2) obj. -95.6939 iterations 0
Cbc0038I Pass  32: suminf.    0.78203 (2) obj. -95.6939 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 51 columns, reduced to 30 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -88.3203 to -90.5543 (0.02 seconds)
Cbc0038I Round again with cutoff of -108.966
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    5.34725 (18) obj. -108.966 iterations 1
Cbc0038I Pass  33: suminf.    5.34725 (18) obj. -108.966 iterations 0
Cbc0038I Pass  34: suminf.    1.62871 (5) obj. -108.966 iterations 25
Cbc0038I Pass  35: suminf.    1.62871 (5) obj. -108.966 iterations 0
Cbc0038I Pass  36: suminf.    0.70711 (2) obj. -108.966 iterations 10
Cbc0038I Pass  37: suminf.    0.65333 (2) obj. -109.88 iterations 1
Cbc0038I Pass  38: suminf.    0.71428 (2) obj. -108.966 iterations 2
Cbc0038I Pass  39: suminf.    3.26016 (13) obj. -108.966 iterations 20
Cbc0038I Pass  40: suminf.    3.21312 (9) obj. -109.281 iterations 6
Cbc0038I Pass  41: suminf.    1.62415 (6) obj. -108.966 iterations 10
Cbc0038I Pass  42: suminf.    1.62415 (6) obj. -108.966 iterations 1
Cbc0038I Pass  43: suminf.    0.89998 (3) obj. -108.966 iterations 9
Cbc0038I Pass  44: suminf.    0.80472 (3) obj. -110.586 iterations 1
Cbc0038I Pass  45: suminf.    0.83427 (3) obj. -108.966 iterations 5
Cbc0038I Pass  46: suminf.    0.83427 (3) obj. -108.966 iterations 1
Cbc0038I Pass  47: suminf.    1.02048 (3) obj. -108.966 iterations 3
Cbc0038I Pass  48: suminf.    0.88111 (3) obj. -111.336 iterations 2
Cbc0038I Pass  49: suminf.    3.10504 (10) obj. -108.966 iterations 8
Cbc0038I Pass  50: suminf.    2.41378 (7) obj. -125.021 iterations 7
Cbc0038I Pass  51: suminf.    0.83427 (3) obj. -108.966 iterations 9
Cbc0038I Pass  52: suminf.    0.83427 (3) obj. -108.966 iterations 1
Cbc0038I Pass  53: suminf.    1.02048 (3) obj. -108.966 iterations 3
Cbc0038I Pass  54: suminf.    0.88111 (3) obj. -111.336 iterations 2
Cbc0038I Pass  55: suminf.    3.68719 (10) obj. -116.892 iterations 9
Cbc0038I Pass  56: suminf.    2.23896 (6) obj. -114.778 iterations 6
Cbc0038I Pass  57: suminf.    1.05036 (3) obj. -108.966 iterations 7
Cbc0038I Pass  58: suminf.    1.01311 (3) obj. -109.525 iterations 3
Cbc0038I Pass  59: suminf.    2.57564 (7) obj. -108.966 iterations 7
Cbc0038I Pass  60: suminf.    1.54211 (4) obj. -108.966 iterations 5
Cbc0038I Pass  61: suminf.    1.24970 (3) obj. -108.966 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 51 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -90.5543 - took 0.02 seconds
Cbc0012I Integer solution of -90.554342 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 49 rows 51 columns, reduced to 4 rows 6 columns
Cbc0031I 6 added rows had average density of 5
Cbc0013I At root node, 28 cuts changed objective from -162.05529 to -90.554391 in 58 passes
Cbc0014I Cut generator 0 (Probing) - 171 row cuts average 2.0 elements, 26 column cuts (26 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 96 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.384 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 4.8454651e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -90.55434249999999, took 326 iterations and 0 nodes (0.72 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 26 (-6) columns and 141 (-36) elements
Clp1000I sum of infeasibilities 6.37284e-06 - average 1.32768e-07, 1 fixed columns
Coin0506I Presolve 44 (-4) rows, 25 (-1) columns and 132 (-9) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 82.935669
Clp0000I Optimal - objective value 82.935669
Coin0511I After Postsolve, objective 82.935669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.935669
Clp0000I Optimal - objective value 82.935669
Clp0000I Optimal - objective value 82.935669
Coin0511I After Postsolve, objective 82.935669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.93566926 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 26 columns (25 integer (25 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.628%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.57642
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.5911 iterations 20
Cbc0038I Solution found of -29.5911
Cbc0038I Relaxing continuous gives -29.5911
Cbc0038I Rounding solution of -34.7797 is better than previous of -29.5911

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -39.5929
Cbc0038I Pass   2: suminf.    0.29244 (3) obj. -39.5929 iterations 4
Cbc0038I Pass   3: suminf.    0.83223 (4) obj. -39.5929 iterations 6
Cbc0038I Pass   4: suminf.    0.82991 (4) obj. -39.5929 iterations 1
Cbc0038I Pass   5: suminf.    1.47537 (5) obj. -39.5929 iterations 9
Cbc0038I Pass   6: suminf.    1.21910 (5) obj. -39.5929 iterations 3
Cbc0038I Pass   7: suminf.    1.31922 (4) obj. -39.5929 iterations 6
Cbc0038I Pass   8: suminf.    1.31922 (4) obj. -39.5929 iterations 0
Cbc0038I Pass   9: suminf.    1.55324 (4) obj. -39.5929 iterations 5
Cbc0038I Pass  10: suminf.    1.40242 (4) obj. -39.5929 iterations 1
Cbc0038I Pass  11: suminf.    3.34523 (9) obj. -39.5929 iterations 5
Cbc0038I Pass  12: suminf.    2.16212 (7) obj. -39.5929 iterations 4
Cbc0038I Pass  13: suminf.    1.87735 (6) obj. -39.5929 iterations 4
Cbc0038I Pass  14: suminf.    1.37509 (5) obj. -39.5929 iterations 5
Cbc0038I Pass  15: suminf.    1.33501 (6) obj. -39.5929 iterations 1
Cbc0038I Pass  16: suminf.    2.16860 (6) obj. -39.5929 iterations 6
Cbc0038I Pass  17: suminf.    1.65918 (6) obj. -39.5929 iterations 3
Cbc0038I Pass  18: suminf.    1.54572 (5) obj. -39.5929 iterations 7
Cbc0038I Pass  19: suminf.    1.30456 (5) obj. -39.5929 iterations 3
Cbc0038I Pass  20: suminf.    1.31922 (4) obj. -39.5929 iterations 7
Cbc0038I Pass  21: suminf.    1.31922 (4) obj. -39.5929 iterations 0
Cbc0038I Pass  22: suminf.    1.55324 (4) obj. -39.5929 iterations 5
Cbc0038I Pass  23: suminf.    1.40242 (4) obj. -39.5929 iterations 1
Cbc0038I Pass  24: suminf.    1.83309 (5) obj. -39.5929 iterations 3
Cbc0038I Pass  25: suminf.    1.27047 (5) obj. -39.5929 iterations 5
Cbc0038I Pass  26: suminf.    1.46404 (5) obj. -39.5929 iterations 6
Cbc0038I Pass  27: suminf.    1.46404 (5) obj. -39.5929 iterations 0
Cbc0038I Pass  28: suminf.    1.76873 (5) obj. -39.5929 iterations 5
Cbc0038I Pass  29: suminf.    1.30456 (5) obj. -39.5929 iterations 2
Cbc0038I Pass  30: suminf.    1.31922 (4) obj. -39.5929 iterations 7
Cbc0038I Pass  31: suminf.    1.31922 (4) obj. -39.5929 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -34.7797 - took 0.02 seconds
Cbc0012I Integer solution of -34.779717 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 17 added rows had average density of 13.882353
Cbc0013I At root node, 17 cuts changed objective from -82.9111 to -47.504571 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2269 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1151 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 46 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.779717 best solution, best possible -47.503608 (1.46 seconds)
Cbc0004I Integer solution of -34.911017 found after 2467 iterations and 2 nodes (1.47 seconds)
Cbc0001I Search completed - best objective -34.911017, took 2508 iterations and 4 nodes (1.47 seconds)
Cbc0032I Strong branching done 60 times (748 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 49 (-12) columns and 430 (-183) elements
Clp1000I sum of infeasibilities 4.27242e-08 - average 9.09025e-10, 33 fixed columns
Coin0506I Presolve 14 (-33) rows, 16 (-33) columns and 56 (-374) elements
Clp0006I 0  Obj 16.195106 Dual inf 1.3707449 (15)
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 2.0406202 - largest nonzero change 2.3828479e-05 ( 0.0011547075%) - largest zero change 1.2679361e-05
Clp0000I Optimal - objective value 21.797391
Clp0000I Optimal - objective value 21.797391
Coin0511I After Postsolve, objective 21.797391, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21.797391 Dual inf 105.69767 (26)
Clp0014I Perturbing problem by 0.001% of 1.4037327 - largest nonzero change 2.7521761e-05 ( 0.002562668%) - largest zero change 1.9083096e-05
Clp0000I Optimal - objective value 101.66519
Clp0000I Optimal - objective value 101.66519
Clp0000I Optimal - objective value 101.66519
Coin0511I After Postsolve, objective 101.66519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.6651934 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 49 columns (49 integer (49 of which binary)) and 434 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.019%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.69624
Cbc0038I Pass   1: suminf.    2.98974 (14) obj. -78.0521 iterations 11
Cbc0038I Pass   2: suminf.    2.98974 (14) obj. -78.0521 iterations 1
Cbc0038I Solution found of -30.9625
Cbc0038I Rounding solution of -33.6945 is better than previous of -30.9625

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -39.3161
Cbc0038I Pass   3: suminf.    2.98974 (14) obj. -78.0521 iterations 0
Cbc0038I Pass   4: suminf.    2.98974 (14) obj. -78.0521 iterations 1
Cbc0038I Pass   5: suminf.    0.49139 (1) obj. -39.3161 iterations 21
Cbc0038I Pass   6: suminf.    0.39130 (1) obj. -41.3103 iterations 2
Cbc0038I Pass   7: suminf.    1.77448 (5) obj. -39.3161 iterations 11
Cbc0038I Pass   8: suminf.    1.77448 (5) obj. -39.3161 iterations 0
Cbc0038I Pass   9: suminf.    0.95681 (4) obj. -39.3161 iterations 3
Cbc0038I Pass  10: suminf.    0.95650 (4) obj. -39.3161 iterations 2
Cbc0038I Pass  11: suminf.    1.19002 (4) obj. -39.3161 iterations 5
Cbc0038I Pass  12: suminf.    1.19002 (4) obj. -39.3161 iterations 0
Cbc0038I Pass  13: suminf.    0.95650 (4) obj. -39.3161 iterations 2
Cbc0038I Pass  14: suminf.    2.15368 (7) obj. -39.3161 iterations 15
Cbc0038I Pass  15: suminf.    1.17274 (5) obj. -39.3161 iterations 3
Cbc0038I Pass  16: suminf.    0.79910 (4) obj. -39.3161 iterations 3
Cbc0038I Pass  17: suminf.    0.87639 (3) obj. -39.3161 iterations 6
Cbc0038I Pass  18: suminf.    0.87639 (3) obj. -39.3161 iterations 1
Cbc0038I Pass  19: suminf.    1.25976 (3) obj. -39.3161 iterations 1
Cbc0038I Pass  20: suminf.    0.93903 (3) obj. -39.3161 iterations 3
Cbc0038I Pass  21: suminf.    2.59960 (9) obj. -39.3161 iterations 13
Cbc0038I Pass  22: suminf.    2.33917 (6) obj. -39.3161 iterations 3
Cbc0038I Pass  23: suminf.    2.33917 (6) obj. -39.3161 iterations 0
Cbc0038I Pass  24: suminf.    1.66227 (5) obj. -39.3161 iterations 5
Cbc0038I Pass  25: suminf.    1.45536 (4) obj. -39.3161 iterations 2
Cbc0038I Pass  26: suminf.    1.45536 (4) obj. -39.3161 iterations 0
Cbc0038I Pass  27: suminf.    1.56841 (4) obj. -39.3161 iterations 3
Cbc0038I Pass  28: suminf.    2.27027 (8) obj. -43.4404 iterations 11
Cbc0038I Pass  29: suminf.    2.27027 (8) obj. -43.4404 iterations 3
Cbc0038I Pass  30: suminf.    1.44701 (4) obj. -39.3161 iterations 10
Cbc0038I Pass  31: suminf.    1.36148 (4) obj. -39.3161 iterations 1
Cbc0038I Pass  32: suminf.    1.49376 (4) obj. -39.3161 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 10 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -30.9625 to -34.911 (0.03 seconds)
Cbc0038I Round again with cutoff of -49.4348
Cbc0038I Pass  32: suminf.    2.98974 (14) obj. -78.0521 iterations 0
Cbc0038I Pass  33: suminf.    2.98974 (14) obj. -78.0521 iterations 1
Cbc0038I Pass  34: suminf.    0.82058 (3) obj. -49.4348 iterations 21
Cbc0038I Pass  35: suminf.    0.80917 (3) obj. -49.4348 iterations 1
Cbc0038I Pass  36: suminf.    1.04751 (3) obj. -49.4348 iterations 5
Cbc0038I Pass  37: suminf.    1.04751 (3) obj. -49.4348 iterations 0
Cbc0038I Pass  38: suminf.    0.80917 (3) obj. -49.4348 iterations 2
Cbc0038I Pass  39: suminf.    3.87860 (14) obj. -49.4348 iterations 22
Cbc0038I Pass  40: suminf.    3.76982 (13) obj. -49.4348 iterations 3
Cbc0038I Pass  41: suminf.    2.29526 (8) obj. -49.4348 iterations 14
Cbc0038I Pass  42: suminf.    2.20724 (6) obj. -49.4348 iterations 2
Cbc0038I Pass  43: suminf.    2.09483 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  44: suminf.    1.89049 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  45: suminf.    1.89049 (6) obj. -49.4348 iterations 0
Cbc0038I Pass  46: suminf.    2.20724 (6) obj. -49.4348 iterations 3
Cbc0038I Pass  47: suminf.    2.20724 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  48: suminf.    2.09483 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  49: suminf.    1.89049 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  50: suminf.    1.89049 (6) obj. -49.4348 iterations 0
Cbc0038I Pass  51: suminf.    2.20724 (6) obj. -49.4348 iterations 3
Cbc0038I Pass  52: suminf.    2.20724 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  53: suminf.    2.09483 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  54: suminf.    1.89049 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  55: suminf.    1.89049 (6) obj. -49.4348 iterations 0
Cbc0038I Pass  56: suminf.    2.20724 (6) obj. -49.4348 iterations 3
Cbc0038I Pass  57: suminf.    2.20724 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  58: suminf.    2.09483 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  59: suminf.    1.89049 (6) obj. -49.4348 iterations 1
Cbc0038I Pass  60: suminf.    1.89049 (6) obj. -49.4348 iterations 0
Cbc0038I Pass  61: suminf.    2.20724 (6) obj. -49.4348 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -34.911 - took 0.03 seconds
Cbc0012I Integer solution of -34.911017 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 49 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 20 added rows had average density of 7.2
Cbc0013I At root node, 20 cuts changed objective from -89.909532 to -34.935922 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 362 row cuts average 4.0 elements, 21 column cuts (21 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 66 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0001I Search completed - best objective -34.911017, took 182 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.18

