Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 488 (-39) rows, 251 (-13) columns and 1455 (-90) elements
Clp1000I sum of infeasibilities 8.74408e-05 - average 1.79182e-07, 200 fixed columns
Coin0506I Presolve 94 (-394) rows, 51 (-200) columns and 278 (-1177) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Coin0511I After Postsolve, objective 524.35467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13484167 - largest nonzero change 0 ( 0%) - largest zero change 2.9783652e-05
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Coin0511I After Postsolve, objective 524.35467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 524.354671 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 488 rows, 251 columns (250 integer (250 of which binary)) and 1455 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.385%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.9056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -260.779 iterations 82
Cbc0038I Solution found of -260.779
Cbc0038I Relaxing continuous gives -260.779
Cbc0038I Rounding solution of -355.412 is better than previous of -260.779

Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 88 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -355.412 to -394.374 (0.06 seconds)
Cbc0038I Round again with cutoff of -407.372
Cbc0038I Pass   2: suminf.    1.26282 (14) obj. -407.372 iterations 51
Cbc0038I Pass   3: suminf.    1.26282 (14) obj. -407.372 iterations 0
Cbc0038I Pass   4: suminf.    3.02800 (13) obj. -407.372 iterations 44
Cbc0038I Pass   5: suminf.    2.18160 (8) obj. -407.372 iterations 17
Cbc0038I Pass   6: suminf.    3.68874 (13) obj. -407.372 iterations 35
Cbc0038I Pass   7: suminf.    3.03487 (9) obj. -407.372 iterations 28
Cbc0038I Pass   8: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass   9: suminf.    2.47332 (7) obj. -407.372 iterations 13
Cbc0038I Pass  10: suminf.    1.26206 (7) obj. -407.372 iterations 22
Cbc0038I Pass  11: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  12: suminf.    3.68874 (13) obj. -407.372 iterations 37
Cbc0038I Pass  13: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  14: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass  15: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  16: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  17: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  18: suminf.    3.68874 (13) obj. -407.372 iterations 37
Cbc0038I Pass  19: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  20: suminf.    2.90077 (7) obj. -407.372 iterations 40
Cbc0038I Pass  21: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  22: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  23: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  24: suminf.    3.68874 (13) obj. -407.372 iterations 36
Cbc0038I Pass  25: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  26: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass  27: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  28: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  29: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  30: suminf.    3.68874 (13) obj. -407.372 iterations 36
Cbc0038I Pass  31: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 97 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -394.374 to -401.427 (0.13 seconds)
Cbc0038I Round again with cutoff of -430.769
Cbc0038I Pass  31: suminf.    1.98915 (14) obj. -430.769 iterations 12
Cbc0038I Pass  32: suminf.    1.98915 (14) obj. -430.769 iterations 0
Cbc0038I Pass  33: suminf.    5.22611 (14) obj. -430.769 iterations 45
Cbc0038I Pass  34: suminf.    2.96674 (13) obj. -430.769 iterations 29
Cbc0038I Pass  35: suminf.    2.95924 (13) obj. -430.769 iterations 1
Cbc0038I Pass  36: suminf.    3.49479 (21) obj. -430.769 iterations 63
Cbc0038I Pass  37: suminf.    3.33256 (12) obj. -430.769 iterations 8
Cbc0038I Pass  38: suminf.    4.06723 (10) obj. -430.769 iterations 44
Cbc0038I Pass  39: suminf.    3.05634 (16) obj. -430.769 iterations 42
Cbc0038I Pass  40: suminf.    2.52921 (9) obj. -430.769 iterations 10
Cbc0038I Pass  41: suminf.    2.52921 (9) obj. -430.769 iterations 0
Cbc0038I Pass  42: suminf.    3.19031 (9) obj. -430.769 iterations 37
Cbc0038I Pass  43: suminf.    2.75942 (10) obj. -430.769 iterations 32
Cbc0038I Pass  44: suminf.    3.71802 (11) obj. -430.769 iterations 52
Cbc0038I Pass  45: suminf.    3.54657 (13) obj. -430.769 iterations 30
Cbc0038I Pass  46: suminf.    2.16370 (11) obj. -430.769 iterations 36
Cbc0038I Pass  47: suminf.    1.98915 (14) obj. -430.769 iterations 16
Cbc0038I Pass  48: suminf.    5.22611 (14) obj. -430.769 iterations 48
Cbc0038I Pass  49: suminf.    2.96674 (13) obj. -430.769 iterations 30
Cbc0038I Pass  50: suminf.    2.95924 (13) obj. -430.769 iterations 1
Cbc0038I Pass  51: suminf.    3.49479 (21) obj. -430.769 iterations 64
Cbc0038I Pass  52: suminf.    3.33256 (12) obj. -430.769 iterations 8
Cbc0038I Pass  53: suminf.    4.06723 (10) obj. -430.769 iterations 44
Cbc0038I Pass  54: suminf.    3.05634 (16) obj. -430.769 iterations 42
Cbc0038I Pass  55: suminf.    2.52921 (9) obj. -430.769 iterations 10
Cbc0038I Pass  56: suminf.    2.52921 (9) obj. -430.769 iterations 0
Cbc0038I Pass  57: suminf.    3.19031 (9) obj. -430.769 iterations 37
Cbc0038I Pass  58: suminf.    2.75942 (10) obj. -430.769 iterations 32
Cbc0038I Pass  59: suminf.    3.71802 (11) obj. -430.769 iterations 52
Cbc0038I Pass  60: suminf.    3.54657 (13) obj. -430.769 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 97 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -401.427 - took 0.18 seconds
Cbc0012I Integer solution of -401.42675 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 488 rows 251 columns, reduced to 90 rows 49 columns
Cbc0031I 15 added rows had average density of 147.86667
Cbc0013I At root node, 15 cuts changed objective from -524.35467 to -487.30478 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6686 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.308 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1009 row cuts average 242.9 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 241.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -401.42675 best solution, best possible -487.30448 (1.55 seconds)
Cbc0012I Integer solution of -415.22745 found by rounding after 5976 iterations and 33 nodes (2.04 seconds)
Cbc0001I Search completed - best objective -415.22745, took 6778 iterations and 50 nodes (2.09 seconds)
Cbc0032I Strong branching done 662 times (16405 iterations), fathomed 6 nodes and fixed 32 variables
Cbc0035I Maximum depth 20, 667 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 386 (-140) rows, 398 (-126) columns and 19778 (-15958) elements
Clp1000I sum of infeasibilities 5.03179e-06 - average 1.30357e-08, 275 fixed columns
Coin0506I Presolve 105 (-281) rows, 116 (-282) columns and 427 (-19351) elements
Clp0006I 0  Obj 294.10186 Dual inf 55.008306 (111)
Clp0029I End of values pass after 116 iterations
Clp0014I Perturbing problem by 0.001% of 1.5475417 - largest nonzero change 2.8180566e-05 ( 0.0018545384%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 322.53188
Clp0000I Optimal - objective value 322.53188
Coin0511I After Postsolve, objective 322.53188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 322.53188 Dual inf 413.66537 (155)
Clp0014I Perturbing problem by 0.001% of 2.078521 - largest nonzero change 2.193501e-05 ( 0.0016125406%) - largest zero change 2.9945234e-05
Clp0000I Optimal - objective value 580.76905
Clp0000I Optimal - objective value 580.76905
Clp0000I Optimal - objective value 580.76905
Coin0511I After Postsolve, objective 580.76905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 580.7690482 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0004I processed model has 386 rows, 398 columns (398 integer (398 of which binary)) and 19778 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 149 integers unsatisfied sum - 9.45074
Cbc0038I Pass   1: suminf.    3.01590 (117) obj. -467.949 iterations 52
Cbc0038I Pass   2: suminf.    3.01590 (117) obj. -467.949 iterations 1
Cbc0038I Pass   3: suminf.    2.31589 (100) obj. -401.898 iterations 17
Cbc0038I Pass   4: suminf.    1.57877 (78) obj. -374.843 iterations 22
Cbc0038I Pass   5: suminf.    1.05544 (60) obj. -356.394 iterations 18
Cbc0038I Pass   6: suminf.    0.43365 (33) obj. -322.214 iterations 27
Cbc0038I Pass   7: suminf.    0.17191 (16) obj. -300.555 iterations 17
Cbc0038I Pass   8: suminf.    0.01770 (2) obj. -283.741 iterations 14
Cbc0038I Solution found of -281.759
Cbc0038I Rounding solution of -305.508 is better than previous of -281.759

Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 398 columns, reduced to 130 rows 129 columns
Cbc0038I Mini branch and bound improved solution from -305.508 to -336.022 (0.16 seconds)
Cbc0038I Round again with cutoff of -360.443
Cbc0038I Pass   9: suminf.    3.01590 (117) obj. -467.949 iterations 0
Cbc0038I Pass  10: suminf.    3.01590 (117) obj. -467.949 iterations 1
Cbc0038I Pass  11: suminf.    2.24252 (98) obj. -398.047 iterations 19
Cbc0038I Pass  12: suminf.    1.51583 (76) obj. -372.905 iterations 22
Cbc0038I Pass  13: suminf.    1.11470 (61) obj. -360.443 iterations 25
Cbc0038I Pass  14: suminf.    1.05586 (40) obj. -361.466 iterations 33
Cbc0038I Pass  15: suminf.    2.12613 (35) obj. -360.443 iterations 70
Cbc0038I Pass  16: suminf.    1.50973 (45) obj. -360.443 iterations 23
Cbc0038I Pass  17: suminf.    1.19593 (23) obj. -360.443 iterations 34
Cbc0038I Pass  18: suminf.    0.96532 (24) obj. -360.443 iterations 7
Cbc0038I Pass  19: suminf.    1.30852 (15) obj. -360.443 iterations 16
Cbc0038I Pass  20: suminf.    0.77762 (14) obj. -360.658 iterations 7
Cbc0038I Pass  21: suminf.    0.89323 (6) obj. -360.443 iterations 48
Cbc0038I Pass  22: suminf.    0.77259 (6) obj. -360.443 iterations 19
Cbc0038I Pass  23: suminf.    1.45957 (5) obj. -360.443 iterations 39
Cbc0038I Pass  24: suminf.    0.76528 (5) obj. -363.105 iterations 10
Cbc0038I Pass  25: suminf.    0.98933 (4) obj. -360.443 iterations 22
Cbc0038I Pass  26: suminf.    0.23612 (3) obj. -360.443 iterations 14
Cbc0038I Pass  27: suminf.    0.36205 (3) obj. -360.443 iterations 4
Cbc0038I Pass  28: suminf.    2.46499 (34) obj. -360.443 iterations 69
Cbc0038I Pass  29: suminf.    1.73384 (29) obj. -362.682 iterations 14
Cbc0038I Pass  30: suminf.    1.70479 (29) obj. -360.443 iterations 6
Cbc0038I Pass  31: suminf.    1.81313 (20) obj. -360.443 iterations 31
Cbc0038I Pass  32: suminf.    1.80030 (20) obj. -360.443 iterations 10
Cbc0038I Pass  33: suminf.    0.61691 (4) obj. -360.443 iterations 54
Cbc0038I Pass  34: suminf.    0.27129 (3) obj. -360.443 iterations 19
Cbc0038I Pass  35: suminf.    0.31728 (3) obj. -360.443 iterations 4
Cbc0038I Pass  36: suminf.    2.32010 (30) obj. -360.443 iterations 79
Cbc0038I Pass  37: suminf.    1.51611 (27) obj. -360.443 iterations 26
Cbc0038I Pass  38: suminf.    1.23729 (16) obj. -360.443 iterations 39
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 398 columns, reduced to 160 rows 166 columns
Cbc0038I Mini branch and bound improved solution from -336.022 to -355.878 (0.40 seconds)
Cbc0038I Round again with cutoff of -404.402
Cbc0038I Pass  38: suminf.    3.01590 (117) obj. -467.949 iterations 0
Cbc0038I Pass  39: suminf.    3.01590 (117) obj. -467.949 iterations 1
Cbc0038I Pass  40: suminf.    2.35696 (100) obj. -404.402 iterations 21
Cbc0038I Pass  41: suminf.    2.32889 (89) obj. -404.402 iterations 19
Cbc0038I Pass  42: suminf.    2.70563 (97) obj. -404.402 iterations 76
Cbc0038I Pass  43: suminf.    2.47089 (98) obj. -404.402 iterations 23
Cbc0038I Pass  44: suminf.    2.88289 (80) obj. -404.402 iterations 44
Cbc0038I Pass  45: suminf.    2.58961 (80) obj. -404.402 iterations 11
Cbc0038I Pass  46: suminf.    2.05737 (74) obj. -404.402 iterations 31
Cbc0038I Pass  47: suminf.    2.05036 (72) obj. -404.402 iterations 10
Cbc0038I Pass  48: suminf.    2.50459 (49) obj. -404.402 iterations 86
Cbc0038I Pass  49: suminf.    1.90302 (50) obj. -404.402 iterations 14
Cbc0038I Pass  50: suminf.    1.90302 (50) obj. -404.402 iterations 6
Cbc0038I Pass  51: suminf.    1.81067 (41) obj. -404.402 iterations 34
Cbc0038I Pass  52: suminf.    1.81067 (41) obj. -404.402 iterations 10
Cbc0038I Pass  53: suminf.    2.42399 (34) obj. -404.402 iterations 36
Cbc0038I Pass  54: suminf.    1.52493 (34) obj. -404.402 iterations 20
Cbc0038I Pass  55: suminf.    1.72227 (25) obj. -404.402 iterations 38
Cbc0038I Pass  56: suminf.    1.55315 (27) obj. -404.402 iterations 14
Cbc0038I Pass  57: suminf.    1.26978 (14) obj. -404.402 iterations 50
Cbc0038I Pass  58: suminf.    1.16996 (11) obj. -404.402 iterations 4
Cbc0038I Pass  59: suminf.    1.27313 (11) obj. -404.402 iterations 41
Cbc0038I Pass  60: suminf.    1.77163 (29) obj. -404.402 iterations 57
Cbc0038I Pass  61: suminf.    1.73429 (26) obj. -404.402 iterations 18
Cbc0038I Pass  62: suminf.    1.30844 (19) obj. -404.402 iterations 32
Cbc0038I Pass  63: suminf.    0.95382 (19) obj. -404.402 iterations 11
Cbc0038I Pass  64: suminf.    0.98992 (13) obj. -404.402 iterations 28
Cbc0038I Pass  65: suminf.    0.96011 (16) obj. -404.402 iterations 9
Cbc0038I Pass  66: suminf.    1.07311 (10) obj. -404.402 iterations 36
Cbc0038I Pass  67: suminf.    0.51342 (8) obj. -404.402 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 398 columns, reduced to 153 rows 156 columns
Cbc0038I Mini branch and bound did not improve solution (0.58 seconds)
Cbc0038I After 0.58 seconds - Feasibility pump exiting with objective of -355.878 - took 0.47 seconds
Cbc0012I Integer solution of -355.87795 found by feasibility pump after 0 iterations and 0 nodes (0.58 seconds)
Cbc0038I Full problem 386 rows 398 columns, reduced to 131 rows 133 columns
Cbc0031I 136 added rows had average density of 148.83824
Cbc0013I At root node, 136 cuts changed objective from -580.23767 to -439.19398 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13614 row cuts average 23.8 elements, 1 column cuts (62 active)  in 1.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4277 row cuts average 331.8 elements, 0 column cuts (0 active)  in 1.691 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 268 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4976 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.583 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2494 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.790 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 462 row cuts average 204.1 elements, 0 column cuts (0 active)  in 0.278 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 86 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -355.87795 best solution, best possible -439.19398 (9.03 seconds)
Cbc0012I Integer solution of -385.35475 found by DiveCoefficient after 9270 iterations and 2 nodes (9.31 seconds)
Cbc0012I Integer solution of -386.5678 found by DiveCoefficient after 9311 iterations and 4 nodes (9.42 seconds)
Cbc0012I Integer solution of -403.78335 found by DiveCoefficient after 9493 iterations and 11 nodes (9.70 seconds)
Cbc0010I After 12 nodes, 10 on tree, -403.78335 best solution, best possible -439.19398 (9.74 seconds)
Cbc0012I Integer solution of -415.22745 found by DiveCoefficient after 9548 iterations and 13 nodes (9.74 seconds)
Cbc0010I After 27 nodes, 2 on tree, -415.22745 best solution, best possible -438.8335 (10.57 seconds)
Cbc0010I After 31 nodes, 6 on tree, -415.22745 best solution, best possible -438.8335 (11.34 seconds)
Cbc0038I Full problem 386 rows 398 columns, reduced to 160 rows 168 columns
Cbc0010I After 42 nodes, 7 on tree, -415.22745 best solution, best possible -438.8335 (13.60 seconds)
Cbc0038I Full problem 522 rows 398 columns, reduced to 290 rows 301 columns
Cbc0044I Reduced cost fixing - 290 rows, 301 columns - restarting search
Cbc0012I Integer solution of -415.22745 found by Previous solution after 0 iterations and 0 nodes (13.93 seconds)
Cbc0038I Full problem 290 rows 301 columns, reduced to 155 rows 160 columns - 13 fixed gives 143, 147 - ok now
Cbc0038I Full problem 290 rows 301 columns, reduced to 125 rows 128 columns
Cbc0031I 136 added rows had average density of 105.19118
Cbc0013I At root node, 136 cuts changed objective from -571.88346 to -437.72316 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11598 row cuts average 9.7 elements, 4 column cuts (4 active)  in 0.458 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 260.1 elements, 0 column cuts (0 active)  in 1.419 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 267 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4040 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.499 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1518 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.944 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 110.5 elements, 0 column cuts (0 active)  in 0.247 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 53 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 1139 row cuts average 70.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -415.22745 best solution, best possible -437.72316 (20.48 seconds)
Cbc0010I After 22 nodes, 1 on tree, -415.22745 best solution, best possible -434.97456 (21.60 seconds)
Cbc0010I After 40 nodes, 3 on tree, -415.22745 best solution, best possible -431.17638 (22.61 seconds)
Cbc0038I Full problem 290 rows 301 columns, reduced to 19 rows 20 columns
Cbc0001I Search completed - best objective -415.22745, took 12883 iterations and 52 nodes (22.77 seconds)
Cbc0032I Strong branching done 836 times (26249 iterations), fathomed 3 nodes and fixed 45 variables
Cbc0035I Maximum depth 10, 292 variables fixed on reduced cost
Cbc0038I Probing was tried 224 times and created 14912 cuts of which 0 were active after adding rounds of cuts (0.613 seconds)
Cbc0038I Gomory was tried 221 times and created 1207 cuts of which 0 were active after adding rounds of cuts (1.544 seconds)
Cbc0038I Knapsack was tried 221 times and created 1044 cuts of which 0 were active after adding rounds of cuts (0.170 seconds)
Cbc0038I Clique was tried 221 times and created 6205 cuts of which 0 were active after adding rounds of cuts (0.192 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.499 seconds)
Cbc0038I MixedIntegerRounding2 was tried 221 times and created 2682 cuts of which 0 were active after adding rounds of cuts (1.142 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I TwoMirCuts was tried 221 times and created 253 cuts of which 0 were active after adding rounds of cuts (0.429 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 53 cuts of which 0 were active after adding rounds of cuts (0.224 seconds)
Cbc0038I Stored from first was tried 221 times and created 1588 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -415.22745, took 25079 iterations and 102 nodes (22.80 seconds)
Cbc0032I Strong branching done 966 times (30108 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 207 variables fixed on reduced cost
Total time (CPU seconds):       22.28   (Wallclock seconds):       22.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 488 (-39) rows, 251 (-13) columns and 1455 (-90) elements
Clp1000I sum of infeasibilities 8.74408e-05 - average 1.79182e-07, 200 fixed columns
Coin0506I Presolve 94 (-394) rows, 51 (-200) columns and 278 (-1177) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Coin0511I After Postsolve, objective 524.35467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13484167 - largest nonzero change 0 ( 0%) - largest zero change 2.9783652e-05
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Clp0000I Optimal - objective value 524.35467
Coin0511I After Postsolve, objective 524.35467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 524.354671 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 488 rows, 251 columns (250 integer (250 of which binary)) and 1455 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.385%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.9056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -260.779 iterations 82
Cbc0038I Solution found of -260.779
Cbc0038I Relaxing continuous gives -260.779
Cbc0038I Rounding solution of -355.412 is better than previous of -260.779

Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 88 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -355.412 to -394.374 (0.06 seconds)
Cbc0038I Round again with cutoff of -407.372
Cbc0038I Pass   2: suminf.    1.26282 (14) obj. -407.372 iterations 51
Cbc0038I Pass   3: suminf.    1.26282 (14) obj. -407.372 iterations 0
Cbc0038I Pass   4: suminf.    3.02800 (13) obj. -407.372 iterations 44
Cbc0038I Pass   5: suminf.    2.18160 (8) obj. -407.372 iterations 17
Cbc0038I Pass   6: suminf.    3.68874 (13) obj. -407.372 iterations 35
Cbc0038I Pass   7: suminf.    3.03487 (9) obj. -407.372 iterations 28
Cbc0038I Pass   8: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass   9: suminf.    2.47332 (7) obj. -407.372 iterations 13
Cbc0038I Pass  10: suminf.    1.26206 (7) obj. -407.372 iterations 22
Cbc0038I Pass  11: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  12: suminf.    3.68874 (13) obj. -407.372 iterations 37
Cbc0038I Pass  13: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  14: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass  15: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  16: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  17: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  18: suminf.    3.68874 (13) obj. -407.372 iterations 37
Cbc0038I Pass  19: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  20: suminf.    2.90077 (7) obj. -407.372 iterations 40
Cbc0038I Pass  21: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  22: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  23: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  24: suminf.    3.68874 (13) obj. -407.372 iterations 36
Cbc0038I Pass  25: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I Pass  26: suminf.    2.90077 (7) obj. -407.372 iterations 39
Cbc0038I Pass  27: suminf.    2.47332 (7) obj. -407.372 iterations 12
Cbc0038I Pass  28: suminf.    1.26206 (7) obj. -407.372 iterations 21
Cbc0038I Pass  29: suminf.    1.26206 (7) obj. -407.372 iterations 2
Cbc0038I Pass  30: suminf.    3.68874 (13) obj. -407.372 iterations 36
Cbc0038I Pass  31: suminf.    3.03487 (9) obj. -407.372 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 97 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -394.374 to -401.427 (0.13 seconds)
Cbc0038I Round again with cutoff of -430.769
Cbc0038I Pass  31: suminf.    1.98915 (14) obj. -430.769 iterations 12
Cbc0038I Pass  32: suminf.    1.98915 (14) obj. -430.769 iterations 0
Cbc0038I Pass  33: suminf.    5.22611 (14) obj. -430.769 iterations 45
Cbc0038I Pass  34: suminf.    2.96674 (13) obj. -430.769 iterations 29
Cbc0038I Pass  35: suminf.    2.95924 (13) obj. -430.769 iterations 1
Cbc0038I Pass  36: suminf.    3.49479 (21) obj. -430.769 iterations 63
Cbc0038I Pass  37: suminf.    3.33256 (12) obj. -430.769 iterations 8
Cbc0038I Pass  38: suminf.    4.06723 (10) obj. -430.769 iterations 44
Cbc0038I Pass  39: suminf.    3.05634 (16) obj. -430.769 iterations 42
Cbc0038I Pass  40: suminf.    2.52921 (9) obj. -430.769 iterations 10
Cbc0038I Pass  41: suminf.    2.52921 (9) obj. -430.769 iterations 0
Cbc0038I Pass  42: suminf.    3.19031 (9) obj. -430.769 iterations 37
Cbc0038I Pass  43: suminf.    2.75942 (10) obj. -430.769 iterations 32
Cbc0038I Pass  44: suminf.    3.71802 (11) obj. -430.769 iterations 52
Cbc0038I Pass  45: suminf.    3.54657 (13) obj. -430.769 iterations 30
Cbc0038I Pass  46: suminf.    2.16370 (11) obj. -430.769 iterations 36
Cbc0038I Pass  47: suminf.    1.98915 (14) obj. -430.769 iterations 16
Cbc0038I Pass  48: suminf.    5.22611 (14) obj. -430.769 iterations 48
Cbc0038I Pass  49: suminf.    2.96674 (13) obj. -430.769 iterations 30
Cbc0038I Pass  50: suminf.    2.95924 (13) obj. -430.769 iterations 1
Cbc0038I Pass  51: suminf.    3.49479 (21) obj. -430.769 iterations 64
Cbc0038I Pass  52: suminf.    3.33256 (12) obj. -430.769 iterations 8
Cbc0038I Pass  53: suminf.    4.06723 (10) obj. -430.769 iterations 44
Cbc0038I Pass  54: suminf.    3.05634 (16) obj. -430.769 iterations 42
Cbc0038I Pass  55: suminf.    2.52921 (9) obj. -430.769 iterations 10
Cbc0038I Pass  56: suminf.    2.52921 (9) obj. -430.769 iterations 0
Cbc0038I Pass  57: suminf.    3.19031 (9) obj. -430.769 iterations 37
Cbc0038I Pass  58: suminf.    2.75942 (10) obj. -430.769 iterations 32
Cbc0038I Pass  59: suminf.    3.71802 (11) obj. -430.769 iterations 52
Cbc0038I Pass  60: suminf.    3.54657 (13) obj. -430.769 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 488 rows 251 columns, reduced to 97 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -401.427 - took 0.18 seconds
Cbc0012I Integer solution of -401.42675 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 488 rows 251 columns, reduced to 90 rows 49 columns
Cbc0031I 15 added rows had average density of 147.86667
Cbc0013I At root node, 15 cuts changed objective from -524.35467 to -487.30478 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6686 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.317 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1009 row cuts average 242.9 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 241.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -401.42675 best solution, best possible -487.30448 (1.60 seconds)
Cbc0012I Integer solution of -415.22745 found by rounding after 5976 iterations and 33 nodes (2.10 seconds)
Cbc0001I Search completed - best objective -415.22745, took 6778 iterations and 50 nodes (2.14 seconds)
Cbc0032I Strong branching done 662 times (16405 iterations), fathomed 6 nodes and fixed 32 variables
Cbc0035I Maximum depth 20, 667 variables fixed on reduced cost
Total time (CPU seconds):       2.10   (Wallclock seconds):       2.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 386 (-141) rows, 398 (-127) columns and 19778 (-15959) elements
Clp1000I sum of infeasibilities 5.03179e-06 - average 1.30357e-08, 275 fixed columns
Coin0506I Presolve 105 (-281) rows, 116 (-282) columns and 427 (-19351) elements
Clp0006I 0  Obj 294.10186 Dual inf 55.008306 (111)
Clp0029I End of values pass after 116 iterations
Clp0014I Perturbing problem by 0.001% of 1.5475417 - largest nonzero change 2.8180566e-05 ( 0.0018545384%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 322.53188
Clp0000I Optimal - objective value 322.53188
Coin0511I After Postsolve, objective 322.53188, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 322.53188 Dual inf 413.66537 (155)
Clp0014I Perturbing problem by 0.001% of 2.078521 - largest nonzero change 2.193501e-05 ( 0.0016125406%) - largest zero change 2.9945234e-05
Clp0000I Optimal - objective value 580.76905
Clp0000I Optimal - objective value 580.76905
Clp0000I Optimal - objective value 580.76905
Coin0511I After Postsolve, objective 580.76905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 580.7690482 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 386 rows, 398 columns (398 integer (398 of which binary)) and 19778 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 149 integers unsatisfied sum - 9.45074
Cbc0038I Pass   1: suminf.    3.01590 (117) obj. -467.949 iterations 52
Cbc0038I Pass   2: suminf.    3.01590 (117) obj. -467.949 iterations 1
Cbc0038I Pass   3: suminf.    2.31589 (100) obj. -401.898 iterations 17
Cbc0038I Pass   4: suminf.    1.57877 (78) obj. -374.843 iterations 22
Cbc0038I Pass   5: suminf.    1.05544 (60) obj. -356.394 iterations 18
Cbc0038I Pass   6: suminf.    0.43365 (33) obj. -322.214 iterations 27
Cbc0038I Pass   7: suminf.    0.17191 (16) obj. -300.555 iterations 17
Cbc0038I Pass   8: suminf.    0.01770 (2) obj. -283.741 iterations 14
Cbc0038I Solution found of -281.759
Cbc0038I Rounding solution of -305.508 is better than previous of -281.759

Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 398 columns, reduced to 130 rows 129 columns
Cbc0038I Mini branch and bound improved solution from -305.508 to -336.022 (0.16 seconds)
Cbc0038I Round again with cutoff of -360.443
Cbc0038I Pass   9: suminf.    3.01590 (117) obj. -467.949 iterations 0
Cbc0038I Pass  10: suminf.    3.01590 (117) obj. -467.949 iterations 1
Cbc0038I Pass  11: suminf.    2.24252 (98) obj. -398.047 iterations 19
Cbc0038I Pass  12: suminf.    1.51583 (76) obj. -372.905 iterations 22
Cbc0038I Pass  13: suminf.    1.11470 (61) obj. -360.443 iterations 25
Cbc0038I Pass  14: suminf.    1.05586 (40) obj. -361.466 iterations 33
Cbc0038I Pass  15: suminf.    2.12613 (35) obj. -360.443 iterations 70
Cbc0038I Pass  16: suminf.    1.50973 (45) obj. -360.443 iterations 23
Cbc0038I Pass  17: suminf.    1.19593 (23) obj. -360.443 iterations 34
Cbc0038I Pass  18: suminf.    0.96532 (24) obj. -360.443 iterations 7
Cbc0038I Pass  19: suminf.    1.30852 (15) obj. -360.443 iterations 16
Cbc0038I Pass  20: suminf.    0.77762 (14) obj. -360.658 iterations 7
Cbc0038I Pass  21: suminf.    0.89323 (6) obj. -360.443 iterations 48
Cbc0038I Pass  22: suminf.    0.77259 (6) obj. -360.443 iterations 19
Cbc0038I Pass  23: suminf.    1.45957 (5) obj. -360.443 iterations 39
Cbc0038I Pass  24: suminf.    0.76528 (5) obj. -363.105 iterations 10
Cbc0038I Pass  25: suminf.    0.98933 (4) obj. -360.443 iterations 22
Cbc0038I Pass  26: suminf.    0.23612 (3) obj. -360.443 iterations 14
Cbc0038I Pass  27: suminf.    0.36205 (3) obj. -360.443 iterations 4
Cbc0038I Pass  28: suminf.    2.46499 (34) obj. -360.443 iterations 69
Cbc0038I Pass  29: suminf.    1.73384 (29) obj. -362.682 iterations 14
Cbc0038I Pass  30: suminf.    1.70479 (29) obj. -360.443 iterations 6
Cbc0038I Pass  31: suminf.    1.81313 (20) obj. -360.443 iterations 31
Cbc0038I Pass  32: suminf.    1.80030 (20) obj. -360.443 iterations 10
Cbc0038I Pass  33: suminf.    0.61691 (4) obj. -360.443 iterations 54
Cbc0038I Pass  34: suminf.    0.27129 (3) obj. -360.443 iterations 19
Cbc0038I Pass  35: suminf.    0.31728 (3) obj. -360.443 iterations 4
Cbc0038I Pass  36: suminf.    2.32010 (30) obj. -360.443 iterations 79
Cbc0038I Pass  37: suminf.    1.51611 (27) obj. -360.443 iterations 26
Cbc0038I Pass  38: suminf.    1.23729 (16) obj. -360.443 iterations 39
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 398 columns, reduced to 160 rows 166 columns
Cbc0038I Mini branch and bound improved solution from -336.022 to -355.878 (0.41 seconds)
Cbc0038I Round again with cutoff of -404.402
Cbc0038I Pass  38: suminf.    3.01590 (117) obj. -467.949 iterations 0
Cbc0038I Pass  39: suminf.    3.01590 (117) obj. -467.949 iterations 1
Cbc0038I Pass  40: suminf.    2.35696 (100) obj. -404.402 iterations 21
Cbc0038I Pass  41: suminf.    2.32889 (89) obj. -404.402 iterations 19
Cbc0038I Pass  42: suminf.    2.70563 (97) obj. -404.402 iterations 76
Cbc0038I Pass  43: suminf.    2.47089 (98) obj. -404.402 iterations 23
Cbc0038I Pass  44: suminf.    2.88289 (80) obj. -404.402 iterations 44
Cbc0038I Pass  45: suminf.    2.58961 (80) obj. -404.402 iterations 11
Cbc0038I Pass  46: suminf.    2.05737 (74) obj. -404.402 iterations 31
Cbc0038I Pass  47: suminf.    2.05036 (72) obj. -404.402 iterations 10
Cbc0038I Pass  48: suminf.    2.50459 (49) obj. -404.402 iterations 86
Cbc0038I Pass  49: suminf.    1.90302 (50) obj. -404.402 iterations 14
Cbc0038I Pass  50: suminf.    1.90302 (50) obj. -404.402 iterations 6
Cbc0038I Pass  51: suminf.    1.81067 (41) obj. -404.402 iterations 34
Cbc0038I Pass  52: suminf.    1.81067 (41) obj. -404.402 iterations 10
Cbc0038I Pass  53: suminf.    2.42399 (34) obj. -404.402 iterations 36
Cbc0038I Pass  54: suminf.    1.52493 (34) obj. -404.402 iterations 20
Cbc0038I Pass  55: suminf.    1.72227 (25) obj. -404.402 iterations 38
Cbc0038I Pass  56: suminf.    1.55315 (27) obj. -404.402 iterations 14
Cbc0038I Pass  57: suminf.    1.26978 (14) obj. -404.402 iterations 50
Cbc0038I Pass  58: suminf.    1.16996 (11) obj. -404.402 iterations 4
Cbc0038I Pass  59: suminf.    1.27313 (11) obj. -404.402 iterations 41
Cbc0038I Pass  60: suminf.    1.77163 (29) obj. -404.402 iterations 57
Cbc0038I Pass  61: suminf.    1.73429 (26) obj. -404.402 iterations 18
Cbc0038I Pass  62: suminf.    1.30844 (19) obj. -404.402 iterations 32
Cbc0038I Pass  63: suminf.    0.95382 (19) obj. -404.402 iterations 11
Cbc0038I Pass  64: suminf.    0.98992 (13) obj. -404.402 iterations 28
Cbc0038I Pass  65: suminf.    0.96011 (16) obj. -404.402 iterations 9
Cbc0038I Pass  66: suminf.    1.07311 (10) obj. -404.402 iterations 36
Cbc0038I Pass  67: suminf.    0.51342 (8) obj. -404.402 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 398 columns, reduced to 153 rows 156 columns
Cbc0038I Mini branch and bound did not improve solution (0.58 seconds)
Cbc0038I After 0.58 seconds - Feasibility pump exiting with objective of -355.878 - took 0.47 seconds
Cbc0012I Integer solution of -355.87795 found by feasibility pump after 0 iterations and 0 nodes (0.58 seconds)
Cbc0038I Full problem 386 rows 398 columns, reduced to 131 rows 133 columns
Cbc0031I 136 added rows had average density of 148.83824
Cbc0013I At root node, 136 cuts changed objective from -580.23767 to -439.19398 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13614 row cuts average 23.8 elements, 1 column cuts (62 active)  in 1.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4277 row cuts average 331.8 elements, 0 column cuts (0 active)  in 1.707 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 268 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4976 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.584 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2494 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.796 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 462 row cuts average 204.1 elements, 0 column cuts (0 active)  in 0.282 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 86 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -355.87795 best solution, best possible -439.19398 (9.11 seconds)
Cbc0012I Integer solution of -385.35475 found by DiveCoefficient after 9270 iterations and 2 nodes (9.41 seconds)
Cbc0012I Integer solution of -386.5678 found by DiveCoefficient after 9311 iterations and 4 nodes (9.52 seconds)
Cbc0012I Integer solution of -403.78335 found by DiveCoefficient after 9493 iterations and 11 nodes (9.82 seconds)
Cbc0010I After 11 nodes, 9 on tree, -403.78335 best solution, best possible -439.19398 (9.83 seconds)
Cbc0012I Integer solution of -415.22745 found by DiveCoefficient after 9548 iterations and 13 nodes (9.86 seconds)
Cbc0010I After 27 nodes, 2 on tree, -415.22745 best solution, best possible -438.8335 (10.67 seconds)
Cbc0010I After 31 nodes, 6 on tree, -415.22745 best solution, best possible -438.8335 (11.42 seconds)
Cbc0038I Full problem 386 rows 398 columns, reduced to 160 rows 168 columns
Cbc0010I After 42 nodes, 7 on tree, -415.22745 best solution, best possible -438.8335 (13.70 seconds)
Cbc0038I Full problem 522 rows 398 columns, reduced to 290 rows 301 columns
Cbc0044I Reduced cost fixing - 290 rows, 301 columns - restarting search
Cbc0012I Integer solution of -415.22745 found by Previous solution after 0 iterations and 0 nodes (14.03 seconds)
Cbc0038I Full problem 290 rows 301 columns, reduced to 155 rows 160 columns - 13 fixed gives 143, 147 - ok now
Cbc0038I Full problem 290 rows 301 columns, reduced to 125 rows 128 columns
Cbc0031I 136 added rows had average density of 105.19118
Cbc0013I At root node, 136 cuts changed objective from -571.88346 to -437.72316 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11598 row cuts average 9.7 elements, 4 column cuts (4 active)  in 0.455 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 260.1 elements, 0 column cuts (0 active)  in 1.404 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 267 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4040 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.494 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1518 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.932 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 110.5 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 53 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.219 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 1139 row cuts average 70.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -415.22745 best solution, best possible -437.72316 (20.52 seconds)
Cbc0010I After 22 nodes, 1 on tree, -415.22745 best solution, best possible -434.97456 (21.67 seconds)
Cbc0010I After 40 nodes, 3 on tree, -415.22745 best solution, best possible -431.17638 (22.69 seconds)
Cbc0038I Full problem 290 rows 301 columns, reduced to 19 rows 20 columns
Cbc0001I Search completed - best objective -415.22745, took 12883 iterations and 52 nodes (22.87 seconds)
Cbc0032I Strong branching done 836 times (26249 iterations), fathomed 3 nodes and fixed 45 variables
Cbc0035I Maximum depth 10, 292 variables fixed on reduced cost
Cbc0038I Probing was tried 224 times and created 14912 cuts of which 0 were active after adding rounds of cuts (0.614 seconds)
Cbc0038I Gomory was tried 221 times and created 1207 cuts of which 0 were active after adding rounds of cuts (1.533 seconds)
Cbc0038I Knapsack was tried 221 times and created 1044 cuts of which 0 were active after adding rounds of cuts (0.172 seconds)
Cbc0038I Clique was tried 221 times and created 6205 cuts of which 0 were active after adding rounds of cuts (0.194 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.494 seconds)
Cbc0038I MixedIntegerRounding2 was tried 221 times and created 2682 cuts of which 0 were active after adding rounds of cuts (1.138 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I TwoMirCuts was tried 221 times and created 253 cuts of which 0 were active after adding rounds of cuts (0.427 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 53 cuts of which 0 were active after adding rounds of cuts (0.219 seconds)
Cbc0038I Stored from first was tried 221 times and created 1588 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -415.22745, took 25079 iterations and 102 nodes (22.90 seconds)
Cbc0032I Strong branching done 966 times (30108 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 207 variables fixed on reduced cost
Total time (CPU seconds):       22.40   (Wallclock seconds):       23.02

