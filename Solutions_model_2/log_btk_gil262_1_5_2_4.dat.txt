Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 262 (-2) columns and 1491 (-54) elements
Clp1000I sum of infeasibilities 0.000113671 - average 2.27798e-07, 115 fixed columns
Coin0506I Presolve 265 (-234) rows, 144 (-118) columns and 796 (-695) elements
Clp0029I End of values pass after 144 iterations
Clp0014I Perturbing problem by 0.001% of 0.1675869 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 132.92944
Clp0000I Optimal - objective value 132.92944
Coin0511I After Postsolve, objective 132.92944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13707262 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 132.92944
Clp0000I Optimal - objective value 132.92944
Clp0000I Optimal - objective value 132.92944
Coin0511I After Postsolve, objective 132.92944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 132.9294352 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 262 columns (261 integer (261 of which binary)) and 1491 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.361%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 77 integers unsatisfied sum - 10.1046
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.6053 iterations 168
Cbc0038I Solution found of -20.6053
Cbc0038I Relaxing continuous gives -20.6053
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 138 rows 78 columns
Cbc0038I Mini branch and bound improved solution from -20.6053 to -45.2477 (0.07 seconds)
Cbc0038I Round again with cutoff of -54.016
Cbc0038I Pass   2: suminf.    1.59342 (9) obj. -54.016 iterations 28
Cbc0038I Pass   3: suminf.    2.82658 (8) obj. -54.016 iterations 29
Cbc0038I Pass   4: suminf.    2.20723 (7) obj. -54.016 iterations 7
Cbc0038I Pass   5: suminf.    1.85552 (6) obj. -54.016 iterations 6
Cbc0038I Pass   6: suminf.    1.42605 (5) obj. -54.016 iterations 3
Cbc0038I Pass   7: suminf.    1.24191 (5) obj. -54.016 iterations 23
Cbc0038I Pass   8: suminf.    1.12792 (4) obj. -54.016 iterations 3
Cbc0038I Pass   9: suminf.    1.23438 (4) obj. -54.016 iterations 19
Cbc0038I Pass  10: suminf.    3.98891 (12) obj. -54.016 iterations 76
Cbc0038I Pass  11: suminf.    1.51750 (6) obj. -54.016 iterations 41
Cbc0038I Pass  12: suminf.    1.20335 (6) obj. -54.016 iterations 3
Cbc0038I Pass  13: suminf.    1.44818 (4) obj. -54.016 iterations 27
Cbc0038I Pass  14: suminf.    1.14093 (4) obj. -54.016 iterations 1
Cbc0038I Pass  15: suminf.    0.55234 (2) obj. -54.016 iterations 4
Cbc0038I Pass  16: suminf.    0.53850 (2) obj. -54.016 iterations 1
Cbc0038I Pass  17: suminf.    0.71229 (3) obj. -54.016 iterations 3
Cbc0038I Pass  18: suminf.    1.04228 (4) obj. -54.016 iterations 7
Cbc0038I Pass  19: suminf.    1.04228 (4) obj. -54.016 iterations 0
Cbc0038I Pass  20: suminf.    0.43436 (1) obj. -54.016 iterations 7
Cbc0038I Pass  21: suminf.    0.10211 (2) obj. -54.016 iterations 3
Cbc0038I Pass  22: suminf.    0.75966 (2) obj. -54.016 iterations 2
Cbc0038I Pass  23: suminf.    0.68098 (3) obj. -54.016 iterations 1
Cbc0038I Pass  24: suminf.    1.10166 (3) obj. -54.016 iterations 8
Cbc0038I Pass  25: suminf.    5.07543 (15) obj. -54.016 iterations 52
Cbc0038I Pass  26: suminf.    2.58313 (9) obj. -54.016 iterations 33
Cbc0038I Pass  27: suminf.    2.54241 (10) obj. -54.016 iterations 4
Cbc0038I Pass  28: suminf.    2.09249 (5) obj. -54.016 iterations 51
Cbc0038I Pass  29: suminf.    1.19850 (3) obj. -54.016 iterations 5
Cbc0038I Pass  30: suminf.    0.49646 (1) obj. -54.016 iterations 8
Cbc0038I Pass  31: suminf.    0.36722 (2) obj. -54.016 iterations 2
Cbc0038I Rounding solution of -67.827 is better than previous of -45.2477

Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 173 rows 97 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -80.8475
Cbc0038I Pass  31: suminf.    3.14298 (17) obj. -80.8475 iterations 12
Cbc0038I Pass  32: suminf.    4.53507 (12) obj. -80.8475 iterations 35
Cbc0038I Pass  33: suminf.    3.07203 (9) obj. -80.8475 iterations 21
Cbc0038I Pass  34: suminf.    3.07203 (9) obj. -80.8475 iterations 0
Cbc0038I Pass  35: suminf.    2.66720 (7) obj. -80.8475 iterations 19
Cbc0038I Pass  36: suminf.    2.55998 (9) obj. -80.8475 iterations 26
Cbc0038I Pass  37: suminf.    3.18424 (9) obj. -80.8475 iterations 25
Cbc0038I Pass  38: suminf.    2.46546 (7) obj. -80.8475 iterations 18
Cbc0038I Pass  39: suminf.    2.41601 (8) obj. -80.8475 iterations 13
Cbc0038I Pass  40: suminf.    3.25383 (9) obj. -80.8475 iterations 24
Cbc0038I Pass  41: suminf.    2.51059 (11) obj. -80.8475 iterations 21
Cbc0038I Pass  42: suminf.    2.45915 (8) obj. -80.8475 iterations 7
Cbc0038I Pass  43: suminf.    3.40005 (13) obj. -80.8475 iterations 16
Cbc0038I Pass  44: suminf.    2.51087 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  45: suminf.    2.49060 (8) obj. -80.8475 iterations 6
Cbc0038I Pass  46: suminf.    3.47432 (15) obj. -80.8475 iterations 28
Cbc0038I Pass  47: suminf.    2.58843 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  48: suminf.    2.55998 (9) obj. -80.8475 iterations 5
Cbc0038I Pass  49: suminf.    3.18424 (9) obj. -80.8475 iterations 28
Cbc0038I Pass  50: suminf.    2.46546 (7) obj. -80.8475 iterations 20
Cbc0038I Pass  51: suminf.    2.41601 (8) obj. -80.8475 iterations 15
Cbc0038I Pass  52: suminf.    3.25383 (9) obj. -80.8475 iterations 25
Cbc0038I Pass  53: suminf.    2.51059 (11) obj. -80.8475 iterations 19
Cbc0038I Pass  54: suminf.    2.45915 (8) obj. -80.8475 iterations 8
Cbc0038I Pass  55: suminf.    3.40005 (13) obj. -80.8475 iterations 17
Cbc0038I Pass  56: suminf.    2.51087 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  57: suminf.    2.49060 (8) obj. -80.8475 iterations 6
Cbc0038I Pass  58: suminf.    3.47432 (15) obj. -80.8475 iterations 28
Cbc0038I Pass  59: suminf.    2.58843 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  60: suminf.    2.55998 (9) obj. -80.8475 iterations 5
Cbc0038I Rounding solution of -69.8909 is better than previous of -67.827

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 157 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -69.8909 to -70.3801 (0.22 seconds)
Cbc0038I Round again with cutoff of -96.4721
Cbc0038I Pass  60: suminf.    4.10509 (24) obj. -96.4721 iterations 3
Cbc0038I Pass  61: suminf.    5.40850 (19) obj. -96.4721 iterations 42
Cbc0038I Pass  62: suminf.    4.28186 (16) obj. -96.4721 iterations 32
Cbc0038I Pass  63: suminf.    4.10197 (15) obj. -96.4721 iterations 8
Cbc0038I Pass  64: suminf.    3.94589 (19) obj. -96.4721 iterations 14
Cbc0038I Pass  65: suminf.    6.02709 (17) obj. -96.4721 iterations 44
Cbc0038I Pass  66: suminf.    4.19521 (16) obj. -96.4721 iterations 42
Cbc0038I Pass  67: suminf.    8.18366 (32) obj. -96.4721 iterations 67
Cbc0038I Pass  68: suminf.    3.72335 (19) obj. -96.4721 iterations 101
Cbc0038I Pass  69: suminf.    3.62237 (19) obj. -96.4721 iterations 9
Cbc0038I Pass  70: suminf.    5.41197 (15) obj. -96.4721 iterations 34
Cbc0038I Pass  71: suminf.    3.76946 (14) obj. -96.4721 iterations 28
Cbc0038I Pass  72: suminf.    3.45855 (15) obj. -96.4721 iterations 12
Cbc0038I Pass  73: suminf.    4.33676 (14) obj. -96.4721 iterations 32
Cbc0038I Pass  74: suminf.    3.72335 (19) obj. -96.4721 iterations 36
Cbc0038I Pass  75: suminf.    3.62237 (19) obj. -96.4721 iterations 9
Cbc0038I Pass  76: suminf.    5.72451 (16) obj. -96.4721 iterations 44
Cbc0038I Pass  77: suminf.    3.59588 (13) obj. -96.4721 iterations 32
Cbc0038I Pass  78: suminf.    3.45855 (15) obj. -96.4721 iterations 12
Cbc0038I Pass  79: suminf.    4.87749 (14) obj. -96.4721 iterations 39
Cbc0038I Pass  80: suminf.    3.55910 (14) obj. -96.4721 iterations 36
Cbc0038I Pass  81: suminf.    5.50855 (17) obj. -96.4721 iterations 76
Cbc0038I Pass  82: suminf.    4.25889 (19) obj. -96.4721 iterations 59
Cbc0038I Pass  83: suminf.    3.91314 (13) obj. -96.4721 iterations 39
Cbc0038I Pass  84: suminf.    3.26029 (14) obj. -96.4721 iterations 27
Cbc0038I Pass  85: suminf.    5.78776 (16) obj. -96.4721 iterations 52
Cbc0038I Pass  86: suminf.    4.82211 (15) obj. -96.4721 iterations 29
Cbc0038I Pass  87: suminf.    4.28651 (15) obj. -96.4721 iterations 3
Cbc0038I Pass  88: suminf.    5.19829 (15) obj. -96.4721 iterations 34
Cbc0038I Pass  89: suminf.    3.89328 (18) obj. -96.4721 iterations 38
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 184 rows 103 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of -70.3801 - took 0.30 seconds
Cbc0012I Integer solution of -70.380052 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 139 rows 79 columns
Cbc0031I 46 added rows had average density of 76.586957
Cbc0013I At root node, 46 cuts changed objective from -132.92944 to -121.29405 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44077 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.514 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3426 row cuts average 258.7 elements, 0 column cuts (0 active)  in 0.523 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.598 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 242 row cuts average 255.4 elements, 0 column cuts (0 active)  in 0.226 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -70.380052 best solution, best possible -121.29405 (5.40 seconds)
Cbc0010I After 18 nodes, 12 on tree, -70.380052 best solution, best possible -121.29405 (6.12 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 199 rows 110 columns
Cbc0038I Full problem 499 rows 262 columns, reduced to 134 rows 75 columns
Cbc0010I After 93 nodes, 17 on tree, -70.380052 best solution, best possible -121.29405 (6.87 seconds)
Cbc0012I Integer solution of -72.274442 found by rounding after 26816 iterations and 199 nodes (7.28 seconds)
Cbc0016I Integer solution of -73.021862 found by strong branching after 29208 iterations and 283 nodes (7.50 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 81 rows 50 columns
Cbc0010I After 300 nodes, 14 on tree, -73.021862 best solution, best possible -121.29405 (7.57 seconds)
Cbc0001I Search completed - best objective -73.021862, took 31582 iterations and 330 nodes (7.67 seconds)
Cbc0032I Strong branching done 3260 times (78591 iterations), fathomed 30 nodes and fixed 131 variables
Cbc0035I Maximum depth 89, 1002 variables fixed on reduced cost
Total time (CPU seconds):       7.55   (Wallclock seconds):       7.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 347 (-179) rows, 370 (-154) columns and 15475 (-20261) elements
Clp1000I sum of infeasibilities 1.17327e-05 - average 3.38117e-08, 182 fixed columns
Coin0506I Presolve 163 (-184) rows, 185 (-185) columns and 676 (-14799) elements
Clp0006I 0  Obj -12.47027 Dual inf 5791.8005 (182)
Clp0029I End of values pass after 135 iterations
Clp0014I Perturbing problem by 0.001% of 0.15104332 - largest nonzero change 2.9640381e-05 ( 0.0026945801%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value -9.6758613
Clp0000I Optimal - objective value -9.6758613
Coin0511I After Postsolve, objective -9.6758613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.6758613 Dual inf 269.05097 (112)
Clp0014I Perturbing problem by 0.001% of 1.5465085 - largest nonzero change 2.2930963e-05 ( 0.00161507%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 164.76804
Clp0000I Optimal - objective value 164.76804
Clp0000I Optimal - objective value 164.76804
Coin0511I After Postsolve, objective 164.76804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.7680399 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 347 rows, 370 columns (370 integer (370 of which binary)) and 15475 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.472%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 99 integers unsatisfied sum - 4.60179
Cbc0038I Pass   1: suminf.    2.53593 (90) obj. -146.686 iterations 31
Cbc0038I Pass   2: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass   3: suminf.    1.74078 (73) obj. -88.7508 iterations 17
Cbc0038I Pass   4: suminf.    1.32153 (61) obj. -69.4628 iterations 12
Cbc0038I Pass   5: suminf.    0.98266 (49) obj. -57.8017 iterations 12
Cbc0038I Pass   6: suminf.    0.41854 (25) obj. -31.4355 iterations 24
Cbc0038I Solution found of -6.85406
Cbc0038I Rounding solution of -20.3874 is better than previous of -6.85406

Cbc0038I Before mini branch and bound, 270 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -34.8256
Cbc0038I Pass   7: suminf.    2.53593 (90) obj. -146.686 iterations 0
Cbc0038I Pass   8: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass   9: suminf.    1.74078 (73) obj. -88.7508 iterations 17
Cbc0038I Pass  10: suminf.    1.20372 (57) obj. -65.5807 iterations 16
Cbc0038I Pass  11: suminf.    0.73069 (39) obj. -47.0792 iterations 18
Cbc0038I Pass  12: suminf.    0.91028 (21) obj. -34.8256 iterations 35
Cbc0038I Pass  13: suminf.    0.47853 (3) obj. -34.8256 iterations 29
Cbc0038I Pass  14: suminf.    1.00299 (5) obj. -34.8256 iterations 18
Cbc0038I Pass  15: suminf.    0.47853 (3) obj. -34.8256 iterations 7
Cbc0038I Pass  16: suminf.    3.61119 (23) obj. -34.8256 iterations 64
Cbc0038I Pass  17: suminf.    0.98414 (13) obj. -34.8256 iterations 60
Cbc0038I Pass  18: suminf.    0.90288 (12) obj. -34.8256 iterations 3
Cbc0038I Pass  19: suminf.    0.80849 (17) obj. -34.8256 iterations 8
Cbc0038I Pass  20: suminf.    0.76556 (9) obj. -34.8256 iterations 15
Cbc0038I Pass  21: suminf.    0.27254 (6) obj. -35.3357 iterations 20
Cbc0038I Pass  22: suminf.    0.56434 (10) obj. -34.8256 iterations 32
Cbc0038I Pass  23: suminf.    0.56434 (10) obj. -34.8256 iterations 0
Cbc0038I Pass  24: suminf.    1.77096 (7) obj. -34.8256 iterations 16
Cbc0038I Pass  25: suminf.    0.34923 (6) obj. -34.8256 iterations 8
Cbc0038I Pass  26: suminf.    0.21005 (6) obj. -34.8256 iterations 4
Cbc0038I Pass  27: suminf.    0.79149 (7) obj. -34.8256 iterations 8
Cbc0038I Pass  28: suminf.    1.00510 (19) obj. -34.8256 iterations 46
Cbc0038I Pass  29: suminf.    1.00510 (19) obj. -34.8256 iterations 12
Cbc0038I Pass  30: suminf.    1.43222 (13) obj. -34.8256 iterations 23
Cbc0038I Pass  31: suminf.    0.60418 (14) obj. -34.8256 iterations 15
Cbc0038I Pass  32: suminf.    0.76248 (8) obj. -34.8256 iterations 16
Cbc0038I Pass  33: suminf.    0.76248 (8) obj. -34.8256 iterations 7
Cbc0038I Pass  34: suminf.    0.41910 (7) obj. -34.8256 iterations 12
Cbc0038I Pass  35: suminf.    0.41910 (7) obj. -34.8256 iterations 7
Cbc0038I Pass  36: suminf.    0.61112 (7) obj. -34.8256 iterations 9
Cbc0038I Before mini branch and bound, 238 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 118 rows 128 columns - 26 fixed gives 88, 101 - ok now
Cbc0038I Full problem 347 rows 370 columns, reduced to 10 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I Round again with cutoff of -60.8141
Cbc0038I Pass  36: suminf.    2.53593 (90) obj. -146.686 iterations 0
Cbc0038I Pass  37: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass  38: suminf.    1.86324 (76) obj. -95.4644 iterations 14
Cbc0038I Pass  39: suminf.    1.44356 (65) obj. -76.2488 iterations 11
Cbc0038I Pass  40: suminf.    1.38078 (41) obj. -60.8141 iterations 37
Cbc0038I Pass  41: suminf.    0.81218 (42) obj. -60.8141 iterations 4
Cbc0038I Pass  42: suminf.    0.98402 (25) obj. -60.8141 iterations 28
Cbc0038I Pass  43: suminf.    0.98402 (25) obj. -60.8141 iterations 0
Cbc0038I Pass  44: suminf.    0.93691 (19) obj. -60.8141 iterations 11
Cbc0038I Pass  45: suminf.    0.52471 (19) obj. -60.8141 iterations 9
Cbc0038I Pass  46: suminf.    0.43653 (8) obj. -60.8141 iterations 32
Cbc0038I Pass  47: suminf.    0.43970 (13) obj. -60.8141 iterations 10
Cbc0038I Pass  48: suminf.    0.87396 (8) obj. -60.8141 iterations 33
Cbc0038I Pass  49: suminf.    0.85214 (8) obj. -60.8141 iterations 7
Cbc0038I Pass  50: suminf.    0.87396 (8) obj. -60.8141 iterations 18
Cbc0038I Pass  51: suminf.    1.55103 (23) obj. -60.8141 iterations 53
Cbc0038I Pass  52: suminf.    1.55103 (23) obj. -60.8141 iterations 10
Cbc0038I Pass  53: suminf.    1.47692 (10) obj. -60.8141 iterations 38
Cbc0038I Pass  54: suminf.    0.97994 (10) obj. -60.8141 iterations 6
Cbc0038I Pass  55: suminf.    1.47692 (10) obj. -60.8141 iterations 17
Cbc0038I Pass  56: suminf.    1.96744 (26) obj. -60.8141 iterations 67
Cbc0038I Pass  57: suminf.    1.88468 (25) obj. -60.8141 iterations 14
Cbc0038I Pass  58: suminf.    1.30232 (24) obj. -60.8141 iterations 20
Cbc0038I Pass  59: suminf.    1.10542 (23) obj. -60.8141 iterations 5
Cbc0038I Pass  60: suminf.    1.52294 (12) obj. -60.8141 iterations 47
Cbc0038I Pass  61: suminf.    1.29712 (12) obj. -60.8141 iterations 12
Cbc0038I Pass  62: suminf.    1.38866 (15) obj. -60.8141 iterations 29
Cbc0038I Pass  63: suminf.    1.33951 (15) obj. -60.8141 iterations 5
Cbc0038I Pass  64: suminf.    1.32862 (13) obj. -60.8141 iterations 14
Cbc0038I Pass  65: suminf.    1.32862 (13) obj. -60.8141 iterations 8
Cbc0038I Rounding solution of -37.1589 is better than previous of -20.3874

Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 111 rows 124 columns - 28 fixed gives 82, 94 - ok now
Cbc0038I Full problem 347 rows 370 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I Round again with cutoff of -92.0003
Cbc0038I Pass  65: suminf.    2.53593 (90) obj. -146.686 iterations 0
Cbc0038I Pass  66: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass  67: suminf.    1.92201 (75) obj. -92.0003 iterations 23
Cbc0038I Pass  68: suminf.    1.97521 (54) obj. -92.0003 iterations 30
Cbc0038I Pass  69: suminf.    1.64578 (53) obj. -92.0003 iterations 4
Cbc0038I Pass  70: suminf.    1.30026 (53) obj. -96.492 iterations 2
Cbc0038I Pass  71: suminf.    1.75553 (40) obj. -92.0003 iterations 50
Cbc0038I Pass  72: suminf.    1.08290 (35) obj. -92.0003 iterations 14
Cbc0038I Pass  73: suminf.    1.74376 (32) obj. -92.0003 iterations 50
Cbc0038I Pass  74: suminf.    1.69666 (33) obj. -92.0003 iterations 9
Cbc0038I Pass  75: suminf.    1.73614 (31) obj. -92.0003 iterations 33
Cbc0038I Pass  76: suminf.    1.67115 (31) obj. -92.0003 iterations 7
Cbc0038I Pass  77: suminf.    1.85795 (30) obj. -92.0003 iterations 16
Cbc0038I Pass  78: suminf.    1.53196 (30) obj. -92.0003 iterations 11
Cbc0038I Pass  79: suminf.    1.82523 (25) obj. -92.0003 iterations 41
Cbc0038I Pass  80: suminf.    1.37223 (25) obj. -92.0003 iterations 15
Cbc0038I Pass  81: suminf.    1.82523 (25) obj. -92.0003 iterations 16
Cbc0038I Pass  82: suminf.    3.15362 (36) obj. -92.0003 iterations 41
Cbc0038I Pass  83: suminf.    1.82942 (34) obj. -92.0003 iterations 12
Cbc0038I Pass  84: suminf.    1.73786 (27) obj. -92.0003 iterations 35
Cbc0038I Pass  85: suminf.    1.58147 (27) obj. -92.0003 iterations 12
Cbc0038I Pass  86: suminf.    1.68656 (24) obj. -92.0003 iterations 22
Cbc0038I Pass  87: suminf.    1.49492 (24) obj. -92.0003 iterations 15
Cbc0038I Pass  88: suminf.    1.85097 (24) obj. -92.0003 iterations 28
Cbc0038I Pass  89: suminf.    1.49707 (24) obj. -92.0003 iterations 19
Cbc0038I Pass  90: suminf.    1.85097 (24) obj. -92.0003 iterations 21
Cbc0038I Pass  91: suminf.    4.33607 (44) obj. -92.0003 iterations 53
Cbc0038I Pass  92: suminf.    2.37221 (39) obj. -92.0003 iterations 16
Cbc0038I Pass  93: suminf.    2.37221 (39) obj. -92.0003 iterations 0
Cbc0038I Pass  94: suminf.    1.97246 (33) obj. -92.0003 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 110 rows 118 columns - 27 fixed gives 78, 89 - ok now
Cbc0038I Full problem 347 rows 370 columns, reduced to 13 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -37.1589 - took 0.27 seconds
Cbc0012I Integer solution of -37.158902 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 63 rows 71 columns
Cbc0012I Integer solution of -61.035402 found by RINS after 0 iterations and 0 nodes (0.42 seconds)
Cbc0031I 135 added rows had average density of 78.562963
Cbc0013I At root node, 135 cuts changed objective from -164.76804 to -99.289094 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39086 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.460 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3301 row cuts average 352.4 elements, 0 column cuts (0 active)  in 1.129 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 804 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4425 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.686 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2269 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.800 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 379 row cuts average 213.3 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 428 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.916 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -61.035402 best solution, best possible -99.289094 (8.49 seconds)
Cbc0010I After 1 nodes, 2 on tree, -61.035402 best solution, best possible -99.289094 (9.68 seconds)
Cbc0012I Integer solution of -62.575182 found by rounding after 17757 iterations and 4 nodes (10.36 seconds)
Cbc0010I After 6 nodes, 2 on tree, -62.575182 best solution, best possible -99.289094 (10.39 seconds)
Cbc0010I After 8 nodes, 3 on tree, -62.575182 best solution, best possible -99.289094 (11.42 seconds)
Cbc0010I After 13 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (12.14 seconds)
Cbc0010I After 27 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (12.84 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 87 rows 101 columns
Cbc0010I After 41 nodes, 11 on tree, -62.575182 best solution, best possible -99.289094 (13.67 seconds)
Cbc0010I After 60 nodes, 13 on tree, -62.575182 best solution, best possible -99.289094 (14.41 seconds)
Cbc0010I After 81 nodes, 16 on tree, -62.575182 best solution, best possible -99.289094 (15.12 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 67 rows 81 columns
Cbc0010I After 101 nodes, 16 on tree, -62.575182 best solution, best possible -99.289094 (15.87 seconds)
Cbc0010I After 117 nodes, 16 on tree, -62.575182 best solution, best possible -99.289094 (16.61 seconds)
Cbc0010I After 144 nodes, 12 on tree, -62.575182 best solution, best possible -99.289094 (17.35 seconds)
Cbc0010I After 165 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (18.05 seconds)
Cbc0010I After 192 nodes, 3 on tree, -62.575182 best solution, best possible -99.289094 (18.92 seconds)
Cbc0010I After 194 nodes, 5 on tree, -62.575182 best solution, best possible -99.289094 (19.92 seconds)
Cbc0010I After 204 nodes, 5 on tree, -62.575182 best solution, best possible -99.289094 (20.82 seconds)
Cbc0010I After 212 nodes, 7 on tree, -62.575182 best solution, best possible -99.289094 (21.58 seconds)
Cbc0010I After 236 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (22.28 seconds)
Cbc0010I After 253 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (22.99 seconds)
Cbc0010I After 288 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (23.74 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 138 rows 158 columns
Cbc0010I After 292 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (25.53 seconds)
Cbc0010I After 308 nodes, 11 on tree, -62.575182 best solution, best possible -99.289094 (26.26 seconds)
Cbc0010I After 321 nodes, 14 on tree, -62.575182 best solution, best possible -99.289094 (26.97 seconds)
Cbc0010I After 334 nodes, 16 on tree, -62.575182 best solution, best possible -99.289094 (27.69 seconds)
Cbc0010I After 350 nodes, 16 on tree, -62.575182 best solution, best possible -99.289094 (28.44 seconds)
Cbc0010I After 366 nodes, 18 on tree, -62.575182 best solution, best possible -99.289094 (29.20 seconds)
Cbc0010I After 386 nodes, 17 on tree, -62.575182 best solution, best possible -99.289094 (29.98 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 145 rows 163 columns
Cbc0010I After 400 nodes, 18 on tree, -62.575182 best solution, best possible -99.289094 (30.69 seconds)
Cbc0010I After 419 nodes, 17 on tree, -62.575182 best solution, best possible -99.289094 (31.44 seconds)
Cbc0010I After 442 nodes, 10 on tree, -62.575182 best solution, best possible -99.289094 (32.15 seconds)
Cbc0010I After 461 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (32.88 seconds)
Cbc0010I After 478 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (33.59 seconds)
Cbc0010I After 492 nodes, 3 on tree, -62.575182 best solution, best possible -99.289094 (34.71 seconds)
Cbc0010I After 497 nodes, 4 on tree, -62.575182 best solution, best possible -99.289094 (35.42 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 15 rows 22 columns
Cbc0010I After 514 nodes, 4 on tree, -62.575182 best solution, best possible -99.289094 (36.13 seconds)
Cbc0010I After 531 nodes, 5 on tree, -62.575182 best solution, best possible -99.289094 (36.84 seconds)
Cbc0010I After 543 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (37.58 seconds)
Cbc0010I After 557 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (38.39 seconds)
Cbc0010I After 576 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (39.11 seconds)
Cbc0010I After 591 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (39.83 seconds)
Cbc0010I After 605 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (40.61 seconds)
Cbc0010I After 620 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (41.32 seconds)
Cbc0010I After 634 nodes, 1 on tree, -62.575182 best solution, best possible -97.971094 (42.36 seconds)
Cbc0010I After 635 nodes, 2 on tree, -62.575182 best solution, best possible -97.971094 (43.28 seconds)
Cbc0010I After 638 nodes, 5 on tree, -62.575182 best solution, best possible -97.971094 (44.14 seconds)
Cbc0012I Integer solution of -68.640442 found by rounding after 74467 iterations and 641 nodes (44.65 seconds)
Cbc0010I After 644 nodes, 8 on tree, -68.640442 best solution, best possible -97.971094 (44.87 seconds)
Cbc0012I Integer solution of -68.746292 found by rounding after 74682 iterations and 645 nodes (44.89 seconds)
Cbc0012I Integer solution of -70.274442 found by rounding after 74952 iterations and 661 nodes (45.60 seconds)
Cbc0010I After 661 nodes, 10 on tree, -70.274442 best solution, best possible -97.971094 (45.60 seconds)
Cbc0004I Integer solution of -70.380052 found after 75093 iterations and 673 nodes (45.85 seconds)
Cbc0010I After 682 nodes, 7 on tree, -70.380052 best solution, best possible -97.971094 (46.34 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 128 rows 154 columns
Cbc0010I After 700 nodes, 9 on tree, -70.380052 best solution, best possible -97.971094 (47.83 seconds)
Cbc0010I After 712 nodes, 9 on tree, -70.380052 best solution, best possible -97.971094 (48.60 seconds)
Cbc0010I After 721 nodes, 6 on tree, -70.380052 best solution, best possible -97.971094 (49.75 seconds)
Cbc0010I After 723 nodes, 6 on tree, -70.380052 best solution, best possible -97.971094 (50.49 seconds)
Cbc0010I After 726 nodes, 5 on tree, -70.380052 best solution, best possible -97.971094 (51.50 seconds)
Cbc0010I After 754 nodes, 7 on tree, -70.380052 best solution, best possible -97.971094 (52.29 seconds)
Cbc0012I Integer solution of -71.274442 found by DiveCoefficient after 84698 iterations and 763 nodes (52.75 seconds)
Cbc0004I Integer solution of -72.274442 found after 84704 iterations and 764 nodes (52.76 seconds)
Cbc0012I Integer solution of -73.021862 found by DiveCoefficient after 85336 iterations and 768 nodes (52.95 seconds)
Cbc0001I Search completed - best objective -73.021862, took 85399 iterations and 770 nodes (52.95 seconds)
Cbc0032I Strong branching done 3812 times (93036 iterations), fathomed 28 nodes and fixed 81 variables
Cbc0035I Maximum depth 38, 3813 variables fixed on reduced cost
Total time (CPU seconds):       47.16   (Wallclock seconds):       53.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 262 (-2) columns and 1491 (-54) elements
Clp1000I sum of infeasibilities 0.000113671 - average 2.27798e-07, 115 fixed columns
Coin0506I Presolve 265 (-234) rows, 144 (-118) columns and 796 (-695) elements
Clp0029I End of values pass after 144 iterations
Clp0014I Perturbing problem by 0.001% of 0.1675869 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 132.92944
Clp0000I Optimal - objective value 132.92944
Coin0511I After Postsolve, objective 132.92944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13707262 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 132.92944
Clp0000I Optimal - objective value 132.92944
Clp0000I Optimal - objective value 132.92944
Coin0511I After Postsolve, objective 132.92944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 132.9294352 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 262 columns (261 integer (261 of which binary)) and 1491 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.361%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 77 integers unsatisfied sum - 10.1046
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.6053 iterations 168
Cbc0038I Solution found of -20.6053
Cbc0038I Relaxing continuous gives -20.6053
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 138 rows 78 columns
Cbc0038I Mini branch and bound improved solution from -20.6053 to -45.2477 (0.09 seconds)
Cbc0038I Round again with cutoff of -54.016
Cbc0038I Pass   2: suminf.    1.59342 (9) obj. -54.016 iterations 28
Cbc0038I Pass   3: suminf.    2.82658 (8) obj. -54.016 iterations 29
Cbc0038I Pass   4: suminf.    2.20723 (7) obj. -54.016 iterations 7
Cbc0038I Pass   5: suminf.    1.85552 (6) obj. -54.016 iterations 6
Cbc0038I Pass   6: suminf.    1.42605 (5) obj. -54.016 iterations 3
Cbc0038I Pass   7: suminf.    1.24191 (5) obj. -54.016 iterations 23
Cbc0038I Pass   8: suminf.    1.12792 (4) obj. -54.016 iterations 3
Cbc0038I Pass   9: suminf.    1.23438 (4) obj. -54.016 iterations 19
Cbc0038I Pass  10: suminf.    3.98891 (12) obj. -54.016 iterations 76
Cbc0038I Pass  11: suminf.    1.51750 (6) obj. -54.016 iterations 41
Cbc0038I Pass  12: suminf.    1.20335 (6) obj. -54.016 iterations 3
Cbc0038I Pass  13: suminf.    1.44818 (4) obj. -54.016 iterations 27
Cbc0038I Pass  14: suminf.    1.14093 (4) obj. -54.016 iterations 1
Cbc0038I Pass  15: suminf.    0.55234 (2) obj. -54.016 iterations 4
Cbc0038I Pass  16: suminf.    0.53850 (2) obj. -54.016 iterations 1
Cbc0038I Pass  17: suminf.    0.71229 (3) obj. -54.016 iterations 3
Cbc0038I Pass  18: suminf.    1.04228 (4) obj. -54.016 iterations 7
Cbc0038I Pass  19: suminf.    1.04228 (4) obj. -54.016 iterations 0
Cbc0038I Pass  20: suminf.    0.43436 (1) obj. -54.016 iterations 7
Cbc0038I Pass  21: suminf.    0.10211 (2) obj. -54.016 iterations 3
Cbc0038I Pass  22: suminf.    0.75966 (2) obj. -54.016 iterations 2
Cbc0038I Pass  23: suminf.    0.68098 (3) obj. -54.016 iterations 1
Cbc0038I Pass  24: suminf.    1.10166 (3) obj. -54.016 iterations 8
Cbc0038I Pass  25: suminf.    5.07543 (15) obj. -54.016 iterations 52
Cbc0038I Pass  26: suminf.    2.58313 (9) obj. -54.016 iterations 33
Cbc0038I Pass  27: suminf.    2.54241 (10) obj. -54.016 iterations 4
Cbc0038I Pass  28: suminf.    2.09249 (5) obj. -54.016 iterations 51
Cbc0038I Pass  29: suminf.    1.19850 (3) obj. -54.016 iterations 5
Cbc0038I Pass  30: suminf.    0.49646 (1) obj. -54.016 iterations 8
Cbc0038I Pass  31: suminf.    0.36722 (2) obj. -54.016 iterations 2
Cbc0038I Rounding solution of -67.827 is better than previous of -45.2477

Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 173 rows 97 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of -80.8475
Cbc0038I Pass  31: suminf.    3.14298 (17) obj. -80.8475 iterations 12
Cbc0038I Pass  32: suminf.    4.53507 (12) obj. -80.8475 iterations 35
Cbc0038I Pass  33: suminf.    3.07203 (9) obj. -80.8475 iterations 21
Cbc0038I Pass  34: suminf.    3.07203 (9) obj. -80.8475 iterations 0
Cbc0038I Pass  35: suminf.    2.66720 (7) obj. -80.8475 iterations 19
Cbc0038I Pass  36: suminf.    2.55998 (9) obj. -80.8475 iterations 26
Cbc0038I Pass  37: suminf.    3.18424 (9) obj. -80.8475 iterations 25
Cbc0038I Pass  38: suminf.    2.46546 (7) obj. -80.8475 iterations 18
Cbc0038I Pass  39: suminf.    2.41601 (8) obj. -80.8475 iterations 13
Cbc0038I Pass  40: suminf.    3.25383 (9) obj. -80.8475 iterations 24
Cbc0038I Pass  41: suminf.    2.51059 (11) obj. -80.8475 iterations 21
Cbc0038I Pass  42: suminf.    2.45915 (8) obj. -80.8475 iterations 7
Cbc0038I Pass  43: suminf.    3.40005 (13) obj. -80.8475 iterations 16
Cbc0038I Pass  44: suminf.    2.51087 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  45: suminf.    2.49060 (8) obj. -80.8475 iterations 6
Cbc0038I Pass  46: suminf.    3.47432 (15) obj. -80.8475 iterations 28
Cbc0038I Pass  47: suminf.    2.58843 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  48: suminf.    2.55998 (9) obj. -80.8475 iterations 5
Cbc0038I Pass  49: suminf.    3.18424 (9) obj. -80.8475 iterations 28
Cbc0038I Pass  50: suminf.    2.46546 (7) obj. -80.8475 iterations 20
Cbc0038I Pass  51: suminf.    2.41601 (8) obj. -80.8475 iterations 15
Cbc0038I Pass  52: suminf.    3.25383 (9) obj. -80.8475 iterations 25
Cbc0038I Pass  53: suminf.    2.51059 (11) obj. -80.8475 iterations 19
Cbc0038I Pass  54: suminf.    2.45915 (8) obj. -80.8475 iterations 8
Cbc0038I Pass  55: suminf.    3.40005 (13) obj. -80.8475 iterations 17
Cbc0038I Pass  56: suminf.    2.51087 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  57: suminf.    2.49060 (8) obj. -80.8475 iterations 6
Cbc0038I Pass  58: suminf.    3.47432 (15) obj. -80.8475 iterations 28
Cbc0038I Pass  59: suminf.    2.58843 (8) obj. -80.8475 iterations 17
Cbc0038I Pass  60: suminf.    2.55998 (9) obj. -80.8475 iterations 5
Cbc0038I Rounding solution of -69.8909 is better than previous of -67.827

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 157 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -69.8909 to -70.3801 (0.26 seconds)
Cbc0038I Round again with cutoff of -96.4721
Cbc0038I Pass  60: suminf.    4.10509 (24) obj. -96.4721 iterations 3
Cbc0038I Pass  61: suminf.    5.40850 (19) obj. -96.4721 iterations 42
Cbc0038I Pass  62: suminf.    4.28186 (16) obj. -96.4721 iterations 32
Cbc0038I Pass  63: suminf.    4.10197 (15) obj. -96.4721 iterations 8
Cbc0038I Pass  64: suminf.    3.94589 (19) obj. -96.4721 iterations 14
Cbc0038I Pass  65: suminf.    6.02709 (17) obj. -96.4721 iterations 44
Cbc0038I Pass  66: suminf.    4.19521 (16) obj. -96.4721 iterations 42
Cbc0038I Pass  67: suminf.    8.18366 (32) obj. -96.4721 iterations 67
Cbc0038I Pass  68: suminf.    3.72335 (19) obj. -96.4721 iterations 101
Cbc0038I Pass  69: suminf.    3.62237 (19) obj. -96.4721 iterations 9
Cbc0038I Pass  70: suminf.    5.41197 (15) obj. -96.4721 iterations 34
Cbc0038I Pass  71: suminf.    3.76946 (14) obj. -96.4721 iterations 28
Cbc0038I Pass  72: suminf.    3.45855 (15) obj. -96.4721 iterations 12
Cbc0038I Pass  73: suminf.    4.33676 (14) obj. -96.4721 iterations 32
Cbc0038I Pass  74: suminf.    3.72335 (19) obj. -96.4721 iterations 36
Cbc0038I Pass  75: suminf.    3.62237 (19) obj. -96.4721 iterations 9
Cbc0038I Pass  76: suminf.    5.72451 (16) obj. -96.4721 iterations 44
Cbc0038I Pass  77: suminf.    3.59588 (13) obj. -96.4721 iterations 32
Cbc0038I Pass  78: suminf.    3.45855 (15) obj. -96.4721 iterations 12
Cbc0038I Pass  79: suminf.    4.87749 (14) obj. -96.4721 iterations 39
Cbc0038I Pass  80: suminf.    3.55910 (14) obj. -96.4721 iterations 36
Cbc0038I Pass  81: suminf.    5.50855 (17) obj. -96.4721 iterations 76
Cbc0038I Pass  82: suminf.    4.25889 (19) obj. -96.4721 iterations 59
Cbc0038I Pass  83: suminf.    3.91314 (13) obj. -96.4721 iterations 39
Cbc0038I Pass  84: suminf.    3.26029 (14) obj. -96.4721 iterations 27
Cbc0038I Pass  85: suminf.    5.78776 (16) obj. -96.4721 iterations 52
Cbc0038I Pass  86: suminf.    4.82211 (15) obj. -96.4721 iterations 29
Cbc0038I Pass  87: suminf.    4.28651 (15) obj. -96.4721 iterations 3
Cbc0038I Pass  88: suminf.    5.19829 (15) obj. -96.4721 iterations 34
Cbc0038I Pass  89: suminf.    3.89328 (18) obj. -96.4721 iterations 38
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 184 rows 103 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -70.3801 - took 0.33 seconds
Cbc0012I Integer solution of -70.380052 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 139 rows 79 columns
Cbc0031I 46 added rows had average density of 76.586957
Cbc0013I At root node, 46 cuts changed objective from -132.92944 to -121.29405 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44077 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.581 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3426 row cuts average 258.7 elements, 0 column cuts (0 active)  in 0.589 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.652 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 242 row cuts average 255.4 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -70.380052 best solution, best possible -121.29405 (6.15 seconds)
Cbc0010I After 12 nodes, 11 on tree, -70.380052 best solution, best possible -121.29405 (6.88 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 199 rows 110 columns
Cbc0010I After 60 nodes, 14 on tree, -70.380052 best solution, best possible -121.29405 (7.60 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 134 rows 75 columns
Cbc0010I After 142 nodes, 22 on tree, -70.380052 best solution, best possible -121.29405 (8.30 seconds)
Cbc0012I Integer solution of -72.274442 found by rounding after 26816 iterations and 199 nodes (8.52 seconds)
Cbc0016I Integer solution of -73.021862 found by strong branching after 29208 iterations and 283 nodes (8.77 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 81 rows 50 columns
Cbc0001I Search completed - best objective -73.021862, took 31582 iterations and 330 nodes (8.95 seconds)
Cbc0032I Strong branching done 3260 times (78591 iterations), fathomed 30 nodes and fixed 131 variables
Cbc0035I Maximum depth 89, 1002 variables fixed on reduced cost
Total time (CPU seconds):       8.58   (Wallclock seconds):       9.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 347 (-180) rows, 370 (-155) columns and 15475 (-20262) elements
Clp1000I sum of infeasibilities 1.17327e-05 - average 3.38117e-08, 182 fixed columns
Coin0506I Presolve 163 (-184) rows, 185 (-185) columns and 676 (-14799) elements
Clp0006I 0  Obj -12.47027 Dual inf 5791.8005 (182)
Clp0029I End of values pass after 135 iterations
Clp0014I Perturbing problem by 0.001% of 0.15104332 - largest nonzero change 2.9640381e-05 ( 0.0026945801%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value -9.6758613
Clp0000I Optimal - objective value -9.6758613
Coin0511I After Postsolve, objective -9.6758613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.6758613 Dual inf 269.05097 (112)
Clp0014I Perturbing problem by 0.001% of 1.5465085 - largest nonzero change 2.2930963e-05 ( 0.00161507%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 164.76804
Clp0000I Optimal - objective value 164.76804
Clp0000I Optimal - objective value 164.76804
Coin0511I After Postsolve, objective 164.76804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.7680399 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 347 rows, 370 columns (370 integer (370 of which binary)) and 15475 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.472%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 99 integers unsatisfied sum - 4.60179
Cbc0038I Pass   1: suminf.    2.53593 (90) obj. -146.686 iterations 31
Cbc0038I Pass   2: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass   3: suminf.    1.74078 (73) obj. -88.7508 iterations 17
Cbc0038I Pass   4: suminf.    1.32153 (61) obj. -69.4628 iterations 12
Cbc0038I Pass   5: suminf.    0.98266 (49) obj. -57.8017 iterations 12
Cbc0038I Pass   6: suminf.    0.41854 (25) obj. -31.4355 iterations 24
Cbc0038I Solution found of -6.85406
Cbc0038I Rounding solution of -20.3874 is better than previous of -6.85406

Cbc0038I Before mini branch and bound, 270 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -34.8256
Cbc0038I Pass   7: suminf.    2.53593 (90) obj. -146.686 iterations 0
Cbc0038I Pass   8: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass   9: suminf.    1.74078 (73) obj. -88.7508 iterations 17
Cbc0038I Pass  10: suminf.    1.20372 (57) obj. -65.5807 iterations 16
Cbc0038I Pass  11: suminf.    0.73069 (39) obj. -47.0792 iterations 18
Cbc0038I Pass  12: suminf.    0.91028 (21) obj. -34.8256 iterations 35
Cbc0038I Pass  13: suminf.    0.47853 (3) obj. -34.8256 iterations 29
Cbc0038I Pass  14: suminf.    1.00299 (5) obj. -34.8256 iterations 18
Cbc0038I Pass  15: suminf.    0.47853 (3) obj. -34.8256 iterations 7
Cbc0038I Pass  16: suminf.    3.61119 (23) obj. -34.8256 iterations 64
Cbc0038I Pass  17: suminf.    0.98414 (13) obj. -34.8256 iterations 60
Cbc0038I Pass  18: suminf.    0.90288 (12) obj. -34.8256 iterations 3
Cbc0038I Pass  19: suminf.    0.80849 (17) obj. -34.8256 iterations 8
Cbc0038I Pass  20: suminf.    0.76556 (9) obj. -34.8256 iterations 15
Cbc0038I Pass  21: suminf.    0.27254 (6) obj. -35.3357 iterations 20
Cbc0038I Pass  22: suminf.    0.56434 (10) obj. -34.8256 iterations 32
Cbc0038I Pass  23: suminf.    0.56434 (10) obj. -34.8256 iterations 0
Cbc0038I Pass  24: suminf.    1.77096 (7) obj. -34.8256 iterations 16
Cbc0038I Pass  25: suminf.    0.34923 (6) obj. -34.8256 iterations 8
Cbc0038I Pass  26: suminf.    0.21005 (6) obj. -34.8256 iterations 4
Cbc0038I Pass  27: suminf.    0.79149 (7) obj. -34.8256 iterations 8
Cbc0038I Pass  28: suminf.    1.00510 (19) obj. -34.8256 iterations 46
Cbc0038I Pass  29: suminf.    1.00510 (19) obj. -34.8256 iterations 12
Cbc0038I Pass  30: suminf.    1.43222 (13) obj. -34.8256 iterations 23
Cbc0038I Pass  31: suminf.    0.60418 (14) obj. -34.8256 iterations 15
Cbc0038I Pass  32: suminf.    0.76248 (8) obj. -34.8256 iterations 16
Cbc0038I Pass  33: suminf.    0.76248 (8) obj. -34.8256 iterations 7
Cbc0038I Pass  34: suminf.    0.41910 (7) obj. -34.8256 iterations 12
Cbc0038I Pass  35: suminf.    0.41910 (7) obj. -34.8256 iterations 7
Cbc0038I Pass  36: suminf.    0.61112 (7) obj. -34.8256 iterations 9
Cbc0038I Before mini branch and bound, 238 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 118 rows 128 columns - 26 fixed gives 88, 101 - ok now
Cbc0038I Full problem 347 rows 370 columns, reduced to 10 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I Round again with cutoff of -60.8141
Cbc0038I Pass  36: suminf.    2.53593 (90) obj. -146.686 iterations 0
Cbc0038I Pass  37: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass  38: suminf.    1.86324 (76) obj. -95.4644 iterations 14
Cbc0038I Pass  39: suminf.    1.44356 (65) obj. -76.2488 iterations 11
Cbc0038I Pass  40: suminf.    1.38078 (41) obj. -60.8141 iterations 37
Cbc0038I Pass  41: suminf.    0.81218 (42) obj. -60.8141 iterations 4
Cbc0038I Pass  42: suminf.    0.98402 (25) obj. -60.8141 iterations 28
Cbc0038I Pass  43: suminf.    0.98402 (25) obj. -60.8141 iterations 0
Cbc0038I Pass  44: suminf.    0.93691 (19) obj. -60.8141 iterations 11
Cbc0038I Pass  45: suminf.    0.52471 (19) obj. -60.8141 iterations 9
Cbc0038I Pass  46: suminf.    0.43653 (8) obj. -60.8141 iterations 32
Cbc0038I Pass  47: suminf.    0.43970 (13) obj. -60.8141 iterations 10
Cbc0038I Pass  48: suminf.    0.87396 (8) obj. -60.8141 iterations 33
Cbc0038I Pass  49: suminf.    0.85214 (8) obj. -60.8141 iterations 7
Cbc0038I Pass  50: suminf.    0.87396 (8) obj. -60.8141 iterations 18
Cbc0038I Pass  51: suminf.    1.55103 (23) obj. -60.8141 iterations 53
Cbc0038I Pass  52: suminf.    1.55103 (23) obj. -60.8141 iterations 10
Cbc0038I Pass  53: suminf.    1.47692 (10) obj. -60.8141 iterations 38
Cbc0038I Pass  54: suminf.    0.97994 (10) obj. -60.8141 iterations 6
Cbc0038I Pass  55: suminf.    1.47692 (10) obj. -60.8141 iterations 17
Cbc0038I Pass  56: suminf.    1.96744 (26) obj. -60.8141 iterations 67
Cbc0038I Pass  57: suminf.    1.88468 (25) obj. -60.8141 iterations 14
Cbc0038I Pass  58: suminf.    1.30232 (24) obj. -60.8141 iterations 20
Cbc0038I Pass  59: suminf.    1.10542 (23) obj. -60.8141 iterations 5
Cbc0038I Pass  60: suminf.    1.52294 (12) obj. -60.8141 iterations 47
Cbc0038I Pass  61: suminf.    1.29712 (12) obj. -60.8141 iterations 12
Cbc0038I Pass  62: suminf.    1.38866 (15) obj. -60.8141 iterations 29
Cbc0038I Pass  63: suminf.    1.33951 (15) obj. -60.8141 iterations 5
Cbc0038I Pass  64: suminf.    1.32862 (13) obj. -60.8141 iterations 14
Cbc0038I Pass  65: suminf.    1.32862 (13) obj. -60.8141 iterations 8
Cbc0038I Rounding solution of -37.1589 is better than previous of -20.3874

Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 111 rows 124 columns - 28 fixed gives 82, 94 - ok now
Cbc0038I Full problem 347 rows 370 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I Round again with cutoff of -92.0003
Cbc0038I Pass  65: suminf.    2.53593 (90) obj. -146.686 iterations 0
Cbc0038I Pass  66: suminf.    2.53593 (90) obj. -146.686 iterations 1
Cbc0038I Pass  67: suminf.    1.92201 (75) obj. -92.0003 iterations 23
Cbc0038I Pass  68: suminf.    1.97521 (54) obj. -92.0003 iterations 30
Cbc0038I Pass  69: suminf.    1.64578 (53) obj. -92.0003 iterations 4
Cbc0038I Pass  70: suminf.    1.30026 (53) obj. -96.492 iterations 2
Cbc0038I Pass  71: suminf.    1.75553 (40) obj. -92.0003 iterations 50
Cbc0038I Pass  72: suminf.    1.08290 (35) obj. -92.0003 iterations 14
Cbc0038I Pass  73: suminf.    1.74376 (32) obj. -92.0003 iterations 50
Cbc0038I Pass  74: suminf.    1.69666 (33) obj. -92.0003 iterations 9
Cbc0038I Pass  75: suminf.    1.73614 (31) obj. -92.0003 iterations 33
Cbc0038I Pass  76: suminf.    1.67115 (31) obj. -92.0003 iterations 7
Cbc0038I Pass  77: suminf.    1.85795 (30) obj. -92.0003 iterations 16
Cbc0038I Pass  78: suminf.    1.53196 (30) obj. -92.0003 iterations 11
Cbc0038I Pass  79: suminf.    1.82523 (25) obj. -92.0003 iterations 41
Cbc0038I Pass  80: suminf.    1.37223 (25) obj. -92.0003 iterations 15
Cbc0038I Pass  81: suminf.    1.82523 (25) obj. -92.0003 iterations 16
Cbc0038I Pass  82: suminf.    3.15362 (36) obj. -92.0003 iterations 41
Cbc0038I Pass  83: suminf.    1.82942 (34) obj. -92.0003 iterations 12
Cbc0038I Pass  84: suminf.    1.73786 (27) obj. -92.0003 iterations 35
Cbc0038I Pass  85: suminf.    1.58147 (27) obj. -92.0003 iterations 12
Cbc0038I Pass  86: suminf.    1.68656 (24) obj. -92.0003 iterations 22
Cbc0038I Pass  87: suminf.    1.49492 (24) obj. -92.0003 iterations 15
Cbc0038I Pass  88: suminf.    1.85097 (24) obj. -92.0003 iterations 28
Cbc0038I Pass  89: suminf.    1.49707 (24) obj. -92.0003 iterations 19
Cbc0038I Pass  90: suminf.    1.85097 (24) obj. -92.0003 iterations 21
Cbc0038I Pass  91: suminf.    4.33607 (44) obj. -92.0003 iterations 53
Cbc0038I Pass  92: suminf.    2.37221 (39) obj. -92.0003 iterations 16
Cbc0038I Pass  93: suminf.    2.37221 (39) obj. -92.0003 iterations 0
Cbc0038I Pass  94: suminf.    1.97246 (33) obj. -92.0003 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 370 columns, reduced to 110 rows 118 columns - 27 fixed gives 78, 89 - ok now
Cbc0038I Full problem 347 rows 370 columns, reduced to 13 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.40 seconds)
Cbc0038I After 0.40 seconds - Feasibility pump exiting with objective of -37.1589 - took 0.28 seconds
Cbc0012I Integer solution of -37.158902 found by feasibility pump after 0 iterations and 0 nodes (0.40 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 63 rows 71 columns
Cbc0012I Integer solution of -61.035402 found by RINS after 0 iterations and 0 nodes (0.45 seconds)
Cbc0031I 135 added rows had average density of 78.562963
Cbc0013I At root node, 135 cuts changed objective from -164.76804 to -99.289094 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39086 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.524 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3301 row cuts average 352.4 elements, 0 column cuts (0 active)  in 1.298 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 804 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4425 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.770 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2269 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.902 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 379 row cuts average 213.3 elements, 0 column cuts (0 active)  in 0.236 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 428 row cuts average 20.1 elements, 0 column cuts (0 active)  in 1.058 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -61.035402 best solution, best possible -99.289094 (9.77 seconds)
Cbc0010I After 1 nodes, 2 on tree, -61.035402 best solution, best possible -99.289094 (11.03 seconds)
Cbc0012I Integer solution of -62.575182 found by rounding after 17757 iterations and 4 nodes (11.76 seconds)
Cbc0010I After 4 nodes, 3 on tree, -62.575182 best solution, best possible -99.289094 (11.77 seconds)
Cbc0010I After 8 nodes, 3 on tree, -62.575182 best solution, best possible -99.289094 (12.92 seconds)
Cbc0010I After 13 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (13.71 seconds)
Cbc0010I After 27 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (14.46 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 87 rows 101 columns
Cbc0010I After 41 nodes, 11 on tree, -62.575182 best solution, best possible -99.289094 (15.37 seconds)
Cbc0010I After 58 nodes, 14 on tree, -62.575182 best solution, best possible -99.289094 (16.07 seconds)
Cbc0010I After 76 nodes, 15 on tree, -62.575182 best solution, best possible -99.289094 (16.82 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 67 rows 81 columns
Cbc0010I After 94 nodes, 17 on tree, -62.575182 best solution, best possible -99.289094 (17.53 seconds)
Cbc0010I After 110 nodes, 16 on tree, -62.575182 best solution, best possible -99.289094 (18.28 seconds)
Cbc0010I After 134 nodes, 14 on tree, -62.575182 best solution, best possible -99.289094 (18.98 seconds)
Cbc0010I After 152 nodes, 10 on tree, -62.575182 best solution, best possible -99.289094 (19.71 seconds)
Cbc0010I After 173 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (20.42 seconds)
Cbc0010I After 192 nodes, 3 on tree, -62.575182 best solution, best possible -99.289094 (21.20 seconds)
Cbc0010I After 194 nodes, 5 on tree, -62.575182 best solution, best possible -99.289094 (22.33 seconds)
Cbc0010I After 202 nodes, 5 on tree, -62.575182 best solution, best possible -99.289094 (23.08 seconds)
Cbc0010I After 207 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (24.08 seconds)
Cbc0010I After 224 nodes, 7 on tree, -62.575182 best solution, best possible -99.289094 (24.80 seconds)
Cbc0010I After 240 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (25.53 seconds)
Cbc0010I After 267 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (26.24 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 138 rows 158 columns
Cbc0010I After 292 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (28.56 seconds)
Cbc0010I After 308 nodes, 11 on tree, -62.575182 best solution, best possible -99.289094 (29.33 seconds)
Cbc0010I After 320 nodes, 15 on tree, -62.575182 best solution, best possible -99.289094 (30.07 seconds)
Cbc0010I After 334 nodes, 16 on tree, -62.575182 best solution, best possible -99.289094 (30.84 seconds)
Cbc0010I After 349 nodes, 15 on tree, -62.575182 best solution, best possible -99.289094 (31.57 seconds)
Cbc0010I After 363 nodes, 17 on tree, -62.575182 best solution, best possible -99.289094 (32.33 seconds)
Cbc0010I After 378 nodes, 17 on tree, -62.575182 best solution, best possible -99.289094 (33.06 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 145 rows 163 columns
Cbc0010I After 400 nodes, 18 on tree, -62.575182 best solution, best possible -99.289094 (34.08 seconds)
Cbc0010I After 419 nodes, 17 on tree, -62.575182 best solution, best possible -99.289094 (34.86 seconds)
Cbc0010I After 438 nodes, 11 on tree, -62.575182 best solution, best possible -99.289094 (35.57 seconds)
Cbc0010I After 458 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (36.31 seconds)
Cbc0010I After 476 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (37.04 seconds)
Cbc0010I After 492 nodes, 3 on tree, -62.575182 best solution, best possible -99.289094 (38.27 seconds)
Cbc0010I After 497 nodes, 4 on tree, -62.575182 best solution, best possible -99.289094 (38.99 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 15 rows 22 columns
Cbc0010I After 514 nodes, 4 on tree, -62.575182 best solution, best possible -99.289094 (39.69 seconds)
Cbc0010I After 533 nodes, 5 on tree, -62.575182 best solution, best possible -99.289094 (40.46 seconds)
Cbc0010I After 544 nodes, 6 on tree, -62.575182 best solution, best possible -99.289094 (41.25 seconds)
Cbc0010I After 557 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (41.95 seconds)
Cbc0010I After 576 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (42.71 seconds)
Cbc0010I After 589 nodes, 9 on tree, -62.575182 best solution, best possible -99.289094 (43.41 seconds)
Cbc0010I After 605 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (44.25 seconds)
Cbc0010I After 620 nodes, 8 on tree, -62.575182 best solution, best possible -99.289094 (44.98 seconds)
Cbc0010I After 634 nodes, 1 on tree, -62.575182 best solution, best possible -97.971094 (45.99 seconds)
Cbc0010I After 635 nodes, 2 on tree, -62.575182 best solution, best possible -97.971094 (46.89 seconds)
Cbc0010I After 638 nodes, 5 on tree, -62.575182 best solution, best possible -97.971094 (47.74 seconds)
Cbc0012I Integer solution of -68.640442 found by rounding after 74467 iterations and 641 nodes (48.24 seconds)
Cbc0010I After 644 nodes, 8 on tree, -68.640442 best solution, best possible -97.971094 (48.46 seconds)
Cbc0012I Integer solution of -68.746292 found by rounding after 74682 iterations and 645 nodes (48.48 seconds)
Cbc0012I Integer solution of -70.274442 found by rounding after 74952 iterations and 661 nodes (49.18 seconds)
Cbc0010I After 661 nodes, 10 on tree, -70.274442 best solution, best possible -97.971094 (49.18 seconds)
Cbc0004I Integer solution of -70.380052 found after 75093 iterations and 673 nodes (49.43 seconds)
Cbc0010I After 680 nodes, 7 on tree, -70.380052 best solution, best possible -97.971094 (49.89 seconds)
Cbc0038I Full problem 347 rows 370 columns, reduced to 128 rows 154 columns
Cbc0010I After 700 nodes, 9 on tree, -70.380052 best solution, best possible -97.971094 (51.41 seconds)
Cbc0010I After 712 nodes, 9 on tree, -70.380052 best solution, best possible -97.971094 (52.17 seconds)
Cbc0010I After 721 nodes, 6 on tree, -70.380052 best solution, best possible -97.971094 (53.33 seconds)
Cbc0010I After 723 nodes, 6 on tree, -70.380052 best solution, best possible -97.971094 (54.03 seconds)
Cbc0010I After 726 nodes, 5 on tree, -70.380052 best solution, best possible -97.971094 (55.03 seconds)
Cbc0010I After 753 nodes, 6 on tree, -70.380052 best solution, best possible -97.971094 (55.73 seconds)
Cbc0012I Integer solution of -71.274442 found by DiveCoefficient after 84698 iterations and 763 nodes (56.30 seconds)
Cbc0004I Integer solution of -72.274442 found after 84704 iterations and 764 nodes (56.30 seconds)
Cbc0012I Integer solution of -73.021862 found by DiveCoefficient after 85336 iterations and 768 nodes (56.50 seconds)
Cbc0010I After 768 nodes, 1 on tree, -73.021862 best solution, best possible -76.753941 (56.50 seconds)
Cbc0001I Search completed - best objective -73.021862, took 85399 iterations and 770 nodes (56.50 seconds)
Cbc0032I Strong branching done 3812 times (93036 iterations), fathomed 28 nodes and fixed 81 variables
Cbc0035I Maximum depth 38, 3813 variables fixed on reduced cost
Total time (CPU seconds):       49.98   (Wallclock seconds):       56.61

