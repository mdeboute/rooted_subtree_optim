Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 1.44739e-05 - average 1.08014e-07, 17 fixed columns
Coin0506I Presolve 95 (-39) rows, 57 (-19) columns and 296 (-116) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 2.4796425 - largest nonzero change 0 ( 0%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 66.471177
Clp0000I Optimal - objective value 66.471177
Coin0511I After Postsolve, objective 66.471177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.471177
Clp0000I Optimal - objective value 66.471177
Clp0000I Optimal - objective value 66.471177
Coin0511I After Postsolve, objective 66.471177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.47117686 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.0334
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.89557 iterations 60
Cbc0038I Solution found of 8.89557
Cbc0038I Relaxing continuous gives 8.89557
Cbc0038I Rounding solution of -11.0093 is better than previous of 8.89557

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -11.0093 to -28.4452 (0.05 seconds)
Cbc0038I Round again with cutoff of -32.2479
Cbc0038I Pass   2: suminf.    4.11208 (18) obj. -32.2479 iterations 27
Cbc0038I Pass   3: suminf.    3.91927 (17) obj. -32.2479 iterations 6
Cbc0038I Pass   4: suminf.    1.61798 (7) obj. -32.2479 iterations 19
Cbc0038I Pass   5: suminf.    1.30748 (6) obj. -32.2479 iterations 2
Cbc0038I Pass   6: suminf.    2.02935 (6) obj. -32.2479 iterations 8
Cbc0038I Pass   7: suminf.    0.81304 (3) obj. -32.2479 iterations 5
Cbc0038I Pass   8: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass   9: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  10: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  11: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  12: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  13: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I Pass  14: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass  15: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  16: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  17: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  18: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  19: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I Pass  20: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass  21: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  22: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  23: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  24: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  25: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I Pass  26: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass  27: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  28: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  29: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  30: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  31: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -28.4452 to -30.7571 (0.10 seconds)
Cbc0038I Round again with cutoff of -39.0926
Cbc0038I Pass  31: suminf.    5.03996 (20) obj. -39.0926 iterations 6
Cbc0038I Pass  32: suminf.    4.20807 (16) obj. -39.0926 iterations 16
Cbc0038I Pass  33: suminf.    2.59002 (8) obj. -39.0926 iterations 9
Cbc0038I Pass  34: suminf.    0.93649 (5) obj. -39.0926 iterations 11
Cbc0038I Pass  35: suminf.    1.34801 (6) obj. -39.0926 iterations 5
Cbc0038I Pass  36: suminf.    0.57317 (4) obj. -39.0926 iterations 5
Cbc0038I Pass  37: suminf.    1.52554 (5) obj. -39.0926 iterations 5
Cbc0038I Pass  38: suminf.    0.87982 (3) obj. -39.0926 iterations 3
Cbc0038I Pass  39: suminf.    0.60591 (4) obj. -39.0926 iterations 3
Cbc0038I Pass  40: suminf.    3.96646 (12) obj. -39.0926 iterations 20
Cbc0038I Pass  41: suminf.    2.89358 (10) obj. -39.0926 iterations 7
Cbc0038I Pass  42: suminf.    2.36114 (9) obj. -39.0926 iterations 1
Cbc0038I Pass  43: suminf.    1.77835 (6) obj. -39.0926 iterations 13
Cbc0038I Pass  44: suminf.    0.86220 (6) obj. -39.0926 iterations 4
Cbc0038I Pass  45: suminf.    3.25749 (10) obj. -39.0926 iterations 7
Cbc0038I Pass  46: suminf.    1.64157 (7) obj. -39.0926 iterations 3
Cbc0038I Pass  47: suminf.    2.94682 (11) obj. -39.0926 iterations 22
Cbc0038I Pass  48: suminf.    1.76092 (7) obj. -39.0926 iterations 9
Cbc0038I Pass  49: suminf.    1.84436 (7) obj. -39.0926 iterations 13
Cbc0038I Pass  50: suminf.    1.11740 (5) obj. -39.0926 iterations 7
Cbc0038I Pass  51: suminf.    3.17297 (10) obj. -39.0926 iterations 22
Cbc0038I Pass  52: suminf.    2.40113 (10) obj. -39.0926 iterations 12
Cbc0038I Pass  53: suminf.    2.22883 (10) obj. -39.0926 iterations 3
Cbc0038I Pass  54: suminf.    2.10122 (6) obj. -39.0926 iterations 12
Cbc0038I Pass  55: suminf.    1.80350 (6) obj. -39.0926 iterations 1
Cbc0038I Pass  56: suminf.    1.43691 (5) obj. -39.0926 iterations 2
Cbc0038I Pass  57: suminf.    2.35293 (7) obj. -39.0926 iterations 6
Cbc0038I Pass  58: suminf.    1.88785 (7) obj. -39.0926 iterations 2
Cbc0038I Pass  59: suminf.    2.66083 (8) obj. -39.0926 iterations 6
Cbc0038I Pass  60: suminf.    2.15940 (7) obj. -39.0926 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 88 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -30.7571 to -32.8312 (0.16 seconds)
Cbc0038I Round again with cutoff of -47.3062
Cbc0038I Pass  60: suminf.    5.95693 (20) obj. -47.3062 iterations 0
Cbc0038I Pass  61: suminf.    5.32094 (17) obj. -47.3062 iterations 11
Cbc0038I Pass  62: suminf.    3.05358 (10) obj. -47.3062 iterations 8
Cbc0038I Pass  63: suminf.    1.46882 (8) obj. -47.3062 iterations 5
Cbc0038I Pass  64: suminf.    2.46285 (8) obj. -47.3062 iterations 10
Cbc0038I Pass  65: suminf.    1.31035 (6) obj. -47.3062 iterations 7
Cbc0038I Pass  66: suminf.    2.83166 (10) obj. -47.3062 iterations 16
Cbc0038I Pass  67: suminf.    2.30272 (9) obj. -47.3062 iterations 12
Cbc0038I Pass  68: suminf.    2.19224 (7) obj. -47.3062 iterations 10
Cbc0038I Pass  69: suminf.    1.86002 (6) obj. -47.3062 iterations 4
Cbc0038I Pass  70: suminf.    2.33833 (8) obj. -47.3062 iterations 9
Cbc0038I Pass  71: suminf.    3.03259 (9) obj. -47.3062 iterations 18
Cbc0038I Pass  72: suminf.    2.61684 (10) obj. -47.3062 iterations 8
Cbc0038I Pass  73: suminf.    3.60769 (10) obj. -47.3062 iterations 16
Cbc0038I Pass  74: suminf.    1.89395 (7) obj. -47.3062 iterations 7
Cbc0038I Pass  75: suminf.    2.85372 (9) obj. -47.3062 iterations 11
Cbc0038I Pass  76: suminf.    2.21818 (7) obj. -47.3062 iterations 4
Cbc0038I Pass  77: suminf.    3.81116 (13) obj. -47.3062 iterations 18
Cbc0038I Pass  78: suminf.    1.92851 (7) obj. -47.3062 iterations 10
Cbc0038I Pass  79: suminf.    2.06136 (6) obj. -47.3062 iterations 15
Cbc0038I Pass  80: suminf.    2.02854 (6) obj. -47.3062 iterations 1
Cbc0038I Pass  81: suminf.    2.32891 (6) obj. -47.3062 iterations 5
Cbc0038I Pass  82: suminf.    1.97269 (8) obj. -47.3062 iterations 4
Cbc0038I Pass  83: suminf.    2.96515 (9) obj. -47.3062 iterations 17
Cbc0038I Pass  84: suminf.    2.26410 (7) obj. -47.3062 iterations 2
Cbc0038I Pass  85: suminf.    1.86369 (6) obj. -47.3062 iterations 3
Cbc0038I Pass  86: suminf.    2.85279 (8) obj. -47.3062 iterations 6
Cbc0038I Pass  87: suminf.    2.04906 (7) obj. -47.3062 iterations 2
Cbc0038I Pass  88: suminf.    3.50256 (10) obj. -47.3062 iterations 14
Cbc0038I Pass  89: suminf.    2.45397 (7) obj. -47.3062 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 82 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -32.8312 - took 0.19 seconds
Cbc0012I Integer solution of -32.83123 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 74 rows 45 columns
Cbc0031I 32 added rows had average density of 51.34375
Cbc0013I At root node, 32 cuts changed objective from -66.471177 to -55.067325 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13156 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2170 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 141 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -32.83123 best solution, best possible -55.067325 (1.07 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 19 rows 18 columns
Cbc0001I Search completed - best objective -32.83123000000001, took 9931 iterations and 66 nodes (1.31 seconds)
Cbc0032I Strong branching done 802 times (15051 iterations), fathomed 13 nodes and fixed 25 variables
Cbc0035I Maximum depth 19, 152 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 120 (-32) columns and 2005 (-1298) elements
Clp1000I sum of infeasibilities 1.41462e-07 - average 1.36021e-09, 27 fixed columns
Coin0506I Presolve 82 (-22) rows, 93 (-27) columns and 1154 (-851) elements
Clp0006I 0  Obj 75.108089 Dual inf 7.3535477 (93)
Clp0014I Perturbing problem by 0.001% of 1.7567426 - largest nonzero change 2.6973662e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 89.086544
Clp0000I Optimal - objective value 89.086544
Coin0511I After Postsolve, objective 89.086544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 89.086544
Clp0000I Optimal - objective value 89.086544
Clp0000I Optimal - objective value 89.086544
Clp0000I Optimal - objective value 89.086544
Coin0511I After Postsolve, objective 89.086544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.08654388 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 120 columns (120 integer (120 of which binary)) and 2007 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.483%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.21347
Cbc0038I Pass   1: suminf.    3.18141 (33) obj. -67.6968 iterations 21
Cbc0038I Pass   2: suminf.    3.18141 (33) obj. -67.6968 iterations 1
Cbc0038I Solution found of -24.8575
Cbc0038I Rounding solution of -28.9534 is better than previous of -24.8575

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 120 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.9531
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.18141 (33) obj. -67.6968 iterations 0
Cbc0038I Pass   4: suminf.    3.18141 (33) obj. -67.6968 iterations 1
Cbc0038I Pass   5: suminf.    0.76145 (10) obj. -40.6674 iterations 15
Cbc0038I Pass   6: suminf.    0.75897 (13) obj. -33.9531 iterations 13
Cbc0038I Pass   7: suminf.    0.70368 (13) obj. -35.8102 iterations 1
Cbc0038I Pass   8: suminf.    0.99501 (5) obj. -33.9531 iterations 20
Cbc0038I Pass   9: suminf.    0.99501 (5) obj. -33.9531 iterations 0
Cbc0038I Pass  10: suminf.    0.99221 (4) obj. -33.9531 iterations 9
Cbc0038I Pass  11: suminf.    0.57757 (3) obj. -33.9531 iterations 6
Cbc0038I Pass  12: suminf.    0.97905 (3) obj. -33.9531 iterations 3
Cbc0038I Pass  13: suminf.    0.48554 (3) obj. -33.9531 iterations 1
Cbc0038I Pass  14: suminf.    1.98713 (11) obj. -33.9531 iterations 22
Cbc0038I Pass  15: suminf.    1.57348 (10) obj. -33.9531 iterations 7
Cbc0038I Pass  16: suminf.    1.00721 (7) obj. -33.9531 iterations 15
Cbc0038I Pass  17: suminf.    0.81382 (6) obj. -33.9531 iterations 5
Cbc0038I Pass  18: suminf.    1.41581 (6) obj. -33.9531 iterations 7
Cbc0038I Pass  19: suminf.    1.03075 (5) obj. -35.1083 iterations 4
Cbc0038I Pass  20: suminf.    1.45530 (6) obj. -33.9531 iterations 10
Cbc0038I Pass  21: suminf.    1.45530 (6) obj. -33.9531 iterations 0
Cbc0038I Pass  22: suminf.    1.56073 (6) obj. -33.9531 iterations 6
Cbc0038I Pass  23: suminf.    1.56073 (6) obj. -33.9531 iterations 4
Cbc0038I Pass  24: suminf.    1.45530 (6) obj. -33.9531 iterations 6
Cbc0038I Pass  25: suminf.    1.84459 (14) obj. -33.9531 iterations 23
Cbc0038I Pass  26: suminf.    1.56104 (10) obj. -35.6288 iterations 10
Cbc0038I Pass  27: suminf.    1.10758 (7) obj. -33.9531 iterations 14
Cbc0038I Pass  28: suminf.    1.07972 (7) obj. -33.9531 iterations 4
Cbc0038I Pass  29: suminf.    0.70109 (6) obj. -33.9531 iterations 9
Cbc0038I Pass  30: suminf.    0.70109 (6) obj. -33.9531 iterations 0
Cbc0038I Pass  31: suminf.    0.64642 (5) obj. -33.9531 iterations 9
Cbc0038I Pass  32: suminf.    0.61132 (5) obj. -33.9531 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 120 columns, reduced to 20 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -24.8575 to -30.1754 (0.05 seconds)
Cbc0038I Round again with cutoff of -42.9522
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.18141 (33) obj. -67.6968 iterations 0
Cbc0038I Pass  33: suminf.    3.18141 (33) obj. -67.6968 iterations 1
Cbc0038I Pass  34: suminf.    1.23084 (12) obj. -42.9522 iterations 31
Cbc0038I Pass  35: suminf.    1.23084 (12) obj. -42.9522 iterations 0
Cbc0038I Pass  36: suminf.    1.41099 (7) obj. -42.9522 iterations 18
Cbc0038I Pass  37: suminf.    0.97994 (6) obj. -42.9522 iterations 6
Cbc0038I Pass  38: suminf.    1.42638 (7) obj. -42.9522 iterations 4
Cbc0038I Pass  39: suminf.    1.97971 (11) obj. -42.9522 iterations 31
Cbc0038I Pass  40: suminf.    1.78670 (12) obj. -42.9522 iterations 4
Cbc0038I Pass  41: suminf.    1.63289 (8) obj. -42.9522 iterations 16
Cbc0038I Pass  42: suminf.    1.18164 (7) obj. -42.9522 iterations 10
Cbc0038I Pass  43: suminf.    1.63604 (8) obj. -42.9522 iterations 28
Cbc0038I Pass  44: suminf.    1.63604 (8) obj. -42.9522 iterations 0
Cbc0038I Pass  45: suminf.    1.85202 (8) obj. -42.9522 iterations 12
Cbc0038I Pass  46: suminf.    1.73289 (8) obj. -42.9522 iterations 5
Cbc0038I Pass  47: suminf.    1.36756 (9) obj. -42.9522 iterations 2
Cbc0038I Pass  48: suminf.    1.85202 (8) obj. -42.9522 iterations 6
Cbc0038I Pass  49: suminf.    1.81486 (13) obj. -42.9522 iterations 29
Cbc0038I Pass  50: suminf.    1.49770 (12) obj. -42.9522 iterations 3
Cbc0038I Pass  51: suminf.    1.98717 (9) obj. -42.9522 iterations 14
Cbc0038I Pass  52: suminf.    0.89673 (7) obj. -42.9522 iterations 14
Cbc0038I Pass  53: suminf.    1.19888 (7) obj. -42.9522 iterations 6
Cbc0038I Pass  54: suminf.    1.60569 (14) obj. -42.9522 iterations 15
Cbc0038I Pass  55: suminf.    1.53279 (15) obj. -42.9522 iterations 5
Cbc0038I Pass  56: suminf.    1.32805 (9) obj. -42.9522 iterations 14
Cbc0038I Pass  57: suminf.    1.20825 (10) obj. -42.9522 iterations 4
Cbc0038I Pass  58: suminf.    2.35074 (9) obj. -42.9522 iterations 20
Cbc0038I Pass  59: suminf.    2.35074 (9) obj. -42.9522 iterations 1
Cbc0038I Pass  60: suminf.    1.73887 (8) obj. -42.9522 iterations 10
Cbc0038I Pass  61: suminf.    1.64187 (9) obj. -42.9522 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -30.1754 - took 0.06 seconds
Cbc0012I Integer solution of -30.17535 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 104 rows 120 columns, reduced to 19 rows 26 columns
Cbc0031I 62 added rows had average density of 31.322581
Cbc0013I At root node, 62 cuts changed objective from -78.948951 to -40.593965 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20301 row cuts average 6.0 elements, 1 column cuts (1 active)  in 0.187 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1759 row cuts average 111.4 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 610 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1205 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 364 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.664 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.17535 best solution, best possible -40.593965 (2.79 seconds)
Cbc0012I Integer solution of -32.15584 found by rounding after 5745 iterations and 16 nodes (3.23 seconds)
Cbc0038I Full problem 104 rows 120 columns, reduced to 15 rows 23 columns
Cbc0012I Integer solution of -32.83123 found by RINS after 6100 iterations and 41 nodes (3.29 seconds)
Cbc0010I After 67 nodes, 7 on tree, -32.83123 best solution, best possible -39.555921 (3.50 seconds)
Cbc0001I Search completed - best objective -32.83123000000001, took 7266 iterations and 80 nodes (3.55 seconds)
Cbc0032I Strong branching done 878 times (12403 iterations), fathomed 15 nodes and fixed 16 variables
Cbc0035I Maximum depth 15, 164 variables fixed on reduced cost
Total time (CPU seconds):       2.75   (Wallclock seconds):       3.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 1.44739e-05 - average 1.08014e-07, 17 fixed columns
Coin0506I Presolve 95 (-39) rows, 57 (-19) columns and 296 (-116) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 2.4796425 - largest nonzero change 0 ( 0%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 66.471177
Clp0000I Optimal - objective value 66.471177
Coin0511I After Postsolve, objective 66.471177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.471177
Clp0000I Optimal - objective value 66.471177
Clp0000I Optimal - objective value 66.471177
Coin0511I After Postsolve, objective 66.471177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.47117686 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.0334
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.89557 iterations 60
Cbc0038I Solution found of 8.89557
Cbc0038I Relaxing continuous gives 8.89557
Cbc0038I Rounding solution of -11.0093 is better than previous of 8.89557

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -11.0093 to -28.4452 (0.05 seconds)
Cbc0038I Round again with cutoff of -32.2479
Cbc0038I Pass   2: suminf.    4.11208 (18) obj. -32.2479 iterations 27
Cbc0038I Pass   3: suminf.    3.91927 (17) obj. -32.2479 iterations 6
Cbc0038I Pass   4: suminf.    1.61798 (7) obj. -32.2479 iterations 19
Cbc0038I Pass   5: suminf.    1.30748 (6) obj. -32.2479 iterations 2
Cbc0038I Pass   6: suminf.    2.02935 (6) obj. -32.2479 iterations 8
Cbc0038I Pass   7: suminf.    0.81304 (3) obj. -32.2479 iterations 5
Cbc0038I Pass   8: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass   9: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  10: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  11: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  12: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  13: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I Pass  14: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass  15: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  16: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  17: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  18: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  19: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I Pass  20: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass  21: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  22: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  23: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  24: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  25: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I Pass  26: suminf.    1.10990 (4) obj. -32.2479 iterations 3
Cbc0038I Pass  27: suminf.    0.62343 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  28: suminf.    0.68846 (3) obj. -32.2479 iterations 3
Cbc0038I Pass  29: suminf.    0.30128 (2) obj. -32.2479 iterations 2
Cbc0038I Pass  30: suminf.    0.86575 (4) obj. -32.2479 iterations 4
Cbc0038I Pass  31: suminf.    0.81304 (3) obj. -32.2479 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -28.4452 to -30.7571 (0.10 seconds)
Cbc0038I Round again with cutoff of -39.0926
Cbc0038I Pass  31: suminf.    5.03996 (20) obj. -39.0926 iterations 6
Cbc0038I Pass  32: suminf.    4.20807 (16) obj. -39.0926 iterations 16
Cbc0038I Pass  33: suminf.    2.59002 (8) obj. -39.0926 iterations 9
Cbc0038I Pass  34: suminf.    0.93649 (5) obj. -39.0926 iterations 11
Cbc0038I Pass  35: suminf.    1.34801 (6) obj. -39.0926 iterations 5
Cbc0038I Pass  36: suminf.    0.57317 (4) obj. -39.0926 iterations 5
Cbc0038I Pass  37: suminf.    1.52554 (5) obj. -39.0926 iterations 5
Cbc0038I Pass  38: suminf.    0.87982 (3) obj. -39.0926 iterations 3
Cbc0038I Pass  39: suminf.    0.60591 (4) obj. -39.0926 iterations 3
Cbc0038I Pass  40: suminf.    3.96646 (12) obj. -39.0926 iterations 20
Cbc0038I Pass  41: suminf.    2.89358 (10) obj. -39.0926 iterations 7
Cbc0038I Pass  42: suminf.    2.36114 (9) obj. -39.0926 iterations 1
Cbc0038I Pass  43: suminf.    1.77835 (6) obj. -39.0926 iterations 13
Cbc0038I Pass  44: suminf.    0.86220 (6) obj. -39.0926 iterations 4
Cbc0038I Pass  45: suminf.    3.25749 (10) obj. -39.0926 iterations 7
Cbc0038I Pass  46: suminf.    1.64157 (7) obj. -39.0926 iterations 3
Cbc0038I Pass  47: suminf.    2.94682 (11) obj. -39.0926 iterations 22
Cbc0038I Pass  48: suminf.    1.76092 (7) obj. -39.0926 iterations 9
Cbc0038I Pass  49: suminf.    1.84436 (7) obj. -39.0926 iterations 13
Cbc0038I Pass  50: suminf.    1.11740 (5) obj. -39.0926 iterations 7
Cbc0038I Pass  51: suminf.    3.17297 (10) obj. -39.0926 iterations 22
Cbc0038I Pass  52: suminf.    2.40113 (10) obj. -39.0926 iterations 12
Cbc0038I Pass  53: suminf.    2.22883 (10) obj. -39.0926 iterations 3
Cbc0038I Pass  54: suminf.    2.10122 (6) obj. -39.0926 iterations 12
Cbc0038I Pass  55: suminf.    1.80350 (6) obj. -39.0926 iterations 1
Cbc0038I Pass  56: suminf.    1.43691 (5) obj. -39.0926 iterations 2
Cbc0038I Pass  57: suminf.    2.35293 (7) obj. -39.0926 iterations 6
Cbc0038I Pass  58: suminf.    1.88785 (7) obj. -39.0926 iterations 2
Cbc0038I Pass  59: suminf.    2.66083 (8) obj. -39.0926 iterations 6
Cbc0038I Pass  60: suminf.    2.15940 (7) obj. -39.0926 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 88 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -30.7571 to -32.8312 (0.15 seconds)
Cbc0038I Round again with cutoff of -47.3062
Cbc0038I Pass  60: suminf.    5.95693 (20) obj. -47.3062 iterations 0
Cbc0038I Pass  61: suminf.    5.32094 (17) obj. -47.3062 iterations 11
Cbc0038I Pass  62: suminf.    3.05358 (10) obj. -47.3062 iterations 8
Cbc0038I Pass  63: suminf.    1.46882 (8) obj. -47.3062 iterations 5
Cbc0038I Pass  64: suminf.    2.46285 (8) obj. -47.3062 iterations 10
Cbc0038I Pass  65: suminf.    1.31035 (6) obj. -47.3062 iterations 7
Cbc0038I Pass  66: suminf.    2.83166 (10) obj. -47.3062 iterations 16
Cbc0038I Pass  67: suminf.    2.30272 (9) obj. -47.3062 iterations 12
Cbc0038I Pass  68: suminf.    2.19224 (7) obj. -47.3062 iterations 10
Cbc0038I Pass  69: suminf.    1.86002 (6) obj. -47.3062 iterations 4
Cbc0038I Pass  70: suminf.    2.33833 (8) obj. -47.3062 iterations 9
Cbc0038I Pass  71: suminf.    3.03259 (9) obj. -47.3062 iterations 18
Cbc0038I Pass  72: suminf.    2.61684 (10) obj. -47.3062 iterations 8
Cbc0038I Pass  73: suminf.    3.60769 (10) obj. -47.3062 iterations 16
Cbc0038I Pass  74: suminf.    1.89395 (7) obj. -47.3062 iterations 7
Cbc0038I Pass  75: suminf.    2.85372 (9) obj. -47.3062 iterations 11
Cbc0038I Pass  76: suminf.    2.21818 (7) obj. -47.3062 iterations 4
Cbc0038I Pass  77: suminf.    3.81116 (13) obj. -47.3062 iterations 18
Cbc0038I Pass  78: suminf.    1.92851 (7) obj. -47.3062 iterations 10
Cbc0038I Pass  79: suminf.    2.06136 (6) obj. -47.3062 iterations 15
Cbc0038I Pass  80: suminf.    2.02854 (6) obj. -47.3062 iterations 1
Cbc0038I Pass  81: suminf.    2.32891 (6) obj. -47.3062 iterations 5
Cbc0038I Pass  82: suminf.    1.97269 (8) obj. -47.3062 iterations 4
Cbc0038I Pass  83: suminf.    2.96515 (9) obj. -47.3062 iterations 17
Cbc0038I Pass  84: suminf.    2.26410 (7) obj. -47.3062 iterations 2
Cbc0038I Pass  85: suminf.    1.86369 (6) obj. -47.3062 iterations 3
Cbc0038I Pass  86: suminf.    2.85279 (8) obj. -47.3062 iterations 6
Cbc0038I Pass  87: suminf.    2.04906 (7) obj. -47.3062 iterations 2
Cbc0038I Pass  88: suminf.    3.50256 (10) obj. -47.3062 iterations 14
Cbc0038I Pass  89: suminf.    2.45397 (7) obj. -47.3062 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 82 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -32.8312 - took 0.18 seconds
Cbc0012I Integer solution of -32.83123 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 74 rows 45 columns
Cbc0031I 32 added rows had average density of 51.34375
Cbc0013I At root node, 32 cuts changed objective from -66.471177 to -55.067325 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13156 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2170 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 141 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -32.83123 best solution, best possible -55.067325 (1.03 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 19 rows 18 columns
Cbc0001I Search completed - best objective -32.83123000000001, took 9931 iterations and 66 nodes (1.28 seconds)
Cbc0032I Strong branching done 802 times (15051 iterations), fathomed 13 nodes and fixed 25 variables
Cbc0035I Maximum depth 19, 152 variables fixed on reduced cost
Total time (CPU seconds):       1.24   (Wallclock seconds):       1.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 120 (-33) columns and 2005 (-1299) elements
Clp1000I sum of infeasibilities 1.41462e-07 - average 1.36021e-09, 27 fixed columns
Coin0506I Presolve 82 (-22) rows, 93 (-27) columns and 1154 (-851) elements
Clp0006I 0  Obj 75.108089 Dual inf 7.3535477 (93)
Clp0014I Perturbing problem by 0.001% of 1.7567426 - largest nonzero change 2.6973662e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 89.086544
Clp0000I Optimal - objective value 89.086544
Coin0511I After Postsolve, objective 89.086544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 89.086544
Clp0000I Optimal - objective value 89.086544
Clp0000I Optimal - objective value 89.086544
Clp0000I Optimal - objective value 89.086544
Coin0511I After Postsolve, objective 89.086544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.08654388 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 120 columns (120 integer (120 of which binary)) and 2007 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.483%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.21347
Cbc0038I Pass   1: suminf.    3.18141 (33) obj. -67.6968 iterations 21
Cbc0038I Pass   2: suminf.    3.18141 (33) obj. -67.6968 iterations 1
Cbc0038I Solution found of -24.8575
Cbc0038I Rounding solution of -28.9534 is better than previous of -24.8575

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 120 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -33.9531
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.18141 (33) obj. -67.6968 iterations 0
Cbc0038I Pass   4: suminf.    3.18141 (33) obj. -67.6968 iterations 1
Cbc0038I Pass   5: suminf.    0.76145 (10) obj. -40.6674 iterations 15
Cbc0038I Pass   6: suminf.    0.75897 (13) obj. -33.9531 iterations 13
Cbc0038I Pass   7: suminf.    0.70368 (13) obj. -35.8102 iterations 1
Cbc0038I Pass   8: suminf.    0.99501 (5) obj. -33.9531 iterations 20
Cbc0038I Pass   9: suminf.    0.99501 (5) obj. -33.9531 iterations 0
Cbc0038I Pass  10: suminf.    0.99221 (4) obj. -33.9531 iterations 9
Cbc0038I Pass  11: suminf.    0.57757 (3) obj. -33.9531 iterations 6
Cbc0038I Pass  12: suminf.    0.97905 (3) obj. -33.9531 iterations 3
Cbc0038I Pass  13: suminf.    0.48554 (3) obj. -33.9531 iterations 1
Cbc0038I Pass  14: suminf.    1.98713 (11) obj. -33.9531 iterations 22
Cbc0038I Pass  15: suminf.    1.57348 (10) obj. -33.9531 iterations 7
Cbc0038I Pass  16: suminf.    1.00721 (7) obj. -33.9531 iterations 15
Cbc0038I Pass  17: suminf.    0.81382 (6) obj. -33.9531 iterations 5
Cbc0038I Pass  18: suminf.    1.41581 (6) obj. -33.9531 iterations 7
Cbc0038I Pass  19: suminf.    1.03075 (5) obj. -35.1083 iterations 4
Cbc0038I Pass  20: suminf.    1.45530 (6) obj. -33.9531 iterations 10
Cbc0038I Pass  21: suminf.    1.45530 (6) obj. -33.9531 iterations 0
Cbc0038I Pass  22: suminf.    1.56073 (6) obj. -33.9531 iterations 6
Cbc0038I Pass  23: suminf.    1.56073 (6) obj. -33.9531 iterations 4
Cbc0038I Pass  24: suminf.    1.45530 (6) obj. -33.9531 iterations 6
Cbc0038I Pass  25: suminf.    1.84459 (14) obj. -33.9531 iterations 23
Cbc0038I Pass  26: suminf.    1.56104 (10) obj. -35.6288 iterations 10
Cbc0038I Pass  27: suminf.    1.10758 (7) obj. -33.9531 iterations 14
Cbc0038I Pass  28: suminf.    1.07972 (7) obj. -33.9531 iterations 4
Cbc0038I Pass  29: suminf.    0.70109 (6) obj. -33.9531 iterations 9
Cbc0038I Pass  30: suminf.    0.70109 (6) obj. -33.9531 iterations 0
Cbc0038I Pass  31: suminf.    0.64642 (5) obj. -33.9531 iterations 9
Cbc0038I Pass  32: suminf.    0.61132 (5) obj. -33.9531 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 120 columns, reduced to 20 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -24.8575 to -30.1754 (0.06 seconds)
Cbc0038I Round again with cutoff of -42.9522
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.18141 (33) obj. -67.6968 iterations 0
Cbc0038I Pass  33: suminf.    3.18141 (33) obj. -67.6968 iterations 1
Cbc0038I Pass  34: suminf.    1.23084 (12) obj. -42.9522 iterations 31
Cbc0038I Pass  35: suminf.    1.23084 (12) obj. -42.9522 iterations 0
Cbc0038I Pass  36: suminf.    1.41099 (7) obj. -42.9522 iterations 18
Cbc0038I Pass  37: suminf.    0.97994 (6) obj. -42.9522 iterations 6
Cbc0038I Pass  38: suminf.    1.42638 (7) obj. -42.9522 iterations 4
Cbc0038I Pass  39: suminf.    1.97971 (11) obj. -42.9522 iterations 31
Cbc0038I Pass  40: suminf.    1.78670 (12) obj. -42.9522 iterations 4
Cbc0038I Pass  41: suminf.    1.63289 (8) obj. -42.9522 iterations 16
Cbc0038I Pass  42: suminf.    1.18164 (7) obj. -42.9522 iterations 10
Cbc0038I Pass  43: suminf.    1.63604 (8) obj. -42.9522 iterations 28
Cbc0038I Pass  44: suminf.    1.63604 (8) obj. -42.9522 iterations 0
Cbc0038I Pass  45: suminf.    1.85202 (8) obj. -42.9522 iterations 12
Cbc0038I Pass  46: suminf.    1.73289 (8) obj. -42.9522 iterations 5
Cbc0038I Pass  47: suminf.    1.36756 (9) obj. -42.9522 iterations 2
Cbc0038I Pass  48: suminf.    1.85202 (8) obj. -42.9522 iterations 6
Cbc0038I Pass  49: suminf.    1.81486 (13) obj. -42.9522 iterations 29
Cbc0038I Pass  50: suminf.    1.49770 (12) obj. -42.9522 iterations 3
Cbc0038I Pass  51: suminf.    1.98717 (9) obj. -42.9522 iterations 14
Cbc0038I Pass  52: suminf.    0.89673 (7) obj. -42.9522 iterations 14
Cbc0038I Pass  53: suminf.    1.19888 (7) obj. -42.9522 iterations 6
Cbc0038I Pass  54: suminf.    1.60569 (14) obj. -42.9522 iterations 15
Cbc0038I Pass  55: suminf.    1.53279 (15) obj. -42.9522 iterations 5
Cbc0038I Pass  56: suminf.    1.32805 (9) obj. -42.9522 iterations 14
Cbc0038I Pass  57: suminf.    1.20825 (10) obj. -42.9522 iterations 4
Cbc0038I Pass  58: suminf.    2.35074 (9) obj. -42.9522 iterations 20
Cbc0038I Pass  59: suminf.    2.35074 (9) obj. -42.9522 iterations 1
Cbc0038I Pass  60: suminf.    1.73887 (8) obj. -42.9522 iterations 10
Cbc0038I Pass  61: suminf.    1.64187 (9) obj. -42.9522 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -30.1754 - took 0.06 seconds
Cbc0012I Integer solution of -30.17535 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 104 rows 120 columns, reduced to 19 rows 26 columns
Cbc0031I 62 added rows had average density of 31.322581
Cbc0013I At root node, 62 cuts changed objective from -78.948951 to -40.593965 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20301 row cuts average 6.0 elements, 1 column cuts (1 active)  in 0.193 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1759 row cuts average 111.4 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 610 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1205 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 364 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.656 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.17535 best solution, best possible -40.593965 (2.83 seconds)
Cbc0012I Integer solution of -32.15584 found by rounding after 5745 iterations and 16 nodes (3.29 seconds)
Cbc0038I Full problem 104 rows 120 columns, reduced to 15 rows 23 columns
Cbc0012I Integer solution of -32.83123 found by RINS after 6100 iterations and 41 nodes (3.36 seconds)
Cbc0010I After 66 nodes, 6 on tree, -32.83123 best solution, best possible -39.555921 (3.56 seconds)
Cbc0001I Search completed - best objective -32.83123000000001, took 7266 iterations and 80 nodes (3.63 seconds)
Cbc0032I Strong branching done 878 times (12403 iterations), fathomed 15 nodes and fixed 16 variables
Cbc0035I Maximum depth 15, 164 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       3.65

