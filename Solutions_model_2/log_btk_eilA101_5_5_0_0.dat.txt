Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 97 (-6) columns and 554 (-49) elements
Clp1000I sum of infeasibilities 0.000127412 - average 6.92456e-07, 34 fixed columns
Coin0506I Presolve 108 (-76) rows, 58 (-39) columns and 324 (-230) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 0.34030027 - largest nonzero change 0 ( 0%) - largest zero change 2.9336283e-05
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Coin0511I After Postsolve, objective 193.6075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Coin0511I After Postsolve, objective 193.6075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.6075017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 97 columns (96 integer (96 of which binary)) and 554 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.962%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.66683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -77.0309 iterations 50
Cbc0038I Solution found of -77.0309
Cbc0038I Relaxing continuous gives -77.0309
Cbc0038I Rounding solution of -131.402 is better than previous of -77.0309

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 97 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -131.402 to -157.813 (0.05 seconds)
Cbc0038I Round again with cutoff of -161.392
Cbc0038I Pass   2: suminf.    2.50703 (7) obj. -161.392 iterations 16
Cbc0038I Pass   3: suminf.    2.36493 (6) obj. -161.392 iterations 1
Cbc0038I Pass   4: suminf.    0.40371 (3) obj. -161.392 iterations 13
Cbc0038I Pass   5: suminf.    0.40371 (3) obj. -161.392 iterations 0
Cbc0038I Pass   6: suminf.    0.88567 (3) obj. -161.392 iterations 9
Cbc0038I Pass   7: suminf.    0.59553 (2) obj. -161.392 iterations 5
Cbc0038I Pass   8: suminf.    0.75322 (2) obj. -161.392 iterations 5
Cbc0038I Pass   9: suminf.    0.75322 (2) obj. -161.392 iterations 0
Cbc0038I Pass  10: suminf.    0.73655 (2) obj. -161.392 iterations 5
Cbc0038I Pass  11: suminf.    1.64322 (8) obj. -161.392 iterations 16
Cbc0038I Pass  12: suminf.    1.64322 (8) obj. -161.392 iterations 5
Cbc0038I Pass  13: suminf.    2.14581 (6) obj. -161.392 iterations 25
Cbc0038I Pass  14: suminf.    1.57621 (4) obj. -161.392 iterations 2
Cbc0038I Pass  15: suminf.    0.67078 (2) obj. -161.392 iterations 10
Cbc0038I Pass  16: suminf.    0.67078 (2) obj. -161.392 iterations 3
Cbc0038I Pass  17: suminf.    0.75322 (2) obj. -161.392 iterations 9
Cbc0038I Pass  18: suminf.    0.73655 (2) obj. -161.392 iterations 5
Cbc0038I Pass  19: suminf.    3.98428 (12) obj. -161.392 iterations 33
Cbc0038I Pass  20: suminf.    2.71891 (10) obj. -161.392 iterations 9
Cbc0038I Pass  21: suminf.    3.73912 (9) obj. -161.392 iterations 15
Cbc0038I Pass  22: suminf.    0.64309 (4) obj. -161.392 iterations 14
Cbc0038I Pass  23: suminf.    1.34069 (4) obj. -161.392 iterations 9
Cbc0038I Pass  24: suminf.    0.80959 (4) obj. -161.392 iterations 2
Cbc0038I Pass  25: suminf.    0.64309 (4) obj. -161.392 iterations 9
Cbc0038I Pass  26: suminf.    1.65720 (8) obj. -161.392 iterations 14
Cbc0038I Pass  27: suminf.    1.44917 (7) obj. -161.392 iterations 4
Cbc0038I Pass  28: suminf.    1.83177 (5) obj. -161.392 iterations 9
Cbc0038I Pass  29: suminf.    0.95855 (4) obj. -161.392 iterations 8
Cbc0038I Pass  30: suminf.    0.71942 (4) obj. -161.392 iterations 4
Cbc0038I Pass  31: suminf.    0.66879 (4) obj. -161.392 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 97 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -157.813 - took 0.07 seconds
Cbc0012I Integer solution of -157.81293 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 184 rows 97 columns, reduced to 53 rows 31 columns
Cbc0031I 11 added rows had average density of 64
Cbc0013I At root node, 11 cuts changed objective from -193.6075 to -175.40867 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3597 row cuts average 3.4 elements, 6 column cuts (6 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1121 row cuts average 86.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 92.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0004I Integer solution of -158.16934 found after 3484 iterations and 22 nodes (0.54 seconds)
Cbc0012I Integer solution of -158.35664 found by rounding after 3503 iterations and 24 nodes (0.54 seconds)
Cbc0001I Search completed - best objective -158.35664, took 3850 iterations and 38 nodes (0.56 seconds)
Cbc0032I Strong branching done 306 times (3507 iterations), fathomed 10 nodes and fixed 13 variables
Cbc0035I Maximum depth 10, 181 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-63) rows, 149 (-53) columns and 3018 (-2635) elements
Clp1000I sum of infeasibilities 2.00693e-07 - average 1.42336e-09, 25 fixed columns
Coin0506I Presolve 117 (-24) rows, 123 (-26) columns and 2089 (-929) elements
Clp0029I End of values pass after 123 iterations
Clp0014I Perturbing problem by 0.001% of 1.9439277 - largest nonzero change 2.0622791e-05 ( 0.0012908064%) - largest zero change 2.7572007e-05
Clp0000I Optimal - objective value 218.59549
Clp0000I Optimal - objective value 218.59549
Coin0511I After Postsolve, objective 218.59549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6034241 - largest nonzero change 1.1043487e-05 ( 0.00071827159%) - largest zero change 2.9392066e-05
Clp0000I Optimal - objective value 218.59549
Clp0000I Optimal - objective value 218.59549
Clp0000I Optimal - objective value 218.59549
Coin0511I After Postsolve, objective 218.59549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 218.5954875 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 141 rows, 149 columns (149 integer (149 of which binary)) and 3020 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.54366
Cbc0038I Pass   1: suminf.    3.07905 (37) obj. -206.319 iterations 20
Cbc0038I Pass   2: suminf.    3.07905 (37) obj. -206.319 iterations 1
Cbc0038I Pass   3: suminf.    1.18641 (23) obj. -165.609 iterations 18
Cbc0038I Pass   4: suminf.    0.29268 (9) obj. -150.624 iterations 14
Cbc0038I Solution found of -139.989
Cbc0038I Rounding solution of -149.1 is better than previous of -139.989

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 149 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -149.1 to -151.313 (0.04 seconds)
Cbc0038I Round again with cutoff of -157.144
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.07905 (37) obj. -206.319 iterations 0
Cbc0038I Pass   6: suminf.    3.07905 (37) obj. -206.319 iterations 1
Cbc0038I Pass   7: suminf.    0.80928 (18) obj. -160.053 iterations 24
Cbc0038I Pass   8: suminf.    0.56781 (2) obj. -157.144 iterations 27
Cbc0038I Pass   9: suminf.    0.47354 (2) obj. -157.144 iterations 15
Cbc0038I Pass  10: suminf.    0.45294 (2) obj. -157.144 iterations 2
Cbc0038I Pass  11: suminf.    1.59228 (17) obj. -158.882 iterations 46
Cbc0038I Pass  12: suminf.    1.59228 (17) obj. -158.882 iterations 6
Cbc0038I Pass  13: suminf.    1.26479 (7) obj. -157.144 iterations 26
Cbc0038I Pass  14: suminf.    0.72582 (7) obj. -157.144 iterations 10
Cbc0038I Pass  15: suminf.    0.62304 (3) obj. -157.144 iterations 19
Cbc0038I Pass  16: suminf.    0.62304 (3) obj. -157.144 iterations 0
Cbc0038I Pass  17: suminf.    0.62731 (2) obj. -157.144 iterations 13
Cbc0038I Pass  18: suminf.    0.62731 (2) obj. -157.144 iterations 6
Cbc0038I Pass  19: suminf.    0.33487 (2) obj. -160.875 iterations 8
Cbc0038I Pass  20: suminf.    0.20618 (2) obj. -157.144 iterations 3
Cbc0038I Pass  21: suminf.    1.73006 (14) obj. -157.144 iterations 34
Cbc0038I Pass  22: suminf.    0.97600 (10) obj. -157.144 iterations 10
Cbc0038I Pass  23: suminf.    0.58374 (4) obj. -157.144 iterations 17
Cbc0038I Pass  24: suminf.    0.42733 (3) obj. -157.144 iterations 7
Cbc0038I Pass  25: suminf.    0.51765 (3) obj. -157.144 iterations 8
Cbc0038I Pass  26: suminf.    1.31345 (9) obj. -157.144 iterations 24
Cbc0038I Pass  27: suminf.    0.95825 (8) obj. -157.144 iterations 14
Cbc0038I Pass  28: suminf.    1.15352 (5) obj. -157.144 iterations 19
Cbc0038I Pass  29: suminf.    0.88102 (4) obj. -157.144 iterations 5
Cbc0038I Pass  30: suminf.    0.71114 (4) obj. -157.144 iterations 12
Cbc0038I Pass  31: suminf.    0.65209 (3) obj. -157.144 iterations 15
Cbc0038I Pass  32: suminf.    0.65209 (3) obj. -157.144 iterations 0
Cbc0038I Pass  33: suminf.    0.72802 (3) obj. -157.144 iterations 10
Cbc0038I Pass  34: suminf.    0.35747 (3) obj. -157.144 iterations 2
Cbc0038I Rounding solution of -154.67 is better than previous of -151.313

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 149 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -154.67 to -156.268 (0.07 seconds)
Cbc0038I Round again with cutoff of -167.639
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.07905 (37) obj. -206.319 iterations 0
Cbc0038I Pass  35: suminf.    3.07905 (37) obj. -206.319 iterations 1
Cbc0038I Pass  36: suminf.    1.08152 (17) obj. -167.639 iterations 27
Cbc0038I Pass  37: suminf.    1.05374 (5) obj. -167.639 iterations 27
Cbc0038I Pass  38: suminf.    1.05374 (5) obj. -167.639 iterations 0
Cbc0038I Pass  39: suminf.    1.05487 (4) obj. -167.639 iterations 12
Cbc0038I Pass  40: suminf.    0.47098 (5) obj. -170.191 iterations 7
Cbc0038I Pass  41: suminf.    0.83674 (3) obj. -167.639 iterations 26
Cbc0038I Pass  42: suminf.    0.57923 (6) obj. -167.639 iterations 9
Cbc0038I Pass  43: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  44: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  45: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  46: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  47: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  48: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  49: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  50: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  51: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  52: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  53: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  54: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  55: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  56: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  57: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  58: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  59: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  60: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  61: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  62: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  63: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 149 columns, reduced to 41 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -156.268 - took 0.06 seconds
Cbc0012I Integer solution of -156.26763 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 141 rows 149 columns, reduced to 15 rows 14 columns
Cbc0031I 57 added rows had average density of 23.929825
Cbc0013I At root node, 57 cuts changed objective from -209.61953 to -167.61317 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 1704 row cuts average 4.9 elements, 3 column cuts (3 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 93.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 263 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -156.26763 best solution, best possible -167.61317 (0.43 seconds)
Cbc0010I After 13 nodes, 11 on tree, -156.26763 best solution, best possible -167.61317 (1.14 seconds)
Cbc0016I Integer solution of -157.16934 found by strong branching after 1124 iterations and 27 nodes (1.46 seconds)
Cbc0012I Integer solution of -157.35664 found by DiveCoefficient after 1145 iterations and 28 nodes (1.47 seconds)
Cbc0012I Integer solution of -157.81293 found by rounding after 1459 iterations and 42 nodes (1.78 seconds)
Cbc0038I Full problem 141 rows 149 columns, reduced to 2 rows 2 columns
Cbc0010I After 44 nodes, 10 on tree, -157.81293 best solution, best possible -167.61317 (1.87 seconds)
Cbc0038I Full problem 198 rows 149 columns, reduced to 120 rows 127 columns
Cbc0044I Reduced cost fixing - 120 rows, 127 columns - restarting search
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.43554
Cbc0038I Pass   1: suminf.    3.13078 (33) obj. -196.105 iterations 18
Cbc0038I Pass   2: suminf.    3.13078 (33) obj. -196.105 iterations 2
Cbc0038I Pass   3: suminf.    0.35428 (6) obj. -157.813 iterations 34
Cbc0038I Pass   4: suminf.    0.81481 (2) obj. -157.813 iterations 15
Cbc0038I Pass   5: suminf.    0.44256 (2) obj. -157.813 iterations 2
Cbc0038I Pass   6: suminf.    1.25096 (24) obj. -157.813 iterations 28
Cbc0038I Pass   7: suminf.    0.95042 (10) obj. -157.813 iterations 12
Cbc0038I Pass   8: suminf.    0.89925 (6) obj. -157.813 iterations 13
Cbc0038I Pass   9: suminf.    0.59654 (5) obj. -157.813 iterations 3
Cbc0038I Pass  10: suminf.    0.79658 (3) obj. -157.813 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 127 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (2.00 seconds)
Cbc0038I Full problem 121 rows 127 columns, reduced to 121 rows 127 columns - too large
Cbc0038I After 2.01 seconds - Feasibility pump exiting - took 0.02 seconds
Cbc0031I 52 added rows had average density of 37.326923
Cbc0013I At root node, 52 cuts changed objective from -207.88792 to -166.65358 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4708 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 512 row cuts average 112.2 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 653 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 972 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.656 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 672 row cuts average 27.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -166.65358 (4.04 seconds)
Cbc0010I After 27 nodes, 6 on tree, 1e+50 best solution, best possible -166.65358 (5.06 seconds)
Cbc0012I Integer solution of -158.16934 found by DiveCoefficient after 4839 iterations and 37 nodes (5.48 seconds)
Cbc0038I Full problem 120 rows 127 columns, reduced to 11 rows 13 columns
Cbc0012I Integer solution of -158.35664 found by DiveCoefficient after 4855 iterations and 38 nodes (5.54 seconds)
Cbc0001I Search completed - best objective -158.35664, took 4930 iterations and 42 nodes (5.59 seconds)
Cbc0032I Strong branching done 612 times (10297 iterations), fathomed 6 nodes and fixed 16 variables
Cbc0035I Maximum depth 9, 130 variables fixed on reduced cost
Cbc0038I Probing was tried 202 times and created 5471 cuts of which 0 were active after adding rounds of cuts (0.110 seconds)
Cbc0038I Gomory was tried 201 times and created 512 cuts of which 0 were active after adding rounds of cuts (0.147 seconds)
Cbc0038I Knapsack was tried 100 times and created 55 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Cbc0038I Clique was tried 201 times and created 1127 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Cbc0038I MixedIntegerRounding2 was tried 201 times and created 1148 cuts of which 0 were active after adding rounds of cuts (0.110 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 201 times and created 216 cuts of which 0 were active after adding rounds of cuts (0.072 seconds)
Cbc0038I ZeroHalf was tried 201 times and created 293 cuts of which 0 were active after adding rounds of cuts (1.233 seconds)
Cbc0038I Stored from first was tried 201 times and created 804 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -158.35664 found by Reduced search after 6583 iterations and 92 nodes (5.60 seconds)
Cbc0001I Search completed - best objective -158.35664, took 6583 iterations and 92 nodes (5.60 seconds)
Cbc0032I Strong branching done 638 times (9245 iterations), fathomed 6 nodes and fixed 5 variables
Cbc0035I Maximum depth 15, 153 variables fixed on reduced cost
Total time (CPU seconds):       3.70   (Wallclock seconds):       5.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 97 (-6) columns and 554 (-49) elements
Clp1000I sum of infeasibilities 0.000127412 - average 6.92456e-07, 34 fixed columns
Coin0506I Presolve 108 (-76) rows, 58 (-39) columns and 324 (-230) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 0.34030027 - largest nonzero change 0 ( 0%) - largest zero change 2.9336283e-05
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Coin0511I After Postsolve, objective 193.6075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Clp0000I Optimal - objective value 193.6075
Coin0511I After Postsolve, objective 193.6075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.6075017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 97 columns (96 integer (96 of which binary)) and 554 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.962%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.66683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -77.0309 iterations 50
Cbc0038I Solution found of -77.0309
Cbc0038I Relaxing continuous gives -77.0309
Cbc0038I Rounding solution of -131.402 is better than previous of -77.0309

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 97 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -131.402 to -157.813 (0.05 seconds)
Cbc0038I Round again with cutoff of -161.392
Cbc0038I Pass   2: suminf.    2.50703 (7) obj. -161.392 iterations 16
Cbc0038I Pass   3: suminf.    2.36493 (6) obj. -161.392 iterations 1
Cbc0038I Pass   4: suminf.    0.40371 (3) obj. -161.392 iterations 13
Cbc0038I Pass   5: suminf.    0.40371 (3) obj. -161.392 iterations 0
Cbc0038I Pass   6: suminf.    0.88567 (3) obj. -161.392 iterations 9
Cbc0038I Pass   7: suminf.    0.59553 (2) obj. -161.392 iterations 5
Cbc0038I Pass   8: suminf.    0.75322 (2) obj. -161.392 iterations 5
Cbc0038I Pass   9: suminf.    0.75322 (2) obj. -161.392 iterations 0
Cbc0038I Pass  10: suminf.    0.73655 (2) obj. -161.392 iterations 5
Cbc0038I Pass  11: suminf.    1.64322 (8) obj. -161.392 iterations 16
Cbc0038I Pass  12: suminf.    1.64322 (8) obj. -161.392 iterations 5
Cbc0038I Pass  13: suminf.    2.14581 (6) obj. -161.392 iterations 25
Cbc0038I Pass  14: suminf.    1.57621 (4) obj. -161.392 iterations 2
Cbc0038I Pass  15: suminf.    0.67078 (2) obj. -161.392 iterations 10
Cbc0038I Pass  16: suminf.    0.67078 (2) obj. -161.392 iterations 3
Cbc0038I Pass  17: suminf.    0.75322 (2) obj. -161.392 iterations 9
Cbc0038I Pass  18: suminf.    0.73655 (2) obj. -161.392 iterations 5
Cbc0038I Pass  19: suminf.    3.98428 (12) obj. -161.392 iterations 33
Cbc0038I Pass  20: suminf.    2.71891 (10) obj. -161.392 iterations 9
Cbc0038I Pass  21: suminf.    3.73912 (9) obj. -161.392 iterations 15
Cbc0038I Pass  22: suminf.    0.64309 (4) obj. -161.392 iterations 14
Cbc0038I Pass  23: suminf.    1.34069 (4) obj. -161.392 iterations 9
Cbc0038I Pass  24: suminf.    0.80959 (4) obj. -161.392 iterations 2
Cbc0038I Pass  25: suminf.    0.64309 (4) obj. -161.392 iterations 9
Cbc0038I Pass  26: suminf.    1.65720 (8) obj. -161.392 iterations 14
Cbc0038I Pass  27: suminf.    1.44917 (7) obj. -161.392 iterations 4
Cbc0038I Pass  28: suminf.    1.83177 (5) obj. -161.392 iterations 9
Cbc0038I Pass  29: suminf.    0.95855 (4) obj. -161.392 iterations 8
Cbc0038I Pass  30: suminf.    0.71942 (4) obj. -161.392 iterations 4
Cbc0038I Pass  31: suminf.    0.66879 (4) obj. -161.392 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 97 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -157.813 - took 0.08 seconds
Cbc0012I Integer solution of -157.81293 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 184 rows 97 columns, reduced to 53 rows 31 columns
Cbc0031I 11 added rows had average density of 64
Cbc0013I At root node, 11 cuts changed objective from -193.6075 to -175.40867 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3597 row cuts average 3.4 elements, 6 column cuts (6 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1121 row cuts average 86.8 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 92.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0004I Integer solution of -158.16934 found after 3484 iterations and 22 nodes (0.62 seconds)
Cbc0012I Integer solution of -158.35664 found by rounding after 3503 iterations and 24 nodes (0.62 seconds)
Cbc0001I Search completed - best objective -158.35664, took 3850 iterations and 38 nodes (0.66 seconds)
Cbc0032I Strong branching done 306 times (3507 iterations), fathomed 10 nodes and fixed 13 variables
Cbc0035I Maximum depth 10, 181 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-64) rows, 149 (-54) columns and 3018 (-2636) elements
Clp1000I sum of infeasibilities 2.00693e-07 - average 1.42336e-09, 25 fixed columns
Coin0506I Presolve 117 (-24) rows, 123 (-26) columns and 2089 (-929) elements
Clp0006I 0  Obj 199.92053 Dual inf 22.046017 (113)
Clp0029I End of values pass after 123 iterations
Clp0014I Perturbing problem by 0.001% of 1.9439277 - largest nonzero change 2.0622791e-05 ( 0.0012908064%) - largest zero change 2.7572007e-05
Clp0000I Optimal - objective value 218.59549
Clp0000I Optimal - objective value 218.59549
Coin0511I After Postsolve, objective 218.59549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 218.59549 Dual inf 4.0222616 (2)
Clp0014I Perturbing problem by 0.001% of 1.6034241 - largest nonzero change 1.1043487e-05 ( 0.00071827159%) - largest zero change 2.9392066e-05
Clp0000I Optimal - objective value 218.59549
Clp0000I Optimal - objective value 218.59549
Clp0000I Optimal - objective value 218.59549
Coin0511I After Postsolve, objective 218.59549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 218.5954875 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 141 rows, 149 columns (149 integer (149 of which binary)) and 3020 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.54366
Cbc0038I Pass   1: suminf.    3.07905 (37) obj. -206.319 iterations 20
Cbc0038I Pass   2: suminf.    3.07905 (37) obj. -206.319 iterations 1
Cbc0038I Pass   3: suminf.    1.18641 (23) obj. -165.609 iterations 18
Cbc0038I Pass   4: suminf.    0.29268 (9) obj. -150.624 iterations 14
Cbc0038I Solution found of -139.989
Cbc0038I Rounding solution of -149.1 is better than previous of -139.989

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 149 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -149.1 to -151.313 (0.04 seconds)
Cbc0038I Round again with cutoff of -157.144
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.07905 (37) obj. -206.319 iterations 0
Cbc0038I Pass   6: suminf.    3.07905 (37) obj. -206.319 iterations 1
Cbc0038I Pass   7: suminf.    0.80928 (18) obj. -160.053 iterations 24
Cbc0038I Pass   8: suminf.    0.56781 (2) obj. -157.144 iterations 27
Cbc0038I Pass   9: suminf.    0.47354 (2) obj. -157.144 iterations 15
Cbc0038I Pass  10: suminf.    0.45294 (2) obj. -157.144 iterations 2
Cbc0038I Pass  11: suminf.    1.59228 (17) obj. -158.882 iterations 46
Cbc0038I Pass  12: suminf.    1.59228 (17) obj. -158.882 iterations 6
Cbc0038I Pass  13: suminf.    1.26479 (7) obj. -157.144 iterations 26
Cbc0038I Pass  14: suminf.    0.72582 (7) obj. -157.144 iterations 10
Cbc0038I Pass  15: suminf.    0.62304 (3) obj. -157.144 iterations 19
Cbc0038I Pass  16: suminf.    0.62304 (3) obj. -157.144 iterations 0
Cbc0038I Pass  17: suminf.    0.62731 (2) obj. -157.144 iterations 13
Cbc0038I Pass  18: suminf.    0.62731 (2) obj. -157.144 iterations 6
Cbc0038I Pass  19: suminf.    0.33487 (2) obj. -160.875 iterations 8
Cbc0038I Pass  20: suminf.    0.20618 (2) obj. -157.144 iterations 3
Cbc0038I Pass  21: suminf.    1.73006 (14) obj. -157.144 iterations 34
Cbc0038I Pass  22: suminf.    0.97600 (10) obj. -157.144 iterations 10
Cbc0038I Pass  23: suminf.    0.58374 (4) obj. -157.144 iterations 17
Cbc0038I Pass  24: suminf.    0.42733 (3) obj. -157.144 iterations 7
Cbc0038I Pass  25: suminf.    0.51765 (3) obj. -157.144 iterations 8
Cbc0038I Pass  26: suminf.    1.31345 (9) obj. -157.144 iterations 24
Cbc0038I Pass  27: suminf.    0.95825 (8) obj. -157.144 iterations 14
Cbc0038I Pass  28: suminf.    1.15352 (5) obj. -157.144 iterations 19
Cbc0038I Pass  29: suminf.    0.88102 (4) obj. -157.144 iterations 5
Cbc0038I Pass  30: suminf.    0.71114 (4) obj. -157.144 iterations 12
Cbc0038I Pass  31: suminf.    0.65209 (3) obj. -157.144 iterations 15
Cbc0038I Pass  32: suminf.    0.65209 (3) obj. -157.144 iterations 0
Cbc0038I Pass  33: suminf.    0.72802 (3) obj. -157.144 iterations 10
Cbc0038I Pass  34: suminf.    0.35747 (3) obj. -157.144 iterations 2
Cbc0038I Rounding solution of -154.67 is better than previous of -151.313

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 149 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -154.67 to -156.268 (0.08 seconds)
Cbc0038I Round again with cutoff of -167.639
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.07905 (37) obj. -206.319 iterations 0
Cbc0038I Pass  35: suminf.    3.07905 (37) obj. -206.319 iterations 1
Cbc0038I Pass  36: suminf.    1.08152 (17) obj. -167.639 iterations 27
Cbc0038I Pass  37: suminf.    1.05374 (5) obj. -167.639 iterations 27
Cbc0038I Pass  38: suminf.    1.05374 (5) obj. -167.639 iterations 0
Cbc0038I Pass  39: suminf.    1.05487 (4) obj. -167.639 iterations 12
Cbc0038I Pass  40: suminf.    0.47098 (5) obj. -170.191 iterations 7
Cbc0038I Pass  41: suminf.    0.83674 (3) obj. -167.639 iterations 26
Cbc0038I Pass  42: suminf.    0.57923 (6) obj. -167.639 iterations 9
Cbc0038I Pass  43: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  44: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  45: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  46: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  47: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  48: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  49: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  50: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  51: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  52: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  53: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  54: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  55: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  56: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  57: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  58: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I Pass  59: suminf.    0.35877 (4) obj. -167.639 iterations 8
Cbc0038I Pass  60: suminf.    0.35877 (4) obj. -167.639 iterations 7
Cbc0038I Pass  61: suminf.    1.38532 (6) obj. -167.639 iterations 16
Cbc0038I Pass  62: suminf.    0.57923 (6) obj. -167.639 iterations 3
Cbc0038I Pass  63: suminf.    1.80632 (7) obj. -167.639 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 149 columns, reduced to 41 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -156.268 - took 0.07 seconds
Cbc0012I Integer solution of -156.26763 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 141 rows 149 columns, reduced to 15 rows 14 columns
Cbc0031I 57 added rows had average density of 23.929825
Cbc0013I At root node, 57 cuts changed objective from -209.61953 to -167.61317 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 1704 row cuts average 4.9 elements, 3 column cuts (3 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 93.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 263 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -156.26763 best solution, best possible -167.61317 (0.47 seconds)
Cbc0010I After 10 nodes, 8 on tree, -156.26763 best solution, best possible -167.61317 (1.20 seconds)
Cbc0016I Integer solution of -157.16934 found by strong branching after 1124 iterations and 27 nodes (1.65 seconds)
Cbc0012I Integer solution of -157.35664 found by DiveCoefficient after 1145 iterations and 28 nodes (1.66 seconds)
Cbc0010I After 38 nodes, 9 on tree, -157.35664 best solution, best possible -167.61317 (1.90 seconds)
Cbc0012I Integer solution of -157.81293 found by rounding after 1459 iterations and 42 nodes (2.03 seconds)
Cbc0038I Full problem 141 rows 149 columns, reduced to 2 rows 2 columns
Cbc0038I Full problem 198 rows 149 columns, reduced to 120 rows 127 columns
Cbc0044I Reduced cost fixing - 120 rows, 127 columns - restarting search
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.43554
Cbc0038I Pass   1: suminf.    3.13078 (33) obj. -196.105 iterations 18
Cbc0038I Pass   2: suminf.    3.13078 (33) obj. -196.105 iterations 2
Cbc0038I Pass   3: suminf.    0.35428 (6) obj. -157.813 iterations 34
Cbc0038I Pass   4: suminf.    0.81481 (2) obj. -157.813 iterations 15
Cbc0038I Pass   5: suminf.    0.44256 (2) obj. -157.813 iterations 2
Cbc0038I Pass   6: suminf.    1.25096 (24) obj. -157.813 iterations 28
Cbc0038I Pass   7: suminf.    0.95042 (10) obj. -157.813 iterations 12
Cbc0038I Pass   8: suminf.    0.89925 (6) obj. -157.813 iterations 13
Cbc0038I Pass   9: suminf.    0.59654 (5) obj. -157.813 iterations 3
Cbc0038I Pass  10: suminf.    0.79658 (3) obj. -157.813 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 120 rows 127 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (2.29 seconds)
Cbc0038I Full problem 121 rows 127 columns, reduced to 121 rows 127 columns - too large
Cbc0038I After 2.30 seconds - Feasibility pump exiting - took 0.02 seconds
Cbc0031I 52 added rows had average density of 37.326923
Cbc0013I At root node, 52 cuts changed objective from -207.88792 to -166.65358 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4708 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 512 row cuts average 112.2 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 653 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 972 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 672 row cuts average 27.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -166.65358 (4.67 seconds)
Cbc0010I After 19 nodes, 8 on tree, 1e+50 best solution, best possible -166.65358 (5.68 seconds)
Cbc0012I Integer solution of -158.16934 found by DiveCoefficient after 4839 iterations and 37 nodes (6.40 seconds)
Cbc0038I Full problem 120 rows 127 columns, reduced to 11 rows 13 columns
Cbc0012I Integer solution of -158.35664 found by DiveCoefficient after 4855 iterations and 38 nodes (6.47 seconds)
Cbc0001I Search completed - best objective -158.35664, took 4930 iterations and 42 nodes (6.53 seconds)
Cbc0032I Strong branching done 612 times (10297 iterations), fathomed 6 nodes and fixed 16 variables
Cbc0035I Maximum depth 9, 130 variables fixed on reduced cost
Cbc0038I Probing was tried 202 times and created 5471 cuts of which 0 were active after adding rounds of cuts (0.127 seconds)
Cbc0038I Gomory was tried 201 times and created 512 cuts of which 0 were active after adding rounds of cuts (0.171 seconds)
Cbc0038I Knapsack was tried 100 times and created 55 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Cbc0038I Clique was tried 201 times and created 1127 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
Cbc0038I MixedIntegerRounding2 was tried 201 times and created 1148 cuts of which 0 were active after adding rounds of cuts (0.125 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I TwoMirCuts was tried 201 times and created 216 cuts of which 0 were active after adding rounds of cuts (0.082 seconds)
Cbc0038I ZeroHalf was tried 201 times and created 293 cuts of which 0 were active after adding rounds of cuts (1.397 seconds)
Cbc0038I Stored from first was tried 201 times and created 804 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -158.35664 found by Reduced search after 6583 iterations and 92 nodes (6.54 seconds)
Cbc0001I Search completed - best objective -158.35664, took 6583 iterations and 92 nodes (6.54 seconds)
Cbc0032I Strong branching done 638 times (9245 iterations), fathomed 6 nodes and fixed 5 variables
Cbc0035I Maximum depth 15, 153 variables fixed on reduced cost
Total time (CPU seconds):       4.20   (Wallclock seconds):       6.55

