Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 359 (-168) rows, 188 (-76) columns and 1078 (-467) elements
Clp1000I sum of infeasibilities 8.46778e-06 - average 2.35871e-08, 173 fixed columns
Coin0506I Presolve 14 (-345) rows, 15 (-173) columns and 52 (-1026) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Coin0511I After Postsolve, objective 221702.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14888942 - largest nonzero change 0 ( 0%) - largest zero change 2.999606e-05
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Coin0511I After Postsolve, objective 221702.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221702.4997 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 359 rows, 188 columns (187 integer (187 of which binary)) and 1078 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.504%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 1.66428
Cbc0038I Pass   1: suminf.    0.43158 (1) obj. -214994 iterations 45
Cbc0038I Solution found of -194729
Cbc0038I Relaxing continuous gives -194729
Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -197427
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.43158 (1) obj. -214994 iterations 0
Cbc0038I Pass   3: suminf.    0.07566 (1) obj. -197427 iterations 6
Cbc0038I Pass   4: suminf.    2.55026 (11) obj. -197427 iterations 40
Cbc0038I Pass   5: suminf.    0.21853 (2) obj. -197427 iterations 38
Cbc0038I Pass   6: suminf.    0.48810 (1) obj. -201158 iterations 12
Cbc0038I Pass   7: suminf.    0.48810 (1) obj. -201158 iterations 0
Cbc0038I Pass   8: suminf.    0.88575 (6) obj. -197427 iterations 26
Cbc0038I Pass   9: suminf.    0.73696 (4) obj. -197427 iterations 15
Cbc0038I Pass  10: suminf.    0.45560 (1) obj. -197427 iterations 23
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -212726 iterations 12
Cbc0038I Solution found of -212726
Cbc0038I Relaxing continuous gives -212726
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -214521
Cbc0038I Reduced cost fixing fixed 92 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.43158 (1) obj. -214994 iterations 0
Cbc0038I Pass  13: suminf.    0.44484 (1) obj. -214521 iterations 6
Cbc0038I Pass  14: suminf.    1.32080 (9) obj. -214521 iterations 26
Cbc0038I Pass  15: suminf.    0.49038 (1) obj. -214521 iterations 38
Cbc0038I Pass  16: suminf.    0.49806 (5) obj. -214521 iterations 21
Cbc0038I Pass  17: suminf.    0.25066 (3) obj. -214521 iterations 15
Cbc0038I Pass  18: suminf.    0.34477 (3) obj. -214521 iterations 19
Cbc0038I Pass  19: suminf.    0.97050 (4) obj. -214521 iterations 36
Cbc0038I Pass  20: suminf.    0.96538 (4) obj. -214521 iterations 20
Cbc0038I Pass  21: suminf.    0.96504 (3) obj. -218391 iterations 14
Cbc0038I Pass  22: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  23: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  24: suminf.    1.10470 (4) obj. -214521 iterations 20
Cbc0038I Pass  25: suminf.    1.10470 (4) obj. -214521 iterations 15
Cbc0038I Pass  26: suminf.    1.13911 (3) obj. -214521 iterations 13
Cbc0038I Pass  27: suminf.    0.96504 (3) obj. -218391 iterations 6
Cbc0038I Pass  28: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  29: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  30: suminf.    1.10470 (4) obj. -214521 iterations 23
Cbc0038I Pass  31: suminf.    1.10470 (4) obj. -214521 iterations 13
Cbc0038I Pass  32: suminf.    1.13911 (3) obj. -214521 iterations 13
Cbc0038I Pass  33: suminf.    0.96504 (3) obj. -218391 iterations 6
Cbc0038I Pass  34: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  35: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  36: suminf.    0.56646 (3) obj. -214521 iterations 25
Cbc0038I Pass  37: suminf.    0.43740 (2) obj. -215460 iterations 20
Cbc0038I Pass  38: suminf.    0.48117 (2) obj. -214521 iterations 9
Cbc0038I Pass  39: suminf.    1.36190 (4) obj. -214521 iterations 22
Cbc0038I Pass  40: suminf.    0.96504 (3) obj. -218391 iterations 15
Cbc0038I Pass  41: suminf.    0.88548 (2) obj. -214521 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 25 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -212726 - took 0.03 seconds
Cbc0012I Integer solution of -212725.93 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 359 rows 188 columns, reduced to 5 rows 5 columns
Cbc0031I 7 added rows had average density of 58.571429
Cbc0013I At root node, 7 cuts changed objective from -221702.5 to -216462.8 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 35.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 181.8 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0001I Search completed - best objective -212725.93, took 304 iterations and 8 nodes (0.57 seconds)
Cbc0032I Strong branching done 74 times (461 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-218) rows, 323 (-201) columns and 12429 (-23307) elements
Clp1000I sum of infeasibilities 9.41339e-06 - average 3.0563e-08, 268 fixed columns
Coin0506I Presolve 45 (-263) rows, 55 (-268) columns and 195 (-12234) elements
Clp0006I 0  Obj 210697.94 Dual inf 358972.96 (40)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.17851948 - largest nonzero change 0 ( 0%) - largest zero change 2.8668667e-05
Clp0000I Optimal - objective value 221609.5
Clp0000I Optimal - objective value 221609.5
Coin0511I After Postsolve, objective 221609.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 221609.5 Dual inf 126557.43 (148)
Clp0014I Perturbing problem by 0.001% of 2.2730794 - largest nonzero change 2.6041865e-05 ( 0.0026041865%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 221841
Clp0000I Optimal - objective value 221841
Clp0000I Optimal - objective value 221841
Coin0511I After Postsolve, objective 221841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221841.0045 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0004I processed model has 308 rows, 323 columns (323 integer (323 of which binary)) and 12429 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.781%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 126 integers unsatisfied sum - 4.58972
Cbc0038I Pass   1: suminf.    2.71708 (84) obj. -215137 iterations 65
Cbc0038I Pass   2: suminf.    1.41692 (65) obj. -199352 iterations 14
Cbc0038I Pass   3: suminf.    0.72561 (43) obj. -199314 iterations 22
Cbc0038I Pass   4: suminf.    0.27548 (22) obj. -199287 iterations 21
Cbc0038I Pass   5: suminf.    0.03238 (3) obj. -199256 iterations 19
Cbc0038I Solution found of -199253
Cbc0038I Rounding solution of -201926 is better than previous of -199253

Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 323 columns, reduced to 49 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -203917
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.71708 (84) obj. -215137 iterations 0
Cbc0038I Pass   7: suminf.    1.14587 (51) obj. -203917 iterations 42
Cbc0038I Pass   8: suminf.    0.73251 (30) obj. -212188 iterations 33
Cbc0038I Pass   9: suminf.    1.10592 (10) obj. -203917 iterations 36
Cbc0038I Pass  10: suminf.    0.56762 (9) obj. -215006 iterations 7
Cbc0038I Pass  11: suminf.    0.25771 (1) obj. -203917 iterations 11
Cbc0038I Pass  12: suminf.    0.43158 (1) obj. -214994 iterations 3
Cbc0038I Pass  13: suminf.    0.90182 (17) obj. -203917 iterations 34
Cbc0038I Pass  14: suminf.    0.42668 (15) obj. -203917 iterations 22
Cbc0038I Pass  15: suminf.    0.77439 (2) obj. -207152 iterations 20
Cbc0038I Pass  16: suminf.    0.06463 (1) obj. -203917 iterations 8
Cbc0038I Pass  17: suminf.    0.06463 (1) obj. -203917 iterations 0
Cbc0038I Pass  18: suminf.    1.61040 (23) obj. -203917 iterations 65
Cbc0038I Pass  19: suminf.    0.46709 (18) obj. -203917 iterations 26
Cbc0038I Pass  20: suminf.    0.77439 (2) obj. -207128 iterations 23
Cbc0038I Pass  21: suminf.    0.06540 (1) obj. -203917 iterations 8
Cbc0038I Pass  22: suminf.    0.06540 (1) obj. -203917 iterations 0
Cbc0038I Pass  23: suminf.    0.85469 (19) obj. -203917 iterations 55
Cbc0038I Pass  24: suminf.    0.40625 (18) obj. -203917 iterations 33
Cbc0038I Pass  25: suminf.    0.78337 (3) obj. -207129 iterations 22
Cbc0038I Pass  26: suminf.    0.06540 (1) obj. -203917 iterations 9
Cbc0038I Pass  27: suminf.    0.06540 (1) obj. -203917 iterations 0
Cbc0038I Pass  28: suminf.    0.77439 (2) obj. -207128 iterations 6
Cbc0038I Pass  29: suminf.    0.82940 (37) obj. -203917 iterations 64
Cbc0038I Pass  30: suminf.    0.75446 (16) obj. -203917 iterations 22
Cbc0038I Pass  31: suminf.    0.53564 (2) obj. -215768 iterations 39
Cbc0038I Pass  32: suminf.    0.06511 (1) obj. -203917 iterations 7
Cbc0038I Pass  33: suminf.    0.06511 (1) obj. -203917 iterations 0
Cbc0038I Pass  34: suminf.    1.13056 (17) obj. -203917 iterations 43
Cbc0038I Pass  35: suminf.    0.50199 (15) obj. -207168 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 323 columns, reduced to 132 rows 140 columns - 20 fixed gives 111, 119 - still too large
Cbc0038I Full problem 308 rows 323 columns, reduced to 81 rows 88 columns
Cbc0038I Mini branch and bound improved solution from -199253 to -208088 (0.19 seconds)
Cbc0038I Round again with cutoff of -210839
Cbc0038I Reduced cost fixing fixed 69 variables on major pass 3
Cbc0038I Pass  35: suminf.    2.71708 (84) obj. -215137 iterations 0
Cbc0038I Pass  36: suminf.    1.84442 (62) obj. -210839 iterations 30
Cbc0038I Pass  37: suminf.    0.95519 (41) obj. -212200 iterations 34
Cbc0038I Pass  38: suminf.    0.62972 (21) obj. -210839 iterations 35
Cbc0038I Pass  39: suminf.    0.62972 (21) obj. -210839 iterations 1
Cbc0038I Pass  40: suminf.    0.56762 (9) obj. -215006 iterations 21
Cbc0038I Pass  41: suminf.    0.45186 (1) obj. -210839 iterations 11
Cbc0038I Pass  42: suminf.    0.43158 (1) obj. -214994 iterations 3
Cbc0038I Pass  43: suminf.    1.69384 (21) obj. -210839 iterations 49
Cbc0038I Pass  44: suminf.    0.79246 (20) obj. -210839 iterations 13
Cbc0038I Pass  45: suminf.    0.78741 (5) obj. -210839 iterations 24
Cbc0038I Pass  46: suminf.    0.58674 (5) obj. -215781 iterations 4
Cbc0038I Pass  47: suminf.    0.28712 (1) obj. -210839 iterations 11
Cbc0038I Pass  48: suminf.    0.28712 (1) obj. -210839 iterations 0
Cbc0038I Pass  49: suminf.    0.53564 (2) obj. -215777 iterations 8
Cbc0038I Pass  50: suminf.    1.35192 (12) obj. -210839 iterations 34
Cbc0038I Pass  51: suminf.    0.89064 (10) obj. -210839 iterations 13
Cbc0038I Pass  52: suminf.    0.71486 (2) obj. -210839 iterations 16
Cbc0038I Pass  53: suminf.    0.63303 (2) obj. -212550 iterations 9
Cbc0038I Pass  54: suminf.    0.71486 (2) obj. -210839 iterations 9
Cbc0038I Pass  55: suminf.    4.48634 (34) obj. -210839 iterations 55
Cbc0038I Pass  56: suminf.    0.73225 (16) obj. -210839 iterations 18
Cbc0038I Pass  57: suminf.    0.73225 (16) obj. -210839 iterations 1
Cbc0038I Pass  58: suminf.    0.46952 (3) obj. -214966 iterations 20
Cbc0038I Pass  59: suminf.    0.45279 (1) obj. -210839 iterations 4
Cbc0038I Pass  60: suminf.    0.43158 (1) obj. -214961 iterations 2
Cbc0038I Pass  61: suminf.    1.19863 (16) obj. -210839 iterations 71
Cbc0038I Pass  62: suminf.    0.69350 (14) obj. -210839 iterations 11
Cbc0038I Pass  63: suminf.    0.53564 (2) obj. -215760 iterations 19
Cbc0038I Pass  64: suminf.    0.28767 (1) obj. -210839 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 323 columns, reduced to 89 rows 93 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -208088 - took 0.16 seconds
Cbc0012I Integer solution of -208088.33 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 308 rows 323 columns, reduced to 49 rows 51 columns
Cbc0031I 32 added rows had average density of 11.34375
Cbc0013I At root node, 32 cuts changed objective from -221839.35 to -217700.55 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 730 row cuts average 13.5 elements, 65 column cuts (65 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 62.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 93.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -208088.33 best solution, best possible -217700.55 (0.50 seconds)
Cbc0012I Integer solution of -212725.93 found by rounding after 642 iterations and 12 nodes (0.83 seconds)
Cbc0001I Search completed - best objective -212725.93, took 1030 iterations and 20 nodes (1.12 seconds)
Cbc0032I Strong branching done 170 times (1707 iterations), fathomed 5 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 152 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       1.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 359 (-168) rows, 188 (-76) columns and 1078 (-467) elements
Clp1000I sum of infeasibilities 8.46778e-06 - average 2.35871e-08, 173 fixed columns
Coin0506I Presolve 14 (-345) rows, 15 (-173) columns and 52 (-1026) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Coin0511I After Postsolve, objective 221702.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14888942 - largest nonzero change 0 ( 0%) - largest zero change 2.999606e-05
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Clp0000I Optimal - objective value 221702.5
Coin0511I After Postsolve, objective 221702.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221702.4997 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 359 rows, 188 columns (187 integer (187 of which binary)) and 1078 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.504%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 1.66428
Cbc0038I Pass   1: suminf.    0.43158 (1) obj. -214994 iterations 45
Cbc0038I Solution found of -194729
Cbc0038I Relaxing continuous gives -194729
Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -197427
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.43158 (1) obj. -214994 iterations 0
Cbc0038I Pass   3: suminf.    0.07566 (1) obj. -197427 iterations 6
Cbc0038I Pass   4: suminf.    2.55026 (11) obj. -197427 iterations 40
Cbc0038I Pass   5: suminf.    0.21853 (2) obj. -197427 iterations 38
Cbc0038I Pass   6: suminf.    0.48810 (1) obj. -201158 iterations 12
Cbc0038I Pass   7: suminf.    0.48810 (1) obj. -201158 iterations 0
Cbc0038I Pass   8: suminf.    0.88575 (6) obj. -197427 iterations 26
Cbc0038I Pass   9: suminf.    0.73696 (4) obj. -197427 iterations 15
Cbc0038I Pass  10: suminf.    0.45560 (1) obj. -197427 iterations 23
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -212726 iterations 12
Cbc0038I Solution found of -212726
Cbc0038I Relaxing continuous gives -212726
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -214521
Cbc0038I Reduced cost fixing fixed 92 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.43158 (1) obj. -214994 iterations 0
Cbc0038I Pass  13: suminf.    0.44484 (1) obj. -214521 iterations 6
Cbc0038I Pass  14: suminf.    1.32080 (9) obj. -214521 iterations 26
Cbc0038I Pass  15: suminf.    0.49038 (1) obj. -214521 iterations 38
Cbc0038I Pass  16: suminf.    0.49806 (5) obj. -214521 iterations 21
Cbc0038I Pass  17: suminf.    0.25066 (3) obj. -214521 iterations 15
Cbc0038I Pass  18: suminf.    0.34477 (3) obj. -214521 iterations 19
Cbc0038I Pass  19: suminf.    0.97050 (4) obj. -214521 iterations 36
Cbc0038I Pass  20: suminf.    0.96538 (4) obj. -214521 iterations 20
Cbc0038I Pass  21: suminf.    0.96504 (3) obj. -218391 iterations 14
Cbc0038I Pass  22: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  23: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  24: suminf.    1.10470 (4) obj. -214521 iterations 20
Cbc0038I Pass  25: suminf.    1.10470 (4) obj. -214521 iterations 15
Cbc0038I Pass  26: suminf.    1.13911 (3) obj. -214521 iterations 13
Cbc0038I Pass  27: suminf.    0.96504 (3) obj. -218391 iterations 6
Cbc0038I Pass  28: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  29: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  30: suminf.    1.10470 (4) obj. -214521 iterations 23
Cbc0038I Pass  31: suminf.    1.10470 (4) obj. -214521 iterations 13
Cbc0038I Pass  32: suminf.    1.13911 (3) obj. -214521 iterations 13
Cbc0038I Pass  33: suminf.    0.96504 (3) obj. -218391 iterations 6
Cbc0038I Pass  34: suminf.    0.88548 (2) obj. -214521 iterations 13
Cbc0038I Pass  35: suminf.    0.88548 (2) obj. -214521 iterations 0
Cbc0038I Pass  36: suminf.    0.56646 (3) obj. -214521 iterations 25
Cbc0038I Pass  37: suminf.    0.43740 (2) obj. -215460 iterations 20
Cbc0038I Pass  38: suminf.    0.48117 (2) obj. -214521 iterations 9
Cbc0038I Pass  39: suminf.    1.36190 (4) obj. -214521 iterations 22
Cbc0038I Pass  40: suminf.    0.96504 (3) obj. -218391 iterations 15
Cbc0038I Pass  41: suminf.    0.88548 (2) obj. -214521 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 359 rows 188 columns, reduced to 25 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -212726 - took 0.03 seconds
Cbc0012I Integer solution of -212725.93 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 359 rows 188 columns, reduced to 5 rows 5 columns
Cbc0031I 7 added rows had average density of 58.571429
Cbc0013I At root node, 7 cuts changed objective from -221702.5 to -216462.8 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 35.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 181.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0001I Search completed - best objective -212725.93, took 304 iterations and 8 nodes (0.50 seconds)
Cbc0032I Strong branching done 74 times (461 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-219) rows, 323 (-202) columns and 12429 (-23308) elements
Clp1000I sum of infeasibilities 9.41339e-06 - average 3.0563e-08, 268 fixed columns
Coin0506I Presolve 45 (-263) rows, 55 (-268) columns and 195 (-12234) elements
Clp0006I 0  Obj 210697.94 Dual inf 358972.96 (40)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.17851948 - largest nonzero change 0 ( 0%) - largest zero change 2.8668667e-05
Clp0000I Optimal - objective value 221609.5
Clp0000I Optimal - objective value 221609.5
Coin0511I After Postsolve, objective 221609.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 221609.5 Dual inf 126557.43 (148)
Clp0014I Perturbing problem by 0.001% of 2.2730794 - largest nonzero change 2.6041865e-05 ( 0.0026041865%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 221841
Clp0000I Optimal - objective value 221841
Clp0000I Optimal - objective value 221841
Coin0511I After Postsolve, objective 221841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221841.0045 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 308 rows, 323 columns (323 integer (323 of which binary)) and 12429 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.781%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 126 integers unsatisfied sum - 4.58972
Cbc0038I Pass   1: suminf.    2.71708 (84) obj. -215137 iterations 65
Cbc0038I Pass   2: suminf.    1.41692 (65) obj. -199352 iterations 14
Cbc0038I Pass   3: suminf.    0.72561 (43) obj. -199314 iterations 22
Cbc0038I Pass   4: suminf.    0.27548 (22) obj. -199287 iterations 21
Cbc0038I Pass   5: suminf.    0.03238 (3) obj. -199256 iterations 19
Cbc0038I Solution found of -199253
Cbc0038I Rounding solution of -201926 is better than previous of -199253

Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 323 columns, reduced to 49 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -203917
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.71708 (84) obj. -215137 iterations 0
Cbc0038I Pass   7: suminf.    1.14587 (51) obj. -203917 iterations 42
Cbc0038I Pass   8: suminf.    0.73251 (30) obj. -212188 iterations 33
Cbc0038I Pass   9: suminf.    1.10592 (10) obj. -203917 iterations 36
Cbc0038I Pass  10: suminf.    0.56762 (9) obj. -215006 iterations 7
Cbc0038I Pass  11: suminf.    0.25771 (1) obj. -203917 iterations 11
Cbc0038I Pass  12: suminf.    0.43158 (1) obj. -214994 iterations 3
Cbc0038I Pass  13: suminf.    0.90182 (17) obj. -203917 iterations 34
Cbc0038I Pass  14: suminf.    0.42668 (15) obj. -203917 iterations 22
Cbc0038I Pass  15: suminf.    0.77439 (2) obj. -207152 iterations 20
Cbc0038I Pass  16: suminf.    0.06463 (1) obj. -203917 iterations 8
Cbc0038I Pass  17: suminf.    0.06463 (1) obj. -203917 iterations 0
Cbc0038I Pass  18: suminf.    1.61040 (23) obj. -203917 iterations 65
Cbc0038I Pass  19: suminf.    0.46709 (18) obj. -203917 iterations 26
Cbc0038I Pass  20: suminf.    0.77439 (2) obj. -207128 iterations 23
Cbc0038I Pass  21: suminf.    0.06540 (1) obj. -203917 iterations 8
Cbc0038I Pass  22: suminf.    0.06540 (1) obj. -203917 iterations 0
Cbc0038I Pass  23: suminf.    0.85469 (19) obj. -203917 iterations 55
Cbc0038I Pass  24: suminf.    0.40625 (18) obj. -203917 iterations 33
Cbc0038I Pass  25: suminf.    0.78337 (3) obj. -207129 iterations 22
Cbc0038I Pass  26: suminf.    0.06540 (1) obj. -203917 iterations 9
Cbc0038I Pass  27: suminf.    0.06540 (1) obj. -203917 iterations 0
Cbc0038I Pass  28: suminf.    0.77439 (2) obj. -207128 iterations 6
Cbc0038I Pass  29: suminf.    0.82940 (37) obj. -203917 iterations 64
Cbc0038I Pass  30: suminf.    0.75446 (16) obj. -203917 iterations 22
Cbc0038I Pass  31: suminf.    0.53564 (2) obj. -215768 iterations 39
Cbc0038I Pass  32: suminf.    0.06511 (1) obj. -203917 iterations 7
Cbc0038I Pass  33: suminf.    0.06511 (1) obj. -203917 iterations 0
Cbc0038I Pass  34: suminf.    1.13056 (17) obj. -203917 iterations 43
Cbc0038I Pass  35: suminf.    0.50199 (15) obj. -207168 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 323 columns, reduced to 132 rows 140 columns - 20 fixed gives 111, 119 - still too large
Cbc0038I Full problem 308 rows 323 columns, reduced to 81 rows 88 columns
Cbc0038I Mini branch and bound improved solution from -199253 to -208088 (0.19 seconds)
Cbc0038I Round again with cutoff of -210839
Cbc0038I Reduced cost fixing fixed 69 variables on major pass 3
Cbc0038I Pass  35: suminf.    2.71708 (84) obj. -215137 iterations 0
Cbc0038I Pass  36: suminf.    1.84442 (62) obj. -210839 iterations 30
Cbc0038I Pass  37: suminf.    0.95519 (41) obj. -212200 iterations 34
Cbc0038I Pass  38: suminf.    0.62972 (21) obj. -210839 iterations 35
Cbc0038I Pass  39: suminf.    0.62972 (21) obj. -210839 iterations 1
Cbc0038I Pass  40: suminf.    0.56762 (9) obj. -215006 iterations 21
Cbc0038I Pass  41: suminf.    0.45186 (1) obj. -210839 iterations 11
Cbc0038I Pass  42: suminf.    0.43158 (1) obj. -214994 iterations 3
Cbc0038I Pass  43: suminf.    1.69384 (21) obj. -210839 iterations 49
Cbc0038I Pass  44: suminf.    0.79246 (20) obj. -210839 iterations 13
Cbc0038I Pass  45: suminf.    0.78741 (5) obj. -210839 iterations 24
Cbc0038I Pass  46: suminf.    0.58674 (5) obj. -215781 iterations 4
Cbc0038I Pass  47: suminf.    0.28712 (1) obj. -210839 iterations 11
Cbc0038I Pass  48: suminf.    0.28712 (1) obj. -210839 iterations 0
Cbc0038I Pass  49: suminf.    0.53564 (2) obj. -215777 iterations 8
Cbc0038I Pass  50: suminf.    1.35192 (12) obj. -210839 iterations 34
Cbc0038I Pass  51: suminf.    0.89064 (10) obj. -210839 iterations 13
Cbc0038I Pass  52: suminf.    0.71486 (2) obj. -210839 iterations 16
Cbc0038I Pass  53: suminf.    0.63303 (2) obj. -212550 iterations 9
Cbc0038I Pass  54: suminf.    0.71486 (2) obj. -210839 iterations 9
Cbc0038I Pass  55: suminf.    4.48634 (34) obj. -210839 iterations 55
Cbc0038I Pass  56: suminf.    0.73225 (16) obj. -210839 iterations 18
Cbc0038I Pass  57: suminf.    0.73225 (16) obj. -210839 iterations 1
Cbc0038I Pass  58: suminf.    0.46952 (3) obj. -214966 iterations 20
Cbc0038I Pass  59: suminf.    0.45279 (1) obj. -210839 iterations 4
Cbc0038I Pass  60: suminf.    0.43158 (1) obj. -214961 iterations 2
Cbc0038I Pass  61: suminf.    1.19863 (16) obj. -210839 iterations 71
Cbc0038I Pass  62: suminf.    0.69350 (14) obj. -210839 iterations 11
Cbc0038I Pass  63: suminf.    0.53564 (2) obj. -215760 iterations 19
Cbc0038I Pass  64: suminf.    0.28767 (1) obj. -210839 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 323 columns, reduced to 89 rows 93 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -208088 - took 0.17 seconds
Cbc0012I Integer solution of -208088.33 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 308 rows 323 columns, reduced to 49 rows 51 columns
Cbc0031I 32 added rows had average density of 11.34375
Cbc0013I At root node, 32 cuts changed objective from -221839.35 to -217700.55 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 730 row cuts average 13.5 elements, 65 column cuts (65 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 62.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 93.6 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -208088.33 best solution, best possible -217700.55 (0.52 seconds)
Cbc0012I Integer solution of -212725.93 found by rounding after 642 iterations and 12 nodes (0.85 seconds)
Cbc0001I Search completed - best objective -212725.93, took 1030 iterations and 20 nodes (1.12 seconds)
Cbc0032I Strong branching done 170 times (1707 iterations), fathomed 5 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 152 variables fixed on reduced cost
Total time (CPU seconds):       0.80   (Wallclock seconds):       1.14

