Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-7) rows, 32 (-2) columns and 147 (-12) elements
Clp1000I sum of infeasibilities 0.0308289 - average 0.000522524, 5 fixed columns
Coin0506I Presolve 48 (-11) rows, 27 (-5) columns and 120 (-27) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 1.0924405 - largest nonzero change 0 ( 0%) - largest zero change 1.8272045e-05
Clp0000I Optimal - objective value 4606.2677
Clp0000I Optimal - objective value 4606.2677
Coin0511I After Postsolve, objective 4606.2677, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.47467452 - largest nonzero change 1.94155e-05 ( 0.00194155%) - largest zero change 2.8387512e-05
Clp0000I Optimal - objective value 4606.2677
Clp0000I Optimal - objective value 4606.2677
Clp0000I Optimal - objective value 4606.2677
Coin0511I After Postsolve, objective 4606.2677, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4606.267728 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 59 rows, 32 columns (31 integer (31 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.788%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 9.09481
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1341.88 iterations 25
Cbc0038I Solution found of -1341.88
Cbc0038I Relaxing continuous gives -1341.88
Cbc0038I Rounding solution of -1362.22 is better than previous of -1341.88

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1686.63
Cbc0038I Pass   2: suminf.    0.27436 (4) obj. -1686.63 iterations 4
Cbc0038I Pass   3: suminf.    0.59506 (2) obj. -1686.63 iterations 6
Cbc0038I Pass   4: suminf.    0.70904 (2) obj. -1686.63 iterations 4
Cbc0038I Pass   5: suminf.    0.32414 (2) obj. -1686.63 iterations 4
Cbc0038I Pass   6: suminf.    0.81109 (2) obj. -1686.63 iterations 3
Cbc0038I Pass   7: suminf.    0.45006 (2) obj. -1686.63 iterations 1
Cbc0038I Pass   8: suminf.    0.93735 (6) obj. -1686.63 iterations 10
Cbc0038I Pass   9: suminf.    0.76425 (5) obj. -1686.63 iterations 6
Cbc0038I Pass  10: suminf.    1.08733 (3) obj. -1686.63 iterations 6
Cbc0038I Pass  11: suminf.    1.08733 (3) obj. -1686.63 iterations 1
Cbc0038I Pass  12: suminf.    0.31590 (2) obj. -1686.63 iterations 3
Cbc0038I Pass  13: suminf.    0.31590 (2) obj. -1686.63 iterations 0
Cbc0038I Pass  14: suminf.    0.59157 (2) obj. -1686.63 iterations 2
Cbc0038I Pass  15: suminf.    0.38518 (2) obj. -1686.63 iterations 2
Cbc0038I Pass  16: suminf.    0.31590 (2) obj. -1686.63 iterations 1
Cbc0038I Pass  17: suminf.    0.59157 (2) obj. -1686.63 iterations 2
Cbc0038I Pass  18: suminf.    3.60889 (14) obj. -1686.63 iterations 18
Cbc0038I Pass  19: suminf.    2.64551 (11) obj. -1686.63 iterations 10
Cbc0038I Pass  20: suminf.    2.14082 (10) obj. -1686.63 iterations 8
Cbc0038I Pass  21: suminf.    0.58829 (3) obj. -1686.63 iterations 14
Cbc0038I Pass  22: suminf.    0.53170 (3) obj. -1686.63 iterations 1
Cbc0038I Pass  23: suminf.    0.85029 (3) obj. -1686.63 iterations 5
Cbc0038I Pass  24: suminf.    1.01802 (3) obj. -1686.63 iterations 3
Cbc0038I Pass  25: suminf.    0.98198 (4) obj. -1686.63 iterations 2
Cbc0038I Pass  26: suminf.    0.69830 (2) obj. -1686.63 iterations 4
Cbc0038I Pass  27: suminf.    0.67707 (3) obj. -1686.63 iterations 4
Cbc0038I Pass  28: suminf.    0.92265 (3) obj. -1686.63 iterations 5
Cbc0038I Pass  29: suminf.    0.92265 (3) obj. -1686.63 iterations 1
Cbc0038I Pass  30: suminf.    0.67707 (3) obj. -1686.63 iterations 3
Cbc0038I Pass  31: suminf.    2.94796 (7) obj. -1686.63 iterations 9
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 59 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2270.56
Cbc0038I Pass  31: suminf.    1.11753 (4) obj. -2270.56 iterations 0
Cbc0038I Pass  32: suminf.    1.07111 (3) obj. -2270.56 iterations 6
Cbc0038I Pass  33: suminf.    1.07111 (3) obj. -2270.56 iterations 1
Cbc0038I Pass  34: suminf.    0.88305 (2) obj. -2270.56 iterations 5
Cbc0038I Pass  35: suminf.    0.76026 (3) obj. -2270.56 iterations 2
Cbc0038I Pass  36: suminf.    2.35734 (7) obj. -2270.56 iterations 8
Cbc0038I Pass  37: suminf.    1.33290 (5) obj. -2270.56 iterations 4
Cbc0038I Pass  38: suminf.    0.50252 (2) obj. -2270.56 iterations 5
Cbc0038I Pass  39: suminf.    0.71011 (2) obj. -2270.56 iterations 2
Cbc0038I Pass  40: suminf.    0.71011 (2) obj. -2270.56 iterations 2
Cbc0038I Pass  41: suminf.    0.99895 (3) obj. -2270.56 iterations 3
Cbc0038I Pass  42: suminf.    0.71364 (2) obj. -2270.56 iterations 3
Cbc0038I Pass  43: suminf.    2.77066 (11) obj. -2270.56 iterations 10
Cbc0038I Pass  44: suminf.    2.56909 (11) obj. -2270.56 iterations 5
Cbc0038I Pass  45: suminf.    1.87842 (6) obj. -2270.56 iterations 16
Cbc0038I Pass  46: suminf.    1.65168 (6) obj. -2270.56 iterations 4
Cbc0038I Pass  47: suminf.    0.77831 (4) obj. -2270.56 iterations 8
Cbc0038I Pass  48: suminf.    0.77831 (4) obj. -2270.56 iterations 0
Cbc0038I Pass  49: suminf.    0.99895 (3) obj. -2270.56 iterations 5
Cbc0038I Pass  50: suminf.    0.71364 (2) obj. -2270.56 iterations 3
Cbc0038I Pass  51: suminf.    0.71011 (2) obj. -2270.56 iterations 1
Cbc0038I Pass  52: suminf.    3.17551 (11) obj. -2270.56 iterations 9
Cbc0038I Pass  53: suminf.    1.32329 (7) obj. -2270.56 iterations 10
Cbc0038I Pass  54: suminf.    1.32329 (7) obj. -2270.56 iterations 0
Cbc0038I Pass  55: suminf.    1.59989 (5) obj. -2270.56 iterations 12
Cbc0038I Pass  56: suminf.    0.90761 (4) obj. -2270.56 iterations 2
Cbc0038I Pass  57: suminf.    0.47128 (3) obj. -2270.56 iterations 3
Cbc0038I Pass  58: suminf.    1.28163 (5) obj. -2270.56 iterations 5
Cbc0038I Pass  59: suminf.    1.88081 (6) obj. -2270.56 iterations 4
Cbc0038I Pass  60: suminf.    1.45012 (4) obj. -2270.56 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 52 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1362.22 - took 0.09 seconds
Cbc0012I Integer solution of -1362.2244 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 16 added rows had average density of 22.5
Cbc0013I At root node, 16 cuts changed objective from -4606.2677 to -2722.8797 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2883 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1362.2244, took 3442 iterations and 12 nodes (0.31 seconds)
Cbc0032I Strong branching done 184 times (3381 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 49 (-15) columns and 364 (-291) elements
Clp1000I sum of infeasibilities 2.81336e-09 - average 6.116e-11, 30 fixed columns
Coin0506I Presolve 15 (-31) rows, 16 (-33) columns and 45 (-319) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 5179.1169
Clp0000I Optimal - objective value 5179.1169
Coin0511I After Postsolve, objective 5179.1169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.3637578 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 5886.1914
Clp0000I Optimal - objective value 5886.1914
Clp0000I Optimal - objective value 5886.1914
Coin0511I After Postsolve, objective 5886.1914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5886.191407 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 50 columns (50 integer (50 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.733%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.73218
Cbc0038I Pass   1: suminf.    1.91172 (7) obj. -4274.14 iterations 14
Cbc0038I Pass   2: suminf.    1.91172 (7) obj. -4274.14 iterations 2
Cbc0038I Solution found of -1271.76
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1703.22
Cbc0038I Pass   3: suminf.    1.91172 (7) obj. -4274.14 iterations 0
Cbc0038I Pass   4: suminf.    1.91172 (7) obj. -4274.14 iterations 1
Cbc0038I Pass   5: suminf.    0.35221 (1) obj. -1703.22 iterations 8
Cbc0038I Pass   6: suminf.    0.33333 (1) obj. -2088.43 iterations 2
Cbc0038I Pass   7: suminf.    1.10091 (3) obj. -1703.22 iterations 18
Cbc0038I Pass   8: suminf.    1.10091 (3) obj. -1703.22 iterations 1
Cbc0038I Pass   9: suminf.    1.10124 (3) obj. -1703.22 iterations 2
Cbc0038I Pass  10: suminf.    0.98942 (3) obj. -1806.66 iterations 1
Cbc0038I Pass  11: suminf.    1.13759 (3) obj. -1703.22 iterations 4
Cbc0038I Pass  12: suminf.    0.67764 (2) obj. -1703.22 iterations 18
Cbc0038I Pass  13: suminf.    0.48214 (2) obj. -1884.05 iterations 8
Cbc0038I Pass  14: suminf.    0.67764 (2) obj. -1703.22 iterations 1
Cbc0038I Pass  15: suminf.    1.25442 (7) obj. -1703.22 iterations 8
Cbc0038I Pass  16: suminf.    0.99153 (6) obj. -1902.27 iterations 2
Cbc0038I Pass  17: suminf.    1.16920 (6) obj. -1703.22 iterations 5
Cbc0038I Pass  18: suminf.    1.12857 (5) obj. -1829.89 iterations 1
Cbc0038I Pass  19: suminf.    0.66551 (2) obj. -1703.22 iterations 4
Cbc0038I Pass  20: suminf.    0.61905 (2) obj. -1746.2 iterations 1
Cbc0038I Pass  21: suminf.    1.64763 (7) obj. -1703.22 iterations 14
Cbc0038I Pass  22: suminf.    1.64763 (7) obj. -1703.22 iterations 2
Cbc0038I Pass  23: suminf.    1.44323 (4) obj. -1703.22 iterations 9
Cbc0038I Pass  24: suminf.    1.44323 (4) obj. -1703.22 iterations 0
Cbc0038I Pass  25: suminf.    1.02813 (4) obj. -1703.22 iterations 5
Cbc0038I Pass  26: suminf.    1.02813 (4) obj. -1703.22 iterations 1
Cbc0038I Pass  27: suminf.    1.44323 (4) obj. -1703.22 iterations 4
Cbc0038I Pass  28: suminf.    1.68904 (7) obj. -1703.22 iterations 25
Cbc0038I Pass  29: suminf.    1.65134 (7) obj. -1725.84 iterations 9
Cbc0038I Pass  30: suminf.    2.41299 (8) obj. -1703.22 iterations 5
Cbc0038I Pass  31: suminf.    2.21250 (9) obj. -1703.22 iterations 2
Cbc0038I Pass  32: suminf.    0.87495 (3) obj. -1703.22 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1271.76 to -1334.73 (0.01 seconds)
Cbc0038I Round again with cutoff of -2479.83
Cbc0038I Pass  32: suminf.    1.91172 (7) obj. -4274.14 iterations 0
Cbc0038I Pass  33: suminf.    1.91172 (7) obj. -4274.14 iterations 1
Cbc0038I Pass  34: suminf.    0.75647 (2) obj. -2479.83 iterations 8
Cbc0038I Pass  35: suminf.    0.75647 (2) obj. -2479.83 iterations 0
Cbc0038I Pass  36: suminf.    0.64896 (2) obj. -2479.83 iterations 1
Cbc0038I Pass  37: suminf.    1.96787 (8) obj. -2479.83 iterations 16
Cbc0038I Pass  38: suminf.    1.83926 (7) obj. -2479.83 iterations 3
Cbc0038I Pass  39: suminf.    1.75888 (9) obj. -2479.83 iterations 11
Cbc0038I Pass  40: suminf.    1.59473 (9) obj. -2479.83 iterations 2
Cbc0038I Pass  41: suminf.    1.53749 (5) obj. -2479.83 iterations 11
Cbc0038I Pass  42: suminf.    1.20911 (4) obj. -2479.83 iterations 3
Cbc0038I Pass  43: suminf.    1.31572 (3) obj. -2479.83 iterations 6
Cbc0038I Pass  44: suminf.    1.15278 (3) obj. -2630.55 iterations 1
Cbc0038I Pass  45: suminf.    1.04858 (3) obj. -2479.83 iterations 2
Cbc0038I Pass  46: suminf.    1.04858 (3) obj. -2479.83 iterations 0
Cbc0038I Pass  47: suminf.    1.43352 (5) obj. -2479.83 iterations 4
Cbc0038I Pass  48: suminf.    1.43352 (5) obj. -2479.83 iterations 1
Cbc0038I Pass  49: suminf.    1.31825 (4) obj. -2479.83 iterations 3
Cbc0038I Pass  50: suminf.    1.31825 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  51: suminf.    1.04382 (4) obj. -2479.83 iterations 2
Cbc0038I Pass  52: suminf.    1.04382 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  53: suminf.    1.50448 (7) obj. -2479.83 iterations 18
Cbc0038I Pass  54: suminf.    1.32549 (6) obj. -2479.83 iterations 8
Cbc0038I Pass  55: suminf.    1.31825 (4) obj. -2479.83 iterations 7
Cbc0038I Pass  56: suminf.    1.31825 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  57: suminf.    1.04382 (4) obj. -2479.83 iterations 2
Cbc0038I Pass  58: suminf.    1.04382 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  59: suminf.    1.31825 (4) obj. -2479.83 iterations 1
Cbc0038I Pass  60: suminf.    2.01832 (6) obj. -2479.83 iterations 13
Cbc0038I Pass  61: suminf.    1.80780 (5) obj. -2479.83 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1334.73 - took 0.01 seconds
Cbc0012I Integer solution of -1334.7266 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 50 columns, reduced to 10 rows 12 columns
Cbc0031I 25 added rows had average density of 18.6
Cbc0013I At root node, 25 cuts changed objective from -5586.3037 to -1725.6836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3112 row cuts average 3.8 elements, 2 column cuts (2 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 626 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 193 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1334.7266 best solution, best possible -1725.6836 (1.59 seconds)
Cbc0016I Integer solution of -1362.2244 found by strong branching after 2269 iterations and 3 nodes (1.66 seconds)
Cbc0001I Search completed - best objective -1362.2244, took 2440 iterations and 8 nodes (1.68 seconds)
Cbc0032I Strong branching done 196 times (3139 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.68

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-7) rows, 32 (-2) columns and 147 (-12) elements
Clp1000I sum of infeasibilities 0.0308289 - average 0.000522524, 5 fixed columns
Coin0506I Presolve 48 (-11) rows, 27 (-5) columns and 120 (-27) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 1.0924405 - largest nonzero change 0 ( 0%) - largest zero change 1.8272045e-05
Clp0000I Optimal - objective value 4606.2677
Clp0000I Optimal - objective value 4606.2677
Coin0511I After Postsolve, objective 4606.2677, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.47467452 - largest nonzero change 1.94155e-05 ( 0.00194155%) - largest zero change 2.8387512e-05
Clp0000I Optimal - objective value 4606.2677
Clp0000I Optimal - objective value 4606.2677
Clp0000I Optimal - objective value 4606.2677
Coin0511I After Postsolve, objective 4606.2677, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4606.267728 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 59 rows, 32 columns (31 integer (31 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.788%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 9.09481
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1341.88 iterations 25
Cbc0038I Solution found of -1341.88
Cbc0038I Relaxing continuous gives -1341.88
Cbc0038I Rounding solution of -1362.22 is better than previous of -1341.88

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1686.63
Cbc0038I Pass   2: suminf.    0.27436 (4) obj. -1686.63 iterations 4
Cbc0038I Pass   3: suminf.    0.59506 (2) obj. -1686.63 iterations 6
Cbc0038I Pass   4: suminf.    0.70904 (2) obj. -1686.63 iterations 4
Cbc0038I Pass   5: suminf.    0.32414 (2) obj. -1686.63 iterations 4
Cbc0038I Pass   6: suminf.    0.81109 (2) obj. -1686.63 iterations 3
Cbc0038I Pass   7: suminf.    0.45006 (2) obj. -1686.63 iterations 1
Cbc0038I Pass   8: suminf.    0.93735 (6) obj. -1686.63 iterations 10
Cbc0038I Pass   9: suminf.    0.76425 (5) obj. -1686.63 iterations 6
Cbc0038I Pass  10: suminf.    1.08733 (3) obj. -1686.63 iterations 6
Cbc0038I Pass  11: suminf.    1.08733 (3) obj. -1686.63 iterations 1
Cbc0038I Pass  12: suminf.    0.31590 (2) obj. -1686.63 iterations 3
Cbc0038I Pass  13: suminf.    0.31590 (2) obj. -1686.63 iterations 0
Cbc0038I Pass  14: suminf.    0.59157 (2) obj. -1686.63 iterations 2
Cbc0038I Pass  15: suminf.    0.38518 (2) obj. -1686.63 iterations 2
Cbc0038I Pass  16: suminf.    0.31590 (2) obj. -1686.63 iterations 1
Cbc0038I Pass  17: suminf.    0.59157 (2) obj. -1686.63 iterations 2
Cbc0038I Pass  18: suminf.    3.60889 (14) obj. -1686.63 iterations 18
Cbc0038I Pass  19: suminf.    2.64551 (11) obj. -1686.63 iterations 10
Cbc0038I Pass  20: suminf.    2.14082 (10) obj. -1686.63 iterations 8
Cbc0038I Pass  21: suminf.    0.58829 (3) obj. -1686.63 iterations 14
Cbc0038I Pass  22: suminf.    0.53170 (3) obj. -1686.63 iterations 1
Cbc0038I Pass  23: suminf.    0.85029 (3) obj. -1686.63 iterations 5
Cbc0038I Pass  24: suminf.    1.01802 (3) obj. -1686.63 iterations 3
Cbc0038I Pass  25: suminf.    0.98198 (4) obj. -1686.63 iterations 2
Cbc0038I Pass  26: suminf.    0.69830 (2) obj. -1686.63 iterations 4
Cbc0038I Pass  27: suminf.    0.67707 (3) obj. -1686.63 iterations 4
Cbc0038I Pass  28: suminf.    0.92265 (3) obj. -1686.63 iterations 5
Cbc0038I Pass  29: suminf.    0.92265 (3) obj. -1686.63 iterations 1
Cbc0038I Pass  30: suminf.    0.67707 (3) obj. -1686.63 iterations 3
Cbc0038I Pass  31: suminf.    2.94796 (7) obj. -1686.63 iterations 9
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 59 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2270.56
Cbc0038I Pass  31: suminf.    1.11753 (4) obj. -2270.56 iterations 0
Cbc0038I Pass  32: suminf.    1.07111 (3) obj. -2270.56 iterations 6
Cbc0038I Pass  33: suminf.    1.07111 (3) obj. -2270.56 iterations 1
Cbc0038I Pass  34: suminf.    0.88305 (2) obj. -2270.56 iterations 5
Cbc0038I Pass  35: suminf.    0.76026 (3) obj. -2270.56 iterations 2
Cbc0038I Pass  36: suminf.    2.35734 (7) obj. -2270.56 iterations 8
Cbc0038I Pass  37: suminf.    1.33290 (5) obj. -2270.56 iterations 4
Cbc0038I Pass  38: suminf.    0.50252 (2) obj. -2270.56 iterations 5
Cbc0038I Pass  39: suminf.    0.71011 (2) obj. -2270.56 iterations 2
Cbc0038I Pass  40: suminf.    0.71011 (2) obj. -2270.56 iterations 2
Cbc0038I Pass  41: suminf.    0.99895 (3) obj. -2270.56 iterations 3
Cbc0038I Pass  42: suminf.    0.71364 (2) obj. -2270.56 iterations 3
Cbc0038I Pass  43: suminf.    2.77066 (11) obj. -2270.56 iterations 10
Cbc0038I Pass  44: suminf.    2.56909 (11) obj. -2270.56 iterations 5
Cbc0038I Pass  45: suminf.    1.87842 (6) obj. -2270.56 iterations 16
Cbc0038I Pass  46: suminf.    1.65168 (6) obj. -2270.56 iterations 4
Cbc0038I Pass  47: suminf.    0.77831 (4) obj. -2270.56 iterations 8
Cbc0038I Pass  48: suminf.    0.77831 (4) obj. -2270.56 iterations 0
Cbc0038I Pass  49: suminf.    0.99895 (3) obj. -2270.56 iterations 5
Cbc0038I Pass  50: suminf.    0.71364 (2) obj. -2270.56 iterations 3
Cbc0038I Pass  51: suminf.    0.71011 (2) obj. -2270.56 iterations 1
Cbc0038I Pass  52: suminf.    3.17551 (11) obj. -2270.56 iterations 9
Cbc0038I Pass  53: suminf.    1.32329 (7) obj. -2270.56 iterations 10
Cbc0038I Pass  54: suminf.    1.32329 (7) obj. -2270.56 iterations 0
Cbc0038I Pass  55: suminf.    1.59989 (5) obj. -2270.56 iterations 12
Cbc0038I Pass  56: suminf.    0.90761 (4) obj. -2270.56 iterations 2
Cbc0038I Pass  57: suminf.    0.47128 (3) obj. -2270.56 iterations 3
Cbc0038I Pass  58: suminf.    1.28163 (5) obj. -2270.56 iterations 5
Cbc0038I Pass  59: suminf.    1.88081 (6) obj. -2270.56 iterations 4
Cbc0038I Pass  60: suminf.    1.45012 (4) obj. -2270.56 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 32 columns, reduced to 52 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1362.22 - took 0.08 seconds
Cbc0012I Integer solution of -1362.2244 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 16 added rows had average density of 22.5
Cbc0013I At root node, 16 cuts changed objective from -4606.2677 to -2722.8797 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2883 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 24.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1362.2244, took 3442 iterations and 12 nodes (0.30 seconds)
Cbc0032I Strong branching done 184 times (3381 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-20) rows, 49 (-16) columns and 364 (-292) elements
Clp1000I sum of infeasibilities 2.81336e-09 - average 6.116e-11, 30 fixed columns
Coin0506I Presolve 15 (-31) rows, 16 (-33) columns and 45 (-319) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 5179.1169
Clp0000I Optimal - objective value 5179.1169
Coin0511I After Postsolve, objective 5179.1169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.3637578 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 5886.1914
Clp0000I Optimal - objective value 5886.1914
Clp0000I Optimal - objective value 5886.1914
Coin0511I After Postsolve, objective 5886.1914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5886.191407 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 50 columns (50 integer (50 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.733%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.73218
Cbc0038I Pass   1: suminf.    1.91172 (7) obj. -4274.14 iterations 14
Cbc0038I Pass   2: suminf.    1.91172 (7) obj. -4274.14 iterations 2
Cbc0038I Solution found of -1271.76
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1703.22
Cbc0038I Pass   3: suminf.    1.91172 (7) obj. -4274.14 iterations 0
Cbc0038I Pass   4: suminf.    1.91172 (7) obj. -4274.14 iterations 1
Cbc0038I Pass   5: suminf.    0.35221 (1) obj. -1703.22 iterations 8
Cbc0038I Pass   6: suminf.    0.33333 (1) obj. -2088.43 iterations 2
Cbc0038I Pass   7: suminf.    1.10091 (3) obj. -1703.22 iterations 18
Cbc0038I Pass   8: suminf.    1.10091 (3) obj. -1703.22 iterations 1
Cbc0038I Pass   9: suminf.    1.10124 (3) obj. -1703.22 iterations 2
Cbc0038I Pass  10: suminf.    0.98942 (3) obj. -1806.66 iterations 1
Cbc0038I Pass  11: suminf.    1.13759 (3) obj. -1703.22 iterations 4
Cbc0038I Pass  12: suminf.    0.67764 (2) obj. -1703.22 iterations 18
Cbc0038I Pass  13: suminf.    0.48214 (2) obj. -1884.05 iterations 8
Cbc0038I Pass  14: suminf.    0.67764 (2) obj. -1703.22 iterations 1
Cbc0038I Pass  15: suminf.    1.25442 (7) obj. -1703.22 iterations 8
Cbc0038I Pass  16: suminf.    0.99153 (6) obj. -1902.27 iterations 2
Cbc0038I Pass  17: suminf.    1.16920 (6) obj. -1703.22 iterations 5
Cbc0038I Pass  18: suminf.    1.12857 (5) obj. -1829.89 iterations 1
Cbc0038I Pass  19: suminf.    0.66551 (2) obj. -1703.22 iterations 4
Cbc0038I Pass  20: suminf.    0.61905 (2) obj. -1746.2 iterations 1
Cbc0038I Pass  21: suminf.    1.64763 (7) obj. -1703.22 iterations 14
Cbc0038I Pass  22: suminf.    1.64763 (7) obj. -1703.22 iterations 2
Cbc0038I Pass  23: suminf.    1.44323 (4) obj. -1703.22 iterations 9
Cbc0038I Pass  24: suminf.    1.44323 (4) obj. -1703.22 iterations 0
Cbc0038I Pass  25: suminf.    1.02813 (4) obj. -1703.22 iterations 5
Cbc0038I Pass  26: suminf.    1.02813 (4) obj. -1703.22 iterations 1
Cbc0038I Pass  27: suminf.    1.44323 (4) obj. -1703.22 iterations 4
Cbc0038I Pass  28: suminf.    1.68904 (7) obj. -1703.22 iterations 25
Cbc0038I Pass  29: suminf.    1.65134 (7) obj. -1725.84 iterations 9
Cbc0038I Pass  30: suminf.    2.41299 (8) obj. -1703.22 iterations 5
Cbc0038I Pass  31: suminf.    2.21250 (9) obj. -1703.22 iterations 2
Cbc0038I Pass  32: suminf.    0.87495 (3) obj. -1703.22 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1271.76 to -1334.73 (0.02 seconds)
Cbc0038I Round again with cutoff of -2479.83
Cbc0038I Pass  32: suminf.    1.91172 (7) obj. -4274.14 iterations 0
Cbc0038I Pass  33: suminf.    1.91172 (7) obj. -4274.14 iterations 1
Cbc0038I Pass  34: suminf.    0.75647 (2) obj. -2479.83 iterations 8
Cbc0038I Pass  35: suminf.    0.75647 (2) obj. -2479.83 iterations 0
Cbc0038I Pass  36: suminf.    0.64896 (2) obj. -2479.83 iterations 1
Cbc0038I Pass  37: suminf.    1.96787 (8) obj. -2479.83 iterations 16
Cbc0038I Pass  38: suminf.    1.83926 (7) obj. -2479.83 iterations 3
Cbc0038I Pass  39: suminf.    1.75888 (9) obj. -2479.83 iterations 11
Cbc0038I Pass  40: suminf.    1.59473 (9) obj. -2479.83 iterations 2
Cbc0038I Pass  41: suminf.    1.53749 (5) obj. -2479.83 iterations 11
Cbc0038I Pass  42: suminf.    1.20911 (4) obj. -2479.83 iterations 3
Cbc0038I Pass  43: suminf.    1.31572 (3) obj. -2479.83 iterations 6
Cbc0038I Pass  44: suminf.    1.15278 (3) obj. -2630.55 iterations 1
Cbc0038I Pass  45: suminf.    1.04858 (3) obj. -2479.83 iterations 2
Cbc0038I Pass  46: suminf.    1.04858 (3) obj. -2479.83 iterations 0
Cbc0038I Pass  47: suminf.    1.43352 (5) obj. -2479.83 iterations 4
Cbc0038I Pass  48: suminf.    1.43352 (5) obj. -2479.83 iterations 1
Cbc0038I Pass  49: suminf.    1.31825 (4) obj. -2479.83 iterations 3
Cbc0038I Pass  50: suminf.    1.31825 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  51: suminf.    1.04382 (4) obj. -2479.83 iterations 2
Cbc0038I Pass  52: suminf.    1.04382 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  53: suminf.    1.50448 (7) obj. -2479.83 iterations 18
Cbc0038I Pass  54: suminf.    1.32549 (6) obj. -2479.83 iterations 8
Cbc0038I Pass  55: suminf.    1.31825 (4) obj. -2479.83 iterations 7
Cbc0038I Pass  56: suminf.    1.31825 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  57: suminf.    1.04382 (4) obj. -2479.83 iterations 2
Cbc0038I Pass  58: suminf.    1.04382 (4) obj. -2479.83 iterations 0
Cbc0038I Pass  59: suminf.    1.31825 (4) obj. -2479.83 iterations 1
Cbc0038I Pass  60: suminf.    2.01832 (6) obj. -2479.83 iterations 13
Cbc0038I Pass  61: suminf.    1.80780 (5) obj. -2479.83 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1334.73 - took 0.02 seconds
Cbc0012I Integer solution of -1334.7266 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 50 columns, reduced to 10 rows 12 columns
Cbc0031I 25 added rows had average density of 18.6
Cbc0013I At root node, 25 cuts changed objective from -5586.3037 to -1725.6836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3112 row cuts average 3.8 elements, 2 column cuts (2 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 626 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 193 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.716 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1334.7266 best solution, best possible -1725.6836 (1.59 seconds)
Cbc0016I Integer solution of -1362.2244 found by strong branching after 2269 iterations and 3 nodes (1.65 seconds)
Cbc0001I Search completed - best objective -1362.2244, took 2440 iterations and 8 nodes (1.66 seconds)
Cbc0032I Strong branching done 196 times (3139 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.67

