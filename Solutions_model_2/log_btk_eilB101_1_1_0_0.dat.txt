Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 148 (-57) rows, 80 (-23) columns and 448 (-155) elements
Clp1000I sum of infeasibilities 1.98444e-06 - average 1.34084e-08, 75 fixed columns
Coin0506I Presolve 5 (-143) rows, 4 (-76) columns and 11 (-437) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 4740.1392
Clp0000I Optimal - objective value 4740.1392
Coin0511I After Postsolve, objective 4740.1392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8745421 - largest nonzero change 2.577086e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4740.1392
Clp0000I Optimal - objective value 4740.1392
Clp0000I Optimal - objective value 4740.1392
Coin0511I After Postsolve, objective 4740.1392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4740.139205 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 148 rows, 80 columns (79 integer (79 of which binary)) and 450 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.21875
Cbc0038I Pass   1: suminf.    0.17073 (1) obj. -4595.36 iterations 3
Cbc0038I Solution found of -2539.35
Cbc0038I Relaxing continuous gives -2558.52
Cbc0038I Rounding solution of -2567.6 is better than previous of -2558.52

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 80 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2784.86
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17073 (1) obj. -4595.36 iterations 0
Cbc0038I Pass   3: suminf.    0.09129 (1) obj. -2784.86 iterations 2
Cbc0038I Pass   4: suminf.    1.40605 (5) obj. -2784.86 iterations 15
Cbc0038I Pass   5: suminf.    0.08691 (1) obj. -2784.86 iterations 26
Cbc0038I Pass   6: suminf.    0.36585 (1) obj. -4130.26 iterations 2
Cbc0038I Pass   7: suminf.    1.60877 (6) obj. -2784.86 iterations 22
Cbc0038I Pass   8: suminf.    0.21153 (2) obj. -2784.86 iterations 17
Cbc0038I Pass   9: suminf.    0.34919 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  10: suminf.    0.34919 (2) obj. -2784.86 iterations 0
Cbc0038I Pass  11: suminf.    0.65625 (2) obj. -3346.1 iterations 8
Cbc0038I Pass  12: suminf.    1.62535 (6) obj. -2784.86 iterations 17
Cbc0038I Pass  13: suminf.    0.26954 (3) obj. -2784.86 iterations 5
Cbc0038I Pass  14: suminf.    0.58374 (2) obj. -2784.86 iterations 3
Cbc0038I Pass  15: suminf.    0.58374 (2) obj. -2784.86 iterations 0
Cbc0038I Pass  16: suminf.    0.50000 (2) obj. -3143.83 iterations 7
Cbc0038I Pass  17: suminf.    0.21555 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  18: suminf.    0.81957 (4) obj. -2784.86 iterations 8
Cbc0038I Pass  19: suminf.    0.22031 (2) obj. -2784.86 iterations 12
Cbc0038I Pass  20: suminf.    0.52689 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  21: suminf.    0.80126 (4) obj. -2784.86 iterations 13
Cbc0038I Pass  22: suminf.    0.80126 (4) obj. -2784.86 iterations 4
Cbc0038I Pass  23: suminf.    0.46610 (2) obj. -2784.86 iterations 2
Cbc0038I Pass  24: suminf.    0.46610 (2) obj. -2784.86 iterations 0
Cbc0038I Pass  25: suminf.    0.59375 (2) obj. -3245.28 iterations 3
Cbc0038I Pass  26: suminf.    0.22891 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  27: suminf.    2.27527 (7) obj. -2784.86 iterations 11
Cbc0038I Pass  28: suminf.    0.57234 (3) obj. -2784.86 iterations 10
Cbc0038I Pass  29: suminf.    0.22081 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  30: suminf.    0.35024 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  31: suminf.    0.55298 (3) obj. -2784.86 iterations 7
Cbc0038I Rounding solution of -2593.28 is better than previous of -2567.6

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 80 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -2593.28 to -2605.77 (0.02 seconds)
Cbc0038I Round again with cutoff of -3175.91
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.17073 (1) obj. -4595.36 iterations 0
Cbc0038I Pass  32: suminf.    0.24902 (1) obj. -3175.91 iterations 2
Cbc0038I Pass  33: suminf.    0.80918 (3) obj. -3175.91 iterations 13
Cbc0038I Pass  34: suminf.    0.50176 (2) obj. -3175.91 iterations 12
Cbc0038I Pass  35: suminf.    0.72818 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  36: suminf.    0.72818 (2) obj. -3175.91 iterations 0
Cbc0038I Pass  37: suminf.    0.68750 (2) obj. -3410.32 iterations 2
Cbc0038I Pass  38: suminf.    1.01182 (4) obj. -3175.91 iterations 24
Cbc0038I Pass  39: suminf.    0.51554 (3) obj. -3175.91 iterations 7
Cbc0038I Pass  40: suminf.    0.24390 (1) obj. -3185.58 iterations 11
Cbc0038I Pass  41: suminf.    0.24000 (1) obj. -3175.91 iterations 1
Cbc0038I Pass  42: suminf.    0.73630 (3) obj. -3175.91 iterations 8
Cbc0038I Pass  43: suminf.    0.73630 (3) obj. -3175.91 iterations 3
Cbc0038I Pass  44: suminf.    0.87500 (2) obj. -3640.44 iterations 4
Cbc0038I Pass  45: suminf.    0.50691 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  46: suminf.    0.46134 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  47: suminf.    0.46134 (2) obj. -3175.91 iterations 0
Cbc0038I Pass  48: suminf.    1.34853 (6) obj. -3175.91 iterations 15
Cbc0038I Pass  49: suminf.    0.50212 (2) obj. -3175.91 iterations 18
Cbc0038I Pass  50: suminf.    0.60360 (2) obj. -3304.65 iterations 3
Cbc0038I Pass  51: suminf.    0.49948 (3) obj. -3175.91 iterations 1
Cbc0038I Pass  52: suminf.    0.84375 (2) obj. -3969.98 iterations 6
Cbc0038I Pass  53: suminf.    0.34146 (1) obj. -3402.07 iterations 1
Cbc0038I Pass  54: suminf.    0.25024 (1) obj. -3175.91 iterations 1
Cbc0038I Pass  55: suminf.    1.04479 (4) obj. -3175.91 iterations 8
Cbc0038I Pass  56: suminf.    0.58618 (3) obj. -3175.91 iterations 6
Cbc0038I Pass  57: suminf.    0.76085 (3) obj. -3175.91 iterations 10
Cbc0038I Pass  58: suminf.    0.52702 (2) obj. -3175.91 iterations 16
Cbc0038I Pass  59: suminf.    0.70944 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  60: suminf.    0.97482 (3) obj. -3246.41 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 80 columns, reduced to 25 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2605.77 - took 0.02 seconds
Cbc0012I Integer solution of -2605.7707 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 148 rows 80 columns, reduced to 8 rows 7 columns
Cbc0031I 9 added rows had average density of 28.333333
Cbc0013I At root node, 9 cuts changed objective from -4740.1392 to -2634.9158 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 118 row cuts average 2.7 elements, 18 column cuts (18 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 60.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 46.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2605.7707, took 640 iterations and 16 nodes (0.21 seconds)
Cbc0032I Strong branching done 134 times (1149 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 7, 115 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-91) rows, 123 (-79) columns and 2153 (-3500) elements
Clp1000I sum of infeasibilities 3.21238e-06 - average 2.84281e-08, 121 fixed columns
Coin0506I Presolve 2 (-111) rows, 2 (-121) columns and 4 (-2149) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 4716.7642
Clp0000I Optimal - objective value 4716.7642
Coin0511I After Postsolve, objective 4716.7642, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9386728 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 4774.8265
Clp0000I Optimal - objective value 4774.8265
Clp0000I Optimal - objective value 4774.8265
Coin0511I After Postsolve, objective 4774.8265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4774.826517 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 127 columns (127 integer (127 of which binary)) and 2171 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 2.3449
Cbc0038I Pass   1: suminf.    0.15916 (5) obj. -2564.32 iterations 15
Cbc0038I Pass   2: suminf.    0.15916 (5) obj. -2564.32 iterations 1
Cbc0038I Solution found of -2558.52
Cbc0038I Rounding solution of -2593.28 is better than previous of -2558.52

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2810.47
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.47870 (27) obj. -2810.47 iterations 12
Cbc0038I Pass   4: suminf.    0.47870 (27) obj. -2810.47 iterations 0
Cbc0038I Pass   5: suminf.    0.46401 (6) obj. -4595.12 iterations 24
Cbc0038I Pass   6: suminf.    0.11211 (1) obj. -2810.47 iterations 6
Cbc0038I Pass   7: suminf.    0.17073 (1) obj. -4588.53 iterations 1
Cbc0038I Pass   8: suminf.    1.47778 (16) obj. -2810.47 iterations 27
Cbc0038I Pass   9: suminf.    1.12287 (14) obj. -2810.47 iterations 19
Cbc0038I Pass  10: suminf.    0.21951 (1) obj. -4450.59 iterations 15
Cbc0038I Pass  11: suminf.    0.11896 (1) obj. -2810.47 iterations 1
Cbc0038I Pass  12: suminf.    1.06374 (9) obj. -2810.47 iterations 25
Cbc0038I Pass  13: suminf.    0.58948 (8) obj. -2810.47 iterations 11
Cbc0038I Pass  14: suminf.    0.59841 (2) obj. -2810.47 iterations 7
Cbc0038I Pass  15: suminf.    0.26091 (2) obj. -2810.47 iterations 1
Cbc0038I Pass  16: suminf.    0.97512 (7) obj. -2810.47 iterations 20
Cbc0038I Pass  17: suminf.    0.97512 (7) obj. -2810.47 iterations 4
Cbc0038I Pass  18: suminf.    0.25169 (2) obj. -2810.47 iterations 5
Cbc0038I Pass  19: suminf.    0.25169 (2) obj. -2810.47 iterations 0
Cbc0038I Pass  20: suminf.    0.78125 (2) obj. -3455.79 iterations 2
Cbc0038I Pass  21: suminf.    0.26990 (2) obj. -2810.47 iterations 1
Cbc0038I Pass  22: suminf.    1.26300 (9) obj. -2810.47 iterations 22
Cbc0038I Pass  23: suminf.    1.26300 (9) obj. -2810.47 iterations 3
Cbc0038I Pass  24: suminf.    0.12195 (1) obj. -2824.75 iterations 12
Cbc0038I Pass  25: suminf.    0.11619 (1) obj. -2810.47 iterations 1
Cbc0038I Pass  26: suminf.    1.19143 (11) obj. -2810.47 iterations 22
Cbc0038I Pass  27: suminf.    0.80352 (10) obj. -2810.47 iterations 3
Cbc0038I Pass  28: suminf.    0.55516 (2) obj. -2810.47 iterations 9
Cbc0038I Pass  29: suminf.    0.25880 (2) obj. -2810.47 iterations 1
Cbc0038I Pass  30: suminf.    1.31713 (13) obj. -2810.47 iterations 17
Cbc0038I Pass  31: suminf.    1.26669 (11) obj. -2810.47 iterations 4
Cbc0038I Pass  32: suminf.    0.14634 (1) obj. -2889.38 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 45 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -2593.28 - took 0.03 seconds
Cbc0012I Integer solution of -2593.2795 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 117 rows 127 columns, reduced to 23 rows 25 columns
Cbc0031I 46 added rows had average density of 49.23913
Cbc0013I At root node, 46 cuts changed objective from -4759.7479 to -2629.5095 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 984 row cuts average 7.4 elements, 10 column cuts (10 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 64.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 287 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2593.2795 best solution, best possible -2629.5095 (0.45 seconds)
Cbc0012I Integer solution of -2596.7304 found by DiveCoefficient after 264 iterations and 1 nodes (0.46 seconds)
Cbc0012I Integer solution of -2598.7304 found by DiveCoefficient after 336 iterations and 2 nodes (0.55 seconds)
Cbc0012I Integer solution of -2600.7707 found by DiveCoefficient after 471 iterations and 8 nodes (0.84 seconds)
Cbc0016I Integer solution of -2602.7707 found by strong branching after 568 iterations and 10 nodes (0.91 seconds)
Cbc0010I After 21 nodes, 9 on tree, -2602.7707 best solution, best possible -2629.5095 (1.16 seconds)
Cbc0016I Integer solution of -2604.336 found by strong branching after 1466 iterations and 39 nodes (1.50 seconds)
Cbc0038I Full problem 117 rows 127 columns, reduced to 21 rows 23 columns
Cbc0038I Full problem 163 rows 127 columns, reduced to 85 rows 97 columns
Cbc0044I Reduced cost fixing - 85 rows, 97 columns - restarting search
Cbc0012I Integer solution of -2604.336 found by Previous solution after 0 iterations and 0 nodes (1.64 seconds)
Cbc0038I Full problem 85 rows 97 columns, reduced to 9 rows 10 columns
Cbc0012I Integer solution of -2605.336 found by RINS after 0 iterations and 0 nodes (1.64 seconds)
Cbc0031I 41 added rows had average density of 31.04878
Cbc0013I At root node, 41 cuts changed objective from -2664.8641 to -2625.7443 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 652 row cuts average 7.8 elements, 10 column cuts (10 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 81 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 253 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 61 row cuts average 40.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -2605.336 best solution, best possible -2625.7443 (2.04 seconds)
Cbc0038I Full problem 85 rows 97 columns, reduced to 40 rows 43 columns
Cbc0012I Integer solution of -2605.7707 found by RINS after 1685 iterations and 44 nodes (2.63 seconds)
Cbc0001I Search completed - best objective -2605.7707, took 1759 iterations and 48 nodes (2.64 seconds)
Cbc0032I Strong branching done 666 times (10126 iterations), fathomed 4 nodes and fixed 29 variables
Cbc0035I Maximum depth 15, 97 variables fixed on reduced cost
Cbc0038I Probing was tried 59 times and created 1025 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Cbc0038I Gomory was tried 53 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I Knapsack was tried 39 times and created 228 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Cbc0038I Clique was tried 22 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I MixedIntegerRounding2 was tried 53 times and created 554 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I FlowCover was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 53 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I ZeroHalf was tried 53 times and created 42 cuts of which 0 were active after adding rounds of cuts (0.246 seconds)
Cbc0038I Stored from first was tried 53 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -2605.7707 found by Reduced search after 3478 iterations and 98 nodes (2.64 seconds)
Cbc0001I Search completed - best objective -2605.7707, took 3478 iterations and 98 nodes (2.64 seconds)
Cbc0032I Strong branching done 708 times (11503 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 26, 205 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       2.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 148 (-57) rows, 80 (-23) columns and 448 (-155) elements
Clp1000I sum of infeasibilities 1.98444e-06 - average 1.34084e-08, 75 fixed columns
Coin0506I Presolve 5 (-143) rows, 4 (-76) columns and 11 (-437) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 4740.1392
Clp0000I Optimal - objective value 4740.1392
Coin0511I After Postsolve, objective 4740.1392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8745421 - largest nonzero change 2.577086e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4740.1392
Clp0000I Optimal - objective value 4740.1392
Clp0000I Optimal - objective value 4740.1392
Coin0511I After Postsolve, objective 4740.1392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4740.139205 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 148 rows, 80 columns (79 integer (79 of which binary)) and 450 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.21875
Cbc0038I Pass   1: suminf.    0.17073 (1) obj. -4595.36 iterations 3
Cbc0038I Solution found of -2539.35
Cbc0038I Relaxing continuous gives -2558.52
Cbc0038I Rounding solution of -2567.6 is better than previous of -2558.52

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 80 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2784.86
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17073 (1) obj. -4595.36 iterations 0
Cbc0038I Pass   3: suminf.    0.09129 (1) obj. -2784.86 iterations 2
Cbc0038I Pass   4: suminf.    1.40605 (5) obj. -2784.86 iterations 15
Cbc0038I Pass   5: suminf.    0.08691 (1) obj. -2784.86 iterations 26
Cbc0038I Pass   6: suminf.    0.36585 (1) obj. -4130.26 iterations 2
Cbc0038I Pass   7: suminf.    1.60877 (6) obj. -2784.86 iterations 22
Cbc0038I Pass   8: suminf.    0.21153 (2) obj. -2784.86 iterations 17
Cbc0038I Pass   9: suminf.    0.34919 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  10: suminf.    0.34919 (2) obj. -2784.86 iterations 0
Cbc0038I Pass  11: suminf.    0.65625 (2) obj. -3346.1 iterations 8
Cbc0038I Pass  12: suminf.    1.62535 (6) obj. -2784.86 iterations 17
Cbc0038I Pass  13: suminf.    0.26954 (3) obj. -2784.86 iterations 5
Cbc0038I Pass  14: suminf.    0.58374 (2) obj. -2784.86 iterations 3
Cbc0038I Pass  15: suminf.    0.58374 (2) obj. -2784.86 iterations 0
Cbc0038I Pass  16: suminf.    0.50000 (2) obj. -3143.83 iterations 7
Cbc0038I Pass  17: suminf.    0.21555 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  18: suminf.    0.81957 (4) obj. -2784.86 iterations 8
Cbc0038I Pass  19: suminf.    0.22031 (2) obj. -2784.86 iterations 12
Cbc0038I Pass  20: suminf.    0.52689 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  21: suminf.    0.80126 (4) obj. -2784.86 iterations 13
Cbc0038I Pass  22: suminf.    0.80126 (4) obj. -2784.86 iterations 4
Cbc0038I Pass  23: suminf.    0.46610 (2) obj. -2784.86 iterations 2
Cbc0038I Pass  24: suminf.    0.46610 (2) obj. -2784.86 iterations 0
Cbc0038I Pass  25: suminf.    0.59375 (2) obj. -3245.28 iterations 3
Cbc0038I Pass  26: suminf.    0.22891 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  27: suminf.    2.27527 (7) obj. -2784.86 iterations 11
Cbc0038I Pass  28: suminf.    0.57234 (3) obj. -2784.86 iterations 10
Cbc0038I Pass  29: suminf.    0.22081 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  30: suminf.    0.35024 (2) obj. -2784.86 iterations 1
Cbc0038I Pass  31: suminf.    0.55298 (3) obj. -2784.86 iterations 7
Cbc0038I Rounding solution of -2593.28 is better than previous of -2567.6

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 80 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -2593.28 to -2605.77 (0.03 seconds)
Cbc0038I Round again with cutoff of -3175.91
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.17073 (1) obj. -4595.36 iterations 0
Cbc0038I Pass  32: suminf.    0.24902 (1) obj. -3175.91 iterations 2
Cbc0038I Pass  33: suminf.    0.80918 (3) obj. -3175.91 iterations 13
Cbc0038I Pass  34: suminf.    0.50176 (2) obj. -3175.91 iterations 12
Cbc0038I Pass  35: suminf.    0.72818 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  36: suminf.    0.72818 (2) obj. -3175.91 iterations 0
Cbc0038I Pass  37: suminf.    0.68750 (2) obj. -3410.32 iterations 2
Cbc0038I Pass  38: suminf.    1.01182 (4) obj. -3175.91 iterations 24
Cbc0038I Pass  39: suminf.    0.51554 (3) obj. -3175.91 iterations 7
Cbc0038I Pass  40: suminf.    0.24390 (1) obj. -3185.58 iterations 11
Cbc0038I Pass  41: suminf.    0.24000 (1) obj. -3175.91 iterations 1
Cbc0038I Pass  42: suminf.    0.73630 (3) obj. -3175.91 iterations 8
Cbc0038I Pass  43: suminf.    0.73630 (3) obj. -3175.91 iterations 3
Cbc0038I Pass  44: suminf.    0.87500 (2) obj. -3640.44 iterations 4
Cbc0038I Pass  45: suminf.    0.50691 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  46: suminf.    0.46134 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  47: suminf.    0.46134 (2) obj. -3175.91 iterations 0
Cbc0038I Pass  48: suminf.    1.34853 (6) obj. -3175.91 iterations 15
Cbc0038I Pass  49: suminf.    0.50212 (2) obj. -3175.91 iterations 18
Cbc0038I Pass  50: suminf.    0.60360 (2) obj. -3304.65 iterations 3
Cbc0038I Pass  51: suminf.    0.49948 (3) obj. -3175.91 iterations 1
Cbc0038I Pass  52: suminf.    0.84375 (2) obj. -3969.98 iterations 6
Cbc0038I Pass  53: suminf.    0.34146 (1) obj. -3402.07 iterations 1
Cbc0038I Pass  54: suminf.    0.25024 (1) obj. -3175.91 iterations 1
Cbc0038I Pass  55: suminf.    1.04479 (4) obj. -3175.91 iterations 8
Cbc0038I Pass  56: suminf.    0.58618 (3) obj. -3175.91 iterations 6
Cbc0038I Pass  57: suminf.    0.76085 (3) obj. -3175.91 iterations 10
Cbc0038I Pass  58: suminf.    0.52702 (2) obj. -3175.91 iterations 16
Cbc0038I Pass  59: suminf.    0.70944 (2) obj. -3175.91 iterations 1
Cbc0038I Pass  60: suminf.    0.97482 (3) obj. -3246.41 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 80 columns, reduced to 25 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2605.77 - took 0.02 seconds
Cbc0012I Integer solution of -2605.7707 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 148 rows 80 columns, reduced to 8 rows 7 columns
Cbc0031I 9 added rows had average density of 28.333333
Cbc0013I At root node, 9 cuts changed objective from -4740.1392 to -2634.9158 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 118 row cuts average 2.7 elements, 18 column cuts (18 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 60.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 46.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2605.7707, took 640 iterations and 16 nodes (0.27 seconds)
Cbc0032I Strong branching done 134 times (1149 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 7, 115 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-92) rows, 123 (-80) columns and 2153 (-3501) elements
Clp1000I sum of infeasibilities 3.21238e-06 - average 2.84281e-08, 121 fixed columns
Coin0506I Presolve 2 (-111) rows, 2 (-121) columns and 4 (-2149) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 4716.7642
Clp0000I Optimal - objective value 4716.7642
Coin0511I After Postsolve, objective 4716.7642, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9386728 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 4774.8265
Clp0000I Optimal - objective value 4774.8265
Clp0000I Optimal - objective value 4774.8265
Coin0511I After Postsolve, objective 4774.8265, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4774.826517 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 127 columns (127 integer (127 of which binary)) and 2171 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 2.3449
Cbc0038I Pass   1: suminf.    0.15916 (5) obj. -2564.32 iterations 15
Cbc0038I Pass   2: suminf.    0.15916 (5) obj. -2564.32 iterations 1
Cbc0038I Solution found of -2558.52
Cbc0038I Rounding solution of -2593.28 is better than previous of -2558.52

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2810.47
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.47870 (27) obj. -2810.47 iterations 12
Cbc0038I Pass   4: suminf.    0.47870 (27) obj. -2810.47 iterations 0
Cbc0038I Pass   5: suminf.    0.46401 (6) obj. -4595.12 iterations 24
Cbc0038I Pass   6: suminf.    0.11211 (1) obj. -2810.47 iterations 6
Cbc0038I Pass   7: suminf.    0.17073 (1) obj. -4588.53 iterations 1
Cbc0038I Pass   8: suminf.    1.47778 (16) obj. -2810.47 iterations 27
Cbc0038I Pass   9: suminf.    1.12287 (14) obj. -2810.47 iterations 19
Cbc0038I Pass  10: suminf.    0.21951 (1) obj. -4450.59 iterations 15
Cbc0038I Pass  11: suminf.    0.11896 (1) obj. -2810.47 iterations 1
Cbc0038I Pass  12: suminf.    1.06374 (9) obj. -2810.47 iterations 25
Cbc0038I Pass  13: suminf.    0.58948 (8) obj. -2810.47 iterations 11
Cbc0038I Pass  14: suminf.    0.59841 (2) obj. -2810.47 iterations 7
Cbc0038I Pass  15: suminf.    0.26091 (2) obj. -2810.47 iterations 1
Cbc0038I Pass  16: suminf.    0.97512 (7) obj. -2810.47 iterations 20
Cbc0038I Pass  17: suminf.    0.97512 (7) obj. -2810.47 iterations 4
Cbc0038I Pass  18: suminf.    0.25169 (2) obj. -2810.47 iterations 5
Cbc0038I Pass  19: suminf.    0.25169 (2) obj. -2810.47 iterations 0
Cbc0038I Pass  20: suminf.    0.78125 (2) obj. -3455.79 iterations 2
Cbc0038I Pass  21: suminf.    0.26990 (2) obj. -2810.47 iterations 1
Cbc0038I Pass  22: suminf.    1.26300 (9) obj. -2810.47 iterations 22
Cbc0038I Pass  23: suminf.    1.26300 (9) obj. -2810.47 iterations 3
Cbc0038I Pass  24: suminf.    0.12195 (1) obj. -2824.75 iterations 12
Cbc0038I Pass  25: suminf.    0.11619 (1) obj. -2810.47 iterations 1
Cbc0038I Pass  26: suminf.    1.19143 (11) obj. -2810.47 iterations 22
Cbc0038I Pass  27: suminf.    0.80352 (10) obj. -2810.47 iterations 3
Cbc0038I Pass  28: suminf.    0.55516 (2) obj. -2810.47 iterations 9
Cbc0038I Pass  29: suminf.    0.25880 (2) obj. -2810.47 iterations 1
Cbc0038I Pass  30: suminf.    1.31713 (13) obj. -2810.47 iterations 17
Cbc0038I Pass  31: suminf.    1.26669 (11) obj. -2810.47 iterations 4
Cbc0038I Pass  32: suminf.    0.14634 (1) obj. -2889.38 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 45 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -2593.28 - took 0.03 seconds
Cbc0012I Integer solution of -2593.2795 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 117 rows 127 columns, reduced to 23 rows 25 columns
Cbc0031I 46 added rows had average density of 49.23913
Cbc0013I At root node, 46 cuts changed objective from -4759.7479 to -2629.5095 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 984 row cuts average 7.4 elements, 10 column cuts (10 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 64.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 287 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2593.2795 best solution, best possible -2629.5095 (0.47 seconds)
Cbc0012I Integer solution of -2596.7304 found by DiveCoefficient after 264 iterations and 1 nodes (0.48 seconds)
Cbc0012I Integer solution of -2598.7304 found by DiveCoefficient after 336 iterations and 2 nodes (0.59 seconds)
Cbc0012I Integer solution of -2600.7707 found by DiveCoefficient after 471 iterations and 8 nodes (0.88 seconds)
Cbc0016I Integer solution of -2602.7707 found by strong branching after 568 iterations and 10 nodes (0.96 seconds)
Cbc0010I After 17 nodes, 9 on tree, -2602.7707 best solution, best possible -2629.5095 (1.17 seconds)
Cbc0016I Integer solution of -2604.336 found by strong branching after 1466 iterations and 39 nodes (1.68 seconds)
Cbc0038I Full problem 117 rows 127 columns, reduced to 21 rows 23 columns
Cbc0038I Full problem 163 rows 127 columns, reduced to 85 rows 97 columns
Cbc0044I Reduced cost fixing - 85 rows, 97 columns - restarting search
Cbc0012I Integer solution of -2604.336 found by Previous solution after 0 iterations and 0 nodes (1.82 seconds)
Cbc0038I Full problem 85 rows 97 columns, reduced to 9 rows 10 columns
Cbc0012I Integer solution of -2605.336 found by RINS after 0 iterations and 0 nodes (1.82 seconds)
Cbc0031I 41 added rows had average density of 31.04878
Cbc0013I At root node, 41 cuts changed objective from -2664.8641 to -2625.7443 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 652 row cuts average 7.8 elements, 10 column cuts (10 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 81 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 253 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 61 row cuts average 40.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -2605.336 best solution, best possible -2625.7443 (2.23 seconds)
Cbc0038I Full problem 85 rows 97 columns, reduced to 40 rows 43 columns
Cbc0012I Integer solution of -2605.7707 found by RINS after 1685 iterations and 44 nodes (2.80 seconds)
Cbc0001I Search completed - best objective -2605.7707, took 1759 iterations and 48 nodes (2.82 seconds)
Cbc0032I Strong branching done 666 times (10126 iterations), fathomed 4 nodes and fixed 29 variables
Cbc0035I Maximum depth 15, 97 variables fixed on reduced cost
Cbc0038I Probing was tried 59 times and created 1025 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I Gomory was tried 53 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I Knapsack was tried 39 times and created 228 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Cbc0038I Clique was tried 22 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I OddWheel was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I MixedIntegerRounding2 was tried 53 times and created 554 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I FlowCover was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 53 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I ZeroHalf was tried 53 times and created 42 cuts of which 0 were active after adding rounds of cuts (0.251 seconds)
Cbc0038I Stored from first was tried 53 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -2605.7707 found by Reduced search after 3478 iterations and 98 nodes (2.82 seconds)
Cbc0001I Search completed - best objective -2605.7707, took 3478 iterations and 98 nodes (2.82 seconds)
Cbc0032I Strong branching done 708 times (11503 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 26, 205 variables fixed on reduced cost
Total time (CPU seconds):       1.88   (Wallclock seconds):       2.83

