Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 162 (-43) rows, 89 (-14) columns and 496 (-107) elements
Clp1000I sum of infeasibilities 3.51108e-08 - average 2.16734e-10, 80 fixed columns
Coin0506I Presolve 12 (-150) rows, 9 (-80) columns and 36 (-460) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 20944.223
Clp0000I Optimal - objective value 20944.223
Coin0511I After Postsolve, objective 20944.223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6084343 - largest nonzero change 0 ( 0%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 20944.223
Clp0000I Optimal - objective value 20944.223
Clp0000I Optimal - objective value 20944.223
Coin0511I After Postsolve, objective 20944.223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20944.22303 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 162 rows, 89 columns (88 integer (88 of which binary)) and 516 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.199%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.51049
Cbc0038I Solution found of -11837
Cbc0038I Relaxing continuous gives -11837
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11837 to -16905.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -17309.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.18569 (3) obj. -17309.2 iterations 24
Cbc0038I Pass   2: suminf.    0.18569 (3) obj. -17309.2 iterations 0
Cbc0038I Pass   3: suminf.    0.56118 (2) obj. -19925.3 iterations 11
Cbc0038I Pass   4: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass   5: suminf.    0.10527 (1) obj. -17309.2 iterations 3
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -17891.5 iterations 1
Cbc0038I Solution found of -17891.5
Cbc0038I Relaxing continuous gives -17891.5
Cbc0038I Rounding solution of -18917.7 is better than previous of -17891.5

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -19323
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.74338 (3) obj. -19323 iterations 0
Cbc0038I Pass   8: suminf.    0.74338 (3) obj. -19323 iterations 0
Cbc0038I Pass   9: suminf.    0.56118 (2) obj. -19925.3 iterations 11
Cbc0038I Pass  10: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  11: suminf.    0.29818 (2) obj. -19323 iterations 3
Cbc0038I Pass  12: suminf.    0.29818 (2) obj. -19323 iterations 0
Cbc0038I Pass  13: suminf.    2.05847 (5) obj. -19323 iterations 15
Cbc0038I Pass  14: suminf.    1.04964 (4) obj. -19323 iterations 5
Cbc0038I Pass  15: suminf.    0.70226 (3) obj. -19323 iterations 7
Cbc0038I Pass  16: suminf.    0.92210 (5) obj. -19323 iterations 4
Cbc0038I Pass  17: suminf.    0.89015 (4) obj. -19323 iterations 1
Cbc0038I Pass  18: suminf.    1.23838 (4) obj. -19323 iterations 7
Cbc0038I Pass  19: suminf.    0.78576 (3) obj. -19323 iterations 8
Cbc0038I Pass  20: suminf.    0.79062 (3) obj. -19323 iterations 4
Cbc0038I Pass  21: suminf.    0.97085 (4) obj. -19323 iterations 23
Cbc0038I Pass  22: suminf.    0.49219 (3) obj. -19323 iterations 17
Cbc0038I Pass  23: suminf.    1.37608 (4) obj. -19323 iterations 4
Cbc0038I Pass  24: suminf.    1.37608 (4) obj. -19323 iterations 3
Cbc0038I Pass  25: suminf.    0.58073 (3) obj. -19323 iterations 4
Cbc0038I Pass  26: suminf.    3.11387 (9) obj. -19323 iterations 17
Cbc0038I Pass  27: suminf.    1.12371 (6) obj. -19323 iterations 17
Cbc0038I Pass  28: suminf.    0.74841 (4) obj. -19323 iterations 11
Cbc0038I Pass  29: suminf.    0.56118 (2) obj. -19925.3 iterations 14
Cbc0038I Pass  30: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  31: suminf.    0.29818 (2) obj. -19323 iterations 3
Cbc0038I Pass  32: suminf.    0.29818 (2) obj. -19323 iterations 0
Cbc0038I Pass  33: suminf.    1.34306 (4) obj. -19323 iterations 9
Cbc0038I Pass  34: suminf.    0.61145 (2) obj. -19323 iterations 4
Cbc0038I Pass  35: suminf.    1.02441 (3) obj. -19323 iterations 4
Cbc0038I Pass  36: suminf.    1.39156 (5) obj. -19323 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -17891.5 to -19277 (0.03 seconds)
Cbc0038I Round again with cutoff of -19809.4
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 4
Cbc0038I Pass  36: suminf.    0.87808 (3) obj. -19809.4 iterations 0
Cbc0038I Pass  37: suminf.    0.87808 (3) obj. -19809.4 iterations 0
Cbc0038I Pass  38: suminf.    0.56118 (2) obj. -19925.3 iterations 10
Cbc0038I Pass  39: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  40: suminf.    0.57023 (2) obj. -19809.4 iterations 1
Cbc0038I Pass  41: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  42: suminf.    1.28146 (3) obj. -19809.4 iterations 5
Cbc0038I Pass  43: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  44: suminf.    1.96831 (4) obj. -19809.4 iterations 11
Cbc0038I Pass  45: suminf.    0.56118 (2) obj. -19925.3 iterations 8
Cbc0038I Pass  46: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  47: suminf.    0.57023 (2) obj. -19809.4 iterations 1
Cbc0038I Pass  48: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  49: suminf.    1.28146 (3) obj. -19809.4 iterations 5
Cbc0038I Pass  50: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  51: suminf.    1.84852 (11) obj. -19809.4 iterations 13
Cbc0038I Pass  52: suminf.    1.24327 (5) obj. -19809.4 iterations 21
Cbc0038I Pass  53: suminf.    1.24327 (5) obj. -19809.4 iterations 7
Cbc0038I Pass  54: suminf.    0.87808 (3) obj. -19809.4 iterations 9
Cbc0038I Pass  55: suminf.    0.87808 (3) obj. -19809.4 iterations 0
Cbc0038I Pass  56: suminf.    0.56118 (2) obj. -19925.3 iterations 9
Cbc0038I Pass  57: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  58: suminf.    0.57023 (2) obj. -19809.4 iterations 1
Cbc0038I Pass  59: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  60: suminf.    1.28146 (3) obj. -19809.4 iterations 5
Cbc0038I Pass  61: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  62: suminf.    1.28135 (5) obj. -19809.4 iterations 8
Cbc0038I Pass  63: suminf.    2.11209 (8) obj. -19809.4 iterations 10
Cbc0038I Pass  64: suminf.    3.21673 (8) obj. -19809.4 iterations 17
Cbc0038I Pass  65: suminf.    2.59599 (7) obj. -19809.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19277 - took 0.03 seconds
Cbc0012I Integer solution of -19277.03 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 162 rows 89 columns, reduced to 13 rows 11 columns
Cbc0031I 7 added rows had average density of 21.428571
Cbc0013I At root node, 7 cuts changed objective from -20944.223 to -20206.439 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 3.3 elements, 11 column cuts (11 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0012I Integer solution of -19449.45 found by rounding after 305 iterations and 10 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -19449.45, took 314 iterations and 10 nodes (0.09 seconds)
Cbc0032I Strong branching done 80 times (456 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-83) rows, 135 (-67) columns and 2466 (-3187) elements
Clp1000I sum of infeasibilities 1.33924e-06 - average 1.10681e-08, 77 fixed columns
Coin0506I Presolve 58 (-63) rows, 58 (-77) columns and 336 (-2130) elements
Clp0029I End of values pass after 58 iterations
Clp0000I Optimal - objective value 20976.59
Clp0000I Optimal - objective value 20976.59
Coin0511I After Postsolve, objective 20976.59, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8003283 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 20976.59
Clp0000I Optimal - objective value 20976.59
Clp0000I Optimal - objective value 20976.59
Coin0511I After Postsolve, objective 20976.59, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20976.59038 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 135 columns (135 integer (135 of which binary)) and 2483 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 7.51834
Cbc0038I Pass   1: suminf.    0.70377 (22) obj. -11862.2 iterations 58
Cbc0038I Pass   2: suminf.    0.24324 (9) obj. -11845.8 iterations 13
Cbc0038I Solution found of -11837
Cbc0038I Rounding solution of -13233.9 is better than previous of -11837

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 135 columns, reduced to 24 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -13233.9 to -16905.3 (0.05 seconds)
Cbc0038I Round again with cutoff of -17311.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.24351 (23) obj. -17311.3 iterations 6
Cbc0038I Pass   4: suminf.    1.24351 (23) obj. -17311.3 iterations 0
Cbc0038I Pass   5: suminf.    0.09756 (1) obj. -19341.5 iterations 29
Cbc0038I Pass   6: suminf.    0.47963 (1) obj. -17311.3 iterations 3
Cbc0038I Pass   7: suminf.    0.32830 (14) obj. -17311.3 iterations 35
Cbc0038I Pass   8: suminf.    0.32830 (14) obj. -17311.3 iterations 4
Cbc0038I Pass   9: suminf.    0.83333 (2) obj. -18169.7 iterations 14
Cbc0038I Pass  10: suminf.    0.39485 (1) obj. -17311.3 iterations 4
Cbc0038I Pass  11: suminf.    0.48780 (1) obj. -17757.7 iterations 3
Cbc0038I Pass  12: suminf.    0.76282 (14) obj. -17311.3 iterations 44
Cbc0038I Pass  13: suminf.    0.60758 (3) obj. -17311.3 iterations 19
Cbc0038I Pass  14: suminf.    0.55909 (2) obj. -17630.7 iterations 3
Cbc0038I Pass  15: suminf.    0.41832 (2) obj. -17311.3 iterations 2
Cbc0038I Pass  16: suminf.    0.66415 (2) obj. -17311.3 iterations 2
Cbc0038I Pass  17: suminf.    0.41832 (2) obj. -17311.3 iterations 1
Cbc0038I Pass  18: suminf.    1.57334 (9) obj. -17311.3 iterations 29
Cbc0038I Pass  19: suminf.    1.10529 (7) obj. -17311.3 iterations 7
Cbc0038I Pass  20: suminf.    1.07118 (15) obj. -17311.3 iterations 6
Cbc0038I Pass  21: suminf.    1.44348 (5) obj. -17311.3 iterations 19
Cbc0038I Pass  22: suminf.    1.02874 (5) obj. -17311.3 iterations 2
Cbc0038I Pass  23: suminf.    0.06529 (1) obj. -17311.3 iterations 21
Cbc0038I Solution found of -17624.8
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 135 columns, reduced to 52 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -17624.8 to -19449.4 (0.10 seconds)
Cbc0038I Round again with cutoff of -19752.7
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  24: suminf.    1.84433 (25) obj. -19752.7 iterations 4
Cbc0038I Pass  25: suminf.    1.53040 (25) obj. -19752.7 iterations 6
Cbc0038I Pass  26: suminf.    0.91933 (13) obj. -19752.7 iterations 60
Cbc0038I Pass  27: suminf.    0.91925 (15) obj. -19752.7 iterations 11
Cbc0038I Pass  28: suminf.    0.59391 (14) obj. -19752.7 iterations 30
Cbc0038I Pass  29: suminf.    0.30382 (14) obj. -19752.7 iterations 7
Cbc0038I Pass  30: suminf.    0.63258 (2) obj. -20278.5 iterations 25
Cbc0038I Pass  31: suminf.    0.33479 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  32: suminf.    0.95202 (4) obj. -19752.7 iterations 3
Cbc0038I Pass  33: suminf.    0.95202 (4) obj. -19752.7 iterations 5
Cbc0038I Pass  34: suminf.    0.63258 (2) obj. -20278.5 iterations 9
Cbc0038I Pass  35: suminf.    1.56989 (9) obj. -19752.7 iterations 15
Cbc0038I Pass  36: suminf.    1.56989 (9) obj. -19752.7 iterations 6
Cbc0038I Pass  37: suminf.    0.96004 (4) obj. -19752.7 iterations 9
Cbc0038I Pass  38: suminf.    0.96004 (4) obj. -19752.7 iterations 5
Cbc0038I Pass  39: suminf.    0.63258 (2) obj. -20275.5 iterations 8
Cbc0038I Pass  40: suminf.    0.33625 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  41: suminf.    1.19279 (7) obj. -19752.7 iterations 15
Cbc0038I Pass  42: suminf.    1.19279 (7) obj. -19752.7 iterations 5
Cbc0038I Pass  43: suminf.    0.97341 (4) obj. -19752.7 iterations 7
Cbc0038I Pass  44: suminf.    0.97341 (4) obj. -19752.7 iterations 5
Cbc0038I Pass  45: suminf.    0.63258 (2) obj. -20270.5 iterations 8
Cbc0038I Pass  46: suminf.    0.33867 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  47: suminf.    1.99727 (12) obj. -19752.7 iterations 20
Cbc0038I Pass  48: suminf.    1.72411 (11) obj. -19752.7 iterations 7
Cbc0038I Pass  49: suminf.    0.74701 (2) obj. -19752.7 iterations 10
Cbc0038I Pass  50: suminf.    0.33673 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  51: suminf.    0.96272 (4) obj. -19752.7 iterations 3
Cbc0038I Pass  52: suminf.    0.96272 (4) obj. -19752.7 iterations 3
Cbc0038I Pass  53: suminf.    0.63258 (2) obj. -20274.5 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 135 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -19449.4 - took 0.08 seconds
Cbc0012I Integer solution of -19449.45 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 121 rows 135 columns, reduced to 25 rows 25 columns
Cbc0031I 37 added rows had average density of 15.513514
Cbc0013I At root node, 37 cuts changed objective from -20965.555 to -20252.602 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 453 row cuts average 6.6 elements, 21 column cuts (21 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 201 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 52.8 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0010I After 4 nodes, 1 on tree, -19449.45 best solution, best possible -20082.227 (0.61 seconds)
Cbc0001I Search completed - best objective -19449.45, took 1023 iterations and 10 nodes (0.83 seconds)
Cbc0032I Strong branching done 212 times (2354 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 162 (-43) rows, 89 (-14) columns and 496 (-107) elements
Clp1000I sum of infeasibilities 3.51108e-08 - average 2.16734e-10, 80 fixed columns
Coin0506I Presolve 12 (-150) rows, 9 (-80) columns and 36 (-460) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 20944.223
Clp0000I Optimal - objective value 20944.223
Coin0511I After Postsolve, objective 20944.223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6084343 - largest nonzero change 0 ( 0%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 20944.223
Clp0000I Optimal - objective value 20944.223
Clp0000I Optimal - objective value 20944.223
Coin0511I After Postsolve, objective 20944.223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20944.22303 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 162 rows, 89 columns (88 integer (88 of which binary)) and 516 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.199%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.51049
Cbc0038I Solution found of -11837
Cbc0038I Relaxing continuous gives -11837
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11837 to -16905.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -17309.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.18569 (3) obj. -17309.2 iterations 24
Cbc0038I Pass   2: suminf.    0.18569 (3) obj. -17309.2 iterations 0
Cbc0038I Pass   3: suminf.    0.56118 (2) obj. -19925.3 iterations 11
Cbc0038I Pass   4: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass   5: suminf.    0.10527 (1) obj. -17309.2 iterations 3
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -17891.5 iterations 1
Cbc0038I Solution found of -17891.5
Cbc0038I Relaxing continuous gives -17891.5
Cbc0038I Rounding solution of -18917.7 is better than previous of -17891.5

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -19323
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.74338 (3) obj. -19323 iterations 0
Cbc0038I Pass   8: suminf.    0.74338 (3) obj. -19323 iterations 0
Cbc0038I Pass   9: suminf.    0.56118 (2) obj. -19925.3 iterations 11
Cbc0038I Pass  10: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  11: suminf.    0.29818 (2) obj. -19323 iterations 3
Cbc0038I Pass  12: suminf.    0.29818 (2) obj. -19323 iterations 0
Cbc0038I Pass  13: suminf.    2.05847 (5) obj. -19323 iterations 15
Cbc0038I Pass  14: suminf.    1.04964 (4) obj. -19323 iterations 5
Cbc0038I Pass  15: suminf.    0.70226 (3) obj. -19323 iterations 7
Cbc0038I Pass  16: suminf.    0.92210 (5) obj. -19323 iterations 4
Cbc0038I Pass  17: suminf.    0.89015 (4) obj. -19323 iterations 1
Cbc0038I Pass  18: suminf.    1.23838 (4) obj. -19323 iterations 7
Cbc0038I Pass  19: suminf.    0.78576 (3) obj. -19323 iterations 8
Cbc0038I Pass  20: suminf.    0.79062 (3) obj. -19323 iterations 4
Cbc0038I Pass  21: suminf.    0.97085 (4) obj. -19323 iterations 23
Cbc0038I Pass  22: suminf.    0.49219 (3) obj. -19323 iterations 17
Cbc0038I Pass  23: suminf.    1.37608 (4) obj. -19323 iterations 4
Cbc0038I Pass  24: suminf.    1.37608 (4) obj. -19323 iterations 3
Cbc0038I Pass  25: suminf.    0.58073 (3) obj. -19323 iterations 4
Cbc0038I Pass  26: suminf.    3.11387 (9) obj. -19323 iterations 17
Cbc0038I Pass  27: suminf.    1.12371 (6) obj. -19323 iterations 17
Cbc0038I Pass  28: suminf.    0.74841 (4) obj. -19323 iterations 11
Cbc0038I Pass  29: suminf.    0.56118 (2) obj. -19925.3 iterations 14
Cbc0038I Pass  30: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  31: suminf.    0.29818 (2) obj. -19323 iterations 3
Cbc0038I Pass  32: suminf.    0.29818 (2) obj. -19323 iterations 0
Cbc0038I Pass  33: suminf.    1.34306 (4) obj. -19323 iterations 9
Cbc0038I Pass  34: suminf.    0.61145 (2) obj. -19323 iterations 4
Cbc0038I Pass  35: suminf.    1.02441 (3) obj. -19323 iterations 4
Cbc0038I Pass  36: suminf.    1.39156 (5) obj. -19323 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -17891.5 to -19277 (0.03 seconds)
Cbc0038I Round again with cutoff of -19809.4
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 4
Cbc0038I Pass  36: suminf.    0.87808 (3) obj. -19809.4 iterations 0
Cbc0038I Pass  37: suminf.    0.87808 (3) obj. -19809.4 iterations 0
Cbc0038I Pass  38: suminf.    0.56118 (2) obj. -19925.3 iterations 10
Cbc0038I Pass  39: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  40: suminf.    0.57023 (2) obj. -19809.4 iterations 1
Cbc0038I Pass  41: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  42: suminf.    1.28146 (3) obj. -19809.4 iterations 5
Cbc0038I Pass  43: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  44: suminf.    1.96831 (4) obj. -19809.4 iterations 11
Cbc0038I Pass  45: suminf.    0.56118 (2) obj. -19925.3 iterations 8
Cbc0038I Pass  46: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  47: suminf.    0.57023 (2) obj. -19809.4 iterations 1
Cbc0038I Pass  48: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  49: suminf.    1.28146 (3) obj. -19809.4 iterations 5
Cbc0038I Pass  50: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  51: suminf.    1.84852 (11) obj. -19809.4 iterations 13
Cbc0038I Pass  52: suminf.    1.24327 (5) obj. -19809.4 iterations 21
Cbc0038I Pass  53: suminf.    1.24327 (5) obj. -19809.4 iterations 7
Cbc0038I Pass  54: suminf.    0.87808 (3) obj. -19809.4 iterations 9
Cbc0038I Pass  55: suminf.    0.87808 (3) obj. -19809.4 iterations 0
Cbc0038I Pass  56: suminf.    0.56118 (2) obj. -19925.3 iterations 9
Cbc0038I Pass  57: suminf.    0.56118 (2) obj. -19925.3 iterations 0
Cbc0038I Pass  58: suminf.    0.57023 (2) obj. -19809.4 iterations 1
Cbc0038I Pass  59: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  60: suminf.    1.28146 (3) obj. -19809.4 iterations 5
Cbc0038I Pass  61: suminf.    0.52933 (2) obj. -19809.4 iterations 4
Cbc0038I Pass  62: suminf.    1.28135 (5) obj. -19809.4 iterations 8
Cbc0038I Pass  63: suminf.    2.11209 (8) obj. -19809.4 iterations 10
Cbc0038I Pass  64: suminf.    3.21673 (8) obj. -19809.4 iterations 17
Cbc0038I Pass  65: suminf.    2.59599 (7) obj. -19809.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 89 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19277 - took 0.03 seconds
Cbc0012I Integer solution of -19277.03 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 162 rows 89 columns, reduced to 13 rows 11 columns
Cbc0031I 7 added rows had average density of 21.428571
Cbc0013I At root node, 7 cuts changed objective from -20944.223 to -20206.439 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 3.3 elements, 11 column cuts (11 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0012I Integer solution of -19449.45 found by rounding after 305 iterations and 10 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -19449.45, took 314 iterations and 10 nodes (0.09 seconds)
Cbc0032I Strong branching done 80 times (456 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-84) rows, 135 (-68) columns and 2466 (-3188) elements
Clp1000I sum of infeasibilities 1.33924e-06 - average 1.10681e-08, 77 fixed columns
Coin0506I Presolve 58 (-63) rows, 58 (-77) columns and 336 (-2130) elements
Clp0029I End of values pass after 58 iterations
Clp0000I Optimal - objective value 20976.59
Clp0000I Optimal - objective value 20976.59
Coin0511I After Postsolve, objective 20976.59, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8003283 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 20976.59
Clp0000I Optimal - objective value 20976.59
Clp0000I Optimal - objective value 20976.59
Coin0511I After Postsolve, objective 20976.59, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20976.59038 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 135 columns (135 integer (135 of which binary)) and 2483 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 7.51834
Cbc0038I Pass   1: suminf.    0.70377 (22) obj. -11862.2 iterations 58
Cbc0038I Pass   2: suminf.    0.24324 (9) obj. -11845.8 iterations 13
Cbc0038I Solution found of -11837
Cbc0038I Rounding solution of -13233.9 is better than previous of -11837

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 135 columns, reduced to 24 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -13233.9 to -16905.3 (0.05 seconds)
Cbc0038I Round again with cutoff of -17311.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.24351 (23) obj. -17311.3 iterations 6
Cbc0038I Pass   4: suminf.    1.24351 (23) obj. -17311.3 iterations 0
Cbc0038I Pass   5: suminf.    0.09756 (1) obj. -19341.5 iterations 29
Cbc0038I Pass   6: suminf.    0.47963 (1) obj. -17311.3 iterations 3
Cbc0038I Pass   7: suminf.    0.32830 (14) obj. -17311.3 iterations 35
Cbc0038I Pass   8: suminf.    0.32830 (14) obj. -17311.3 iterations 4
Cbc0038I Pass   9: suminf.    0.83333 (2) obj. -18169.7 iterations 14
Cbc0038I Pass  10: suminf.    0.39485 (1) obj. -17311.3 iterations 4
Cbc0038I Pass  11: suminf.    0.48780 (1) obj. -17757.7 iterations 3
Cbc0038I Pass  12: suminf.    0.76282 (14) obj. -17311.3 iterations 44
Cbc0038I Pass  13: suminf.    0.60758 (3) obj. -17311.3 iterations 19
Cbc0038I Pass  14: suminf.    0.55909 (2) obj. -17630.7 iterations 3
Cbc0038I Pass  15: suminf.    0.41832 (2) obj. -17311.3 iterations 2
Cbc0038I Pass  16: suminf.    0.66415 (2) obj. -17311.3 iterations 2
Cbc0038I Pass  17: suminf.    0.41832 (2) obj. -17311.3 iterations 1
Cbc0038I Pass  18: suminf.    1.57334 (9) obj. -17311.3 iterations 29
Cbc0038I Pass  19: suminf.    1.10529 (7) obj. -17311.3 iterations 7
Cbc0038I Pass  20: suminf.    1.07118 (15) obj. -17311.3 iterations 6
Cbc0038I Pass  21: suminf.    1.44348 (5) obj. -17311.3 iterations 19
Cbc0038I Pass  22: suminf.    1.02874 (5) obj. -17311.3 iterations 2
Cbc0038I Pass  23: suminf.    0.06529 (1) obj. -17311.3 iterations 21
Cbc0038I Solution found of -17624.8
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 135 columns, reduced to 52 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -17624.8 to -19449.4 (0.10 seconds)
Cbc0038I Round again with cutoff of -19752.7
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  24: suminf.    1.84433 (25) obj. -19752.7 iterations 4
Cbc0038I Pass  25: suminf.    1.53040 (25) obj. -19752.7 iterations 6
Cbc0038I Pass  26: suminf.    0.91933 (13) obj. -19752.7 iterations 60
Cbc0038I Pass  27: suminf.    0.91925 (15) obj. -19752.7 iterations 11
Cbc0038I Pass  28: suminf.    0.59391 (14) obj. -19752.7 iterations 30
Cbc0038I Pass  29: suminf.    0.30382 (14) obj. -19752.7 iterations 7
Cbc0038I Pass  30: suminf.    0.63258 (2) obj. -20278.5 iterations 25
Cbc0038I Pass  31: suminf.    0.33479 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  32: suminf.    0.95202 (4) obj. -19752.7 iterations 3
Cbc0038I Pass  33: suminf.    0.95202 (4) obj. -19752.7 iterations 5
Cbc0038I Pass  34: suminf.    0.63258 (2) obj. -20278.5 iterations 9
Cbc0038I Pass  35: suminf.    1.56989 (9) obj. -19752.7 iterations 15
Cbc0038I Pass  36: suminf.    1.56989 (9) obj. -19752.7 iterations 6
Cbc0038I Pass  37: suminf.    0.96004 (4) obj. -19752.7 iterations 9
Cbc0038I Pass  38: suminf.    0.96004 (4) obj. -19752.7 iterations 5
Cbc0038I Pass  39: suminf.    0.63258 (2) obj. -20275.5 iterations 8
Cbc0038I Pass  40: suminf.    0.33625 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  41: suminf.    1.19279 (7) obj. -19752.7 iterations 15
Cbc0038I Pass  42: suminf.    1.19279 (7) obj. -19752.7 iterations 5
Cbc0038I Pass  43: suminf.    0.97341 (4) obj. -19752.7 iterations 7
Cbc0038I Pass  44: suminf.    0.97341 (4) obj. -19752.7 iterations 5
Cbc0038I Pass  45: suminf.    0.63258 (2) obj. -20270.5 iterations 8
Cbc0038I Pass  46: suminf.    0.33867 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  47: suminf.    1.99727 (12) obj. -19752.7 iterations 20
Cbc0038I Pass  48: suminf.    1.72411 (11) obj. -19752.7 iterations 7
Cbc0038I Pass  49: suminf.    0.74701 (2) obj. -19752.7 iterations 10
Cbc0038I Pass  50: suminf.    0.33673 (3) obj. -19752.7 iterations 2
Cbc0038I Pass  51: suminf.    0.96272 (4) obj. -19752.7 iterations 3
Cbc0038I Pass  52: suminf.    0.96272 (4) obj. -19752.7 iterations 3
Cbc0038I Pass  53: suminf.    0.63258 (2) obj. -20274.5 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 135 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -19449.4 - took 0.08 seconds
Cbc0012I Integer solution of -19449.45 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 121 rows 135 columns, reduced to 25 rows 25 columns
Cbc0031I 37 added rows had average density of 15.513514
Cbc0013I At root node, 37 cuts changed objective from -20965.555 to -20252.602 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 453 row cuts average 6.6 elements, 21 column cuts (21 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 201 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 52.8 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0010I After 4 nodes, 1 on tree, -19449.45 best solution, best possible -20082.227 (0.60 seconds)
Cbc0001I Search completed - best objective -19449.45, took 1023 iterations and 10 nodes (0.81 seconds)
Cbc0032I Strong branching done 212 times (2354 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.82

