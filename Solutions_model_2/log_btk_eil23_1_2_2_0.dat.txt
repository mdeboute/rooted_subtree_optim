Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 1.06222e-09 - average 3.03493e-11, 1 fixed columns
Coin0506I Presolve 32 (-3) rows, 20 (-1) columns and 96 (-8) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Coin0511I After Postsolve, objective 126.00552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Coin0511I After Postsolve, objective 126.00552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.0055241 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.654%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.67932
Cbc0038I Pass   1: suminf.    0.68128 (3) obj. -46.9823 iterations 17
Cbc0038I Pass   2: suminf.    0.25800 (2) obj. -43.0558 iterations 2
Cbc0038I Solution found of -21.3041
Cbc0038I Relaxing continuous gives -21.3041
Cbc0038I Rounding solution of -40.1221 is better than previous of -21.3041

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 24 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -40.1221 to -47.3478 (0.02 seconds)
Cbc0038I Round again with cutoff of -55.2067
Cbc0038I Pass   3: suminf.    0.77272 (5) obj. -55.2067 iterations 1
Cbc0038I Pass   4: suminf.    0.31232 (3) obj. -55.2067 iterations 2
Cbc0038I Pass   5: suminf.    0.89426 (5) obj. -55.2067 iterations 8
Cbc0038I Pass   6: suminf.    0.86979 (3) obj. -55.2067 iterations 1
Cbc0038I Pass   7: suminf.    0.59509 (4) obj. -55.2067 iterations 3
Cbc0038I Pass   8: suminf.    0.59332 (3) obj. -55.2067 iterations 1
Cbc0038I Pass   9: suminf.    0.53285 (4) obj. -55.2067 iterations 4
Cbc0038I Pass  10: suminf.    0.51171 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  11: suminf.    0.59438 (3) obj. -55.2067 iterations 4
Cbc0038I Pass  12: suminf.    1.27764 (4) obj. -55.2067 iterations 5
Cbc0038I Pass  13: suminf.    0.89790 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  14: suminf.    0.89790 (4) obj. -55.2067 iterations 0
Cbc0038I Pass  15: suminf.    1.15168 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  16: suminf.    1.11745 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  17: suminf.    1.11766 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  18: suminf.    1.42196 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  19: suminf.    1.00550 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  20: suminf.    1.11766 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  21: suminf.    0.50175 (4) obj. -55.2067 iterations 5
Cbc0038I Pass  22: suminf.    0.33185 (2) obj. -55.2067 iterations 2
Cbc0038I Pass  23: suminf.    0.52625 (3) obj. -55.2067 iterations 3
Cbc0038I Pass  24: suminf.    0.52625 (3) obj. -55.2067 iterations 0
Cbc0038I Pass  25: suminf.    0.75554 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  26: suminf.    0.75575 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  27: suminf.    1.39692 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  28: suminf.    1.39692 (4) obj. -55.2067 iterations 0
Cbc0038I Pass  29: suminf.    0.75575 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  30: suminf.    1.23736 (5) obj. -55.2067 iterations 7
Cbc0038I Pass  31: suminf.    1.12135 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  32: suminf.    1.12135 (4) obj. -55.2067 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 24 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.3478 - took 0.03 seconds
Cbc0012I Integer solution of -47.34776 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 12 added rows had average density of 12.666667
Cbc0013I At root node, 12 cuts changed objective from -125.9366 to -65.475155 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1277 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 872 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -47.78703 found by DiveCoefficient after 2928 iterations and 13 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -47.78703000000002, took 3135 iterations and 18 nodes (0.21 seconds)
Cbc0032I Strong branching done 156 times (1083 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-13) rows, 40 (-6) columns and 299 (-89) elements
Clp1000I sum of infeasibilities 0 - average 0, 18 fixed columns
Coin0506I Presolve 22 (-13) rows, 22 (-18) columns and 90 (-209) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 180.77532
Clp0000I Optimal - objective value 180.77532
Coin0511I After Postsolve, objective 180.77532, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.99806376 - largest nonzero change 0 ( 0%) - largest zero change 2.630642e-05
Clp0000I Optimal - objective value 197.53394
Clp0000I Optimal - objective value 197.53394
Clp0000I Optimal - objective value 197.53394
Coin0511I After Postsolve, objective 197.53394, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 197.533944 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 38 columns (38 integer (38 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.100%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.20832
Cbc0038I Pass   1: suminf.    1.81716 (9) obj. -58.9345 iterations 15
Cbc0038I Pass   2: suminf.    1.81716 (9) obj. -58.9345 iterations 0
Cbc0038I Solution found of 43.5363
Cbc0038I Rounding solution of -38.5578 is better than previous of 43.5363

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 38 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -38.5578 to -42.4967 (0.01 seconds)
Cbc0038I Round again with cutoff of -50.5844
Cbc0038I Pass   3: suminf.    1.81716 (9) obj. -58.9345 iterations 0
Cbc0038I Pass   4: suminf.    1.81716 (9) obj. -58.9345 iterations 0
Cbc0038I Pass   5: suminf.    0.80303 (4) obj. -50.5844 iterations 17
Cbc0038I Pass   6: suminf.    0.79777 (4) obj. -50.5844 iterations 3
Cbc0038I Pass   7: suminf.    0.81631 (2) obj. -50.5844 iterations 4
Cbc0038I Pass   8: suminf.    0.81631 (2) obj. -50.5844 iterations 0
Cbc0038I Pass   9: suminf.    0.83220 (2) obj. -50.5844 iterations 2
Cbc0038I Pass  10: suminf.    0.76842 (2) obj. -54.0286 iterations 1
Cbc0038I Pass  11: suminf.    2.60702 (7) obj. -84.2442 iterations 7
Cbc0038I Pass  12: suminf.    2.60702 (7) obj. -84.2442 iterations 0
Cbc0038I Pass  13: suminf.    0.34866 (1) obj. -50.5844 iterations 7
Cbc0038I Pass  14: suminf.    0.50000 (1) obj. -58.7565 iterations 1
Cbc0038I Pass  15: suminf.    2.01887 (7) obj. -50.5844 iterations 6
Cbc0038I Pass  16: suminf.    1.58282 (4) obj. -55.75 iterations 2
Cbc0038I Pass  17: suminf.    0.89541 (2) obj. -50.5844 iterations 4
Cbc0038I Pass  18: suminf.    1.25497 (4) obj. -50.5844 iterations 8
Cbc0038I Pass  19: suminf.    0.32331 (1) obj. -50.5844 iterations 4
Cbc0038I Pass  20: suminf.    0.40000 (1) obj. -54.7257 iterations 1
Cbc0038I Pass  21: suminf.    1.08852 (6) obj. -53.234 iterations 6
Cbc0038I Pass  22: suminf.    0.74678 (3) obj. -50.5844 iterations 3
Cbc0038I Pass  23: suminf.    0.41945 (2) obj. -50.5844 iterations 5
Cbc0038I Pass  24: suminf.    0.41945 (2) obj. -50.5844 iterations 0
Cbc0038I Pass  25: suminf.    0.73864 (2) obj. -57.1812 iterations 1
Cbc0038I Pass  26: suminf.    1.96630 (7) obj. -50.5844 iterations 6
Cbc0038I Pass  27: suminf.    0.60139 (3) obj. -50.5844 iterations 5
Cbc0038I Pass  28: suminf.    0.30283 (2) obj. -50.5844 iterations 2
Cbc0038I Pass  29: suminf.    0.94037 (3) obj. -50.5844 iterations 2
Cbc0038I Pass  30: suminf.    2.68944 (8) obj. -50.5844 iterations 12
Cbc0038I Pass  31: suminf.    1.23290 (4) obj. -50.5844 iterations 6
Cbc0038I Pass  32: suminf.    1.09327 (4) obj. -50.5844 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 38 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -42.4967 to -47.787 (0.03 seconds)
Cbc0038I Round again with cutoff of -65.142
Cbc0038I Pass  32: suminf.    1.96376 (10) obj. -65.142 iterations 2
Cbc0038I Pass  33: suminf.    1.96376 (10) obj. -65.142 iterations 1
Cbc0038I Pass  34: suminf.    0.94558 (6) obj. -65.142 iterations 14
Cbc0038I Pass  35: suminf.    0.65498 (4) obj. -65.142 iterations 4
Cbc0038I Pass  36: suminf.    0.65498 (4) obj. -65.142 iterations 0
Cbc0038I Pass  37: suminf.    0.97040 (4) obj. -65.142 iterations 5
Cbc0038I Pass  38: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  39: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  40: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  41: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  42: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  43: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  44: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  45: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  46: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  47: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  48: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  49: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  50: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  51: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  52: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  53: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  54: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  55: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  56: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  57: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  58: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  59: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  60: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  61: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 38 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.787 - took 0.03 seconds
Cbc0012I Integer solution of -47.78703 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 33 rows 38 columns, reduced to 4 rows 10 columns
Cbc0031I 14 added rows had average density of 10.785714
Cbc0013I At root node, 14 cuts changed objective from -123.37264 to -52.285957 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 571 row cuts average 4.0 elements, 14 column cuts (17 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 123 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 183 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 195 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.833 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -47.78703 best solution, best possible -52.285957 (1.61 seconds)
Cbc0001I Search completed - best objective -47.78703000000002, took 1653 iterations and 16 nodes (1.67 seconds)
Cbc0032I Strong branching done 170 times (606 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 1.06222e-09 - average 3.03493e-11, 1 fixed columns
Coin0506I Presolve 32 (-3) rows, 20 (-1) columns and 96 (-8) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Coin0511I After Postsolve, objective 126.00552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Clp0000I Optimal - objective value 126.00552
Coin0511I After Postsolve, objective 126.00552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.0055241 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.654%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.67932
Cbc0038I Pass   1: suminf.    0.68128 (3) obj. -46.9823 iterations 17
Cbc0038I Pass   2: suminf.    0.25800 (2) obj. -43.0558 iterations 2
Cbc0038I Solution found of -21.3041
Cbc0038I Relaxing continuous gives -21.3041
Cbc0038I Rounding solution of -40.1221 is better than previous of -21.3041

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 24 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -40.1221 to -47.3478 (0.02 seconds)
Cbc0038I Round again with cutoff of -55.2067
Cbc0038I Pass   3: suminf.    0.77272 (5) obj. -55.2067 iterations 1
Cbc0038I Pass   4: suminf.    0.31232 (3) obj. -55.2067 iterations 2
Cbc0038I Pass   5: suminf.    0.89426 (5) obj. -55.2067 iterations 8
Cbc0038I Pass   6: suminf.    0.86979 (3) obj. -55.2067 iterations 1
Cbc0038I Pass   7: suminf.    0.59509 (4) obj. -55.2067 iterations 3
Cbc0038I Pass   8: suminf.    0.59332 (3) obj. -55.2067 iterations 1
Cbc0038I Pass   9: suminf.    0.53285 (4) obj. -55.2067 iterations 4
Cbc0038I Pass  10: suminf.    0.51171 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  11: suminf.    0.59438 (3) obj. -55.2067 iterations 4
Cbc0038I Pass  12: suminf.    1.27764 (4) obj. -55.2067 iterations 5
Cbc0038I Pass  13: suminf.    0.89790 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  14: suminf.    0.89790 (4) obj. -55.2067 iterations 0
Cbc0038I Pass  15: suminf.    1.15168 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  16: suminf.    1.11745 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  17: suminf.    1.11766 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  18: suminf.    1.42196 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  19: suminf.    1.00550 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  20: suminf.    1.11766 (4) obj. -55.2067 iterations 3
Cbc0038I Pass  21: suminf.    0.50175 (4) obj. -55.2067 iterations 5
Cbc0038I Pass  22: suminf.    0.33185 (2) obj. -55.2067 iterations 2
Cbc0038I Pass  23: suminf.    0.52625 (3) obj. -55.2067 iterations 3
Cbc0038I Pass  24: suminf.    0.52625 (3) obj. -55.2067 iterations 0
Cbc0038I Pass  25: suminf.    0.75554 (3) obj. -55.2067 iterations 2
Cbc0038I Pass  26: suminf.    0.75575 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  27: suminf.    1.39692 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  28: suminf.    1.39692 (4) obj. -55.2067 iterations 0
Cbc0038I Pass  29: suminf.    0.75575 (4) obj. -55.2067 iterations 2
Cbc0038I Pass  30: suminf.    1.23736 (5) obj. -55.2067 iterations 7
Cbc0038I Pass  31: suminf.    1.12135 (4) obj. -55.2067 iterations 1
Cbc0038I Pass  32: suminf.    1.12135 (4) obj. -55.2067 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 24 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.3478 - took 0.03 seconds
Cbc0012I Integer solution of -47.34776 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 12 added rows had average density of 12.666667
Cbc0013I At root node, 12 cuts changed objective from -125.9366 to -65.475155 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1277 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 872 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -47.78703 found by DiveCoefficient after 2928 iterations and 13 nodes (0.20 seconds)
Cbc0001I Search completed - best objective -47.78703000000002, took 3135 iterations and 18 nodes (0.22 seconds)
Cbc0032I Strong branching done 156 times (1083 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-16) rows, 38 (-9) columns and 268 (-121) elements
Clp1000I sum of infeasibilities 2.86403e-11 - average 8.67888e-13, 19 fixed columns
Coin0506I Presolve 14 (-19) rows, 19 (-19) columns and 72 (-196) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 108.49036
Clp0000I Optimal - objective value 108.49036
Coin0511I After Postsolve, objective 108.49036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6803568 - largest nonzero change 2.623149e-05 ( 0.002623149%) - largest zero change 2.1864637e-05
Clp0000I Optimal - objective value 140.36545
Clp0000I Optimal - objective value 140.36545
Clp0000I Optimal - objective value 140.36545
Coin0511I After Postsolve, objective 140.36545, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 140.365447 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 38 columns (38 integer (38 of which binary)) and 275 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.100%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.20832
Cbc0038I Pass   1: suminf.    1.81716 (9) obj. -58.9345 iterations 15
Cbc0038I Pass   2: suminf.    1.81716 (9) obj. -58.9345 iterations 0
Cbc0038I Solution found of 43.5363
Cbc0038I Rounding solution of -38.5578 is better than previous of 43.5363

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 38 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -38.5578 to -42.4967 (0.01 seconds)
Cbc0038I Round again with cutoff of -50.5844
Cbc0038I Pass   3: suminf.    1.81716 (9) obj. -58.9345 iterations 0
Cbc0038I Pass   4: suminf.    1.81716 (9) obj. -58.9345 iterations 0
Cbc0038I Pass   5: suminf.    0.80303 (4) obj. -50.5844 iterations 17
Cbc0038I Pass   6: suminf.    0.79777 (4) obj. -50.5844 iterations 3
Cbc0038I Pass   7: suminf.    0.81631 (2) obj. -50.5844 iterations 3
Cbc0038I Pass   8: suminf.    0.81631 (2) obj. -50.5844 iterations 0
Cbc0038I Pass   9: suminf.    0.83220 (2) obj. -50.5844 iterations 2
Cbc0038I Pass  10: suminf.    0.76842 (2) obj. -54.0286 iterations 1
Cbc0038I Pass  11: suminf.    2.60702 (7) obj. -84.2442 iterations 7
Cbc0038I Pass  12: suminf.    2.60702 (7) obj. -84.2442 iterations 0
Cbc0038I Pass  13: suminf.    0.34866 (1) obj. -50.5844 iterations 7
Cbc0038I Pass  14: suminf.    0.50000 (1) obj. -58.7565 iterations 1
Cbc0038I Pass  15: suminf.    2.01887 (7) obj. -50.5844 iterations 6
Cbc0038I Pass  16: suminf.    1.58282 (4) obj. -55.75 iterations 2
Cbc0038I Pass  17: suminf.    0.89541 (2) obj. -50.5844 iterations 4
Cbc0038I Pass  18: suminf.    1.25497 (4) obj. -50.5844 iterations 8
Cbc0038I Pass  19: suminf.    0.32331 (1) obj. -50.5844 iterations 5
Cbc0038I Pass  20: suminf.    0.40000 (1) obj. -54.7257 iterations 1
Cbc0038I Pass  21: suminf.    1.08852 (6) obj. -53.234 iterations 7
Cbc0038I Pass  22: suminf.    0.74678 (3) obj. -50.5844 iterations 3
Cbc0038I Pass  23: suminf.    0.41945 (2) obj. -50.5844 iterations 5
Cbc0038I Pass  24: suminf.    0.41945 (2) obj. -50.5844 iterations 0
Cbc0038I Pass  25: suminf.    0.73864 (2) obj. -57.1812 iterations 1
Cbc0038I Pass  26: suminf.    1.96630 (7) obj. -50.5844 iterations 6
Cbc0038I Pass  27: suminf.    0.60139 (3) obj. -50.5844 iterations 5
Cbc0038I Pass  28: suminf.    0.30283 (2) obj. -50.5844 iterations 2
Cbc0038I Pass  29: suminf.    0.94037 (3) obj. -50.5844 iterations 2
Cbc0038I Pass  30: suminf.    2.68944 (8) obj. -50.5844 iterations 13
Cbc0038I Pass  31: suminf.    1.23290 (4) obj. -50.5844 iterations 6
Cbc0038I Pass  32: suminf.    1.09327 (4) obj. -50.5844 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 38 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -42.4967 to -47.787 (0.03 seconds)
Cbc0038I Round again with cutoff of -65.142
Cbc0038I Pass  32: suminf.    1.96376 (10) obj. -65.142 iterations 2
Cbc0038I Pass  33: suminf.    1.96376 (10) obj. -65.142 iterations 1
Cbc0038I Pass  34: suminf.    0.94558 (6) obj. -65.142 iterations 13
Cbc0038I Pass  35: suminf.    0.65498 (4) obj. -65.142 iterations 4
Cbc0038I Pass  36: suminf.    0.65498 (4) obj. -65.142 iterations 0
Cbc0038I Pass  37: suminf.    0.97040 (4) obj. -65.142 iterations 5
Cbc0038I Pass  38: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  39: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  40: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  41: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  42: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  43: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  44: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  45: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  46: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  47: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  48: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  49: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  50: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  51: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  52: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  53: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  54: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  55: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  56: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I Pass  57: suminf.    0.97040 (4) obj. -65.142 iterations 1
Cbc0038I Pass  58: suminf.    0.97040 (4) obj. -65.142 iterations 0
Cbc0038I Pass  59: suminf.    1.63351 (4) obj. -65.142 iterations 3
Cbc0038I Pass  60: suminf.    1.63351 (4) obj. -65.142 iterations 0
Cbc0038I Pass  61: suminf.    1.27371 (4) obj. -65.142 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 38 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.787 - took 0.03 seconds
Cbc0012I Integer solution of -47.78703 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 33 rows 38 columns, reduced to 4 rows 10 columns
Cbc0031I 10 added rows had average density of 9.7
Cbc0013I At root node, 10 cuts changed objective from -123.37264 to -51.873752 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 456 row cuts average 4.2 elements, 15 column cuts (15 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 520 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 145 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.762 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -47.78703 best solution, best possible -51.873752 (1.49 seconds)
Cbc0001I Search completed - best objective -47.78703000000002, took 1499 iterations and 8 nodes (1.53 seconds)
Cbc0032I Strong branching done 78 times (386 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.53

