Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 1.15924e-06 - average 2.52008e-08, 5 fixed columns
Coin0506I Presolve 36 (-10) rows, 20 (-5) columns and 105 (-30) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 93.004831
Clp0000I Optimal - objective value 93.004831
Coin0511I After Postsolve, objective 93.004831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.004831
Clp0000I Optimal - objective value 93.004831
Clp0000I Optimal - objective value 93.004831
Coin0511I After Postsolve, objective 93.004831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.00483142 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.023
Cbc0038I Solution found of 0.675902
Cbc0038I Relaxing continuous gives -9.66437
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -9.66437 to -58.7292 (0.02 seconds)
Cbc0038I Round again with cutoff of -61.6743
Cbc0038I Pass   1: suminf.    1.23106 (5) obj. -61.6743 iterations 19
Cbc0038I Pass   2: suminf.    0.76528 (6) obj. -61.6743 iterations 5
Cbc0038I Pass   3: suminf.    0.26316 (1) obj. -61.6743 iterations 5
Cbc0038I Pass   4: suminf.    0.34279 (1) obj. -61.6743 iterations 1
Cbc0038I Pass   5: suminf.    1.47497 (5) obj. -61.6743 iterations 6
Cbc0038I Pass   6: suminf.    0.89168 (4) obj. -61.6743 iterations 3
Cbc0038I Pass   7: suminf.    0.55640 (3) obj. -61.6743 iterations 3
Cbc0038I Pass   8: suminf.    0.45263 (1) obj. -63.8912 iterations 4
Cbc0038I Pass   9: suminf.    0.49002 (2) obj. -61.6743 iterations 2
Cbc0038I Pass  10: suminf.    0.45263 (1) obj. -63.8912 iterations 2
Cbc0038I Pass  11: suminf.    1.45311 (6) obj. -61.6743 iterations 7
Cbc0038I Pass  12: suminf.    1.45311 (6) obj. -61.6743 iterations 0
Cbc0038I Pass  13: suminf.    1.85892 (6) obj. -61.6743 iterations 10
Cbc0038I Pass  14: suminf.    1.24872 (5) obj. -61.6743 iterations 4
Cbc0038I Pass  15: suminf.    0.71676 (2) obj. -63.4216 iterations 9
Cbc0038I Pass  16: suminf.    0.71676 (2) obj. -63.4216 iterations 0
Cbc0038I Pass  17: suminf.    0.49846 (2) obj. -61.6743 iterations 5
Cbc0038I Pass  18: suminf.    0.15789 (1) obj. -62.7232 iterations 2
Cbc0038I Pass  19: suminf.    0.64928 (5) obj. -61.6743 iterations 5
Cbc0038I Pass  20: suminf.    0.33185 (3) obj. -61.6743 iterations 4
Cbc0038I Pass  21: suminf.    0.20590 (2) obj. -61.6743 iterations 5
Cbc0038I Pass  22: suminf.    0.17895 (1) obj. -61.7537 iterations 2
Cbc0038I Pass  23: suminf.    1.00570 (3) obj. -61.6743 iterations 9
Cbc0038I Pass  24: suminf.    0.83147 (3) obj. -61.6743 iterations 4
Cbc0038I Pass  25: suminf.    0.33684 (1) obj. -64.5769 iterations 3
Cbc0038I Pass  26: suminf.    0.39283 (1) obj. -61.6743 iterations 1
Cbc0038I Pass  27: suminf.    1.25982 (3) obj. -61.6743 iterations 2
Cbc0038I Pass  28: suminf.    1.30020 (5) obj. -61.6743 iterations 8
Cbc0038I Pass  29: suminf.    0.95179 (4) obj. -61.6743 iterations 5
Cbc0038I Pass  30: suminf.    1.47174 (4) obj. -61.6743 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -58.7292 - took 0.06 seconds
Cbc0012I Integer solution of -58.72922 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -58.72926 found by DiveCoefficient after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 31 rows 18 columns
Cbc0031I 8 added rows had average density of 16.375
Cbc0013I At root node, 8 cuts changed objective from -88.179523 to -76.173368 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 982 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 550 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58.72926, took 2705 iterations and 24 nodes (0.22 seconds)
Cbc0032I Strong branching done 250 times (1945 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-16) rows, 50 (-12) columns and 463 (-185) elements
Clp1000I sum of infeasibilities 1.38829e-08 - average 2.89228e-10, 29 fixed columns
Coin0506I Presolve 19 (-29) rows, 21 (-29) columns and 76 (-387) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 72.731303
Clp0000I Optimal - objective value 72.731303
Coin0511I After Postsolve, objective 72.731303, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6701851 - largest nonzero change 0 ( 0%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value 109.40377
Clp0000I Optimal - objective value 109.40377
Clp0000I Optimal - objective value 109.40377
Coin0511I After Postsolve, objective 109.40377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.4037689 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.55867
Cbc0038I Pass   1: suminf.    1.29743 (5) obj. -62.9681 iterations 12
Cbc0038I Pass   2: suminf.    1.29743 (5) obj. -62.9681 iterations 1
Cbc0038I Solution found of -57.9322
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -60.3588
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.29743 (5) obj. -62.9681 iterations 0
Cbc0038I Pass   4: suminf.    1.29743 (5) obj. -62.9681 iterations 1
Cbc0038I Pass   5: suminf.    0.08894 (2) obj. -60.3588 iterations 7
Cbc0038I Pass   6: suminf.    0.28889 (1) obj. -65.2684 iterations 2
Cbc0038I Pass   7: suminf.    0.11875 (1) obj. -60.3588 iterations 1
Cbc0038I Pass   8: suminf.    1.46744 (12) obj. -60.3588 iterations 8
Cbc0038I Pass   9: suminf.    0.25737 (1) obj. -60.3588 iterations 3
Cbc0038I Pass  10: suminf.    0.28889 (1) obj. -61.2684 iterations 1
Cbc0038I Pass  11: suminf.    2.41585 (18) obj. -60.3588 iterations 14
Cbc0038I Pass  12: suminf.    1.05647 (12) obj. -60.3588 iterations 6
Cbc0038I Pass  13: suminf.    0.93049 (5) obj. -60.3588 iterations 17
Cbc0038I Pass  14: suminf.    0.60316 (3) obj. -60.3588 iterations 2
Cbc0038I Pass  15: suminf.    0.56721 (3) obj. -60.8957 iterations 1
Cbc0038I Pass  16: suminf.    0.52815 (3) obj. -60.3588 iterations 3
Cbc0038I Pass  17: suminf.    0.52815 (3) obj. -60.3588 iterations 1
Cbc0038I Pass  18: suminf.    0.71952 (4) obj. -60.3588 iterations 7
Cbc0038I Pass  19: suminf.    0.25706 (3) obj. -60.3588 iterations 4
Cbc0038I Pass  20: suminf.    0.61695 (3) obj. -60.3588 iterations 5
Cbc0038I Pass  21: suminf.    0.88779 (4) obj. -60.3588 iterations 6
Cbc0038I Pass  22: suminf.    0.88779 (4) obj. -60.3588 iterations 1
Cbc0038I Pass  23: suminf.    0.54539 (2) obj. -60.3588 iterations 3
Cbc0038I Pass  24: suminf.    0.49454 (2) obj. -61.9683 iterations 1
Cbc0038I Pass  25: suminf.    0.75248 (3) obj. -60.3588 iterations 2
Cbc0038I Pass  26: suminf.    0.61658 (2) obj. -60.3588 iterations 1
Cbc0038I Pass  27: suminf.    1.79781 (8) obj. -60.3588 iterations 7
Cbc0038I Pass  28: suminf.    1.79781 (8) obj. -60.3588 iterations 0
Cbc0038I Pass  29: suminf.    0.84278 (5) obj. -60.3588 iterations 8
Cbc0038I Pass  30: suminf.    0.60867 (2) obj. -60.4082 iterations 5
Cbc0038I Pass  31: suminf.    0.61153 (2) obj. -60.3588 iterations 2
Cbc0038I Pass  32: suminf.    3.12670 (13) obj. -60.3588 iterations 20
Cbc0038I Rounding solution of -58.7292 is better than previous of -57.9322

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -64.7265
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.53687 (13) obj. -64.7265 iterations 3
Cbc0038I Pass  33: suminf.    1.37741 (7) obj. -64.7265 iterations 1
Cbc0038I Pass  34: suminf.    0.28889 (1) obj. -65.2684 iterations 7
Cbc0038I Pass  35: suminf.    0.27011 (1) obj. -64.7265 iterations 1
Cbc0038I Pass  36: suminf.    1.17698 (9) obj. -64.7265 iterations 12
Cbc0038I Pass  37: suminf.    1.17698 (9) obj. -64.7265 iterations 1
Cbc0038I Pass  38: suminf.    0.92888 (5) obj. -64.7265 iterations 14
Cbc0038I Pass  39: suminf.    0.75442 (3) obj. -64.7265 iterations 3
Cbc0038I Pass  40: suminf.    0.24829 (3) obj. -64.7265 iterations 2
Cbc0038I Pass  41: suminf.    0.75442 (3) obj. -64.7265 iterations 3
Cbc0038I Pass  42: suminf.    1.47311 (8) obj. -64.7265 iterations 7
Cbc0038I Pass  43: suminf.    1.43562 (7) obj. -64.7265 iterations 2
Cbc0038I Pass  44: suminf.    0.41733 (3) obj. -64.7265 iterations 6
Cbc0038I Pass  45: suminf.    0.35345 (3) obj. -64.7265 iterations 1
Cbc0038I Pass  46: suminf.    0.50442 (3) obj. -64.7265 iterations 3
Cbc0038I Pass  47: suminf.    1.08869 (9) obj. -64.7265 iterations 9
Cbc0038I Pass  48: suminf.    0.78133 (6) obj. -67.0772 iterations 3
Cbc0038I Pass  49: suminf.    0.59354 (3) obj. -64.7265 iterations 8
Cbc0038I Pass  50: suminf.    0.59354 (3) obj. -64.7265 iterations 0
Cbc0038I Pass  51: suminf.    0.50756 (3) obj. -64.7265 iterations 2
Cbc0038I Pass  52: suminf.    0.17083 (2) obj. -64.99 iterations 2
Cbc0038I Pass  53: suminf.    0.59354 (3) obj. -64.7265 iterations 5
Cbc0038I Pass  54: suminf.    0.78888 (6) obj. -64.7265 iterations 10
Cbc0038I Pass  55: suminf.    0.34916 (4) obj. -64.7265 iterations 6
Cbc0038I Pass  56: suminf.    0.59354 (3) obj. -64.7265 iterations 6
Cbc0038I Pass  57: suminf.    0.59354 (3) obj. -64.7265 iterations 0
Cbc0038I Pass  58: suminf.    0.50756 (3) obj. -64.7265 iterations 2
Cbc0038I Pass  59: suminf.    0.17083 (2) obj. -64.99 iterations 2
Cbc0038I Pass  60: suminf.    0.59354 (3) obj. -64.7265 iterations 5
Cbc0038I Pass  61: suminf.    1.46224 (6) obj. -64.7265 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -58.7292 - took 0.06 seconds
Cbc0012I Integer solution of -58.72922 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 26 rows 28 columns
Cbc0031I 22 added rows had average density of 19.181818
Cbc0013I At root node, 22 cuts changed objective from -82.19729 to -69.063766 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2284 row cuts average 2.7 elements, 5 column cuts (5 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 569 row cuts average 36.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 312 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 241 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 284 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -58.72922 best solution, best possible -69.063766 (1.63 seconds)
Cbc0010I After 8 nodes, 5 on tree, -58.72922 best solution, best possible -69.017104 (2.43 seconds)
Cbc0001I Search completed - best objective -58.72922, took 3254 iterations and 24 nodes (3.17 seconds)
Cbc0032I Strong branching done 362 times (3370 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 19 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       3.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 1.15924e-06 - average 2.52008e-08, 5 fixed columns
Coin0506I Presolve 36 (-10) rows, 20 (-5) columns and 105 (-30) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 93.004831
Clp0000I Optimal - objective value 93.004831
Coin0511I After Postsolve, objective 93.004831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.004831
Clp0000I Optimal - objective value 93.004831
Clp0000I Optimal - objective value 93.004831
Coin0511I After Postsolve, objective 93.004831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.00483142 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.023
Cbc0038I Solution found of 0.675902
Cbc0038I Relaxing continuous gives -9.66437
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -9.66437 to -58.7292 (0.02 seconds)
Cbc0038I Round again with cutoff of -61.6743
Cbc0038I Pass   1: suminf.    1.23106 (5) obj. -61.6743 iterations 19
Cbc0038I Pass   2: suminf.    0.76528 (6) obj. -61.6743 iterations 5
Cbc0038I Pass   3: suminf.    0.26316 (1) obj. -61.6743 iterations 5
Cbc0038I Pass   4: suminf.    0.34279 (1) obj. -61.6743 iterations 1
Cbc0038I Pass   5: suminf.    1.47497 (5) obj. -61.6743 iterations 6
Cbc0038I Pass   6: suminf.    0.89168 (4) obj. -61.6743 iterations 3
Cbc0038I Pass   7: suminf.    0.55640 (3) obj. -61.6743 iterations 3
Cbc0038I Pass   8: suminf.    0.45263 (1) obj. -63.8912 iterations 4
Cbc0038I Pass   9: suminf.    0.49002 (2) obj. -61.6743 iterations 2
Cbc0038I Pass  10: suminf.    0.45263 (1) obj. -63.8912 iterations 2
Cbc0038I Pass  11: suminf.    1.45311 (6) obj. -61.6743 iterations 7
Cbc0038I Pass  12: suminf.    1.45311 (6) obj. -61.6743 iterations 0
Cbc0038I Pass  13: suminf.    1.85892 (6) obj. -61.6743 iterations 10
Cbc0038I Pass  14: suminf.    1.24872 (5) obj. -61.6743 iterations 4
Cbc0038I Pass  15: suminf.    0.71676 (2) obj. -63.4216 iterations 9
Cbc0038I Pass  16: suminf.    0.71676 (2) obj. -63.4216 iterations 0
Cbc0038I Pass  17: suminf.    0.49846 (2) obj. -61.6743 iterations 5
Cbc0038I Pass  18: suminf.    0.15789 (1) obj. -62.7232 iterations 2
Cbc0038I Pass  19: suminf.    0.64928 (5) obj. -61.6743 iterations 5
Cbc0038I Pass  20: suminf.    0.33185 (3) obj. -61.6743 iterations 4
Cbc0038I Pass  21: suminf.    0.20590 (2) obj. -61.6743 iterations 5
Cbc0038I Pass  22: suminf.    0.17895 (1) obj. -61.7537 iterations 2
Cbc0038I Pass  23: suminf.    1.00570 (3) obj. -61.6743 iterations 9
Cbc0038I Pass  24: suminf.    0.83147 (3) obj. -61.6743 iterations 4
Cbc0038I Pass  25: suminf.    0.33684 (1) obj. -64.5769 iterations 3
Cbc0038I Pass  26: suminf.    0.39283 (1) obj. -61.6743 iterations 1
Cbc0038I Pass  27: suminf.    1.25982 (3) obj. -61.6743 iterations 2
Cbc0038I Pass  28: suminf.    1.30020 (5) obj. -61.6743 iterations 8
Cbc0038I Pass  29: suminf.    0.95179 (4) obj. -61.6743 iterations 5
Cbc0038I Pass  30: suminf.    1.47174 (4) obj. -61.6743 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -58.7292 - took 0.03 seconds
Cbc0012I Integer solution of -58.72922 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -58.72926 found by DiveCoefficient after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 31 rows 18 columns
Cbc0031I 8 added rows had average density of 16.375
Cbc0013I At root node, 8 cuts changed objective from -88.179523 to -76.173368 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 982 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 550 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58.72926, took 2705 iterations and 24 nodes (0.25 seconds)
Cbc0032I Strong branching done 250 times (1945 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 45 (-18) columns and 371 (-278) elements
Clp1000I sum of infeasibilities 5.72762e-09 - average 1.332e-10, 26 fixed columns
Coin0506I Presolve 17 (-26) rows, 19 (-26) columns and 68 (-303) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 2.3246675 - largest nonzero change 2.0841843e-05 ( 0.0014417021%) - largest zero change 2.4590536e-05
Clp0000I Optimal - objective value 64.134413
Clp0000I Optimal - objective value 64.134413
Coin0511I After Postsolve, objective 64.134413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6920407 - largest nonzero change 1.8870114e-05 ( 0.0014417021%) - largest zero change 2.7521297e-05
Clp0000I Optimal - objective value 100.39318
Clp0000I Optimal - objective value 100.39318
Clp0000I Optimal - objective value 100.39318
Coin0511I After Postsolve, objective 100.39318, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.3931788 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.80731
Cbc0038I Pass   1: suminf.    0.85653 (4) obj. -62.5043 iterations 9
Cbc0038I Pass   2: suminf.    0.85653 (4) obj. -62.5043 iterations 1
Cbc0038I Solution found of -57.9322
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -60.3721
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85653 (4) obj. -62.5043 iterations 0
Cbc0038I Pass   4: suminf.    0.85653 (4) obj. -62.5043 iterations 1
Cbc0038I Pass   5: suminf.    0.08942 (2) obj. -60.3721 iterations 5
Cbc0038I Pass   6: suminf.    0.28889 (1) obj. -65.2684 iterations 2
Cbc0038I Pass   7: suminf.    0.11921 (1) obj. -60.3721 iterations 1
Cbc0038I Pass   8: suminf.    1.47380 (12) obj. -60.3721 iterations 7
Cbc0038I Pass   9: suminf.    0.25783 (1) obj. -60.3721 iterations 4
Cbc0038I Pass  10: suminf.    0.28889 (1) obj. -61.2684 iterations 1
Cbc0038I Pass  11: suminf.    2.57675 (18) obj. -60.3721 iterations 13
Cbc0038I Pass  12: suminf.    1.77536 (16) obj. -60.3721 iterations 5
Cbc0038I Pass  13: suminf.    2.20062 (7) obj. -60.3721 iterations 20
Cbc0038I Pass  14: suminf.    1.17076 (7) obj. -60.3721 iterations 5
Cbc0038I Pass  15: suminf.    0.79537 (5) obj. -60.3721 iterations 2
Cbc0038I Pass  16: suminf.    0.41313 (4) obj. -60.3721 iterations 6
Cbc0038I Pass  17: suminf.    0.98744 (5) obj. -60.3721 iterations 7
Cbc0038I Pass  18: suminf.    0.93824 (4) obj. -60.3721 iterations 2
Cbc0038I Pass  19: suminf.    1.13160 (8) obj. -60.3721 iterations 4
Cbc0038I Pass  20: suminf.    0.69020 (4) obj. -60.3721 iterations 5
Cbc0038I Pass  21: suminf.    0.41313 (4) obj. -60.3721 iterations 5
Cbc0038I Pass  22: suminf.    0.98744 (5) obj. -60.3721 iterations 7
Cbc0038I Pass  23: suminf.    0.93824 (4) obj. -60.3721 iterations 2
Cbc0038I Pass  24: suminf.    1.13160 (8) obj. -60.3721 iterations 4
Cbc0038I Pass  25: suminf.    0.69020 (4) obj. -60.3721 iterations 5
Cbc0038I Pass  26: suminf.    0.41313 (4) obj. -60.3721 iterations 5
Cbc0038I Pass  27: suminf.    0.98744 (5) obj. -60.3721 iterations 7
Cbc0038I Pass  28: suminf.    0.93824 (4) obj. -60.3721 iterations 2
Cbc0038I Pass  29: suminf.    1.13160 (8) obj. -60.3721 iterations 4
Cbc0038I Pass  30: suminf.    0.69020 (4) obj. -60.3721 iterations 5
Cbc0038I Pass  31: suminf.    0.41313 (4) obj. -60.3721 iterations 5
Cbc0038I Pass  32: suminf.    0.98744 (5) obj. -60.3721 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -57.9322 to -58.5403 (0.04 seconds)
Cbc0038I Round again with cutoff of -64.7638
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.12570 (12) obj. -64.7638 iterations 2
Cbc0038I Pass  33: suminf.    0.95570 (6) obj. -64.7638 iterations 1
Cbc0038I Pass  34: suminf.    0.28889 (1) obj. -65.2684 iterations 6
Cbc0038I Pass  35: suminf.    0.27140 (1) obj. -64.7638 iterations 1
Cbc0038I Pass  36: suminf.    2.44990 (12) obj. -64.7638 iterations 10
Cbc0038I Pass  37: suminf.    1.73929 (11) obj. -64.7638 iterations 5
Cbc0038I Pass  38: suminf.    1.50176 (6) obj. -64.7638 iterations 13
Cbc0038I Pass  39: suminf.    0.38464 (4) obj. -64.7638 iterations 7
Cbc0038I Pass  40: suminf.    0.35285 (3) obj. -64.7638 iterations 1
Cbc0038I Pass  41: suminf.    0.55099 (3) obj. -64.7638 iterations 2
Cbc0038I Pass  42: suminf.    0.17083 (2) obj. -65.99 iterations 2
Cbc0038I Pass  43: suminf.    0.35285 (3) obj. -64.7638 iterations 5
Cbc0038I Pass  44: suminf.    1.13666 (9) obj. -64.7638 iterations 9
Cbc0038I Pass  45: suminf.    1.13666 (9) obj. -64.7638 iterations 0
Cbc0038I Pass  46: suminf.    2.69919 (10) obj. -64.7638 iterations 11
Cbc0038I Pass  47: suminf.    2.47637 (7) obj. -64.7638 iterations 2
Cbc0038I Pass  48: suminf.    1.77410 (8) obj. -64.7638 iterations 5
Cbc0038I Pass  49: suminf.    1.57237 (7) obj. -64.7638 iterations 4
Cbc0038I Pass  50: suminf.    2.42560 (10) obj. -64.7638 iterations 8
Cbc0038I Pass  51: suminf.    2.42560 (10) obj. -64.7638 iterations 1
Cbc0038I Pass  52: suminf.    1.22863 (4) obj. -64.7638 iterations 13
Cbc0038I Pass  53: suminf.    1.22863 (4) obj. -64.7638 iterations 0
Cbc0038I Pass  54: suminf.    1.61255 (5) obj. -64.7638 iterations 4
Cbc0038I Pass  55: suminf.    1.00790 (3) obj. -64.7638 iterations 3
Cbc0038I Pass  56: suminf.    1.22863 (4) obj. -64.7638 iterations 4
Cbc0038I Pass  57: suminf.    2.89664 (11) obj. -64.7638 iterations 13
Cbc0038I Pass  58: suminf.    2.38485 (8) obj. -64.7638 iterations 3
Cbc0038I Pass  59: suminf.    1.11156 (4) obj. -64.7638 iterations 11
Cbc0038I Pass  60: suminf.    0.89482 (4) obj. -64.7638 iterations 2
Cbc0038I Pass  61: suminf.    0.97754 (4) obj. -64.7638 iterations 2
Cbc0038I Rounding solution of -58.7292 is better than previous of -58.5403

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -70.0337
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.75350 (12) obj. -70.0337 iterations 0
Cbc0038I Pass  62: suminf.    1.18699 (6) obj. -70.0337 iterations 1
Cbc0038I Pass  63: suminf.    1.02885 (10) obj. -70.0337 iterations 8
Cbc0038I Pass  64: suminf.    0.96065 (9) obj. -70.0337 iterations 2
Cbc0038I Pass  65: suminf.    0.90266 (4) obj. -70.0337 iterations 8
Cbc0038I Pass  66: suminf.    0.61229 (5) obj. -70.0337 iterations 2
Cbc0038I Pass  67: suminf.    1.07368 (6) obj. -70.0337 iterations 5
Cbc0038I Pass  68: suminf.    0.77078 (4) obj. -70.0337 iterations 1
Cbc0038I Pass  69: suminf.    0.71003 (4) obj. -70.0337 iterations 2
Cbc0038I Pass  70: suminf.    2.00753 (10) obj. -70.0337 iterations 4
Cbc0038I Pass  71: suminf.    0.71003 (4) obj. -70.0337 iterations 4
Cbc0038I Pass  72: suminf.    1.58540 (7) obj. -70.0337 iterations 10
Cbc0038I Pass  73: suminf.    1.25700 (7) obj. -70.0337 iterations 2
Cbc0038I Pass  74: suminf.    2.78709 (7) obj. -70.0337 iterations 8
Cbc0038I Pass  75: suminf.    1.07368 (6) obj. -70.0337 iterations 4
Cbc0038I Pass  76: suminf.    0.77078 (4) obj. -70.0337 iterations 1
Cbc0038I Pass  77: suminf.    0.71003 (4) obj. -70.0337 iterations 2
Cbc0038I Pass  78: suminf.    1.07368 (6) obj. -70.0337 iterations 5
Cbc0038I Pass  79: suminf.    2.83074 (14) obj. -70.0337 iterations 7
Cbc0038I Pass  80: suminf.    2.48225 (9) obj. -70.0337 iterations 6
Cbc0038I Pass  81: suminf.    2.10725 (8) obj. -70.0337 iterations 1
Cbc0038I Pass  82: suminf.    1.33490 (5) obj. -70.0337 iterations 9
Cbc0038I Pass  83: suminf.    1.33490 (5) obj. -70.0337 iterations 0
Cbc0038I Pass  84: suminf.    1.40633 (5) obj. -70.0337 iterations 1
Cbc0038I Pass  85: suminf.    1.17125 (5) obj. -70.0337 iterations 1
Cbc0038I Pass  86: suminf.    1.33490 (5) obj. -70.0337 iterations 5
Cbc0038I Pass  87: suminf.    1.65984 (6) obj. -70.0337 iterations 4
Cbc0038I Pass  88: suminf.    1.65984 (6) obj. -70.0337 iterations 0
Cbc0038I Pass  89: suminf.    1.33490 (5) obj. -70.0337 iterations 5
Cbc0038I Pass  90: suminf.    1.33490 (5) obj. -70.0337 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -58.7292 - took 0.07 seconds
Cbc0012I Integer solution of -58.72922 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 25 rows 27 columns
Cbc0031I 21 added rows had average density of 16
Cbc0013I At root node, 21 cuts changed objective from -82.330315 to -68.910261 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1479 row cuts average 2.9 elements, 5 column cuts (5 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 605 row cuts average 36.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 125 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 146 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 227 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 234 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 78 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.710 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -58.72922 best solution, best possible -68.910261 (1.56 seconds)
Cbc0010I After 8 nodes, 7 on tree, -58.72922 best solution, best possible -68.435416 (2.30 seconds)
Cbc0010I After 27 nodes, 6 on tree, -58.72922 best solution, best possible -68.435416 (3.00 seconds)
Cbc0001I Search completed - best objective -58.72922, took 2991 iterations and 34 nodes (3.11 seconds)
Cbc0032I Strong branching done 410 times (3518 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 13, 35 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       3.11

