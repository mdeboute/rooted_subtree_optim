Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 58 (-20) columns and 320 (-133) elements
Clp1000I sum of infeasibilities 1.40817e-06 - average 1.34112e-08, 50 fixed columns
Coin0506I Presolve 9 (-96) rows, 8 (-50) columns and 28 (-292) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 25057.634
Clp0000I Optimal - objective value 25057.634
Coin0511I After Postsolve, objective 25057.634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.39969581 - largest nonzero change 0 ( 0%) - largest zero change 2.9136797e-05
Clp0000I Optimal - objective value 25057.634
Clp0000I Optimal - objective value 25057.634
Clp0000I Optimal - objective value 25057.634
Coin0511I After Postsolve, objective 25057.634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25057.63356 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 58 columns (57 integer (57 of which binary)) and 319 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.533%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.17822
Cbc0038I Pass   1: suminf.    0.42308 (1) obj. -24874.9 iterations 13
Cbc0038I Solution found of -22669.1
Cbc0038I Relaxing continuous gives -22669.1
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -22669.1 to -23663.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -23803
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.42308 (1) obj. -24874.9 iterations 0
Cbc0038I Pass   3: suminf.    0.21749 (1) obj. -23803 iterations 1
Cbc0038I Pass   4: suminf.    0.21749 (1) obj. -23803 iterations 4
Cbc0038I Pass   5: suminf.    0.21749 (1) obj. -23803 iterations 4
Cbc0038I Pass   6: suminf.    0.63762 (3) obj. -23803 iterations 8
Cbc0038I Pass   7: suminf.    0.41461 (2) obj. -23803 iterations 7
Cbc0038I Pass   8: suminf.    0.41461 (2) obj. -23803 iterations 1
Cbc0038I Pass   9: suminf.    0.41461 (2) obj. -23803 iterations 3
Cbc0038I Pass  10: suminf.    0.41461 (2) obj. -23803 iterations 3
Cbc0038I Pass  11: suminf.    0.42308 (1) obj. -24874.9 iterations 3
Cbc0038I Pass  12: suminf.    0.04495 (1) obj. -23803 iterations 15
Cbc0038I Pass  13: suminf.    0.04495 (1) obj. -23803 iterations 5
Cbc0038I Pass  14: suminf.    0.47216 (2) obj. -23803 iterations 12
Cbc0038I Pass  15: suminf.    0.47048 (6) obj. -23803 iterations 2
Cbc0038I Pass  16: suminf.    1.17732 (5) obj. -23803 iterations 9
Cbc0038I Pass  17: suminf.    0.94405 (5) obj. -23803 iterations 8
Cbc0038I Pass  18: suminf.    0.27586 (2) obj. -24076.1 iterations 12
Cbc0038I Pass  19: suminf.    0.17275 (2) obj. -23803 iterations 10
Cbc0038I Pass  20: suminf.    0.11538 (1) obj. -24030.9 iterations 11
Cbc0038I Pass  21: suminf.    0.07167 (1) obj. -23803 iterations 2
Cbc0038I Pass  22: suminf.    0.13236 (2) obj. -23803 iterations 5
Cbc0038I Pass  23: suminf.    0.07167 (1) obj. -23803 iterations 6
Cbc0038I Pass  24: suminf.    0.07167 (1) obj. -23803 iterations 5
Cbc0038I Pass  25: suminf.    0.07167 (1) obj. -23803 iterations 6
Cbc0038I Pass  26: suminf.    0.07167 (1) obj. -23803 iterations 4
Cbc0038I Pass  27: suminf.    0.16100 (3) obj. -23803 iterations 6
Cbc0038I Pass  28: suminf.    0.13236 (2) obj. -23803 iterations 10
Cbc0038I Pass  29: suminf.    0.47048 (6) obj. -23803 iterations 13
Cbc0038I Pass  30: suminf.    0.47048 (6) obj. -23803 iterations 1
Cbc0038I Pass  31: suminf.    1.17732 (5) obj. -23803 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -23663.6 to -23808.9 (0.02 seconds)
Cbc0038I Round again with cutoff of -24058.6
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.42308 (1) obj. -24874.9 iterations 0
Cbc0038I Pass  32: suminf.    0.26652 (1) obj. -24058.6 iterations 1
Cbc0038I Pass  33: suminf.    0.26652 (1) obj. -24058.6 iterations 5
Cbc0038I Pass  34: suminf.    0.26652 (1) obj. -24058.6 iterations 4
Cbc0038I Pass  35: suminf.    0.58002 (7) obj. -24058.6 iterations 10
Cbc0038I Pass  36: suminf.    0.45000 (1) obj. -24374.9 iterations 7
Cbc0038I Pass  37: suminf.    0.66492 (2) obj. -24058.6 iterations 5
Cbc0038I Pass  38: suminf.    0.53201 (7) obj. -24058.6 iterations 2
Cbc0038I Pass  39: suminf.    1.07571 (5) obj. -24058.6 iterations 8
Cbc0038I Pass  40: suminf.    0.64076 (2) obj. -24058.6 iterations 9
Cbc0038I Pass  41: suminf.    0.72374 (2) obj. -24058.6 iterations 8
Cbc0038I Pass  42: suminf.    0.64062 (6) obj. -24058.6 iterations 8
Cbc0038I Pass  43: suminf.    0.58002 (7) obj. -24058.6 iterations 11
Cbc0038I Pass  44: suminf.    0.45000 (1) obj. -24374.9 iterations 6
Cbc0038I Pass  45: suminf.    0.26652 (1) obj. -24058.6 iterations 3
Cbc0038I Pass  46: suminf.    0.42308 (1) obj. -24874.9 iterations 2
Cbc0038I Pass  47: suminf.    0.77483 (2) obj. -24058.6 iterations 5
Cbc0038I Pass  48: suminf.    0.47507 (1) obj. -24058.6 iterations 7
Cbc0038I Pass  49: suminf.    0.34865 (2) obj. -24058.6 iterations 7
Cbc0038I Pass  50: suminf.    0.47507 (1) obj. -24058.6 iterations 6
Cbc0038I Pass  51: suminf.    1.27998 (4) obj. -24058.6 iterations 10
Cbc0038I Pass  52: suminf.    2.02446 (8) obj. -24058.6 iterations 8
Cbc0038I Pass  53: suminf.    0.48387 (2) obj. -24058.6 iterations 5
Cbc0038I Pass  54: suminf.    0.26652 (1) obj. -24058.6 iterations 3
Cbc0038I Pass  55: suminf.    0.42308 (1) obj. -24874.9 iterations 2
Cbc0038I Pass  56: suminf.    0.53732 (2) obj. -24058.6 iterations 3
Cbc0038I Pass  57: suminf.    0.11538 (1) obj. -24939.9 iterations 2
Cbc0038I Pass  58: suminf.    0.28441 (1) obj. -24058.6 iterations 2
Cbc0038I Pass  59: suminf.    1.44537 (7) obj. -24058.6 iterations 8
Cbc0038I Pass  60: suminf.    0.16935 (2) obj. -24058.6 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23808.9 - took 0.02 seconds
Cbc0012I Integer solution of -23808.88 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 58 columns, reduced to 9 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 5.5
Cbc0013I At root node, 4 cuts changed objective from -25057.634 to -24785.732 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 1.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23808.88, took 18 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 97 (-55) columns and 1375 (-1928) elements
Clp1000I sum of infeasibilities 2.18836e-07 - average 2.48678e-09, 90 fixed columns
Coin0506I Presolve 8 (-80) rows, 7 (-90) columns and 26 (-1349) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 25049.634
Clp0000I Optimal - objective value 25049.634
Coin0511I After Postsolve, objective 25049.634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.8210069 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 25105.857
Clp0000I Optimal - objective value 25105.857
Clp0000I Optimal - objective value 25105.857
Coin0511I After Postsolve, objective 25105.857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25105.85707 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 97 columns (97 integer (97 of which binary)) and 1378 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.730%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.09297
Cbc0038I Pass   1: suminf.    2.65837 (27) obj. -20829.5 iterations 13
Cbc0038I Pass   2: suminf.    2.65837 (27) obj. -20829.5 iterations 1
Cbc0038I Pass   3: suminf.    1.23939 (15) obj. -20812.8 iterations 12
Cbc0038I Solution found of -20796.2
Cbc0038I Rounding solution of -20991.5 is better than previous of -20796.2

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 97 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -20991.5 to -23663.6 (0.03 seconds)
Cbc0038I Round again with cutoff of -23806.5
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.81698 (32) obj. -23806.5 iterations 4
Cbc0038I Pass   5: suminf.    3.81698 (32) obj. -23806.5 iterations 0
Cbc0038I Pass   6: suminf.    1.09619 (10) obj. -23806.5 iterations 23
Cbc0038I Pass   7: suminf.    1.02823 (10) obj. -24612.2 iterations 2
Cbc0038I Pass   8: suminf.    0.42165 (1) obj. -23806.5 iterations 10
Cbc0038I Pass   9: suminf.    0.26923 (1) obj. -24601.2 iterations 1
Cbc0038I Pass  10: suminf.    0.61989 (5) obj. -23806.5 iterations 12
Cbc0038I Pass  11: suminf.    0.40392 (4) obj. -23806.5 iterations 4
Cbc0038I Pass  12: suminf.    0.49413 (2) obj. -23806.5 iterations 11
Cbc0038I Pass  13: suminf.    0.49217 (6) obj. -23806.5 iterations 2
Cbc0038I Pass  14: suminf.    1.17551 (5) obj. -23806.5 iterations 6
Cbc0038I Pass  15: suminf.    3.30959 (20) obj. -23806.5 iterations 23
Cbc0038I Pass  16: suminf.    1.53642 (15) obj. -24045.1 iterations 8
Cbc0038I Pass  17: suminf.    1.46159 (15) obj. -23806.5 iterations 3
Cbc0038I Pass  18: suminf.    0.11538 (1) obj. -24028.9 iterations 18
Cbc0038I Pass  19: suminf.    0.07273 (1) obj. -23806.5 iterations 2
Cbc0038I Pass  20: suminf.    0.94836 (10) obj. -23806.5 iterations 18
Cbc0038I Pass  21: suminf.    0.70738 (7) obj. -23806.5 iterations 8
Cbc0038I Pass  22: suminf.    0.11538 (1) obj. -24029.9 iterations 15
Cbc0038I Pass  23: suminf.    0.07254 (1) obj. -23806.5 iterations 2
Cbc0038I Pass  24: suminf.    0.59047 (6) obj. -23806.5 iterations 10
Cbc0038I Pass  25: suminf.    0.59047 (6) obj. -23806.5 iterations 4
Cbc0038I Pass  26: suminf.    0.87822 (9) obj. -23806.5 iterations 9
Cbc0038I Pass  27: suminf.    0.87822 (9) obj. -23806.5 iterations 3
Cbc0038I Pass  28: suminf.    0.11538 (1) obj. -24029.9 iterations 10
Cbc0038I Pass  29: suminf.    0.07254 (1) obj. -23806.5 iterations 2
Cbc0038I Pass  30: suminf.    0.63328 (7) obj. -23806.5 iterations 11
Cbc0038I Pass  31: suminf.    0.57267 (6) obj. -23806.5 iterations 4
Cbc0038I Pass  32: suminf.    0.11538 (1) obj. -24026.9 iterations 7
Cbc0038I Pass  33: suminf.    0.07312 (1) obj. -23806.5 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 97 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -23663.6 to -23808.9 (0.04 seconds)
Cbc0038I Round again with cutoff of -24065.7
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.83079 (32) obj. -24065.7 iterations 0
Cbc0038I Pass  34: suminf.    3.83079 (32) obj. -24065.7 iterations 0
Cbc0038I Pass  35: suminf.    1.73298 (17) obj. -24065.7 iterations 19
Cbc0038I Pass  36: suminf.    1.49864 (22) obj. -24065.7 iterations 4
Cbc0038I Pass  37: suminf.    1.07289 (5) obj. -24065.7 iterations 24
Cbc0038I Pass  38: suminf.    0.64474 (2) obj. -24065.7 iterations 6
Cbc0038I Pass  39: suminf.    0.71018 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  40: suminf.    1.72966 (12) obj. -24065.7 iterations 12
Cbc0038I Pass  41: suminf.    1.21655 (8) obj. -24065.7 iterations 2
Cbc0038I Pass  42: suminf.    0.12998 (1) obj. -24065.7 iterations 11
Cbc0038I Pass  43: suminf.    0.64496 (2) obj. -24065.7 iterations 9
Cbc0038I Pass  44: suminf.    0.70943 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  45: suminf.    1.03162 (12) obj. -24065.7 iterations 21
Cbc0038I Pass  46: suminf.    1.03162 (12) obj. -24065.7 iterations 0
Cbc0038I Pass  47: suminf.    1.07289 (5) obj. -24065.7 iterations 10
Cbc0038I Pass  48: suminf.    0.64474 (2) obj. -24065.7 iterations 6
Cbc0038I Pass  49: suminf.    0.71018 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  50: suminf.    1.33059 (9) obj. -24065.7 iterations 13
Cbc0038I Pass  51: suminf.    0.89564 (6) obj. -24065.7 iterations 3
Cbc0038I Pass  52: suminf.    0.70868 (2) obj. -24065.7 iterations 12
Cbc0038I Pass  53: suminf.    0.64518 (2) obj. -24065.7 iterations 7
Cbc0038I Pass  54: suminf.    0.99678 (7) obj. -24065.7 iterations 6
Cbc0038I Pass  55: suminf.    0.99678 (7) obj. -24065.7 iterations 0
Cbc0038I Pass  56: suminf.    0.70943 (2) obj. -24065.7 iterations 13
Cbc0038I Pass  57: suminf.    0.64496 (2) obj. -24065.7 iterations 7
Cbc0038I Pass  58: suminf.    0.38695 (4) obj. -24065.7 iterations 16
Cbc0038I Pass  59: suminf.    0.38695 (4) obj. -24065.7 iterations 4
Cbc0038I Pass  60: suminf.    0.64518 (2) obj. -24065.7 iterations 12
Cbc0038I Pass  61: suminf.    0.70868 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  62: suminf.    1.25410 (18) obj. -24065.7 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 97 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23808.9 - took 0.03 seconds
Cbc0012I Integer solution of -23808.88 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 97 columns, reduced to 11 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 6 cuts changed objective from -25075.948 to -24781.037 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 38 row cuts average 3.9 elements, 14 column cuts (14 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 25.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23808.88, took 45 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 58 (-20) columns and 320 (-133) elements
Clp1000I sum of infeasibilities 1.40817e-06 - average 1.34112e-08, 50 fixed columns
Coin0506I Presolve 9 (-96) rows, 8 (-50) columns and 28 (-292) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 25057.634
Clp0000I Optimal - objective value 25057.634
Coin0511I After Postsolve, objective 25057.634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.39969581 - largest nonzero change 0 ( 0%) - largest zero change 2.9136797e-05
Clp0000I Optimal - objective value 25057.634
Clp0000I Optimal - objective value 25057.634
Clp0000I Optimal - objective value 25057.634
Coin0511I After Postsolve, objective 25057.634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25057.63356 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 58 columns (57 integer (57 of which binary)) and 319 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.533%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.17822
Cbc0038I Pass   1: suminf.    0.42308 (1) obj. -24874.9 iterations 13
Cbc0038I Solution found of -22669.1
Cbc0038I Relaxing continuous gives -22669.1
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -22669.1 to -23663.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -23803
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.42308 (1) obj. -24874.9 iterations 0
Cbc0038I Pass   3: suminf.    0.21749 (1) obj. -23803 iterations 1
Cbc0038I Pass   4: suminf.    0.21749 (1) obj. -23803 iterations 4
Cbc0038I Pass   5: suminf.    0.21749 (1) obj. -23803 iterations 4
Cbc0038I Pass   6: suminf.    0.63762 (3) obj. -23803 iterations 8
Cbc0038I Pass   7: suminf.    0.41461 (2) obj. -23803 iterations 7
Cbc0038I Pass   8: suminf.    0.41461 (2) obj. -23803 iterations 1
Cbc0038I Pass   9: suminf.    0.41461 (2) obj. -23803 iterations 3
Cbc0038I Pass  10: suminf.    0.41461 (2) obj. -23803 iterations 3
Cbc0038I Pass  11: suminf.    0.42308 (1) obj. -24874.9 iterations 3
Cbc0038I Pass  12: suminf.    0.04495 (1) obj. -23803 iterations 15
Cbc0038I Pass  13: suminf.    0.04495 (1) obj. -23803 iterations 5
Cbc0038I Pass  14: suminf.    0.47216 (2) obj. -23803 iterations 12
Cbc0038I Pass  15: suminf.    0.47048 (6) obj. -23803 iterations 2
Cbc0038I Pass  16: suminf.    1.17732 (5) obj. -23803 iterations 9
Cbc0038I Pass  17: suminf.    0.94405 (5) obj. -23803 iterations 8
Cbc0038I Pass  18: suminf.    0.27586 (2) obj. -24076.1 iterations 12
Cbc0038I Pass  19: suminf.    0.17275 (2) obj. -23803 iterations 10
Cbc0038I Pass  20: suminf.    0.11538 (1) obj. -24030.9 iterations 11
Cbc0038I Pass  21: suminf.    0.07167 (1) obj. -23803 iterations 2
Cbc0038I Pass  22: suminf.    0.13236 (2) obj. -23803 iterations 5
Cbc0038I Pass  23: suminf.    0.07167 (1) obj. -23803 iterations 6
Cbc0038I Pass  24: suminf.    0.07167 (1) obj. -23803 iterations 5
Cbc0038I Pass  25: suminf.    0.07167 (1) obj. -23803 iterations 6
Cbc0038I Pass  26: suminf.    0.07167 (1) obj. -23803 iterations 4
Cbc0038I Pass  27: suminf.    0.16100 (3) obj. -23803 iterations 6
Cbc0038I Pass  28: suminf.    0.13236 (2) obj. -23803 iterations 10
Cbc0038I Pass  29: suminf.    0.47048 (6) obj. -23803 iterations 13
Cbc0038I Pass  30: suminf.    0.47048 (6) obj. -23803 iterations 1
Cbc0038I Pass  31: suminf.    1.17732 (5) obj. -23803 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -23663.6 to -23808.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -24058.6
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.42308 (1) obj. -24874.9 iterations 0
Cbc0038I Pass  32: suminf.    0.26652 (1) obj. -24058.6 iterations 1
Cbc0038I Pass  33: suminf.    0.26652 (1) obj. -24058.6 iterations 5
Cbc0038I Pass  34: suminf.    0.26652 (1) obj. -24058.6 iterations 4
Cbc0038I Pass  35: suminf.    0.58002 (7) obj. -24058.6 iterations 10
Cbc0038I Pass  36: suminf.    0.45000 (1) obj. -24374.9 iterations 7
Cbc0038I Pass  37: suminf.    0.66492 (2) obj. -24058.6 iterations 5
Cbc0038I Pass  38: suminf.    0.53201 (7) obj. -24058.6 iterations 2
Cbc0038I Pass  39: suminf.    1.07571 (5) obj. -24058.6 iterations 8
Cbc0038I Pass  40: suminf.    0.64076 (2) obj. -24058.6 iterations 9
Cbc0038I Pass  41: suminf.    0.72374 (2) obj. -24058.6 iterations 8
Cbc0038I Pass  42: suminf.    0.64062 (6) obj. -24058.6 iterations 8
Cbc0038I Pass  43: suminf.    0.58002 (7) obj. -24058.6 iterations 11
Cbc0038I Pass  44: suminf.    0.45000 (1) obj. -24374.9 iterations 6
Cbc0038I Pass  45: suminf.    0.26652 (1) obj. -24058.6 iterations 3
Cbc0038I Pass  46: suminf.    0.42308 (1) obj. -24874.9 iterations 2
Cbc0038I Pass  47: suminf.    0.77483 (2) obj. -24058.6 iterations 5
Cbc0038I Pass  48: suminf.    0.47507 (1) obj. -24058.6 iterations 7
Cbc0038I Pass  49: suminf.    0.34865 (2) obj. -24058.6 iterations 7
Cbc0038I Pass  50: suminf.    0.47507 (1) obj. -24058.6 iterations 6
Cbc0038I Pass  51: suminf.    1.27998 (4) obj. -24058.6 iterations 10
Cbc0038I Pass  52: suminf.    2.02446 (8) obj. -24058.6 iterations 8
Cbc0038I Pass  53: suminf.    0.48387 (2) obj. -24058.6 iterations 5
Cbc0038I Pass  54: suminf.    0.26652 (1) obj. -24058.6 iterations 3
Cbc0038I Pass  55: suminf.    0.42308 (1) obj. -24874.9 iterations 2
Cbc0038I Pass  56: suminf.    0.53732 (2) obj. -24058.6 iterations 3
Cbc0038I Pass  57: suminf.    0.11538 (1) obj. -24939.9 iterations 2
Cbc0038I Pass  58: suminf.    0.28441 (1) obj. -24058.6 iterations 2
Cbc0038I Pass  59: suminf.    1.44537 (7) obj. -24058.6 iterations 8
Cbc0038I Pass  60: suminf.    0.16935 (2) obj. -24058.6 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 58 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -23808.9 - took 0.04 seconds
Cbc0012I Integer solution of -23808.88 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 104 rows 58 columns, reduced to 9 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 5.5
Cbc0013I At root node, 4 cuts changed objective from -25057.634 to -24785.732 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 1.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23808.88, took 18 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 97 (-56) columns and 1375 (-1929) elements
Clp1000I sum of infeasibilities 2.18836e-07 - average 2.48678e-09, 90 fixed columns
Coin0506I Presolve 8 (-80) rows, 7 (-90) columns and 26 (-1349) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 25049.634
Clp0000I Optimal - objective value 25049.634
Coin0511I After Postsolve, objective 25049.634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.8210069 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 25105.857
Clp0000I Optimal - objective value 25105.857
Clp0000I Optimal - objective value 25105.857
Coin0511I After Postsolve, objective 25105.857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 25105.85707 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 97 columns (97 integer (97 of which binary)) and 1378 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.730%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.09297
Cbc0038I Pass   1: suminf.    2.65837 (27) obj. -20829.5 iterations 13
Cbc0038I Pass   2: suminf.    2.65837 (27) obj. -20829.5 iterations 1
Cbc0038I Pass   3: suminf.    1.23939 (15) obj. -20812.8 iterations 12
Cbc0038I Solution found of -20796.2
Cbc0038I Rounding solution of -20991.5 is better than previous of -20796.2

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 97 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -20991.5 to -23663.6 (0.02 seconds)
Cbc0038I Round again with cutoff of -23806.5
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.81698 (32) obj. -23806.5 iterations 4
Cbc0038I Pass   5: suminf.    3.81698 (32) obj. -23806.5 iterations 0
Cbc0038I Pass   6: suminf.    1.09619 (10) obj. -23806.5 iterations 23
Cbc0038I Pass   7: suminf.    1.02823 (10) obj. -24612.2 iterations 2
Cbc0038I Pass   8: suminf.    0.42165 (1) obj. -23806.5 iterations 10
Cbc0038I Pass   9: suminf.    0.26923 (1) obj. -24601.2 iterations 1
Cbc0038I Pass  10: suminf.    0.61989 (5) obj. -23806.5 iterations 12
Cbc0038I Pass  11: suminf.    0.40392 (4) obj. -23806.5 iterations 4
Cbc0038I Pass  12: suminf.    0.49413 (2) obj. -23806.5 iterations 11
Cbc0038I Pass  13: suminf.    0.49217 (6) obj. -23806.5 iterations 2
Cbc0038I Pass  14: suminf.    1.17551 (5) obj. -23806.5 iterations 6
Cbc0038I Pass  15: suminf.    3.30959 (20) obj. -23806.5 iterations 23
Cbc0038I Pass  16: suminf.    1.53642 (15) obj. -24045.1 iterations 8
Cbc0038I Pass  17: suminf.    1.46159 (15) obj. -23806.5 iterations 3
Cbc0038I Pass  18: suminf.    0.11538 (1) obj. -24028.9 iterations 18
Cbc0038I Pass  19: suminf.    0.07273 (1) obj. -23806.5 iterations 2
Cbc0038I Pass  20: suminf.    0.94836 (10) obj. -23806.5 iterations 18
Cbc0038I Pass  21: suminf.    0.70738 (7) obj. -23806.5 iterations 8
Cbc0038I Pass  22: suminf.    0.11538 (1) obj. -24029.9 iterations 15
Cbc0038I Pass  23: suminf.    0.07254 (1) obj. -23806.5 iterations 2
Cbc0038I Pass  24: suminf.    0.59047 (6) obj. -23806.5 iterations 10
Cbc0038I Pass  25: suminf.    0.59047 (6) obj. -23806.5 iterations 4
Cbc0038I Pass  26: suminf.    0.87822 (9) obj. -23806.5 iterations 9
Cbc0038I Pass  27: suminf.    0.87822 (9) obj. -23806.5 iterations 3
Cbc0038I Pass  28: suminf.    0.11538 (1) obj. -24029.9 iterations 10
Cbc0038I Pass  29: suminf.    0.07254 (1) obj. -23806.5 iterations 2
Cbc0038I Pass  30: suminf.    0.63328 (7) obj. -23806.5 iterations 11
Cbc0038I Pass  31: suminf.    0.57267 (6) obj. -23806.5 iterations 4
Cbc0038I Pass  32: suminf.    0.11538 (1) obj. -24026.9 iterations 7
Cbc0038I Pass  33: suminf.    0.07312 (1) obj. -23806.5 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 97 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -23663.6 to -23808.9 (0.04 seconds)
Cbc0038I Round again with cutoff of -24065.7
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.83079 (32) obj. -24065.7 iterations 0
Cbc0038I Pass  34: suminf.    3.83079 (32) obj. -24065.7 iterations 0
Cbc0038I Pass  35: suminf.    1.73298 (17) obj. -24065.7 iterations 19
Cbc0038I Pass  36: suminf.    1.49864 (22) obj. -24065.7 iterations 4
Cbc0038I Pass  37: suminf.    1.07289 (5) obj. -24065.7 iterations 24
Cbc0038I Pass  38: suminf.    0.64474 (2) obj. -24065.7 iterations 6
Cbc0038I Pass  39: suminf.    0.71018 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  40: suminf.    1.72966 (12) obj. -24065.7 iterations 12
Cbc0038I Pass  41: suminf.    1.21655 (8) obj. -24065.7 iterations 2
Cbc0038I Pass  42: suminf.    0.12998 (1) obj. -24065.7 iterations 11
Cbc0038I Pass  43: suminf.    0.64496 (2) obj. -24065.7 iterations 9
Cbc0038I Pass  44: suminf.    0.70943 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  45: suminf.    1.03162 (12) obj. -24065.7 iterations 21
Cbc0038I Pass  46: suminf.    1.03162 (12) obj. -24065.7 iterations 0
Cbc0038I Pass  47: suminf.    1.07289 (5) obj. -24065.7 iterations 10
Cbc0038I Pass  48: suminf.    0.64474 (2) obj. -24065.7 iterations 6
Cbc0038I Pass  49: suminf.    0.71018 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  50: suminf.    1.33059 (9) obj. -24065.7 iterations 13
Cbc0038I Pass  51: suminf.    0.89564 (6) obj. -24065.7 iterations 3
Cbc0038I Pass  52: suminf.    0.70868 (2) obj. -24065.7 iterations 12
Cbc0038I Pass  53: suminf.    0.64518 (2) obj. -24065.7 iterations 7
Cbc0038I Pass  54: suminf.    0.99678 (7) obj. -24065.7 iterations 6
Cbc0038I Pass  55: suminf.    0.99678 (7) obj. -24065.7 iterations 0
Cbc0038I Pass  56: suminf.    0.70943 (2) obj. -24065.7 iterations 13
Cbc0038I Pass  57: suminf.    0.64496 (2) obj. -24065.7 iterations 7
Cbc0038I Pass  58: suminf.    0.38695 (4) obj. -24065.7 iterations 16
Cbc0038I Pass  59: suminf.    0.38695 (4) obj. -24065.7 iterations 4
Cbc0038I Pass  60: suminf.    0.64518 (2) obj. -24065.7 iterations 12
Cbc0038I Pass  61: suminf.    0.70868 (2) obj. -24065.7 iterations 8
Cbc0038I Pass  62: suminf.    1.25410 (18) obj. -24065.7 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 97 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -23808.9 - took 0.03 seconds
Cbc0012I Integer solution of -23808.88 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 87 rows 97 columns, reduced to 11 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 6 cuts changed objective from -25075.948 to -24781.037 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 38 row cuts average 3.9 elements, 14 column cuts (14 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 25.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23808.88, took 45 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

