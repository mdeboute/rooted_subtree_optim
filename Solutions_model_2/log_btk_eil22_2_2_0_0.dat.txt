Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 4.31352e-06 - average 1.23243e-07, 3 fixed columns
Coin0506I Presolve 27 (-8) rows, 19 (-3) columns and 84 (-22) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Coin0511I After Postsolve, objective 54.124906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Coin0511I After Postsolve, objective 54.124906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.12490641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.97074
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.66143 iterations 19
Cbc0038I Solution found of 7.66143
Cbc0038I Relaxing continuous gives 7.66143
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 7.66143 to -18.7186 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.2593
Cbc0038I Pass   2: suminf.    1.16531 (3) obj. -22.2593 iterations 3
Cbc0038I Pass   3: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass   4: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass   5: suminf.    0.72531 (2) obj. -22.2593 iterations 1
Cbc0038I Pass   6: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass   7: suminf.    2.50916 (6) obj. -22.2593 iterations 8
Cbc0038I Pass   8: suminf.    1.02780 (6) obj. -22.2593 iterations 3
Cbc0038I Pass   9: suminf.    1.00244 (7) obj. -22.2593 iterations 1
Cbc0038I Pass  10: suminf.    0.87543 (4) obj. -22.2593 iterations 8
Cbc0038I Pass  11: suminf.    0.80439 (2) obj. -22.2593 iterations 6
Cbc0038I Pass  12: suminf.    0.58035 (2) obj. -22.2593 iterations 3
Cbc0038I Pass  13: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  14: suminf.    0.72531 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  15: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass  16: suminf.    0.64497 (3) obj. -22.2593 iterations 6
Cbc0038I Pass  17: suminf.    0.64497 (3) obj. -22.2593 iterations 0
Cbc0038I Pass  18: suminf.    1.01484 (3) obj. -22.2593 iterations 4
Cbc0038I Pass  19: suminf.    0.87819 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  20: suminf.    1.08467 (3) obj. -22.2593 iterations 2
Cbc0038I Pass  21: suminf.    1.01484 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  22: suminf.    1.09673 (3) obj. -22.2593 iterations 3
Cbc0038I Pass  23: suminf.    0.69412 (3) obj. -22.2593 iterations 4
Cbc0038I Pass  24: suminf.    0.69412 (3) obj. -22.2593 iterations 0
Cbc0038I Pass  25: suminf.    0.58035 (2) obj. -22.2593 iterations 8
Cbc0038I Pass  26: suminf.    0.58035 (2) obj. -22.2593 iterations 0
Cbc0038I Pass  27: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  28: suminf.    0.87444 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  29: suminf.    0.41321 (3) obj. -22.2593 iterations 9
Cbc0038I Pass  30: suminf.    0.41321 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  31: suminf.    0.59251 (5) obj. -22.2593 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -18.7186 - took 0.06 seconds
Cbc0012I Integer solution of -18.7186 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 24 rows 17 columns
Cbc0031I 11 added rows had average density of 19.181818
Cbc0013I At root node, 11 cuts changed objective from -54.124906 to -35.251572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1559 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 898 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -18.7186, took 2340 iterations and 10 nodes (0.20 seconds)
Cbc0032I Strong branching done 90 times (784 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-13) rows, 40 (-4) columns and 294 (-66) elements
Clp1000I sum of infeasibilities 1.02486e-08 - average 3.10565e-10, 28 fixed columns
Coin0506I Presolve 6 (-27) rows, 12 (-28) columns and 32 (-262) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 2.8047485 - largest nonzero change 0 ( 0%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value -10.949085
Clp0000I Optimal - objective value -10.949085
Coin0511I After Postsolve, objective -10.949085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5563686 - largest nonzero change 1.0208703e-05 ( 0.0010208703%) - largest zero change 1.8173624e-05
Clp0000I Optimal - objective value 60.622285
Clp0000I Optimal - objective value 60.622285
Clp0000I Optimal - objective value 60.622285
Coin0511I After Postsolve, objective 60.622285, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.62228528 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 40 columns (40 integer (40 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.06295
Cbc0038I Pass   1: suminf.    1.33815 (10) obj. -44.3306 iterations 8
Cbc0038I Pass   2: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Solution found of -13.2179
Cbc0038I Rounding solution of -17.3739 is better than previous of -13.2179

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20.9122
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass   4: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass   5: suminf.    0.50621 (2) obj. -20.9122 iterations 13
Cbc0038I Pass   6: suminf.    0.35000 (2) obj. -26.9253 iterations 2
Cbc0038I Pass   7: suminf.    0.20000 (1) obj. -24.4179 iterations 1
Cbc0038I Pass   8: suminf.    1.27132 (6) obj. -20.9122 iterations 7
Cbc0038I Pass   9: suminf.    0.91502 (5) obj. -20.9122 iterations 2
Cbc0038I Pass  10: suminf.    0.91888 (3) obj. -20.9122 iterations 5
Cbc0038I Pass  11: suminf.    0.57155 (3) obj. -22.9962 iterations 1
Cbc0038I Pass  12: suminf.    0.74955 (3) obj. -20.9122 iterations 4
Cbc0038I Pass  13: suminf.    0.28939 (2) obj. -20.9122 iterations 3
Cbc0038I Pass  14: suminf.    0.42236 (2) obj. -20.9122 iterations 3
Cbc0038I Pass  15: suminf.    1.37940 (9) obj. -22.9304 iterations 9
Cbc0038I Pass  16: suminf.    1.37940 (9) obj. -22.9304 iterations 0
Cbc0038I Pass  17: suminf.    1.05672 (4) obj. -20.9122 iterations 11
Cbc0038I Pass  18: suminf.    0.69140 (4) obj. -21.3328 iterations 2
Cbc0038I Pass  19: suminf.    0.73814 (4) obj. -20.9122 iterations 3
Cbc0038I Pass  20: suminf.    2.00790 (7) obj. -20.9122 iterations 3
Cbc0038I Pass  21: suminf.    1.38692 (5) obj. -20.9122 iterations 3
Cbc0038I Pass  22: suminf.    1.13380 (5) obj. -20.9122 iterations 2
Cbc0038I Pass  23: suminf.    1.07869 (4) obj. -20.9122 iterations 5
Cbc0038I Pass  24: suminf.    1.07869 (4) obj. -20.9122 iterations 0
Cbc0038I Pass  25: suminf.    1.21489 (4) obj. -20.9122 iterations 4
Cbc0038I Pass  26: suminf.    0.75653 (5) obj. -20.9122 iterations 2
Cbc0038I Pass  27: suminf.    0.70931 (4) obj. -20.9122 iterations 5
Cbc0038I Pass  28: suminf.    0.69140 (4) obj. -21.3328 iterations 2
Cbc0038I Pass  29: suminf.    0.73814 (4) obj. -20.9122 iterations 3
Cbc0038I Pass  30: suminf.    1.59623 (9) obj. -20.9122 iterations 14
Cbc0038I Pass  31: suminf.    1.32554 (9) obj. -24.7018 iterations 1
Cbc0038I Pass  32: suminf.    1.82315 (5) obj. -20.9122 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 21 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -13.2179 to -17.7186 (0.02 seconds)
Cbc0038I Round again with cutoff of -27.2809
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass  33: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass  34: suminf.    0.40926 (3) obj. -27.2809 iterations 14
Cbc0038I Pass  35: suminf.    0.40926 (3) obj. -27.2809 iterations 1
Cbc0038I Pass  36: suminf.    0.76885 (3) obj. -27.2809 iterations 3
Cbc0038I Pass  37: suminf.    0.76885 (3) obj. -27.2809 iterations 0
Cbc0038I Pass  38: suminf.    0.40926 (3) obj. -27.2809 iterations 1
Cbc0038I Pass  39: suminf.    1.25416 (9) obj. -27.2809 iterations 9
Cbc0038I Pass  40: suminf.    1.25416 (9) obj. -27.2809 iterations 0
Cbc0038I Pass  41: suminf.    0.92435 (6) obj. -27.2809 iterations 8
Cbc0038I Pass  42: suminf.    0.92435 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  43: suminf.    1.07831 (6) obj. -27.2809 iterations 2
Cbc0038I Pass  44: suminf.    1.07831 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  45: suminf.    0.92435 (6) obj. -27.2809 iterations 3
Cbc0038I Pass  46: suminf.    1.59863 (8) obj. -27.2809 iterations 11
Cbc0038I Pass  47: suminf.    1.33481 (8) obj. -27.2809 iterations 3
Cbc0038I Pass  48: suminf.    0.91932 (8) obj. -27.2809 iterations 12
Cbc0038I Pass  49: suminf.    0.91932 (8) obj. -27.2809 iterations 0
Cbc0038I Pass  50: suminf.    2.13051 (7) obj. -27.2809 iterations 5
Cbc0038I Pass  51: suminf.    2.13051 (7) obj. -27.2809 iterations 0
Cbc0038I Pass  52: suminf.    0.92435 (6) obj. -27.2809 iterations 4
Cbc0038I Pass  53: suminf.    0.92435 (6) obj. -27.2809 iterations 0
Cbc0038I Pass  54: suminf.    1.07831 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  55: suminf.    1.07831 (6) obj. -27.2809 iterations 0
Cbc0038I Pass  56: suminf.    1.33781 (8) obj. -27.2809 iterations 5
Cbc0038I Pass  57: suminf.    1.08899 (7) obj. -27.2809 iterations 2
Cbc0038I Pass  58: suminf.    1.26399 (6) obj. -27.2809 iterations 6
Cbc0038I Pass  59: suminf.    1.25768 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  60: suminf.    1.36673 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  61: suminf.    1.00999 (6) obj. -29.4213 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -17.7186 - took 0.02 seconds
Cbc0012I Integer solution of -17.71857 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 40 columns, reduced to 17 rows 20 columns
Cbc0031I 19 added rows had average density of 11.263158
Cbc0013I At root node, 19 cuts changed objective from -52.755539 to -20.294302 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1684 row cuts average 5.7 elements, 4 column cuts (4 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 794 row cuts average 28.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 74 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 184 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 253 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 74 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.747 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.71857 best solution, best possible -20.294302 (1.48 seconds)
Cbc0012I Integer solution of -18.25186 found by rounding after 1462 iterations and 1 nodes (1.50 seconds)
Cbc0012I Integer solution of -18.7186 found by DiveCoefficient after 1549 iterations and 3 nodes (1.64 seconds)
Cbc0001I Search completed - best objective -18.7186, took 1603 iterations and 4 nodes (1.65 seconds)
Cbc0032I Strong branching done 74 times (600 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 4.31352e-06 - average 1.23243e-07, 3 fixed columns
Coin0506I Presolve 27 (-8) rows, 19 (-3) columns and 84 (-22) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Coin0511I After Postsolve, objective 54.124906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Clp0000I Optimal - objective value 54.124906
Coin0511I After Postsolve, objective 54.124906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.12490641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.97074
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.66143 iterations 19
Cbc0038I Solution found of 7.66143
Cbc0038I Relaxing continuous gives 7.66143
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 7.66143 to -18.7186 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.2593
Cbc0038I Pass   2: suminf.    1.16531 (3) obj. -22.2593 iterations 3
Cbc0038I Pass   3: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass   4: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass   5: suminf.    0.72531 (2) obj. -22.2593 iterations 1
Cbc0038I Pass   6: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass   7: suminf.    2.50916 (6) obj. -22.2593 iterations 8
Cbc0038I Pass   8: suminf.    1.02780 (6) obj. -22.2593 iterations 3
Cbc0038I Pass   9: suminf.    1.00244 (7) obj. -22.2593 iterations 1
Cbc0038I Pass  10: suminf.    0.87543 (4) obj. -22.2593 iterations 8
Cbc0038I Pass  11: suminf.    0.80439 (2) obj. -22.2593 iterations 6
Cbc0038I Pass  12: suminf.    0.58035 (2) obj. -22.2593 iterations 3
Cbc0038I Pass  13: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  14: suminf.    0.72531 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  15: suminf.    0.58035 (2) obj. -22.2593 iterations 2
Cbc0038I Pass  16: suminf.    0.64497 (3) obj. -22.2593 iterations 6
Cbc0038I Pass  17: suminf.    0.64497 (3) obj. -22.2593 iterations 0
Cbc0038I Pass  18: suminf.    1.01484 (3) obj. -22.2593 iterations 4
Cbc0038I Pass  19: suminf.    0.87819 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  20: suminf.    1.08467 (3) obj. -22.2593 iterations 2
Cbc0038I Pass  21: suminf.    1.01484 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  22: suminf.    1.09673 (3) obj. -22.2593 iterations 3
Cbc0038I Pass  23: suminf.    0.69412 (3) obj. -22.2593 iterations 4
Cbc0038I Pass  24: suminf.    0.69412 (3) obj. -22.2593 iterations 0
Cbc0038I Pass  25: suminf.    0.58035 (2) obj. -22.2593 iterations 8
Cbc0038I Pass  26: suminf.    0.58035 (2) obj. -22.2593 iterations 0
Cbc0038I Pass  27: suminf.    0.91965 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  28: suminf.    0.87444 (2) obj. -22.2593 iterations 1
Cbc0038I Pass  29: suminf.    0.41321 (3) obj. -22.2593 iterations 9
Cbc0038I Pass  30: suminf.    0.41321 (3) obj. -22.2593 iterations 1
Cbc0038I Pass  31: suminf.    0.59251 (5) obj. -22.2593 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -18.7186 - took 0.06 seconds
Cbc0012I Integer solution of -18.7186 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 24 rows 17 columns
Cbc0031I 11 added rows had average density of 19.181818
Cbc0013I At root node, 11 cuts changed objective from -54.124906 to -35.251572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1559 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 898 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -18.7186, took 2340 iterations and 10 nodes (0.19 seconds)
Cbc0032I Strong branching done 90 times (784 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 40 (-5) columns and 294 (-67) elements
Clp1000I sum of infeasibilities 1.02486e-08 - average 3.10565e-10, 28 fixed columns
Coin0506I Presolve 6 (-27) rows, 12 (-28) columns and 32 (-262) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 2.8047485 - largest nonzero change 0 ( 0%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value -10.949085
Clp0000I Optimal - objective value -10.949085
Coin0511I After Postsolve, objective -10.949085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5563686 - largest nonzero change 1.0208703e-05 ( 0.0010208703%) - largest zero change 1.8173624e-05
Clp0000I Optimal - objective value 60.622285
Clp0000I Optimal - objective value 60.622285
Clp0000I Optimal - objective value 60.622285
Coin0511I After Postsolve, objective 60.622285, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.62228528 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 40 columns (40 integer (40 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.06295
Cbc0038I Pass   1: suminf.    1.33815 (10) obj. -44.3306 iterations 8
Cbc0038I Pass   2: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Solution found of -13.2179
Cbc0038I Rounding solution of -17.3739 is better than previous of -13.2179

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20.9122
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass   4: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass   5: suminf.    0.50621 (2) obj. -20.9122 iterations 13
Cbc0038I Pass   6: suminf.    0.35000 (2) obj. -26.9253 iterations 2
Cbc0038I Pass   7: suminf.    0.20000 (1) obj. -24.4179 iterations 1
Cbc0038I Pass   8: suminf.    1.27132 (6) obj. -20.9122 iterations 7
Cbc0038I Pass   9: suminf.    0.91502 (5) obj. -20.9122 iterations 2
Cbc0038I Pass  10: suminf.    0.91888 (3) obj. -20.9122 iterations 5
Cbc0038I Pass  11: suminf.    0.57155 (3) obj. -22.9962 iterations 1
Cbc0038I Pass  12: suminf.    0.74955 (3) obj. -20.9122 iterations 4
Cbc0038I Pass  13: suminf.    0.28939 (2) obj. -20.9122 iterations 3
Cbc0038I Pass  14: suminf.    0.42236 (2) obj. -20.9122 iterations 3
Cbc0038I Pass  15: suminf.    1.37940 (9) obj. -22.9304 iterations 9
Cbc0038I Pass  16: suminf.    1.37940 (9) obj. -22.9304 iterations 0
Cbc0038I Pass  17: suminf.    1.05672 (4) obj. -20.9122 iterations 11
Cbc0038I Pass  18: suminf.    0.69140 (4) obj. -21.3328 iterations 2
Cbc0038I Pass  19: suminf.    0.73814 (4) obj. -20.9122 iterations 3
Cbc0038I Pass  20: suminf.    2.00790 (7) obj. -20.9122 iterations 3
Cbc0038I Pass  21: suminf.    1.38692 (5) obj. -20.9122 iterations 3
Cbc0038I Pass  22: suminf.    1.13380 (5) obj. -20.9122 iterations 2
Cbc0038I Pass  23: suminf.    1.07869 (4) obj. -20.9122 iterations 5
Cbc0038I Pass  24: suminf.    1.07869 (4) obj. -20.9122 iterations 0
Cbc0038I Pass  25: suminf.    1.21489 (4) obj. -20.9122 iterations 4
Cbc0038I Pass  26: suminf.    0.75653 (5) obj. -20.9122 iterations 2
Cbc0038I Pass  27: suminf.    0.70931 (4) obj. -20.9122 iterations 5
Cbc0038I Pass  28: suminf.    0.69140 (4) obj. -21.3328 iterations 2
Cbc0038I Pass  29: suminf.    0.73814 (4) obj. -20.9122 iterations 3
Cbc0038I Pass  30: suminf.    1.59623 (9) obj. -20.9122 iterations 14
Cbc0038I Pass  31: suminf.    1.32554 (9) obj. -24.7018 iterations 1
Cbc0038I Pass  32: suminf.    1.82315 (5) obj. -20.9122 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 21 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -13.2179 to -17.7186 (0.02 seconds)
Cbc0038I Round again with cutoff of -27.2809
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass  33: suminf.    1.33815 (10) obj. -44.3306 iterations 0
Cbc0038I Pass  34: suminf.    0.40926 (3) obj. -27.2809 iterations 14
Cbc0038I Pass  35: suminf.    0.40926 (3) obj. -27.2809 iterations 1
Cbc0038I Pass  36: suminf.    0.76885 (3) obj. -27.2809 iterations 3
Cbc0038I Pass  37: suminf.    0.76885 (3) obj. -27.2809 iterations 0
Cbc0038I Pass  38: suminf.    0.40926 (3) obj. -27.2809 iterations 1
Cbc0038I Pass  39: suminf.    1.25416 (9) obj. -27.2809 iterations 9
Cbc0038I Pass  40: suminf.    1.25416 (9) obj. -27.2809 iterations 0
Cbc0038I Pass  41: suminf.    0.92435 (6) obj. -27.2809 iterations 8
Cbc0038I Pass  42: suminf.    0.92435 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  43: suminf.    1.07831 (6) obj. -27.2809 iterations 2
Cbc0038I Pass  44: suminf.    1.07831 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  45: suminf.    0.92435 (6) obj. -27.2809 iterations 3
Cbc0038I Pass  46: suminf.    1.59863 (8) obj. -27.2809 iterations 11
Cbc0038I Pass  47: suminf.    1.33481 (8) obj. -27.2809 iterations 3
Cbc0038I Pass  48: suminf.    0.91932 (8) obj. -27.2809 iterations 12
Cbc0038I Pass  49: suminf.    0.91932 (8) obj. -27.2809 iterations 0
Cbc0038I Pass  50: suminf.    2.13051 (7) obj. -27.2809 iterations 5
Cbc0038I Pass  51: suminf.    2.13051 (7) obj. -27.2809 iterations 0
Cbc0038I Pass  52: suminf.    0.92435 (6) obj. -27.2809 iterations 4
Cbc0038I Pass  53: suminf.    0.92435 (6) obj. -27.2809 iterations 0
Cbc0038I Pass  54: suminf.    1.07831 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  55: suminf.    1.07831 (6) obj. -27.2809 iterations 0
Cbc0038I Pass  56: suminf.    1.33781 (8) obj. -27.2809 iterations 5
Cbc0038I Pass  57: suminf.    1.08899 (7) obj. -27.2809 iterations 2
Cbc0038I Pass  58: suminf.    1.26399 (6) obj. -27.2809 iterations 6
Cbc0038I Pass  59: suminf.    1.25768 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  60: suminf.    1.36673 (6) obj. -27.2809 iterations 1
Cbc0038I Pass  61: suminf.    1.00999 (6) obj. -29.4213 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 20 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -17.7186 - took 0.02 seconds
Cbc0012I Integer solution of -17.71857 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 40 columns, reduced to 17 rows 20 columns
Cbc0031I 19 added rows had average density of 11.263158
Cbc0013I At root node, 19 cuts changed objective from -52.755539 to -20.294302 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1684 row cuts average 5.7 elements, 4 column cuts (4 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 794 row cuts average 28.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 74 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 184 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 253 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 74 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.757 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.71857 best solution, best possible -20.294302 (1.53 seconds)
Cbc0012I Integer solution of -18.25186 found by rounding after 1462 iterations and 1 nodes (1.54 seconds)
Cbc0012I Integer solution of -18.7186 found by DiveCoefficient after 1549 iterations and 3 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -18.7186, took 1603 iterations and 4 nodes (1.70 seconds)
Cbc0032I Strong branching done 74 times (600 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.71

