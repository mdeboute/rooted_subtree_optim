Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 169 (-36) rows, 94 (-9) columns and 519 (-84) elements
Clp1000I sum of infeasibilities 1.67345e-05 - average 9.90209e-08, 23 fixed columns
Coin0506I Presolve 122 (-47) rows, 70 (-24) columns and 377 (-142) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 1.7997327 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 45.740613
Clp0000I Optimal - objective value 45.740613
Coin0511I After Postsolve, objective 45.740613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.740613
Clp0000I Optimal - objective value 45.740613
Clp0000I Optimal - objective value 45.740613
Coin0511I After Postsolve, objective 45.740613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.74061297 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 94 columns (93 integer (93 of which binary)) and 525 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.07927
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.15611 iterations 40
Cbc0038I Solution found of 7.15611
Cbc0038I Relaxing continuous gives 7.15611
Cbc0038I Rounding solution of -11.6002 is better than previous of 7.15611

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 94 columns, reduced to 38 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -11.6002 to -17.2191 (0.04 seconds)
Cbc0038I Round again with cutoff of -20.0713
Cbc0038I Pass   2: suminf.    2.44009 (9) obj. -20.0713 iterations 13
Cbc0038I Pass   3: suminf.    1.54053 (6) obj. -20.0713 iterations 2
Cbc0038I Pass   4: suminf.    1.54053 (6) obj. -20.0713 iterations 1
Cbc0038I Pass   5: suminf.    1.21525 (3) obj. -20.0713 iterations 9
Cbc0038I Pass   6: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass   7: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass   8: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass   9: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  10: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  11: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  12: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  13: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  14: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  15: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  16: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  17: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  18: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  19: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  20: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  21: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  22: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  23: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  24: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  25: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  26: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  27: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  28: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  29: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  30: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  31: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Rounding solution of -19.4088 is better than previous of -17.2191

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 94 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -25.2052
Cbc0038I Pass  31: suminf.    3.07365 (11) obj. -25.2052 iterations 3
Cbc0038I Pass  32: suminf.    2.10183 (6) obj. -25.2052 iterations 5
Cbc0038I Pass  33: suminf.    2.10183 (6) obj. -25.2052 iterations 1
Cbc0038I Pass  34: suminf.    1.04032 (3) obj. -25.2052 iterations 11
Cbc0038I Pass  35: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  36: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  37: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  38: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  39: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  40: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  41: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  42: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  43: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  44: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  45: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  46: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  47: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  48: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  49: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  50: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  51: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  52: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  53: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  54: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  55: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  56: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  57: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  58: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  59: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  60: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 94 columns, reduced to 42 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -19.4088 - took 0.07 seconds
Cbc0012I Integer solution of -19.408846 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 168 rows 94 columns, reduced to 39 rows 30 columns
Cbc0012I Integer solution of -19.768996 found by RINS after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 23 added rows had average density of 55.304348
Cbc0013I At root node, 23 cuts changed objective from -45.740613 to -34.890235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6351 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1687 row cuts average 94.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 4 nodes, 1 on tree, -19.768996 best solution, best possible -34.88988 (0.71 seconds)
Cbc0038I Full problem 168 rows 94 columns, reduced to 17 rows 16 columns
Cbc0016I Integer solution of -19.817606 found by strong branching after 6314 iterations and 61 nodes (0.91 seconds)
Cbc0038I Full problem 168 rows 94 columns, reduced to 44 rows 28 columns
Cbc0001I Search completed - best objective -19.8176057, took 7146 iterations and 100 nodes (0.97 seconds)
Cbc0032I Strong branching done 906 times (12010 iterations), fathomed 8 nodes and fixed 33 variables
Cbc0035I Maximum depth 25, 391 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       0.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-82) rows, 139 (-63) columns and 2518 (-3135) elements
Clp1000I sum of infeasibilities 1.36934e-07 - average 1.12241e-09, 21 fixed columns
Coin0506I Presolve 101 (-21) rows, 118 (-21) columns and 1823 (-695) elements
Clp0006I 0  Obj 20.969524 Dual inf 9.8927329 (115)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 1.8998985 - largest nonzero change 0 ( 0%) - largest zero change 2.9071043e-05
Clp0000I Optimal - objective value 63.958028
Clp0000I Optimal - objective value 63.958028
Coin0511I After Postsolve, objective 63.958028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.958028
Clp0000I Optimal - objective value 63.958028
Clp0000I Optimal - objective value 63.958028
Clp0000I Optimal - objective value 63.958028
Coin0511I After Postsolve, objective 63.958028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.95802777 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 141 columns (141 integer (141 of which binary)) and 2535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 2.97609
Cbc0038I Pass   1: suminf.    2.39628 (38) obj. -52.5797 iterations 20
Cbc0038I Pass   2: suminf.    0.94919 (19) obj. -28.5758 iterations 19
Cbc0038I Solution found of -7.64265
Cbc0038I Rounding solution of -9.49565 is better than previous of -7.64265

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14.1925
Cbc0038I Pass   3: suminf.    2.39628 (38) obj. -52.5797 iterations 0
Cbc0038I Pass   4: suminf.    0.88139 (18) obj. -27.6436 iterations 20
Cbc0038I Pass   5: suminf.    0.57897 (6) obj. -14.1925 iterations 29
Cbc0038I Pass   6: suminf.    0.67527 (3) obj. -14.1925 iterations 14
Cbc0038I Pass   7: suminf.    0.59734 (4) obj. -14.1925 iterations 9
Cbc0038I Pass   8: suminf.    1.41163 (13) obj. -14.1925 iterations 29
Cbc0038I Pass   9: suminf.    0.97004 (12) obj. -14.1925 iterations 18
Cbc0038I Pass  10: suminf.    1.19706 (5) obj. -14.1925 iterations 23
Cbc0038I Pass  11: suminf.    0.49906 (4) obj. -14.1925 iterations 13
Cbc0038I Pass  12: suminf.    0.79857 (4) obj. -14.1925 iterations 9
Cbc0038I Pass  13: suminf.    1.73299 (11) obj. -14.1925 iterations 24
Cbc0038I Pass  14: suminf.    1.02239 (9) obj. -14.1925 iterations 11
Cbc0038I Pass  15: suminf.    0.92984 (4) obj. -14.1925 iterations 19
Cbc0038I Pass  16: suminf.    0.86000 (4) obj. -14.1925 iterations 2
Cbc0038I Pass  17: suminf.    1.31692 (5) obj. -14.1925 iterations 10
Cbc0038I Pass  18: suminf.    1.31692 (5) obj. -14.1925 iterations 0
Cbc0038I Pass  19: suminf.    1.29016 (5) obj. -14.1925 iterations 10
Cbc0038I Pass  20: suminf.    1.29016 (5) obj. -14.1925 iterations 2
Cbc0038I Pass  21: suminf.    1.31692 (5) obj. -14.1925 iterations 3
Cbc0038I Pass  22: suminf.    1.72410 (14) obj. -14.1925 iterations 18
Cbc0038I Pass  23: suminf.    1.72410 (14) obj. -14.1925 iterations 0
Cbc0038I Pass  24: suminf.    0.81424 (5) obj. -14.1925 iterations 23
Cbc0038I Pass  25: suminf.    0.81424 (5) obj. -14.1925 iterations 0
Cbc0038I Pass  26: suminf.    0.96641 (4) obj. -14.1925 iterations 8
Cbc0038I Pass  27: suminf.    0.25872 (4) obj. -14.1925 iterations 13
Cbc0038I Pass  28: suminf.    0.66329 (4) obj. -14.1925 iterations 11
Cbc0038I Pass  29: suminf.    0.30066 (4) obj. -14.1925 iterations 10
Cbc0038I Pass  30: suminf.    0.95412 (5) obj. -14.1925 iterations 11
Cbc0038I Pass  31: suminf.    0.85487 (4) obj. -14.1925 iterations 7
Cbc0038I Pass  32: suminf.    1.23045 (8) obj. -14.1925 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.64265 to -12.843 (0.08 seconds)
Cbc0038I Round again with cutoff of -22.6467
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.39628 (38) obj. -52.5797 iterations 0
Cbc0038I Pass  33: suminf.    0.68371 (15) obj. -24.8413 iterations 23
Cbc0038I Pass  34: suminf.    1.27920 (9) obj. -22.6467 iterations 34
Cbc0038I Pass  35: suminf.    1.27920 (9) obj. -22.6467 iterations 1
Cbc0038I Pass  36: suminf.    1.25537 (8) obj. -22.6467 iterations 15
Cbc0038I Pass  37: suminf.    1.25537 (8) obj. -22.6467 iterations 5
Cbc0038I Pass  38: suminf.    1.34380 (8) obj. -22.6467 iterations 7
Cbc0038I Pass  39: suminf.    1.34380 (8) obj. -22.6467 iterations 6
Cbc0038I Pass  40: suminf.    1.68527 (16) obj. -22.6467 iterations 32
Cbc0038I Pass  41: suminf.    0.84446 (12) obj. -24.3973 iterations 10
Cbc0038I Pass  42: suminf.    1.46517 (9) obj. -22.6467 iterations 23
Cbc0038I Pass  43: suminf.    1.46517 (9) obj. -22.6467 iterations 5
Cbc0038I Pass  44: suminf.    1.25537 (8) obj. -22.6467 iterations 22
Cbc0038I Pass  45: suminf.    1.25537 (8) obj. -22.6467 iterations 0
Cbc0038I Pass  46: suminf.    1.34380 (8) obj. -22.6467 iterations 7
Cbc0038I Pass  47: suminf.    1.34380 (8) obj. -22.6467 iterations 5
Cbc0038I Pass  48: suminf.    1.25537 (8) obj. -22.6467 iterations 9
Cbc0038I Pass  49: suminf.    1.04288 (9) obj. -22.6467 iterations 13
Cbc0038I Pass  50: suminf.    1.03992 (9) obj. -22.6467 iterations 9
Cbc0038I Pass  51: suminf.    0.74780 (8) obj. -22.6467 iterations 10
Cbc0038I Pass  52: suminf.    0.55968 (9) obj. -22.6467 iterations 7
Cbc0038I Pass  53: suminf.    0.90124 (8) obj. -22.6467 iterations 10
Cbc0038I Pass  54: suminf.    1.83093 (14) obj. -22.6467 iterations 21
Cbc0038I Pass  55: suminf.    1.53347 (15) obj. -22.6467 iterations 2
Cbc0038I Pass  56: suminf.    1.18720 (9) obj. -22.6467 iterations 23
Cbc0038I Pass  57: suminf.    1.12127 (10) obj. -22.6467 iterations 7
Cbc0038I Pass  58: suminf.    1.18720 (9) obj. -22.6467 iterations 10
Cbc0038I Pass  59: suminf.    1.22135 (13) obj. -22.6467 iterations 24
Cbc0038I Pass  60: suminf.    1.03718 (13) obj. -22.6467 iterations 6
Cbc0038I Pass  61: suminf.    1.53041 (9) obj. -22.6467 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -12.843 - took 0.09 seconds
Cbc0012I Integer solution of -12.842986 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 15 rows 16 columns
Cbc0031I 60 added rows had average density of 47.85
Cbc0013I At root node, 60 cuts changed objective from -56.463436 to -26.30488 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17063 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1720 row cuts average 132.3 elements, 0 column cuts (0 active)  in 0.216 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 761 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 935 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.600 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.842986 best solution, best possible -26.30488 (2.90 seconds)
Cbc0012I Integer solution of -16.213546 found by rounding after 5763 iterations and 2 nodes (3.24 seconds)
Cbc0012I Integer solution of -19.163126 found by rounding after 5779 iterations and 3 nodes (3.26 seconds)
Cbc0010I After 15 nodes, 8 on tree, -19.163126 best solution, best possible -26.30488 (3.62 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 59 rows 71 columns
Cbc0012I Integer solution of -19.291576 found by DiveCoefficient after 7361 iterations and 69 nodes (3.98 seconds)
Cbc0012I Integer solution of -19.817606 found by rounding after 7384 iterations and 81 nodes (4.00 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 6 rows 11 columns
Cbc0010I After 103 nodes, 4 on tree, -19.817606 best solution, best possible -26.30488 (4.36 seconds)
Cbc0001I Search completed - best objective -19.8176057, took 8660 iterations and 116 nodes (4.68 seconds)
Cbc0032I Strong branching done 966 times (17351 iterations), fathomed 11 nodes and fixed 16 variables
Cbc0035I Maximum depth 17, 347 variables fixed on reduced cost
Total time (CPU seconds):       3.87   (Wallclock seconds):       4.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 169 (-36) rows, 94 (-9) columns and 519 (-84) elements
Clp1000I sum of infeasibilities 1.67345e-05 - average 9.90209e-08, 23 fixed columns
Coin0506I Presolve 122 (-47) rows, 70 (-24) columns and 377 (-142) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 1.7997327 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 45.740613
Clp0000I Optimal - objective value 45.740613
Coin0511I After Postsolve, objective 45.740613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.740613
Clp0000I Optimal - objective value 45.740613
Clp0000I Optimal - objective value 45.740613
Coin0511I After Postsolve, objective 45.740613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.74061297 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 94 columns (93 integer (93 of which binary)) and 525 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.07927
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.15611 iterations 40
Cbc0038I Solution found of 7.15611
Cbc0038I Relaxing continuous gives 7.15611
Cbc0038I Rounding solution of -11.6002 is better than previous of 7.15611

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 94 columns, reduced to 38 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -11.6002 to -17.2191 (0.04 seconds)
Cbc0038I Round again with cutoff of -20.0713
Cbc0038I Pass   2: suminf.    2.44009 (9) obj. -20.0713 iterations 13
Cbc0038I Pass   3: suminf.    1.54053 (6) obj. -20.0713 iterations 2
Cbc0038I Pass   4: suminf.    1.54053 (6) obj. -20.0713 iterations 1
Cbc0038I Pass   5: suminf.    1.21525 (3) obj. -20.0713 iterations 9
Cbc0038I Pass   6: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass   7: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass   8: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass   9: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  10: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  11: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  12: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  13: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  14: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  15: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  16: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  17: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  18: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  19: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  20: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  21: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  22: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  23: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  24: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  25: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  26: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Pass  27: suminf.    0.38439 (2) obj. -20.0713 iterations 2
Cbc0038I Pass  28: suminf.    0.78933 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  29: suminf.    0.78933 (3) obj. -20.0713 iterations 1
Cbc0038I Pass  30: suminf.    1.21525 (3) obj. -20.0713 iterations 6
Cbc0038I Pass  31: suminf.    0.44307 (1) obj. -20.0713 iterations 2
Cbc0038I Rounding solution of -19.4088 is better than previous of -17.2191

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 94 columns, reduced to 40 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -25.2052
Cbc0038I Pass  31: suminf.    3.07365 (11) obj. -25.2052 iterations 3
Cbc0038I Pass  32: suminf.    2.10183 (6) obj. -25.2052 iterations 5
Cbc0038I Pass  33: suminf.    2.10183 (6) obj. -25.2052 iterations 1
Cbc0038I Pass  34: suminf.    1.04032 (3) obj. -25.2052 iterations 11
Cbc0038I Pass  35: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  36: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  37: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  38: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  39: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  40: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  41: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  42: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  43: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  44: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  45: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  46: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  47: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  48: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  49: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  50: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  51: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  52: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  53: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  54: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I Pass  55: suminf.    0.67789 (3) obj. -25.2052 iterations 2
Cbc0038I Pass  56: suminf.    1.25492 (4) obj. -25.2052 iterations 6
Cbc0038I Pass  57: suminf.    1.25492 (4) obj. -25.2052 iterations 1
Cbc0038I Pass  58: suminf.    1.04032 (3) obj. -25.2052 iterations 7
Cbc0038I Pass  59: suminf.    0.68710 (2) obj. -25.2052 iterations 2
Cbc0038I Pass  60: suminf.    0.71353 (2) obj. -25.2052 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 94 columns, reduced to 42 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -19.4088 - took 0.07 seconds
Cbc0012I Integer solution of -19.408846 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 168 rows 94 columns, reduced to 39 rows 30 columns
Cbc0012I Integer solution of -19.768996 found by RINS after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 23 added rows had average density of 55.304348
Cbc0013I At root node, 23 cuts changed objective from -45.740613 to -34.890235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6351 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1687 row cuts average 94.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.768996 best solution, best possible -34.890235 (0.73 seconds)
Cbc0038I Full problem 168 rows 94 columns, reduced to 17 rows 16 columns
Cbc0016I Integer solution of -19.817606 found by strong branching after 6314 iterations and 61 nodes (0.99 seconds)
Cbc0038I Full problem 168 rows 94 columns, reduced to 44 rows 28 columns
Cbc0001I Search completed - best objective -19.8176057, took 7146 iterations and 100 nodes (1.12 seconds)
Cbc0032I Strong branching done 906 times (12010 iterations), fathomed 8 nodes and fixed 33 variables
Cbc0035I Maximum depth 25, 391 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-83) rows, 139 (-64) columns and 2518 (-3136) elements
Clp1000I sum of infeasibilities 1.36934e-07 - average 1.12241e-09, 21 fixed columns
Coin0506I Presolve 101 (-21) rows, 118 (-21) columns and 1823 (-695) elements
Clp0006I 0  Obj 20.969524 Dual inf 9.8927329 (115)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 1.8998985 - largest nonzero change 0 ( 0%) - largest zero change 2.9071043e-05
Clp0000I Optimal - objective value 63.958028
Clp0000I Optimal - objective value 63.958028
Coin0511I After Postsolve, objective 63.958028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.958028
Clp0000I Optimal - objective value 63.958028
Clp0000I Optimal - objective value 63.958028
Clp0000I Optimal - objective value 63.958028
Coin0511I After Postsolve, objective 63.958028, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.95802777 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 141 columns (141 integer (141 of which binary)) and 2535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 2.97609
Cbc0038I Pass   1: suminf.    2.39628 (38) obj. -52.5797 iterations 20
Cbc0038I Pass   2: suminf.    0.94919 (19) obj. -28.5758 iterations 19
Cbc0038I Solution found of -7.64265
Cbc0038I Rounding solution of -9.49565 is better than previous of -7.64265

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14.1925
Cbc0038I Pass   3: suminf.    2.39628 (38) obj. -52.5797 iterations 0
Cbc0038I Pass   4: suminf.    0.88139 (18) obj. -27.6436 iterations 20
Cbc0038I Pass   5: suminf.    0.57897 (6) obj. -14.1925 iterations 29
Cbc0038I Pass   6: suminf.    0.67527 (3) obj. -14.1925 iterations 14
Cbc0038I Pass   7: suminf.    0.59734 (4) obj. -14.1925 iterations 9
Cbc0038I Pass   8: suminf.    1.41163 (13) obj. -14.1925 iterations 29
Cbc0038I Pass   9: suminf.    0.97004 (12) obj. -14.1925 iterations 18
Cbc0038I Pass  10: suminf.    1.19706 (5) obj. -14.1925 iterations 23
Cbc0038I Pass  11: suminf.    0.49906 (4) obj. -14.1925 iterations 13
Cbc0038I Pass  12: suminf.    0.79857 (4) obj. -14.1925 iterations 9
Cbc0038I Pass  13: suminf.    1.73299 (11) obj. -14.1925 iterations 24
Cbc0038I Pass  14: suminf.    1.02239 (9) obj. -14.1925 iterations 11
Cbc0038I Pass  15: suminf.    0.92984 (4) obj. -14.1925 iterations 19
Cbc0038I Pass  16: suminf.    0.86000 (4) obj. -14.1925 iterations 2
Cbc0038I Pass  17: suminf.    1.31692 (5) obj. -14.1925 iterations 10
Cbc0038I Pass  18: suminf.    1.31692 (5) obj. -14.1925 iterations 0
Cbc0038I Pass  19: suminf.    1.29016 (5) obj. -14.1925 iterations 10
Cbc0038I Pass  20: suminf.    1.29016 (5) obj. -14.1925 iterations 2
Cbc0038I Pass  21: suminf.    1.31692 (5) obj. -14.1925 iterations 3
Cbc0038I Pass  22: suminf.    1.72410 (14) obj. -14.1925 iterations 18
Cbc0038I Pass  23: suminf.    1.72410 (14) obj. -14.1925 iterations 0
Cbc0038I Pass  24: suminf.    0.81424 (5) obj. -14.1925 iterations 23
Cbc0038I Pass  25: suminf.    0.81424 (5) obj. -14.1925 iterations 0
Cbc0038I Pass  26: suminf.    0.96641 (4) obj. -14.1925 iterations 8
Cbc0038I Pass  27: suminf.    0.25872 (4) obj. -14.1925 iterations 13
Cbc0038I Pass  28: suminf.    0.66329 (4) obj. -14.1925 iterations 11
Cbc0038I Pass  29: suminf.    0.30066 (4) obj. -14.1925 iterations 10
Cbc0038I Pass  30: suminf.    0.95412 (5) obj. -14.1925 iterations 11
Cbc0038I Pass  31: suminf.    0.85487 (4) obj. -14.1925 iterations 7
Cbc0038I Pass  32: suminf.    1.23045 (8) obj. -14.1925 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.64265 to -12.843 (0.07 seconds)
Cbc0038I Round again with cutoff of -22.6467
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.39628 (38) obj. -52.5797 iterations 0
Cbc0038I Pass  33: suminf.    0.68371 (15) obj. -24.8413 iterations 23
Cbc0038I Pass  34: suminf.    1.27920 (9) obj. -22.6467 iterations 34
Cbc0038I Pass  35: suminf.    1.27920 (9) obj. -22.6467 iterations 1
Cbc0038I Pass  36: suminf.    1.25537 (8) obj. -22.6467 iterations 15
Cbc0038I Pass  37: suminf.    1.25537 (8) obj. -22.6467 iterations 5
Cbc0038I Pass  38: suminf.    1.34380 (8) obj. -22.6467 iterations 7
Cbc0038I Pass  39: suminf.    1.34380 (8) obj. -22.6467 iterations 6
Cbc0038I Pass  40: suminf.    1.68527 (16) obj. -22.6467 iterations 32
Cbc0038I Pass  41: suminf.    0.84446 (12) obj. -24.3973 iterations 10
Cbc0038I Pass  42: suminf.    1.46517 (9) obj. -22.6467 iterations 23
Cbc0038I Pass  43: suminf.    1.46517 (9) obj. -22.6467 iterations 5
Cbc0038I Pass  44: suminf.    1.25537 (8) obj. -22.6467 iterations 22
Cbc0038I Pass  45: suminf.    1.25537 (8) obj. -22.6467 iterations 0
Cbc0038I Pass  46: suminf.    1.34380 (8) obj. -22.6467 iterations 7
Cbc0038I Pass  47: suminf.    1.34380 (8) obj. -22.6467 iterations 5
Cbc0038I Pass  48: suminf.    1.25537 (8) obj. -22.6467 iterations 9
Cbc0038I Pass  49: suminf.    1.04288 (9) obj. -22.6467 iterations 13
Cbc0038I Pass  50: suminf.    1.03992 (9) obj. -22.6467 iterations 9
Cbc0038I Pass  51: suminf.    0.74780 (8) obj. -22.6467 iterations 10
Cbc0038I Pass  52: suminf.    0.55968 (9) obj. -22.6467 iterations 7
Cbc0038I Pass  53: suminf.    0.90124 (8) obj. -22.6467 iterations 10
Cbc0038I Pass  54: suminf.    1.83093 (14) obj. -22.6467 iterations 21
Cbc0038I Pass  55: suminf.    1.53347 (15) obj. -22.6467 iterations 2
Cbc0038I Pass  56: suminf.    1.18720 (9) obj. -22.6467 iterations 23
Cbc0038I Pass  57: suminf.    1.12127 (10) obj. -22.6467 iterations 7
Cbc0038I Pass  58: suminf.    1.18720 (9) obj. -22.6467 iterations 10
Cbc0038I Pass  59: suminf.    1.22135 (13) obj. -22.6467 iterations 24
Cbc0038I Pass  60: suminf.    1.03718 (13) obj. -22.6467 iterations 6
Cbc0038I Pass  61: suminf.    1.53041 (9) obj. -22.6467 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -12.843 - took 0.08 seconds
Cbc0012I Integer solution of -12.842986 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 15 rows 16 columns
Cbc0031I 60 added rows had average density of 47.85
Cbc0013I At root node, 60 cuts changed objective from -56.463436 to -26.30488 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17063 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1720 row cuts average 132.3 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 761 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 935 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.575 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.842986 best solution, best possible -26.30488 (2.71 seconds)
Cbc0012I Integer solution of -16.213546 found by rounding after 5763 iterations and 2 nodes (3.02 seconds)
Cbc0012I Integer solution of -19.163126 found by rounding after 5779 iterations and 3 nodes (3.04 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 59 rows 71 columns
Cbc0010I After 43 nodes, 8 on tree, -19.163126 best solution, best possible -26.30488 (3.61 seconds)
Cbc0012I Integer solution of -19.291576 found by DiveCoefficient after 7361 iterations and 69 nodes (3.69 seconds)
Cbc0012I Integer solution of -19.817606 found by rounding after 7384 iterations and 81 nodes (3.70 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 6 rows 11 columns
Cbc0001I Search completed - best objective -19.8176057, took 8660 iterations and 116 nodes (4.27 seconds)
Cbc0032I Strong branching done 966 times (17351 iterations), fathomed 11 nodes and fixed 16 variables
Cbc0035I Maximum depth 17, 347 variables fixed on reduced cost
Total time (CPU seconds):       3.58   (Wallclock seconds):       4.29

