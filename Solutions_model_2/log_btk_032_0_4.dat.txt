Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 37 (-29) rows, 20 (-14) columns and 91 (-68) elements
Clp0000I Optimal - objective value 5285.0513
Coin0511I After Postsolve, objective 5285.0513, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5285.051346 - 21 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 91 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.390%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.53963
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -3500 iterations 15
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -3500 iterations 0
Cbc0038I Solution found of -2875
Cbc0038I Relaxing continuous gives -2875
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2875 to -4425 (0.01 seconds)
Cbc0038I Round again with cutoff of -4498.25
Cbc0038I Pass   3: suminf.    0.50000 (4) obj. -4498.25 iterations 5
Cbc0038I Pass   4: suminf.    0.50000 (4) obj. -4498.25 iterations 0
Cbc0038I Pass   5: suminf.    0.19670 (3) obj. -4498.25 iterations 7
Cbc0038I Pass   6: suminf.    0.02883 (2) obj. -4498.25 iterations 3
Cbc0038I Pass   7: suminf.    0.14324 (2) obj. -4498.25 iterations 2
Cbc0038I Pass   8: suminf.    0.38289 (5) obj. -4498.25 iterations 4
Cbc0038I Pass   9: suminf.    0.34705 (4) obj. -4498.25 iterations 2
Cbc0038I Pass  10: suminf.    1.32523 (8) obj. -4498.25 iterations 6
Cbc0038I Pass  11: suminf.    1.28679 (8) obj. -4498.25 iterations 4
Cbc0038I Pass  12: suminf.    2.12827 (10) obj. -4498.25 iterations 7
Cbc0038I Pass  13: suminf.    0.99333 (10) obj. -4498.25 iterations 5
Cbc0038I Pass  14: suminf.    0.67062 (4) obj. -4498.25 iterations 5
Cbc0038I Pass  15: suminf.    0.34705 (4) obj. -4498.25 iterations 2
Cbc0038I Pass  16: suminf.    1.32523 (8) obj. -4498.25 iterations 6
Cbc0038I Pass  17: suminf.    1.28679 (8) obj. -4498.25 iterations 4
Cbc0038I Pass  18: suminf.    2.12827 (10) obj. -4498.25 iterations 7
Cbc0038I Pass  19: suminf.    0.39652 (5) obj. -4498.25 iterations 5
Cbc0038I Pass  20: suminf.    0.09896 (2) obj. -4498.25 iterations 7
Cbc0038I Pass  21: suminf.    0.32362 (4) obj. -4498.25 iterations 4
Cbc0038I Pass  22: suminf.    0.09896 (2) obj. -4498.25 iterations 3
Cbc0038I Pass  23: suminf.    0.63484 (6) obj. -4498.25 iterations 8
Cbc0038I Pass  24: suminf.    0.50000 (4) obj. -4498.25 iterations 7
Cbc0038I Pass  25: suminf.    0.19670 (3) obj. -4498.25 iterations 6
Cbc0038I Pass  26: suminf.    0.02883 (2) obj. -4498.25 iterations 3
Cbc0038I Pass  27: suminf.    0.14324 (2) obj. -4498.25 iterations 2
Cbc0038I Pass  28: suminf.    0.67062 (4) obj. -4498.25 iterations 5
Cbc0038I Pass  29: suminf.    0.34705 (4) obj. -4498.25 iterations 3
Cbc0038I Pass  30: suminf.    1.32523 (8) obj. -4498.25 iterations 6
Cbc0038I Pass  31: suminf.    1.28679 (8) obj. -4498.25 iterations 4
Cbc0038I Pass  32: suminf.    2.12827 (10) obj. -4498.25 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -4425 - took 0.03 seconds
Cbc0012I Integer solution of -4425 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 15 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -5148.5219 to -5148.5219 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4425, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 35 (-29) columns and 213 (-442) elements
Clp1000I sum of infeasibilities 0 - average 0, 35 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-35) columns and 0 (-213) elements
Clp0000I Optimal - objective value 3425
Clp0000I Optimal - objective value 3425
Coin0511I After Postsolve, objective 3425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.9983277 - largest nonzero change 9.4561361e-05 ( 0.01737988%) - largest zero change 0
Clp0000I Optimal - objective value 8670.6526
Clp0000I Optimal - objective value 8670.6526
Clp0000I Optimal - objective value 8670.6526
Coin0511I After Postsolve, objective 8670.6526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8670.652577 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 38 columns (38 integer (38 of which binary)) and 224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.904%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.84965
Cbc0038I Pass   1: suminf.    2.18476 (7) obj. -3153.49 iterations 7
Cbc0038I Pass   2: suminf.    2.18476 (7) obj. -3153.49 iterations 0
Cbc0038I Solution found of -500
Cbc0038I Rounding solution of -700 is better than previous of -500

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 38 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -700 to -3625 (0.01 seconds)
Cbc0038I Round again with cutoff of -3981.64
Cbc0038I Pass   3: suminf.    3.19639 (11) obj. -3981.64 iterations 1
Cbc0038I Pass   4: suminf.    2.89282 (12) obj. -3981.64 iterations 1
Cbc0038I Pass   5: suminf.    2.89282 (12) obj. -3981.64 iterations 0
Cbc0038I Pass   6: suminf.    0.29720 (1) obj. -3981.64 iterations 14
Cbc0038I Pass   7: suminf.    0.46667 (1) obj. -4185 iterations 2
Cbc0038I Pass   8: suminf.    2.31101 (7) obj. -3981.64 iterations 7
Cbc0038I Pass   9: suminf.    0.76595 (2) obj. -3981.64 iterations 5
Cbc0038I Pass  10: suminf.    0.67220 (2) obj. -3981.64 iterations 3
Cbc0038I Pass  11: suminf.    0.67220 (2) obj. -3981.64 iterations 0
Cbc0038I Pass  12: suminf.    0.92821 (2) obj. -4381.15 iterations 1
Cbc0038I Pass  13: suminf.    0.59528 (2) obj. -3981.64 iterations 1
Cbc0038I Pass  14: suminf.    1.83654 (4) obj. -4052.4 iterations 7
Cbc0038I Pass  15: suminf.    1.16819 (3) obj. -3981.64 iterations 4
Cbc0038I Pass  16: suminf.    0.75553 (2) obj. -3981.64 iterations 3
Cbc0038I Pass  17: suminf.    0.75553 (2) obj. -3981.64 iterations 0
Cbc0038I Pass  18: suminf.    0.92821 (2) obj. -4281.15 iterations 1
Cbc0038I Pass  19: suminf.    0.67861 (2) obj. -3981.64 iterations 1
Cbc0038I Pass  20: suminf.    1.21350 (4) obj. -3981.64 iterations 9
Cbc0038I Pass  21: suminf.    1.21350 (4) obj. -3981.64 iterations 2
Cbc0038I Pass  22: suminf.    1.39088 (4) obj. -4105.81 iterations 2
Cbc0038I Pass  23: suminf.    1.99647 (7) obj. -3981.64 iterations 6
Cbc0038I Pass  24: suminf.    1.84283 (6) obj. -3981.64 iterations 3
Cbc0038I Pass  25: suminf.    1.07060 (4) obj. -4440.17 iterations 3
Cbc0038I Pass  26: suminf.    0.54720 (2) obj. -3981.64 iterations 4
Cbc0038I Pass  27: suminf.    0.57436 (2) obj. -4014.23 iterations 1
Cbc0038I Pass  28: suminf.    1.98002 (5) obj. -3981.64 iterations 7
Cbc0038I Pass  29: suminf.    1.62851 (4) obj. -3981.64 iterations 4
Cbc0038I Pass  30: suminf.    1.29011 (3) obj. -4126.7 iterations 2
Cbc0038I Pass  31: suminf.    1.14133 (3) obj. -3981.64 iterations 2
Cbc0038I Pass  32: suminf.    3.31194 (10) obj. -3981.64 iterations 11
Cbc0038I Rounding solution of -3825 is better than previous of -3625

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4578.59
Cbc0038I Pass  32: suminf.    3.89192 (11) obj. -4578.59 iterations 0
Cbc0038I Pass  33: suminf.    0.79466 (2) obj. -4578.59 iterations 11
Cbc0038I Pass  34: suminf.    0.79466 (2) obj. -4578.59 iterations 0
Cbc0038I Pass  35: suminf.    0.92821 (2) obj. -4831.15 iterations 1
Cbc0038I Pass  36: suminf.    0.71773 (2) obj. -4578.59 iterations 1
Cbc0038I Pass  37: suminf.    0.79466 (2) obj. -4578.59 iterations 2
Cbc0038I Pass  38: suminf.    2.79582 (7) obj. -4578.59 iterations 10
Cbc0038I Pass  39: suminf.    2.71773 (6) obj. -4578.59 iterations 2
Cbc0038I Pass  40: suminf.    1.88336 (5) obj. -4578.59 iterations 5
Cbc0038I Pass  41: suminf.    1.88336 (5) obj. -4578.59 iterations 0
Cbc0038I Pass  42: suminf.    1.84039 (5) obj. -4578.59 iterations 2
Cbc0038I Pass  43: suminf.    1.73647 (4) obj. -4578.59 iterations 1
Cbc0038I Pass  44: suminf.    1.88336 (5) obj. -4578.59 iterations 2
Cbc0038I Pass  45: suminf.    1.18914 (4) obj. -4578.59 iterations 8
Cbc0038I Pass  46: suminf.    1.17991 (4) obj. -4589.66 iterations 4
Cbc0038I Pass  47: suminf.    1.10203 (4) obj. -4578.59 iterations 5
Cbc0038I Pass  48: suminf.    1.10203 (4) obj. -4578.59 iterations 0
Cbc0038I Pass  49: suminf.    1.51085 (4) obj. -4578.59 iterations 2
Cbc0038I Pass  50: suminf.    1.10203 (4) obj. -4578.59 iterations 1
Cbc0038I Pass  51: suminf.    1.34441 (5) obj. -4578.59 iterations 4
Cbc0038I Pass  52: suminf.    1.31484 (4) obj. -4740.05 iterations 4
Cbc0038I Pass  53: suminf.    1.10203 (4) obj. -4578.59 iterations 2
Cbc0038I Pass  54: suminf.    1.10203 (4) obj. -4578.59 iterations 0
Cbc0038I Pass  55: suminf.    1.51085 (4) obj. -4578.59 iterations 2
Cbc0038I Pass  56: suminf.    1.10203 (4) obj. -4578.59 iterations 1
Cbc0038I Pass  57: suminf.    2.33927 (6) obj. -4578.59 iterations 7
Cbc0038I Pass  58: suminf.    1.93311 (6) obj. -4578.59 iterations 3
Cbc0038I Pass  59: suminf.    1.10203 (4) obj. -4578.59 iterations 4
Cbc0038I Pass  60: suminf.    1.10203 (4) obj. -4578.59 iterations 0
Cbc0038I Pass  61: suminf.    1.51085 (4) obj. -4578.59 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3825 - took 0.02 seconds
Cbc0012I Integer solution of -3825 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -4425 found by DiveCoefficient after 15 iterations and 0 nodes (0.03 seconds)
Cbc0013I At root node, 0 cuts changed objective from -6966.3911 to -4425 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4425, took 15 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 37 (-29) rows, 20 (-14) columns and 91 (-68) elements
Clp0000I Optimal - objective value 5285.0513
Coin0511I After Postsolve, objective 5285.0513, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5285.051346 - 21 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 91 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.390%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.53963
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -3500 iterations 15
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -3500 iterations 0
Cbc0038I Solution found of -2875
Cbc0038I Relaxing continuous gives -2875
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2875 to -4425 (0.01 seconds)
Cbc0038I Round again with cutoff of -4498.25
Cbc0038I Pass   3: suminf.    0.50000 (4) obj. -4498.25 iterations 5
Cbc0038I Pass   4: suminf.    0.50000 (4) obj. -4498.25 iterations 0
Cbc0038I Pass   5: suminf.    0.19670 (3) obj. -4498.25 iterations 7
Cbc0038I Pass   6: suminf.    0.02883 (2) obj. -4498.25 iterations 3
Cbc0038I Pass   7: suminf.    0.14324 (2) obj. -4498.25 iterations 2
Cbc0038I Pass   8: suminf.    0.38289 (5) obj. -4498.25 iterations 4
Cbc0038I Pass   9: suminf.    0.34705 (4) obj. -4498.25 iterations 2
Cbc0038I Pass  10: suminf.    1.32523 (8) obj. -4498.25 iterations 6
Cbc0038I Pass  11: suminf.    1.28679 (8) obj. -4498.25 iterations 4
Cbc0038I Pass  12: suminf.    2.12827 (10) obj. -4498.25 iterations 7
Cbc0038I Pass  13: suminf.    0.99333 (10) obj. -4498.25 iterations 5
Cbc0038I Pass  14: suminf.    0.67062 (4) obj. -4498.25 iterations 5
Cbc0038I Pass  15: suminf.    0.34705 (4) obj. -4498.25 iterations 2
Cbc0038I Pass  16: suminf.    1.32523 (8) obj. -4498.25 iterations 6
Cbc0038I Pass  17: suminf.    1.28679 (8) obj. -4498.25 iterations 4
Cbc0038I Pass  18: suminf.    2.12827 (10) obj. -4498.25 iterations 7
Cbc0038I Pass  19: suminf.    0.39652 (5) obj. -4498.25 iterations 5
Cbc0038I Pass  20: suminf.    0.09896 (2) obj. -4498.25 iterations 7
Cbc0038I Pass  21: suminf.    0.32362 (4) obj. -4498.25 iterations 4
Cbc0038I Pass  22: suminf.    0.09896 (2) obj. -4498.25 iterations 3
Cbc0038I Pass  23: suminf.    0.63484 (6) obj. -4498.25 iterations 8
Cbc0038I Pass  24: suminf.    0.50000 (4) obj. -4498.25 iterations 7
Cbc0038I Pass  25: suminf.    0.19670 (3) obj. -4498.25 iterations 6
Cbc0038I Pass  26: suminf.    0.02883 (2) obj. -4498.25 iterations 3
Cbc0038I Pass  27: suminf.    0.14324 (2) obj. -4498.25 iterations 2
Cbc0038I Pass  28: suminf.    0.67062 (4) obj. -4498.25 iterations 5
Cbc0038I Pass  29: suminf.    0.34705 (4) obj. -4498.25 iterations 3
Cbc0038I Pass  30: suminf.    1.32523 (8) obj. -4498.25 iterations 6
Cbc0038I Pass  31: suminf.    1.28679 (8) obj. -4498.25 iterations 4
Cbc0038I Pass  32: suminf.    2.12827 (10) obj. -4498.25 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -4425 - took 0.03 seconds
Cbc0012I Integer solution of -4425 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 15 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -5148.5219 to -5148.5219 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4425, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-32) rows, 35 (-30) columns and 213 (-443) elements
Clp1000I sum of infeasibilities 0 - average 0, 35 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-35) columns and 0 (-213) elements
Clp0000I Optimal - objective value 3425
Clp0000I Optimal - objective value 3425
Coin0511I After Postsolve, objective 3425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.9983277 - largest nonzero change 9.4561361e-05 ( 0.01737988%) - largest zero change 0
Clp0000I Optimal - objective value 8670.6526
Clp0000I Optimal - objective value 8670.6526
Clp0000I Optimal - objective value 8670.6526
Coin0511I After Postsolve, objective 8670.6526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8670.652577 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 38 columns (38 integer (38 of which binary)) and 224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.904%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.84965
Cbc0038I Pass   1: suminf.    2.18476 (7) obj. -3153.49 iterations 7
Cbc0038I Pass   2: suminf.    2.18476 (7) obj. -3153.49 iterations 0
Cbc0038I Solution found of -500
Cbc0038I Rounding solution of -700 is better than previous of -500

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 38 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -700 to -3625 (0.01 seconds)
Cbc0038I Round again with cutoff of -3981.64
Cbc0038I Pass   3: suminf.    3.19639 (11) obj. -3981.64 iterations 1
Cbc0038I Pass   4: suminf.    2.89282 (12) obj. -3981.64 iterations 1
Cbc0038I Pass   5: suminf.    2.89282 (12) obj. -3981.64 iterations 0
Cbc0038I Pass   6: suminf.    0.29720 (1) obj. -3981.64 iterations 14
Cbc0038I Pass   7: suminf.    0.46667 (1) obj. -4185 iterations 2
Cbc0038I Pass   8: suminf.    2.31101 (7) obj. -3981.64 iterations 7
Cbc0038I Pass   9: suminf.    0.76595 (2) obj. -3981.64 iterations 5
Cbc0038I Pass  10: suminf.    0.67220 (2) obj. -3981.64 iterations 3
Cbc0038I Pass  11: suminf.    0.67220 (2) obj. -3981.64 iterations 0
Cbc0038I Pass  12: suminf.    0.92821 (2) obj. -4381.15 iterations 1
Cbc0038I Pass  13: suminf.    0.59528 (2) obj. -3981.64 iterations 1
Cbc0038I Pass  14: suminf.    1.83654 (4) obj. -4052.4 iterations 7
Cbc0038I Pass  15: suminf.    1.16819 (3) obj. -3981.64 iterations 4
Cbc0038I Pass  16: suminf.    0.75553 (2) obj. -3981.64 iterations 3
Cbc0038I Pass  17: suminf.    0.75553 (2) obj. -3981.64 iterations 0
Cbc0038I Pass  18: suminf.    0.92821 (2) obj. -4281.15 iterations 1
Cbc0038I Pass  19: suminf.    0.67861 (2) obj. -3981.64 iterations 1
Cbc0038I Pass  20: suminf.    1.21350 (4) obj. -3981.64 iterations 9
Cbc0038I Pass  21: suminf.    1.21350 (4) obj. -3981.64 iterations 2
Cbc0038I Pass  22: suminf.    1.39088 (4) obj. -4105.81 iterations 2
Cbc0038I Pass  23: suminf.    1.99647 (7) obj. -3981.64 iterations 6
Cbc0038I Pass  24: suminf.    1.84283 (6) obj. -3981.64 iterations 3
Cbc0038I Pass  25: suminf.    1.07060 (4) obj. -4440.17 iterations 3
Cbc0038I Pass  26: suminf.    0.54720 (2) obj. -3981.64 iterations 4
Cbc0038I Pass  27: suminf.    0.57436 (2) obj. -4014.23 iterations 1
Cbc0038I Pass  28: suminf.    1.98002 (5) obj. -3981.64 iterations 7
Cbc0038I Pass  29: suminf.    1.62851 (4) obj. -3981.64 iterations 4
Cbc0038I Pass  30: suminf.    1.29011 (3) obj. -4126.7 iterations 2
Cbc0038I Pass  31: suminf.    1.14133 (3) obj. -3981.64 iterations 2
Cbc0038I Pass  32: suminf.    3.31194 (10) obj. -3981.64 iterations 11
Cbc0038I Rounding solution of -3825 is better than previous of -3625

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4578.59
Cbc0038I Pass  32: suminf.    3.89192 (11) obj. -4578.59 iterations 0
Cbc0038I Pass  33: suminf.    0.79466 (2) obj. -4578.59 iterations 11
Cbc0038I Pass  34: suminf.    0.79466 (2) obj. -4578.59 iterations 0
Cbc0038I Pass  35: suminf.    0.92821 (2) obj. -4831.15 iterations 1
Cbc0038I Pass  36: suminf.    0.71773 (2) obj. -4578.59 iterations 1
Cbc0038I Pass  37: suminf.    0.79466 (2) obj. -4578.59 iterations 2
Cbc0038I Pass  38: suminf.    2.79582 (7) obj. -4578.59 iterations 10
Cbc0038I Pass  39: suminf.    2.71773 (6) obj. -4578.59 iterations 2
Cbc0038I Pass  40: suminf.    1.88336 (5) obj. -4578.59 iterations 5
Cbc0038I Pass  41: suminf.    1.88336 (5) obj. -4578.59 iterations 0
Cbc0038I Pass  42: suminf.    1.84039 (5) obj. -4578.59 iterations 2
Cbc0038I Pass  43: suminf.    1.73647 (4) obj. -4578.59 iterations 1
Cbc0038I Pass  44: suminf.    1.88336 (5) obj. -4578.59 iterations 2
Cbc0038I Pass  45: suminf.    1.18914 (4) obj. -4578.59 iterations 8
Cbc0038I Pass  46: suminf.    1.17991 (4) obj. -4589.66 iterations 4
Cbc0038I Pass  47: suminf.    1.10203 (4) obj. -4578.59 iterations 5
Cbc0038I Pass  48: suminf.    1.10203 (4) obj. -4578.59 iterations 0
Cbc0038I Pass  49: suminf.    1.51085 (4) obj. -4578.59 iterations 2
Cbc0038I Pass  50: suminf.    1.10203 (4) obj. -4578.59 iterations 1
Cbc0038I Pass  51: suminf.    1.34441 (5) obj. -4578.59 iterations 4
Cbc0038I Pass  52: suminf.    1.31484 (4) obj. -4740.05 iterations 4
Cbc0038I Pass  53: suminf.    1.10203 (4) obj. -4578.59 iterations 2
Cbc0038I Pass  54: suminf.    1.10203 (4) obj. -4578.59 iterations 0
Cbc0038I Pass  55: suminf.    1.51085 (4) obj. -4578.59 iterations 2
Cbc0038I Pass  56: suminf.    1.10203 (4) obj. -4578.59 iterations 1
Cbc0038I Pass  57: suminf.    2.33927 (6) obj. -4578.59 iterations 7
Cbc0038I Pass  58: suminf.    1.93311 (6) obj. -4578.59 iterations 3
Cbc0038I Pass  59: suminf.    1.10203 (4) obj. -4578.59 iterations 4
Cbc0038I Pass  60: suminf.    1.10203 (4) obj. -4578.59 iterations 0
Cbc0038I Pass  61: suminf.    1.51085 (4) obj. -4578.59 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3825 - took 0.02 seconds
Cbc0012I Integer solution of -3825 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -4425 found by DiveCoefficient after 15 iterations and 0 nodes (0.03 seconds)
Cbc0013I At root node, 0 cuts changed objective from -6966.3911 to -4425 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4425, took 15 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

