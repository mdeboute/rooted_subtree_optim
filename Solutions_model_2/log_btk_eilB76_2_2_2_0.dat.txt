Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 403 (-50) elements
Clp1000I sum of infeasibilities 2.63345e-05 - average 2.01026e-07, 18 fixed columns
Coin0506I Presolve 95 (-36) rows, 55 (-19) columns and 293 (-110) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Coin0511I After Postsolve, objective 53.749388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Coin0511I After Postsolve, objective 53.749388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.74938808 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.76467
Cbc0038I Solution found of 7.38644
Cbc0038I Relaxing continuous gives -0.61205
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -0.61205 to -23.246 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.2701
Cbc0038I Pass   1: suminf.    2.16512 (16) obj. -26.2701 iterations 50
Cbc0038I Pass   2: suminf.    1.39568 (9) obj. -26.2701 iterations 18
Cbc0038I Pass   3: suminf.    1.37876 (5) obj. -26.2701 iterations 17
Cbc0038I Pass   4: suminf.    1.04837 (4) obj. -26.2701 iterations 7
Cbc0038I Pass   5: suminf.    1.28257 (3) obj. -26.2701 iterations 6
Cbc0038I Pass   6: suminf.    0.84431 (3) obj. -26.2701 iterations 2
Cbc0038I Pass   7: suminf.    1.24807 (3) obj. -26.2701 iterations 3
Cbc0038I Pass   8: suminf.    1.24807 (3) obj. -26.2701 iterations 0
Cbc0038I Pass   9: suminf.    2.70903 (7) obj. -26.2701 iterations 17
Cbc0038I Pass  10: suminf.    1.58066 (6) obj. -26.2701 iterations 11
Cbc0038I Pass  11: suminf.    1.19475 (4) obj. -26.2701 iterations 10
Cbc0038I Pass  12: suminf.    0.85866 (4) obj. -26.2701 iterations 2
Cbc0038I Pass  13: suminf.    1.47915 (9) obj. -26.2701 iterations 8
Cbc0038I Pass  14: suminf.    1.47915 (9) obj. -26.2701 iterations 0
Cbc0038I Pass  15: suminf.    1.37876 (5) obj. -26.2701 iterations 13
Cbc0038I Pass  16: suminf.    1.04837 (4) obj. -26.2701 iterations 7
Cbc0038I Pass  17: suminf.    1.28257 (3) obj. -26.2701 iterations 6
Cbc0038I Pass  18: suminf.    0.84431 (3) obj. -26.2701 iterations 2
Cbc0038I Pass  19: suminf.    1.24807 (3) obj. -26.2701 iterations 3
Cbc0038I Pass  20: suminf.    1.24807 (3) obj. -26.2701 iterations 0
Cbc0038I Pass  21: suminf.    0.69731 (6) obj. -26.2701 iterations 22
Cbc0038I Pass  22: suminf.    0.61347 (4) obj. -26.2701 iterations 13
Cbc0038I Pass  23: suminf.    1.14964 (6) obj. -26.2701 iterations 6
Cbc0038I Pass  24: suminf.    1.14964 (6) obj. -26.2701 iterations 0
Cbc0038I Pass  25: suminf.    1.77419 (4) obj. -26.2701 iterations 6
Cbc0038I Pass  26: suminf.    1.77419 (4) obj. -26.2701 iterations 0
Cbc0038I Pass  27: suminf.    1.23754 (4) obj. -26.2701 iterations 4
Cbc0038I Pass  28: suminf.    0.98262 (4) obj. -26.2701 iterations 2
Cbc0038I Pass  29: suminf.    1.77419 (4) obj. -26.2701 iterations 5
Cbc0038I Pass  30: suminf.    0.90473 (6) obj. -26.2701 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -23.246 - took 0.07 seconds
Cbc0012I Integer solution of -23.24598 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 55 rows 32 columns
Cbc0031I 26 added rows had average density of 41.769231
Cbc0013I At root node, 26 cuts changed objective from -53.485806 to -47.066882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7323 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -23.24598 best solution, best possible -47.066882 (0.69 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 46 rows 30 columns
Cbc0001I Search completed - best objective -23.24598, took 9086 iterations and 84 nodes (0.95 seconds)
Cbc0032I Strong branching done 868 times (15643 iterations), fathomed 4 nodes and fixed 35 variables
Cbc0035I Maximum depth 31, 321 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-61) rows, 108 (-44) columns and 1753 (-1550) elements
Clp1000I sum of infeasibilities 4.15972e-08 - average 4.47281e-10, 34 fixed columns
Coin0506I Presolve 64 (-29) rows, 74 (-34) columns and 935 (-818) elements
Clp0006I 0  Obj 99.472733 Dual inf 31.183128 (74)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 2.3946788 - largest nonzero change 2.5218825e-05 ( 0.0015380202%) - largest zero change 2.9899562e-05
Clp0000I Optimal - objective value 107.84806
Clp0000I Optimal - objective value 107.84806
Coin0511I After Postsolve, objective 107.84806, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 107.84806
Clp0000I Optimal - objective value 107.84806
Clp0000I Optimal - objective value 107.84806
Clp0000I Optimal - objective value 107.84806
Coin0511I After Postsolve, objective 107.84806, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.848057 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 109 columns (109 integer (109 of which binary)) and 1770 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.904%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.34934
Cbc0038I Pass   1: suminf.    0.49637 (18) obj. -24.2983 iterations 15
Cbc0038I Pass   2: suminf.    0.49637 (18) obj. -24.2983 iterations 0
Cbc0038I Solution found of 3.88782
Cbc0038I Rounding solution of -16.5394 is better than previous of 3.88782

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -16.5394 to -32.1122 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.8918
Cbc0038I Pass   3: suminf.    1.28973 (33) obj. -38.8918 iterations 2
Cbc0038I Pass   4: suminf.    1.28973 (33) obj. -38.8918 iterations 0
Cbc0038I Pass   5: suminf.    0.95566 (12) obj. -47.8226 iterations 21
Cbc0038I Pass   6: suminf.    0.37193 (2) obj. -38.8918 iterations 14
Cbc0038I Pass   7: suminf.    0.21622 (1) obj. -44.6787 iterations 4
Cbc0038I Pass   8: suminf.    0.21622 (1) obj. -44.6787 iterations 0
Cbc0038I Pass   9: suminf.    1.11663 (11) obj. -38.8918 iterations 22
Cbc0038I Pass  10: suminf.    1.11663 (11) obj. -38.8918 iterations 7
Cbc0038I Pass  11: suminf.    1.42537 (3) obj. -38.8918 iterations 14
Cbc0038I Pass  12: suminf.    1.42537 (3) obj. -38.8918 iterations 3
Cbc0038I Pass  13: suminf.    0.33108 (2) obj. -41.7904 iterations 6
Cbc0038I Pass  14: suminf.    0.25000 (1) obj. -40.1344 iterations 1
Cbc0038I Pass  15: suminf.    0.54122 (2) obj. -38.8918 iterations 2
Cbc0038I Pass  16: suminf.    0.85917 (13) obj. -38.8918 iterations 31
Cbc0038I Pass  17: suminf.    0.69747 (11) obj. -38.8918 iterations 4
Cbc0038I Pass  18: suminf.    0.52514 (3) obj. -38.8918 iterations 20
Cbc0038I Pass  19: suminf.    0.49527 (5) obj. -38.8918 iterations 6
Cbc0038I Pass  20: suminf.    0.52514 (3) obj. -38.8918 iterations 4
Cbc0038I Pass  21: suminf.    1.78710 (10) obj. -38.8918 iterations 17
Cbc0038I Pass  22: suminf.    0.93658 (8) obj. -38.8918 iterations 2
Cbc0038I Pass  23: suminf.    1.12816 (3) obj. -38.8918 iterations 13
Cbc0038I Pass  24: suminf.    1.12816 (3) obj. -38.8918 iterations 0
Cbc0038I Pass  25: suminf.    0.30405 (2) obj. -43.0053 iterations 6
Cbc0038I Pass  26: suminf.    0.30405 (2) obj. -43.0053 iterations 0
Cbc0038I Pass  27: suminf.    1.26705 (11) obj. -38.8918 iterations 23
Cbc0038I Pass  28: suminf.    0.99150 (8) obj. -43.2764 iterations 6
Cbc0038I Pass  29: suminf.    0.62070 (4) obj. -38.8918 iterations 12
Cbc0038I Pass  30: suminf.    0.62070 (4) obj. -38.8918 iterations 0
Cbc0038I Pass  31: suminf.    0.91119 (3) obj. -38.8918 iterations 9
Cbc0038I Pass  32: suminf.    1.19913 (3) obj. -38.8918 iterations 2
Cbc0038I Rounding solution of -43.6042 is better than previous of -32.1122

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 47 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -54.8648
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.14549 (33) obj. -54.8648 iterations 0
Cbc0038I Pass  33: suminf.    1.00838 (10) obj. -54.8648 iterations 24
Cbc0038I Pass  34: suminf.    0.87888 (11) obj. -54.8648 iterations 1
Cbc0038I Pass  35: suminf.    1.60747 (6) obj. -54.8648 iterations 17
Cbc0038I Pass  36: suminf.    1.20564 (4) obj. -54.8648 iterations 1
Cbc0038I Pass  37: suminf.    0.52872 (3) obj. -55.9287 iterations 13
Cbc0038I Pass  38: suminf.    1.60747 (6) obj. -54.8648 iterations 9
Cbc0038I Pass  39: suminf.    1.69216 (10) obj. -54.8648 iterations 19
Cbc0038I Pass  40: suminf.    1.49644 (7) obj. -54.8648 iterations 10
Cbc0038I Pass  41: suminf.    1.99527 (6) obj. -54.8648 iterations 9
Cbc0038I Pass  42: suminf.    1.88181 (6) obj. -54.8648 iterations 6
Cbc0038I Pass  43: suminf.    1.55356 (6) obj. -54.8648 iterations 4
Cbc0038I Pass  44: suminf.    1.55356 (6) obj. -54.8648 iterations 0
Cbc0038I Pass  45: suminf.    1.99527 (6) obj. -54.8648 iterations 4
Cbc0038I Pass  46: suminf.    1.75015 (14) obj. -54.8648 iterations 17
Cbc0038I Pass  47: suminf.    1.50899 (10) obj. -54.8648 iterations 6
Cbc0038I Pass  48: suminf.    1.60747 (6) obj. -54.8648 iterations 13
Cbc0038I Pass  49: suminf.    1.20564 (4) obj. -54.8648 iterations 1
Cbc0038I Pass  50: suminf.    0.52872 (3) obj. -55.9287 iterations 13
Cbc0038I Pass  51: suminf.    1.60747 (6) obj. -54.8648 iterations 7
Cbc0038I Pass  52: suminf.    1.04063 (13) obj. -54.8648 iterations 18
Cbc0038I Pass  53: suminf.    0.99877 (11) obj. -54.8648 iterations 4
Cbc0038I Pass  54: suminf.    1.68267 (7) obj. -54.8648 iterations 20
Cbc0038I Pass  55: suminf.    1.20564 (4) obj. -54.8648 iterations 5
Cbc0038I Pass  56: suminf.    0.52872 (3) obj. -55.9287 iterations 13
Cbc0038I Pass  57: suminf.    1.60747 (6) obj. -54.8648 iterations 7
Cbc0038I Pass  58: suminf.    2.06899 (10) obj. -54.8648 iterations 11
Cbc0038I Pass  59: suminf.    1.08247 (10) obj. -54.8648 iterations 3
Cbc0038I Pass  60: suminf.    1.05932 (7) obj. -54.8648 iterations 3
Cbc0038I Pass  61: suminf.    1.02288 (6) obj. -54.8648 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 33 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -43.6042 - took 0.04 seconds
Cbc0012I Integer solution of -43.60418 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 31 added rows had average density of 15.83871
Cbc0013I At root node, 31 cuts changed objective from -99.906994 to -46.390397 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 367 row cuts average 2.9 elements, 22 column cuts (22 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 65.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 50.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -43.60418 best solution, best possible -46.390397 (0.28 seconds)
Cbc0012I Integer solution of -44.20252 found by rounding after 336 iterations and 2 nodes (0.44 seconds)
Cbc0001I Search completed - best objective -44.20251999999999, took 489 iterations and 10 nodes (0.71 seconds)
Cbc0032I Strong branching done 78 times (499 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 58 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.72

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 403 (-50) elements
Clp1000I sum of infeasibilities 2.63345e-05 - average 2.01026e-07, 18 fixed columns
Coin0506I Presolve 95 (-36) rows, 55 (-19) columns and 293 (-110) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Coin0511I After Postsolve, objective 53.749388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Clp0000I Optimal - objective value 53.749388
Coin0511I After Postsolve, objective 53.749388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.74938808 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.76467
Cbc0038I Solution found of 7.38644
Cbc0038I Relaxing continuous gives -0.61205
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -0.61205 to -23.246 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.2701
Cbc0038I Pass   1: suminf.    2.16512 (16) obj. -26.2701 iterations 50
Cbc0038I Pass   2: suminf.    1.39568 (9) obj. -26.2701 iterations 18
Cbc0038I Pass   3: suminf.    1.37876 (5) obj. -26.2701 iterations 17
Cbc0038I Pass   4: suminf.    1.04837 (4) obj. -26.2701 iterations 7
Cbc0038I Pass   5: suminf.    1.28257 (3) obj. -26.2701 iterations 6
Cbc0038I Pass   6: suminf.    0.84431 (3) obj. -26.2701 iterations 2
Cbc0038I Pass   7: suminf.    1.24807 (3) obj. -26.2701 iterations 3
Cbc0038I Pass   8: suminf.    1.24807 (3) obj. -26.2701 iterations 0
Cbc0038I Pass   9: suminf.    2.70903 (7) obj. -26.2701 iterations 17
Cbc0038I Pass  10: suminf.    1.58066 (6) obj. -26.2701 iterations 11
Cbc0038I Pass  11: suminf.    1.19475 (4) obj. -26.2701 iterations 10
Cbc0038I Pass  12: suminf.    0.85866 (4) obj. -26.2701 iterations 2
Cbc0038I Pass  13: suminf.    1.47915 (9) obj. -26.2701 iterations 8
Cbc0038I Pass  14: suminf.    1.47915 (9) obj. -26.2701 iterations 0
Cbc0038I Pass  15: suminf.    1.37876 (5) obj. -26.2701 iterations 13
Cbc0038I Pass  16: suminf.    1.04837 (4) obj. -26.2701 iterations 7
Cbc0038I Pass  17: suminf.    1.28257 (3) obj. -26.2701 iterations 6
Cbc0038I Pass  18: suminf.    0.84431 (3) obj. -26.2701 iterations 2
Cbc0038I Pass  19: suminf.    1.24807 (3) obj. -26.2701 iterations 3
Cbc0038I Pass  20: suminf.    1.24807 (3) obj. -26.2701 iterations 0
Cbc0038I Pass  21: suminf.    0.69731 (6) obj. -26.2701 iterations 22
Cbc0038I Pass  22: suminf.    0.61347 (4) obj. -26.2701 iterations 13
Cbc0038I Pass  23: suminf.    1.14964 (6) obj. -26.2701 iterations 6
Cbc0038I Pass  24: suminf.    1.14964 (6) obj. -26.2701 iterations 0
Cbc0038I Pass  25: suminf.    1.77419 (4) obj. -26.2701 iterations 6
Cbc0038I Pass  26: suminf.    1.77419 (4) obj. -26.2701 iterations 0
Cbc0038I Pass  27: suminf.    1.23754 (4) obj. -26.2701 iterations 4
Cbc0038I Pass  28: suminf.    0.98262 (4) obj. -26.2701 iterations 2
Cbc0038I Pass  29: suminf.    1.77419 (4) obj. -26.2701 iterations 5
Cbc0038I Pass  30: suminf.    0.90473 (6) obj. -26.2701 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -23.246 - took 0.08 seconds
Cbc0012I Integer solution of -23.24598 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 55 rows 32 columns
Cbc0031I 26 added rows had average density of 41.769231
Cbc0013I At root node, 26 cuts changed objective from -53.485806 to -47.066882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7323 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.24598 best solution, best possible -47.066882 (0.72 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 46 rows 30 columns
Cbc0001I Search completed - best objective -23.24598, took 9086 iterations and 84 nodes (1.04 seconds)
Cbc0032I Strong branching done 868 times (15643 iterations), fathomed 4 nodes and fixed 35 variables
Cbc0035I Maximum depth 31, 321 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 107 (-46) columns and 1716 (-1588) elements
Clp1000I sum of infeasibilities 1.67062e-08 - average 1.81589e-10, 35 fixed columns
Coin0506I Presolve 61 (-31) rows, 72 (-35) columns and 879 (-837) elements
Clp0006I 0  Obj 55.541373 Dual inf 4.0129729 (72)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 5.6175844 - largest nonzero change 1.2717253e-05 ( 0.00072896693%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 64.972337
Clp0000I Optimal - objective value 64.972337
Coin0511I After Postsolve, objective 64.972337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 64.972337
Clp0000I Optimal - objective value 64.972337
Clp0000I Optimal - objective value 64.972337
Clp0000I Optimal - objective value 64.972337
Coin0511I After Postsolve, objective 64.972337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.97233674 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 108 columns (108 integer (108 of which binary)) and 1741 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.887%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.06923
Cbc0038I Pass   1: suminf.    2.78316 (25) obj. -45.5041 iterations 9
Cbc0038I Pass   2: suminf.    1.50631 (15) obj. -33.2986 iterations 10
Cbc0038I Solution found of -14.4274
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -17.872
Cbc0038I Pass   3: suminf.    2.78316 (25) obj. -45.5041 iterations 0
Cbc0038I Pass   4: suminf.    0.64463 (3) obj. -17.872 iterations 30
Cbc0038I Pass   5: suminf.    0.92510 (3) obj. -17.872 iterations 8
Cbc0038I Pass   6: suminf.    0.74000 (5) obj. -17.872 iterations 5
Cbc0038I Pass   7: suminf.    0.89249 (5) obj. -17.872 iterations 5
Cbc0038I Pass   8: suminf.    0.88103 (5) obj. -17.872 iterations 5
Cbc0038I Pass   9: suminf.    0.89463 (3) obj. -17.872 iterations 7
Cbc0038I Pass  10: suminf.    0.89463 (3) obj. -17.872 iterations 2
Cbc0038I Pass  11: suminf.    0.90238 (3) obj. -17.872 iterations 9
Cbc0038I Pass  12: suminf.    0.63866 (3) obj. -18.9269 iterations 4
Cbc0038I Pass  13: suminf.    1.03104 (4) obj. -17.872 iterations 13
Cbc0038I Pass  14: suminf.    1.68399 (10) obj. -17.872 iterations 23
Cbc0038I Pass  15: suminf.    1.60812 (9) obj. -17.872 iterations 6
Cbc0038I Pass  16: suminf.    0.90857 (5) obj. -17.872 iterations 19
Cbc0038I Pass  17: suminf.    0.89463 (3) obj. -17.872 iterations 7
Cbc0038I Pass  18: suminf.    0.89463 (3) obj. -17.872 iterations 2
Cbc0038I Pass  19: suminf.    0.90238 (3) obj. -17.872 iterations 10
Cbc0038I Pass  20: suminf.    0.63866 (3) obj. -18.9269 iterations 5
Cbc0038I Pass  21: suminf.    1.03104 (4) obj. -17.872 iterations 15
Cbc0038I Pass  22: suminf.    2.03614 (18) obj. -17.872 iterations 24
Cbc0038I Pass  23: suminf.    1.26627 (15) obj. -17.872 iterations 19
Cbc0038I Pass  24: suminf.    1.21900 (7) obj. -17.872 iterations 15
Cbc0038I Pass  25: suminf.    0.59570 (7) obj. -17.872 iterations 3
Cbc0038I Pass  26: suminf.    2.26392 (7) obj. -17.872 iterations 8
Cbc0038I Pass  27: suminf.    2.26392 (7) obj. -17.872 iterations 2
Cbc0038I Pass  28: suminf.    2.10435 (7) obj. -17.872 iterations 3
Cbc0038I Pass  29: suminf.    2.10435 (7) obj. -17.872 iterations 2
Cbc0038I Pass  30: suminf.    2.10022 (7) obj. -17.872 iterations 5
Cbc0038I Pass  31: suminf.    2.10022 (7) obj. -17.872 iterations 1
Cbc0038I Pass  32: suminf.    1.28261 (8) obj. -17.872 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 21 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -14.4274 to -14.6167 (0.06 seconds)
Cbc0038I Round again with cutoff of -24.0721
Cbc0038I Pass  32: suminf.    2.78316 (25) obj. -45.5041 iterations 0
Cbc0038I Pass  33: suminf.    0.86857 (9) obj. -24.3622 iterations 16
Cbc0038I Pass  34: suminf.    0.69142 (4) obj. -24.0721 iterations 17
Cbc0038I Pass  35: suminf.    0.67737 (4) obj. -24.0721 iterations 1
Cbc0038I Pass  36: suminf.    0.69212 (4) obj. -24.0721 iterations 6
Cbc0038I Pass  37: suminf.    1.70223 (9) obj. -24.0721 iterations 18
Cbc0038I Pass  38: suminf.    1.22813 (9) obj. -24.0721 iterations 3
Cbc0038I Pass  39: suminf.    1.16963 (5) obj. -24.0721 iterations 12
Cbc0038I Pass  40: suminf.    1.03292 (10) obj. -24.0721 iterations 7
Cbc0038I Pass  41: suminf.    2.36853 (10) obj. -24.0721 iterations 6
Cbc0038I Pass  42: suminf.    2.36853 (10) obj. -24.0721 iterations 0
Cbc0038I Pass  43: suminf.    1.07518 (10) obj. -24.0721 iterations 7
Cbc0038I Pass  44: suminf.    1.07518 (10) obj. -24.0721 iterations 2
Cbc0038I Pass  45: suminf.    1.63154 (12) obj. -24.148 iterations 16
Cbc0038I Pass  46: suminf.    1.28049 (11) obj. -24.0872 iterations 11
Cbc0038I Pass  47: suminf.    1.35092 (10) obj. -24.0721 iterations 23
Cbc0038I Pass  48: suminf.    1.13151 (10) obj. -24.0721 iterations 2
Cbc0038I Pass  49: suminf.    2.28880 (10) obj. -24.0721 iterations 3
Cbc0038I Pass  50: suminf.    2.28880 (10) obj. -24.0721 iterations 0
Cbc0038I Pass  51: suminf.    1.13151 (10) obj. -24.0721 iterations 12
Cbc0038I Pass  52: suminf.    1.70208 (10) obj. -24.0721 iterations 13
Cbc0038I Pass  53: suminf.    1.41664 (9) obj. -24.0721 iterations 2
Cbc0038I Pass  54: suminf.    1.35092 (10) obj. -24.0721 iterations 20
Cbc0038I Pass  55: suminf.    1.13151 (10) obj. -24.0721 iterations 2
Cbc0038I Pass  56: suminf.    2.28880 (10) obj. -24.0721 iterations 3
Cbc0038I Pass  57: suminf.    2.28880 (10) obj. -24.0721 iterations 0
Cbc0038I Pass  58: suminf.    1.13151 (10) obj. -24.0721 iterations 12
Cbc0038I Pass  59: suminf.    2.87098 (16) obj. -24.0721 iterations 14
Cbc0038I Pass  60: suminf.    2.40053 (16) obj. -24.0721 iterations 4
Cbc0038I Pass  61: suminf.    2.53699 (10) obj. -24.0721 iterations 22
Cbc0038I Rounding solution of -14.9191 is better than previous of -14.6167

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -14.9191 to -19.9988 (0.12 seconds)
Cbc0038I Round again with cutoff of -31.5122
Cbc0038I Pass  61: suminf.    2.78316 (25) obj. -45.5041 iterations 0
Cbc0038I Pass  62: suminf.    1.72980 (14) obj. -31.5122 iterations 34
Cbc0038I Pass  63: suminf.    1.19949 (15) obj. -31.5122 iterations 1
Cbc0038I Pass  64: suminf.    3.17387 (15) obj. -31.5122 iterations 9
Cbc0038I Pass  65: suminf.    1.38378 (15) obj. -31.5122 iterations 6
Cbc0038I Pass  66: suminf.    2.07516 (16) obj. -31.5122 iterations 8
Cbc0038I Pass  67: suminf.    2.07516 (16) obj. -31.5122 iterations 5
Cbc0038I Pass  68: suminf.    1.72980 (14) obj. -31.5122 iterations 8
Cbc0038I Pass  69: suminf.    1.19949 (15) obj. -31.5122 iterations 3
Cbc0038I Pass  70: suminf.    3.17387 (15) obj. -31.5122 iterations 9
Cbc0038I Pass  71: suminf.    1.38378 (15) obj. -31.5122 iterations 6
Cbc0038I Pass  72: suminf.    1.29861 (17) obj. -31.5122 iterations 10
Cbc0038I Pass  73: suminf.    1.06731 (9) obj. -31.5122 iterations 6
Cbc0038I Pass  74: suminf.    1.21593 (14) obj. -31.5122 iterations 11
Cbc0038I Pass  75: suminf.    1.19949 (15) obj. -31.5122 iterations 5
Cbc0038I Pass  76: suminf.    3.17387 (15) obj. -31.5122 iterations 9
Cbc0038I Pass  77: suminf.    1.38378 (15) obj. -31.5122 iterations 6
Cbc0038I Pass  78: suminf.    2.40458 (17) obj. -31.5122 iterations 19
Cbc0038I Pass  79: suminf.    1.58637 (14) obj. -31.5122 iterations 12
Cbc0038I Pass  80: suminf.    1.38538 (17) obj. -31.5122 iterations 9
Cbc0038I Pass  81: suminf.    2.98413 (15) obj. -31.5122 iterations 17
Cbc0038I Pass  82: suminf.    1.53832 (14) obj. -31.5122 iterations 6
Cbc0038I Pass  83: suminf.    1.19949 (15) obj. -31.5122 iterations 2
Cbc0038I Pass  84: suminf.    3.17387 (15) obj. -31.5122 iterations 9
Cbc0038I Pass  85: suminf.    1.38378 (15) obj. -31.5122 iterations 8
Cbc0038I Pass  86: suminf.    2.76035 (21) obj. -31.5122 iterations 22
Cbc0038I Pass  87: suminf.    2.29734 (15) obj. -31.5122 iterations 8
Cbc0038I Pass  88: suminf.    1.84444 (14) obj. -31.5122 iterations 27
Cbc0038I Pass  89: suminf.    1.84444 (14) obj. -31.5122 iterations 5
Cbc0038I Pass  90: suminf.    3.27573 (15) obj. -31.5122 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -19.9988 - took 0.14 seconds
Cbc0012I Integer solution of -19.99879 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 92 rows 108 columns, reduced to 17 rows 19 columns
Cbc0031I 45 added rows had average density of 30.577778
Cbc0013I At root node, 45 cuts changed objective from -48.872476 to -30.23997 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7781 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1650 row cuts average 102.8 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 518 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 37 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 886 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 319 row cuts average 62.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 34.8 elements, 0 column cuts (0 active)  in 0.729 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.99879 best solution, best possible -30.23997 (2.41 seconds)
Cbc0012I Integer solution of -20.78561 found by rounding after 3537 iterations and 1 nodes (2.42 seconds)
Cbc0016I Integer solution of -21.24276 found by strong branching after 3584 iterations and 1 nodes (2.53 seconds)
Cbc0012I Integer solution of -21.28403 found by rounding after 3590 iterations and 3 nodes (2.54 seconds)
Cbc0010I After 8 nodes, 5 on tree, -21.28403 best solution, best possible -29.499249 (3.12 seconds)
Cbc0010I After 19 nodes, 10 on tree, -21.28403 best solution, best possible -29.499249 (3.83 seconds)
Cbc0010I After 38 nodes, 9 on tree, -21.28403 best solution, best possible -29.499249 (4.59 seconds)
Cbc0038I Full problem 92 rows 108 columns, reduced to 42 rows 50 columns
Cbc0012I Integer solution of -22.32262 found by RINS after 5479 iterations and 41 nodes (4.92 seconds)
Cbc0010I After 51 nodes, 3 on tree, -22.32262 best solution, best possible -29.499249 (5.37 seconds)
Cbc0010I After 70 nodes, 6 on tree, -22.32262 best solution, best possible -29.18538 (6.11 seconds)
Cbc0010I After 95 nodes, 5 on tree, -22.32262 best solution, best possible -29.18538 (6.83 seconds)
Cbc0038I Full problem 92 rows 108 columns, reduced to 44 rows 52 columns
Cbc0012I Integer solution of -23.24598 found by RINS after 7651 iterations and 98 nodes (7.16 seconds)
Cbc0010I After 109 nodes, 1 on tree, -23.24598 best solution, best possible -29.18538 (7.60 seconds)
Cbc0001I Search completed - best objective -23.24598, took 8642 iterations and 120 nodes (8.07 seconds)
Cbc0032I Strong branching done 1570 times (22734 iterations), fathomed 14 nodes and fixed 30 variables
Cbc0035I Maximum depth 20, 357 variables fixed on reduced cost
Total time (CPU seconds):       5.34   (Wallclock seconds):       8.09

