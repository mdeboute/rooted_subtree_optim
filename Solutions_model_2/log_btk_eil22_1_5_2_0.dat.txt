Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 9.97109e-07 - average 2.76975e-08, 3 fixed columns
Coin0506I Presolve 31 (-5) rows, 19 (-3) columns and 93 (-15) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 63.731426
Clp0000I Optimal - objective value 63.731426
Coin0511I After Postsolve, objective 63.731426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.731426
Clp0000I Optimal - objective value 63.731426
Clp0000I Optimal - objective value 63.731426
Coin0511I After Postsolve, objective 63.731426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.73142575 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.4678
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.4394 iterations 14
Cbc0038I Solution found of -20.4394
Cbc0038I Relaxing continuous gives -20.4394
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -20.4394 to -27.3428 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.9817
Cbc0038I Pass   2: suminf.    0.41507 (2) obj. -30.9817 iterations 2
Cbc0038I Pass   3: suminf.    0.74840 (2) obj. -30.9817 iterations 3
Cbc0038I Pass   4: suminf.    0.74840 (2) obj. -30.9817 iterations 0
Cbc0038I Pass   5: suminf.    0.72380 (2) obj. -30.9817 iterations 2
Cbc0038I Pass   6: suminf.    0.67973 (2) obj. -30.9817 iterations 1
Cbc0038I Pass   7: suminf.    1.99424 (9) obj. -30.9817 iterations 8
Cbc0038I Pass   8: suminf.    1.44438 (4) obj. -30.9817 iterations 7
Cbc0038I Pass   9: suminf.    0.87515 (2) obj. -30.9817 iterations 3
Cbc0038I Pass  10: suminf.    0.66512 (2) obj. -30.9817 iterations 4
Cbc0038I Pass  11: suminf.    0.67418 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  12: suminf.    0.61558 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  13: suminf.    0.66512 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  14: suminf.    0.88391 (5) obj. -30.9817 iterations 4
Cbc0038I Pass  15: suminf.    0.66512 (2) obj. -30.9817 iterations 5
Cbc0038I Pass  16: suminf.    0.66512 (2) obj. -30.9817 iterations 0
Cbc0038I Pass  17: suminf.    0.67418 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  18: suminf.    0.61558 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  19: suminf.    0.77417 (3) obj. -30.9817 iterations 2
Cbc0038I Pass  20: suminf.    0.61558 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  21: suminf.    0.66512 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  22: suminf.    0.66512 (2) obj. -30.9817 iterations 0
Cbc0038I Pass  23: suminf.    0.67418 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  24: suminf.    2.51048 (6) obj. -30.9817 iterations 5
Cbc0038I Pass  25: suminf.    1.18674 (4) obj. -30.9817 iterations 5
Cbc0038I Pass  26: suminf.    1.08742 (4) obj. -30.9817 iterations 4
Cbc0038I Pass  27: suminf.    0.49384 (3) obj. -30.9817 iterations 6
Cbc0038I Pass  28: suminf.    0.90115 (3) obj. -30.9817 iterations 4
Cbc0038I Pass  29: suminf.    0.62085 (3) obj. -30.9817 iterations 1
Cbc0038I Pass  30: suminf.    1.15001 (3) obj. -30.9817 iterations 4
Cbc0038I Pass  31: suminf.    1.02682 (4) obj. -30.9817 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -27.3428 - took 0.02 seconds
Cbc0012I Integer solution of -27.34278 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 27 rows 17 columns
Cbc0031I 10 added rows had average density of 16.7
Cbc0013I At root node, 10 cuts changed objective from -63.731426 to -42.385769 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1215 row cuts average 4.5 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 542 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -27.34277999999999, took 2121 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 42 times (400 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-10) rows, 42 (-2) columns and 318 (-42) elements
Clp1000I sum of infeasibilities 7.27597e-10 - average 2.0211e-11, 11 fixed columns
Coin0506I Presolve 26 (-10) rows, 28 (-14) columns and 159 (-159) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 0.23390982 - largest nonzero change 1.0346575e-05 ( 0.00086221462%) - largest zero change 2.9064617e-05
Clp0000I Optimal - objective value 80.216735
Clp0000I Optimal - objective value 80.216735
Coin0511I After Postsolve, objective 80.216735, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.216735
Clp0000I Optimal - objective value 80.216735
Clp0000I Optimal - objective value 80.216735
Coin0511I After Postsolve, objective 80.216735, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.21673453 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 320 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.011%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.87341
Cbc0038I Pass   1: suminf.    2.17762 (13) obj. -61.6732 iterations 6
Cbc0038I Solution found of -4.53872
Cbc0038I Rounding solution of -22.0202 is better than previous of -4.53872

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -22.0202 to -27.3428 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.0749
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.17762 (13) obj. -61.6732 iterations 0
Cbc0038I Pass   3: suminf.    0.72296 (3) obj. -31.0749 iterations 18
Cbc0038I Pass   4: suminf.    0.72296 (3) obj. -31.0749 iterations 0
Cbc0038I Pass   5: suminf.    0.80763 (4) obj. -31.0749 iterations 4
Cbc0038I Pass   6: suminf.    0.50131 (3) obj. -31.0749 iterations 5
Cbc0038I Pass   7: suminf.    1.00299 (4) obj. -31.0749 iterations 3
Cbc0038I Pass   8: suminf.    1.14426 (6) obj. -31.0749 iterations 8
Cbc0038I Pass   9: suminf.    1.14426 (6) obj. -31.0749 iterations 0
Cbc0038I Pass  10: suminf.    0.52298 (4) obj. -31.0749 iterations 8
Cbc0038I Pass  11: suminf.    0.38950 (3) obj. -33.2962 iterations 3
Cbc0038I Pass  12: suminf.    1.00299 (4) obj. -31.0749 iterations 5
Cbc0038I Pass  13: suminf.    0.72296 (3) obj. -31.0749 iterations 4
Cbc0038I Pass  14: suminf.    0.80763 (4) obj. -31.0749 iterations 4
Cbc0038I Pass  15: suminf.    0.50131 (3) obj. -31.0749 iterations 5
Cbc0038I Pass  16: suminf.    1.00299 (4) obj. -31.0749 iterations 3
Cbc0038I Pass  17: suminf.    1.56967 (7) obj. -31.0749 iterations 14
Cbc0038I Pass  18: suminf.    1.39621 (6) obj. -31.0749 iterations 3
Cbc0038I Pass  19: suminf.    1.06762 (7) obj. -36.2519 iterations 3
Cbc0038I Pass  20: suminf.    1.04594 (6) obj. -31.0749 iterations 3
Cbc0038I Pass  21: suminf.    0.94950 (7) obj. -31.0749 iterations 2
Cbc0038I Pass  22: suminf.    1.06767 (5) obj. -31.0749 iterations 6
Cbc0038I Pass  23: suminf.    0.54958 (5) obj. -31.0749 iterations 6
Cbc0038I Pass  24: suminf.    1.08041 (5) obj. -31.0749 iterations 5
Cbc0038I Pass  25: suminf.    0.70236 (5) obj. -31.0749 iterations 6
Cbc0038I Pass  26: suminf.    1.06767 (5) obj. -31.0749 iterations 5
Cbc0038I Pass  27: suminf.    1.39852 (9) obj. -31.0749 iterations 5
Cbc0038I Pass  28: suminf.    1.12186 (8) obj. -31.0749 iterations 6
Cbc0038I Pass  29: suminf.    1.09217 (4) obj. -31.0749 iterations 10
Cbc0038I Pass  30: suminf.    1.09217 (4) obj. -31.0749 iterations 0
Cbc0038I Pass  31: suminf.    0.88172 (4) obj. -31.0749 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -27.3428 - took 0.01 seconds
Cbc0012I Integer solution of -27.34278 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 5 rows 5 columns
Cbc0031I 14 added rows had average density of 6.7857143
Cbc0013I At root node, 35 cuts changed objective from -64.663033 to -27.342792 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 245 row cuts average 4.8 elements, 10 column cuts (10 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 101 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 1.1536964e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -27.34277999999999, took 227 iterations and 0 nodes (0.23 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 22 (-2) columns and 108 (-21) elements
Clp1000I sum of infeasibilities 9.97109e-07 - average 2.76975e-08, 3 fixed columns
Coin0506I Presolve 31 (-5) rows, 19 (-3) columns and 93 (-15) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 63.731426
Clp0000I Optimal - objective value 63.731426
Coin0511I After Postsolve, objective 63.731426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.731426
Clp0000I Optimal - objective value 63.731426
Clp0000I Optimal - objective value 63.731426
Coin0511I After Postsolve, objective 63.731426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.73142575 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 36 rows, 22 columns (21 integer (21 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.4678
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.4394 iterations 14
Cbc0038I Solution found of -20.4394
Cbc0038I Relaxing continuous gives -20.4394
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -20.4394 to -27.3428 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.9817
Cbc0038I Pass   2: suminf.    0.41507 (2) obj. -30.9817 iterations 2
Cbc0038I Pass   3: suminf.    0.74840 (2) obj. -30.9817 iterations 3
Cbc0038I Pass   4: suminf.    0.74840 (2) obj. -30.9817 iterations 0
Cbc0038I Pass   5: suminf.    0.72380 (2) obj. -30.9817 iterations 2
Cbc0038I Pass   6: suminf.    0.67973 (2) obj. -30.9817 iterations 1
Cbc0038I Pass   7: suminf.    1.99424 (9) obj. -30.9817 iterations 8
Cbc0038I Pass   8: suminf.    1.44438 (4) obj. -30.9817 iterations 7
Cbc0038I Pass   9: suminf.    0.87515 (2) obj. -30.9817 iterations 3
Cbc0038I Pass  10: suminf.    0.66512 (2) obj. -30.9817 iterations 4
Cbc0038I Pass  11: suminf.    0.67418 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  12: suminf.    0.61558 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  13: suminf.    0.66512 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  14: suminf.    0.88391 (5) obj. -30.9817 iterations 4
Cbc0038I Pass  15: suminf.    0.66512 (2) obj. -30.9817 iterations 5
Cbc0038I Pass  16: suminf.    0.66512 (2) obj. -30.9817 iterations 0
Cbc0038I Pass  17: suminf.    0.67418 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  18: suminf.    0.61558 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  19: suminf.    0.77417 (3) obj. -30.9817 iterations 2
Cbc0038I Pass  20: suminf.    0.61558 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  21: suminf.    0.66512 (2) obj. -30.9817 iterations 1
Cbc0038I Pass  22: suminf.    0.66512 (2) obj. -30.9817 iterations 0
Cbc0038I Pass  23: suminf.    0.67418 (2) obj. -30.9817 iterations 2
Cbc0038I Pass  24: suminf.    2.51048 (6) obj. -30.9817 iterations 5
Cbc0038I Pass  25: suminf.    1.18674 (4) obj. -30.9817 iterations 5
Cbc0038I Pass  26: suminf.    1.08742 (4) obj. -30.9817 iterations 4
Cbc0038I Pass  27: suminf.    0.49384 (3) obj. -30.9817 iterations 6
Cbc0038I Pass  28: suminf.    0.90115 (3) obj. -30.9817 iterations 4
Cbc0038I Pass  29: suminf.    0.62085 (3) obj. -30.9817 iterations 1
Cbc0038I Pass  30: suminf.    1.15001 (3) obj. -30.9817 iterations 4
Cbc0038I Pass  31: suminf.    1.02682 (4) obj. -30.9817 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 22 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -27.3428 - took 0.03 seconds
Cbc0012I Integer solution of -27.34278 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 22 columns, reduced to 27 rows 17 columns
Cbc0031I 10 added rows had average density of 16.7
Cbc0013I At root node, 10 cuts changed objective from -63.731426 to -42.385769 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1215 row cuts average 4.5 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 542 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -27.34277999999999, took 2121 iterations and 4 nodes (0.17 seconds)
Cbc0032I Strong branching done 42 times (400 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 42 (-3) columns and 318 (-43) elements
Clp1000I sum of infeasibilities 7.27597e-10 - average 2.0211e-11, 11 fixed columns
Coin0506I Presolve 26 (-10) rows, 28 (-14) columns and 159 (-159) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 0.23390982 - largest nonzero change 1.0346575e-05 ( 0.00086221462%) - largest zero change 2.9064617e-05
Clp0000I Optimal - objective value 80.216735
Clp0000I Optimal - objective value 80.216735
Coin0511I After Postsolve, objective 80.216735, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.216735
Clp0000I Optimal - objective value 80.216735
Clp0000I Optimal - objective value 80.216735
Coin0511I After Postsolve, objective 80.216735, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.21673453 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 320 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.011%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.87341
Cbc0038I Pass   1: suminf.    2.17762 (13) obj. -61.6732 iterations 6
Cbc0038I Solution found of -4.53872
Cbc0038I Rounding solution of -22.0202 is better than previous of -4.53872

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -22.0202 to -27.3428 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.0749
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.17762 (13) obj. -61.6732 iterations 0
Cbc0038I Pass   3: suminf.    0.72296 (3) obj. -31.0749 iterations 18
Cbc0038I Pass   4: suminf.    0.72296 (3) obj. -31.0749 iterations 0
Cbc0038I Pass   5: suminf.    0.80763 (4) obj. -31.0749 iterations 4
Cbc0038I Pass   6: suminf.    0.50131 (3) obj. -31.0749 iterations 5
Cbc0038I Pass   7: suminf.    1.00299 (4) obj. -31.0749 iterations 3
Cbc0038I Pass   8: suminf.    1.14426 (6) obj. -31.0749 iterations 8
Cbc0038I Pass   9: suminf.    1.14426 (6) obj. -31.0749 iterations 0
Cbc0038I Pass  10: suminf.    0.52298 (4) obj. -31.0749 iterations 8
Cbc0038I Pass  11: suminf.    0.38950 (3) obj. -33.2962 iterations 3
Cbc0038I Pass  12: suminf.    1.00299 (4) obj. -31.0749 iterations 5
Cbc0038I Pass  13: suminf.    0.72296 (3) obj. -31.0749 iterations 4
Cbc0038I Pass  14: suminf.    0.80763 (4) obj. -31.0749 iterations 4
Cbc0038I Pass  15: suminf.    0.50131 (3) obj. -31.0749 iterations 5
Cbc0038I Pass  16: suminf.    1.00299 (4) obj. -31.0749 iterations 3
Cbc0038I Pass  17: suminf.    1.56967 (7) obj. -31.0749 iterations 14
Cbc0038I Pass  18: suminf.    1.39621 (6) obj. -31.0749 iterations 3
Cbc0038I Pass  19: suminf.    1.06762 (7) obj. -36.2519 iterations 3
Cbc0038I Pass  20: suminf.    1.04594 (6) obj. -31.0749 iterations 3
Cbc0038I Pass  21: suminf.    0.94950 (7) obj. -31.0749 iterations 2
Cbc0038I Pass  22: suminf.    1.06767 (5) obj. -31.0749 iterations 6
Cbc0038I Pass  23: suminf.    0.54958 (5) obj. -31.0749 iterations 6
Cbc0038I Pass  24: suminf.    1.08041 (5) obj. -31.0749 iterations 5
Cbc0038I Pass  25: suminf.    0.70236 (5) obj. -31.0749 iterations 6
Cbc0038I Pass  26: suminf.    1.06767 (5) obj. -31.0749 iterations 5
Cbc0038I Pass  27: suminf.    1.39852 (9) obj. -31.0749 iterations 5
Cbc0038I Pass  28: suminf.    1.12186 (8) obj. -31.0749 iterations 6
Cbc0038I Pass  29: suminf.    1.09217 (4) obj. -31.0749 iterations 10
Cbc0038I Pass  30: suminf.    1.09217 (4) obj. -31.0749 iterations 0
Cbc0038I Pass  31: suminf.    0.88172 (4) obj. -31.0749 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -27.3428 - took 0.01 seconds
Cbc0012I Integer solution of -27.34278 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 5 rows 5 columns
Cbc0031I 14 added rows had average density of 6.7857143
Cbc0013I At root node, 35 cuts changed objective from -64.663033 to -27.342792 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 245 row cuts average 4.8 elements, 10 column cuts (10 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 101 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 1.1536964e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -27.34277999999999, took 227 iterations and 0 nodes (0.23 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.23

