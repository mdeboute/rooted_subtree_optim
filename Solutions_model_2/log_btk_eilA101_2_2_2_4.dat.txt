Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 186 (-19) rows, 101 (-2) columns and 566 (-37) elements
Clp1000I sum of infeasibilities 2.51935e-05 - average 1.35449e-07, 10 fixed columns
Coin0506I Presolve 166 (-20) rows, 91 (-10) columns and 506 (-60) elements
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 0.26448738 - largest nonzero change 0 ( 0%) - largest zero change 2.7729195e-05
Clp0000I Optimal - objective value 39.004282
Clp0000I Optimal - objective value 39.004282
Coin0511I After Postsolve, objective 39.004282, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.004282
Clp0000I Optimal - objective value 39.004282
Clp0000I Optimal - objective value 39.004282
Coin0511I After Postsolve, objective 39.004282, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.00428213 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 186 rows, 101 columns (100 integer (100 of which binary)) and 566 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.897%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 12.6551
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.3436 iterations 68
Cbc0038I Solution found of 5.3436
Cbc0038I Relaxing continuous gives 5.3436
Cbc0038I Rounding solution of -9.85828 is better than previous of 5.3436

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 97 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -9.85828 to -10.6035 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.4437
Cbc0038I Pass   2: suminf.    2.62468 (9) obj. -13.4437 iterations 19
Cbc0038I Pass   3: suminf.    1.68072 (4) obj. -13.4437 iterations 15
Cbc0038I Pass   4: suminf.    1.24613 (3) obj. -13.4437 iterations 1
Cbc0038I Pass   5: suminf.    1.30345 (4) obj. -13.4437 iterations 3
Cbc0038I Pass   6: suminf.    1.77306 (4) obj. -13.4437 iterations 1
Cbc0038I Pass   7: suminf.    1.06738 (4) obj. -13.4437 iterations 3
Cbc0038I Pass   8: suminf.    1.08280 (4) obj. -13.4437 iterations 1
Cbc0038I Pass   9: suminf.    1.03227 (5) obj. -13.4437 iterations 1
Cbc0038I Pass  10: suminf.    2.35285 (5) obj. -13.4437 iterations 3
Cbc0038I Pass  11: suminf.    1.26495 (4) obj. -13.4437 iterations 3
Cbc0038I Pass  12: suminf.    1.32759 (4) obj. -13.4437 iterations 1
Cbc0038I Pass  13: suminf.    1.27221 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  14: suminf.    1.25425 (7) obj. -13.4437 iterations 29
Cbc0038I Pass  15: suminf.    1.25425 (7) obj. -13.4437 iterations 7
Cbc0038I Pass  16: suminf.    2.14756 (9) obj. -13.4437 iterations 21
Cbc0038I Pass  17: suminf.    1.86606 (5) obj. -13.4437 iterations 8
Cbc0038I Pass  18: suminf.    1.58110 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  19: suminf.    0.96430 (5) obj. -13.4437 iterations 5
Cbc0038I Pass  20: suminf.    2.28274 (5) obj. -13.4437 iterations 3
Cbc0038I Pass  21: suminf.    1.19484 (4) obj. -13.4437 iterations 3
Cbc0038I Pass  22: suminf.    1.25963 (4) obj. -13.4437 iterations 1
Cbc0038I Pass  23: suminf.    1.15054 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  24: suminf.    2.23640 (6) obj. -13.4437 iterations 3
Cbc0038I Pass  25: suminf.    1.46020 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  26: suminf.    1.34475 (6) obj. -13.4437 iterations 2
Cbc0038I Pass  27: suminf.    1.82488 (5) obj. -13.4437 iterations 16
Cbc0038I Pass  28: suminf.    1.40799 (6) obj. -13.4437 iterations 1
Cbc0038I Pass  29: suminf.    1.40799 (6) obj. -13.4437 iterations 0
Cbc0038I Pass  30: suminf.    1.34676 (4) obj. -13.4437 iterations 11
Cbc0038I Pass  31: suminf.    1.34676 (4) obj. -13.4437 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 103 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -10.6035 to -11.2074 (0.12 seconds)
Cbc0038I Round again with cutoff of -18.5558
Cbc0038I Pass  31: suminf.    3.82124 (16) obj. -18.5558 iterations 8
Cbc0038I Pass  32: suminf.    3.02808 (15) obj. -18.5558 iterations 1
Cbc0038I Pass  33: suminf.    2.67615 (9) obj. -18.5558 iterations 25
Cbc0038I Pass  34: suminf.    2.33138 (8) obj. -18.5558 iterations 10
Cbc0038I Pass  35: suminf.    1.97422 (7) obj. -18.5558 iterations 11
Cbc0038I Pass  36: suminf.    1.89247 (7) obj. -18.5558 iterations 2
Cbc0038I Pass  37: suminf.    1.55238 (4) obj. -18.5558 iterations 10
Cbc0038I Pass  38: suminf.    1.55238 (4) obj. -18.5558 iterations 6
Cbc0038I Pass  39: suminf.    1.75696 (5) obj. -18.5558 iterations 2
Cbc0038I Pass  40: suminf.    1.49789 (4) obj. -18.5558 iterations 3
Cbc0038I Pass  41: suminf.    1.69522 (4) obj. -18.5558 iterations 1
Cbc0038I Pass  42: suminf.    4.58276 (12) obj. -18.5558 iterations 29
Cbc0038I Pass  43: suminf.    2.91067 (13) obj. -18.5558 iterations 17
Cbc0038I Pass  44: suminf.    2.59827 (11) obj. -18.5558 iterations 3
Cbc0038I Pass  45: suminf.    2.05692 (8) obj. -18.5558 iterations 31
Cbc0038I Pass  46: suminf.    1.70501 (7) obj. -18.5558 iterations 12
Cbc0038I Pass  47: suminf.    1.69910 (6) obj. -18.5558 iterations 1
Cbc0038I Pass  48: suminf.    1.66923 (5) obj. -18.5558 iterations 5
Cbc0038I Pass  49: suminf.    1.55370 (5) obj. -18.5558 iterations 3
Cbc0038I Pass  50: suminf.    1.37614 (5) obj. -18.5558 iterations 3
Cbc0038I Pass  51: suminf.    1.37614 (5) obj. -18.5558 iterations 0
Cbc0038I Pass  52: suminf.    2.35423 (9) obj. -18.5558 iterations 20
Cbc0038I Pass  53: suminf.    1.20797 (6) obj. -18.5558 iterations 14
Cbc0038I Pass  54: suminf.    1.30355 (4) obj. -18.5558 iterations 10
Cbc0038I Pass  55: suminf.    1.12741 (5) obj. -18.5558 iterations 2
Cbc0038I Pass  56: suminf.    1.64872 (4) obj. -18.5558 iterations 4
Cbc0038I Pass  57: suminf.    1.10478 (4) obj. -18.5558 iterations 3
Cbc0038I Pass  58: suminf.    1.29804 (4) obj. -18.5558 iterations 1
Cbc0038I Pass  59: suminf.    1.29487 (6) obj. -18.5558 iterations 2
Cbc0038I Pass  60: suminf.    1.69853 (4) obj. -18.5558 iterations 10
Cbc0038I Rounding solution of -11.2427 is better than previous of -11.2074

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 115 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of -24.6903
Cbc0038I Pass  60: suminf.    5.29697 (21) obj. -24.6903 iterations 4
Cbc0038I Pass  61: suminf.    4.49435 (15) obj. -24.6903 iterations 5
Cbc0038I Pass  62: suminf.    3.33241 (9) obj. -24.6903 iterations 25
Cbc0038I Pass  63: suminf.    2.95558 (10) obj. -24.6903 iterations 4
Cbc0038I Pass  64: suminf.    2.47815 (7) obj. -24.6903 iterations 13
Cbc0038I Pass  65: suminf.    2.02273 (7) obj. -24.6903 iterations 5
Cbc0038I Pass  66: suminf.    2.25815 (7) obj. -24.6903 iterations 9
Cbc0038I Pass  67: suminf.    1.94813 (7) obj. -24.6903 iterations 6
Cbc0038I Pass  68: suminf.    6.04567 (19) obj. -24.6903 iterations 32
Cbc0038I Pass  69: suminf.    1.79745 (7) obj. -24.6903 iterations 14
Cbc0038I Pass  70: suminf.    1.68568 (6) obj. -24.6903 iterations 7
Cbc0038I Pass  71: suminf.    1.90924 (7) obj. -24.6903 iterations 13
Cbc0038I Pass  72: suminf.    1.78988 (7) obj. -24.6903 iterations 3
Cbc0038I Pass  73: suminf.    1.79221 (8) obj. -24.6903 iterations 1
Cbc0038I Pass  74: suminf.    2.40805 (8) obj. -24.6903 iterations 14
Cbc0038I Pass  75: suminf.    2.06932 (8) obj. -24.6903 iterations 5
Cbc0038I Pass  76: suminf.    2.06343 (7) obj. -24.6903 iterations 1
Cbc0038I Pass  77: suminf.    1.95921 (6) obj. -24.6903 iterations 5
Cbc0038I Pass  78: suminf.    1.84659 (6) obj. -24.6903 iterations 1
Cbc0038I Pass  79: suminf.    1.75342 (6) obj. -24.6903 iterations 3
Cbc0038I Pass  80: suminf.    1.73706 (6) obj. -24.6903 iterations 4
Cbc0038I Pass  81: suminf.    3.41724 (11) obj. -24.6903 iterations 22
Cbc0038I Pass  82: suminf.    2.23835 (8) obj. -24.6903 iterations 19
Cbc0038I Pass  83: suminf.    1.95579 (6) obj. -24.6903 iterations 13
Cbc0038I Pass  84: suminf.    1.87319 (6) obj. -24.6903 iterations 1
Cbc0038I Pass  85: suminf.    1.62439 (8) obj. -24.6903 iterations 8
Cbc0038I Pass  86: suminf.    1.59564 (7) obj. -24.6903 iterations 5
Cbc0038I Pass  87: suminf.    1.59564 (7) obj. -24.6903 iterations 1
Cbc0038I Pass  88: suminf.    2.36755 (9) obj. -24.6903 iterations 15
Cbc0038I Pass  89: suminf.    2.36755 (9) obj. -24.6903 iterations 0
Cbc0038I Rounding solution of -12.0043 is better than previous of -11.2427

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 117 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I Round again with cutoff of -28.9845
Cbc0038I Pass  89: suminf.    6.35906 (21) obj. -28.9845 iterations 0
Cbc0038I Pass  90: suminf.    5.55571 (20) obj. -28.9845 iterations 1
Cbc0038I Pass  91: suminf.    4.46348 (14) obj. -28.9845 iterations 23
Cbc0038I Pass  92: suminf.    3.67427 (13) obj. -28.9845 iterations 5
Cbc0038I Pass  93: suminf.    3.67364 (12) obj. -28.9845 iterations 2
Cbc0038I Pass  94: suminf.    4.19198 (12) obj. -28.9845 iterations 25
Cbc0038I Pass  95: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass  96: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass  97: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass  98: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass  99: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 100: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 101: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 102: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass 103: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass 104: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 105: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 106: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 107: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass 108: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass 109: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 110: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 111: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 112: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass 113: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass 114: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 115: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 116: suminf.    4.04212 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 117: suminf.    3.47777 (10) obj. -28.9845 iterations 5
Cbc0038I Pass 118: suminf.    4.56605 (12) obj. -28.9845 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 101 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -12.0043 - took 0.26 seconds
Cbc0012I Integer solution of -12.004297 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 186 rows 101 columns, reduced to 102 rows 58 columns
Cbc0012I Integer solution of -12.175127 found by RINS after 0 iterations and 0 nodes (0.34 seconds)
Cbc0031I 39 added rows had average density of 63.846154
Cbc0013I At root node, 39 cuts changed objective from -39.004282 to -30.127067 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16652 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2167 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.175127 best solution, best possible -30.127067 (1.65 seconds)
Cbc0016I Integer solution of -12.253133 found by strong branching after 11310 iterations and 30 nodes (1.94 seconds)
Cbc0038I Full problem 186 rows 101 columns, reduced to 7 rows 8 columns
Cbc0038I Full problem 186 rows 101 columns, reduced to 33 rows 26 columns
Cbc0012I Integer solution of -12.388797 found by rounding after 13309 iterations and 98 nodes (2.18 seconds)
Cbc0012I Integer solution of -12.410933 found by rounding after 13463 iterations and 120 nodes (2.20 seconds)
Cbc0004I Integer solution of -12.795853 found after 13515 iterations and 128 nodes (2.20 seconds)
Cbc0001I Search completed - best objective -12.795853, took 15539 iterations and 188 nodes (2.33 seconds)
Cbc0032I Strong branching done 1818 times (31330 iterations), fathomed 23 nodes and fixed 153 variables
Cbc0035I Maximum depth 40, 369 variables fixed on reduced cost
Total time (CPU seconds):       2.27   (Wallclock seconds):       2.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-64) rows, 154 (-48) columns and 3010 (-2643) elements
Clp1000I sum of infeasibilities 3.3295e-08 - average 2.37821e-10, 83 fixed columns
Coin0506I Presolve 59 (-81) rows, 71 (-83) columns and 254 (-2756) elements
Clp0006I 0  Obj -15.020014 Dual inf 2.8950316 (71)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 1.5976555 - largest nonzero change 1.8584879e-05 ( 0.00085132148%) - largest zero change 2.9709018e-05
Clp0000I Optimal - objective value -4.3332134
Clp0000I Optimal - objective value -4.3332134
Coin0511I After Postsolve, objective -4.3332134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.3332134 Dual inf 83.214473 (54)
Clp0014I Perturbing problem by 0.001% of 1.6336116 - largest nonzero change 2.7523163e-05 ( 0.0022879966%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.205904
Clp0000I Optimal - objective value 49.205904
Clp0000I Optimal - objective value 49.205904
Coin0511I After Postsolve, objective 49.205904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.20590449 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 140 rows, 154 columns (154 integer (154 of which binary)) and 3013 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.943%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 9.35909
Cbc0038I Pass   1: suminf.    2.74346 (40) obj. -25.5081 iterations 26
Cbc0038I Pass   2: suminf.    2.74346 (40) obj. -25.5081 iterations 2
Cbc0038I Pass   3: suminf.    1.09256 (21) obj. -6.36414 iterations 19
Cbc0038I Solution found of 17.3008
Cbc0038I Rounding solution of 8.5693 is better than previous of 17.3008

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 154 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 8.5693 to 8.15835 (0.05 seconds)
Cbc0038I Round again with cutoff of 3.02627
Cbc0038I Pass   4: suminf.    2.74346 (40) obj. -25.5081 iterations 0
Cbc0038I Pass   5: suminf.    2.74346 (40) obj. -25.5081 iterations 2
Cbc0038I Pass   6: suminf.    1.02438 (20) obj. -5.43232 iterations 20
Cbc0038I Pass   7: suminf.    0.52620 (13) obj. 3.02627 iterations 46
Cbc0038I Pass   8: suminf.    0.40166 (2) obj. 3.02627 iterations 20
Cbc0038I Pass   9: suminf.    0.25652 (3) obj. 3.02627 iterations 9
Cbc0038I Pass  10: suminf.    0.57442 (3) obj. 3.02627 iterations 13
Cbc0038I Pass  11: suminf.    0.57442 (3) obj. 3.02627 iterations 0
Cbc0038I Pass  12: suminf.    0.50476 (2) obj. 2.48729 iterations 5
Cbc0038I Pass  13: suminf.    0.57442 (3) obj. 3.02627 iterations 12
Cbc0038I Pass  14: suminf.    1.38578 (16) obj. 3.02627 iterations 54
Cbc0038I Pass  15: suminf.    1.22984 (13) obj. 3.02627 iterations 14
Cbc0038I Pass  16: suminf.    0.98088 (13) obj. 3.02627 iterations 35
Cbc0038I Pass  17: suminf.    0.98088 (13) obj. 3.02627 iterations 0
Cbc0038I Pass  18: suminf.    2.52999 (9) obj. 3.02627 iterations 17
Cbc0038I Pass  19: suminf.    1.71174 (10) obj. 3.02627 iterations 12
Cbc0038I Pass  20: suminf.    2.36894 (9) obj. 3.02627 iterations 11
Cbc0038I Pass  21: suminf.    2.28010 (9) obj. 3.02627 iterations 4
Cbc0038I Pass  22: suminf.    3.34233 (11) obj. 3.02627 iterations 32
Cbc0038I Pass  23: suminf.    2.11605 (8) obj. 3.02627 iterations 14
Cbc0038I Pass  24: suminf.    3.01530 (10) obj. 3.02627 iterations 8
Cbc0038I Pass  25: suminf.    2.14732 (8) obj. 3.02627 iterations 10
Cbc0038I Pass  26: suminf.    3.00981 (10) obj. 3.02627 iterations 8
Cbc0038I Pass  27: suminf.    3.12706 (16) obj. 3.02627 iterations 30
Cbc0038I Pass  28: suminf.    2.70424 (15) obj. 3.02627 iterations 19
Cbc0038I Pass  29: suminf.    2.48728 (9) obj. 3.02627 iterations 25
Cbc0038I Pass  30: suminf.    2.20543 (8) obj. 3.02627 iterations 5
Cbc0038I Pass  31: suminf.    2.24312 (11) obj. 3.02627 iterations 7
Cbc0038I Pass  32: suminf.    2.22789 (8) obj. 3.02627 iterations 6
Cbc0038I Pass  33: suminf.    2.22060 (11) obj. 3.02627 iterations 7
Cbc0038I Rounding solution of 4.40727 is better than previous of 8.15835

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 154 columns, reduced to 38 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 4.40727 to -6.60736 (0.09 seconds)
Cbc0038I Round again with cutoff of -13.9183
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.74346 (40) obj. -25.5081 iterations 0
Cbc0038I Pass  34: suminf.    2.74346 (40) obj. -25.5081 iterations 2
Cbc0038I Pass  35: suminf.    1.93232 (28) obj. -13.9183 iterations 17
Cbc0038I Pass  36: suminf.    2.68788 (24) obj. -13.9183 iterations 47
Cbc0038I Pass  37: suminf.    1.62286 (25) obj. -13.9183 iterations 11
Cbc0038I Pass  38: suminf.    1.62286 (25) obj. -13.9183 iterations 0
Cbc0038I Pass  39: suminf.    3.96126 (21) obj. -13.9183 iterations 25
Cbc0038I Pass  40: suminf.    3.43334 (22) obj. -13.9183 iterations 5
Cbc0038I Pass  41: suminf.    4.70666 (22) obj. -13.9183 iterations 18
Cbc0038I Pass  42: suminf.    4.21566 (22) obj. -13.9183 iterations 3
Cbc0038I Pass  43: suminf.    4.17363 (22) obj. -13.9183 iterations 7
Cbc0038I Pass  44: suminf.    4.17363 (22) obj. -13.9183 iterations 5
Cbc0038I Pass  45: suminf.    3.99335 (22) obj. -13.9183 iterations 6
Cbc0038I Pass  46: suminf.    3.99335 (22) obj. -13.9183 iterations 5
Cbc0038I Pass  47: suminf.    4.76791 (23) obj. -13.9183 iterations 7
Cbc0038I Pass  48: suminf.    4.58207 (22) obj. -13.9183 iterations 8
Cbc0038I Pass  49: suminf.    3.93951 (21) obj. -13.9183 iterations 13
Cbc0038I Pass  50: suminf.    3.38482 (19) obj. -13.9183 iterations 10
Cbc0038I Pass  51: suminf.    3.79658 (20) obj. -13.9183 iterations 10
Cbc0038I Pass  52: suminf.    3.75846 (23) obj. -13.9183 iterations 24
Cbc0038I Pass  53: suminf.    3.62804 (21) obj. -13.9183 iterations 6
Cbc0038I Pass  54: suminf.    4.09316 (21) obj. -13.9183 iterations 21
Cbc0038I Pass  55: suminf.    3.96494 (21) obj. -13.9183 iterations 6
Cbc0038I Pass  56: suminf.    4.44638 (22) obj. -13.9183 iterations 12
Cbc0038I Pass  57: suminf.    4.13580 (23) obj. -13.9183 iterations 9
Cbc0038I Pass  58: suminf.    4.84710 (22) obj. -13.9183 iterations 15
Cbc0038I Pass  59: suminf.    4.18060 (22) obj. -13.9183 iterations 8
Cbc0038I Pass  60: suminf.    3.68419 (21) obj. -13.9183 iterations 7
Cbc0038I Pass  61: suminf.    3.93951 (21) obj. -13.9183 iterations 25
Cbc0038I Pass  62: suminf.    3.38482 (19) obj. -13.9183 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 154 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -6.60736 - took 0.07 seconds
Cbc0012I Integer solution of -6.607363 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 140 rows 154 columns, reduced to 15 rows 17 columns
Cbc0031I 80 added rows had average density of 48.85
Cbc0013I At root node, 80 cuts changed objective from -43.161502 to -17.670859 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23202 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.192 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2548 row cuts average 148.0 elements, 0 column cuts (0 active)  in 0.323 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1279 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1661 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 451 row cuts average 84.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 74 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.334 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.607363 best solution, best possible -17.670859 (2.93 seconds)
Cbc0012I Integer solution of -10.359007 found by rounding after 8591 iterations and 1 nodes (2.94 seconds)
Cbc0012I Integer solution of -11.943157 found by rounding after 8655 iterations and 2 nodes (2.96 seconds)
Cbc0012I Integer solution of -12.378047 found by DiveCoefficient after 8655 iterations and 2 nodes (2.96 seconds)
Cbc0016I Integer solution of -12.795853 found by strong branching after 8694 iterations and 9 nodes (2.98 seconds)
Cbc0010I After 20 nodes, 3 on tree, -12.795853 best solution, best possible -17.652017 (3.65 seconds)
Cbc0010I After 31 nodes, 9 on tree, -12.795853 best solution, best possible -17.652017 (4.36 seconds)
Cbc0038I Full problem 140 rows 154 columns, reduced to 74 rows 86 columns
Cbc0010I After 75 nodes, 9 on tree, -12.795853 best solution, best possible -17.652017 (5.06 seconds)
Cbc0038I Full problem 140 rows 154 columns, reduced to 80 rows 90 columns
Cbc0010I After 102 nodes, 5 on tree, -12.795853 best solution, best possible -17.366754 (5.89 seconds)
Cbc0010I After 120 nodes, 5 on tree, -12.795853 best solution, best possible -17.366754 (6.62 seconds)
Cbc0010I After 132 nodes, 5 on tree, -12.795853 best solution, best possible -17.366754 (7.40 seconds)
Cbc0010I After 162 nodes, 7 on tree, -12.795853 best solution, best possible -17.366754 (8.12 seconds)
Cbc0010I After 185 nodes, 3 on tree, -12.795853 best solution, best possible -15.170676 (8.84 seconds)
Cbc0001I Search completed - best objective -12.795853, took 22048 iterations and 188 nodes (8.85 seconds)
Cbc0032I Strong branching done 2240 times (60979 iterations), fathomed 17 nodes and fixed 11 variables
Cbc0035I Maximum depth 18, 314 variables fixed on reduced cost
Total time (CPU seconds):       8.55   (Wallclock seconds):       8.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 186 (-19) rows, 101 (-2) columns and 566 (-37) elements
Clp1000I sum of infeasibilities 2.51935e-05 - average 1.35449e-07, 10 fixed columns
Coin0506I Presolve 166 (-20) rows, 91 (-10) columns and 506 (-60) elements
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 0.26448738 - largest nonzero change 0 ( 0%) - largest zero change 2.7729195e-05
Clp0000I Optimal - objective value 39.004282
Clp0000I Optimal - objective value 39.004282
Coin0511I After Postsolve, objective 39.004282, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.004282
Clp0000I Optimal - objective value 39.004282
Clp0000I Optimal - objective value 39.004282
Coin0511I After Postsolve, objective 39.004282, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.00428213 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 186 rows, 101 columns (100 integer (100 of which binary)) and 566 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.897%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 12.6551
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.3436 iterations 68
Cbc0038I Solution found of 5.3436
Cbc0038I Relaxing continuous gives 5.3436
Cbc0038I Rounding solution of -9.85828 is better than previous of 5.3436

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 97 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -9.85828 to -10.6035 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.4437
Cbc0038I Pass   2: suminf.    2.62468 (9) obj. -13.4437 iterations 19
Cbc0038I Pass   3: suminf.    1.68072 (4) obj. -13.4437 iterations 15
Cbc0038I Pass   4: suminf.    1.24613 (3) obj. -13.4437 iterations 1
Cbc0038I Pass   5: suminf.    1.30345 (4) obj. -13.4437 iterations 3
Cbc0038I Pass   6: suminf.    1.77306 (4) obj. -13.4437 iterations 1
Cbc0038I Pass   7: suminf.    1.06738 (4) obj. -13.4437 iterations 3
Cbc0038I Pass   8: suminf.    1.08280 (4) obj. -13.4437 iterations 1
Cbc0038I Pass   9: suminf.    1.03227 (5) obj. -13.4437 iterations 1
Cbc0038I Pass  10: suminf.    2.35285 (5) obj. -13.4437 iterations 3
Cbc0038I Pass  11: suminf.    1.26495 (4) obj. -13.4437 iterations 3
Cbc0038I Pass  12: suminf.    1.32759 (4) obj. -13.4437 iterations 1
Cbc0038I Pass  13: suminf.    1.27221 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  14: suminf.    1.25425 (7) obj. -13.4437 iterations 29
Cbc0038I Pass  15: suminf.    1.25425 (7) obj. -13.4437 iterations 7
Cbc0038I Pass  16: suminf.    2.14756 (9) obj. -13.4437 iterations 21
Cbc0038I Pass  17: suminf.    1.86606 (5) obj. -13.4437 iterations 8
Cbc0038I Pass  18: suminf.    1.58110 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  19: suminf.    0.96430 (5) obj. -13.4437 iterations 5
Cbc0038I Pass  20: suminf.    2.28274 (5) obj. -13.4437 iterations 3
Cbc0038I Pass  21: suminf.    1.19484 (4) obj. -13.4437 iterations 3
Cbc0038I Pass  22: suminf.    1.25963 (4) obj. -13.4437 iterations 1
Cbc0038I Pass  23: suminf.    1.15054 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  24: suminf.    2.23640 (6) obj. -13.4437 iterations 3
Cbc0038I Pass  25: suminf.    1.46020 (5) obj. -13.4437 iterations 2
Cbc0038I Pass  26: suminf.    1.34475 (6) obj. -13.4437 iterations 2
Cbc0038I Pass  27: suminf.    1.82488 (5) obj. -13.4437 iterations 16
Cbc0038I Pass  28: suminf.    1.40799 (6) obj. -13.4437 iterations 1
Cbc0038I Pass  29: suminf.    1.40799 (6) obj. -13.4437 iterations 0
Cbc0038I Pass  30: suminf.    1.34676 (4) obj. -13.4437 iterations 11
Cbc0038I Pass  31: suminf.    1.34676 (4) obj. -13.4437 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 103 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -10.6035 to -11.2074 (0.13 seconds)
Cbc0038I Round again with cutoff of -18.5558
Cbc0038I Pass  31: suminf.    3.82124 (16) obj. -18.5558 iterations 8
Cbc0038I Pass  32: suminf.    3.02808 (15) obj. -18.5558 iterations 1
Cbc0038I Pass  33: suminf.    2.67615 (9) obj. -18.5558 iterations 25
Cbc0038I Pass  34: suminf.    2.33138 (8) obj. -18.5558 iterations 10
Cbc0038I Pass  35: suminf.    1.97422 (7) obj. -18.5558 iterations 11
Cbc0038I Pass  36: suminf.    1.89247 (7) obj. -18.5558 iterations 2
Cbc0038I Pass  37: suminf.    1.55238 (4) obj. -18.5558 iterations 10
Cbc0038I Pass  38: suminf.    1.55238 (4) obj. -18.5558 iterations 6
Cbc0038I Pass  39: suminf.    1.75696 (5) obj. -18.5558 iterations 2
Cbc0038I Pass  40: suminf.    1.49789 (4) obj. -18.5558 iterations 3
Cbc0038I Pass  41: suminf.    1.69522 (4) obj. -18.5558 iterations 1
Cbc0038I Pass  42: suminf.    4.58276 (12) obj. -18.5558 iterations 29
Cbc0038I Pass  43: suminf.    2.91067 (13) obj. -18.5558 iterations 17
Cbc0038I Pass  44: suminf.    2.59827 (11) obj. -18.5558 iterations 3
Cbc0038I Pass  45: suminf.    2.05692 (8) obj. -18.5558 iterations 31
Cbc0038I Pass  46: suminf.    1.70501 (7) obj. -18.5558 iterations 12
Cbc0038I Pass  47: suminf.    1.69910 (6) obj. -18.5558 iterations 1
Cbc0038I Pass  48: suminf.    1.66923 (5) obj. -18.5558 iterations 5
Cbc0038I Pass  49: suminf.    1.55370 (5) obj. -18.5558 iterations 3
Cbc0038I Pass  50: suminf.    1.37614 (5) obj. -18.5558 iterations 3
Cbc0038I Pass  51: suminf.    1.37614 (5) obj. -18.5558 iterations 0
Cbc0038I Pass  52: suminf.    2.35423 (9) obj. -18.5558 iterations 20
Cbc0038I Pass  53: suminf.    1.20797 (6) obj. -18.5558 iterations 14
Cbc0038I Pass  54: suminf.    1.30355 (4) obj. -18.5558 iterations 10
Cbc0038I Pass  55: suminf.    1.12741 (5) obj. -18.5558 iterations 2
Cbc0038I Pass  56: suminf.    1.64872 (4) obj. -18.5558 iterations 4
Cbc0038I Pass  57: suminf.    1.10478 (4) obj. -18.5558 iterations 3
Cbc0038I Pass  58: suminf.    1.29804 (4) obj. -18.5558 iterations 1
Cbc0038I Pass  59: suminf.    1.29487 (6) obj. -18.5558 iterations 2
Cbc0038I Pass  60: suminf.    1.69853 (4) obj. -18.5558 iterations 10
Cbc0038I Rounding solution of -11.2427 is better than previous of -11.2074

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 115 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I Round again with cutoff of -24.6903
Cbc0038I Pass  60: suminf.    5.29697 (21) obj. -24.6903 iterations 4
Cbc0038I Pass  61: suminf.    4.49435 (15) obj. -24.6903 iterations 5
Cbc0038I Pass  62: suminf.    3.33241 (9) obj. -24.6903 iterations 25
Cbc0038I Pass  63: suminf.    2.95558 (10) obj. -24.6903 iterations 4
Cbc0038I Pass  64: suminf.    2.47815 (7) obj. -24.6903 iterations 13
Cbc0038I Pass  65: suminf.    2.02273 (7) obj. -24.6903 iterations 5
Cbc0038I Pass  66: suminf.    2.25815 (7) obj. -24.6903 iterations 9
Cbc0038I Pass  67: suminf.    1.94813 (7) obj. -24.6903 iterations 6
Cbc0038I Pass  68: suminf.    6.04567 (19) obj. -24.6903 iterations 32
Cbc0038I Pass  69: suminf.    1.79745 (7) obj. -24.6903 iterations 14
Cbc0038I Pass  70: suminf.    1.68568 (6) obj. -24.6903 iterations 7
Cbc0038I Pass  71: suminf.    1.90924 (7) obj. -24.6903 iterations 13
Cbc0038I Pass  72: suminf.    1.78988 (7) obj. -24.6903 iterations 3
Cbc0038I Pass  73: suminf.    1.79221 (8) obj. -24.6903 iterations 1
Cbc0038I Pass  74: suminf.    2.40805 (8) obj. -24.6903 iterations 14
Cbc0038I Pass  75: suminf.    2.06932 (8) obj. -24.6903 iterations 5
Cbc0038I Pass  76: suminf.    2.06343 (7) obj. -24.6903 iterations 1
Cbc0038I Pass  77: suminf.    1.95921 (6) obj. -24.6903 iterations 5
Cbc0038I Pass  78: suminf.    1.84659 (6) obj. -24.6903 iterations 1
Cbc0038I Pass  79: suminf.    1.75342 (6) obj. -24.6903 iterations 3
Cbc0038I Pass  80: suminf.    1.73706 (6) obj. -24.6903 iterations 4
Cbc0038I Pass  81: suminf.    3.41724 (11) obj. -24.6903 iterations 22
Cbc0038I Pass  82: suminf.    2.23835 (8) obj. -24.6903 iterations 19
Cbc0038I Pass  83: suminf.    1.95579 (6) obj. -24.6903 iterations 13
Cbc0038I Pass  84: suminf.    1.87319 (6) obj. -24.6903 iterations 1
Cbc0038I Pass  85: suminf.    1.62439 (8) obj. -24.6903 iterations 8
Cbc0038I Pass  86: suminf.    1.59564 (7) obj. -24.6903 iterations 5
Cbc0038I Pass  87: suminf.    1.59564 (7) obj. -24.6903 iterations 1
Cbc0038I Pass  88: suminf.    2.36755 (9) obj. -24.6903 iterations 15
Cbc0038I Pass  89: suminf.    2.36755 (9) obj. -24.6903 iterations 0
Cbc0038I Rounding solution of -12.0043 is better than previous of -11.2427

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 117 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I Round again with cutoff of -28.9845
Cbc0038I Pass  89: suminf.    6.35906 (21) obj. -28.9845 iterations 0
Cbc0038I Pass  90: suminf.    5.55571 (20) obj. -28.9845 iterations 1
Cbc0038I Pass  91: suminf.    4.46348 (14) obj. -28.9845 iterations 23
Cbc0038I Pass  92: suminf.    3.67427 (13) obj. -28.9845 iterations 5
Cbc0038I Pass  93: suminf.    3.67364 (12) obj. -28.9845 iterations 2
Cbc0038I Pass  94: suminf.    4.19198 (12) obj. -28.9845 iterations 25
Cbc0038I Pass  95: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass  96: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass  97: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass  98: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass  99: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 100: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 101: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 102: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass 103: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass 104: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 105: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 106: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 107: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass 108: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass 109: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 110: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 111: suminf.    4.27080 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 112: suminf.    3.71843 (11) obj. -28.9845 iterations 4
Cbc0038I Pass 113: suminf.    3.53735 (11) obj. -28.9845 iterations 1
Cbc0038I Pass 114: suminf.    4.19198 (12) obj. -28.9845 iterations 28
Cbc0038I Pass 115: suminf.    4.19406 (13) obj. -28.9845 iterations 1
Cbc0038I Pass 116: suminf.    4.04212 (13) obj. -28.9845 iterations 21
Cbc0038I Pass 117: suminf.    3.47777 (10) obj. -28.9845 iterations 5
Cbc0038I Pass 118: suminf.    4.56605 (12) obj. -28.9845 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 101 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -12.0043 - took 0.29 seconds
Cbc0012I Integer solution of -12.004297 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 186 rows 101 columns, reduced to 102 rows 58 columns
Cbc0012I Integer solution of -12.175127 found by RINS after 0 iterations and 0 nodes (0.38 seconds)
Cbc0031I 39 added rows had average density of 63.846154
Cbc0013I At root node, 39 cuts changed objective from -39.004282 to -30.127067 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16652 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2167 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.175127 best solution, best possible -30.127067 (1.75 seconds)
Cbc0016I Integer solution of -12.253133 found by strong branching after 11310 iterations and 30 nodes (2.06 seconds)
Cbc0038I Full problem 186 rows 101 columns, reduced to 7 rows 8 columns
Cbc0038I Full problem 186 rows 101 columns, reduced to 33 rows 26 columns
Cbc0012I Integer solution of -12.388797 found by rounding after 13309 iterations and 98 nodes (2.30 seconds)
Cbc0012I Integer solution of -12.410933 found by rounding after 13463 iterations and 120 nodes (2.31 seconds)
Cbc0004I Integer solution of -12.795853 found after 13515 iterations and 128 nodes (2.32 seconds)
Cbc0001I Search completed - best objective -12.795853, took 15539 iterations and 188 nodes (2.45 seconds)
Cbc0032I Strong branching done 1818 times (31330 iterations), fathomed 23 nodes and fixed 153 variables
Cbc0035I Maximum depth 40, 369 variables fixed on reduced cost
Total time (CPU seconds):       2.36   (Wallclock seconds):       2.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-65) rows, 154 (-49) columns and 3010 (-2644) elements
Clp1000I sum of infeasibilities 3.3295e-08 - average 2.37821e-10, 83 fixed columns
Coin0506I Presolve 59 (-81) rows, 71 (-83) columns and 254 (-2756) elements
Clp0006I 0  Obj -15.020014 Dual inf 2.8950316 (71)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 1.5976555 - largest nonzero change 1.8584879e-05 ( 0.00085132148%) - largest zero change 2.9709018e-05
Clp0000I Optimal - objective value -4.3332134
Clp0000I Optimal - objective value -4.3332134
Coin0511I After Postsolve, objective -4.3332134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.3332134 Dual inf 83.214473 (54)
Clp0014I Perturbing problem by 0.001% of 1.6336116 - largest nonzero change 2.7523163e-05 ( 0.0022879966%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.205904
Clp0000I Optimal - objective value 49.205904
Clp0000I Optimal - objective value 49.205904
Coin0511I After Postsolve, objective 49.205904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.20590449 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 140 rows, 154 columns (154 integer (154 of which binary)) and 3013 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.943%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 9.35909
Cbc0038I Pass   1: suminf.    2.74346 (40) obj. -25.5081 iterations 26
Cbc0038I Pass   2: suminf.    2.74346 (40) obj. -25.5081 iterations 2
Cbc0038I Pass   3: suminf.    1.09256 (21) obj. -6.36414 iterations 19
Cbc0038I Solution found of 17.3008
Cbc0038I Rounding solution of 8.5693 is better than previous of 17.3008

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 154 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 8.5693 to 8.15835 (0.05 seconds)
Cbc0038I Round again with cutoff of 3.02627
Cbc0038I Pass   4: suminf.    2.74346 (40) obj. -25.5081 iterations 0
Cbc0038I Pass   5: suminf.    2.74346 (40) obj. -25.5081 iterations 2
Cbc0038I Pass   6: suminf.    1.02438 (20) obj. -5.43232 iterations 20
Cbc0038I Pass   7: suminf.    0.52620 (13) obj. 3.02627 iterations 46
Cbc0038I Pass   8: suminf.    0.40166 (2) obj. 3.02627 iterations 20
Cbc0038I Pass   9: suminf.    0.25652 (3) obj. 3.02627 iterations 9
Cbc0038I Pass  10: suminf.    0.57442 (3) obj. 3.02627 iterations 13
Cbc0038I Pass  11: suminf.    0.57442 (3) obj. 3.02627 iterations 0
Cbc0038I Pass  12: suminf.    0.50476 (2) obj. 2.48729 iterations 5
Cbc0038I Pass  13: suminf.    0.57442 (3) obj. 3.02627 iterations 12
Cbc0038I Pass  14: suminf.    1.38578 (16) obj. 3.02627 iterations 54
Cbc0038I Pass  15: suminf.    1.22984 (13) obj. 3.02627 iterations 14
Cbc0038I Pass  16: suminf.    0.98088 (13) obj. 3.02627 iterations 35
Cbc0038I Pass  17: suminf.    0.98088 (13) obj. 3.02627 iterations 0
Cbc0038I Pass  18: suminf.    2.52999 (9) obj. 3.02627 iterations 17
Cbc0038I Pass  19: suminf.    1.71174 (10) obj. 3.02627 iterations 12
Cbc0038I Pass  20: suminf.    2.36894 (9) obj. 3.02627 iterations 11
Cbc0038I Pass  21: suminf.    2.28010 (9) obj. 3.02627 iterations 4
Cbc0038I Pass  22: suminf.    3.34233 (11) obj. 3.02627 iterations 32
Cbc0038I Pass  23: suminf.    2.11605 (8) obj. 3.02627 iterations 14
Cbc0038I Pass  24: suminf.    3.01530 (10) obj. 3.02627 iterations 8
Cbc0038I Pass  25: suminf.    2.14732 (8) obj. 3.02627 iterations 10
Cbc0038I Pass  26: suminf.    3.00981 (10) obj. 3.02627 iterations 8
Cbc0038I Pass  27: suminf.    3.12706 (16) obj. 3.02627 iterations 30
Cbc0038I Pass  28: suminf.    2.70424 (15) obj. 3.02627 iterations 19
Cbc0038I Pass  29: suminf.    2.48728 (9) obj. 3.02627 iterations 25
Cbc0038I Pass  30: suminf.    2.20543 (8) obj. 3.02627 iterations 5
Cbc0038I Pass  31: suminf.    2.24312 (11) obj. 3.02627 iterations 7
Cbc0038I Pass  32: suminf.    2.22789 (8) obj. 3.02627 iterations 6
Cbc0038I Pass  33: suminf.    2.22060 (11) obj. 3.02627 iterations 7
Cbc0038I Rounding solution of 4.40727 is better than previous of 8.15835

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 154 columns, reduced to 38 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 4.40727 to -6.60736 (0.09 seconds)
Cbc0038I Round again with cutoff of -13.9183
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.74346 (40) obj. -25.5081 iterations 0
Cbc0038I Pass  34: suminf.    2.74346 (40) obj. -25.5081 iterations 2
Cbc0038I Pass  35: suminf.    1.93232 (28) obj. -13.9183 iterations 17
Cbc0038I Pass  36: suminf.    2.68788 (24) obj. -13.9183 iterations 47
Cbc0038I Pass  37: suminf.    1.62286 (25) obj. -13.9183 iterations 11
Cbc0038I Pass  38: suminf.    1.62286 (25) obj. -13.9183 iterations 0
Cbc0038I Pass  39: suminf.    3.96126 (21) obj. -13.9183 iterations 25
Cbc0038I Pass  40: suminf.    3.43334 (22) obj. -13.9183 iterations 5
Cbc0038I Pass  41: suminf.    4.70666 (22) obj. -13.9183 iterations 18
Cbc0038I Pass  42: suminf.    4.21566 (22) obj. -13.9183 iterations 3
Cbc0038I Pass  43: suminf.    4.17363 (22) obj. -13.9183 iterations 7
Cbc0038I Pass  44: suminf.    4.17363 (22) obj. -13.9183 iterations 5
Cbc0038I Pass  45: suminf.    3.99335 (22) obj. -13.9183 iterations 6
Cbc0038I Pass  46: suminf.    3.99335 (22) obj. -13.9183 iterations 5
Cbc0038I Pass  47: suminf.    4.76791 (23) obj. -13.9183 iterations 7
Cbc0038I Pass  48: suminf.    4.58207 (22) obj. -13.9183 iterations 8
Cbc0038I Pass  49: suminf.    3.93951 (21) obj. -13.9183 iterations 13
Cbc0038I Pass  50: suminf.    3.38482 (19) obj. -13.9183 iterations 10
Cbc0038I Pass  51: suminf.    3.79658 (20) obj. -13.9183 iterations 10
Cbc0038I Pass  52: suminf.    3.75846 (23) obj. -13.9183 iterations 24
Cbc0038I Pass  53: suminf.    3.62804 (21) obj. -13.9183 iterations 6
Cbc0038I Pass  54: suminf.    4.09316 (21) obj. -13.9183 iterations 21
Cbc0038I Pass  55: suminf.    3.96494 (21) obj. -13.9183 iterations 6
Cbc0038I Pass  56: suminf.    4.44638 (22) obj. -13.9183 iterations 12
Cbc0038I Pass  57: suminf.    4.13580 (23) obj. -13.9183 iterations 9
Cbc0038I Pass  58: suminf.    4.84710 (22) obj. -13.9183 iterations 15
Cbc0038I Pass  59: suminf.    4.18060 (22) obj. -13.9183 iterations 8
Cbc0038I Pass  60: suminf.    3.68419 (21) obj. -13.9183 iterations 7
Cbc0038I Pass  61: suminf.    3.93951 (21) obj. -13.9183 iterations 25
Cbc0038I Pass  62: suminf.    3.38482 (19) obj. -13.9183 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 154 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -6.60736 - took 0.07 seconds
Cbc0012I Integer solution of -6.607363 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 140 rows 154 columns, reduced to 15 rows 17 columns
Cbc0031I 80 added rows had average density of 48.85
Cbc0013I At root node, 80 cuts changed objective from -43.161502 to -17.670859 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23202 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2548 row cuts average 148.0 elements, 0 column cuts (0 active)  in 0.322 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1279 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.207 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1661 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.222 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 451 row cuts average 84.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 74 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.321 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.607363 best solution, best possible -17.670859 (2.95 seconds)
Cbc0012I Integer solution of -10.359007 found by rounding after 8591 iterations and 1 nodes (2.96 seconds)
Cbc0012I Integer solution of -11.943157 found by rounding after 8655 iterations and 2 nodes (2.97 seconds)
Cbc0012I Integer solution of -12.378047 found by DiveCoefficient after 8655 iterations and 2 nodes (2.98 seconds)
Cbc0016I Integer solution of -12.795853 found by strong branching after 8694 iterations and 9 nodes (2.99 seconds)
Cbc0010I After 21 nodes, 4 on tree, -12.795853 best solution, best possible -17.652017 (3.75 seconds)
Cbc0010I After 35 nodes, 11 on tree, -12.795853 best solution, best possible -17.652017 (4.50 seconds)
Cbc0038I Full problem 140 rows 154 columns, reduced to 74 rows 86 columns
Cbc0038I Full problem 140 rows 154 columns, reduced to 80 rows 90 columns
Cbc0010I After 98 nodes, 1 on tree, -12.795853 best solution, best possible -17.366754 (5.34 seconds)
Cbc0010I After 107 nodes, 7 on tree, -12.795853 best solution, best possible -17.366754 (6.06 seconds)
Cbc0010I After 129 nodes, 2 on tree, -12.795853 best solution, best possible -17.366754 (7.00 seconds)
Cbc0010I After 146 nodes, 7 on tree, -12.795853 best solution, best possible -17.366754 (7.70 seconds)
Cbc0010I After 174 nodes, 3 on tree, -12.795853 best solution, best possible -15.170676 (8.43 seconds)
Cbc0001I Search completed - best objective -12.795853, took 22048 iterations and 188 nodes (8.71 seconds)
Cbc0032I Strong branching done 2240 times (60979 iterations), fathomed 17 nodes and fixed 11 variables
Cbc0035I Maximum depth 18, 314 variables fixed on reduced cost
Total time (CPU seconds):       8.42   (Wallclock seconds):       8.74

