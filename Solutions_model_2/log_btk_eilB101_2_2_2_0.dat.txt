Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 99 (-4) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 0.000139168 - average 7.68886e-07, 24 fixed columns
Coin0506I Presolve 128 (-53) rows, 72 (-27) columns and 393 (-159) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.23934688 - largest nonzero change 0 ( 0%) - largest zero change 2.609685e-05
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Coin0511I After Postsolve, objective 39.599694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Coin0511I After Postsolve, objective 39.599694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.599694 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 8.21127
Cbc0038I Solution found of 6.31003
Cbc0038I Relaxing continuous gives -1.25788
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -1.25788 to -13.3505 (0.06 seconds)
Cbc0038I Round again with cutoff of -15.9755
Cbc0038I Pass   1: suminf.    2.64299 (36) obj. -15.9755 iterations 68
Cbc0038I Pass   2: suminf.    0.99010 (8) obj. -15.9755 iterations 45
Cbc0038I Pass   3: suminf.    0.47616 (5) obj. -15.9755 iterations 3
Cbc0038I Pass   4: suminf.    2.22527 (6) obj. -15.9755 iterations 26
Cbc0038I Pass   5: suminf.    2.22527 (6) obj. -15.9755 iterations 1
Cbc0038I Pass   6: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass   7: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass   8: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass   9: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  10: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  11: suminf.    2.31795 (6) obj. -15.9755 iterations 17
Cbc0038I Pass  12: suminf.    2.28060 (6) obj. -15.9755 iterations 4
Cbc0038I Pass  13: suminf.    2.39327 (6) obj. -15.9755 iterations 11
Cbc0038I Pass  14: suminf.    2.22527 (6) obj. -15.9755 iterations 10
Cbc0038I Pass  15: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  16: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  17: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  18: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  19: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  20: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  21: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  22: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  23: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  24: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  25: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  26: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  27: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  28: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  29: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  30: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 90 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -13.3505 to -14.3345 (0.10 seconds)
Cbc0038I Round again with cutoff of -20.7003
Cbc0038I Pass  30: suminf.    3.49148 (36) obj. -20.7003 iterations 0
Cbc0038I Pass  31: suminf.    2.48410 (9) obj. -20.7003 iterations 39
Cbc0038I Pass  32: suminf.    2.05359 (8) obj. -20.7003 iterations 4
Cbc0038I Pass  33: suminf.    2.90303 (10) obj. -20.7003 iterations 25
Cbc0038I Pass  34: suminf.    2.62949 (11) obj. -20.7003 iterations 8
Cbc0038I Pass  35: suminf.    3.68713 (10) obj. -20.7003 iterations 17
Cbc0038I Pass  36: suminf.    2.47232 (9) obj. -20.7003 iterations 11
Cbc0038I Pass  37: suminf.    2.42648 (10) obj. -20.7003 iterations 5
Cbc0038I Pass  38: suminf.    2.55364 (7) obj. -20.7003 iterations 18
Cbc0038I Pass  39: suminf.    2.09243 (7) obj. -20.7003 iterations 10
Cbc0038I Pass  40: suminf.    2.02846 (8) obj. -20.7003 iterations 5
Cbc0038I Pass  41: suminf.    2.25022 (9) obj. -20.7003 iterations 15
Cbc0038I Pass  42: suminf.    2.25022 (9) obj. -20.7003 iterations 1
Cbc0038I Pass  43: suminf.    2.73549 (10) obj. -20.7003 iterations 28
Cbc0038I Pass  44: suminf.    2.73549 (10) obj. -20.7003 iterations 0
Cbc0038I Pass  45: suminf.    3.74207 (11) obj. -20.7003 iterations 24
Cbc0038I Pass  46: suminf.    2.55952 (9) obj. -20.7003 iterations 8
Cbc0038I Pass  47: suminf.    4.32758 (15) obj. -20.7003 iterations 21
Cbc0038I Pass  48: suminf.    3.94754 (15) obj. -20.7003 iterations 1
Cbc0038I Pass  49: suminf.    4.00290 (14) obj. -20.7003 iterations 24
Cbc0038I Pass  50: suminf.    2.78081 (10) obj. -20.7003 iterations 9
Cbc0038I Pass  51: suminf.    4.50890 (13) obj. -20.7003 iterations 25
Cbc0038I Pass  52: suminf.    4.05317 (13) obj. -20.7003 iterations 31
Cbc0038I Pass  53: suminf.    2.66326 (11) obj. -20.7003 iterations 25
Cbc0038I Pass  54: suminf.    2.62355 (10) obj. -20.7003 iterations 3
Cbc0038I Pass  55: suminf.    3.54763 (8) obj. -20.7003 iterations 23
Cbc0038I Pass  56: suminf.    3.27259 (9) obj. -20.7003 iterations 5
Cbc0038I Pass  57: suminf.    3.04502 (8) obj. -20.7003 iterations 16
Cbc0038I Pass  58: suminf.    3.14014 (9) obj. -20.7003 iterations 19
Cbc0038I Pass  59: suminf.    2.51317 (8) obj. -20.7003 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 90 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -14.3345 - took 0.12 seconds
Cbc0012I Integer solution of -14.33455 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 78 rows 46 columns
Cbc0031I 24 added rows had average density of 67.291667
Cbc0013I At root node, 24 cuts changed objective from -39.599694 to -33.45007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14510 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2175 row cuts average 98.9 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 97.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.33455 best solution, best possible -33.45007 (1.30 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 50 rows 32 columns
Cbc0038I Full problem 181 rows 99 columns, reduced to 44 rows 26 columns
Cbc0001I Search completed - best objective -14.33455, took 12826 iterations and 114 nodes (1.80 seconds)
Cbc0032I Strong branching done 1230 times (22702 iterations), fathomed 8 nodes and fixed 82 variables
Cbc0035I Maximum depth 30, 517 variables fixed on reduced cost
Total time (CPU seconds):       1.73   (Wallclock seconds):       1.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-77) rows, 142 (-60) columns and 2344 (-3309) elements
Clp1000I sum of infeasibilities 4.82864e-06 - average 3.80208e-08, 27 fixed columns
Coin0506I Presolve 102 (-25) rows, 113 (-29) columns and 1716 (-628) elements
Clp0006I 0  Obj 40.376829 Dual inf 9.5997764 (110)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.4179558 - largest nonzero change 2.4873112e-05 ( 0.0023005115%) - largest zero change 2.9612462e-05
Clp0000I Optimal - objective value 51.973009
Clp0000I Optimal - objective value 51.973009
Coin0511I After Postsolve, objective 51.973009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.973009 Dual inf 2.9880755 (1)
Clp0014I Perturbing problem by 0.001% of 1.3043746 - largest nonzero change 2.855698e-05 ( 0.0026698863%) - largest zero change 2.8626549e-05
Clp0000I Optimal - objective value 51.973009
Clp0000I Optimal - objective value 51.973009
Clp0000I Optimal - objective value 51.973009
Coin0511I After Postsolve, objective 51.973009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.97300856 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.72012
Cbc0038I Pass   1: suminf.    1.96553 (33) obj. -27.8367 iterations 30
Cbc0038I Pass   2: suminf.    0.23101 (6) obj. 10.4791 iterations 27
Cbc0038I Solution found of 18.1661
Cbc0038I Rounding solution of 4.34172 is better than previous of 18.1661

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 4.34172 to -1.17616 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.64767
Cbc0038I Pass   3: suminf.    1.96553 (33) obj. -27.8367 iterations 0
Cbc0038I Pass   4: suminf.    0.94553 (19) obj. -5.64767 iterations 16
Cbc0038I Pass   5: suminf.    1.02382 (7) obj. -5.64767 iterations 32
Cbc0038I Pass   6: suminf.    0.90862 (5) obj. -5.64767 iterations 11
Cbc0038I Pass   7: suminf.    0.89704 (4) obj. -5.64767 iterations 8
Cbc0038I Pass   8: suminf.    0.70251 (4) obj. -7.49946 iterations 2
Cbc0038I Pass   9: suminf.    1.32928 (6) obj. -5.64767 iterations 15
Cbc0038I Pass  10: suminf.    1.08246 (4) obj. -5.64767 iterations 11
Cbc0038I Pass  11: suminf.    1.35025 (10) obj. -5.64767 iterations 33
Cbc0038I Pass  12: suminf.    0.59108 (9) obj. -5.64767 iterations 4
Cbc0038I Pass  13: suminf.    0.55040 (5) obj. -5.64767 iterations 20
Cbc0038I Pass  14: suminf.    0.40194 (5) obj. -5.64767 iterations 6
Cbc0038I Pass  15: suminf.    0.56709 (10) obj. -5.64767 iterations 19
Cbc0038I Pass  16: suminf.    0.44468 (3) obj. -6.6315 iterations 14
Cbc0038I Pass  17: suminf.    1.36261 (11) obj. -5.64767 iterations 14
Cbc0038I Pass  18: suminf.    1.36261 (11) obj. -5.64767 iterations 0
Cbc0038I Pass  19: suminf.    1.70899 (6) obj. -5.64767 iterations 14
Cbc0038I Pass  20: suminf.    1.03330 (5) obj. -5.64767 iterations 6
Cbc0038I Pass  21: suminf.    1.36008 (5) obj. -5.64767 iterations 12
Cbc0038I Pass  22: suminf.    1.08879 (5) obj. -5.64767 iterations 12
Cbc0038I Pass  23: suminf.    1.32172 (5) obj. -5.64767 iterations 9
Cbc0038I Pass  24: suminf.    1.61724 (12) obj. -5.64767 iterations 26
Cbc0038I Pass  25: suminf.    1.09846 (8) obj. -6.20891 iterations 8
Cbc0038I Pass  26: suminf.    0.77833 (8) obj. -5.64767 iterations 9
Cbc0038I Pass  27: suminf.    0.92397 (5) obj. -5.64767 iterations 18
Cbc0038I Pass  28: suminf.    0.74240 (4) obj. -5.64767 iterations 11
Cbc0038I Pass  29: suminf.    0.72525 (4) obj. -5.64767 iterations 6
Cbc0038I Pass  30: suminf.    0.84445 (4) obj. -5.64767 iterations 8
Cbc0038I Pass  31: suminf.    2.18709 (12) obj. -5.64767 iterations 32
Cbc0038I Pass  32: suminf.    0.90105 (9) obj. -6.9466 iterations 11
Cbc0038I Rounding solution of -11.7624 is better than previous of -1.17616

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 40 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -11.7624 to -12.2064 (0.10 seconds)
Cbc0038I Round again with cutoff of -18.9432
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.96553 (33) obj. -27.8367 iterations 0
Cbc0038I Pass  33: suminf.    2.09650 (21) obj. -18.9432 iterations 22
Cbc0038I Pass  34: suminf.    2.09650 (21) obj. -18.9432 iterations 1
Cbc0038I Pass  35: suminf.    2.54295 (11) obj. -18.9432 iterations 31
Cbc0038I Pass  36: suminf.    2.54295 (11) obj. -18.9432 iterations 7
Cbc0038I Pass  37: suminf.    2.09566 (10) obj. -18.9432 iterations 13
Cbc0038I Pass  38: suminf.    2.08987 (10) obj. -18.9432 iterations 8
Cbc0038I Pass  39: suminf.    2.09566 (10) obj. -18.9432 iterations 13
Cbc0038I Pass  40: suminf.    2.01219 (15) obj. -18.9432 iterations 24
Cbc0038I Pass  41: suminf.    1.30864 (11) obj. -18.9432 iterations 10
Cbc0038I Pass  42: suminf.    1.57591 (10) obj. -18.9432 iterations 20
Cbc0038I Pass  43: suminf.    1.56612 (11) obj. -18.9432 iterations 7
Cbc0038I Pass  44: suminf.    3.73739 (14) obj. -18.9432 iterations 24
Cbc0038I Pass  45: suminf.    3.59109 (17) obj. -18.9432 iterations 4
Cbc0038I Pass  46: suminf.    1.66638 (9) obj. -18.9432 iterations 16
Cbc0038I Pass  47: suminf.    1.50182 (10) obj. -18.9432 iterations 2
Cbc0038I Pass  48: suminf.    1.66638 (9) obj. -18.9432 iterations 5
Cbc0038I Pass  49: suminf.    1.35484 (15) obj. -18.9432 iterations 18
Cbc0038I Pass  50: suminf.    1.23993 (16) obj. -18.9432 iterations 14
Cbc0038I Pass  51: suminf.    1.97715 (11) obj. -18.9432 iterations 29
Cbc0038I Pass  52: suminf.    1.49600 (11) obj. -18.9432 iterations 4
Cbc0038I Pass  53: suminf.    1.97715 (11) obj. -18.9432 iterations 12
Cbc0038I Pass  54: suminf.    1.38581 (14) obj. -18.9432 iterations 14
Cbc0038I Pass  55: suminf.    1.37085 (15) obj. -18.9432 iterations 6
Cbc0038I Pass  56: suminf.    1.52658 (12) obj. -18.9432 iterations 21
Cbc0038I Pass  57: suminf.    1.52658 (12) obj. -18.9432 iterations 3
Cbc0038I Pass  58: suminf.    2.11782 (13) obj. -18.9432 iterations 10
Cbc0038I Pass  59: suminf.    1.97715 (11) obj. -18.9432 iterations 2
Cbc0038I Pass  60: suminf.    1.50417 (11) obj. -18.9432 iterations 3
Cbc0038I Pass  61: suminf.    1.97715 (11) obj. -18.9432 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -12.2064 - took 0.11 seconds
Cbc0012I Integer solution of -12.206352 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 15 rows 17 columns
Cbc0031I 57 added rows had average density of 38.947368
Cbc0013I At root node, 57 cuts changed objective from -45.89033 to -20.938792 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13461 row cuts average 7.2 elements, 1 column cuts (1 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1546 row cuts average 133.2 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 725 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1040 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 178 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.472 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.206352 best solution, best possible -20.938792 (2.55 seconds)
Cbc0010I After 7 nodes, 8 on tree, -12.206352 best solution, best possible -20.938792 (3.27 seconds)
Cbc0012I Integer solution of -13.315692 found by rounding after 6460 iterations and 23 nodes (3.94 seconds)
Cbc0012I Integer solution of -14.09517 found by rounding after 6538 iterations and 29 nodes (4.00 seconds)
Cbc0010I After 29 nodes, 8 on tree, -14.09517 best solution, best possible -20.938792 (4.00 seconds)
Cbc0016I Integer solution of -14.33455 found by strong branching after 6645 iterations and 36 nodes (4.16 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 65 rows 76 columns
Cbc0010I After 49 nodes, 10 on tree, -14.33455 best solution, best possible -20.938792 (4.76 seconds)
Cbc0010I After 67 nodes, 12 on tree, -14.33455 best solution, best possible -20.938792 (5.51 seconds)
Cbc0010I After 92 nodes, 8 on tree, -14.33455 best solution, best possible -20.938792 (6.23 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 52 rows 61 columns
Cbc0010I After 102 nodes, 5 on tree, -14.33455 best solution, best possible -20.938792 (7.02 seconds)
Cbc0001I Search completed - best objective -14.33455, took 9768 iterations and 110 nodes (7.19 seconds)
Cbc0032I Strong branching done 1212 times (21638 iterations), fathomed 18 nodes and fixed 15 variables
Cbc0035I Maximum depth 17, 341 variables fixed on reduced cost
Total time (CPU seconds):       5.15   (Wallclock seconds):       7.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 99 (-4) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 0.000139168 - average 7.68886e-07, 24 fixed columns
Coin0506I Presolve 128 (-53) rows, 72 (-27) columns and 393 (-159) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.23934688 - largest nonzero change 0 ( 0%) - largest zero change 2.609685e-05
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Coin0511I After Postsolve, objective 39.599694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Clp0000I Optimal - objective value 39.599694
Coin0511I After Postsolve, objective 39.599694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.599694 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 8.21127
Cbc0038I Solution found of 6.31003
Cbc0038I Relaxing continuous gives -1.25788
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -1.25788 to -13.3505 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.9755
Cbc0038I Pass   1: suminf.    2.64299 (36) obj. -15.9755 iterations 68
Cbc0038I Pass   2: suminf.    0.99010 (8) obj. -15.9755 iterations 45
Cbc0038I Pass   3: suminf.    0.47616 (5) obj. -15.9755 iterations 3
Cbc0038I Pass   4: suminf.    2.22527 (6) obj. -15.9755 iterations 26
Cbc0038I Pass   5: suminf.    2.22527 (6) obj. -15.9755 iterations 1
Cbc0038I Pass   6: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass   7: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass   8: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass   9: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  10: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  11: suminf.    2.31795 (6) obj. -15.9755 iterations 17
Cbc0038I Pass  12: suminf.    2.28060 (6) obj. -15.9755 iterations 4
Cbc0038I Pass  13: suminf.    2.39327 (6) obj. -15.9755 iterations 11
Cbc0038I Pass  14: suminf.    2.22527 (6) obj. -15.9755 iterations 10
Cbc0038I Pass  15: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  16: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  17: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  18: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  19: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  20: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  21: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  22: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  23: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  24: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  25: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I Pass  26: suminf.    2.31795 (6) obj. -15.9755 iterations 18
Cbc0038I Pass  27: suminf.    2.28060 (6) obj. -15.9755 iterations 6
Cbc0038I Pass  28: suminf.    2.39327 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  29: suminf.    2.22527 (6) obj. -15.9755 iterations 13
Cbc0038I Pass  30: suminf.    2.22527 (6) obj. -15.9755 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 90 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -13.3505 to -14.3345 (0.08 seconds)
Cbc0038I Round again with cutoff of -20.7003
Cbc0038I Pass  30: suminf.    3.49148 (36) obj. -20.7003 iterations 0
Cbc0038I Pass  31: suminf.    2.48410 (9) obj. -20.7003 iterations 39
Cbc0038I Pass  32: suminf.    2.05359 (8) obj. -20.7003 iterations 4
Cbc0038I Pass  33: suminf.    2.90303 (10) obj. -20.7003 iterations 25
Cbc0038I Pass  34: suminf.    2.62949 (11) obj. -20.7003 iterations 8
Cbc0038I Pass  35: suminf.    3.68713 (10) obj. -20.7003 iterations 17
Cbc0038I Pass  36: suminf.    2.47232 (9) obj. -20.7003 iterations 11
Cbc0038I Pass  37: suminf.    2.42648 (10) obj. -20.7003 iterations 5
Cbc0038I Pass  38: suminf.    2.55364 (7) obj. -20.7003 iterations 18
Cbc0038I Pass  39: suminf.    2.09243 (7) obj. -20.7003 iterations 10
Cbc0038I Pass  40: suminf.    2.02846 (8) obj. -20.7003 iterations 5
Cbc0038I Pass  41: suminf.    2.25022 (9) obj. -20.7003 iterations 15
Cbc0038I Pass  42: suminf.    2.25022 (9) obj. -20.7003 iterations 1
Cbc0038I Pass  43: suminf.    2.73549 (10) obj. -20.7003 iterations 28
Cbc0038I Pass  44: suminf.    2.73549 (10) obj. -20.7003 iterations 0
Cbc0038I Pass  45: suminf.    3.74207 (11) obj. -20.7003 iterations 24
Cbc0038I Pass  46: suminf.    2.55952 (9) obj. -20.7003 iterations 8
Cbc0038I Pass  47: suminf.    4.32758 (15) obj. -20.7003 iterations 21
Cbc0038I Pass  48: suminf.    3.94754 (15) obj. -20.7003 iterations 1
Cbc0038I Pass  49: suminf.    4.00290 (14) obj. -20.7003 iterations 24
Cbc0038I Pass  50: suminf.    2.78081 (10) obj. -20.7003 iterations 9
Cbc0038I Pass  51: suminf.    4.50890 (13) obj. -20.7003 iterations 25
Cbc0038I Pass  52: suminf.    4.05317 (13) obj. -20.7003 iterations 31
Cbc0038I Pass  53: suminf.    2.66326 (11) obj. -20.7003 iterations 25
Cbc0038I Pass  54: suminf.    2.62355 (10) obj. -20.7003 iterations 3
Cbc0038I Pass  55: suminf.    3.54763 (8) obj. -20.7003 iterations 23
Cbc0038I Pass  56: suminf.    3.27259 (9) obj. -20.7003 iterations 5
Cbc0038I Pass  57: suminf.    3.04502 (8) obj. -20.7003 iterations 16
Cbc0038I Pass  58: suminf.    3.14014 (9) obj. -20.7003 iterations 19
Cbc0038I Pass  59: suminf.    2.51317 (8) obj. -20.7003 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 90 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -14.3345 - took 0.10 seconds
Cbc0012I Integer solution of -14.33455 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 78 rows 46 columns
Cbc0031I 24 added rows had average density of 67.291667
Cbc0013I At root node, 24 cuts changed objective from -39.599694 to -33.45007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14510 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2175 row cuts average 98.9 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 97.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.33455 best solution, best possible -33.45007 (1.21 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 50 rows 32 columns
Cbc0038I Full problem 181 rows 99 columns, reduced to 44 rows 26 columns
Cbc0001I Search completed - best objective -14.33455, took 12826 iterations and 114 nodes (1.68 seconds)
Cbc0032I Strong branching done 1230 times (22702 iterations), fathomed 8 nodes and fixed 82 variables
Cbc0035I Maximum depth 30, 517 variables fixed on reduced cost
Total time (CPU seconds):       1.64   (Wallclock seconds):       1.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 142 (-61) columns and 2344 (-3310) elements
Clp1000I sum of infeasibilities 4.82864e-06 - average 3.80208e-08, 27 fixed columns
Coin0506I Presolve 102 (-25) rows, 113 (-29) columns and 1716 (-628) elements
Clp0006I 0  Obj 40.376829 Dual inf 9.5997764 (110)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.4179558 - largest nonzero change 2.4873112e-05 ( 0.0023005115%) - largest zero change 2.9612462e-05
Clp0000I Optimal - objective value 51.973009
Clp0000I Optimal - objective value 51.973009
Coin0511I After Postsolve, objective 51.973009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.973009 Dual inf 2.9880755 (1)
Clp0014I Perturbing problem by 0.001% of 1.3043746 - largest nonzero change 2.855698e-05 ( 0.0026698863%) - largest zero change 2.8626549e-05
Clp0000I Optimal - objective value 51.973009
Clp0000I Optimal - objective value 51.973009
Clp0000I Optimal - objective value 51.973009
Coin0511I After Postsolve, objective 51.973009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.97300856 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.72012
Cbc0038I Pass   1: suminf.    1.96553 (33) obj. -27.8367 iterations 30
Cbc0038I Pass   2: suminf.    0.23101 (6) obj. 10.4791 iterations 27
Cbc0038I Solution found of 18.1661
Cbc0038I Rounding solution of 4.34172 is better than previous of 18.1661

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 4.34172 to -1.17616 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.64767
Cbc0038I Pass   3: suminf.    1.96553 (33) obj. -27.8367 iterations 0
Cbc0038I Pass   4: suminf.    0.94553 (19) obj. -5.64767 iterations 16
Cbc0038I Pass   5: suminf.    1.02382 (7) obj. -5.64767 iterations 32
Cbc0038I Pass   6: suminf.    0.90862 (5) obj. -5.64767 iterations 11
Cbc0038I Pass   7: suminf.    0.89704 (4) obj. -5.64767 iterations 8
Cbc0038I Pass   8: suminf.    0.70251 (4) obj. -7.49946 iterations 2
Cbc0038I Pass   9: suminf.    1.32928 (6) obj. -5.64767 iterations 15
Cbc0038I Pass  10: suminf.    1.08246 (4) obj. -5.64767 iterations 11
Cbc0038I Pass  11: suminf.    1.35025 (10) obj. -5.64767 iterations 33
Cbc0038I Pass  12: suminf.    0.59108 (9) obj. -5.64767 iterations 4
Cbc0038I Pass  13: suminf.    0.55040 (5) obj. -5.64767 iterations 20
Cbc0038I Pass  14: suminf.    0.40194 (5) obj. -5.64767 iterations 6
Cbc0038I Pass  15: suminf.    0.56709 (10) obj. -5.64767 iterations 19
Cbc0038I Pass  16: suminf.    0.44468 (3) obj. -6.6315 iterations 14
Cbc0038I Pass  17: suminf.    1.36261 (11) obj. -5.64767 iterations 14
Cbc0038I Pass  18: suminf.    1.36261 (11) obj. -5.64767 iterations 0
Cbc0038I Pass  19: suminf.    1.70899 (6) obj. -5.64767 iterations 14
Cbc0038I Pass  20: suminf.    1.03330 (5) obj. -5.64767 iterations 6
Cbc0038I Pass  21: suminf.    1.36008 (5) obj. -5.64767 iterations 12
Cbc0038I Pass  22: suminf.    1.08879 (5) obj. -5.64767 iterations 12
Cbc0038I Pass  23: suminf.    1.32172 (5) obj. -5.64767 iterations 9
Cbc0038I Pass  24: suminf.    1.61724 (12) obj. -5.64767 iterations 26
Cbc0038I Pass  25: suminf.    1.09846 (8) obj. -6.20891 iterations 8
Cbc0038I Pass  26: suminf.    0.77833 (8) obj. -5.64767 iterations 9
Cbc0038I Pass  27: suminf.    0.92397 (5) obj. -5.64767 iterations 18
Cbc0038I Pass  28: suminf.    0.74240 (4) obj. -5.64767 iterations 11
Cbc0038I Pass  29: suminf.    0.72525 (4) obj. -5.64767 iterations 6
Cbc0038I Pass  30: suminf.    0.84445 (4) obj. -5.64767 iterations 8
Cbc0038I Pass  31: suminf.    2.18709 (12) obj. -5.64767 iterations 32
Cbc0038I Pass  32: suminf.    0.90105 (9) obj. -6.9466 iterations 11
Cbc0038I Rounding solution of -11.7624 is better than previous of -1.17616

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 40 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -11.7624 to -12.2064 (0.10 seconds)
Cbc0038I Round again with cutoff of -18.9432
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.96553 (33) obj. -27.8367 iterations 0
Cbc0038I Pass  33: suminf.    2.09650 (21) obj. -18.9432 iterations 22
Cbc0038I Pass  34: suminf.    2.09650 (21) obj. -18.9432 iterations 1
Cbc0038I Pass  35: suminf.    2.54295 (11) obj. -18.9432 iterations 31
Cbc0038I Pass  36: suminf.    2.54295 (11) obj. -18.9432 iterations 7
Cbc0038I Pass  37: suminf.    2.09566 (10) obj. -18.9432 iterations 13
Cbc0038I Pass  38: suminf.    2.08987 (10) obj. -18.9432 iterations 8
Cbc0038I Pass  39: suminf.    2.09566 (10) obj. -18.9432 iterations 13
Cbc0038I Pass  40: suminf.    2.01219 (15) obj. -18.9432 iterations 24
Cbc0038I Pass  41: suminf.    1.30864 (11) obj. -18.9432 iterations 10
Cbc0038I Pass  42: suminf.    1.57591 (10) obj. -18.9432 iterations 20
Cbc0038I Pass  43: suminf.    1.56612 (11) obj. -18.9432 iterations 7
Cbc0038I Pass  44: suminf.    3.73739 (14) obj. -18.9432 iterations 24
Cbc0038I Pass  45: suminf.    3.59109 (17) obj. -18.9432 iterations 4
Cbc0038I Pass  46: suminf.    1.66638 (9) obj. -18.9432 iterations 16
Cbc0038I Pass  47: suminf.    1.50182 (10) obj. -18.9432 iterations 2
Cbc0038I Pass  48: suminf.    1.66638 (9) obj. -18.9432 iterations 5
Cbc0038I Pass  49: suminf.    1.35484 (15) obj. -18.9432 iterations 18
Cbc0038I Pass  50: suminf.    1.23993 (16) obj. -18.9432 iterations 14
Cbc0038I Pass  51: suminf.    1.97715 (11) obj. -18.9432 iterations 29
Cbc0038I Pass  52: suminf.    1.49600 (11) obj. -18.9432 iterations 4
Cbc0038I Pass  53: suminf.    1.97715 (11) obj. -18.9432 iterations 12
Cbc0038I Pass  54: suminf.    1.38581 (14) obj. -18.9432 iterations 14
Cbc0038I Pass  55: suminf.    1.37085 (15) obj. -18.9432 iterations 6
Cbc0038I Pass  56: suminf.    1.52658 (12) obj. -18.9432 iterations 21
Cbc0038I Pass  57: suminf.    1.52658 (12) obj. -18.9432 iterations 3
Cbc0038I Pass  58: suminf.    2.11782 (13) obj. -18.9432 iterations 10
Cbc0038I Pass  59: suminf.    1.97715 (11) obj. -18.9432 iterations 2
Cbc0038I Pass  60: suminf.    1.50417 (11) obj. -18.9432 iterations 3
Cbc0038I Pass  61: suminf.    1.97715 (11) obj. -18.9432 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -12.2064 - took 0.10 seconds
Cbc0012I Integer solution of -12.206352 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 15 rows 17 columns
Cbc0031I 57 added rows had average density of 38.947368
Cbc0013I At root node, 57 cuts changed objective from -45.89033 to -20.938792 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13461 row cuts average 7.2 elements, 1 column cuts (1 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1546 row cuts average 133.2 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 725 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1040 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 178 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.437 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.206352 best solution, best possible -20.938792 (2.34 seconds)
Cbc0010I After 7 nodes, 8 on tree, -12.206352 best solution, best possible -20.938792 (3.06 seconds)
Cbc0012I Integer solution of -13.315692 found by rounding after 6460 iterations and 23 nodes (3.71 seconds)
Cbc0012I Integer solution of -14.09517 found by rounding after 6538 iterations and 29 nodes (3.77 seconds)
Cbc0010I After 29 nodes, 8 on tree, -14.09517 best solution, best possible -20.938792 (3.77 seconds)
Cbc0016I Integer solution of -14.33455 found by strong branching after 6645 iterations and 36 nodes (3.92 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 65 rows 76 columns
Cbc0010I After 49 nodes, 10 on tree, -14.33455 best solution, best possible -20.938792 (4.51 seconds)
Cbc0010I After 67 nodes, 12 on tree, -14.33455 best solution, best possible -20.938792 (5.24 seconds)
Cbc0010I After 93 nodes, 7 on tree, -14.33455 best solution, best possible -20.938792 (5.99 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 52 rows 61 columns
Cbc0001I Search completed - best objective -14.33455, took 9768 iterations and 110 nodes (6.60 seconds)
Cbc0032I Strong branching done 1212 times (21638 iterations), fathomed 18 nodes and fixed 15 variables
Cbc0035I Maximum depth 17, 341 variables fixed on reduced cost
Total time (CPU seconds):       4.77   (Wallclock seconds):       6.63

