Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 6.88066e-05 - average 5.05931e-07, 10 fixed columns
Coin0506I Presolve 116 (-20) rows, 66 (-10) columns and 356 (-60) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 36.033339
Clp0000I Optimal - objective value 36.033339
Coin0511I After Postsolve, objective 36.033339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.033339
Clp0000I Optimal - objective value 36.033339
Clp0000I Optimal - objective value 36.033339
Coin0511I After Postsolve, objective 36.033339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.03333901 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.3232
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.82913 iterations 69
Cbc0038I Solution found of 7.82913
Cbc0038I Relaxing continuous gives 7.82913
Cbc0038I Rounding solution of -5.82598 is better than previous of 7.82913

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.82598 to -9.73043 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.3608
Cbc0038I Pass   2: suminf.    2.65613 (14) obj. -12.3608 iterations 17
Cbc0038I Pass   3: suminf.    1.60134 (6) obj. -12.3608 iterations 24
Cbc0038I Pass   4: suminf.    1.60134 (6) obj. -12.3608 iterations 1
Cbc0038I Pass   5: suminf.    1.44150 (7) obj. -12.3608 iterations 8
Cbc0038I Pass   6: suminf.    0.50274 (3) obj. -12.3608 iterations 6
Cbc0038I Pass   7: suminf.    1.12541 (8) obj. -12.3608 iterations 8
Cbc0038I Pass   8: suminf.    1.07514 (7) obj. -12.3608 iterations 1
Cbc0038I Pass   9: suminf.    0.94342 (5) obj. -12.3608 iterations 15
Cbc0038I Pass  10: suminf.    0.69478 (4) obj. -12.3608 iterations 6
Cbc0038I Pass  11: suminf.    1.12541 (8) obj. -12.3608 iterations 8
Cbc0038I Pass  12: suminf.    2.27191 (11) obj. -12.3608 iterations 28
Cbc0038I Pass  13: suminf.    1.35965 (9) obj. -12.3608 iterations 12
Cbc0038I Pass  14: suminf.    3.57399 (13) obj. -12.3608 iterations 21
Cbc0038I Pass  15: suminf.    3.37589 (13) obj. -12.3608 iterations 2
Cbc0038I Pass  16: suminf.    3.03484 (12) obj. -12.3608 iterations 1
Cbc0038I Pass  17: suminf.    1.89106 (7) obj. -12.3608 iterations 14
Cbc0038I Pass  18: suminf.    1.79973 (6) obj. -12.3608 iterations 5
Cbc0038I Pass  19: suminf.    0.65995 (3) obj. -12.3608 iterations 9
Cbc0038I Pass  20: suminf.    0.59777 (5) obj. -12.3608 iterations 2
Cbc0038I Pass  21: suminf.    1.69414 (7) obj. -12.3608 iterations 8
Cbc0038I Pass  22: suminf.    1.67838 (6) obj. -12.3608 iterations 1
Cbc0038I Pass  23: suminf.    0.84011 (4) obj. -12.3608 iterations 14
Cbc0038I Pass  24: suminf.    0.84108 (8) obj. -12.3608 iterations 13
Cbc0038I Pass  25: suminf.    0.80234 (6) obj. -12.3608 iterations 8
Cbc0038I Pass  26: suminf.    2.53385 (7) obj. -12.3608 iterations 12
Cbc0038I Pass  27: suminf.    6.66661 (22) obj. -12.3608 iterations 28
Cbc0038I Pass  28: suminf.    1.20838 (6) obj. -12.3608 iterations 28
Cbc0038I Pass  29: suminf.    0.82160 (7) obj. -12.3608 iterations 3
Cbc0038I Pass  30: suminf.    1.41772 (4) obj. -12.3608 iterations 9
Cbc0038I Pass  31: suminf.    0.36177 (3) obj. -12.3608 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -9.73043 to -10.5429 (0.12 seconds)
Cbc0038I Round again with cutoff of -17.0953
Cbc0038I Pass  31: suminf.    3.33021 (15) obj. -17.0953 iterations 6
Cbc0038I Pass  32: suminf.    2.86810 (11) obj. -17.0953 iterations 12
Cbc0038I Pass  33: suminf.    1.71121 (8) obj. -17.0953 iterations 13
Cbc0038I Pass  34: suminf.    1.71121 (8) obj. -17.0953 iterations 1
Cbc0038I Pass  35: suminf.    2.90484 (11) obj. -17.0953 iterations 12
Cbc0038I Pass  36: suminf.    2.33977 (8) obj. -17.0953 iterations 12
Cbc0038I Pass  37: suminf.    2.08433 (6) obj. -17.0953 iterations 4
Cbc0038I Pass  38: suminf.    1.70355 (7) obj. -17.0953 iterations 6
Cbc0038I Pass  39: suminf.    2.08532 (9) obj. -17.0953 iterations 8
Cbc0038I Pass  40: suminf.    1.93247 (8) obj. -17.0953 iterations 3
Cbc0038I Pass  41: suminf.    1.92489 (6) obj. -17.0953 iterations 10
Cbc0038I Pass  42: suminf.    1.60549 (6) obj. -17.0953 iterations 1
Cbc0038I Pass  43: suminf.    1.49316 (7) obj. -17.0953 iterations 6
Cbc0038I Pass  44: suminf.    1.49316 (7) obj. -17.0953 iterations 0
Cbc0038I Pass  45: suminf.    3.08061 (9) obj. -17.0953 iterations 11
Cbc0038I Pass  46: suminf.    3.04356 (10) obj. -17.0953 iterations 3
Cbc0038I Pass  47: suminf.    1.11178 (5) obj. -17.0953 iterations 11
Cbc0038I Pass  48: suminf.    1.11178 (5) obj. -17.0953 iterations 0
Cbc0038I Pass  49: suminf.    1.52369 (7) obj. -17.0953 iterations 11
Cbc0038I Pass  50: suminf.    1.26009 (6) obj. -17.0953 iterations 6
Cbc0038I Pass  51: suminf.    2.08532 (9) obj. -17.0953 iterations 7
Cbc0038I Pass  52: suminf.    1.93247 (8) obj. -17.0953 iterations 3
Cbc0038I Pass  53: suminf.    1.92489 (6) obj. -17.0953 iterations 10
Cbc0038I Pass  54: suminf.    1.60549 (6) obj. -17.0953 iterations 1
Cbc0038I Pass  55: suminf.    1.49316 (7) obj. -17.0953 iterations 6
Cbc0038I Pass  56: suminf.    1.49316 (7) obj. -17.0953 iterations 0
Cbc0038I Pass  57: suminf.    3.08061 (9) obj. -17.0953 iterations 11
Cbc0038I Pass  58: suminf.    3.04356 (10) obj. -17.0953 iterations 3
Cbc0038I Pass  59: suminf.    1.11178 (5) obj. -17.0953 iterations 11
Cbc0038I Pass  60: suminf.    1.11178 (5) obj. -17.0953 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -10.5429 - took 0.15 seconds
Cbc0012I Integer solution of -10.542854 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 44 columns
Cbc0031I 31 added rows had average density of 53
Cbc0013I At root node, 31 cuts changed objective from -36.033339 to -28.963028 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14173 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2511 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.542854 best solution, best possible -28.963028 (1.13 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 39 columns
Cbc0038I Full problem 136 rows 76 columns, reduced to 76 rows 47 columns
Cbc0038I Full problem 136 rows 76 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -10.542854, took 13051 iterations and 212 nodes (1.76 seconds)
Cbc0032I Strong branching done 1898 times (31917 iterations), fathomed 32 nodes and fixed 59 variables
Cbc0035I Maximum depth 31, 410 variables fixed on reduced cost
Total time (CPU seconds):       1.70   (Wallclock seconds):       1.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 116 (-36) columns and 1861 (-1442) elements
Clp1000I sum of infeasibilities 1.03788e-07 - average 1.01753e-09, 59 fixed columns
Coin0506I Presolve 46 (-56) rows, 57 (-59) columns and 200 (-1661) elements
Clp0006I 0  Obj -0.19770304 Dual inf 56.588853 (57)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.3222822 - largest nonzero change 2.5464251e-05 ( 0.0021869008%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 0.34277299
Clp0000I Optimal - objective value 0.34277299
Coin0511I After Postsolve, objective 0.34277299, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 0.34277299 Dual inf 56.397901 (41)
Clp0014I Perturbing problem by 0.001% of 1.7207658 - largest nonzero change 2.9990783e-05 ( 0.0016580886%) - largest zero change 2.8941772e-05
Clp0000I Optimal - objective value 55.716961
Clp0000I Optimal - objective value 55.716961
Clp0000I Optimal - objective value 55.716961
Coin0511I After Postsolve, objective 55.716961, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.71696139 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 116 columns (116 integer (116 of which binary)) and 1863 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.01498
Cbc0038I Pass   1: suminf.    3.13274 (31) obj. -32.043 iterations 21
Cbc0038I Pass   2: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass   3: suminf.    0.19863 (4) obj. 1.07323 iterations 27
Cbc0038I Solution found of 5.81905
Cbc0038I Rounding solution of -3.17031 is better than previous of 5.81905

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -3.17031 to -4.7326 (0.02 seconds)
Cbc0038I Round again with cutoff of -9.0715
Cbc0038I Pass   4: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass   5: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass   6: suminf.    0.77949 (8) obj. -9.0715 iterations 27
Cbc0038I Pass   7: suminf.    0.75873 (8) obj. -9.0715 iterations 2
Cbc0038I Pass   8: suminf.    0.54946 (3) obj. -9.0715 iterations 19
Cbc0038I Pass   9: suminf.    0.12329 (1) obj. -10.2457 iterations 4
Cbc0038I Pass  10: suminf.    0.35611 (2) obj. -9.0715 iterations 2
Cbc0038I Pass  11: suminf.    2.89884 (13) obj. -9.0715 iterations 23
Cbc0038I Pass  12: suminf.    0.98488 (9) obj. -11.2222 iterations 7
Cbc0038I Pass  13: suminf.    0.98488 (9) obj. -11.2222 iterations 0
Cbc0038I Pass  14: suminf.    2.02022 (10) obj. -9.0715 iterations 11
Cbc0038I Pass  15: suminf.    1.99575 (10) obj. -9.0715 iterations 3
Cbc0038I Pass  16: suminf.    1.68658 (5) obj. -9.0715 iterations 10
Cbc0038I Pass  17: suminf.    0.77589 (4) obj. -9.0715 iterations 7
Cbc0038I Pass  18: suminf.    0.70120 (3) obj. -9.0715 iterations 5
Cbc0038I Pass  19: suminf.    0.70120 (3) obj. -9.0715 iterations 0
Cbc0038I Pass  20: suminf.    0.61764 (4) obj. -9.0715 iterations 1
Cbc0038I Pass  21: suminf.    0.61764 (4) obj. -9.0715 iterations 0
Cbc0038I Pass  22: suminf.    2.15305 (14) obj. -9.0715 iterations 38
Cbc0038I Pass  23: suminf.    1.98832 (14) obj. -9.0715 iterations 10
Cbc0038I Pass  24: suminf.    2.20283 (8) obj. -9.0715 iterations 21
Cbc0038I Pass  25: suminf.    2.07072 (9) obj. -9.0715 iterations 5
Cbc0038I Pass  26: suminf.    1.90575 (7) obj. -9.0715 iterations 9
Cbc0038I Pass  27: suminf.    1.76990 (8) obj. -9.0715 iterations 1
Cbc0038I Pass  28: suminf.    1.22514 (6) obj. -9.0715 iterations 9
Cbc0038I Pass  29: suminf.    1.05454 (5) obj. -9.0715 iterations 2
Cbc0038I Pass  30: suminf.    1.72824 (7) obj. -9.0715 iterations 4
Cbc0038I Pass  31: suminf.    0.62701 (4) obj. -9.0715 iterations 8
Cbc0038I Pass  32: suminf.    0.62701 (4) obj. -9.0715 iterations 0
Cbc0038I Pass  33: suminf.    0.71379 (5) obj. -9.0715 iterations 4
Cbc0038I Rounding solution of -4.98542 is better than previous of -4.7326

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 35 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -4.98542 to -9.62393 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.3234
Cbc0038I Pass  33: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass  34: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass  35: suminf.    1.57867 (19) obj. -21.5971 iterations 12
Cbc0038I Pass  36: suminf.    1.75356 (12) obj. -17.3234 iterations 32
Cbc0038I Pass  37: suminf.    1.75356 (12) obj. -17.3234 iterations 0
Cbc0038I Pass  38: suminf.    1.58400 (8) obj. -17.3234 iterations 14
Cbc0038I Pass  39: suminf.    1.11996 (6) obj. -17.514 iterations 5
Cbc0038I Pass  40: suminf.    1.67466 (8) obj. -17.3234 iterations 7
Cbc0038I Pass  41: suminf.    1.67381 (9) obj. -17.3234 iterations 1
Cbc0038I Pass  42: suminf.    2.06640 (9) obj. -17.3234 iterations 5
Cbc0038I Pass  43: suminf.    1.51740 (9) obj. -17.3234 iterations 5
Cbc0038I Pass  44: suminf.    1.95425 (9) obj. -17.3234 iterations 7
Cbc0038I Pass  45: suminf.    1.40534 (8) obj. -17.3234 iterations 3
Cbc0038I Pass  46: suminf.    1.62230 (7) obj. -17.3234 iterations 3
Cbc0038I Pass  47: suminf.    2.38660 (15) obj. -17.3234 iterations 20
Cbc0038I Pass  48: suminf.    2.15847 (13) obj. -17.3234 iterations 9
Cbc0038I Pass  49: suminf.    1.73168 (7) obj. -17.3234 iterations 18
Cbc0038I Pass  50: suminf.    1.22259 (8) obj. -17.3234 iterations 6
Cbc0038I Pass  51: suminf.    1.30422 (8) obj. -17.3234 iterations 2
Cbc0038I Pass  52: suminf.    1.37080 (9) obj. -17.3234 iterations 15
Cbc0038I Pass  53: suminf.    1.26362 (9) obj. -17.5377 iterations 4
Cbc0038I Pass  54: suminf.    2.06607 (13) obj. -17.3234 iterations 9
Cbc0038I Pass  55: suminf.    2.06607 (13) obj. -17.3234 iterations 0
Cbc0038I Pass  56: suminf.    2.10687 (9) obj. -17.3234 iterations 16
Cbc0038I Pass  57: suminf.    1.81349 (10) obj. -17.3234 iterations 1
Cbc0038I Pass  58: suminf.    1.49520 (10) obj. -17.3234 iterations 2
Cbc0038I Pass  59: suminf.    1.81349 (10) obj. -17.3234 iterations 7
Cbc0038I Pass  60: suminf.    1.49107 (10) obj. -17.3234 iterations 5
Cbc0038I Pass  61: suminf.    2.92840 (15) obj. -17.3234 iterations 8
Cbc0038I Pass  62: suminf.    2.92840 (15) obj. -17.3234 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -9.62393 - took 0.06 seconds
Cbc0012I Integer solution of -9.623934 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 23 rows 28 columns
Cbc0031I 55 added rows had average density of 33.472727
Cbc0013I At root node, 55 cuts changed objective from -48.120697 to -15.154192 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10479 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1707 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 562 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1749 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 410 row cuts average 56.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 99 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.673 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.623934 best solution, best possible -15.154192 (2.38 seconds)
Cbc0012I Integer solution of -10.187224 found by DiveCoefficient after 5367 iterations and 3 nodes (2.53 seconds)
Cbc0012I Integer solution of -10.295064 found by rounding after 5681 iterations and 23 nodes (2.63 seconds)
Cbc0012I Integer solution of -10.393874 found by rounding after 5683 iterations and 24 nodes (2.63 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 2 rows 6 columns
Cbc0012I Integer solution of -10.542854 found by DiveCoefficient after 6397 iterations and 56 nodes (2.77 seconds)
Cbc0010I After 76 nodes, 4 on tree, -10.542854 best solution, best possible -15.154192 (3.12 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 46 rows 66 columns
Cbc0010I After 121 nodes, 5 on tree, -10.542854 best solution, best possible -15.154192 (3.84 seconds)
Cbc0001I Search completed - best objective -10.542854, took 10165 iterations and 132 nodes (4.06 seconds)
Cbc0032I Strong branching done 1326 times (12976 iterations), fathomed 9 nodes and fixed 38 variables
Cbc0035I Maximum depth 16, 305 variables fixed on reduced cost
Total time (CPU seconds):       3.31   (Wallclock seconds):       4.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 6.88066e-05 - average 5.05931e-07, 10 fixed columns
Coin0506I Presolve 116 (-20) rows, 66 (-10) columns and 356 (-60) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 36.033339
Clp0000I Optimal - objective value 36.033339
Coin0511I After Postsolve, objective 36.033339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.033339
Clp0000I Optimal - objective value 36.033339
Clp0000I Optimal - objective value 36.033339
Coin0511I After Postsolve, objective 36.033339, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.03333901 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.3232
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.82913 iterations 69
Cbc0038I Solution found of 7.82913
Cbc0038I Relaxing continuous gives 7.82913
Cbc0038I Rounding solution of -5.82598 is better than previous of 7.82913

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.82598 to -9.73043 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.3608
Cbc0038I Pass   2: suminf.    2.65613 (14) obj. -12.3608 iterations 17
Cbc0038I Pass   3: suminf.    1.60134 (6) obj. -12.3608 iterations 24
Cbc0038I Pass   4: suminf.    1.60134 (6) obj. -12.3608 iterations 1
Cbc0038I Pass   5: suminf.    1.44150 (7) obj. -12.3608 iterations 8
Cbc0038I Pass   6: suminf.    0.50274 (3) obj. -12.3608 iterations 6
Cbc0038I Pass   7: suminf.    1.12541 (8) obj. -12.3608 iterations 8
Cbc0038I Pass   8: suminf.    1.07514 (7) obj. -12.3608 iterations 1
Cbc0038I Pass   9: suminf.    0.94342 (5) obj. -12.3608 iterations 15
Cbc0038I Pass  10: suminf.    0.69478 (4) obj. -12.3608 iterations 6
Cbc0038I Pass  11: suminf.    1.12541 (8) obj. -12.3608 iterations 8
Cbc0038I Pass  12: suminf.    2.27191 (11) obj. -12.3608 iterations 28
Cbc0038I Pass  13: suminf.    1.35965 (9) obj. -12.3608 iterations 12
Cbc0038I Pass  14: suminf.    3.57399 (13) obj. -12.3608 iterations 21
Cbc0038I Pass  15: suminf.    3.37589 (13) obj. -12.3608 iterations 2
Cbc0038I Pass  16: suminf.    3.03484 (12) obj. -12.3608 iterations 1
Cbc0038I Pass  17: suminf.    1.89106 (7) obj. -12.3608 iterations 14
Cbc0038I Pass  18: suminf.    1.79973 (6) obj. -12.3608 iterations 5
Cbc0038I Pass  19: suminf.    0.65995 (3) obj. -12.3608 iterations 9
Cbc0038I Pass  20: suminf.    0.59777 (5) obj. -12.3608 iterations 2
Cbc0038I Pass  21: suminf.    1.69414 (7) obj. -12.3608 iterations 8
Cbc0038I Pass  22: suminf.    1.67838 (6) obj. -12.3608 iterations 1
Cbc0038I Pass  23: suminf.    0.84011 (4) obj. -12.3608 iterations 14
Cbc0038I Pass  24: suminf.    0.84108 (8) obj. -12.3608 iterations 13
Cbc0038I Pass  25: suminf.    0.80234 (6) obj. -12.3608 iterations 8
Cbc0038I Pass  26: suminf.    2.53385 (7) obj. -12.3608 iterations 12
Cbc0038I Pass  27: suminf.    6.66661 (22) obj. -12.3608 iterations 28
Cbc0038I Pass  28: suminf.    1.20838 (6) obj. -12.3608 iterations 28
Cbc0038I Pass  29: suminf.    0.82160 (7) obj. -12.3608 iterations 3
Cbc0038I Pass  30: suminf.    1.41772 (4) obj. -12.3608 iterations 9
Cbc0038I Pass  31: suminf.    0.36177 (3) obj. -12.3608 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -9.73043 to -10.5429 (0.11 seconds)
Cbc0038I Round again with cutoff of -17.0953
Cbc0038I Pass  31: suminf.    3.33021 (15) obj. -17.0953 iterations 6
Cbc0038I Pass  32: suminf.    2.86810 (11) obj. -17.0953 iterations 12
Cbc0038I Pass  33: suminf.    1.71121 (8) obj. -17.0953 iterations 13
Cbc0038I Pass  34: suminf.    1.71121 (8) obj. -17.0953 iterations 1
Cbc0038I Pass  35: suminf.    2.90484 (11) obj. -17.0953 iterations 12
Cbc0038I Pass  36: suminf.    2.33977 (8) obj. -17.0953 iterations 12
Cbc0038I Pass  37: suminf.    2.08433 (6) obj. -17.0953 iterations 4
Cbc0038I Pass  38: suminf.    1.70355 (7) obj. -17.0953 iterations 6
Cbc0038I Pass  39: suminf.    2.08532 (9) obj. -17.0953 iterations 8
Cbc0038I Pass  40: suminf.    1.93247 (8) obj. -17.0953 iterations 3
Cbc0038I Pass  41: suminf.    1.92489 (6) obj. -17.0953 iterations 10
Cbc0038I Pass  42: suminf.    1.60549 (6) obj. -17.0953 iterations 1
Cbc0038I Pass  43: suminf.    1.49316 (7) obj. -17.0953 iterations 6
Cbc0038I Pass  44: suminf.    1.49316 (7) obj. -17.0953 iterations 0
Cbc0038I Pass  45: suminf.    3.08061 (9) obj. -17.0953 iterations 11
Cbc0038I Pass  46: suminf.    3.04356 (10) obj. -17.0953 iterations 3
Cbc0038I Pass  47: suminf.    1.11178 (5) obj. -17.0953 iterations 11
Cbc0038I Pass  48: suminf.    1.11178 (5) obj. -17.0953 iterations 0
Cbc0038I Pass  49: suminf.    1.52369 (7) obj. -17.0953 iterations 11
Cbc0038I Pass  50: suminf.    1.26009 (6) obj. -17.0953 iterations 6
Cbc0038I Pass  51: suminf.    2.08532 (9) obj. -17.0953 iterations 7
Cbc0038I Pass  52: suminf.    1.93247 (8) obj. -17.0953 iterations 3
Cbc0038I Pass  53: suminf.    1.92489 (6) obj. -17.0953 iterations 10
Cbc0038I Pass  54: suminf.    1.60549 (6) obj. -17.0953 iterations 1
Cbc0038I Pass  55: suminf.    1.49316 (7) obj. -17.0953 iterations 6
Cbc0038I Pass  56: suminf.    1.49316 (7) obj. -17.0953 iterations 0
Cbc0038I Pass  57: suminf.    3.08061 (9) obj. -17.0953 iterations 11
Cbc0038I Pass  58: suminf.    3.04356 (10) obj. -17.0953 iterations 3
Cbc0038I Pass  59: suminf.    1.11178 (5) obj. -17.0953 iterations 11
Cbc0038I Pass  60: suminf.    1.11178 (5) obj. -17.0953 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -10.5429 - took 0.14 seconds
Cbc0012I Integer solution of -10.542854 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 71 rows 44 columns
Cbc0031I 31 added rows had average density of 53
Cbc0013I At root node, 31 cuts changed objective from -36.033339 to -28.963028 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14173 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2511 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.542854 best solution, best possible -28.963028 (1.09 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 39 columns
Cbc0038I Full problem 136 rows 76 columns, reduced to 76 rows 47 columns
Cbc0038I Full problem 136 rows 76 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -10.542854, took 13051 iterations and 212 nodes (1.72 seconds)
Cbc0032I Strong branching done 1898 times (31917 iterations), fathomed 32 nodes and fixed 59 variables
Cbc0035I Maximum depth 31, 410 variables fixed on reduced cost
Total time (CPU seconds):       1.67   (Wallclock seconds):       1.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 116 (-37) columns and 1861 (-1443) elements
Clp1000I sum of infeasibilities 1.03788e-07 - average 1.01753e-09, 59 fixed columns
Coin0506I Presolve 46 (-56) rows, 57 (-59) columns and 200 (-1661) elements
Clp0006I 0  Obj -0.19770304 Dual inf 56.588853 (57)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.3222822 - largest nonzero change 2.5464251e-05 ( 0.0021869008%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 0.34277299
Clp0000I Optimal - objective value 0.34277299
Coin0511I After Postsolve, objective 0.34277299, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 0.34277299 Dual inf 56.397901 (41)
Clp0014I Perturbing problem by 0.001% of 1.7207658 - largest nonzero change 2.9990783e-05 ( 0.0016580886%) - largest zero change 2.8941772e-05
Clp0000I Optimal - objective value 55.716961
Clp0000I Optimal - objective value 55.716961
Clp0000I Optimal - objective value 55.716961
Coin0511I After Postsolve, objective 55.716961, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.71696139 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 116 columns (116 integer (116 of which binary)) and 1863 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.01498
Cbc0038I Pass   1: suminf.    3.13274 (31) obj. -32.043 iterations 21
Cbc0038I Pass   2: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass   3: suminf.    0.19863 (4) obj. 1.07323 iterations 27
Cbc0038I Solution found of 5.81905
Cbc0038I Rounding solution of -3.17031 is better than previous of 5.81905

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -3.17031 to -4.7326 (0.02 seconds)
Cbc0038I Round again with cutoff of -9.0715
Cbc0038I Pass   4: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass   5: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass   6: suminf.    0.77949 (8) obj. -9.0715 iterations 27
Cbc0038I Pass   7: suminf.    0.75873 (8) obj. -9.0715 iterations 2
Cbc0038I Pass   8: suminf.    0.54946 (3) obj. -9.0715 iterations 19
Cbc0038I Pass   9: suminf.    0.12329 (1) obj. -10.2457 iterations 4
Cbc0038I Pass  10: suminf.    0.35611 (2) obj. -9.0715 iterations 2
Cbc0038I Pass  11: suminf.    2.89884 (13) obj. -9.0715 iterations 23
Cbc0038I Pass  12: suminf.    0.98488 (9) obj. -11.2222 iterations 7
Cbc0038I Pass  13: suminf.    0.98488 (9) obj. -11.2222 iterations 0
Cbc0038I Pass  14: suminf.    2.02022 (10) obj. -9.0715 iterations 11
Cbc0038I Pass  15: suminf.    1.99575 (10) obj. -9.0715 iterations 3
Cbc0038I Pass  16: suminf.    1.68658 (5) obj. -9.0715 iterations 10
Cbc0038I Pass  17: suminf.    0.77589 (4) obj. -9.0715 iterations 7
Cbc0038I Pass  18: suminf.    0.70120 (3) obj. -9.0715 iterations 5
Cbc0038I Pass  19: suminf.    0.70120 (3) obj. -9.0715 iterations 0
Cbc0038I Pass  20: suminf.    0.61764 (4) obj. -9.0715 iterations 1
Cbc0038I Pass  21: suminf.    0.61764 (4) obj. -9.0715 iterations 0
Cbc0038I Pass  22: suminf.    2.15305 (14) obj. -9.0715 iterations 38
Cbc0038I Pass  23: suminf.    1.98832 (14) obj. -9.0715 iterations 10
Cbc0038I Pass  24: suminf.    2.20283 (8) obj. -9.0715 iterations 21
Cbc0038I Pass  25: suminf.    2.07072 (9) obj. -9.0715 iterations 5
Cbc0038I Pass  26: suminf.    1.90575 (7) obj. -9.0715 iterations 9
Cbc0038I Pass  27: suminf.    1.76990 (8) obj. -9.0715 iterations 1
Cbc0038I Pass  28: suminf.    1.22514 (6) obj. -9.0715 iterations 9
Cbc0038I Pass  29: suminf.    1.05454 (5) obj. -9.0715 iterations 2
Cbc0038I Pass  30: suminf.    1.72824 (7) obj. -9.0715 iterations 4
Cbc0038I Pass  31: suminf.    0.62701 (4) obj. -9.0715 iterations 8
Cbc0038I Pass  32: suminf.    0.62701 (4) obj. -9.0715 iterations 0
Cbc0038I Pass  33: suminf.    0.71379 (5) obj. -9.0715 iterations 4
Cbc0038I Rounding solution of -4.98542 is better than previous of -4.7326

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 35 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -4.98542 to -9.62393 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.3234
Cbc0038I Pass  33: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass  34: suminf.    3.13274 (31) obj. -32.043 iterations 0
Cbc0038I Pass  35: suminf.    1.57867 (19) obj. -21.5971 iterations 12
Cbc0038I Pass  36: suminf.    1.75356 (12) obj. -17.3234 iterations 32
Cbc0038I Pass  37: suminf.    1.75356 (12) obj. -17.3234 iterations 0
Cbc0038I Pass  38: suminf.    1.58400 (8) obj. -17.3234 iterations 14
Cbc0038I Pass  39: suminf.    1.11996 (6) obj. -17.514 iterations 5
Cbc0038I Pass  40: suminf.    1.67466 (8) obj. -17.3234 iterations 7
Cbc0038I Pass  41: suminf.    1.67381 (9) obj. -17.3234 iterations 1
Cbc0038I Pass  42: suminf.    2.06640 (9) obj. -17.3234 iterations 5
Cbc0038I Pass  43: suminf.    1.51740 (9) obj. -17.3234 iterations 5
Cbc0038I Pass  44: suminf.    1.95425 (9) obj. -17.3234 iterations 7
Cbc0038I Pass  45: suminf.    1.40534 (8) obj. -17.3234 iterations 3
Cbc0038I Pass  46: suminf.    1.62230 (7) obj. -17.3234 iterations 3
Cbc0038I Pass  47: suminf.    2.38660 (15) obj. -17.3234 iterations 20
Cbc0038I Pass  48: suminf.    2.15847 (13) obj. -17.3234 iterations 9
Cbc0038I Pass  49: suminf.    1.73168 (7) obj. -17.3234 iterations 18
Cbc0038I Pass  50: suminf.    1.22259 (8) obj. -17.3234 iterations 6
Cbc0038I Pass  51: suminf.    1.30422 (8) obj. -17.3234 iterations 2
Cbc0038I Pass  52: suminf.    1.37080 (9) obj. -17.3234 iterations 15
Cbc0038I Pass  53: suminf.    1.26362 (9) obj. -17.5377 iterations 4
Cbc0038I Pass  54: suminf.    2.06607 (13) obj. -17.3234 iterations 9
Cbc0038I Pass  55: suminf.    2.06607 (13) obj. -17.3234 iterations 0
Cbc0038I Pass  56: suminf.    2.10687 (9) obj. -17.3234 iterations 16
Cbc0038I Pass  57: suminf.    1.81349 (10) obj. -17.3234 iterations 1
Cbc0038I Pass  58: suminf.    1.49520 (10) obj. -17.3234 iterations 2
Cbc0038I Pass  59: suminf.    1.81349 (10) obj. -17.3234 iterations 7
Cbc0038I Pass  60: suminf.    1.49107 (10) obj. -17.3234 iterations 5
Cbc0038I Pass  61: suminf.    2.92840 (15) obj. -17.3234 iterations 8
Cbc0038I Pass  62: suminf.    2.92840 (15) obj. -17.3234 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -9.62393 - took 0.06 seconds
Cbc0012I Integer solution of -9.623934 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 23 rows 28 columns
Cbc0031I 55 added rows had average density of 33.472727
Cbc0013I At root node, 55 cuts changed objective from -48.120697 to -15.154192 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10479 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1707 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 562 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1749 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 410 row cuts average 56.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 99 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.623934 best solution, best possible -15.154192 (2.28 seconds)
Cbc0012I Integer solution of -10.187224 found by DiveCoefficient after 5367 iterations and 3 nodes (2.42 seconds)
Cbc0012I Integer solution of -10.295064 found by rounding after 5681 iterations and 23 nodes (2.52 seconds)
Cbc0012I Integer solution of -10.393874 found by rounding after 5683 iterations and 24 nodes (2.52 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 2 rows 6 columns
Cbc0012I Integer solution of -10.542854 found by DiveCoefficient after 6397 iterations and 56 nodes (2.65 seconds)
Cbc0010I After 76 nodes, 4 on tree, -10.542854 best solution, best possible -15.154192 (2.99 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 46 rows 66 columns
Cbc0010I After 123 nodes, 3 on tree, -10.542854 best solution, best possible -15.154192 (3.69 seconds)
Cbc0001I Search completed - best objective -10.542854, took 10165 iterations and 132 nodes (3.90 seconds)
Cbc0032I Strong branching done 1326 times (12976 iterations), fathomed 9 nodes and fixed 38 variables
Cbc0035I Maximum depth 16, 305 variables fixed on reduced cost
Total time (CPU seconds):       3.19   (Wallclock seconds):       3.92

