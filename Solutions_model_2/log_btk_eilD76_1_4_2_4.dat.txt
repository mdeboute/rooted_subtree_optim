Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 76 (-2) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 2.96045e-05 - average 2.25989e-07, 10 fixed columns
Coin0506I Presolve 113 (-18) rows, 66 (-10) columns and 350 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.34868224 - largest nonzero change 0 ( 0%) - largest zero change 2.6046125e-05
Clp0000I Optimal - objective value 41.398814
Clp0000I Optimal - objective value 41.398814
Coin0511I After Postsolve, objective 41.398814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.398814
Clp0000I Optimal - objective value 41.398814
Clp0000I Optimal - objective value 41.398814
Coin0511I After Postsolve, objective 41.398814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.39881388 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 76 columns (75 integer (75 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 12.441
Cbc0038I Solution found of 1.44341
Cbc0038I Relaxing continuous gives -10.0647
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -13.1982
Cbc0038I Pass   1: suminf.    1.11768 (38) obj. -13.1982 iterations 24
Cbc0038I Pass   2: suminf.    2.22540 (8) obj. -13.1982 iterations 40
Cbc0038I Pass   3: suminf.    1.37335 (6) obj. -13.1982 iterations 4
Cbc0038I Pass   4: suminf.    1.57827 (8) obj. -13.1982 iterations 7
Cbc0038I Pass   5: suminf.    1.57247 (7) obj. -13.1982 iterations 1
Cbc0038I Pass   6: suminf.    2.33524 (8) obj. -13.1982 iterations 8
Cbc0038I Pass   7: suminf.    1.64449 (7) obj. -13.1982 iterations 2
Cbc0038I Pass   8: suminf.    1.64449 (7) obj. -13.1982 iterations 0
Cbc0038I Pass   9: suminf.    1.84583 (6) obj. -13.1982 iterations 6
Cbc0038I Pass  10: suminf.    1.79344 (5) obj. -13.1982 iterations 1
Cbc0038I Pass  11: suminf.    1.90620 (5) obj. -13.1982 iterations 2
Cbc0038I Pass  12: suminf.    1.90620 (5) obj. -13.1982 iterations 0
Cbc0038I Pass  13: suminf.    1.79344 (5) obj. -13.1982 iterations 2
Cbc0038I Pass  14: suminf.    2.77096 (11) obj. -13.1982 iterations 18
Cbc0038I Pass  15: suminf.    2.09821 (6) obj. -13.1982 iterations 9
Cbc0038I Pass  16: suminf.    2.78016 (7) obj. -13.1982 iterations 5
Cbc0038I Pass  17: suminf.    2.44742 (8) obj. -13.1982 iterations 5
Cbc0038I Pass  18: suminf.    2.44742 (8) obj. -13.1982 iterations 0
Cbc0038I Pass  19: suminf.    1.73883 (5) obj. -13.1982 iterations 8
Cbc0038I Pass  20: suminf.    1.76919 (5) obj. -13.1982 iterations 6
Cbc0038I Pass  21: suminf.    2.55911 (6) obj. -13.1982 iterations 3
Cbc0038I Pass  22: suminf.    2.28785 (7) obj. -13.1982 iterations 1
Cbc0038I Pass  23: suminf.    2.23150 (7) obj. -13.1982 iterations 2
Cbc0038I Pass  24: suminf.    2.52745 (6) obj. -13.1982 iterations 6
Cbc0038I Pass  25: suminf.    1.77300 (7) obj. -13.1982 iterations 4
Cbc0038I Pass  26: suminf.    1.33067 (5) obj. -13.1982 iterations 3
Cbc0038I Pass  27: suminf.    2.27779 (7) obj. -13.1982 iterations 4
Cbc0038I Pass  28: suminf.    2.11731 (8) obj. -13.1982 iterations 8
Cbc0038I Pass  29: suminf.    3.07578 (9) obj. -13.1982 iterations 15
Cbc0038I Pass  30: suminf.    1.83335 (7) obj. -13.1982 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 94 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -10.0647 - took 0.10 seconds
Cbc0012I Integer solution of -10.0647 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 76 rows 45 columns
Cbc0031I 26 added rows had average density of 42.653846
Cbc0013I At root node, 26 cuts changed objective from -41.398814 to -33.927766 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13881 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1579 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 75.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.0647 best solution, best possible -33.927766 (0.95 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 70 rows 43 columns
Cbc0038I Full problem 131 rows 76 columns, reduced to 25 rows 16 columns
Cbc0001I Search completed - best objective -10.0647, took 12104 iterations and 140 nodes (1.48 seconds)
Cbc0032I Strong branching done 1538 times (18549 iterations), fathomed 8 nodes and fixed 100 variables
Cbc0035I Maximum depth 35, 553 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-58) rows, 115 (-37) columns and 1906 (-1397) elements
Clp1000I sum of infeasibilities 5.28648e-08 - average 5.50675e-10, 53 fixed columns
Coin0506I Presolve 46 (-50) rows, 62 (-53) columns and 210 (-1696) elements
Clp0006I 0  Obj -8.7144293 Primal inf 4.9241157e-07 (1) Dual inf 7.8753508e+10 (59)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 0.34569521 - largest nonzero change 2.9738336e-05 ( 0.0025539644%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -7.9842929
Clp0000I Optimal - objective value -7.9842929
Coin0511I After Postsolve, objective -7.9842929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9842929 Dual inf 190.2647 (42)
Clp0014I Perturbing problem by 0.001% of 1.7768159 - largest nonzero change 2.8549134e-05 ( 0.0016756202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 54.34626
Clp0000I Optimal - objective value 54.34626
Clp0000I Optimal - objective value 54.34626
Coin0511I After Postsolve, objective 54.34626, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34626035 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 115 columns (115 integer (115 of which binary)) and 1921 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.697%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.42255
Cbc0038I Pass   1: suminf.    3.94331 (27) obj. -34.0157 iterations 24
Cbc0038I Pass   2: suminf.    3.94331 (27) obj. -34.0157 iterations 2
Cbc0038I Pass   3: suminf.    0.57578 (5) obj. -10.2518 iterations 22
Cbc0038I Solution found of -4.95258
Cbc0038I Rounding solution of -6.81168 is better than previous of -4.95258

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 115 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -6.81168 to -8.57596 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.5737
Cbc0038I Pass   4: suminf.    3.94331 (27) obj. -34.0157 iterations 0
Cbc0038I Pass   5: suminf.    3.94331 (27) obj. -34.0157 iterations 2
Cbc0038I Pass   6: suminf.    0.91520 (5) obj. -11.5737 iterations 36
Cbc0038I Pass   7: suminf.    0.37897 (3) obj. -12.0541 iterations 3
Cbc0038I Pass   8: suminf.    0.82071 (5) obj. -11.5737 iterations 23
Cbc0038I Pass   9: suminf.    0.45054 (3) obj. -11.5737 iterations 18
Cbc0038I Pass  10: suminf.    0.55113 (2) obj. -11.5737 iterations 9
Cbc0038I Pass  11: suminf.    1.60794 (14) obj. -11.5737 iterations 26
Cbc0038I Pass  12: suminf.    1.54282 (12) obj. -11.5737 iterations 5
Cbc0038I Pass  13: suminf.    1.24306 (8) obj. -11.5737 iterations 37
Cbc0038I Pass  14: suminf.    1.24306 (8) obj. -11.5737 iterations 0
Cbc0038I Pass  15: suminf.    0.81958 (7) obj. -11.5737 iterations 16
Cbc0038I Pass  16: suminf.    0.67504 (6) obj. -11.5737 iterations 4
Cbc0038I Pass  17: suminf.    0.78439 (4) obj. -11.5737 iterations 15
Cbc0038I Pass  18: suminf.    0.63497 (6) obj. -11.8145 iterations 10
Cbc0038I Pass  19: suminf.    2.62898 (16) obj. -11.5737 iterations 30
Cbc0038I Pass  20: suminf.    2.55994 (15) obj. -11.5737 iterations 9
Cbc0038I Pass  21: suminf.    1.79303 (7) obj. -11.5737 iterations 31
Cbc0038I Pass  22: suminf.    1.03176 (5) obj. -12.6414 iterations 11
Cbc0038I Pass  23: suminf.    1.17649 (5) obj. -11.5737 iterations 7
Cbc0038I Pass  24: suminf.    1.11091 (5) obj. -11.5737 iterations 7
Cbc0038I Pass  25: suminf.    0.95964 (5) obj. -11.5737 iterations 18
Cbc0038I Pass  26: suminf.    0.95964 (5) obj. -11.5737 iterations 0
Cbc0038I Pass  27: suminf.    2.13979 (9) obj. -11.5737 iterations 12
Cbc0038I Pass  28: suminf.    0.70040 (3) obj. -11.5737 iterations 29
Cbc0038I Pass  29: suminf.    0.70040 (3) obj. -11.5737 iterations 1
Cbc0038I Pass  30: suminf.    0.79649 (4) obj. -11.5737 iterations 16
Cbc0038I Pass  31: suminf.    0.70040 (3) obj. -11.5737 iterations 8
Cbc0038I Pass  32: suminf.    2.04555 (13) obj. -11.5737 iterations 29
Cbc0038I Pass  33: suminf.    1.56472 (11) obj. -11.5737 iterations 7
Cbc0038I Rounding solution of -9.79582 is better than previous of -8.57596

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 115 columns, reduced to 23 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -16.9695
Cbc0038I Pass  33: suminf.    3.94331 (27) obj. -34.0157 iterations 0
Cbc0038I Pass  34: suminf.    3.94331 (27) obj. -34.0157 iterations 2
Cbc0038I Pass  35: suminf.    2.12062 (16) obj. -23.9936 iterations 11
Cbc0038I Pass  36: suminf.    1.12920 (8) obj. -16.9695 iterations 38
Cbc0038I Pass  37: suminf.    1.12920 (8) obj. -16.9695 iterations 0
Cbc0038I Pass  38: suminf.    1.16994 (9) obj. -16.9695 iterations 12
Cbc0038I Pass  39: suminf.    1.16994 (9) obj. -16.9695 iterations 5
Cbc0038I Pass  40: suminf.    2.62357 (9) obj. -16.9695 iterations 12
Cbc0038I Pass  41: suminf.    2.37523 (8) obj. -16.9695 iterations 8
Cbc0038I Pass  42: suminf.    2.13758 (9) obj. -16.9695 iterations 11
Cbc0038I Pass  43: suminf.    2.49550 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  44: suminf.    2.35882 (8) obj. -16.9695 iterations 6
Cbc0038I Pass  45: suminf.    2.78080 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  46: suminf.    2.29222 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  47: suminf.    2.35882 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  48: suminf.    3.85518 (13) obj. -16.9695 iterations 17
Cbc0038I Pass  49: suminf.    2.04943 (10) obj. -16.9695 iterations 14
Cbc0038I Pass  50: suminf.    1.89427 (9) obj. -16.9695 iterations 6
Cbc0038I Pass  51: suminf.    2.78080 (8) obj. -16.9695 iterations 14
Cbc0038I Pass  52: suminf.    2.29222 (8) obj. -16.9695 iterations 9
Cbc0038I Pass  53: suminf.    2.35882 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  54: suminf.    2.35882 (8) obj. -16.9695 iterations 7
Cbc0038I Pass  55: suminf.    2.78080 (8) obj. -16.9695 iterations 12
Cbc0038I Pass  56: suminf.    2.81092 (11) obj. -16.9695 iterations 26
Cbc0038I Pass  57: suminf.    2.51107 (11) obj. -16.9695 iterations 11
Cbc0038I Pass  58: suminf.    2.35882 (8) obj. -16.9695 iterations 14
Cbc0038I Pass  59: suminf.    4.66898 (15) obj. -16.9695 iterations 25
Cbc0038I Pass  60: suminf.    2.09637 (9) obj. -16.9695 iterations 19
Cbc0038I Pass  61: suminf.    2.26283 (12) obj. -16.9695 iterations 16
Cbc0038I Pass  62: suminf.    2.22221 (8) obj. -16.9695 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 115 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -9.79582 - took 0.05 seconds
Cbc0012I Integer solution of -9.795816 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 96 rows 115 columns, reduced to 6 rows 7 columns
Cbc0031I 47 added rows had average density of 43.978723
Cbc0013I At root node, 47 cuts changed objective from -38.552499 to -18.905456 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16893 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1554 row cuts average 109.9 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 454 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1314 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 55.1 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.549 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.795816 best solution, best possible -18.905456 (2.60 seconds)
Cbc0038I Full problem 96 rows 115 columns, reduced to 32 rows 43 columns
Cbc0010I After 41 nodes, 8 on tree, -9.795816 best solution, best possible -18.905456 (3.35 seconds)
Cbc0012I Integer solution of -10.0647 found by rounding after 8819 iterations and 86 nodes (3.47 seconds)
Cbc0001I Search completed - best objective -10.0647, took 8819 iterations and 86 nodes (3.47 seconds)
Cbc0032I Strong branching done 884 times (13044 iterations), fathomed 14 nodes and fixed 15 variables
Cbc0035I Maximum depth 23, 333 variables fixed on reduced cost
Total time (CPU seconds):       2.74   (Wallclock seconds):       3.49

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 76 (-2) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 2.96045e-05 - average 2.25989e-07, 10 fixed columns
Coin0506I Presolve 113 (-18) rows, 66 (-10) columns and 350 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.34868224 - largest nonzero change 0 ( 0%) - largest zero change 2.6046125e-05
Clp0000I Optimal - objective value 41.398814
Clp0000I Optimal - objective value 41.398814
Coin0511I After Postsolve, objective 41.398814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.398814
Clp0000I Optimal - objective value 41.398814
Clp0000I Optimal - objective value 41.398814
Coin0511I After Postsolve, objective 41.398814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.39881388 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 76 columns (75 integer (75 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 12.441
Cbc0038I Solution found of 1.44341
Cbc0038I Relaxing continuous gives -10.0647
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -13.1982
Cbc0038I Pass   1: suminf.    1.11768 (38) obj. -13.1982 iterations 24
Cbc0038I Pass   2: suminf.    2.22540 (8) obj. -13.1982 iterations 40
Cbc0038I Pass   3: suminf.    1.37335 (6) obj. -13.1982 iterations 4
Cbc0038I Pass   4: suminf.    1.57827 (8) obj. -13.1982 iterations 7
Cbc0038I Pass   5: suminf.    1.57247 (7) obj. -13.1982 iterations 1
Cbc0038I Pass   6: suminf.    2.33524 (8) obj. -13.1982 iterations 8
Cbc0038I Pass   7: suminf.    1.64449 (7) obj. -13.1982 iterations 2
Cbc0038I Pass   8: suminf.    1.64449 (7) obj. -13.1982 iterations 0
Cbc0038I Pass   9: suminf.    1.84583 (6) obj. -13.1982 iterations 6
Cbc0038I Pass  10: suminf.    1.79344 (5) obj. -13.1982 iterations 1
Cbc0038I Pass  11: suminf.    1.90620 (5) obj. -13.1982 iterations 2
Cbc0038I Pass  12: suminf.    1.90620 (5) obj. -13.1982 iterations 0
Cbc0038I Pass  13: suminf.    1.79344 (5) obj. -13.1982 iterations 2
Cbc0038I Pass  14: suminf.    2.77096 (11) obj. -13.1982 iterations 18
Cbc0038I Pass  15: suminf.    2.09821 (6) obj. -13.1982 iterations 9
Cbc0038I Pass  16: suminf.    2.78016 (7) obj. -13.1982 iterations 5
Cbc0038I Pass  17: suminf.    2.44742 (8) obj. -13.1982 iterations 5
Cbc0038I Pass  18: suminf.    2.44742 (8) obj. -13.1982 iterations 0
Cbc0038I Pass  19: suminf.    1.73883 (5) obj. -13.1982 iterations 8
Cbc0038I Pass  20: suminf.    1.76919 (5) obj. -13.1982 iterations 6
Cbc0038I Pass  21: suminf.    2.55911 (6) obj. -13.1982 iterations 3
Cbc0038I Pass  22: suminf.    2.28785 (7) obj. -13.1982 iterations 1
Cbc0038I Pass  23: suminf.    2.23150 (7) obj. -13.1982 iterations 2
Cbc0038I Pass  24: suminf.    2.52745 (6) obj. -13.1982 iterations 6
Cbc0038I Pass  25: suminf.    1.77300 (7) obj. -13.1982 iterations 4
Cbc0038I Pass  26: suminf.    1.33067 (5) obj. -13.1982 iterations 3
Cbc0038I Pass  27: suminf.    2.27779 (7) obj. -13.1982 iterations 4
Cbc0038I Pass  28: suminf.    2.11731 (8) obj. -13.1982 iterations 8
Cbc0038I Pass  29: suminf.    3.07578 (9) obj. -13.1982 iterations 15
Cbc0038I Pass  30: suminf.    1.83335 (7) obj. -13.1982 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 94 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.0647 - took 0.09 seconds
Cbc0012I Integer solution of -10.0647 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 76 rows 45 columns
Cbc0031I 26 added rows had average density of 42.653846
Cbc0013I At root node, 26 cuts changed objective from -41.398814 to -33.927766 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13881 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1579 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 75.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.0647 best solution, best possible -33.927766 (0.95 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 70 rows 43 columns
Cbc0038I Full problem 131 rows 76 columns, reduced to 25 rows 16 columns
Cbc0001I Search completed - best objective -10.0647, took 12104 iterations and 140 nodes (1.47 seconds)
Cbc0032I Strong branching done 1538 times (18549 iterations), fathomed 8 nodes and fixed 100 variables
Cbc0035I Maximum depth 35, 553 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-59) rows, 115 (-38) columns and 1906 (-1398) elements
Clp1000I sum of infeasibilities 5.28648e-08 - average 5.50675e-10, 53 fixed columns
Coin0506I Presolve 46 (-50) rows, 62 (-53) columns and 210 (-1696) elements
Clp0006I 0  Obj -8.7144293 Primal inf 4.9241157e-07 (1) Dual inf 7.8753508e+10 (59)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 0.34569521 - largest nonzero change 2.9738336e-05 ( 0.0025539644%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -7.9842929
Clp0000I Optimal - objective value -7.9842929
Coin0511I After Postsolve, objective -7.9842929, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9842929 Dual inf 190.2647 (42)
Clp0014I Perturbing problem by 0.001% of 1.7768159 - largest nonzero change 2.8549134e-05 ( 0.0016756202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 54.34626
Clp0000I Optimal - objective value 54.34626
Clp0000I Optimal - objective value 54.34626
Coin0511I After Postsolve, objective 54.34626, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34626035 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 115 columns (115 integer (115 of which binary)) and 1921 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.697%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.42255
Cbc0038I Pass   1: suminf.    3.94331 (27) obj. -34.0157 iterations 24
Cbc0038I Pass   2: suminf.    3.94331 (27) obj. -34.0157 iterations 2
Cbc0038I Pass   3: suminf.    0.57578 (5) obj. -10.2518 iterations 22
Cbc0038I Solution found of -4.95258
Cbc0038I Rounding solution of -6.81168 is better than previous of -4.95258

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 115 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -6.81168 to -8.57596 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.5737
Cbc0038I Pass   4: suminf.    3.94331 (27) obj. -34.0157 iterations 0
Cbc0038I Pass   5: suminf.    3.94331 (27) obj. -34.0157 iterations 2
Cbc0038I Pass   6: suminf.    0.91520 (5) obj. -11.5737 iterations 36
Cbc0038I Pass   7: suminf.    0.37897 (3) obj. -12.0541 iterations 3
Cbc0038I Pass   8: suminf.    0.82071 (5) obj. -11.5737 iterations 23
Cbc0038I Pass   9: suminf.    0.45054 (3) obj. -11.5737 iterations 18
Cbc0038I Pass  10: suminf.    0.55113 (2) obj. -11.5737 iterations 9
Cbc0038I Pass  11: suminf.    1.60794 (14) obj. -11.5737 iterations 26
Cbc0038I Pass  12: suminf.    1.54282 (12) obj. -11.5737 iterations 5
Cbc0038I Pass  13: suminf.    1.24306 (8) obj. -11.5737 iterations 37
Cbc0038I Pass  14: suminf.    1.24306 (8) obj. -11.5737 iterations 0
Cbc0038I Pass  15: suminf.    0.81958 (7) obj. -11.5737 iterations 16
Cbc0038I Pass  16: suminf.    0.67504 (6) obj. -11.5737 iterations 4
Cbc0038I Pass  17: suminf.    0.78439 (4) obj. -11.5737 iterations 15
Cbc0038I Pass  18: suminf.    0.63497 (6) obj. -11.8145 iterations 10
Cbc0038I Pass  19: suminf.    2.62898 (16) obj. -11.5737 iterations 30
Cbc0038I Pass  20: suminf.    2.55994 (15) obj. -11.5737 iterations 9
Cbc0038I Pass  21: suminf.    1.79303 (7) obj. -11.5737 iterations 31
Cbc0038I Pass  22: suminf.    1.03176 (5) obj. -12.6414 iterations 11
Cbc0038I Pass  23: suminf.    1.17649 (5) obj. -11.5737 iterations 7
Cbc0038I Pass  24: suminf.    1.11091 (5) obj. -11.5737 iterations 7
Cbc0038I Pass  25: suminf.    0.95964 (5) obj. -11.5737 iterations 18
Cbc0038I Pass  26: suminf.    0.95964 (5) obj. -11.5737 iterations 0
Cbc0038I Pass  27: suminf.    2.13979 (9) obj. -11.5737 iterations 12
Cbc0038I Pass  28: suminf.    0.70040 (3) obj. -11.5737 iterations 29
Cbc0038I Pass  29: suminf.    0.70040 (3) obj. -11.5737 iterations 1
Cbc0038I Pass  30: suminf.    0.79649 (4) obj. -11.5737 iterations 16
Cbc0038I Pass  31: suminf.    0.70040 (3) obj. -11.5737 iterations 8
Cbc0038I Pass  32: suminf.    2.04555 (13) obj. -11.5737 iterations 29
Cbc0038I Pass  33: suminf.    1.56472 (11) obj. -11.5737 iterations 7
Cbc0038I Rounding solution of -9.79582 is better than previous of -8.57596

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 115 columns, reduced to 23 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -16.9695
Cbc0038I Pass  33: suminf.    3.94331 (27) obj. -34.0157 iterations 0
Cbc0038I Pass  34: suminf.    3.94331 (27) obj. -34.0157 iterations 2
Cbc0038I Pass  35: suminf.    2.12062 (16) obj. -23.9936 iterations 11
Cbc0038I Pass  36: suminf.    1.12920 (8) obj. -16.9695 iterations 38
Cbc0038I Pass  37: suminf.    1.12920 (8) obj. -16.9695 iterations 0
Cbc0038I Pass  38: suminf.    1.16994 (9) obj. -16.9695 iterations 12
Cbc0038I Pass  39: suminf.    1.16994 (9) obj. -16.9695 iterations 5
Cbc0038I Pass  40: suminf.    2.62357 (9) obj. -16.9695 iterations 12
Cbc0038I Pass  41: suminf.    2.37523 (8) obj. -16.9695 iterations 8
Cbc0038I Pass  42: suminf.    2.13758 (9) obj. -16.9695 iterations 11
Cbc0038I Pass  43: suminf.    2.49550 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  44: suminf.    2.35882 (8) obj. -16.9695 iterations 6
Cbc0038I Pass  45: suminf.    2.78080 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  46: suminf.    2.29222 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  47: suminf.    2.35882 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  48: suminf.    3.85518 (13) obj. -16.9695 iterations 17
Cbc0038I Pass  49: suminf.    2.04943 (10) obj. -16.9695 iterations 14
Cbc0038I Pass  50: suminf.    1.89427 (9) obj. -16.9695 iterations 6
Cbc0038I Pass  51: suminf.    2.78080 (8) obj. -16.9695 iterations 14
Cbc0038I Pass  52: suminf.    2.29222 (8) obj. -16.9695 iterations 9
Cbc0038I Pass  53: suminf.    2.35882 (8) obj. -16.9695 iterations 13
Cbc0038I Pass  54: suminf.    2.35882 (8) obj. -16.9695 iterations 7
Cbc0038I Pass  55: suminf.    2.78080 (8) obj. -16.9695 iterations 12
Cbc0038I Pass  56: suminf.    2.81092 (11) obj. -16.9695 iterations 26
Cbc0038I Pass  57: suminf.    2.51107 (11) obj. -16.9695 iterations 11
Cbc0038I Pass  58: suminf.    2.35882 (8) obj. -16.9695 iterations 14
Cbc0038I Pass  59: suminf.    4.66898 (15) obj. -16.9695 iterations 25
Cbc0038I Pass  60: suminf.    2.09637 (9) obj. -16.9695 iterations 19
Cbc0038I Pass  61: suminf.    2.26283 (12) obj. -16.9695 iterations 16
Cbc0038I Pass  62: suminf.    2.22221 (8) obj. -16.9695 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 115 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -9.79582 - took 0.05 seconds
Cbc0012I Integer solution of -9.795816 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 96 rows 115 columns, reduced to 6 rows 7 columns
Cbc0031I 47 added rows had average density of 43.978723
Cbc0013I At root node, 47 cuts changed objective from -38.552499 to -18.905456 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16893 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1554 row cuts average 109.9 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 454 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1314 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 55.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.533 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.795816 best solution, best possible -18.905456 (2.50 seconds)
Cbc0038I Full problem 96 rows 115 columns, reduced to 32 rows 43 columns
Cbc0010I After 41 nodes, 8 on tree, -9.795816 best solution, best possible -18.905456 (3.25 seconds)
Cbc0012I Integer solution of -10.0647 found by rounding after 8819 iterations and 86 nodes (3.38 seconds)
Cbc0001I Search completed - best objective -10.0647, took 8819 iterations and 86 nodes (3.38 seconds)
Cbc0032I Strong branching done 884 times (13044 iterations), fathomed 14 nodes and fixed 15 variables
Cbc0035I Maximum depth 23, 333 variables fixed on reduced cost
Total time (CPU seconds):       2.66   (Wallclock seconds):       3.40

