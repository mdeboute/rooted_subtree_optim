Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-17) rows, 44 (-6) columns and 244 (-41) elements
Clp1000I sum of infeasibilities 4.90123e-06 - average 5.97711e-08, 12 fixed columns
Coin0506I Presolve 47 (-35) rows, 28 (-16) columns and 142 (-102) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 2012.1134
Clp0000I Optimal - objective value 2012.1134
Coin0511I After Postsolve, objective 2012.1134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2012.1134
Clp0000I Optimal - objective value 2012.1134
Clp0000I Optimal - objective value 2012.1134
Coin0511I After Postsolve, objective 2012.1134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2012.113442 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 82 rows, 44 columns (43 integer (43 of which binary)) and 244 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 9.42945
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -347.073 iterations 40
Cbc0038I Solution found of -347.073
Cbc0038I Relaxing continuous gives -347.073
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 44 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -347.073 to -415.611 (0.02 seconds)
Cbc0038I Round again with cutoff of -575.261
Cbc0038I Pass   2: suminf.    0.96546 (7) obj. -575.261 iterations 7
Cbc0038I Pass   3: suminf.    0.24054 (5) obj. -575.261 iterations 5
Cbc0038I Pass   4: suminf.    1.32284 (5) obj. -575.261 iterations 7
Cbc0038I Pass   5: suminf.    1.29829 (6) obj. -575.261 iterations 1
Cbc0038I Pass   6: suminf.    0.95569 (2) obj. -575.261 iterations 6
Cbc0038I Pass   7: suminf.    0.89136 (2) obj. -575.261 iterations 1
Cbc0038I Pass   8: suminf.    0.86429 (3) obj. -575.261 iterations 2
Cbc0038I Pass   9: suminf.    1.36862 (4) obj. -575.261 iterations 2
Cbc0038I Pass  10: suminf.    1.27919 (5) obj. -575.261 iterations 2
Cbc0038I Pass  11: suminf.    1.52662 (5) obj. -575.261 iterations 4
Cbc0038I Pass  12: suminf.    1.26495 (5) obj. -575.261 iterations 3
Cbc0038I Pass  13: suminf.    1.64327 (5) obj. -575.261 iterations 4
Cbc0038I Pass  14: suminf.    1.63727 (6) obj. -575.261 iterations 2
Cbc0038I Pass  15: suminf.    1.54197 (5) obj. -575.261 iterations 5
Cbc0038I Pass  16: suminf.    1.98847 (9) obj. -575.261 iterations 10
Cbc0038I Pass  17: suminf.    1.55053 (6) obj. -575.261 iterations 6
Cbc0038I Pass  18: suminf.    1.74155 (5) obj. -575.261 iterations 8
Cbc0038I Pass  19: suminf.    1.18449 (5) obj. -575.261 iterations 3
Cbc0038I Pass  20: suminf.    1.36862 (4) obj. -575.261 iterations 4
Cbc0038I Pass  21: suminf.    1.27919 (5) obj. -575.261 iterations 2
Cbc0038I Pass  22: suminf.    1.52662 (5) obj. -575.261 iterations 4
Cbc0038I Pass  23: suminf.    1.26495 (5) obj. -575.261 iterations 3
Cbc0038I Pass  24: suminf.    1.64327 (5) obj. -575.261 iterations 4
Cbc0038I Pass  25: suminf.    1.63727 (6) obj. -575.261 iterations 2
Cbc0038I Pass  26: suminf.    1.54197 (5) obj. -575.261 iterations 5
Cbc0038I Pass  27: suminf.    2.15690 (10) obj. -575.261 iterations 13
Cbc0038I Pass  28: suminf.    1.41088 (5) obj. -575.261 iterations 6
Cbc0038I Pass  29: suminf.    0.91769 (2) obj. -575.261 iterations 4
Cbc0038I Pass  30: suminf.    0.76213 (3) obj. -575.261 iterations 2
Cbc0038I Pass  31: suminf.    1.41702 (3) obj. -575.261 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 44 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -415.611 - took 0.03 seconds
Cbc0012I Integer solution of -415.6108 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 82 rows 44 columns, reduced to 45 rows 27 columns
Cbc0031I 18 added rows had average density of 33.166667
Cbc0013I At root node, 18 cuts changed objective from -2012.1134 to -873.24467 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4102 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 855 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 224 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 135 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -415.6107999999995, took 3525 iterations and 8 nodes (0.36 seconds)
Cbc0032I Strong branching done 172 times (3479 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-12) rows, 90 (-6) columns and 1230 (-183) elements
Clp1000I sum of infeasibilities 5.37494e-06 - average 6.24994e-08, 89 fixed columns
Coin0506I Presolve 0 (-86) rows, 0 (-90) columns and 0 (-1230) elements
Clp0000I Optimal - objective value -728.6542
Clp0000I Optimal - objective value -728.6542
Coin0511I After Postsolve, objective -728.6542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5988142 - largest nonzero change 3.9686149e-05 ( 0.00062528215%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3535.5127
Clp0000I Optimal - objective value 3535.5127
Clp0000I Optimal - objective value 3535.5127
Coin0511I After Postsolve, objective 3535.5127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3535.512656 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 90 columns (90 integer (90 of which binary)) and 1232 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.072%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.5322
Cbc0038I Pass   1: suminf.    4.44889 (27) obj. -1671.12 iterations 15
Cbc0038I Pass   2: suminf.    4.44889 (27) obj. -1671.12 iterations 1
Cbc0038I Pass   3: suminf.    1.41209 (12) obj. -208.574 iterations 15
Cbc0038I Solution found of 165.243
Cbc0038I Rounding solution of 96.7058 is better than previous of 165.243

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 90 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 96.7058 to -60.4658 (0.02 seconds)
Cbc0038I Round again with cutoff of -378.786
Cbc0038I Pass   4: suminf.    4.44889 (27) obj. -1671.12 iterations 0
Cbc0038I Pass   5: suminf.    4.44889 (27) obj. -1671.12 iterations 1
Cbc0038I Pass   6: suminf.    2.06871 (16) obj. -453.273 iterations 11
Cbc0038I Pass   7: suminf.    0.83614 (6) obj. -378.786 iterations 12
Cbc0038I Pass   8: suminf.    0.23810 (1) obj. -627.138 iterations 6
Cbc0038I Pass   9: suminf.    0.47690 (1) obj. -378.786 iterations 1
Cbc0038I Pass  10: suminf.    2.51042 (13) obj. -378.786 iterations 30
Cbc0038I Pass  11: suminf.    1.32407 (11) obj. -490.323 iterations 9
Cbc0038I Pass  12: suminf.    1.85691 (14) obj. -378.786 iterations 15
Cbc0038I Pass  13: suminf.    1.85691 (14) obj. -378.786 iterations 0
Cbc0038I Pass  14: suminf.    0.78026 (3) obj. -378.786 iterations 20
Cbc0038I Pass  15: suminf.    0.78026 (3) obj. -378.786 iterations 0
Cbc0038I Pass  16: suminf.    0.92791 (3) obj. -378.786 iterations 1
Cbc0038I Pass  17: suminf.    0.92791 (3) obj. -378.786 iterations 0
Cbc0038I Pass  18: suminf.    0.78026 (3) obj. -378.786 iterations 1
Cbc0038I Pass  19: suminf.    3.87977 (14) obj. -378.786 iterations 26
Cbc0038I Pass  20: suminf.    3.87977 (14) obj. -378.786 iterations 6
Cbc0038I Pass  21: suminf.    1.46115 (4) obj. -378.786 iterations 15
Cbc0038I Pass  22: suminf.    1.46115 (4) obj. -378.786 iterations 0
Cbc0038I Pass  23: suminf.    1.55987 (4) obj. -378.786 iterations 2
Cbc0038I Pass  24: suminf.    1.51786 (4) obj. -397.273 iterations 4
Cbc0038I Pass  25: suminf.    1.46115 (4) obj. -378.786 iterations 4
Cbc0038I Pass  26: suminf.    4.85766 (17) obj. -378.786 iterations 27
Cbc0038I Pass  27: suminf.    3.29229 (15) obj. -378.786 iterations 9
Cbc0038I Pass  28: suminf.    2.95221 (14) obj. -378.786 iterations 4
Cbc0038I Pass  29: suminf.    1.46401 (7) obj. -378.786 iterations 14
Cbc0038I Pass  30: suminf.    1.46401 (7) obj. -378.786 iterations 0
Cbc0038I Pass  31: suminf.    1.97489 (7) obj. -378.786 iterations 3
Cbc0038I Pass  32: suminf.    1.59528 (8) obj. -378.786 iterations 4
Cbc0038I Pass  33: suminf.    3.19628 (18) obj. -378.786 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 90 columns, reduced to 28 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -60.4658 to -415.611 (0.05 seconds)
Cbc0038I Round again with cutoff of -981.222
Cbc0038I Pass  33: suminf.    4.44889 (27) obj. -1671.12 iterations 0
Cbc0038I Pass  34: suminf.    4.44889 (27) obj. -1671.12 iterations 1
Cbc0038I Pass  35: suminf.    1.66916 (13) obj. -981.222 iterations 15
Cbc0038I Pass  36: suminf.    1.65018 (13) obj. -1000.96 iterations 1
Cbc0038I Pass  37: suminf.    1.54240 (18) obj. -981.222 iterations 26
Cbc0038I Pass  38: suminf.    1.54240 (18) obj. -981.222 iterations 0
Cbc0038I Pass  39: suminf.    2.33570 (8) obj. -981.222 iterations 15
Cbc0038I Pass  40: suminf.    2.14646 (8) obj. -981.222 iterations 3
Cbc0038I Pass  41: suminf.    1.88011 (6) obj. -981.222 iterations 9
Cbc0038I Pass  42: suminf.    1.88011 (6) obj. -981.222 iterations 1
Cbc0038I Pass  43: suminf.    1.89557 (6) obj. -981.222 iterations 1
Cbc0038I Pass  44: suminf.    1.89557 (6) obj. -981.222 iterations 0
Cbc0038I Pass  45: suminf.    1.88011 (6) obj. -981.222 iterations 3
Cbc0038I Pass  46: suminf.    4.16302 (16) obj. -981.222 iterations 17
Cbc0038I Pass  47: suminf.    3.13501 (12) obj. -981.222 iterations 7
Cbc0038I Pass  48: suminf.    2.97852 (13) obj. -981.222 iterations 1
Cbc0038I Pass  49: suminf.    2.02722 (6) obj. -981.222 iterations 13
Cbc0038I Pass  50: suminf.    1.78922 (7) obj. -981.222 iterations 3
Cbc0038I Pass  51: suminf.    3.26787 (12) obj. -981.222 iterations 19
Cbc0038I Pass  52: suminf.    3.26787 (12) obj. -981.222 iterations 2
Cbc0038I Pass  53: suminf.    1.74311 (6) obj. -981.222 iterations 14
Cbc0038I Pass  54: suminf.    1.74311 (6) obj. -981.222 iterations 2
Cbc0038I Pass  55: suminf.    1.74859 (6) obj. -981.222 iterations 1
Cbc0038I Pass  56: suminf.    1.74859 (6) obj. -981.222 iterations 0
Cbc0038I Pass  57: suminf.    1.74311 (6) obj. -981.222 iterations 5
Cbc0038I Pass  58: suminf.    4.15533 (18) obj. -981.222 iterations 25
Cbc0038I Pass  59: suminf.    4.05305 (17) obj. -981.222 iterations 5
Cbc0038I Pass  60: suminf.    2.19613 (9) obj. -981.222 iterations 14
Cbc0038I Pass  61: suminf.    2.19613 (9) obj. -981.222 iterations 0
Cbc0038I Pass  62: suminf.    2.21530 (9) obj. -981.222 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -415.611 - took 0.05 seconds
Cbc0012I Integer solution of -415.6108 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 33 added rows had average density of 7.4545455
Cbc0013I At root node, 35 cuts changed objective from -3243.6654 to -415.6108 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 448 row cuts average 2.8 elements, 23 column cuts (23 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -415.6107999999995, took 99 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-17) rows, 44 (-6) columns and 244 (-41) elements
Clp1000I sum of infeasibilities 4.90123e-06 - average 5.97711e-08, 12 fixed columns
Coin0506I Presolve 47 (-35) rows, 28 (-16) columns and 142 (-102) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 2012.1134
Clp0000I Optimal - objective value 2012.1134
Coin0511I After Postsolve, objective 2012.1134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2012.1134
Clp0000I Optimal - objective value 2012.1134
Clp0000I Optimal - objective value 2012.1134
Coin0511I After Postsolve, objective 2012.1134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2012.113442 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 82 rows, 44 columns (43 integer (43 of which binary)) and 244 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 9.42945
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -347.073 iterations 40
Cbc0038I Solution found of -347.073
Cbc0038I Relaxing continuous gives -347.073
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 44 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -347.073 to -415.611 (0.02 seconds)
Cbc0038I Round again with cutoff of -575.261
Cbc0038I Pass   2: suminf.    0.96546 (7) obj. -575.261 iterations 7
Cbc0038I Pass   3: suminf.    0.24054 (5) obj. -575.261 iterations 5
Cbc0038I Pass   4: suminf.    1.32284 (5) obj. -575.261 iterations 7
Cbc0038I Pass   5: suminf.    1.29829 (6) obj. -575.261 iterations 1
Cbc0038I Pass   6: suminf.    0.95569 (2) obj. -575.261 iterations 6
Cbc0038I Pass   7: suminf.    0.89136 (2) obj. -575.261 iterations 1
Cbc0038I Pass   8: suminf.    0.86429 (3) obj. -575.261 iterations 2
Cbc0038I Pass   9: suminf.    1.36862 (4) obj. -575.261 iterations 2
Cbc0038I Pass  10: suminf.    1.27919 (5) obj. -575.261 iterations 2
Cbc0038I Pass  11: suminf.    1.52662 (5) obj. -575.261 iterations 4
Cbc0038I Pass  12: suminf.    1.26495 (5) obj. -575.261 iterations 3
Cbc0038I Pass  13: suminf.    1.64327 (5) obj. -575.261 iterations 4
Cbc0038I Pass  14: suminf.    1.63727 (6) obj. -575.261 iterations 2
Cbc0038I Pass  15: suminf.    1.54197 (5) obj. -575.261 iterations 5
Cbc0038I Pass  16: suminf.    1.98847 (9) obj. -575.261 iterations 10
Cbc0038I Pass  17: suminf.    1.55053 (6) obj. -575.261 iterations 6
Cbc0038I Pass  18: suminf.    1.74155 (5) obj. -575.261 iterations 8
Cbc0038I Pass  19: suminf.    1.18449 (5) obj. -575.261 iterations 3
Cbc0038I Pass  20: suminf.    1.36862 (4) obj. -575.261 iterations 4
Cbc0038I Pass  21: suminf.    1.27919 (5) obj. -575.261 iterations 2
Cbc0038I Pass  22: suminf.    1.52662 (5) obj. -575.261 iterations 4
Cbc0038I Pass  23: suminf.    1.26495 (5) obj. -575.261 iterations 3
Cbc0038I Pass  24: suminf.    1.64327 (5) obj. -575.261 iterations 4
Cbc0038I Pass  25: suminf.    1.63727 (6) obj. -575.261 iterations 2
Cbc0038I Pass  26: suminf.    1.54197 (5) obj. -575.261 iterations 5
Cbc0038I Pass  27: suminf.    2.15690 (10) obj. -575.261 iterations 13
Cbc0038I Pass  28: suminf.    1.41088 (5) obj. -575.261 iterations 6
Cbc0038I Pass  29: suminf.    0.91769 (2) obj. -575.261 iterations 4
Cbc0038I Pass  30: suminf.    0.76213 (3) obj. -575.261 iterations 2
Cbc0038I Pass  31: suminf.    1.41702 (3) obj. -575.261 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 44 columns, reduced to 54 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -415.611 - took 0.04 seconds
Cbc0012I Integer solution of -415.6108 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 82 rows 44 columns, reduced to 45 rows 27 columns
Cbc0031I 18 added rows had average density of 33.166667
Cbc0013I At root node, 18 cuts changed objective from -2012.1134 to -873.24467 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4102 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 855 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 224 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 135 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -415.6107999999995, took 3525 iterations and 8 nodes (0.38 seconds)
Cbc0032I Strong branching done 172 times (3479 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 90 (-7) columns and 1230 (-184) elements
Clp1000I sum of infeasibilities 5.37494e-06 - average 6.24994e-08, 89 fixed columns
Coin0506I Presolve 0 (-86) rows, 0 (-90) columns and 0 (-1230) elements
Clp0000I Optimal - objective value -728.6542
Clp0000I Optimal - objective value -728.6542
Coin0511I After Postsolve, objective -728.6542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5988142 - largest nonzero change 3.9686149e-05 ( 0.00062528215%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3535.5127
Clp0000I Optimal - objective value 3535.5127
Clp0000I Optimal - objective value 3535.5127
Coin0511I After Postsolve, objective 3535.5127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3535.512656 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 90 columns (90 integer (90 of which binary)) and 1232 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.072%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.5322
Cbc0038I Pass   1: suminf.    4.44889 (27) obj. -1671.12 iterations 15
Cbc0038I Pass   2: suminf.    4.44889 (27) obj. -1671.12 iterations 1
Cbc0038I Pass   3: suminf.    1.41209 (12) obj. -208.574 iterations 15
Cbc0038I Solution found of 165.243
Cbc0038I Rounding solution of 96.7058 is better than previous of 165.243

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 90 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 96.7058 to -60.4658 (0.02 seconds)
Cbc0038I Round again with cutoff of -378.786
Cbc0038I Pass   4: suminf.    4.44889 (27) obj. -1671.12 iterations 0
Cbc0038I Pass   5: suminf.    4.44889 (27) obj. -1671.12 iterations 1
Cbc0038I Pass   6: suminf.    2.06871 (16) obj. -453.273 iterations 11
Cbc0038I Pass   7: suminf.    0.83614 (6) obj. -378.786 iterations 12
Cbc0038I Pass   8: suminf.    0.23810 (1) obj. -627.138 iterations 6
Cbc0038I Pass   9: suminf.    0.47690 (1) obj. -378.786 iterations 1
Cbc0038I Pass  10: suminf.    2.51042 (13) obj. -378.786 iterations 30
Cbc0038I Pass  11: suminf.    1.32407 (11) obj. -490.323 iterations 9
Cbc0038I Pass  12: suminf.    1.85691 (14) obj. -378.786 iterations 15
Cbc0038I Pass  13: suminf.    1.85691 (14) obj. -378.786 iterations 0
Cbc0038I Pass  14: suminf.    0.78026 (3) obj. -378.786 iterations 20
Cbc0038I Pass  15: suminf.    0.78026 (3) obj. -378.786 iterations 0
Cbc0038I Pass  16: suminf.    0.92791 (3) obj. -378.786 iterations 1
Cbc0038I Pass  17: suminf.    0.92791 (3) obj. -378.786 iterations 0
Cbc0038I Pass  18: suminf.    0.78026 (3) obj. -378.786 iterations 1
Cbc0038I Pass  19: suminf.    3.87977 (14) obj. -378.786 iterations 26
Cbc0038I Pass  20: suminf.    3.87977 (14) obj. -378.786 iterations 6
Cbc0038I Pass  21: suminf.    1.46115 (4) obj. -378.786 iterations 15
Cbc0038I Pass  22: suminf.    1.46115 (4) obj. -378.786 iterations 0
Cbc0038I Pass  23: suminf.    1.55987 (4) obj. -378.786 iterations 2
Cbc0038I Pass  24: suminf.    1.51786 (4) obj. -397.273 iterations 4
Cbc0038I Pass  25: suminf.    1.46115 (4) obj. -378.786 iterations 4
Cbc0038I Pass  26: suminf.    4.85766 (17) obj. -378.786 iterations 27
Cbc0038I Pass  27: suminf.    3.29229 (15) obj. -378.786 iterations 9
Cbc0038I Pass  28: suminf.    2.95221 (14) obj. -378.786 iterations 4
Cbc0038I Pass  29: suminf.    1.46401 (7) obj. -378.786 iterations 14
Cbc0038I Pass  30: suminf.    1.46401 (7) obj. -378.786 iterations 0
Cbc0038I Pass  31: suminf.    1.97489 (7) obj. -378.786 iterations 3
Cbc0038I Pass  32: suminf.    1.59528 (8) obj. -378.786 iterations 4
Cbc0038I Pass  33: suminf.    3.19628 (18) obj. -378.786 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 90 columns, reduced to 28 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -60.4658 to -415.611 (0.05 seconds)
Cbc0038I Round again with cutoff of -981.222
Cbc0038I Pass  33: suminf.    4.44889 (27) obj. -1671.12 iterations 0
Cbc0038I Pass  34: suminf.    4.44889 (27) obj. -1671.12 iterations 1
Cbc0038I Pass  35: suminf.    1.66916 (13) obj. -981.222 iterations 15
Cbc0038I Pass  36: suminf.    1.65018 (13) obj. -1000.96 iterations 1
Cbc0038I Pass  37: suminf.    1.54240 (18) obj. -981.222 iterations 26
Cbc0038I Pass  38: suminf.    1.54240 (18) obj. -981.222 iterations 0
Cbc0038I Pass  39: suminf.    2.33570 (8) obj. -981.222 iterations 15
Cbc0038I Pass  40: suminf.    2.14646 (8) obj. -981.222 iterations 3
Cbc0038I Pass  41: suminf.    1.88011 (6) obj. -981.222 iterations 9
Cbc0038I Pass  42: suminf.    1.88011 (6) obj. -981.222 iterations 1
Cbc0038I Pass  43: suminf.    1.89557 (6) obj. -981.222 iterations 1
Cbc0038I Pass  44: suminf.    1.89557 (6) obj. -981.222 iterations 0
Cbc0038I Pass  45: suminf.    1.88011 (6) obj. -981.222 iterations 3
Cbc0038I Pass  46: suminf.    4.16302 (16) obj. -981.222 iterations 17
Cbc0038I Pass  47: suminf.    3.13501 (12) obj. -981.222 iterations 7
Cbc0038I Pass  48: suminf.    2.97852 (13) obj. -981.222 iterations 1
Cbc0038I Pass  49: suminf.    2.02722 (6) obj. -981.222 iterations 13
Cbc0038I Pass  50: suminf.    1.78922 (7) obj. -981.222 iterations 3
Cbc0038I Pass  51: suminf.    3.26787 (12) obj. -981.222 iterations 19
Cbc0038I Pass  52: suminf.    3.26787 (12) obj. -981.222 iterations 2
Cbc0038I Pass  53: suminf.    1.74311 (6) obj. -981.222 iterations 14
Cbc0038I Pass  54: suminf.    1.74311 (6) obj. -981.222 iterations 2
Cbc0038I Pass  55: suminf.    1.74859 (6) obj. -981.222 iterations 1
Cbc0038I Pass  56: suminf.    1.74859 (6) obj. -981.222 iterations 0
Cbc0038I Pass  57: suminf.    1.74311 (6) obj. -981.222 iterations 5
Cbc0038I Pass  58: suminf.    4.15533 (18) obj. -981.222 iterations 25
Cbc0038I Pass  59: suminf.    4.05305 (17) obj. -981.222 iterations 5
Cbc0038I Pass  60: suminf.    2.19613 (9) obj. -981.222 iterations 14
Cbc0038I Pass  61: suminf.    2.19613 (9) obj. -981.222 iterations 0
Cbc0038I Pass  62: suminf.    2.21530 (9) obj. -981.222 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -415.611 - took 0.05 seconds
Cbc0012I Integer solution of -415.6108 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 33 added rows had average density of 7.4545455
Cbc0013I At root node, 35 cuts changed objective from -3243.6654 to -415.6108 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 448 row cuts average 2.8 elements, 23 column cuts (23 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -415.6107999999995, took 99 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

