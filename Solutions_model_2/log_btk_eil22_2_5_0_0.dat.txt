Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 1.20805e-05 - average 3.17908e-07, 1 fixed columns
Coin0506I Presolve 33 (-5) rows, 21 (-1) columns and 100 (-12) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 76.190791
Clp0000I Optimal - objective value 76.190791
Coin0511I After Postsolve, objective 76.190791, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.190791
Clp0000I Optimal - objective value 76.190791
Clp0000I Optimal - objective value 76.190791
Coin0511I After Postsolve, objective 76.190791, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.19079095 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.848%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.00323
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.54 iterations 12
Cbc0038I Solution found of -24.54
Cbc0038I Relaxing continuous gives -24.54
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -24.54 to -46.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -49.2036
Cbc0038I Pass   2: suminf.    0.79053 (3) obj. -49.2036 iterations 3
Cbc0038I Pass   3: suminf.    0.22222 (1) obj. -49.2036 iterations 3
Cbc0038I Pass   4: suminf.    0.23344 (1) obj. -49.2036 iterations 1
Cbc0038I Pass   5: suminf.    0.36342 (4) obj. -49.2036 iterations 6
Cbc0038I Pass   6: suminf.    0.18756 (4) obj. -49.2036 iterations 5
Cbc0038I Pass   7: suminf.    0.99428 (3) obj. -49.2036 iterations 9
Cbc0038I Pass   8: suminf.    0.16840 (2) obj. -49.2036 iterations 5
Cbc0038I Pass   9: suminf.    0.16840 (2) obj. -49.2036 iterations 0
Cbc0038I Pass  10: suminf.    0.16667 (1) obj. -49.2036 iterations 3
Cbc0038I Pass  11: suminf.    0.17766 (1) obj. -49.2036 iterations 1
Cbc0038I Pass  12: suminf.    0.21178 (3) obj. -49.2036 iterations 2
Cbc0038I Pass  13: suminf.    0.80046 (4) obj. -49.2036 iterations 5
Cbc0038I Pass  14: suminf.    0.80046 (4) obj. -49.2036 iterations 0
Cbc0038I Pass  15: suminf.    1.04272 (3) obj. -49.2036 iterations 6
Cbc0038I Pass  16: suminf.    0.18808 (2) obj. -49.2036 iterations 1
Cbc0038I Pass  17: suminf.    0.41908 (2) obj. -49.2036 iterations 1
Cbc0038I Pass  18: suminf.    0.85272 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  19: suminf.    0.85272 (3) obj. -49.2036 iterations 0
Cbc0038I Pass  20: suminf.    0.71027 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  21: suminf.    0.26307 (2) obj. -49.2036 iterations 2
Cbc0038I Pass  22: suminf.    1.06871 (5) obj. -49.2036 iterations 7
Cbc0038I Pass  23: suminf.    0.63781 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  24: suminf.    0.36113 (2) obj. -49.2036 iterations 6
Cbc0038I Pass  25: suminf.    0.10432 (2) obj. -49.2036 iterations 4
Cbc0038I Pass  26: suminf.    0.36063 (2) obj. -49.2036 iterations 2
Cbc0038I Pass  27: suminf.    0.58308 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  28: suminf.    0.37318 (2) obj. -49.2036 iterations 3
Cbc0038I Pass  29: suminf.    0.88699 (3) obj. -49.2036 iterations 2
Cbc0038I Pass  30: suminf.    0.40733 (3) obj. -49.2036 iterations 1
Cbc0038I Pass  31: suminf.    0.74215 (4) obj. -49.2036 iterations 5
Cbc0038I Rounding solution of -50.73 is better than previous of -46.2

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -50.73 to -52.07 (0.02 seconds)
Cbc0038I Round again with cutoff of -56.8982
Cbc0038I Pass  31: suminf.    0.28236 (3) obj. -56.8982 iterations 1
Cbc0038I Pass  32: suminf.    0.28236 (3) obj. -56.8982 iterations 0
Cbc0038I Pass  33: suminf.    0.51687 (2) obj. -56.8982 iterations 6
Cbc0038I Pass  34: suminf.    0.19575 (2) obj. -56.8982 iterations 4
Cbc0038I Pass  35: suminf.    1.61850 (6) obj. -56.8982 iterations 9
Cbc0038I Pass  36: suminf.    1.14231 (5) obj. -56.8982 iterations 3
Cbc0038I Pass  37: suminf.    0.94805 (2) obj. -56.8982 iterations 8
Cbc0038I Pass  38: suminf.    0.47003 (2) obj. -56.8982 iterations 1
Cbc0038I Pass  39: suminf.    0.47003 (2) obj. -56.8982 iterations 0
Cbc0038I Pass  40: suminf.    0.94805 (2) obj. -56.8982 iterations 1
Cbc0038I Pass  41: suminf.    1.38815 (3) obj. -56.8982 iterations 6
Cbc0038I Pass  42: suminf.    0.92450 (3) obj. -56.8982 iterations 2
Cbc0038I Pass  43: suminf.    0.90146 (3) obj. -56.8982 iterations 2
Cbc0038I Pass  44: suminf.    0.86976 (3) obj. -56.8982 iterations 3
Cbc0038I Pass  45: suminf.    0.55054 (3) obj. -56.8982 iterations 1
Cbc0038I Pass  46: suminf.    0.93939 (3) obj. -56.8982 iterations 3
Cbc0038I Pass  47: suminf.    0.93939 (3) obj. -56.8982 iterations 0
Cbc0038I Pass  48: suminf.    0.86976 (3) obj. -56.8982 iterations 1
Cbc0038I Pass  49: suminf.    1.28102 (4) obj. -56.8982 iterations 3
Cbc0038I Pass  50: suminf.    0.51136 (2) obj. -56.8982 iterations 2
Cbc0038I Pass  51: suminf.    0.31339 (3) obj. -56.8982 iterations 6
Cbc0038I Pass  52: suminf.    0.28565 (2) obj. -56.8982 iterations 1
Cbc0038I Pass  53: suminf.    0.57364 (2) obj. -56.8982 iterations 2
Cbc0038I Pass  54: suminf.    2.08357 (6) obj. -56.8982 iterations 4
Cbc0038I Pass  55: suminf.    1.27841 (4) obj. -56.8982 iterations 2
Cbc0038I Pass  56: suminf.    0.53119 (4) obj. -56.8982 iterations 2
Cbc0038I Pass  57: suminf.    0.30939 (3) obj. -56.8982 iterations 2
Cbc0038I Pass  58: suminf.    0.81979 (5) obj. -56.8982 iterations 6
Cbc0038I Pass  59: suminf.    0.64234 (3) obj. -56.8982 iterations 8
Cbc0038I Pass  60: suminf.    0.19575 (2) obj. -56.8982 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -52.07 - took 0.05 seconds
Cbc0012I Integer solution of -52.07 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 12 rows 10 columns
Cbc0031I 10 added rows had average density of 11.4
Cbc0013I At root node, 10 cuts changed objective from -76.190791 to -52.376366 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 415 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -52.06999999999999, took 1071 iterations and 2 nodes (0.10 seconds)
Cbc0032I Strong branching done 16 times (102 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-12) rows, 38 (-6) columns and 280 (-80) elements
Clp1000I sum of infeasibilities 0 - average 0, 14 fixed columns
Coin0506I Presolve 24 (-10) rows, 24 (-14) columns and 108 (-172) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 98.918611
Clp0000I Optimal - objective value 98.918611
Coin0511I After Postsolve, objective 98.918611, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31416336 - largest nonzero change 0 ( 0%) - largest zero change 2.9396164e-05
Clp0000I Optimal - objective value 98.918611
Clp0000I Optimal - objective value 98.918611
Clp0000I Optimal - objective value 98.918611
Coin0511I After Postsolve, objective 98.918611, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.91861053 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 39 columns (39 integer (39 of which binary)) and 293 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.471%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.55859
Cbc0038I Pass   1: suminf.    0.51571 (7) obj. -70.6793 iterations 7
Cbc0038I Pass   2: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Solution found of -30.515
Cbc0038I Rounding solution of -37.39 is better than previous of -30.515

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -41.9978
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.51571 (7) obj. -70.6793 iterations 0
Cbc0038I Pass   4: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Pass   5: suminf.    0.42586 (1) obj. -41.9978 iterations 8
Cbc0038I Pass   6: suminf.    0.09524 (1) obj. -48.6102 iterations 2
Cbc0038I Pass   7: suminf.    0.25406 (3) obj. -54.1573 iterations 9
Cbc0038I Pass   8: suminf.    0.25406 (3) obj. -54.1573 iterations 3
Cbc0038I Pass   9: suminf.    0.37098 (3) obj. -41.9978 iterations 6
Cbc0038I Pass  10: suminf.    0.37098 (3) obj. -41.9978 iterations 0
Cbc0038I Pass  11: suminf.    1.31476 (3) obj. -41.9978 iterations 4
Cbc0038I Pass  12: suminf.    1.10870 (3) obj. -44.2646 iterations 1
Cbc0038I Pass  13: suminf.    1.41552 (15) obj. -41.9978 iterations 9
Cbc0038I Pass  14: suminf.    1.18297 (7) obj. -41.9978 iterations 2
Cbc0038I Pass  15: suminf.    0.61948 (8) obj. -41.9978 iterations 9
Cbc0038I Pass  16: suminf.    0.61948 (8) obj. -41.9978 iterations 0
Cbc0038I Pass  17: suminf.    0.63542 (3) obj. -41.9978 iterations 16
Cbc0038I Pass  18: suminf.    0.42264 (2) obj. -41.9978 iterations 5
Cbc0038I Pass  19: suminf.    0.46692 (2) obj. -41.9978 iterations 2
Cbc0038I Pass  20: suminf.    0.55009 (5) obj. -41.9978 iterations 6
Cbc0038I Pass  21: suminf.    0.55009 (5) obj. -41.9978 iterations 1
Cbc0038I Pass  22: suminf.    0.46692 (2) obj. -41.9978 iterations 7
Cbc0038I Pass  23: suminf.    0.53496 (5) obj. -41.9978 iterations 5
Cbc0038I Pass  24: suminf.    0.31111 (2) obj. -42.6478 iterations 6
Cbc0038I Pass  25: suminf.    0.28535 (2) obj. -41.9978 iterations 7
Cbc0038I Pass  26: suminf.    0.25639 (2) obj. -41.9978 iterations 4
Cbc0038I Pass  27: suminf.    0.64874 (2) obj. -41.9978 iterations 4
Cbc0038I Pass  28: suminf.    0.64874 (2) obj. -41.9978 iterations 0
Cbc0038I Pass  29: suminf.    0.52264 (2) obj. -41.9978 iterations 3
Cbc0038I Pass  30: suminf.    1.12954 (7) obj. -41.9978 iterations 12
Cbc0038I Pass  31: suminf.    0.93091 (5) obj. -41.9978 iterations 10
Cbc0038I Pass  32: suminf.    0.46692 (2) obj. -41.9978 iterations 7
Cbc0038I Rounding solution of -44.86 is better than previous of -37.39

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -52.5766
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.51571 (7) obj. -70.6793 iterations 0
Cbc0038I Pass  33: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Pass  34: suminf.    0.41810 (3) obj. -52.5766 iterations 10
Cbc0038I Pass  35: suminf.    0.41810 (3) obj. -52.5766 iterations 0
Cbc0038I Pass  36: suminf.    1.26214 (3) obj. -52.5766 iterations 4
Cbc0038I Pass  37: suminf.    1.10870 (3) obj. -54.2646 iterations 1
Cbc0038I Pass  38: suminf.    1.57029 (10) obj. -52.5766 iterations 15
Cbc0038I Pass  39: suminf.    1.18137 (8) obj. -52.5766 iterations 4
Cbc0038I Pass  40: suminf.    0.78026 (6) obj. -52.5766 iterations 13
Cbc0038I Pass  41: suminf.    0.76514 (5) obj. -52.5766 iterations 2
Cbc0038I Pass  42: suminf.    0.86076 (3) obj. -52.5766 iterations 8
Cbc0038I Pass  43: suminf.    0.45658 (3) obj. -52.5766 iterations 2
Cbc0038I Pass  44: suminf.    0.86076 (3) obj. -52.5766 iterations 3
Cbc0038I Pass  45: suminf.    1.39782 (7) obj. -52.5766 iterations 11
Cbc0038I Pass  46: suminf.    1.30001 (7) obj. -52.5766 iterations 3
Cbc0038I Pass  47: suminf.    0.78523 (3) obj. -52.5766 iterations 13
Cbc0038I Pass  48: suminf.    0.78523 (3) obj. -52.5766 iterations 1
Cbc0038I Pass  49: suminf.    0.79969 (3) obj. -52.5766 iterations 10
Cbc0038I Pass  50: suminf.    0.79969 (3) obj. -52.5766 iterations 0
Cbc0038I Pass  51: suminf.    0.78523 (3) obj. -52.5766 iterations 2
Cbc0038I Pass  52: suminf.    1.53936 (7) obj. -52.5766 iterations 10
Cbc0038I Pass  53: suminf.    1.21375 (5) obj. -57.26 iterations 2
Cbc0038I Pass  54: suminf.    0.50940 (2) obj. -52.5766 iterations 9
Cbc0038I Pass  55: suminf.    0.45000 (2) obj. -53.23 iterations 4
Cbc0038I Pass  56: suminf.    0.94714 (4) obj. -52.5766 iterations 9
Cbc0038I Pass  57: suminf.    0.94714 (4) obj. -52.5766 iterations 0
Cbc0038I Pass  58: suminf.    0.79969 (3) obj. -52.5766 iterations 5
Cbc0038I Pass  59: suminf.    0.79969 (3) obj. -52.5766 iterations 0
Cbc0038I Pass  60: suminf.    0.78523 (3) obj. -52.5766 iterations 3
Cbc0038I Pass  61: suminf.    0.78523 (3) obj. -52.5766 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -44.86 to -52.07 (0.02 seconds)
Cbc0038I Round again with cutoff of -61.8306
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.51571 (7) obj. -70.6793 iterations 0
Cbc0038I Pass  62: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Pass  63: suminf.    0.93112 (4) obj. -61.8306 iterations 10
Cbc0038I Pass  64: suminf.    0.49106 (4) obj. -61.8306 iterations 1
Cbc0038I Pass  65: suminf.    1.07196 (4) obj. -61.8306 iterations 3
Cbc0038I Pass  66: suminf.    0.62990 (2) obj. -61.8306 iterations 8
Cbc0038I Pass  67: suminf.    0.42647 (2) obj. -63.0512 iterations 4
Cbc0038I Pass  68: suminf.    0.62990 (2) obj. -61.8306 iterations 3
Cbc0038I Pass  69: suminf.    0.86591 (7) obj. -61.8306 iterations 6
Cbc0038I Pass  70: suminf.    0.45098 (3) obj. -62.0308 iterations 4
Cbc0038I Pass  71: suminf.    0.58386 (6) obj. -61.8306 iterations 6
Cbc0038I Pass  72: suminf.    0.35097 (3) obj. -61.8306 iterations 4
Cbc0038I Pass  73: suminf.    0.57858 (2) obj. -61.8306 iterations 4
Cbc0038I Pass  74: suminf.    0.48333 (2) obj. -62.8783 iterations 2
Cbc0038I Pass  75: suminf.    0.57858 (2) obj. -61.8306 iterations 2
Cbc0038I Pass  76: suminf.    0.43915 (4) obj. -61.8306 iterations 7
Cbc0038I Pass  77: suminf.    0.42128 (3) obj. -61.8306 iterations 3
Cbc0038I Pass  78: suminf.    0.63354 (2) obj. -61.8306 iterations 6
Cbc0038I Pass  79: suminf.    0.63354 (2) obj. -61.8306 iterations 0
Cbc0038I Pass  80: suminf.    0.51428 (2) obj. -61.8306 iterations 2
Cbc0038I Pass  81: suminf.    1.07071 (6) obj. -61.8306 iterations 9
Cbc0038I Pass  82: suminf.    0.85158 (5) obj. -61.8306 iterations 1
Cbc0038I Pass  83: suminf.    1.09240 (3) obj. -61.8306 iterations 4
Cbc0038I Pass  84: suminf.    0.77647 (3) obj. -63.7262 iterations 2
Cbc0038I Pass  85: suminf.    0.90594 (6) obj. -61.8306 iterations 2
Cbc0038I Pass  86: suminf.    0.90206 (7) obj. -61.8306 iterations 2
Cbc0038I Pass  87: suminf.    1.11159 (5) obj. -61.8306 iterations 11
Cbc0038I Pass  88: suminf.    1.11159 (5) obj. -61.8306 iterations 1
Cbc0038I Pass  89: suminf.    1.21996 (4) obj. -61.8306 iterations 2
Cbc0038I Pass  90: suminf.    1.21996 (4) obj. -61.8306 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -52.07 - took 0.02 seconds
Cbc0012I Integer solution of -52.07 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 39 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 4.6
Cbc0013I At root node, 12 cuts changed objective from -83.423218 to -46.852778 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 5.6 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 35 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -52.06999999999999, took 40 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 1.20805e-05 - average 3.17908e-07, 1 fixed columns
Coin0506I Presolve 33 (-5) rows, 21 (-1) columns and 100 (-12) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 76.190791
Clp0000I Optimal - objective value 76.190791
Coin0511I After Postsolve, objective 76.190791, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.190791
Clp0000I Optimal - objective value 76.190791
Clp0000I Optimal - objective value 76.190791
Coin0511I After Postsolve, objective 76.190791, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.19079095 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.848%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.00323
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.54 iterations 12
Cbc0038I Solution found of -24.54
Cbc0038I Relaxing continuous gives -24.54
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -24.54 to -46.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -49.2036
Cbc0038I Pass   2: suminf.    0.79053 (3) obj. -49.2036 iterations 3
Cbc0038I Pass   3: suminf.    0.22222 (1) obj. -49.2036 iterations 3
Cbc0038I Pass   4: suminf.    0.23344 (1) obj. -49.2036 iterations 1
Cbc0038I Pass   5: suminf.    0.36342 (4) obj. -49.2036 iterations 6
Cbc0038I Pass   6: suminf.    0.18756 (4) obj. -49.2036 iterations 5
Cbc0038I Pass   7: suminf.    0.99428 (3) obj. -49.2036 iterations 9
Cbc0038I Pass   8: suminf.    0.16840 (2) obj. -49.2036 iterations 5
Cbc0038I Pass   9: suminf.    0.16840 (2) obj. -49.2036 iterations 0
Cbc0038I Pass  10: suminf.    0.16667 (1) obj. -49.2036 iterations 3
Cbc0038I Pass  11: suminf.    0.17766 (1) obj. -49.2036 iterations 1
Cbc0038I Pass  12: suminf.    0.21178 (3) obj. -49.2036 iterations 2
Cbc0038I Pass  13: suminf.    0.80046 (4) obj. -49.2036 iterations 5
Cbc0038I Pass  14: suminf.    0.80046 (4) obj. -49.2036 iterations 0
Cbc0038I Pass  15: suminf.    1.04272 (3) obj. -49.2036 iterations 6
Cbc0038I Pass  16: suminf.    0.18808 (2) obj. -49.2036 iterations 1
Cbc0038I Pass  17: suminf.    0.41908 (2) obj. -49.2036 iterations 1
Cbc0038I Pass  18: suminf.    0.85272 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  19: suminf.    0.85272 (3) obj. -49.2036 iterations 0
Cbc0038I Pass  20: suminf.    0.71027 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  21: suminf.    0.26307 (2) obj. -49.2036 iterations 2
Cbc0038I Pass  22: suminf.    1.06871 (5) obj. -49.2036 iterations 7
Cbc0038I Pass  23: suminf.    0.63781 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  24: suminf.    0.36113 (2) obj. -49.2036 iterations 6
Cbc0038I Pass  25: suminf.    0.10432 (2) obj. -49.2036 iterations 4
Cbc0038I Pass  26: suminf.    0.36063 (2) obj. -49.2036 iterations 2
Cbc0038I Pass  27: suminf.    0.58308 (3) obj. -49.2036 iterations 5
Cbc0038I Pass  28: suminf.    0.37318 (2) obj. -49.2036 iterations 3
Cbc0038I Pass  29: suminf.    0.88699 (3) obj. -49.2036 iterations 2
Cbc0038I Pass  30: suminf.    0.40733 (3) obj. -49.2036 iterations 1
Cbc0038I Pass  31: suminf.    0.74215 (4) obj. -49.2036 iterations 5
Cbc0038I Rounding solution of -50.73 is better than previous of -46.2

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -50.73 to -52.07 (0.02 seconds)
Cbc0038I Round again with cutoff of -56.8982
Cbc0038I Pass  31: suminf.    0.28236 (3) obj. -56.8982 iterations 1
Cbc0038I Pass  32: suminf.    0.28236 (3) obj. -56.8982 iterations 0
Cbc0038I Pass  33: suminf.    0.51687 (2) obj. -56.8982 iterations 6
Cbc0038I Pass  34: suminf.    0.19575 (2) obj. -56.8982 iterations 4
Cbc0038I Pass  35: suminf.    1.61850 (6) obj. -56.8982 iterations 9
Cbc0038I Pass  36: suminf.    1.14231 (5) obj. -56.8982 iterations 3
Cbc0038I Pass  37: suminf.    0.94805 (2) obj. -56.8982 iterations 8
Cbc0038I Pass  38: suminf.    0.47003 (2) obj. -56.8982 iterations 1
Cbc0038I Pass  39: suminf.    0.47003 (2) obj. -56.8982 iterations 0
Cbc0038I Pass  40: suminf.    0.94805 (2) obj. -56.8982 iterations 1
Cbc0038I Pass  41: suminf.    1.38815 (3) obj. -56.8982 iterations 6
Cbc0038I Pass  42: suminf.    0.92450 (3) obj. -56.8982 iterations 2
Cbc0038I Pass  43: suminf.    0.90146 (3) obj. -56.8982 iterations 2
Cbc0038I Pass  44: suminf.    0.86976 (3) obj. -56.8982 iterations 3
Cbc0038I Pass  45: suminf.    0.55054 (3) obj. -56.8982 iterations 1
Cbc0038I Pass  46: suminf.    0.93939 (3) obj. -56.8982 iterations 3
Cbc0038I Pass  47: suminf.    0.93939 (3) obj. -56.8982 iterations 0
Cbc0038I Pass  48: suminf.    0.86976 (3) obj. -56.8982 iterations 1
Cbc0038I Pass  49: suminf.    1.28102 (4) obj. -56.8982 iterations 3
Cbc0038I Pass  50: suminf.    0.51136 (2) obj. -56.8982 iterations 2
Cbc0038I Pass  51: suminf.    0.31339 (3) obj. -56.8982 iterations 6
Cbc0038I Pass  52: suminf.    0.28565 (2) obj. -56.8982 iterations 1
Cbc0038I Pass  53: suminf.    0.57364 (2) obj. -56.8982 iterations 2
Cbc0038I Pass  54: suminf.    2.08357 (6) obj. -56.8982 iterations 4
Cbc0038I Pass  55: suminf.    1.27841 (4) obj. -56.8982 iterations 2
Cbc0038I Pass  56: suminf.    0.53119 (4) obj. -56.8982 iterations 2
Cbc0038I Pass  57: suminf.    0.30939 (3) obj. -56.8982 iterations 2
Cbc0038I Pass  58: suminf.    0.81979 (5) obj. -56.8982 iterations 6
Cbc0038I Pass  59: suminf.    0.64234 (3) obj. -56.8982 iterations 8
Cbc0038I Pass  60: suminf.    0.19575 (2) obj. -56.8982 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -52.07 - took 0.03 seconds
Cbc0012I Integer solution of -52.07 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 12 rows 10 columns
Cbc0031I 10 added rows had average density of 11.4
Cbc0013I At root node, 10 cuts changed objective from -76.190791 to -52.376366 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 415 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -52.06999999999999, took 1071 iterations and 2 nodes (0.10 seconds)
Cbc0032I Strong branching done 16 times (102 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 38 (-7) columns and 280 (-81) elements
Clp1000I sum of infeasibilities 0 - average 0, 14 fixed columns
Coin0506I Presolve 24 (-10) rows, 24 (-14) columns and 108 (-172) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 98.918611
Clp0000I Optimal - objective value 98.918611
Coin0511I After Postsolve, objective 98.918611, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31416336 - largest nonzero change 0 ( 0%) - largest zero change 2.9396164e-05
Clp0000I Optimal - objective value 98.918611
Clp0000I Optimal - objective value 98.918611
Clp0000I Optimal - objective value 98.918611
Coin0511I After Postsolve, objective 98.918611, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.91861053 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 39 columns (39 integer (39 of which binary)) and 293 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.471%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.55859
Cbc0038I Pass   1: suminf.    0.51571 (7) obj. -70.6793 iterations 7
Cbc0038I Pass   2: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Solution found of -30.515
Cbc0038I Rounding solution of -37.39 is better than previous of -30.515

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -41.9978
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.51571 (7) obj. -70.6793 iterations 0
Cbc0038I Pass   4: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Pass   5: suminf.    0.42586 (1) obj. -41.9978 iterations 8
Cbc0038I Pass   6: suminf.    0.09524 (1) obj. -48.6102 iterations 2
Cbc0038I Pass   7: suminf.    0.25406 (3) obj. -54.1573 iterations 9
Cbc0038I Pass   8: suminf.    0.25406 (3) obj. -54.1573 iterations 3
Cbc0038I Pass   9: suminf.    0.37098 (3) obj. -41.9978 iterations 6
Cbc0038I Pass  10: suminf.    0.37098 (3) obj. -41.9978 iterations 0
Cbc0038I Pass  11: suminf.    1.31476 (3) obj. -41.9978 iterations 4
Cbc0038I Pass  12: suminf.    1.10870 (3) obj. -44.2646 iterations 1
Cbc0038I Pass  13: suminf.    1.41552 (15) obj. -41.9978 iterations 9
Cbc0038I Pass  14: suminf.    1.18297 (7) obj. -41.9978 iterations 2
Cbc0038I Pass  15: suminf.    0.61948 (8) obj. -41.9978 iterations 9
Cbc0038I Pass  16: suminf.    0.61948 (8) obj. -41.9978 iterations 0
Cbc0038I Pass  17: suminf.    0.63542 (3) obj. -41.9978 iterations 16
Cbc0038I Pass  18: suminf.    0.42264 (2) obj. -41.9978 iterations 5
Cbc0038I Pass  19: suminf.    0.46692 (2) obj. -41.9978 iterations 2
Cbc0038I Pass  20: suminf.    0.55009 (5) obj. -41.9978 iterations 6
Cbc0038I Pass  21: suminf.    0.55009 (5) obj. -41.9978 iterations 1
Cbc0038I Pass  22: suminf.    0.46692 (2) obj. -41.9978 iterations 7
Cbc0038I Pass  23: suminf.    0.53496 (5) obj. -41.9978 iterations 5
Cbc0038I Pass  24: suminf.    0.31111 (2) obj. -42.6478 iterations 6
Cbc0038I Pass  25: suminf.    0.28535 (2) obj. -41.9978 iterations 7
Cbc0038I Pass  26: suminf.    0.25639 (2) obj. -41.9978 iterations 4
Cbc0038I Pass  27: suminf.    0.64874 (2) obj. -41.9978 iterations 4
Cbc0038I Pass  28: suminf.    0.64874 (2) obj. -41.9978 iterations 0
Cbc0038I Pass  29: suminf.    0.52264 (2) obj. -41.9978 iterations 3
Cbc0038I Pass  30: suminf.    1.12954 (7) obj. -41.9978 iterations 12
Cbc0038I Pass  31: suminf.    0.93091 (5) obj. -41.9978 iterations 10
Cbc0038I Pass  32: suminf.    0.46692 (2) obj. -41.9978 iterations 7
Cbc0038I Rounding solution of -44.86 is better than previous of -37.39

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -52.5766
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.51571 (7) obj. -70.6793 iterations 0
Cbc0038I Pass  33: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Pass  34: suminf.    0.41810 (3) obj. -52.5766 iterations 10
Cbc0038I Pass  35: suminf.    0.41810 (3) obj. -52.5766 iterations 0
Cbc0038I Pass  36: suminf.    1.26214 (3) obj. -52.5766 iterations 4
Cbc0038I Pass  37: suminf.    1.10870 (3) obj. -54.2646 iterations 1
Cbc0038I Pass  38: suminf.    1.57029 (10) obj. -52.5766 iterations 15
Cbc0038I Pass  39: suminf.    1.18137 (8) obj. -52.5766 iterations 4
Cbc0038I Pass  40: suminf.    0.78026 (6) obj. -52.5766 iterations 13
Cbc0038I Pass  41: suminf.    0.76514 (5) obj. -52.5766 iterations 2
Cbc0038I Pass  42: suminf.    0.86076 (3) obj. -52.5766 iterations 8
Cbc0038I Pass  43: suminf.    0.45658 (3) obj. -52.5766 iterations 2
Cbc0038I Pass  44: suminf.    0.86076 (3) obj. -52.5766 iterations 3
Cbc0038I Pass  45: suminf.    1.39782 (7) obj. -52.5766 iterations 11
Cbc0038I Pass  46: suminf.    1.30001 (7) obj. -52.5766 iterations 3
Cbc0038I Pass  47: suminf.    0.78523 (3) obj. -52.5766 iterations 13
Cbc0038I Pass  48: suminf.    0.78523 (3) obj. -52.5766 iterations 1
Cbc0038I Pass  49: suminf.    0.79969 (3) obj. -52.5766 iterations 10
Cbc0038I Pass  50: suminf.    0.79969 (3) obj. -52.5766 iterations 0
Cbc0038I Pass  51: suminf.    0.78523 (3) obj. -52.5766 iterations 2
Cbc0038I Pass  52: suminf.    1.53936 (7) obj. -52.5766 iterations 10
Cbc0038I Pass  53: suminf.    1.21375 (5) obj. -57.26 iterations 2
Cbc0038I Pass  54: suminf.    0.50940 (2) obj. -52.5766 iterations 9
Cbc0038I Pass  55: suminf.    0.45000 (2) obj. -53.23 iterations 4
Cbc0038I Pass  56: suminf.    0.94714 (4) obj. -52.5766 iterations 9
Cbc0038I Pass  57: suminf.    0.94714 (4) obj. -52.5766 iterations 0
Cbc0038I Pass  58: suminf.    0.79969 (3) obj. -52.5766 iterations 5
Cbc0038I Pass  59: suminf.    0.79969 (3) obj. -52.5766 iterations 0
Cbc0038I Pass  60: suminf.    0.78523 (3) obj. -52.5766 iterations 3
Cbc0038I Pass  61: suminf.    0.78523 (3) obj. -52.5766 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -44.86 to -52.07 (0.03 seconds)
Cbc0038I Round again with cutoff of -61.8306
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.51571 (7) obj. -70.6793 iterations 0
Cbc0038I Pass  62: suminf.    0.51571 (7) obj. -70.6793 iterations 1
Cbc0038I Pass  63: suminf.    0.93112 (4) obj. -61.8306 iterations 10
Cbc0038I Pass  64: suminf.    0.49106 (4) obj. -61.8306 iterations 1
Cbc0038I Pass  65: suminf.    1.07196 (4) obj. -61.8306 iterations 3
Cbc0038I Pass  66: suminf.    0.62990 (2) obj. -61.8306 iterations 8
Cbc0038I Pass  67: suminf.    0.42647 (2) obj. -63.0512 iterations 4
Cbc0038I Pass  68: suminf.    0.62990 (2) obj. -61.8306 iterations 3
Cbc0038I Pass  69: suminf.    0.86591 (7) obj. -61.8306 iterations 6
Cbc0038I Pass  70: suminf.    0.45098 (3) obj. -62.0308 iterations 4
Cbc0038I Pass  71: suminf.    0.58386 (6) obj. -61.8306 iterations 6
Cbc0038I Pass  72: suminf.    0.35097 (3) obj. -61.8306 iterations 4
Cbc0038I Pass  73: suminf.    0.57858 (2) obj. -61.8306 iterations 4
Cbc0038I Pass  74: suminf.    0.48333 (2) obj. -62.8783 iterations 2
Cbc0038I Pass  75: suminf.    0.57858 (2) obj. -61.8306 iterations 2
Cbc0038I Pass  76: suminf.    0.43915 (4) obj. -61.8306 iterations 7
Cbc0038I Pass  77: suminf.    0.42128 (3) obj. -61.8306 iterations 3
Cbc0038I Pass  78: suminf.    0.63354 (2) obj. -61.8306 iterations 6
Cbc0038I Pass  79: suminf.    0.63354 (2) obj. -61.8306 iterations 0
Cbc0038I Pass  80: suminf.    0.51428 (2) obj. -61.8306 iterations 2
Cbc0038I Pass  81: suminf.    1.07071 (6) obj. -61.8306 iterations 9
Cbc0038I Pass  82: suminf.    0.85158 (5) obj. -61.8306 iterations 1
Cbc0038I Pass  83: suminf.    1.09240 (3) obj. -61.8306 iterations 4
Cbc0038I Pass  84: suminf.    0.77647 (3) obj. -63.7262 iterations 2
Cbc0038I Pass  85: suminf.    0.90594 (6) obj. -61.8306 iterations 2
Cbc0038I Pass  86: suminf.    0.90206 (7) obj. -61.8306 iterations 2
Cbc0038I Pass  87: suminf.    1.11159 (5) obj. -61.8306 iterations 11
Cbc0038I Pass  88: suminf.    1.11159 (5) obj. -61.8306 iterations 1
Cbc0038I Pass  89: suminf.    1.21996 (4) obj. -61.8306 iterations 2
Cbc0038I Pass  90: suminf.    1.21996 (4) obj. -61.8306 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -52.07 - took 0.03 seconds
Cbc0012I Integer solution of -52.07 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 39 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 4.6
Cbc0013I At root node, 12 cuts changed objective from -83.423218 to -46.852778 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 5.6 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 35 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -52.06999999999999, took 40 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

