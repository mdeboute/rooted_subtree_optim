Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 25 (-8) columns and 132 (-51) elements
Clp1000I sum of infeasibilities 2.52683e-06 - average 5.61517e-08, 2 fixed columns
Coin0506I Presolve 41 (-4) rows, 23 (-2) columns and 120 (-12) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 134.86085
Clp0000I Optimal - objective value 134.86085
Coin0511I After Postsolve, objective 134.86085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 134.86085
Clp0000I Optimal - objective value 134.86085
Clp0000I Optimal - objective value 134.86085
Coin0511I After Postsolve, objective 134.86085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 134.8608527 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 25 columns (24 integer (24 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.647%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.74215
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -40.4147 iterations 21
Cbc0038I Solution found of -40.4147
Cbc0038I Relaxing continuous gives -40.4147
Cbc0038I Rounding solution of -92.4772 is better than previous of -40.4147

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -92.4772 to -93.0595 (0.01 seconds)
Cbc0038I Round again with cutoff of -96.8499
Cbc0038I Pass   2: suminf.    0.19125 (2) obj. -96.8499 iterations 1
Cbc0038I Pass   3: suminf.    0.19125 (2) obj. -96.8499 iterations 0
Cbc0038I Pass   4: suminf.    0.16842 (1) obj. -96.8499 iterations 2
Cbc0038I Pass   5: suminf.    0.05478 (1) obj. -96.8499 iterations 1
Cbc0038I Pass   6: suminf.    0.24319 (5) obj. -96.8499 iterations 7
Cbc0038I Pass   7: suminf.    0.08929 (3) obj. -96.8499 iterations 6
Cbc0038I Pass   8: suminf.    0.55084 (2) obj. -105.702 iterations 7
Cbc0038I Pass   9: suminf.    0.35789 (1) obj. -103.326 iterations 1
Cbc0038I Pass  10: suminf.    0.43903 (1) obj. -96.8499 iterations 1
Cbc0038I Pass  11: suminf.    1.06310 (5) obj. -96.8499 iterations 6
Cbc0038I Pass  12: suminf.    0.93229 (4) obj. -96.8499 iterations 2
Cbc0038I Pass  13: suminf.    0.31566 (3) obj. -96.8499 iterations 5
Cbc0038I Pass  14: suminf.    0.17391 (2) obj. -96.8499 iterations 1
Cbc0038I Pass  15: suminf.    1.00575 (3) obj. -96.8499 iterations 4
Cbc0038I Pass  16: suminf.    0.19113 (3) obj. -96.8499 iterations 2
Cbc0038I Pass  17: suminf.    0.31566 (3) obj. -96.8499 iterations 3
Cbc0038I Pass  18: suminf.    2.14164 (6) obj. -96.8499 iterations 14
Cbc0038I Pass  19: suminf.    1.52682 (6) obj. -96.8499 iterations 2
Cbc0038I Pass  20: suminf.    1.33562 (6) obj. -96.8499 iterations 7
Cbc0038I Pass  21: suminf.    1.14289 (3) obj. -96.8499 iterations 3
Cbc0038I Pass  22: suminf.    0.71346 (2) obj. -96.8499 iterations 3
Cbc0038I Pass  23: suminf.    1.08295 (3) obj. -96.8499 iterations 2
Cbc0038I Pass  24: suminf.    0.71346 (2) obj. -96.8499 iterations 2
Cbc0038I Pass  25: suminf.    0.94617 (3) obj. -96.8499 iterations 5
Cbc0038I Pass  26: suminf.    0.94617 (3) obj. -96.8499 iterations 2
Cbc0038I Pass  27: suminf.    0.76982 (2) obj. -96.8499 iterations 2
Cbc0038I Pass  28: suminf.    0.76982 (2) obj. -96.8499 iterations 0
Cbc0038I Pass  29: suminf.    0.80957 (2) obj. -96.8499 iterations 2
Cbc0038I Pass  30: suminf.    0.80234 (2) obj. -96.8499 iterations 1
Cbc0038I Pass  31: suminf.    0.80234 (2) obj. -96.8499 iterations 0
Cbc0038I Rounding solution of -95.189 is better than previous of -93.0595

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 37 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -103.672
Cbc0038I Pass  31: suminf.    0.35479 (2) obj. -103.672 iterations 0
Cbc0038I Pass  32: suminf.    0.35479 (2) obj. -103.672 iterations 0
Cbc0038I Pass  33: suminf.    0.16842 (1) obj. -103.672 iterations 2
Cbc0038I Pass  34: suminf.    0.14024 (1) obj. -103.672 iterations 1
Cbc0038I Pass  35: suminf.    0.69975 (3) obj. -103.672 iterations 4
Cbc0038I Pass  36: suminf.    0.14024 (1) obj. -103.672 iterations 3
Cbc0038I Pass  37: suminf.    3.58073 (11) obj. -103.672 iterations 12
Cbc0038I Pass  38: suminf.    1.17981 (6) obj. -103.672 iterations 9
Cbc0038I Pass  39: suminf.    0.74898 (3) obj. -103.672 iterations 5
Cbc0038I Pass  40: suminf.    0.66736 (4) obj. -103.672 iterations 5
Cbc0038I Pass  41: suminf.    0.20290 (2) obj. -105.356 iterations 3
Cbc0038I Pass  42: suminf.    0.80506 (3) obj. -103.672 iterations 5
Cbc0038I Pass  43: suminf.    2.51197 (7) obj. -103.672 iterations 13
Cbc0038I Pass  44: suminf.    1.39895 (5) obj. -103.672 iterations 6
Cbc0038I Pass  45: suminf.    1.10114 (5) obj. -103.672 iterations 6
Cbc0038I Pass  46: suminf.    0.88530 (4) obj. -103.672 iterations 2
Cbc0038I Pass  47: suminf.    1.74105 (8) obj. -103.672 iterations 5
Cbc0038I Pass  48: suminf.    0.95663 (3) obj. -103.672 iterations 11
Cbc0038I Pass  49: suminf.    0.44453 (2) obj. -103.672 iterations 3
Cbc0038I Pass  50: suminf.    0.68486 (2) obj. -103.672 iterations 3
Cbc0038I Pass  51: suminf.    1.84420 (5) obj. -103.672 iterations 7
Cbc0038I Pass  52: suminf.    1.84420 (5) obj. -103.672 iterations 0
Cbc0038I Pass  53: suminf.    1.70503 (4) obj. -103.672 iterations 10
Cbc0038I Pass  54: suminf.    0.91739 (5) obj. -103.672 iterations 5
Cbc0038I Pass  55: suminf.    0.91739 (5) obj. -103.672 iterations 0
Cbc0038I Pass  56: suminf.    0.68486 (2) obj. -103.672 iterations 10
Cbc0038I Pass  57: suminf.    0.44453 (2) obj. -103.672 iterations 3
Cbc0038I Pass  58: suminf.    1.24650 (4) obj. -103.672 iterations 8
Cbc0038I Pass  59: suminf.    1.24650 (4) obj. -103.672 iterations 1
Cbc0038I Pass  60: suminf.    1.41377 (3) obj. -103.672 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -95.189 - took 0.08 seconds
Cbc0012I Integer solution of -95.18902 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 45 rows 25 columns, reduced to 31 rows 17 columns
Cbc0031I 7 added rows had average density of 18.714286
Cbc0013I At root node, 7 cuts changed objective from -130.96183 to -116.14052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 808 row cuts average 4.7 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 507 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -95.18902, took 2449 iterations and 18 nodes (0.21 seconds)
Cbc0032I Strong branching done 194 times (1547 iterations), fathomed 3 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 53 (-9) columns and 487 (-159) elements
Clp1000I sum of infeasibilities 1.15102e-08 - average 2.34903e-10, 33 fixed columns
Coin0506I Presolve 17 (-32) rows, 20 (-33) columns and 69 (-418) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 2.143552 - largest nonzero change 2.6207012e-05 ( 0.0015380202%) - largest zero change 2.7788107e-05
Clp0000I Optimal - objective value 112.39358
Clp0000I Optimal - objective value 112.39358
Coin0511I After Postsolve, objective 112.39358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6403533 - largest nonzero change 2.1419398e-05 ( 0.0015380202%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 145.03826
Clp0000I Optimal - objective value 145.03826
Clp0000I Optimal - objective value 145.03826
Coin0511I After Postsolve, objective 145.03826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.0382557 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 49 columns (49 integer (49 of which binary)) and 445 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.823%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.49623
Cbc0038I Pass   1: suminf.    0.45524 (6) obj. -20.3487 iterations 18
Cbc0038I Pass   2: suminf.    0.45524 (6) obj. -20.3487 iterations 0
Cbc0038I Solution found of -10.2092
Cbc0038I Rounding solution of -32.9612 is better than previous of -10.2092

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 49 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -32.9612 to -87.9565 (0.02 seconds)
Cbc0038I Round again with cutoff of -92.2534
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    4.89627 (20) obj. -92.2534 iterations 2
Cbc0038I Pass   4: suminf.    4.17085 (21) obj. -92.2534 iterations 1
Cbc0038I Pass   5: suminf.    2.78272 (21) obj. -92.2534 iterations 2
Cbc0038I Pass   6: suminf.    2.76065 (23) obj. -92.2534 iterations 5
Cbc0038I Pass   7: suminf.    0.57329 (4) obj. -92.2534 iterations 44
Cbc0038I Pass   8: suminf.    0.32868 (2) obj. -92.2534 iterations 6
Cbc0038I Pass   9: suminf.    0.39732 (2) obj. -92.2534 iterations 3
Cbc0038I Pass  10: suminf.    0.39732 (2) obj. -92.2534 iterations 3
Cbc0038I Pass  11: suminf.    0.20290 (2) obj. -103.356 iterations 8
Cbc0038I Pass  12: suminf.    1.14109 (3) obj. -92.2534 iterations 5
Cbc0038I Pass  13: suminf.    0.49875 (3) obj. -104.617 iterations 3
Cbc0038I Pass  14: suminf.    1.27955 (6) obj. -92.2534 iterations 9
Cbc0038I Pass  15: suminf.    0.65238 (5) obj. -92.2534 iterations 6
Cbc0038I Pass  16: suminf.    0.46210 (3) obj. -92.2534 iterations 10
Cbc0038I Pass  17: suminf.    0.42892 (2) obj. -92.2534 iterations 2
Cbc0038I Pass  18: suminf.    0.71590 (4) obj. -92.2534 iterations 4
Cbc0038I Pass  19: suminf.    0.63218 (3) obj. -99.0467 iterations 2
Cbc0038I Pass  20: suminf.    1.03600 (3) obj. -92.2534 iterations 1
Cbc0038I Pass  21: suminf.    3.59599 (11) obj. -92.2534 iterations 12
Cbc0038I Pass  22: suminf.    1.75425 (6) obj. -92.2534 iterations 4
Cbc0038I Pass  23: suminf.    1.42338 (4) obj. -92.2534 iterations 3
Cbc0038I Pass  24: suminf.    1.06482 (4) obj. -92.2534 iterations 1
Cbc0038I Pass  25: suminf.    0.84471 (2) obj. -92.2534 iterations 3
Cbc0038I Pass  26: suminf.    0.66439 (3) obj. -92.2534 iterations 2
Cbc0038I Pass  27: suminf.    1.83624 (4) obj. -92.2534 iterations 3
Cbc0038I Pass  28: suminf.    1.06415 (4) obj. -92.2534 iterations 3
Cbc0038I Pass  29: suminf.    2.42575 (10) obj. -92.2534 iterations 12
Cbc0038I Pass  30: suminf.    1.94301 (9) obj. -92.2534 iterations 3
Cbc0038I Pass  31: suminf.    0.43212 (2) obj. -93.6579 iterations 8
Cbc0038I Pass  32: suminf.    0.42500 (1) obj. -93.3675 iterations 1
Cbc0038I Rounding solution of -93.0595 is better than previous of -87.9565

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 49 columns, reduced to 39 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -93.0595 to -93.189 (0.08 seconds)
Cbc0038I Round again with cutoff of -100.736
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    5.33805 (20) obj. -100.736 iterations 0
Cbc0038I Pass  33: suminf.    1.60995 (8) obj. -100.736 iterations 13
Cbc0038I Pass  34: suminf.    1.49633 (8) obj. -116.061 iterations 1
Cbc0038I Pass  35: suminf.    0.23799 (1) obj. -100.736 iterations 8
Cbc0038I Pass  36: suminf.    0.14737 (1) obj. -107.97 iterations 1
Cbc0038I Pass  37: suminf.    3.58642 (12) obj. -100.736 iterations 12
Cbc0038I Pass  38: suminf.    3.04339 (10) obj. -100.736 iterations 2
Cbc0038I Pass  39: suminf.    2.59845 (9) obj. -100.736 iterations 2
Cbc0038I Pass  40: suminf.    2.56495 (17) obj. -100.736 iterations 19
Cbc0038I Pass  41: suminf.    2.20476 (14) obj. -100.736 iterations 6
Cbc0038I Pass  42: suminf.    3.17125 (10) obj. -100.736 iterations 24
Cbc0038I Pass  43: suminf.    3.17125 (10) obj. -100.736 iterations 0
Cbc0038I Pass  44: suminf.    2.06496 (5) obj. -100.736 iterations 8
Cbc0038I Pass  45: suminf.    1.49299 (5) obj. -100.736 iterations 4
Cbc0038I Pass  46: suminf.    2.06496 (5) obj. -100.736 iterations 6
Cbc0038I Pass  47: suminf.    2.86873 (11) obj. -100.736 iterations 16
Cbc0038I Pass  48: suminf.    1.39396 (6) obj. -100.736 iterations 6
Cbc0038I Pass  49: suminf.    1.35423 (5) obj. -100.736 iterations 3
Cbc0038I Pass  50: suminf.    0.45842 (4) obj. -100.736 iterations 6
Cbc0038I Pass  51: suminf.    0.38803 (3) obj. -106.994 iterations 2
Cbc0038I Pass  52: suminf.    0.76002 (3) obj. -100.736 iterations 1
Cbc0038I Pass  53: suminf.    1.40127 (7) obj. -100.736 iterations 10
Cbc0038I Pass  54: suminf.    1.40127 (7) obj. -100.736 iterations 0
Cbc0038I Pass  55: suminf.    0.49618 (4) obj. -100.736 iterations 10
Cbc0038I Pass  56: suminf.    0.42664 (6) obj. -100.736 iterations 2
Cbc0038I Pass  57: suminf.    1.56609 (5) obj. -100.736 iterations 8
Cbc0038I Pass  58: suminf.    0.20290 (2) obj. -105.356 iterations 4
Cbc0038I Pass  59: suminf.    1.11051 (3) obj. -100.736 iterations 4
Cbc0038I Pass  60: suminf.    4.31250 (12) obj. -100.736 iterations 15
Cbc0038I Pass  61: suminf.    2.08164 (6) obj. -100.736 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 49 columns, reduced to 40 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -93.189 to -95.189 (0.18 seconds)
Cbc0038I Round again with cutoff of -109.793
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    5.57116 (20) obj. -109.793 iterations 0
Cbc0038I Pass  62: suminf.    0.67623 (4) obj. -109.793 iterations 17
Cbc0038I Pass  63: suminf.    0.65194 (4) obj. -112.14 iterations 1
Cbc0038I Pass  64: suminf.    0.54642 (5) obj. -109.793 iterations 8
Cbc0038I Pass  65: suminf.    0.54642 (5) obj. -109.793 iterations 0
Cbc0038I Pass  66: suminf.    2.20337 (6) obj. -109.793 iterations 10
Cbc0038I Pass  67: suminf.    0.54642 (5) obj. -109.793 iterations 5
Cbc0038I Pass  68: suminf.    2.56320 (12) obj. -109.793 iterations 12
Cbc0038I Pass  69: suminf.    1.30733 (5) obj. -112.484 iterations 6
Cbc0038I Pass  70: suminf.    0.54642 (5) obj. -109.793 iterations 8
Cbc0038I Pass  71: suminf.    0.54642 (5) obj. -109.793 iterations 0
Cbc0038I Pass  72: suminf.    2.20337 (6) obj. -109.793 iterations 7
Cbc0038I Pass  73: suminf.    0.54642 (5) obj. -109.793 iterations 3
Cbc0038I Pass  74: suminf.    2.34862 (9) obj. -109.793 iterations 11
Cbc0038I Pass  75: suminf.    1.72121 (11) obj. -109.793 iterations 4
Cbc0038I Pass  76: suminf.    0.81379 (4) obj. -109.793 iterations 6
Cbc0038I Pass  77: suminf.    0.59169 (3) obj. -110.26 iterations 7
Cbc0038I Pass  78: suminf.    0.54642 (5) obj. -109.793 iterations 10
Cbc0038I Pass  79: suminf.    0.54642 (5) obj. -109.793 iterations 0
Cbc0038I Pass  80: suminf.    2.20337 (6) obj. -109.793 iterations 6
Cbc0038I Pass  81: suminf.    0.54642 (5) obj. -109.793 iterations 6
Cbc0038I Pass  82: suminf.    2.81640 (8) obj. -109.793 iterations 6
Cbc0038I Pass  83: suminf.    2.97627 (10) obj. -109.793 iterations 8
Cbc0038I Pass  84: suminf.    0.89797 (4) obj. -110.877 iterations 8
Cbc0038I Pass  85: suminf.    0.54642 (5) obj. -109.793 iterations 7
Cbc0038I Pass  86: suminf.    0.54642 (5) obj. -109.793 iterations 0
Cbc0038I Pass  87: suminf.    2.20337 (6) obj. -109.793 iterations 9
Cbc0038I Pass  88: suminf.    0.54642 (5) obj. -109.793 iterations 4
Cbc0038I Pass  89: suminf.    3.07155 (9) obj. -109.793 iterations 18
Cbc0038I Pass  90: suminf.    2.57969 (8) obj. -109.793 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 49 columns, reduced to 39 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -95.189 - took 0.16 seconds
Cbc0012I Integer solution of -95.18902 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 45 rows 49 columns, reduced to 35 rows 37 columns
Cbc0031I 19 added rows had average density of 21.368421
Cbc0013I At root node, 19 cuts changed objective from -130.92483 to -108.57646 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1632 row cuts average 3.7 elements, 7 column cuts (7 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 563 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 101 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 294 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 289 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 295 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.716 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -95.18902 best solution, best possible -108.57646 (1.76 seconds)
Cbc0001I Search completed - best objective -95.18902, took 2935 iterations and 24 nodes (1.92 seconds)
Cbc0032I Strong branching done 378 times (4034 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 10, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 25 (-8) columns and 132 (-51) elements
Clp1000I sum of infeasibilities 2.52683e-06 - average 5.61517e-08, 2 fixed columns
Coin0506I Presolve 41 (-4) rows, 23 (-2) columns and 120 (-12) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 134.86085
Clp0000I Optimal - objective value 134.86085
Coin0511I After Postsolve, objective 134.86085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 134.86085
Clp0000I Optimal - objective value 134.86085
Clp0000I Optimal - objective value 134.86085
Coin0511I After Postsolve, objective 134.86085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 134.8608527 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 25 columns (24 integer (24 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.647%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.74215
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -40.4147 iterations 21
Cbc0038I Solution found of -40.4147
Cbc0038I Relaxing continuous gives -40.4147
Cbc0038I Rounding solution of -92.4772 is better than previous of -40.4147

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -92.4772 to -93.0595 (0.01 seconds)
Cbc0038I Round again with cutoff of -96.8499
Cbc0038I Pass   2: suminf.    0.19125 (2) obj. -96.8499 iterations 1
Cbc0038I Pass   3: suminf.    0.19125 (2) obj. -96.8499 iterations 0
Cbc0038I Pass   4: suminf.    0.16842 (1) obj. -96.8499 iterations 2
Cbc0038I Pass   5: suminf.    0.05478 (1) obj. -96.8499 iterations 1
Cbc0038I Pass   6: suminf.    0.24319 (5) obj. -96.8499 iterations 7
Cbc0038I Pass   7: suminf.    0.08929 (3) obj. -96.8499 iterations 6
Cbc0038I Pass   8: suminf.    0.55084 (2) obj. -105.702 iterations 7
Cbc0038I Pass   9: suminf.    0.35789 (1) obj. -103.326 iterations 1
Cbc0038I Pass  10: suminf.    0.43903 (1) obj. -96.8499 iterations 1
Cbc0038I Pass  11: suminf.    1.06310 (5) obj. -96.8499 iterations 6
Cbc0038I Pass  12: suminf.    0.93229 (4) obj. -96.8499 iterations 2
Cbc0038I Pass  13: suminf.    0.31566 (3) obj. -96.8499 iterations 5
Cbc0038I Pass  14: suminf.    0.17391 (2) obj. -96.8499 iterations 1
Cbc0038I Pass  15: suminf.    1.00575 (3) obj. -96.8499 iterations 4
Cbc0038I Pass  16: suminf.    0.19113 (3) obj. -96.8499 iterations 2
Cbc0038I Pass  17: suminf.    0.31566 (3) obj. -96.8499 iterations 3
Cbc0038I Pass  18: suminf.    2.14164 (6) obj. -96.8499 iterations 14
Cbc0038I Pass  19: suminf.    1.52682 (6) obj. -96.8499 iterations 2
Cbc0038I Pass  20: suminf.    1.33562 (6) obj. -96.8499 iterations 7
Cbc0038I Pass  21: suminf.    1.14289 (3) obj. -96.8499 iterations 3
Cbc0038I Pass  22: suminf.    0.71346 (2) obj. -96.8499 iterations 3
Cbc0038I Pass  23: suminf.    1.08295 (3) obj. -96.8499 iterations 2
Cbc0038I Pass  24: suminf.    0.71346 (2) obj. -96.8499 iterations 2
Cbc0038I Pass  25: suminf.    0.94617 (3) obj. -96.8499 iterations 5
Cbc0038I Pass  26: suminf.    0.94617 (3) obj. -96.8499 iterations 2
Cbc0038I Pass  27: suminf.    0.76982 (2) obj. -96.8499 iterations 2
Cbc0038I Pass  28: suminf.    0.76982 (2) obj. -96.8499 iterations 0
Cbc0038I Pass  29: suminf.    0.80957 (2) obj. -96.8499 iterations 2
Cbc0038I Pass  30: suminf.    0.80234 (2) obj. -96.8499 iterations 1
Cbc0038I Pass  31: suminf.    0.80234 (2) obj. -96.8499 iterations 0
Cbc0038I Rounding solution of -95.189 is better than previous of -93.0595

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 37 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -103.672
Cbc0038I Pass  31: suminf.    0.35479 (2) obj. -103.672 iterations 0
Cbc0038I Pass  32: suminf.    0.35479 (2) obj. -103.672 iterations 0
Cbc0038I Pass  33: suminf.    0.16842 (1) obj. -103.672 iterations 2
Cbc0038I Pass  34: suminf.    0.14024 (1) obj. -103.672 iterations 1
Cbc0038I Pass  35: suminf.    0.69975 (3) obj. -103.672 iterations 4
Cbc0038I Pass  36: suminf.    0.14024 (1) obj. -103.672 iterations 3
Cbc0038I Pass  37: suminf.    3.58073 (11) obj. -103.672 iterations 12
Cbc0038I Pass  38: suminf.    1.17981 (6) obj. -103.672 iterations 9
Cbc0038I Pass  39: suminf.    0.74898 (3) obj. -103.672 iterations 5
Cbc0038I Pass  40: suminf.    0.66736 (4) obj. -103.672 iterations 5
Cbc0038I Pass  41: suminf.    0.20290 (2) obj. -105.356 iterations 3
Cbc0038I Pass  42: suminf.    0.80506 (3) obj. -103.672 iterations 5
Cbc0038I Pass  43: suminf.    2.51197 (7) obj. -103.672 iterations 13
Cbc0038I Pass  44: suminf.    1.39895 (5) obj. -103.672 iterations 6
Cbc0038I Pass  45: suminf.    1.10114 (5) obj. -103.672 iterations 6
Cbc0038I Pass  46: suminf.    0.88530 (4) obj. -103.672 iterations 2
Cbc0038I Pass  47: suminf.    1.74105 (8) obj. -103.672 iterations 5
Cbc0038I Pass  48: suminf.    0.95663 (3) obj. -103.672 iterations 11
Cbc0038I Pass  49: suminf.    0.44453 (2) obj. -103.672 iterations 3
Cbc0038I Pass  50: suminf.    0.68486 (2) obj. -103.672 iterations 3
Cbc0038I Pass  51: suminf.    1.84420 (5) obj. -103.672 iterations 7
Cbc0038I Pass  52: suminf.    1.84420 (5) obj. -103.672 iterations 0
Cbc0038I Pass  53: suminf.    1.70503 (4) obj. -103.672 iterations 10
Cbc0038I Pass  54: suminf.    0.91739 (5) obj. -103.672 iterations 5
Cbc0038I Pass  55: suminf.    0.91739 (5) obj. -103.672 iterations 0
Cbc0038I Pass  56: suminf.    0.68486 (2) obj. -103.672 iterations 10
Cbc0038I Pass  57: suminf.    0.44453 (2) obj. -103.672 iterations 3
Cbc0038I Pass  58: suminf.    1.24650 (4) obj. -103.672 iterations 8
Cbc0038I Pass  59: suminf.    1.24650 (4) obj. -103.672 iterations 1
Cbc0038I Pass  60: suminf.    1.41377 (3) obj. -103.672 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -95.189 - took 0.05 seconds
Cbc0012I Integer solution of -95.18902 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 45 rows 25 columns, reduced to 31 rows 17 columns
Cbc0031I 7 added rows had average density of 18.714286
Cbc0013I At root node, 7 cuts changed objective from -130.96183 to -116.14052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 808 row cuts average 4.7 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 507 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -95.18902, took 2449 iterations and 18 nodes (0.23 seconds)
Cbc0032I Strong branching done 194 times (1547 iterations), fathomed 3 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 48 (-15) columns and 421 (-228) elements
Clp1000I sum of infeasibilities 1.18252e-08 - average 2.62782e-10, 26 fixed columns
Coin0506I Presolve 19 (-26) rows, 22 (-26) columns and 76 (-345) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.0611553 - largest nonzero change 2.6276487e-05 ( 0.0015420975%) - largest zero change 2.187614e-05
Clp0000I Optimal - objective value 112.39358
Clp0000I Optimal - objective value 112.39358
Coin0511I After Postsolve, objective 112.39358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7835148 - largest nonzero change 2.2813934e-05 ( 0.0019398167%) - largest zero change 1.702643e-05
Clp0000I Optimal - objective value 145.03826
Clp0000I Optimal - objective value 145.03826
Clp0000I Optimal - objective value 145.03826
Coin0511I After Postsolve, objective 145.03826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.0382557 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 48 columns (48 integer (48 of which binary)) and 438 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.784%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.58418
Cbc0038I Pass   1: suminf.    0.53719 (6) obj. -20.1936 iterations 16
Cbc0038I Pass   2: suminf.    0.53719 (6) obj. -20.1936 iterations 0
Cbc0038I Solution found of -10.2092
Cbc0038I Rounding solution of -32.9612 is better than previous of -10.2092

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 48 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -32.9612 to -87.9565 (0.02 seconds)
Cbc0038I Round again with cutoff of -92.2425
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.16774 (20) obj. -92.2425 iterations 2
Cbc0038I Pass   4: suminf.    3.16774 (20) obj. -92.2425 iterations 0
Cbc0038I Pass   5: suminf.    0.39558 (1) obj. -92.2425 iterations 33
Cbc0038I Pass   6: suminf.    0.08421 (1) obj. -98.0909 iterations 3
Cbc0038I Pass   7: suminf.    0.15747 (1) obj. -92.2425 iterations 1
Cbc0038I Pass   8: suminf.    0.71994 (3) obj. -92.2425 iterations 6
Cbc0038I Pass   9: suminf.    0.71994 (3) obj. -92.2425 iterations 1
Cbc0038I Pass  10: suminf.    0.41053 (1) obj. -104.716 iterations 3
Cbc0038I Pass  11: suminf.    0.43322 (1) obj. -92.2425 iterations 1
Cbc0038I Pass  12: suminf.    1.50207 (8) obj. -92.3033 iterations 14
Cbc0038I Pass  13: suminf.    1.22960 (7) obj. -92.2425 iterations 2
Cbc0038I Pass  14: suminf.    0.90155 (4) obj. -92.2425 iterations 9
Cbc0038I Pass  15: suminf.    0.90155 (4) obj. -92.2425 iterations 0
Cbc0038I Pass  16: suminf.    0.57550 (3) obj. -92.2425 iterations 1
Cbc0038I Pass  17: suminf.    0.51605 (2) obj. -92.2425 iterations 1
Cbc0038I Pass  18: suminf.    0.92712 (2) obj. -92.2425 iterations 2
Cbc0038I Pass  19: suminf.    0.55260 (2) obj. -96.1922 iterations 3
Cbc0038I Pass  20: suminf.    0.75101 (2) obj. -92.2425 iterations 2
Cbc0038I Pass  21: suminf.    0.75076 (2) obj. -92.6949 iterations 1
Cbc0038I Pass  22: suminf.    0.74254 (2) obj. -92.2425 iterations 1
Cbc0038I Pass  23: suminf.    0.92712 (2) obj. -92.2425 iterations 3
Cbc0038I Pass  24: suminf.    0.55260 (2) obj. -96.1922 iterations 3
Cbc0038I Pass  25: suminf.    0.75101 (2) obj. -92.2425 iterations 2
Cbc0038I Pass  26: suminf.    0.75076 (2) obj. -92.6949 iterations 1
Cbc0038I Pass  27: suminf.    0.74254 (2) obj. -92.2425 iterations 1
Cbc0038I Pass  28: suminf.    0.92712 (2) obj. -92.2425 iterations 3
Cbc0038I Pass  29: suminf.    0.55260 (2) obj. -96.1922 iterations 3
Cbc0038I Pass  30: suminf.    0.75101 (2) obj. -92.2425 iterations 2
Cbc0038I Pass  31: suminf.    0.75076 (2) obj. -92.6949 iterations 1
Cbc0038I Pass  32: suminf.    0.74254 (2) obj. -92.2425 iterations 1
Cbc0038I Rounding solution of -89.9565 is better than previous of -87.9565

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 48 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -99.9573
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.59788 (20) obj. -99.9573 iterations 1
Cbc0038I Pass  33: suminf.    3.41372 (21) obj. -99.9573 iterations 1
Cbc0038I Pass  34: suminf.    0.59175 (5) obj. -99.9573 iterations 27
Cbc0038I Pass  35: suminf.    0.45939 (4) obj. -102.46 iterations 2
Cbc0038I Pass  36: suminf.    0.28506 (2) obj. -99.9573 iterations 7
Cbc0038I Pass  37: suminf.    0.28506 (2) obj. -99.9573 iterations 1
Cbc0038I Pass  38: suminf.    0.24775 (1) obj. -99.9573 iterations 1
Cbc0038I Pass  39: suminf.    0.14737 (1) obj. -107.97 iterations 1
Cbc0038I Pass  40: suminf.    2.48986 (8) obj. -114.449 iterations 7
Cbc0038I Pass  41: suminf.    2.06038 (7) obj. -114.02 iterations 1
Cbc0038I Pass  42: suminf.    3.55852 (16) obj. -99.9573 iterations 12
Cbc0038I Pass  43: suminf.    3.55852 (16) obj. -99.9573 iterations 0
Cbc0038I Pass  44: suminf.    0.71680 (2) obj. -99.9573 iterations 22
Cbc0038I Pass  45: suminf.    0.41053 (1) obj. -104.716 iterations 2
Cbc0038I Pass  46: suminf.    0.47013 (1) obj. -99.9573 iterations 1
Cbc0038I Pass  47: suminf.    3.82864 (16) obj. -99.9573 iterations 17
Cbc0038I Pass  48: suminf.    2.67405 (8) obj. -99.9573 iterations 7
Cbc0038I Pass  49: suminf.    0.20000 (1) obj. -106.245 iterations 10
Cbc0038I Pass  50: suminf.    0.60290 (2) obj. -99.9573 iterations 4
Cbc0038I Pass  51: suminf.    0.29474 (1) obj. -101.94 iterations 3
Cbc0038I Pass  52: suminf.    0.26990 (1) obj. -99.9573 iterations 1
Cbc0038I Pass  53: suminf.    2.16344 (11) obj. -99.9573 iterations 12
Cbc0038I Pass  54: suminf.    1.75859 (5) obj. -99.9573 iterations 6
Cbc0038I Pass  55: suminf.    0.44211 (1) obj. -105.195 iterations 7
Cbc0038I Pass  56: suminf.    0.49228 (1) obj. -99.9573 iterations 1
Cbc0038I Pass  57: suminf.    2.13784 (6) obj. -99.9573 iterations 9
Cbc0038I Pass  58: suminf.    2.13784 (6) obj. -99.9573 iterations 2
Cbc0038I Pass  59: suminf.    0.23158 (1) obj. -103.281 iterations 7
Cbc0038I Pass  60: suminf.    0.18994 (1) obj. -99.9573 iterations 1
Cbc0038I Pass  61: suminf.    1.74517 (9) obj. -99.9573 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 48 columns, reduced to 42 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -89.9565 to -93.0595 (0.09 seconds)
Cbc0038I Round again with cutoff of -109.215
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.45751 (20) obj. -109.215 iterations 0
Cbc0038I Pass  62: suminf.    4.00950 (24) obj. -109.215 iterations 6
Cbc0038I Pass  63: suminf.    1.32720 (7) obj. -109.215 iterations 37
Cbc0038I Pass  64: suminf.    0.41989 (5) obj. -109.215 iterations 5
Cbc0038I Pass  65: suminf.    2.36534 (6) obj. -109.215 iterations 8
Cbc0038I Pass  66: suminf.    0.41989 (5) obj. -109.215 iterations 5
Cbc0038I Pass  67: suminf.    1.84715 (9) obj. -109.215 iterations 6
Cbc0038I Pass  68: suminf.    1.43167 (6) obj. -109.215 iterations 2
Cbc0038I Pass  69: suminf.    1.47012 (6) obj. -109.215 iterations 8
Cbc0038I Pass  70: suminf.    1.29753 (5) obj. -109.215 iterations 8
Cbc0038I Pass  71: suminf.    1.47012 (6) obj. -109.215 iterations 8
Cbc0038I Pass  72: suminf.    0.63018 (3) obj. -110.195 iterations 8
Cbc0038I Pass  73: suminf.    0.63018 (3) obj. -110.195 iterations 1
Cbc0038I Pass  74: suminf.    0.41989 (5) obj. -109.215 iterations 6
Cbc0038I Pass  75: suminf.    0.41989 (5) obj. -109.215 iterations 0
Cbc0038I Pass  76: suminf.    2.36534 (6) obj. -109.215 iterations 7
Cbc0038I Pass  77: suminf.    0.41989 (5) obj. -109.215 iterations 5
Cbc0038I Pass  78: suminf.    1.87488 (6) obj. -109.215 iterations 9
Cbc0038I Pass  79: suminf.    1.87488 (6) obj. -109.215 iterations 1
Cbc0038I Pass  80: suminf.    0.45455 (6) obj. -109.215 iterations 11
Cbc0038I Pass  81: suminf.    0.41989 (5) obj. -109.215 iterations 1
Cbc0038I Pass  82: suminf.    2.36534 (6) obj. -109.215 iterations 8
Cbc0038I Pass  83: suminf.    0.41989 (5) obj. -109.215 iterations 6
Cbc0038I Pass  84: suminf.    1.30702 (8) obj. -109.215 iterations 10
Cbc0038I Pass  85: suminf.    0.85132 (3) obj. -109.266 iterations 6
Cbc0038I Pass  86: suminf.    0.41989 (5) obj. -109.215 iterations 7
Cbc0038I Pass  87: suminf.    0.41989 (5) obj. -109.215 iterations 0
Cbc0038I Pass  88: suminf.    2.36534 (6) obj. -109.215 iterations 7
Cbc0038I Pass  89: suminf.    0.41989 (5) obj. -109.215 iterations 5
Cbc0038I Pass  90: suminf.    2.37866 (6) obj. -109.392 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 48 columns, reduced to 42 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -93.0595 - took 0.09 seconds
Cbc0012I Integer solution of -93.05954 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 45 rows 48 columns, reduced to 35 rows 36 columns
Cbc0031I 20 added rows had average density of 17.9
Cbc0013I At root node, 20 cuts changed objective from -130.81634 to -108.78623 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2134 row cuts average 6.0 elements, 6 column cuts (6 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 888 row cuts average 37.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 141 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 279 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 314 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 288 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.765 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -93.05954 best solution, best possible -108.78623 (1.75 seconds)
Cbc0004I Integer solution of -93.18902 found after 3300 iterations and 31 nodes (1.96 seconds)
Cbc0012I Integer solution of -94.18902 found by rounding after 3913 iterations and 38 nodes (2.03 seconds)
Cbc0012I Integer solution of -95.18902 found by rounding after 3957 iterations and 40 nodes (2.03 seconds)
Cbc0001I Search completed - best objective -95.18902, took 3957 iterations and 40 nodes (2.03 seconds)
Cbc0032I Strong branching done 546 times (5203 iterations), fathomed 1 nodes and fixed 16 variables
Cbc0035I Maximum depth 11, 41 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       2.04

