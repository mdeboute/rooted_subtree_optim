Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 4.86555e-05 - average 8.2467e-07, 8 fixed columns
Coin0506I Presolve 45 (-14) rows, 25 (-8) columns and 132 (-44) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Coin0511I After Postsolve, objective 108.405, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Coin0511I After Postsolve, objective 108.405, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.4049988 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.93862
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.9793 iterations 21
Cbc0038I Solution found of -11.9793
Cbc0038I Relaxing continuous gives -11.9793
Cbc0038I Rounding solution of -17.7039 is better than previous of -11.9793

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -17.7039 to -39.4608 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.3553
Cbc0038I Pass   2: suminf.    0.77559 (2) obj. -46.3553 iterations 4
Cbc0038I Pass   3: suminf.    0.74316 (2) obj. -46.3553 iterations 2
Cbc0038I Pass   4: suminf.    2.72986 (8) obj. -46.3553 iterations 11
Cbc0038I Pass   5: suminf.    2.35132 (9) obj. -46.3553 iterations 4
Cbc0038I Pass   6: suminf.    1.77388 (6) obj. -46.3553 iterations 13
Cbc0038I Pass   7: suminf.    1.07649 (4) obj. -46.3553 iterations 1
Cbc0038I Pass   8: suminf.    0.86704 (4) obj. -46.3553 iterations 3
Cbc0038I Pass   9: suminf.    1.73880 (5) obj. -46.3553 iterations 5
Cbc0038I Pass  10: suminf.    2.05644 (5) obj. -46.3553 iterations 6
Cbc0038I Pass  11: suminf.    0.73211 (3) obj. -46.3553 iterations 3
Cbc0038I Pass  12: suminf.    0.73211 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  13: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  14: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  15: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  16: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  17: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  18: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  19: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  20: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  21: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  22: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  23: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  24: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  25: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  26: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  27: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  28: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  29: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  30: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  31: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -39.4608 - took 0.04 seconds
Cbc0012I Integer solution of -39.4608 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 19 columns
Cbc0031I 11 added rows had average density of 25
Cbc0013I At root node, 11 cuts changed objective from -108.405 to -73.786396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1239 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 683 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.711 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -39.4608 best solution, best possible -73.784249 (1.49 seconds)
Cbc0001I Search completed - best objective -39.4608, took 2605 iterations and 12 nodes (1.53 seconds)
Cbc0032I Strong branching done 122 times (1077 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-13) rows, 60 (-6) columns and 596 (-127) elements
Clp1000I sum of infeasibilities 7.87759e-09 - average 1.43229e-10, 43 fixed columns
Coin0506I Presolve 16 (-39) rows, 17 (-43) columns and 61 (-535) elements
Clp0006I 0  Obj 12.276428 Dual inf 1.3061863 (16)
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 4.0440415 - largest nonzero change 0 ( 0%) - largest zero change 1.9526531e-05
Clp0000I Optimal - objective value 30.135746
Clp0000I Optimal - objective value 30.135746
Coin0511I After Postsolve, objective 30.135746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30.135746 Dual inf 224.16896 (28)
Clp0014I Perturbing problem by 0.001% of 1.751832 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 119.70219
Clp0000I Optimal - objective value 119.70219
Clp0000I Optimal - objective value 119.70219
Coin0511I After Postsolve, objective 119.70219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.7021948 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 60 columns (60 integer (60 of which binary)) and 603 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.590%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.74547
Cbc0038I Pass   1: suminf.    1.43102 (17) obj. -94.4849 iterations 16
Cbc0038I Pass   2: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass   3: suminf.    0.39769 (7) obj. -49.2614 iterations 10
Cbc0038I Solution found of -5.0923
Cbc0038I Rounding solution of -22.3368 is better than previous of -5.0923

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.9117
Cbc0038I Pass   4: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass   5: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass   6: suminf.    0.31163 (1) obj. -30.9117 iterations 28
Cbc0038I Pass   7: suminf.    0.07500 (1) obj. -39.7875 iterations 2
Cbc0038I Pass   8: suminf.    0.85575 (9) obj. -30.9117 iterations 13
Cbc0038I Pass   9: suminf.    0.54785 (3) obj. -30.9117 iterations 6
Cbc0038I Pass  10: suminf.    0.51893 (2) obj. -30.9117 iterations 2
Cbc0038I Pass  11: suminf.    0.20403 (2) obj. -42.723 iterations 1
Cbc0038I Pass  12: suminf.    0.20776 (2) obj. -30.9117 iterations 3
Cbc0038I Pass  13: suminf.    0.20776 (2) obj. -30.9117 iterations 0
Cbc0038I Pass  14: suminf.    2.37061 (9) obj. -30.9117 iterations 8
Cbc0038I Pass  15: suminf.    1.27515 (8) obj. -30.9117 iterations 3
Cbc0038I Pass  16: suminf.    1.27515 (8) obj. -30.9117 iterations 0
Cbc0038I Pass  17: suminf.    0.27026 (2) obj. -30.9117 iterations 12
Cbc0038I Pass  18: suminf.    0.27026 (2) obj. -30.9117 iterations 0
Cbc0038I Pass  19: suminf.    0.49227 (2) obj. -30.9117 iterations 1
Cbc0038I Pass  20: suminf.    0.20403 (2) obj. -41.723 iterations 1
Cbc0038I Pass  21: suminf.    0.27026 (2) obj. -30.9117 iterations 3
Cbc0038I Pass  22: suminf.    2.61774 (11) obj. -43.281 iterations 12
Cbc0038I Pass  23: suminf.    1.39384 (11) obj. -32.5483 iterations 3
Cbc0038I Pass  24: suminf.    1.39384 (11) obj. -32.5483 iterations 0
Cbc0038I Pass  25: suminf.    0.56724 (2) obj. -30.9117 iterations 17
Cbc0038I Pass  26: suminf.    0.20403 (2) obj. -36.723 iterations 1
Cbc0038I Pass  27: suminf.    0.56724 (2) obj. -30.9117 iterations 3
Cbc0038I Pass  28: suminf.    1.03069 (7) obj. -30.9117 iterations 22
Cbc0038I Pass  29: suminf.    0.86258 (7) obj. -32.796 iterations 3
Cbc0038I Pass  30: suminf.    0.24577 (2) obj. -30.9117 iterations 11
Cbc0038I Pass  31: suminf.    0.24577 (2) obj. -30.9117 iterations 0
Cbc0038I Pass  32: suminf.    0.62821 (2) obj. -30.9117 iterations 1
Cbc0038I Pass  33: suminf.    0.31129 (2) obj. -42.7987 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -5.0923 to -32.702 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.7787
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  34: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  35: suminf.    0.57445 (2) obj. -47.7787 iterations 27
Cbc0038I Pass  36: suminf.    0.57445 (2) obj. -47.7787 iterations 1
Cbc0038I Pass  37: suminf.    0.36251 (2) obj. -47.7787 iterations 1
Cbc0038I Pass  38: suminf.    0.20403 (2) obj. -53.723 iterations 2
Cbc0038I Pass  39: suminf.    0.67281 (6) obj. -47.7787 iterations 32
Cbc0038I Pass  40: suminf.    0.64337 (7) obj. -47.7787 iterations 4
Cbc0038I Pass  41: suminf.    0.69438 (10) obj. -47.7787 iterations 13
Cbc0038I Pass  42: suminf.    0.69438 (10) obj. -47.7787 iterations 1
Cbc0038I Pass  43: suminf.    0.97888 (5) obj. -47.7787 iterations 14
Cbc0038I Pass  44: suminf.    0.82892 (5) obj. -48.6785 iterations 5
Cbc0038I Pass  45: suminf.    2.54021 (7) obj. -47.7787 iterations 8
Cbc0038I Pass  46: suminf.    1.20171 (4) obj. -56.9526 iterations 6
Cbc0038I Pass  47: suminf.    1.02774 (4) obj. -47.7787 iterations 4
Cbc0038I Pass  48: suminf.    1.02774 (4) obj. -47.7787 iterations 0
Cbc0038I Pass  49: suminf.    0.92109 (4) obj. -47.7787 iterations 1
Cbc0038I Pass  50: suminf.    0.71109 (3) obj. -52.3682 iterations 2
Cbc0038I Pass  51: suminf.    2.13647 (10) obj. -47.7787 iterations 15
Cbc0038I Pass  52: suminf.    2.13647 (10) obj. -47.7787 iterations 1
Cbc0038I Pass  53: suminf.    1.61252 (5) obj. -47.7787 iterations 14
Cbc0038I Pass  54: suminf.    1.58563 (5) obj. -47.7787 iterations 5
Cbc0038I Pass  55: suminf.    1.02774 (4) obj. -47.7787 iterations 5
Cbc0038I Pass  56: suminf.    1.02774 (4) obj. -47.7787 iterations 1
Cbc0038I Pass  57: suminf.    0.92109 (4) obj. -47.7787 iterations 1
Cbc0038I Pass  58: suminf.    0.71109 (3) obj. -52.3682 iterations 2
Cbc0038I Pass  59: suminf.    1.02774 (4) obj. -47.7787 iterations 3
Cbc0038I Pass  60: suminf.    1.23742 (7) obj. -50.6324 iterations 14
Cbc0038I Pass  61: suminf.    1.23742 (7) obj. -50.6324 iterations 5
Cbc0038I Pass  62: suminf.    2.67077 (11) obj. -47.7787 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -32.702 to -39.4608 (0.05 seconds)
Cbc0038I Round again with cutoff of -65.8707
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  63: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  64: suminf.    0.59306 (4) obj. -65.8707 iterations 35
Cbc0038I Pass  65: suminf.    0.50415 (3) obj. -66.4903 iterations 4
Cbc0038I Pass  66: suminf.    0.58160 (3) obj. -65.8707 iterations 2
Cbc0038I Pass  67: suminf.    2.61591 (13) obj. -65.8707 iterations 10
Cbc0038I Pass  68: suminf.    2.61591 (13) obj. -65.8707 iterations 0
Cbc0038I Pass  69: suminf.    2.11366 (7) obj. -65.8707 iterations 18
Cbc0038I Pass  70: suminf.    1.71449 (7) obj. -65.8707 iterations 3
Cbc0038I Pass  71: suminf.    1.81865 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  72: suminf.    1.81865 (7) obj. -65.8707 iterations 0
Cbc0038I Pass  73: suminf.    1.71449 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  74: suminf.    1.84960 (9) obj. -65.8707 iterations 10
Cbc0038I Pass  75: suminf.    1.81247 (9) obj. -65.8707 iterations 5
Cbc0038I Pass  76: suminf.    1.71449 (7) obj. -65.8707 iterations 7
Cbc0038I Pass  77: suminf.    1.71449 (7) obj. -65.8707 iterations 0
Cbc0038I Pass  78: suminf.    1.81865 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  79: suminf.    1.81865 (7) obj. -65.8707 iterations 0
Cbc0038I Pass  80: suminf.    1.71449 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  81: suminf.    2.60980 (11) obj. -65.8707 iterations 19
Cbc0038I Pass  82: suminf.    2.58227 (11) obj. -65.8707 iterations 5
Cbc0038I Pass  83: suminf.    1.70857 (9) obj. -65.8707 iterations 12
Cbc0038I Pass  84: suminf.    1.70857 (9) obj. -65.8707 iterations 2
Cbc0038I Pass  85: suminf.    2.68635 (14) obj. -65.8707 iterations 6
Cbc0038I Pass  86: suminf.    1.90276 (15) obj. -65.8707 iterations 1
Cbc0038I Pass  87: suminf.    1.90276 (15) obj. -65.8707 iterations 0
Cbc0038I Pass  88: suminf.    1.96700 (8) obj. -65.8707 iterations 17
Cbc0038I Pass  89: suminf.    1.92049 (8) obj. -65.8707 iterations 3
Cbc0038I Pass  90: suminf.    1.71449 (7) obj. -65.8707 iterations 7
Cbc0038I Pass  91: suminf.    1.71449 (7) obj. -65.8707 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.4608 - took 0.05 seconds
Cbc0012I Integer solution of -39.4608 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 54 rows 60 columns, reduced to 19 rows 22 columns
Cbc0031I 26 added rows had average density of 17.5
Cbc0013I At root node, 26 cuts changed objective from -108.08529 to -46.863637 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2139 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 831 row cuts average 42.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 218 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 158 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.4608 best solution, best possible -46.863637 (1.63 seconds)
Cbc0001I Search completed - best objective -39.4608, took 2301 iterations and 4 nodes (1.96 seconds)
Cbc0032I Strong branching done 126 times (1664 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       1.96

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 4.86555e-05 - average 8.2467e-07, 8 fixed columns
Coin0506I Presolve 45 (-14) rows, 25 (-8) columns and 132 (-44) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Coin0511I After Postsolve, objective 108.405, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Clp0000I Optimal - objective value 108.405
Coin0511I After Postsolve, objective 108.405, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.4049988 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.93862
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.9793 iterations 21
Cbc0038I Solution found of -11.9793
Cbc0038I Relaxing continuous gives -11.9793
Cbc0038I Rounding solution of -17.7039 is better than previous of -11.9793

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -17.7039 to -39.4608 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.3553
Cbc0038I Pass   2: suminf.    0.77559 (2) obj. -46.3553 iterations 4
Cbc0038I Pass   3: suminf.    0.74316 (2) obj. -46.3553 iterations 2
Cbc0038I Pass   4: suminf.    2.72986 (8) obj. -46.3553 iterations 11
Cbc0038I Pass   5: suminf.    2.35132 (9) obj. -46.3553 iterations 4
Cbc0038I Pass   6: suminf.    1.77388 (6) obj. -46.3553 iterations 13
Cbc0038I Pass   7: suminf.    1.07649 (4) obj. -46.3553 iterations 1
Cbc0038I Pass   8: suminf.    0.86704 (4) obj. -46.3553 iterations 3
Cbc0038I Pass   9: suminf.    1.73880 (5) obj. -46.3553 iterations 5
Cbc0038I Pass  10: suminf.    2.05644 (5) obj. -46.3553 iterations 6
Cbc0038I Pass  11: suminf.    0.73211 (3) obj. -46.3553 iterations 3
Cbc0038I Pass  12: suminf.    0.73211 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  13: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  14: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  15: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  16: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  17: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  18: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  19: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  20: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  21: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  22: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  23: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  24: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  25: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I Pass  26: suminf.    0.66391 (3) obj. -46.3553 iterations 2
Cbc0038I Pass  27: suminf.    0.66391 (3) obj. -46.3553 iterations 0
Cbc0038I Pass  28: suminf.    1.15061 (4) obj. -46.3553 iterations 2
Cbc0038I Pass  29: suminf.    0.87089 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  30: suminf.    0.73211 (3) obj. -46.3553 iterations 1
Cbc0038I Pass  31: suminf.    1.50476 (5) obj. -46.3553 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -39.4608 - took 0.03 seconds
Cbc0012I Integer solution of -39.4608 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 19 columns
Cbc0031I 11 added rows had average density of 25
Cbc0013I At root node, 11 cuts changed objective from -108.405 to -73.786396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1239 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 683 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.769 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -39.4608 best solution, best possible -73.784249 (1.61 seconds)
Cbc0001I Search completed - best objective -39.4608, took 2605 iterations and 12 nodes (1.65 seconds)
Cbc0032I Strong branching done 122 times (1077 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 60 (-7) columns and 596 (-128) elements
Clp1000I sum of infeasibilities 7.87759e-09 - average 1.43229e-10, 43 fixed columns
Coin0506I Presolve 16 (-39) rows, 17 (-43) columns and 61 (-535) elements
Clp0006I 0  Obj 12.276428 Dual inf 1.3061863 (16)
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 4.0440415 - largest nonzero change 0 ( 0%) - largest zero change 1.9526531e-05
Clp0000I Optimal - objective value 30.135746
Clp0000I Optimal - objective value 30.135746
Coin0511I After Postsolve, objective 30.135746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30.135746 Dual inf 224.16896 (28)
Clp0014I Perturbing problem by 0.001% of 1.751832 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 119.70219
Clp0000I Optimal - objective value 119.70219
Clp0000I Optimal - objective value 119.70219
Coin0511I After Postsolve, objective 119.70219, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.7021948 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 60 columns (60 integer (60 of which binary)) and 603 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.590%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.74547
Cbc0038I Pass   1: suminf.    1.43102 (17) obj. -94.4849 iterations 16
Cbc0038I Pass   2: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass   3: suminf.    0.39769 (7) obj. -49.2614 iterations 10
Cbc0038I Solution found of -5.0923
Cbc0038I Rounding solution of -22.3368 is better than previous of -5.0923

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -30.9117
Cbc0038I Pass   4: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass   5: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass   6: suminf.    0.31163 (1) obj. -30.9117 iterations 28
Cbc0038I Pass   7: suminf.    0.07500 (1) obj. -39.7875 iterations 2
Cbc0038I Pass   8: suminf.    0.85575 (9) obj. -30.9117 iterations 13
Cbc0038I Pass   9: suminf.    0.54785 (3) obj. -30.9117 iterations 6
Cbc0038I Pass  10: suminf.    0.51893 (2) obj. -30.9117 iterations 2
Cbc0038I Pass  11: suminf.    0.20403 (2) obj. -42.723 iterations 1
Cbc0038I Pass  12: suminf.    0.20776 (2) obj. -30.9117 iterations 3
Cbc0038I Pass  13: suminf.    0.20776 (2) obj. -30.9117 iterations 0
Cbc0038I Pass  14: suminf.    2.37061 (9) obj. -30.9117 iterations 8
Cbc0038I Pass  15: suminf.    1.27515 (8) obj. -30.9117 iterations 3
Cbc0038I Pass  16: suminf.    1.27515 (8) obj. -30.9117 iterations 0
Cbc0038I Pass  17: suminf.    0.27026 (2) obj. -30.9117 iterations 12
Cbc0038I Pass  18: suminf.    0.27026 (2) obj. -30.9117 iterations 0
Cbc0038I Pass  19: suminf.    0.49227 (2) obj. -30.9117 iterations 1
Cbc0038I Pass  20: suminf.    0.20403 (2) obj. -41.723 iterations 1
Cbc0038I Pass  21: suminf.    0.27026 (2) obj. -30.9117 iterations 3
Cbc0038I Pass  22: suminf.    2.61774 (11) obj. -43.281 iterations 12
Cbc0038I Pass  23: suminf.    1.39384 (11) obj. -32.5483 iterations 3
Cbc0038I Pass  24: suminf.    1.39384 (11) obj. -32.5483 iterations 0
Cbc0038I Pass  25: suminf.    0.56724 (2) obj. -30.9117 iterations 17
Cbc0038I Pass  26: suminf.    0.20403 (2) obj. -36.723 iterations 1
Cbc0038I Pass  27: suminf.    0.56724 (2) obj. -30.9117 iterations 3
Cbc0038I Pass  28: suminf.    1.03069 (7) obj. -30.9117 iterations 22
Cbc0038I Pass  29: suminf.    0.86258 (7) obj. -32.796 iterations 3
Cbc0038I Pass  30: suminf.    0.24577 (2) obj. -30.9117 iterations 11
Cbc0038I Pass  31: suminf.    0.24577 (2) obj. -30.9117 iterations 0
Cbc0038I Pass  32: suminf.    0.62821 (2) obj. -30.9117 iterations 1
Cbc0038I Pass  33: suminf.    0.31129 (2) obj. -42.7987 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -5.0923 to -32.702 (0.03 seconds)
Cbc0038I Round again with cutoff of -47.7787
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  34: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  35: suminf.    0.57445 (2) obj. -47.7787 iterations 27
Cbc0038I Pass  36: suminf.    0.57445 (2) obj. -47.7787 iterations 1
Cbc0038I Pass  37: suminf.    0.36251 (2) obj. -47.7787 iterations 1
Cbc0038I Pass  38: suminf.    0.20403 (2) obj. -53.723 iterations 2
Cbc0038I Pass  39: suminf.    0.67281 (6) obj. -47.7787 iterations 32
Cbc0038I Pass  40: suminf.    0.64337 (7) obj. -47.7787 iterations 4
Cbc0038I Pass  41: suminf.    0.69438 (10) obj. -47.7787 iterations 13
Cbc0038I Pass  42: suminf.    0.69438 (10) obj. -47.7787 iterations 1
Cbc0038I Pass  43: suminf.    0.97888 (5) obj. -47.7787 iterations 14
Cbc0038I Pass  44: suminf.    0.82892 (5) obj. -48.6785 iterations 5
Cbc0038I Pass  45: suminf.    2.54021 (7) obj. -47.7787 iterations 8
Cbc0038I Pass  46: suminf.    1.20171 (4) obj. -56.9526 iterations 6
Cbc0038I Pass  47: suminf.    1.02774 (4) obj. -47.7787 iterations 4
Cbc0038I Pass  48: suminf.    1.02774 (4) obj. -47.7787 iterations 0
Cbc0038I Pass  49: suminf.    0.92109 (4) obj. -47.7787 iterations 1
Cbc0038I Pass  50: suminf.    0.71109 (3) obj. -52.3682 iterations 2
Cbc0038I Pass  51: suminf.    2.13647 (10) obj. -47.7787 iterations 15
Cbc0038I Pass  52: suminf.    2.13647 (10) obj. -47.7787 iterations 1
Cbc0038I Pass  53: suminf.    1.61252 (5) obj. -47.7787 iterations 14
Cbc0038I Pass  54: suminf.    1.58563 (5) obj. -47.7787 iterations 5
Cbc0038I Pass  55: suminf.    1.02774 (4) obj. -47.7787 iterations 5
Cbc0038I Pass  56: suminf.    1.02774 (4) obj. -47.7787 iterations 1
Cbc0038I Pass  57: suminf.    0.92109 (4) obj. -47.7787 iterations 1
Cbc0038I Pass  58: suminf.    0.71109 (3) obj. -52.3682 iterations 2
Cbc0038I Pass  59: suminf.    1.02774 (4) obj. -47.7787 iterations 3
Cbc0038I Pass  60: suminf.    1.23742 (7) obj. -50.6324 iterations 14
Cbc0038I Pass  61: suminf.    1.23742 (7) obj. -50.6324 iterations 5
Cbc0038I Pass  62: suminf.    2.67077 (11) obj. -47.7787 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -32.702 to -39.4608 (0.06 seconds)
Cbc0038I Round again with cutoff of -65.8707
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  63: suminf.    1.43102 (17) obj. -94.4849 iterations 0
Cbc0038I Pass  64: suminf.    0.59306 (4) obj. -65.8707 iterations 35
Cbc0038I Pass  65: suminf.    0.50415 (3) obj. -66.4903 iterations 4
Cbc0038I Pass  66: suminf.    0.58160 (3) obj. -65.8707 iterations 2
Cbc0038I Pass  67: suminf.    2.61591 (13) obj. -65.8707 iterations 10
Cbc0038I Pass  68: suminf.    2.61591 (13) obj. -65.8707 iterations 0
Cbc0038I Pass  69: suminf.    2.11366 (7) obj. -65.8707 iterations 18
Cbc0038I Pass  70: suminf.    1.71449 (7) obj. -65.8707 iterations 3
Cbc0038I Pass  71: suminf.    1.81865 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  72: suminf.    1.81865 (7) obj. -65.8707 iterations 0
Cbc0038I Pass  73: suminf.    1.71449 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  74: suminf.    1.84960 (9) obj. -65.8707 iterations 10
Cbc0038I Pass  75: suminf.    1.81247 (9) obj. -65.8707 iterations 5
Cbc0038I Pass  76: suminf.    1.71449 (7) obj. -65.8707 iterations 7
Cbc0038I Pass  77: suminf.    1.71449 (7) obj. -65.8707 iterations 0
Cbc0038I Pass  78: suminf.    1.81865 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  79: suminf.    1.81865 (7) obj. -65.8707 iterations 0
Cbc0038I Pass  80: suminf.    1.71449 (7) obj. -65.8707 iterations 2
Cbc0038I Pass  81: suminf.    2.60980 (11) obj. -65.8707 iterations 19
Cbc0038I Pass  82: suminf.    2.58227 (11) obj. -65.8707 iterations 5
Cbc0038I Pass  83: suminf.    1.70857 (9) obj. -65.8707 iterations 12
Cbc0038I Pass  84: suminf.    1.70857 (9) obj. -65.8707 iterations 2
Cbc0038I Pass  85: suminf.    2.68635 (14) obj. -65.8707 iterations 6
Cbc0038I Pass  86: suminf.    1.90276 (15) obj. -65.8707 iterations 1
Cbc0038I Pass  87: suminf.    1.90276 (15) obj. -65.8707 iterations 0
Cbc0038I Pass  88: suminf.    1.96700 (8) obj. -65.8707 iterations 17
Cbc0038I Pass  89: suminf.    1.92049 (8) obj. -65.8707 iterations 3
Cbc0038I Pass  90: suminf.    1.71449 (7) obj. -65.8707 iterations 7
Cbc0038I Pass  91: suminf.    1.71449 (7) obj. -65.8707 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -39.4608 - took 0.06 seconds
Cbc0012I Integer solution of -39.4608 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 54 rows 60 columns, reduced to 19 rows 22 columns
Cbc0031I 26 added rows had average density of 17.5
Cbc0013I At root node, 26 cuts changed objective from -108.08529 to -46.863637 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2139 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 831 row cuts average 42.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 218 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 158 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.4608 best solution, best possible -46.863637 (1.62 seconds)
Cbc0001I Search completed - best objective -39.4608, took 2301 iterations and 4 nodes (1.97 seconds)
Cbc0032I Strong branching done 126 times (1664 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.98

