Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 5.40966e-06 - average 1.38709e-07, 6 fixed columns
Coin0506I Presolve 19 (-20) rows, 15 (-7) columns and 61 (-53) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Coin0511I After Postsolve, objective 410.55395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Coin0511I After Postsolve, objective 410.55395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 410.5539481 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.556%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.47501
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -274.849 iterations 11
Cbc0038I Solution found of -274.849
Cbc0038I Relaxing continuous gives -274.849
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -283.391
Cbc0038I Pass   2: suminf.    0.05602 (1) obj. -283.391 iterations 1
Cbc0038I Pass   3: suminf.    0.17760 (3) obj. -283.391 iterations 3
Cbc0038I Pass   4: suminf.    0.40613 (2) obj. -283.391 iterations 4
Cbc0038I Pass   5: suminf.    0.40613 (2) obj. -283.391 iterations 0
Cbc0038I Pass   6: suminf.    0.78891 (3) obj. -283.391 iterations 3
Cbc0038I Pass   7: suminf.    0.59348 (2) obj. -283.391 iterations 2
Cbc0038I Pass   8: suminf.    1.38327 (8) obj. -283.391 iterations 5
Cbc0038I Pass   9: suminf.    1.04648 (5) obj. -283.391 iterations 4
Cbc0038I Pass  10: suminf.    1.58613 (5) obj. -283.391 iterations 5
Cbc0038I Pass  11: suminf.    1.46603 (5) obj. -283.391 iterations 1
Cbc0038I Pass  12: suminf.    1.32168 (7) obj. -283.391 iterations 6
Cbc0038I Pass  13: suminf.    1.03240 (5) obj. -283.391 iterations 2
Cbc0038I Pass  14: suminf.    0.40582 (3) obj. -283.391 iterations 5
Cbc0038I Pass  15: suminf.    0.40582 (3) obj. -283.391 iterations 0
Cbc0038I Pass  16: suminf.    1.28462 (4) obj. -283.391 iterations 3
Cbc0038I Pass  17: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  18: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  19: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  20: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  21: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I Pass  22: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  23: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  24: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  25: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  26: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I Pass  27: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  28: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  29: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  30: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  31: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -274.849 - took 0.02 seconds
Cbc0012I Integer solution of -274.84862 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 14 rows 11 columns
Cbc0031I 9 added rows had average density of 15.111111
Cbc0013I At root node, 9 cuts changed objective from -360.27441 to -300.59074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 773 row cuts average 4.0 elements, 3 column cuts (3 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 535 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -282.86489 found by DiveCoefficient after 1377 iterations and 2 nodes (0.12 seconds)
Cbc0004I Integer solution of -283.54551 found after 1410 iterations and 2 nodes (0.12 seconds)
Cbc0001I Search completed - best objective -283.545511, took 1480 iterations and 4 nodes (0.13 seconds)
Cbc0032I Strong branching done 48 times (322 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-11) rows, 40 (-6) columns and 307 (-81) elements
Clp1000I sum of infeasibilities 1.77352e-11 - average 4.79329e-13, 21 fixed columns
Coin0506I Presolve 13 (-24) rows, 13 (-27) columns and 45 (-262) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 446.64254
Clp0000I Optimal - objective value 446.64254
Coin0511I After Postsolve, objective 446.64254, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0875928 - largest nonzero change 2.742797e-05 ( 0.002742797%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 469.09196
Clp0000I Optimal - objective value 469.09196
Clp0000I Optimal - objective value 469.09196
Coin0511I After Postsolve, objective 469.09196, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 469.0919636 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 301 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.65284
Cbc0038I Pass   1: suminf.    1.27778 (3) obj. -270.824 iterations 18
Cbc0038I Solution found of -247.102
Cbc0038I Rounding solution of -253.725 is better than previous of -247.102

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -265.849
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.27778 (3) obj. -270.824 iterations 0
Cbc0038I Pass   3: suminf.    0.17712 (2) obj. -265.849 iterations 5
Cbc0038I Pass   4: suminf.    0.27947 (1) obj. -266.394 iterations 2
Cbc0038I Pass   5: suminf.    0.27743 (1) obj. -265.849 iterations 1
Cbc0038I Pass   6: suminf.    2.37323 (8) obj. -265.849 iterations 10
Cbc0038I Pass   7: suminf.    1.24325 (5) obj. -265.849 iterations 5
Cbc0038I Pass   8: suminf.    1.24325 (5) obj. -265.849 iterations 0
Cbc0038I Pass   9: suminf.    0.75296 (3) obj. -265.849 iterations 5
Cbc0038I Pass  10: suminf.    0.74547 (2) obj. -265.849 iterations 1
Cbc0038I Pass  11: suminf.    0.23091 (1) obj. -284.021 iterations 2
Cbc0038I Pass  12: suminf.    0.17712 (2) obj. -265.849 iterations 2
Cbc0038I Pass  13: suminf.    0.41061 (2) obj. -265.849 iterations 1
Cbc0038I Pass  14: suminf.    0.41061 (2) obj. -265.849 iterations 0
Cbc0038I Pass  15: suminf.    0.23607 (2) obj. -272.089 iterations 2
Cbc0038I Pass  16: suminf.    2.52883 (8) obj. -265.849 iterations 9
Cbc0038I Pass  17: suminf.    1.82541 (7) obj. -265.849 iterations 4
Cbc0038I Pass  18: suminf.    0.63109 (3) obj. -265.849 iterations 7
Cbc0038I Pass  19: suminf.    0.62080 (3) obj. -265.849 iterations 1
Cbc0038I Pass  20: suminf.    1.07487 (4) obj. -265.849 iterations 2
Cbc0038I Pass  21: suminf.    0.98664 (4) obj. -265.849 iterations 2
Cbc0038I Pass  22: suminf.    0.62080 (3) obj. -265.849 iterations 4
Cbc0038I Pass  23: suminf.    0.79672 (4) obj. -265.849 iterations 5
Cbc0038I Pass  24: suminf.    0.27210 (3) obj. -265.849 iterations 4
Cbc0038I Pass  25: suminf.    0.40819 (2) obj. -265.849 iterations 1
Cbc0038I Pass  26: suminf.    0.40819 (2) obj. -265.849 iterations 0
Cbc0038I Pass  27: suminf.    0.01761 (2) obj. -295.167 iterations 4
Cbc0038I Pass  28: suminf.    0.01761 (2) obj. -295.167 iterations 0
Cbc0038I Pass  29: suminf.    0.17352 (1) obj. -265.849 iterations 5
Cbc0038I Pass  30: suminf.    0.18013 (1) obj. -267.615 iterations 1
Cbc0038I Pass  31: suminf.    3.54284 (9) obj. -265.849 iterations 10
Cbc0038I Rounding solution of -279.047 is better than previous of -253.725

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -298.231
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.53671 (5) obj. -298.231 iterations 1
Cbc0038I Pass  32: suminf.    1.01402 (4) obj. -298.231 iterations 7
Cbc0038I Pass  33: suminf.    1.01402 (4) obj. -298.231 iterations 0
Cbc0038I Pass  34: suminf.    1.03893 (4) obj. -298.231 iterations 2
Cbc0038I Pass  35: suminf.    0.89956 (4) obj. -298.231 iterations 2
Cbc0038I Pass  36: suminf.    0.34174 (2) obj. -298.231 iterations 3
Cbc0038I Pass  37: suminf.    0.34174 (2) obj. -298.231 iterations 0
Cbc0038I Pass  38: suminf.    0.80877 (4) obj. -298.231 iterations 2
Cbc0038I Pass  39: suminf.    0.78279 (4) obj. -298.231 iterations 1
Cbc0038I Pass  40: suminf.    0.61761 (3) obj. -298.231 iterations 2
Cbc0038I Pass  41: suminf.    3.38487 (10) obj. -298.231 iterations 11
Cbc0038I Pass  42: suminf.    1.85114 (6) obj. -298.231 iterations 8
Cbc0038I Pass  43: suminf.    0.94600 (5) obj. -298.231 iterations 5
Cbc0038I Pass  44: suminf.    0.94600 (5) obj. -298.231 iterations 0
Cbc0038I Pass  45: suminf.    2.42314 (8) obj. -298.231 iterations 14
Cbc0038I Pass  46: suminf.    1.71075 (6) obj. -298.231 iterations 5
Cbc0038I Pass  47: suminf.    0.55348 (4) obj. -298.231 iterations 3
Cbc0038I Pass  48: suminf.    0.91102 (4) obj. -298.231 iterations 1
Cbc0038I Pass  49: suminf.    0.91102 (4) obj. -298.231 iterations 0
Cbc0038I Pass  50: suminf.    0.84377 (4) obj. -298.231 iterations 1
Cbc0038I Pass  51: suminf.    1.28192 (6) obj. -298.231 iterations 7
Cbc0038I Pass  52: suminf.    1.17698 (5) obj. -298.231 iterations 6
Cbc0038I Pass  53: suminf.    0.67709 (4) obj. -298.231 iterations 4
Cbc0038I Pass  54: suminf.    0.67709 (4) obj. -298.231 iterations 1
Cbc0038I Pass  55: suminf.    1.16409 (4) obj. -298.231 iterations 1
Cbc0038I Pass  56: suminf.    1.87468 (6) obj. -298.231 iterations 5
Cbc0038I Pass  57: suminf.    1.26161 (4) obj. -298.231 iterations 2
Cbc0038I Pass  58: suminf.    0.55603 (3) obj. -298.231 iterations 2
Cbc0038I Pass  59: suminf.    0.83607 (5) obj. -298.231 iterations 2
Cbc0038I Pass  60: suminf.    0.78859 (3) obj. -298.231 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -279.047 - took 0.02 seconds
Cbc0012I Integer solution of -279.04731 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 5 rows 9 columns
Cbc0031I 9 added rows had average density of 10.666667
Cbc0013I At root node, 9 cuts changed objective from -374.96341 to -291.50771 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 373 row cuts average 3.2 elements, 15 column cuts (15 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 314 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.822 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -279.04731 best solution, best possible -291.50771 (1.56 seconds)
Cbc0012I Integer solution of -279.3173 found by DiveCoefficient after 1093 iterations and 3 nodes (1.66 seconds)
Cbc0012I Integer solution of -283.54551 found by rounding after 1110 iterations and 4 nodes (1.66 seconds)
Cbc0001I Search completed - best objective -283.545511, took 1110 iterations and 4 nodes (1.66 seconds)
Cbc0032I Strong branching done 48 times (252 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 5.40966e-06 - average 1.38709e-07, 6 fixed columns
Coin0506I Presolve 19 (-20) rows, 15 (-7) columns and 61 (-53) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Coin0511I After Postsolve, objective 410.55395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Clp0000I Optimal - objective value 410.55395
Coin0511I After Postsolve, objective 410.55395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 410.5539481 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.556%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.47501
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -274.849 iterations 11
Cbc0038I Solution found of -274.849
Cbc0038I Relaxing continuous gives -274.849
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -283.391
Cbc0038I Pass   2: suminf.    0.05602 (1) obj. -283.391 iterations 1
Cbc0038I Pass   3: suminf.    0.17760 (3) obj. -283.391 iterations 3
Cbc0038I Pass   4: suminf.    0.40613 (2) obj. -283.391 iterations 4
Cbc0038I Pass   5: suminf.    0.40613 (2) obj. -283.391 iterations 0
Cbc0038I Pass   6: suminf.    0.78891 (3) obj. -283.391 iterations 3
Cbc0038I Pass   7: suminf.    0.59348 (2) obj. -283.391 iterations 2
Cbc0038I Pass   8: suminf.    1.38327 (8) obj. -283.391 iterations 5
Cbc0038I Pass   9: suminf.    1.04648 (5) obj. -283.391 iterations 4
Cbc0038I Pass  10: suminf.    1.58613 (5) obj. -283.391 iterations 5
Cbc0038I Pass  11: suminf.    1.46603 (5) obj. -283.391 iterations 1
Cbc0038I Pass  12: suminf.    1.32168 (7) obj. -283.391 iterations 6
Cbc0038I Pass  13: suminf.    1.03240 (5) obj. -283.391 iterations 2
Cbc0038I Pass  14: suminf.    0.40582 (3) obj. -283.391 iterations 5
Cbc0038I Pass  15: suminf.    0.40582 (3) obj. -283.391 iterations 0
Cbc0038I Pass  16: suminf.    1.28462 (4) obj. -283.391 iterations 3
Cbc0038I Pass  17: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  18: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  19: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  20: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  21: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I Pass  22: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  23: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  24: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  25: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  26: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I Pass  27: suminf.    0.61544 (3) obj. -283.391 iterations 2
Cbc0038I Pass  28: suminf.    0.60476 (4) obj. -283.391 iterations 3
Cbc0038I Pass  29: suminf.    0.60476 (4) obj. -283.391 iterations 0
Cbc0038I Pass  30: suminf.    1.53701 (5) obj. -283.391 iterations 3
Cbc0038I Pass  31: suminf.    1.28462 (4) obj. -283.391 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -274.849 - took 0.01 seconds
Cbc0012I Integer solution of -274.84862 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 14 rows 11 columns
Cbc0031I 9 added rows had average density of 15.111111
Cbc0013I At root node, 9 cuts changed objective from -360.27441 to -300.59074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 773 row cuts average 4.0 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 535 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -282.86489 found by DiveCoefficient after 1377 iterations and 2 nodes (0.15 seconds)
Cbc0004I Integer solution of -283.54551 found after 1410 iterations and 2 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -283.545511, took 1480 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 48 times (322 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 39 (-8) columns and 297 (-92) elements
Clp1000I sum of infeasibilities 0 - average 0, 22 fixed columns
Coin0506I Presolve 10 (-26) rows, 11 (-28) columns and 29 (-268) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 3.4127987 - largest nonzero change 0 ( 0%) - largest zero change 1.1361155e-05
Clp0000I Optimal - objective value 414.33983
Clp0000I Optimal - objective value 414.33983
Coin0511I After Postsolve, objective 414.33983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2459523 - largest nonzero change 2.5215374e-05 ( 0.0025215374%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 462.17378
Clp0000I Optimal - objective value 462.17378
Clp0000I Optimal - objective value 462.17378
Coin0511I After Postsolve, objective 462.17378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 462.1737813 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 301 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.65284
Cbc0038I Pass   1: suminf.    0.70833 (2) obj. -244.5 iterations 17
Cbc0038I Pass   2: suminf.    0.70833 (2) obj. -244.5 iterations 0
Cbc0038I Solution found of -242.583
Cbc0038I Rounding solution of -251.207 is better than previous of -242.583

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -263.582
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.75683 (5) obj. -263.582 iterations 1
Cbc0038I Pass   4: suminf.    0.80685 (4) obj. -263.582 iterations 8
Cbc0038I Pass   5: suminf.    0.51678 (3) obj. -263.582 iterations 2
Cbc0038I Pass   6: suminf.    0.49214 (2) obj. -263.582 iterations 1
Cbc0038I Pass   7: suminf.    0.15570 (2) obj. -263.582 iterations 2
Cbc0038I Pass   8: suminf.    0.27947 (1) obj. -266.394 iterations 2
Cbc0038I Pass   9: suminf.    0.26894 (1) obj. -263.582 iterations 1
Cbc0038I Pass  10: suminf.    1.45063 (4) obj. -263.582 iterations 8
Cbc0038I Pass  11: suminf.    1.24326 (3) obj. -263.582 iterations 1
Cbc0038I Pass  12: suminf.    0.61438 (2) obj. -263.582 iterations 3
Cbc0038I Pass  13: suminf.    0.61438 (2) obj. -263.582 iterations 0
Cbc0038I Pass  14: suminf.    0.79973 (2) obj. -276.175 iterations 2
Cbc0038I Pass  15: suminf.    0.68077 (2) obj. -263.582 iterations 1
Cbc0038I Pass  16: suminf.    2.51373 (7) obj. -263.582 iterations 8
Cbc0038I Pass  17: suminf.    2.51373 (7) obj. -263.582 iterations 2
Cbc0038I Pass  18: suminf.    0.61027 (2) obj. -263.582 iterations 6
Cbc0038I Pass  19: suminf.    0.61027 (2) obj. -263.582 iterations 0
Cbc0038I Pass  20: suminf.    0.63395 (2) obj. -264.57 iterations 2
Cbc0038I Pass  21: suminf.    0.62462 (2) obj. -263.582 iterations 1
Cbc0038I Pass  22: suminf.    1.49241 (4) obj. -263.582 iterations 5
Cbc0038I Pass  23: suminf.    1.49241 (4) obj. -263.582 iterations 0
Cbc0038I Pass  24: suminf.    0.60091 (2) obj. -263.582 iterations 3
Cbc0038I Pass  25: suminf.    0.60091 (2) obj. -263.582 iterations 0
Cbc0038I Pass  26: suminf.    0.71684 (2) obj. -268.082 iterations 2
Cbc0038I Pass  27: suminf.    0.67434 (2) obj. -263.582 iterations 1
Cbc0038I Pass  28: suminf.    3.19375 (10) obj. -263.582 iterations 11
Cbc0038I Pass  29: suminf.    3.01456 (10) obj. -263.582 iterations 2
Cbc0038I Pass  30: suminf.    2.98953 (10) obj. -263.582 iterations 1
Cbc0038I Pass  31: suminf.    1.43547 (5) obj. -263.582 iterations 7
Cbc0038I Pass  32: suminf.    1.23561 (4) obj. -263.582 iterations 1
Cbc0038I Rounding solution of -279.047 is better than previous of -251.207

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -298.231
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.02726 (6) obj. -298.231 iterations 1
Cbc0038I Pass  33: suminf.    1.53671 (5) obj. -298.231 iterations 1
Cbc0038I Pass  34: suminf.    1.01402 (4) obj. -298.231 iterations 7
Cbc0038I Pass  35: suminf.    1.01402 (4) obj. -298.231 iterations 0
Cbc0038I Pass  36: suminf.    1.03893 (4) obj. -298.231 iterations 2
Cbc0038I Pass  37: suminf.    0.89956 (4) obj. -298.231 iterations 2
Cbc0038I Pass  38: suminf.    0.34174 (2) obj. -298.231 iterations 3
Cbc0038I Pass  39: suminf.    0.34174 (2) obj. -298.231 iterations 0
Cbc0038I Pass  40: suminf.    0.80877 (4) obj. -298.231 iterations 2
Cbc0038I Pass  41: suminf.    0.78279 (4) obj. -298.231 iterations 1
Cbc0038I Pass  42: suminf.    0.61761 (3) obj. -298.231 iterations 2
Cbc0038I Pass  43: suminf.    2.54394 (9) obj. -298.231 iterations 13
Cbc0038I Pass  44: suminf.    2.54394 (9) obj. -298.231 iterations 0
Cbc0038I Pass  45: suminf.    0.68421 (4) obj. -298.231 iterations 8
Cbc0038I Pass  46: suminf.    0.68421 (4) obj. -298.231 iterations 1
Cbc0038I Pass  47: suminf.    1.01132 (4) obj. -298.231 iterations 1
Cbc0038I Pass  48: suminf.    3.28971 (10) obj. -298.231 iterations 11
Cbc0038I Pass  49: suminf.    2.80270 (8) obj. -298.231 iterations 4
Cbc0038I Pass  50: suminf.    2.45558 (7) obj. -298.231 iterations 1
Cbc0038I Pass  51: suminf.    0.60406 (3) obj. -298.231 iterations 8
Cbc0038I Pass  52: suminf.    0.60406 (3) obj. -298.231 iterations 1
Cbc0038I Pass  53: suminf.    0.84122 (4) obj. -298.231 iterations 3
Cbc0038I Pass  54: suminf.    0.78675 (4) obj. -298.231 iterations 2
Cbc0038I Pass  55: suminf.    0.85153 (4) obj. -298.231 iterations 3
Cbc0038I Pass  56: suminf.    2.23351 (7) obj. -298.231 iterations 10
Cbc0038I Pass  57: suminf.    2.00882 (6) obj. -298.231 iterations 1
Cbc0038I Pass  58: suminf.    1.40092 (4) obj. -298.231 iterations 6
Cbc0038I Pass  59: suminf.    0.83499 (3) obj. -298.231 iterations 2
Cbc0038I Pass  60: suminf.    0.30619 (2) obj. -298.231 iterations 1
Cbc0038I Pass  61: suminf.    0.52430 (4) obj. -298.231 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -279.047 - took 0.02 seconds
Cbc0012I Integer solution of -279.04731 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 5 rows 9 columns
Cbc0031I 11 added rows had average density of 11.454545
Cbc0013I At root node, 11 cuts changed objective from -374.96341 to -289.66715 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 407 row cuts average 2.7 elements, 15 column cuts (15 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 490 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 147 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.842 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -279.04731 best solution, best possible -289.66715 (1.65 seconds)
Cbc0012I Integer solution of -283.54551 found by rounding after 1326 iterations and 2 nodes (1.73 seconds)
Cbc0001I Search completed - best objective -283.545511, took 1385 iterations and 4 nodes (1.75 seconds)
Cbc0032I Strong branching done 60 times (383 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.76

