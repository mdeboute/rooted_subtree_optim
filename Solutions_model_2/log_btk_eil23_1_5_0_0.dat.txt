Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-9) rows, 23 (-2) columns and 118 (-17) elements
Clp1000I sum of infeasibilities 0.00321044 - average 8.02611e-05, 18 fixed columns
Coin0506I Presolve 8 (-32) rows, 5 (-18) columns and 19 (-99) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 4226.9552
Clp0000I Optimal - objective value 4226.9552
Coin0511I After Postsolve, objective 4226.9552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20028511 - largest nonzero change 0 ( 0%) - largest zero change 2.8326758e-05
Clp0000I Optimal - objective value 4226.9552
Clp0000I Optimal - objective value 4226.9552
Clp0000I Optimal - objective value 4226.9552
Coin0511I After Postsolve, objective 4226.9552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4226.955244 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 23 columns (22 integer (22 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.458%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 4.0281
Cbc0038I Pass   1: suminf.    0.73694 (2) obj. -2902.92 iterations 10
Cbc0038I Solution found of -236.282
Cbc0038I Relaxing continuous gives -236.282
Cbc0038I Rounding solution of -636.64 is better than previous of -236.282

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -636.64 to -2297.51 (0.01 seconds)
Cbc0038I Round again with cutoff of -2369.81
Cbc0038I Pass   2: suminf.    0.73694 (2) obj. -2902.92 iterations 0
Cbc0038I Pass   3: suminf.    0.30872 (2) obj. -2369.81 iterations 3
Cbc0038I Pass   4: suminf.    0.11013 (2) obj. -2369.81 iterations 1
Cbc0038I Pass   5: suminf.    0.34985 (2) obj. -2369.81 iterations 3
Cbc0038I Pass   6: suminf.    0.46403 (1) obj. -2369.81 iterations 7
Cbc0038I Pass   7: suminf.    0.32049 (1) obj. -2668.55 iterations 1
Cbc0038I Pass   8: suminf.    0.46403 (1) obj. -2369.81 iterations 1
Cbc0038I Pass   9: suminf.    0.41616 (1) obj. -2369.81 iterations 5
Cbc0038I Pass  10: suminf.    0.35098 (1) obj. -2505.49 iterations 2
Cbc0038I Pass  11: suminf.    0.41616 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  12: suminf.    0.36927 (1) obj. -2470.75 iterations 2
Cbc0038I Pass  13: suminf.    0.36927 (1) obj. -2470.75 iterations 0
Cbc0038I Pass  14: suminf.    0.41777 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  15: suminf.    1.69495 (5) obj. -2369.81 iterations 7
Cbc0038I Pass  16: suminf.    0.70229 (2) obj. -2369.81 iterations 2
Cbc0038I Pass  17: suminf.    0.33878 (1) obj. -2499.93 iterations 1
Cbc0038I Pass  18: suminf.    0.40130 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  19: suminf.    1.06403 (3) obj. -2369.81 iterations 5
Cbc0038I Pass  20: suminf.    0.77656 (2) obj. -2369.81 iterations 2
Cbc0038I Pass  21: suminf.    0.39293 (1) obj. -2437.29 iterations 2
Cbc0038I Pass  22: suminf.    0.36051 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  23: suminf.    0.68710 (5) obj. -2369.81 iterations 4
Cbc0038I Pass  24: suminf.    0.68710 (5) obj. -2369.81 iterations 1
Cbc0038I Pass  25: suminf.    0.75385 (2) obj. -2473.03 iterations 7
Cbc0038I Pass  26: suminf.    0.66048 (2) obj. -2369.81 iterations 1
Cbc0038I Pass  27: suminf.    0.77595 (2) obj. -2369.81 iterations 1
Cbc0038I Pass  28: suminf.    0.77595 (2) obj. -2369.81 iterations 0
Cbc0038I Pass  29: suminf.    0.47984 (2) obj. -2369.81 iterations 4
Cbc0038I Pass  30: suminf.    0.31195 (1) obj. -2428.71 iterations 3
Cbc0038I Pass  31: suminf.    0.47984 (2) obj. -2369.81 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -2297.51 to -2379.59 (0.02 seconds)
Cbc0038I Round again with cutoff of -2507.78
Cbc0038I Pass  31: suminf.    0.73694 (2) obj. -2902.92 iterations 0
Cbc0038I Pass  32: suminf.    0.37338 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  33: suminf.    0.36513 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  34: suminf.    0.47075 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  35: suminf.    0.64650 (4) obj. -2507.78 iterations 9
Cbc0038I Pass  36: suminf.    0.49351 (3) obj. -2507.78 iterations 2
Cbc0038I Pass  37: suminf.    0.64868 (2) obj. -2507.78 iterations 2
Cbc0038I Pass  38: suminf.    0.35089 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  39: suminf.    1.11347 (5) obj. -2507.78 iterations 3
Cbc0038I Pass  40: suminf.    0.78223 (4) obj. -2507.78 iterations 1
Cbc0038I Pass  41: suminf.    0.81423 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  42: suminf.    0.36299 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  43: suminf.    1.37667 (6) obj. -2507.78 iterations 8
Cbc0038I Pass  44: suminf.    0.60186 (3) obj. -2507.78 iterations 3
Cbc0038I Pass  45: suminf.    0.49057 (2) obj. -2507.78 iterations 2
Cbc0038I Pass  46: suminf.    0.26093 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  47: suminf.    0.48600 (2) obj. -2574.81 iterations 9
Cbc0038I Pass  48: suminf.    0.17780 (1) obj. -2591.21 iterations 5
Cbc0038I Pass  49: suminf.    0.56494 (2) obj. -2507.78 iterations 2
Cbc0038I Pass  50: suminf.    0.13512 (1) obj. -2587.8 iterations 7
Cbc0038I Pass  51: suminf.    0.13512 (1) obj. -2587.8 iterations 3
Cbc0038I Pass  52: suminf.    0.17262 (1) obj. -2507.78 iterations 1
Cbc0038I Pass  53: suminf.    0.68715 (4) obj. -2507.78 iterations 6
Cbc0038I Pass  54: suminf.    0.68715 (4) obj. -2507.78 iterations 0
Cbc0038I Pass  55: suminf.    0.73117 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  56: suminf.    0.36272 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  57: suminf.    0.37663 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  58: suminf.    0.37663 (2) obj. -2507.78 iterations 0
Cbc0038I Pass  59: suminf.    0.89261 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  60: suminf.    0.82922 (2) obj. -2507.78 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -2379.59 to -2417.55 (0.03 seconds)
Cbc0038I Round again with cutoff of -2661.6
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.73694 (2) obj. -2902.92 iterations 0
Cbc0038I Pass  61: suminf.    0.67995 (2) obj. -2661.6 iterations 2
Cbc0038I Pass  62: suminf.    0.67995 (2) obj. -2661.6 iterations 0
Cbc0038I Pass  63: suminf.    0.60593 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  64: suminf.    1.81399 (5) obj. -2661.6 iterations 2
Cbc0038I Pass  65: suminf.    0.64852 (2) obj. -2661.6 iterations 3
Cbc0038I Pass  66: suminf.    0.66732 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  67: suminf.    2.75706 (8) obj. -2661.6 iterations 7
Cbc0038I Pass  68: suminf.    0.83238 (4) obj. -2661.6 iterations 7
Cbc0038I Pass  69: suminf.    0.71284 (3) obj. -2661.6 iterations 1
Cbc0038I Pass  70: suminf.    0.35999 (1) obj. -2661.6 iterations 3
Cbc0038I Pass  71: suminf.    0.27537 (1) obj. -2837.72 iterations 1
Cbc0038I Pass  72: suminf.    0.92062 (9) obj. -2661.6 iterations 8
Cbc0038I Pass  73: suminf.    0.63474 (5) obj. -2661.6 iterations 3
Cbc0038I Pass  74: suminf.    0.56745 (2) obj. -2668.13 iterations 3
Cbc0038I Pass  75: suminf.    0.56155 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  76: suminf.    0.58085 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  77: suminf.    0.99492 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  78: suminf.    0.99492 (3) obj. -2661.6 iterations 0
Cbc0038I Pass  79: suminf.    0.85256 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  80: suminf.    0.85256 (3) obj. -2661.6 iterations 0
Cbc0038I Pass  81: suminf.    1.05386 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  82: suminf.    1.05386 (3) obj. -2661.6 iterations 0
Cbc0038I Pass  83: suminf.    0.71517 (2) obj. -2661.6 iterations 2
Cbc0038I Pass  84: suminf.    0.59481 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  85: suminf.    1.18356 (4) obj. -2661.6 iterations 2
Cbc0038I Pass  86: suminf.    0.76368 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  87: suminf.    1.63790 (4) obj. -2661.6 iterations 3
Cbc0038I Pass  88: suminf.    1.11470 (4) obj. -2661.6 iterations 2
Cbc0038I Pass  89: suminf.    1.11470 (4) obj. -2661.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2417.55 - took 0.04 seconds
Cbc0012I Integer solution of -2417.5478 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 23 columns, reduced to 26 rows 16 columns
Cbc0012I Integer solution of -2503.3878 found by DiveCoefficient after 534 iterations and 0 nodes (0.09 seconds)
Cbc0031I 8 added rows had average density of 12.875
Cbc0013I At root node, 8 cuts changed objective from -3020.5348 to -2503.3885 in 65 passes
Cbc0014I Cut generator 0 (Probing) - 161 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 200 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 0.00068164971 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -2503.3878, took 534 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-9) rows, 43 (-3) columns and 335 (-53) elements
Clp1000I sum of infeasibilities 0 - average 0, 20 fixed columns
Coin0506I Presolve 23 (-16) rows, 23 (-20) columns and 66 (-269) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 4353.2159
Clp0000I Optimal - objective value 4353.2159
Coin0511I After Postsolve, objective 4353.2159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0502115 - largest nonzero change 0 ( 0%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 4353.2159
Clp0000I Optimal - objective value 4353.2159
Clp0000I Optimal - objective value 4353.2159
Coin0511I After Postsolve, objective 4353.2159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4353.215913 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 43 columns (43 integer (43 of which binary)) and 337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.02562
Cbc0038I Pass   1: suminf.    1.08638 (8) obj. -2566.73 iterations 19
Cbc0038I Pass   2: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Solution found of -691.345
Cbc0038I Rounding solution of -1196.39 is better than previous of -691.345

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -1196.39 to -1468.76 (0.01 seconds)
Cbc0038I Round again with cutoff of -1596.12
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass   4: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass   5: suminf.    0.43473 (1) obj. -1596.12 iterations 8
Cbc0038I Pass   6: suminf.    0.23049 (1) obj. -2292.88 iterations 1
Cbc0038I Pass   7: suminf.    1.96994 (6) obj. -1596.12 iterations 8
Cbc0038I Pass   8: suminf.    1.18681 (4) obj. -1596.12 iterations 2
Cbc0038I Pass   9: suminf.    0.34024 (1) obj. -2097.67 iterations 4
Cbc0038I Pass  10: suminf.    0.41877 (1) obj. -1596.12 iterations 1
Cbc0038I Pass  11: suminf.    1.74662 (5) obj. -1596.12 iterations 11
Cbc0038I Pass  12: suminf.    0.15585 (1) obj. -2090.85 iterations 7
Cbc0038I Pass  13: suminf.    0.39357 (1) obj. -1596.12 iterations 1
Cbc0038I Pass  14: suminf.    1.27157 (4) obj. -2257.75 iterations 6
Cbc0038I Pass  15: suminf.    0.77157 (3) obj. -2257.25 iterations 1
Cbc0038I Pass  16: suminf.    0.36151 (1) obj. -1596.12 iterations 3
Cbc0038I Pass  17: suminf.    0.32157 (1) obj. -2255.7 iterations 1
Cbc0038I Pass  18: suminf.    1.44736 (4) obj. -1596.12 iterations 9
Cbc0038I Pass  19: suminf.    0.66402 (2) obj. -1596.12 iterations 3
Cbc0038I Pass  20: suminf.    0.38589 (1) obj. -2147.05 iterations 2
Cbc0038I Pass  21: suminf.    0.34940 (1) obj. -1596.12 iterations 1
Cbc0038I Pass  22: suminf.    1.74963 (6) obj. -1633.68 iterations 11
Cbc0038I Solution found of -1619.5
Cbc0038I Rounding solution of -1878.93 is better than previous of -1619.5

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -1878.93 to -1900.42 (0.02 seconds)
Cbc0038I Round again with cutoff of -2068.79
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  23: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass  24: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass  25: suminf.    0.33816 (1) obj. -2068.79 iterations 8
Cbc0038I Pass  26: suminf.    0.23049 (1) obj. -2292.88 iterations 1
Cbc0038I Pass  27: suminf.    2.05259 (8) obj. -2068.79 iterations 18
Cbc0038I Pass  28: suminf.    1.01639 (4) obj. -2068.79 iterations 5
Cbc0038I Pass  29: suminf.    0.57475 (2) obj. -2068.79 iterations 4
Cbc0038I Pass  30: suminf.    0.42780 (1) obj. -2267.89 iterations 2
Cbc0038I Pass  31: suminf.    0.47653 (1) obj. -2068.79 iterations 1
Cbc0038I Pass  32: suminf.    1.08130 (3) obj. -2068.79 iterations 9
Cbc0038I Pass  33: suminf.    0.34630 (1) obj. -2068.79 iterations 2
Cbc0038I Pass  34: suminf.    0.38589 (1) obj. -2626.17 iterations 1
Cbc0038I Pass  35: suminf.    0.46343 (1) obj. -2607.37 iterations 3
Cbc0038I Pass  36: suminf.    0.20465 (1) obj. -2068.79 iterations 2
Cbc0038I Pass  37: suminf.    0.46343 (1) obj. -2607.37 iterations 1
Cbc0038I Pass  38: suminf.    3.01953 (7) obj. -2068.79 iterations 10
Cbc0038I Pass  39: suminf.    1.00644 (4) obj. -2068.79 iterations 4
Cbc0038I Pass  40: suminf.    0.27968 (1) obj. -2506.97 iterations 4
Cbc0038I Pass  41: suminf.    0.06914 (1) obj. -2068.79 iterations 1
Cbc0038I Pass  42: suminf.    0.48244 (2) obj. -2068.79 iterations 7
Cbc0038I Pass  43: suminf.    0.13163 (1) obj. -2068.79 iterations 2
Cbc0038I Pass  44: suminf.    0.18780 (1) obj. -2185.68 iterations 1
Cbc0038I Pass  45: suminf.    1.86627 (5) obj. -2068.79 iterations 10
Cbc0038I Pass  46: suminf.    1.03586 (4) obj. -2068.79 iterations 9
Cbc0038I Pass  47: suminf.    0.55788 (3) obj. -2068.79 iterations 1
Cbc0038I Pass  48: suminf.    0.43024 (1) obj. -2169.32 iterations 4
Cbc0038I Pass  49: suminf.    0.47855 (1) obj. -2068.79 iterations 1
Cbc0038I Pass  50: suminf.    1.27609 (6) obj. -2068.79 iterations 6
Cbc0038I Pass  51: suminf.    0.74307 (3) obj. -2068.79 iterations 3
Cbc0038I Pass  52: suminf.    0.44780 (1) obj. -2197.56 iterations 4
Cbc0038I Rounding solution of -2326.15 is better than previous of -1900.42

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -2326.15 to -2503.39 (0.03 seconds)
Cbc0038I Round again with cutoff of -2575.06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  52: suminf.    1.25462 (10) obj. -2575.06 iterations 2
Cbc0038I Pass  53: suminf.    1.19686 (9) obj. -2575.06 iterations 1
Cbc0038I Pass  54: suminf.    0.52090 (2) obj. -2575.06 iterations 10
Cbc0038I Pass  55: suminf.    0.32157 (1) obj. -2605.02 iterations 2
Cbc0038I Pass  56: suminf.    0.33597 (1) obj. -2575.06 iterations 1
Cbc0038I Pass  57: suminf.    1.26361 (4) obj. -2575.06 iterations 5
Cbc0038I Pass  58: suminf.    0.82788 (3) obj. -2575.06 iterations 2
Cbc0038I Pass  59: suminf.    0.72174 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  60: suminf.    0.63008 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  61: suminf.    1.48690 (8) obj. -2575.06 iterations 9
Cbc0038I Pass  62: suminf.    0.85875 (3) obj. -2575.06 iterations 4
Cbc0038I Pass  63: suminf.    0.58589 (3) obj. -2575.06 iterations 3
Cbc0038I Pass  64: suminf.    0.58589 (3) obj. -2575.06 iterations 0
Cbc0038I Pass  65: suminf.    0.70296 (5) obj. -2575.06 iterations 4
Cbc0038I Pass  66: suminf.    0.68767 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  67: suminf.    1.26208 (6) obj. -2575.06 iterations 5
Cbc0038I Pass  68: suminf.    1.03513 (4) obj. -2575.06 iterations 2
Cbc0038I Pass  69: suminf.    0.58020 (3) obj. -2575.06 iterations 4
Cbc0038I Pass  70: suminf.    0.58020 (3) obj. -2575.06 iterations 0
Cbc0038I Pass  71: suminf.    0.68932 (5) obj. -2575.06 iterations 2
Cbc0038I Pass  72: suminf.    0.67455 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  73: suminf.    1.37859 (4) obj. -2575.06 iterations 7
Cbc0038I Pass  74: suminf.    0.91289 (2) obj. -2575.06 iterations 3
Cbc0038I Pass  75: suminf.    0.54705 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  76: suminf.    0.59944 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  77: suminf.    1.46986 (6) obj. -2575.06 iterations 5
Cbc0038I Pass  78: suminf.    0.71545 (3) obj. -2575.06 iterations 4
Cbc0038I Pass  79: suminf.    0.60503 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  80: suminf.    0.54351 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  81: suminf.    0.78810 (4) obj. -2575.06 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2503.39 - took 0.03 seconds
Cbc0012I Integer solution of -2503.3878 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 43 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 8.5
Cbc0013I At root node, 4 cuts changed objective from -2742.2817 to -2503.6378 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 2.1 elements, 27 column cuts (27 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.24995975 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -2503.3878, took 84 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-9) rows, 23 (-2) columns and 118 (-17) elements
Clp1000I sum of infeasibilities 0.00321044 - average 8.02611e-05, 18 fixed columns
Coin0506I Presolve 8 (-32) rows, 5 (-18) columns and 19 (-99) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 4226.9552
Clp0000I Optimal - objective value 4226.9552
Coin0511I After Postsolve, objective 4226.9552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20028511 - largest nonzero change 0 ( 0%) - largest zero change 2.8326758e-05
Clp0000I Optimal - objective value 4226.9552
Clp0000I Optimal - objective value 4226.9552
Clp0000I Optimal - objective value 4226.9552
Coin0511I After Postsolve, objective 4226.9552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4226.955244 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 23 columns (22 integer (22 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.458%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 4.0281
Cbc0038I Pass   1: suminf.    0.73694 (2) obj. -2902.92 iterations 10
Cbc0038I Solution found of -236.282
Cbc0038I Relaxing continuous gives -236.282
Cbc0038I Rounding solution of -636.64 is better than previous of -236.282

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -636.64 to -2297.51 (0.01 seconds)
Cbc0038I Round again with cutoff of -2369.81
Cbc0038I Pass   2: suminf.    0.73694 (2) obj. -2902.92 iterations 0
Cbc0038I Pass   3: suminf.    0.30872 (2) obj. -2369.81 iterations 3
Cbc0038I Pass   4: suminf.    0.11013 (2) obj. -2369.81 iterations 1
Cbc0038I Pass   5: suminf.    0.34985 (2) obj. -2369.81 iterations 3
Cbc0038I Pass   6: suminf.    0.46403 (1) obj. -2369.81 iterations 7
Cbc0038I Pass   7: suminf.    0.32049 (1) obj. -2668.55 iterations 1
Cbc0038I Pass   8: suminf.    0.46403 (1) obj. -2369.81 iterations 1
Cbc0038I Pass   9: suminf.    0.41616 (1) obj. -2369.81 iterations 5
Cbc0038I Pass  10: suminf.    0.35098 (1) obj. -2505.49 iterations 2
Cbc0038I Pass  11: suminf.    0.41616 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  12: suminf.    0.36927 (1) obj. -2470.75 iterations 2
Cbc0038I Pass  13: suminf.    0.36927 (1) obj. -2470.75 iterations 0
Cbc0038I Pass  14: suminf.    0.41777 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  15: suminf.    1.69495 (5) obj. -2369.81 iterations 7
Cbc0038I Pass  16: suminf.    0.70229 (2) obj. -2369.81 iterations 2
Cbc0038I Pass  17: suminf.    0.33878 (1) obj. -2499.93 iterations 1
Cbc0038I Pass  18: suminf.    0.40130 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  19: suminf.    1.06403 (3) obj. -2369.81 iterations 5
Cbc0038I Pass  20: suminf.    0.77656 (2) obj. -2369.81 iterations 2
Cbc0038I Pass  21: suminf.    0.39293 (1) obj. -2437.29 iterations 2
Cbc0038I Pass  22: suminf.    0.36051 (1) obj. -2369.81 iterations 1
Cbc0038I Pass  23: suminf.    0.68710 (5) obj. -2369.81 iterations 4
Cbc0038I Pass  24: suminf.    0.68710 (5) obj. -2369.81 iterations 1
Cbc0038I Pass  25: suminf.    0.75385 (2) obj. -2473.03 iterations 7
Cbc0038I Pass  26: suminf.    0.66048 (2) obj. -2369.81 iterations 1
Cbc0038I Pass  27: suminf.    0.77595 (2) obj. -2369.81 iterations 1
Cbc0038I Pass  28: suminf.    0.77595 (2) obj. -2369.81 iterations 0
Cbc0038I Pass  29: suminf.    0.47984 (2) obj. -2369.81 iterations 4
Cbc0038I Pass  30: suminf.    0.31195 (1) obj. -2428.71 iterations 3
Cbc0038I Pass  31: suminf.    0.47984 (2) obj. -2369.81 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -2297.51 to -2379.59 (0.02 seconds)
Cbc0038I Round again with cutoff of -2507.78
Cbc0038I Pass  31: suminf.    0.73694 (2) obj. -2902.92 iterations 0
Cbc0038I Pass  32: suminf.    0.37338 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  33: suminf.    0.36513 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  34: suminf.    0.47075 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  35: suminf.    0.64650 (4) obj. -2507.78 iterations 9
Cbc0038I Pass  36: suminf.    0.49351 (3) obj. -2507.78 iterations 2
Cbc0038I Pass  37: suminf.    0.64868 (2) obj. -2507.78 iterations 2
Cbc0038I Pass  38: suminf.    0.35089 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  39: suminf.    1.11347 (5) obj. -2507.78 iterations 3
Cbc0038I Pass  40: suminf.    0.78223 (4) obj. -2507.78 iterations 1
Cbc0038I Pass  41: suminf.    0.81423 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  42: suminf.    0.36299 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  43: suminf.    1.37667 (6) obj. -2507.78 iterations 8
Cbc0038I Pass  44: suminf.    0.60186 (3) obj. -2507.78 iterations 3
Cbc0038I Pass  45: suminf.    0.49057 (2) obj. -2507.78 iterations 2
Cbc0038I Pass  46: suminf.    0.26093 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  47: suminf.    0.48600 (2) obj. -2574.81 iterations 9
Cbc0038I Pass  48: suminf.    0.17780 (1) obj. -2591.21 iterations 5
Cbc0038I Pass  49: suminf.    0.56494 (2) obj. -2507.78 iterations 2
Cbc0038I Pass  50: suminf.    0.13512 (1) obj. -2587.8 iterations 7
Cbc0038I Pass  51: suminf.    0.13512 (1) obj. -2587.8 iterations 3
Cbc0038I Pass  52: suminf.    0.17262 (1) obj. -2507.78 iterations 1
Cbc0038I Pass  53: suminf.    0.68715 (4) obj. -2507.78 iterations 6
Cbc0038I Pass  54: suminf.    0.68715 (4) obj. -2507.78 iterations 0
Cbc0038I Pass  55: suminf.    0.73117 (2) obj. -2507.78 iterations 3
Cbc0038I Pass  56: suminf.    0.36272 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  57: suminf.    0.37663 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  58: suminf.    0.37663 (2) obj. -2507.78 iterations 0
Cbc0038I Pass  59: suminf.    0.89261 (2) obj. -2507.78 iterations 1
Cbc0038I Pass  60: suminf.    0.82922 (2) obj. -2507.78 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -2379.59 to -2417.55 (0.03 seconds)
Cbc0038I Round again with cutoff of -2661.6
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.73694 (2) obj. -2902.92 iterations 0
Cbc0038I Pass  61: suminf.    0.67995 (2) obj. -2661.6 iterations 2
Cbc0038I Pass  62: suminf.    0.67995 (2) obj. -2661.6 iterations 0
Cbc0038I Pass  63: suminf.    0.60593 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  64: suminf.    1.81399 (5) obj. -2661.6 iterations 2
Cbc0038I Pass  65: suminf.    0.64852 (2) obj. -2661.6 iterations 3
Cbc0038I Pass  66: suminf.    0.66732 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  67: suminf.    2.75706 (8) obj. -2661.6 iterations 7
Cbc0038I Pass  68: suminf.    0.83238 (4) obj. -2661.6 iterations 7
Cbc0038I Pass  69: suminf.    0.71284 (3) obj. -2661.6 iterations 1
Cbc0038I Pass  70: suminf.    0.35999 (1) obj. -2661.6 iterations 3
Cbc0038I Pass  71: suminf.    0.27537 (1) obj. -2837.72 iterations 1
Cbc0038I Pass  72: suminf.    0.92062 (9) obj. -2661.6 iterations 8
Cbc0038I Pass  73: suminf.    0.63474 (5) obj. -2661.6 iterations 3
Cbc0038I Pass  74: suminf.    0.56745 (2) obj. -2668.13 iterations 3
Cbc0038I Pass  75: suminf.    0.56155 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  76: suminf.    0.58085 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  77: suminf.    0.99492 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  78: suminf.    0.99492 (3) obj. -2661.6 iterations 0
Cbc0038I Pass  79: suminf.    0.85256 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  80: suminf.    0.85256 (3) obj. -2661.6 iterations 0
Cbc0038I Pass  81: suminf.    1.05386 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  82: suminf.    1.05386 (3) obj. -2661.6 iterations 0
Cbc0038I Pass  83: suminf.    0.71517 (2) obj. -2661.6 iterations 2
Cbc0038I Pass  84: suminf.    0.59481 (2) obj. -2661.6 iterations 1
Cbc0038I Pass  85: suminf.    1.18356 (4) obj. -2661.6 iterations 2
Cbc0038I Pass  86: suminf.    0.76368 (3) obj. -2661.6 iterations 2
Cbc0038I Pass  87: suminf.    1.63790 (4) obj. -2661.6 iterations 3
Cbc0038I Pass  88: suminf.    1.11470 (4) obj. -2661.6 iterations 2
Cbc0038I Pass  89: suminf.    1.11470 (4) obj. -2661.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2417.55 - took 0.03 seconds
Cbc0012I Integer solution of -2417.5478 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 23 columns, reduced to 26 rows 16 columns
Cbc0012I Integer solution of -2503.3878 found by DiveCoefficient after 534 iterations and 0 nodes (0.10 seconds)
Cbc0031I 8 added rows had average density of 12.875
Cbc0013I At root node, 8 cuts changed objective from -3020.5348 to -2503.3885 in 65 passes
Cbc0014I Cut generator 0 (Probing) - 161 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 200 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 0.00068164971 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -2503.3878, took 534 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 43 (-4) columns and 335 (-54) elements
Clp1000I sum of infeasibilities 0 - average 0, 20 fixed columns
Coin0506I Presolve 23 (-16) rows, 23 (-20) columns and 66 (-269) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 4353.2159
Clp0000I Optimal - objective value 4353.2159
Coin0511I After Postsolve, objective 4353.2159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0502115 - largest nonzero change 0 ( 0%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 4353.2159
Clp0000I Optimal - objective value 4353.2159
Clp0000I Optimal - objective value 4353.2159
Coin0511I After Postsolve, objective 4353.2159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4353.215913 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 43 columns (43 integer (43 of which binary)) and 337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.02562
Cbc0038I Pass   1: suminf.    1.08638 (8) obj. -2566.73 iterations 19
Cbc0038I Pass   2: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Solution found of -691.345
Cbc0038I Rounding solution of -1196.39 is better than previous of -691.345

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -1196.39 to -1468.76 (0.02 seconds)
Cbc0038I Round again with cutoff of -1596.12
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass   4: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass   5: suminf.    0.43473 (1) obj. -1596.12 iterations 8
Cbc0038I Pass   6: suminf.    0.23049 (1) obj. -2292.88 iterations 1
Cbc0038I Pass   7: suminf.    1.96994 (6) obj. -1596.12 iterations 8
Cbc0038I Pass   8: suminf.    1.18681 (4) obj. -1596.12 iterations 2
Cbc0038I Pass   9: suminf.    0.34024 (1) obj. -2097.67 iterations 4
Cbc0038I Pass  10: suminf.    0.41877 (1) obj. -1596.12 iterations 1
Cbc0038I Pass  11: suminf.    1.74662 (5) obj. -1596.12 iterations 11
Cbc0038I Pass  12: suminf.    0.15585 (1) obj. -2090.85 iterations 7
Cbc0038I Pass  13: suminf.    0.39357 (1) obj. -1596.12 iterations 1
Cbc0038I Pass  14: suminf.    1.27157 (4) obj. -2257.75 iterations 6
Cbc0038I Pass  15: suminf.    0.77157 (3) obj. -2257.25 iterations 1
Cbc0038I Pass  16: suminf.    0.36151 (1) obj. -1596.12 iterations 3
Cbc0038I Pass  17: suminf.    0.32157 (1) obj. -2255.7 iterations 1
Cbc0038I Pass  18: suminf.    1.44736 (4) obj. -1596.12 iterations 9
Cbc0038I Pass  19: suminf.    0.66402 (2) obj. -1596.12 iterations 3
Cbc0038I Pass  20: suminf.    0.38589 (1) obj. -2147.05 iterations 2
Cbc0038I Pass  21: suminf.    0.34940 (1) obj. -1596.12 iterations 1
Cbc0038I Pass  22: suminf.    1.74963 (6) obj. -1633.68 iterations 11
Cbc0038I Solution found of -1619.5
Cbc0038I Rounding solution of -1878.93 is better than previous of -1619.5

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -1878.93 to -1900.42 (0.02 seconds)
Cbc0038I Round again with cutoff of -2068.79
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  23: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass  24: suminf.    1.08638 (8) obj. -2566.73 iterations 0
Cbc0038I Pass  25: suminf.    0.33816 (1) obj. -2068.79 iterations 8
Cbc0038I Pass  26: suminf.    0.23049 (1) obj. -2292.88 iterations 1
Cbc0038I Pass  27: suminf.    2.05259 (8) obj. -2068.79 iterations 18
Cbc0038I Pass  28: suminf.    1.01639 (4) obj. -2068.79 iterations 5
Cbc0038I Pass  29: suminf.    0.57475 (2) obj. -2068.79 iterations 4
Cbc0038I Pass  30: suminf.    0.42780 (1) obj. -2267.89 iterations 2
Cbc0038I Pass  31: suminf.    0.47653 (1) obj. -2068.79 iterations 1
Cbc0038I Pass  32: suminf.    1.08130 (3) obj. -2068.79 iterations 9
Cbc0038I Pass  33: suminf.    0.34630 (1) obj. -2068.79 iterations 2
Cbc0038I Pass  34: suminf.    0.38589 (1) obj. -2626.17 iterations 1
Cbc0038I Pass  35: suminf.    0.46343 (1) obj. -2607.37 iterations 3
Cbc0038I Pass  36: suminf.    0.20465 (1) obj. -2068.79 iterations 2
Cbc0038I Pass  37: suminf.    0.46343 (1) obj. -2607.37 iterations 1
Cbc0038I Pass  38: suminf.    3.01953 (7) obj. -2068.79 iterations 10
Cbc0038I Pass  39: suminf.    1.00644 (4) obj. -2068.79 iterations 4
Cbc0038I Pass  40: suminf.    0.27968 (1) obj. -2506.97 iterations 4
Cbc0038I Pass  41: suminf.    0.06914 (1) obj. -2068.79 iterations 1
Cbc0038I Pass  42: suminf.    0.48244 (2) obj. -2068.79 iterations 7
Cbc0038I Pass  43: suminf.    0.13163 (1) obj. -2068.79 iterations 2
Cbc0038I Pass  44: suminf.    0.18780 (1) obj. -2185.68 iterations 1
Cbc0038I Pass  45: suminf.    1.86627 (5) obj. -2068.79 iterations 10
Cbc0038I Pass  46: suminf.    1.03586 (4) obj. -2068.79 iterations 9
Cbc0038I Pass  47: suminf.    0.55788 (3) obj. -2068.79 iterations 1
Cbc0038I Pass  48: suminf.    0.43024 (1) obj. -2169.32 iterations 4
Cbc0038I Pass  49: suminf.    0.47855 (1) obj. -2068.79 iterations 1
Cbc0038I Pass  50: suminf.    1.27609 (6) obj. -2068.79 iterations 6
Cbc0038I Pass  51: suminf.    0.74307 (3) obj. -2068.79 iterations 3
Cbc0038I Pass  52: suminf.    0.44780 (1) obj. -2197.56 iterations 4
Cbc0038I Rounding solution of -2326.15 is better than previous of -1900.42

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -2326.15 to -2503.39 (0.04 seconds)
Cbc0038I Round again with cutoff of -2575.06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  52: suminf.    1.25462 (10) obj. -2575.06 iterations 2
Cbc0038I Pass  53: suminf.    1.19686 (9) obj. -2575.06 iterations 1
Cbc0038I Pass  54: suminf.    0.52090 (2) obj. -2575.06 iterations 10
Cbc0038I Pass  55: suminf.    0.32157 (1) obj. -2605.02 iterations 2
Cbc0038I Pass  56: suminf.    0.33597 (1) obj. -2575.06 iterations 1
Cbc0038I Pass  57: suminf.    1.26361 (4) obj. -2575.06 iterations 5
Cbc0038I Pass  58: suminf.    0.82788 (3) obj. -2575.06 iterations 2
Cbc0038I Pass  59: suminf.    0.72174 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  60: suminf.    0.63008 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  61: suminf.    1.48690 (8) obj. -2575.06 iterations 9
Cbc0038I Pass  62: suminf.    0.85875 (3) obj. -2575.06 iterations 4
Cbc0038I Pass  63: suminf.    0.58589 (3) obj. -2575.06 iterations 3
Cbc0038I Pass  64: suminf.    0.58589 (3) obj. -2575.06 iterations 0
Cbc0038I Pass  65: suminf.    0.70296 (5) obj. -2575.06 iterations 4
Cbc0038I Pass  66: suminf.    0.68767 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  67: suminf.    1.26208 (6) obj. -2575.06 iterations 5
Cbc0038I Pass  68: suminf.    1.03513 (4) obj. -2575.06 iterations 2
Cbc0038I Pass  69: suminf.    0.58020 (3) obj. -2575.06 iterations 4
Cbc0038I Pass  70: suminf.    0.58020 (3) obj. -2575.06 iterations 0
Cbc0038I Pass  71: suminf.    0.68932 (5) obj. -2575.06 iterations 2
Cbc0038I Pass  72: suminf.    0.67455 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  73: suminf.    1.37859 (4) obj. -2575.06 iterations 7
Cbc0038I Pass  74: suminf.    0.91289 (2) obj. -2575.06 iterations 3
Cbc0038I Pass  75: suminf.    0.54705 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  76: suminf.    0.59944 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  77: suminf.    1.46986 (6) obj. -2575.06 iterations 5
Cbc0038I Pass  78: suminf.    0.71545 (3) obj. -2575.06 iterations 4
Cbc0038I Pass  79: suminf.    0.60503 (2) obj. -2575.06 iterations 2
Cbc0038I Pass  80: suminf.    0.54351 (2) obj. -2575.06 iterations 1
Cbc0038I Pass  81: suminf.    0.78810 (4) obj. -2575.06 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2503.39 - took 0.03 seconds
Cbc0012I Integer solution of -2503.3878 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 43 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 8.5
Cbc0013I At root node, 4 cuts changed objective from -2742.2817 to -2503.6378 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 2.1 elements, 27 column cuts (27 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.24995975 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -2503.3878, took 84 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.17

