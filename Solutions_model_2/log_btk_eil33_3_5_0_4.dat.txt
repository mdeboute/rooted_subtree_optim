Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 45 (-24) rows, 24 (-11) columns and 131 (-64) elements
Clp0000I Optimal - objective value 83.36733
Coin0511I After Postsolve, objective 83.36733, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.36732954 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 24 columns (23 integer (23 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.507%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.39276
Cbc0038I Pass   1: suminf.    0.49200 (1) obj. 28.538 iterations 15
Cbc0038I Solution found of 73.75
Cbc0038I Relaxing continuous gives 73.75
Cbc0038I Rounding solution of 63.5 is better than previous of 73.75

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 20 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 63.5 to 15.25 (0.01 seconds)
Cbc0038I Round again with cutoff of 6.58616
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.62004 (3) obj. 6.58616 iterations 2
Cbc0038I Pass   3: suminf.    0.29377 (3) obj. 6.58616 iterations 4
Cbc0038I Pass   4: suminf.    0.24811 (2) obj. 6.58616 iterations 1
Cbc0038I Pass   5: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass   6: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass   7: suminf.    2.92651 (8) obj. 6.58616 iterations 6
Cbc0038I Pass   8: suminf.    0.73084 (4) obj. 6.58616 iterations 6
Cbc0038I Pass   9: suminf.    0.37666 (3) obj. 6.58616 iterations 7
Cbc0038I Pass  10: suminf.    0.33338 (2) obj. 6.58616 iterations 1
Cbc0038I Pass  11: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  12: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  13: suminf.    1.25799 (7) obj. 6.58616 iterations 8
Cbc0038I Pass  14: suminf.    0.70207 (4) obj. 6.58616 iterations 4
Cbc0038I Pass  15: suminf.    0.23932 (3) obj. 6.58616 iterations 8
Cbc0038I Pass  16: suminf.    0.54622 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  17: suminf.    0.31808 (2) obj. 6.58616 iterations 2
Cbc0038I Pass  18: suminf.    0.23450 (2) obj. 6.58616 iterations 3
Cbc0038I Pass  19: suminf.    0.29377 (3) obj. 6.58616 iterations 3
Cbc0038I Pass  20: suminf.    0.24811 (2) obj. 6.58616 iterations 1
Cbc0038I Pass  21: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  22: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  23: suminf.    1.51785 (4) obj. 6.58616 iterations 10
Cbc0038I Pass  24: suminf.    1.51785 (4) obj. 6.58616 iterations 1
Cbc0038I Pass  25: suminf.    0.26725 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  26: suminf.    0.07626 (2) obj. 6.58616 iterations 2
Cbc0038I Pass  27: suminf.    0.40869 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  28: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  29: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  30: suminf.    0.57312 (3) obj. 6.58616 iterations 3
Cbc0038I Pass  31: suminf.    0.41929 (4) obj. 6.58616 iterations 2
Cbc0038I Rounding solution of 2 is better than previous of 15.25

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -12.4278
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.76624 (4) obj. -12.4278 iterations 1
Cbc0038I Pass  32: suminf.    0.54081 (3) obj. -12.4278 iterations 6
Cbc0038I Pass  33: suminf.    0.29264 (1) obj. -12.4278 iterations 3
Cbc0038I Pass  34: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  35: suminf.    1.14188 (4) obj. -12.4278 iterations 3
Cbc0038I Pass  36: suminf.    0.56110 (2) obj. -12.4278 iterations 1
Cbc0038I Pass  37: suminf.    1.03227 (4) obj. -12.4278 iterations 7
Cbc0038I Pass  38: suminf.    0.64698 (4) obj. -12.4278 iterations 5
Cbc0038I Pass  39: suminf.    0.48338 (2) obj. -12.4278 iterations 6
Cbc0038I Pass  40: suminf.    0.29264 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  41: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  42: suminf.    0.81778 (5) obj. -12.4278 iterations 4
Cbc0038I Pass  43: suminf.    0.81778 (5) obj. -12.4278 iterations 0
Cbc0038I Pass  44: suminf.    1.24281 (5) obj. -12.4278 iterations 5
Cbc0038I Pass  45: suminf.    0.73125 (9) obj. -12.4278 iterations 8
Cbc0038I Pass  46: suminf.    0.71164 (7) obj. -12.4278 iterations 2
Cbc0038I Pass  47: suminf.    1.23423 (6) obj. -12.4278 iterations 11
Cbc0038I Pass  48: suminf.    0.72677 (4) obj. -12.4278 iterations 6
Cbc0038I Pass  49: suminf.    1.36338 (5) obj. -12.4278 iterations 3
Cbc0038I Pass  50: suminf.    0.96534 (2) obj. -12.4278 iterations 4
Cbc0038I Pass  51: suminf.    0.29264 (1) obj. -12.4278 iterations 2
Cbc0038I Pass  52: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  53: suminf.    1.07668 (9) obj. -12.4278 iterations 8
Cbc0038I Pass  54: suminf.    0.80779 (6) obj. -12.4278 iterations 7
Cbc0038I Pass  55: suminf.    1.49214 (4) obj. -12.4278 iterations 6
Cbc0038I Pass  56: suminf.    1.29286 (4) obj. -12.4278 iterations 2
Cbc0038I Pass  57: suminf.    0.48338 (2) obj. -12.4278 iterations 2
Cbc0038I Pass  58: suminf.    0.29264 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  59: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  60: suminf.    0.89764 (4) obj. -12.4278 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2 - took 0.03 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 24 columns, reduced to 21 rows 13 columns
Cbc0031I 7 added rows had average density of 20.857143
Cbc0013I At root node, 7 cuts changed objective from -69.13933 to -15.901417 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1017 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of 0 found by DiveCoefficient after 1672 iterations and 4 nodes (0.12 seconds)
Cbc0001I Search completed - best objective 0, took 1672 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 40 times (390 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-16) rows, 53 (-13) columns and 450 (-273) elements
Clp1000I sum of infeasibilities 8.05116e-09 - average 1.5483e-10, 6 fixed columns
Coin0506I Presolve 46 (-6) rows, 47 (-6) columns and 302 (-148) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.9147645 - largest nonzero change 0 ( 0%) - largest zero change 2.9009637e-05
Clp0000I Optimal - objective value 122.39762
Clp0000I Optimal - objective value 122.39762
Coin0511I After Postsolve, objective 122.39762, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 122.39762
Clp0000I Optimal - objective value 122.39762
Clp0000I Optimal - objective value 122.39762
Coin0511I After Postsolve, objective 122.39762, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.3976177 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 53 columns (53 integer (53 of which binary)) and 458 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.353%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.35031
Cbc0038I Pass   1: suminf.    2.11102 (14) obj. -1.71374 iterations 7
Cbc0038I Pass   2: suminf.    2.11102 (14) obj. -1.71374 iterations 0
Cbc0038I Solution found of 32.75
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 35 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 32.75 to 19 (0.02 seconds)
Cbc0038I Round again with cutoff of 12.2639
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.11102 (14) obj. -1.71374 iterations 0
Cbc0038I Pass   4: suminf.    2.11102 (14) obj. -1.71374 iterations 0
Cbc0038I Pass   5: suminf.    0.65904 (13) obj. 12.2639 iterations 16
Cbc0038I Pass   6: suminf.    0.97524 (10) obj. 12.2639 iterations 19
Cbc0038I Pass   7: suminf.    0.46209 (10) obj. 12.2639 iterations 1
Cbc0038I Pass   8: suminf.    0.44253 (9) obj. 12.2639 iterations 5
Cbc0038I Pass   9: suminf.    0.13700 (2) obj. 10.693 iterations 7
Cbc0038I Pass  10: suminf.    0.33956 (8) obj. 12.2639 iterations 7
Cbc0038I Pass  11: suminf.    1.33055 (6) obj. 12.2639 iterations 6
Cbc0038I Pass  12: suminf.    0.60417 (4) obj. 10.0708 iterations 6
Cbc0038I Pass  13: suminf.    0.57718 (3) obj. 12.2639 iterations 8
Cbc0038I Pass  14: suminf.    0.46209 (10) obj. 12.2639 iterations 7
Cbc0038I Pass  15: suminf.    0.44253 (9) obj. 12.2639 iterations 5
Cbc0038I Pass  16: suminf.    0.13700 (2) obj. 10.693 iterations 7
Cbc0038I Pass  17: suminf.    0.33956 (8) obj. 12.2639 iterations 7
Cbc0038I Pass  18: suminf.    0.71002 (10) obj. 12.2639 iterations 3
Cbc0038I Pass  19: suminf.    0.71002 (10) obj. 12.2639 iterations 1
Cbc0038I Pass  20: suminf.    0.44253 (9) obj. 12.2639 iterations 3
Cbc0038I Pass  21: suminf.    1.29025 (12) obj. 12.2639 iterations 11
Cbc0038I Pass  22: suminf.    1.29025 (12) obj. 12.2639 iterations 1
Cbc0038I Pass  23: suminf.    0.15774 (8) obj. 12.2639 iterations 18
Cbc0038I Pass  24: suminf.    0.14848 (7) obj. 12.2639 iterations 2
Cbc0038I Pass  25: suminf.    0.15171 (7) obj. 12.2639 iterations 3
Cbc0038I Pass  26: suminf.    2.38786 (17) obj. 12.2639 iterations 15
Cbc0038I Pass  27: suminf.    2.20163 (13) obj. 12.2639 iterations 1
Cbc0038I Pass  28: suminf.    2.20163 (13) obj. 12.2639 iterations 1
Cbc0038I Pass  29: suminf.    0.35838 (9) obj. 12.2639 iterations 15
Cbc0038I Pass  30: suminf.    0.13700 (2) obj. 10.693 iterations 5
Cbc0038I Pass  31: suminf.    0.33956 (8) obj. 12.2639 iterations 7
Cbc0038I Pass  32: suminf.    1.83495 (11) obj. 12.2639 iterations 11
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 40 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 19 to 0 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.42225
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.82626 (26) obj. -9.42225 iterations 1
Cbc0038I Pass  33: suminf.    2.60155 (15) obj. -9.42225 iterations 1
Cbc0038I Pass  34: suminf.    1.91623 (14) obj. -9.42225 iterations 20
Cbc0038I Pass  35: suminf.    1.73045 (13) obj. -9.42225 iterations 4
Cbc0038I Pass  36: suminf.    2.65300 (15) obj. -9.42225 iterations 21
Cbc0038I Pass  37: suminf.    2.65300 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  38: suminf.    2.75893 (15) obj. -9.42225 iterations 3
Cbc0038I Pass  39: suminf.    2.75893 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  40: suminf.    2.82175 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  41: suminf.    2.82175 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  42: suminf.    2.75893 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  43: suminf.    3.32459 (17) obj. -9.42225 iterations 7
Cbc0038I Pass  44: suminf.    3.32459 (17) obj. -9.42225 iterations 0
Cbc0038I Pass  45: suminf.    2.75893 (15) obj. -9.42225 iterations 9
Cbc0038I Pass  46: suminf.    2.75893 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  47: suminf.    2.82175 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  48: suminf.    2.82175 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  49: suminf.    2.75893 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  50: suminf.    1.80089 (17) obj. -9.42225 iterations 12
Cbc0038I Pass  51: suminf.    1.80089 (17) obj. -9.42225 iterations 0
Cbc0038I Pass  52: suminf.    2.94996 (16) obj. -9.42225 iterations 8
Cbc0038I Pass  53: suminf.    2.94996 (16) obj. -9.42225 iterations 0
Cbc0038I Pass  54: suminf.    2.83478 (16) obj. -9.42225 iterations 2
Cbc0038I Pass  55: suminf.    2.83478 (16) obj. -9.42225 iterations 0
Cbc0038I Pass  56: suminf.    2.94996 (16) obj. -9.42225 iterations 2
Cbc0038I Pass  57: suminf.    2.80975 (19) obj. -9.42225 iterations 7
Cbc0038I Pass  58: suminf.    2.53518 (19) obj. -9.42225 iterations 1
Cbc0038I Pass  59: suminf.    2.94996 (16) obj. -9.42225 iterations 13
Cbc0038I Pass  60: suminf.    2.94996 (16) obj. -9.42225 iterations 1
Cbc0038I Pass  61: suminf.    2.83478 (16) obj. -9.42225 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 0 - took 0.05 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 52 rows 53 columns, reduced to 31 rows 31 columns
Cbc0031I 14 added rows had average density of 6.0714286
Cbc0013I At root node, 220 cuts changed objective from -46.111654 to 2.728304 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 2.0 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 0, took 15 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 45 (-24) rows, 24 (-11) columns and 131 (-64) elements
Clp0000I Optimal - objective value 83.36733
Coin0511I After Postsolve, objective 83.36733, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.36732954 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 24 columns (23 integer (23 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.507%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.39276
Cbc0038I Pass   1: suminf.    0.49200 (1) obj. 28.538 iterations 15
Cbc0038I Solution found of 73.75
Cbc0038I Relaxing continuous gives 73.75
Cbc0038I Rounding solution of 63.5 is better than previous of 73.75

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 20 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 63.5 to 15.25 (0.01 seconds)
Cbc0038I Round again with cutoff of 6.58616
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.62004 (3) obj. 6.58616 iterations 2
Cbc0038I Pass   3: suminf.    0.29377 (3) obj. 6.58616 iterations 4
Cbc0038I Pass   4: suminf.    0.24811 (2) obj. 6.58616 iterations 1
Cbc0038I Pass   5: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass   6: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass   7: suminf.    2.92651 (8) obj. 6.58616 iterations 6
Cbc0038I Pass   8: suminf.    0.73084 (4) obj. 6.58616 iterations 6
Cbc0038I Pass   9: suminf.    0.37666 (3) obj. 6.58616 iterations 7
Cbc0038I Pass  10: suminf.    0.33338 (2) obj. 6.58616 iterations 1
Cbc0038I Pass  11: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  12: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  13: suminf.    1.25799 (7) obj. 6.58616 iterations 8
Cbc0038I Pass  14: suminf.    0.70207 (4) obj. 6.58616 iterations 4
Cbc0038I Pass  15: suminf.    0.23932 (3) obj. 6.58616 iterations 8
Cbc0038I Pass  16: suminf.    0.54622 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  17: suminf.    0.31808 (2) obj. 6.58616 iterations 2
Cbc0038I Pass  18: suminf.    0.23450 (2) obj. 6.58616 iterations 3
Cbc0038I Pass  19: suminf.    0.29377 (3) obj. 6.58616 iterations 3
Cbc0038I Pass  20: suminf.    0.24811 (2) obj. 6.58616 iterations 1
Cbc0038I Pass  21: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  22: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  23: suminf.    1.51785 (4) obj. 6.58616 iterations 10
Cbc0038I Pass  24: suminf.    1.51785 (4) obj. 6.58616 iterations 1
Cbc0038I Pass  25: suminf.    0.26725 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  26: suminf.    0.07626 (2) obj. 6.58616 iterations 2
Cbc0038I Pass  27: suminf.    0.40869 (2) obj. 6.58616 iterations 4
Cbc0038I Pass  28: suminf.    0.11699 (1) obj. 6.58616 iterations 2
Cbc0038I Pass  29: suminf.    0.20434 (1) obj. 6.58616 iterations 1
Cbc0038I Pass  30: suminf.    0.57312 (3) obj. 6.58616 iterations 3
Cbc0038I Pass  31: suminf.    0.41929 (4) obj. 6.58616 iterations 2
Cbc0038I Rounding solution of 2 is better than previous of 15.25

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -12.4278
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.76624 (4) obj. -12.4278 iterations 1
Cbc0038I Pass  32: suminf.    0.54081 (3) obj. -12.4278 iterations 6
Cbc0038I Pass  33: suminf.    0.29264 (1) obj. -12.4278 iterations 3
Cbc0038I Pass  34: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  35: suminf.    1.14188 (4) obj. -12.4278 iterations 3
Cbc0038I Pass  36: suminf.    0.56110 (2) obj. -12.4278 iterations 1
Cbc0038I Pass  37: suminf.    1.03227 (4) obj. -12.4278 iterations 7
Cbc0038I Pass  38: suminf.    0.64698 (4) obj. -12.4278 iterations 5
Cbc0038I Pass  39: suminf.    0.48338 (2) obj. -12.4278 iterations 6
Cbc0038I Pass  40: suminf.    0.29264 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  41: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  42: suminf.    0.81778 (5) obj. -12.4278 iterations 4
Cbc0038I Pass  43: suminf.    0.81778 (5) obj. -12.4278 iterations 0
Cbc0038I Pass  44: suminf.    1.24281 (5) obj. -12.4278 iterations 5
Cbc0038I Pass  45: suminf.    0.73125 (9) obj. -12.4278 iterations 8
Cbc0038I Pass  46: suminf.    0.71164 (7) obj. -12.4278 iterations 2
Cbc0038I Pass  47: suminf.    1.23423 (6) obj. -12.4278 iterations 11
Cbc0038I Pass  48: suminf.    0.72677 (4) obj. -12.4278 iterations 6
Cbc0038I Pass  49: suminf.    1.36338 (5) obj. -12.4278 iterations 3
Cbc0038I Pass  50: suminf.    0.96534 (2) obj. -12.4278 iterations 4
Cbc0038I Pass  51: suminf.    0.29264 (1) obj. -12.4278 iterations 2
Cbc0038I Pass  52: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  53: suminf.    1.07668 (9) obj. -12.4278 iterations 8
Cbc0038I Pass  54: suminf.    0.80779 (6) obj. -12.4278 iterations 7
Cbc0038I Pass  55: suminf.    1.49214 (4) obj. -12.4278 iterations 6
Cbc0038I Pass  56: suminf.    1.29286 (4) obj. -12.4278 iterations 2
Cbc0038I Pass  57: suminf.    0.48338 (2) obj. -12.4278 iterations 2
Cbc0038I Pass  58: suminf.    0.29264 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  59: suminf.    0.48267 (1) obj. -12.4278 iterations 1
Cbc0038I Pass  60: suminf.    0.89764 (4) obj. -12.4278 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 24 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2 - took 0.01 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 24 columns, reduced to 21 rows 13 columns
Cbc0031I 7 added rows had average density of 20.857143
Cbc0013I At root node, 7 cuts changed objective from -69.13933 to -15.901417 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1017 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of 0 found by DiveCoefficient after 1672 iterations and 4 nodes (0.12 seconds)
Cbc0001I Search completed - best objective 0, took 1672 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 40 times (390 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 53 (-14) columns and 450 (-274) elements
Clp1000I sum of infeasibilities 8.05116e-09 - average 1.5483e-10, 6 fixed columns
Coin0506I Presolve 46 (-6) rows, 47 (-6) columns and 302 (-148) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.9147645 - largest nonzero change 0 ( 0%) - largest zero change 2.9009637e-05
Clp0000I Optimal - objective value 122.39762
Clp0000I Optimal - objective value 122.39762
Coin0511I After Postsolve, objective 122.39762, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 122.39762
Clp0000I Optimal - objective value 122.39762
Clp0000I Optimal - objective value 122.39762
Coin0511I After Postsolve, objective 122.39762, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.3976177 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 53 columns (53 integer (53 of which binary)) and 458 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.353%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.35031
Cbc0038I Pass   1: suminf.    2.11102 (14) obj. -1.71374 iterations 7
Cbc0038I Pass   2: suminf.    2.11102 (14) obj. -1.71374 iterations 0
Cbc0038I Solution found of 32.75
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 35 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 32.75 to 19 (0.02 seconds)
Cbc0038I Round again with cutoff of 12.2639
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.11102 (14) obj. -1.71374 iterations 0
Cbc0038I Pass   4: suminf.    2.11102 (14) obj. -1.71374 iterations 0
Cbc0038I Pass   5: suminf.    0.65904 (13) obj. 12.2639 iterations 16
Cbc0038I Pass   6: suminf.    0.97524 (10) obj. 12.2639 iterations 19
Cbc0038I Pass   7: suminf.    0.46209 (10) obj. 12.2639 iterations 1
Cbc0038I Pass   8: suminf.    0.44253 (9) obj. 12.2639 iterations 5
Cbc0038I Pass   9: suminf.    0.13700 (2) obj. 10.693 iterations 7
Cbc0038I Pass  10: suminf.    0.33956 (8) obj. 12.2639 iterations 7
Cbc0038I Pass  11: suminf.    1.33055 (6) obj. 12.2639 iterations 6
Cbc0038I Pass  12: suminf.    0.60417 (4) obj. 10.0708 iterations 6
Cbc0038I Pass  13: suminf.    0.57718 (3) obj. 12.2639 iterations 8
Cbc0038I Pass  14: suminf.    0.46209 (10) obj. 12.2639 iterations 7
Cbc0038I Pass  15: suminf.    0.44253 (9) obj. 12.2639 iterations 5
Cbc0038I Pass  16: suminf.    0.13700 (2) obj. 10.693 iterations 7
Cbc0038I Pass  17: suminf.    0.33956 (8) obj. 12.2639 iterations 7
Cbc0038I Pass  18: suminf.    0.71002 (10) obj. 12.2639 iterations 3
Cbc0038I Pass  19: suminf.    0.71002 (10) obj. 12.2639 iterations 1
Cbc0038I Pass  20: suminf.    0.44253 (9) obj. 12.2639 iterations 3
Cbc0038I Pass  21: suminf.    1.29025 (12) obj. 12.2639 iterations 11
Cbc0038I Pass  22: suminf.    1.29025 (12) obj. 12.2639 iterations 1
Cbc0038I Pass  23: suminf.    0.15774 (8) obj. 12.2639 iterations 18
Cbc0038I Pass  24: suminf.    0.14848 (7) obj. 12.2639 iterations 2
Cbc0038I Pass  25: suminf.    0.15171 (7) obj. 12.2639 iterations 3
Cbc0038I Pass  26: suminf.    2.38786 (17) obj. 12.2639 iterations 15
Cbc0038I Pass  27: suminf.    2.20163 (13) obj. 12.2639 iterations 1
Cbc0038I Pass  28: suminf.    2.20163 (13) obj. 12.2639 iterations 1
Cbc0038I Pass  29: suminf.    0.35838 (9) obj. 12.2639 iterations 15
Cbc0038I Pass  30: suminf.    0.13700 (2) obj. 10.693 iterations 5
Cbc0038I Pass  31: suminf.    0.33956 (8) obj. 12.2639 iterations 7
Cbc0038I Pass  32: suminf.    1.83495 (11) obj. 12.2639 iterations 11
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 40 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 19 to 0 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.42225
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.82626 (26) obj. -9.42225 iterations 1
Cbc0038I Pass  33: suminf.    2.60155 (15) obj. -9.42225 iterations 1
Cbc0038I Pass  34: suminf.    1.91623 (14) obj. -9.42225 iterations 20
Cbc0038I Pass  35: suminf.    1.73045 (13) obj. -9.42225 iterations 4
Cbc0038I Pass  36: suminf.    2.65300 (15) obj. -9.42225 iterations 21
Cbc0038I Pass  37: suminf.    2.65300 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  38: suminf.    2.75893 (15) obj. -9.42225 iterations 3
Cbc0038I Pass  39: suminf.    2.75893 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  40: suminf.    2.82175 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  41: suminf.    2.82175 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  42: suminf.    2.75893 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  43: suminf.    3.32459 (17) obj. -9.42225 iterations 7
Cbc0038I Pass  44: suminf.    3.32459 (17) obj. -9.42225 iterations 0
Cbc0038I Pass  45: suminf.    2.75893 (15) obj. -9.42225 iterations 9
Cbc0038I Pass  46: suminf.    2.75893 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  47: suminf.    2.82175 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  48: suminf.    2.82175 (15) obj. -9.42225 iterations 0
Cbc0038I Pass  49: suminf.    2.75893 (15) obj. -9.42225 iterations 2
Cbc0038I Pass  50: suminf.    1.80089 (17) obj. -9.42225 iterations 12
Cbc0038I Pass  51: suminf.    1.80089 (17) obj. -9.42225 iterations 0
Cbc0038I Pass  52: suminf.    2.94996 (16) obj. -9.42225 iterations 8
Cbc0038I Pass  53: suminf.    2.94996 (16) obj. -9.42225 iterations 0
Cbc0038I Pass  54: suminf.    2.83478 (16) obj. -9.42225 iterations 2
Cbc0038I Pass  55: suminf.    2.83478 (16) obj. -9.42225 iterations 0
Cbc0038I Pass  56: suminf.    2.94996 (16) obj. -9.42225 iterations 2
Cbc0038I Pass  57: suminf.    2.80975 (19) obj. -9.42225 iterations 7
Cbc0038I Pass  58: suminf.    2.53518 (19) obj. -9.42225 iterations 1
Cbc0038I Pass  59: suminf.    2.94996 (16) obj. -9.42225 iterations 13
Cbc0038I Pass  60: suminf.    2.94996 (16) obj. -9.42225 iterations 1
Cbc0038I Pass  61: suminf.    2.83478 (16) obj. -9.42225 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 53 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 0 - took 0.06 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 52 rows 53 columns, reduced to 31 rows 31 columns
Cbc0031I 14 added rows had average density of 6.0714286
Cbc0013I At root node, 220 cuts changed objective from -46.111654 to 2.728304 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 2.0 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 0, took 15 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

