Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 31 (-4) columns and 158 (-37) elements
Clp1000I sum of infeasibilities 8.91002e-06 - average 1.71347e-07, 3 fixed columns
Coin0506I Presolve 46 (-6) rows, 28 (-3) columns and 140 (-18) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Coin0511I After Postsolve, objective 75.059443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Coin0511I After Postsolve, objective 75.059443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.05944286 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 31 columns (30 integer (30 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.611%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.48903
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.02746 iterations 24
Cbc0038I Solution found of 0.02746
Cbc0038I Relaxing continuous gives 0.02746
Cbc0038I Rounding solution of -25.5746 is better than previous of 0.02746

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -25.5746 to -26.7898 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.5677
Cbc0038I Pass   2: suminf.    1.17109 (3) obj. -31.5677 iterations 6
Cbc0038I Pass   3: suminf.    0.71484 (2) obj. -31.5677 iterations 1
Cbc0038I Pass   4: suminf.    0.30822 (1) obj. -31.5677 iterations 3
Cbc0038I Pass   5: suminf.    0.38446 (2) obj. -31.5677 iterations 2
Cbc0038I Pass   6: suminf.    0.71484 (2) obj. -31.5677 iterations 3
Cbc0038I Pass   7: suminf.    2.83654 (8) obj. -31.5677 iterations 9
Cbc0038I Pass   8: suminf.    1.19701 (4) obj. -31.5677 iterations 6
Cbc0038I Pass   9: suminf.    0.55980 (3) obj. -31.5677 iterations 4
Cbc0038I Pass  10: suminf.    0.83228 (3) obj. -31.5677 iterations 2
Cbc0038I Pass  11: suminf.    0.79460 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  12: suminf.    0.55660 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  13: suminf.    0.55660 (2) obj. -31.5677 iterations 0
Cbc0038I Pass  14: suminf.    0.86957 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  15: suminf.    1.09036 (4) obj. -31.5677 iterations 3
Cbc0038I Pass  16: suminf.    0.76617 (3) obj. -31.5677 iterations 2
Cbc0038I Pass  17: suminf.    0.74583 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  18: suminf.    0.59447 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  19: suminf.    0.44976 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  20: suminf.    0.29523 (2) obj. -31.5677 iterations 3
Cbc0038I Pass  21: suminf.    0.29523 (2) obj. -31.5677 iterations 0
Cbc0038I Pass  22: suminf.    1.02515 (3) obj. -31.5677 iterations 3
Cbc0038I Pass  23: suminf.    2.89937 (7) obj. -31.5677 iterations 11
Cbc0038I Pass  24: suminf.    1.55154 (5) obj. -31.5677 iterations 9
Cbc0038I Pass  25: suminf.    1.09142 (5) obj. -31.5677 iterations 2
Cbc0038I Pass  26: suminf.    1.07782 (4) obj. -31.5677 iterations 9
Cbc0038I Pass  27: suminf.    0.80644 (4) obj. -31.5677 iterations 6
Cbc0038I Pass  28: suminf.    0.80644 (4) obj. -31.5677 iterations 0
Cbc0038I Pass  29: suminf.    0.29925 (2) obj. -31.5677 iterations 4
Cbc0038I Pass  30: suminf.    0.29523 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  31: suminf.    1.07782 (4) obj. -31.5677 iterations 6
Cbc0038I Rounding solution of -31.7476 is better than previous of -26.7898

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -40.3116
Cbc0038I Pass  31: suminf.    0.91294 (3) obj. -40.3116 iterations 0
Cbc0038I Pass  32: suminf.    0.42033 (2) obj. -40.3116 iterations 5
Cbc0038I Pass  33: suminf.    0.56918 (2) obj. -40.3116 iterations 3
Cbc0038I Pass  34: suminf.    1.92629 (6) obj. -40.3116 iterations 6
Cbc0038I Pass  35: suminf.    0.81170 (2) obj. -40.3116 iterations 4
Cbc0038I Pass  36: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  37: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  38: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  39: suminf.    2.84749 (9) obj. -40.3116 iterations 7
Cbc0038I Pass  40: suminf.    1.22977 (3) obj. -40.3116 iterations 6
Cbc0038I Pass  41: suminf.    0.47205 (1) obj. -40.3116 iterations 4
Cbc0038I Pass  42: suminf.    0.42033 (2) obj. -40.3116 iterations 2
Cbc0038I Pass  43: suminf.    0.56918 (2) obj. -40.3116 iterations 3
Cbc0038I Pass  44: suminf.    4.06544 (10) obj. -40.3116 iterations 10
Cbc0038I Pass  45: suminf.    1.33523 (7) obj. -40.3116 iterations 7
Cbc0038I Pass  46: suminf.    0.65334 (3) obj. -40.3116 iterations 7
Cbc0038I Pass  47: suminf.    0.64392 (3) obj. -40.3116 iterations 1
Cbc0038I Pass  48: suminf.    0.51306 (3) obj. -40.3116 iterations 7
Cbc0038I Pass  49: suminf.    0.51306 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  50: suminf.    0.63608 (4) obj. -40.3116 iterations 4
Cbc0038I Pass  51: suminf.    1.59025 (4) obj. -40.3116 iterations 7
Cbc0038I Pass  52: suminf.    1.13148 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  53: suminf.    0.61892 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  54: suminf.    0.86300 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  55: suminf.    0.86300 (3) obj. -40.3116 iterations 0
Cbc0038I Pass  56: suminf.    0.66372 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  57: suminf.    0.63608 (4) obj. -40.3116 iterations 4
Cbc0038I Pass  58: suminf.    1.59025 (4) obj. -40.3116 iterations 7
Cbc0038I Pass  59: suminf.    1.13148 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  60: suminf.    0.61892 (3) obj. -40.3116 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -31.7476 - took 0.04 seconds
Cbc0012I Integer solution of -31.74759 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 51 rows 31 columns, reduced to 31 rows 21 columns
Cbc0031I 10 added rows had average density of 19.8
Cbc0013I At root node, 10 cuts changed objective from -74.567288 to -55.705985 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1991 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 593 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.74759, took 2928 iterations and 4 nodes (0.21 seconds)
Cbc0032I Strong branching done 72 times (819 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-19) rows, 57 (-9) columns and 507 (-216) elements
Clp1000I sum of infeasibilities 2.81453e-08 - average 5.74394e-10, 34 fixed columns
Coin0506I Presolve 16 (-33) rows, 23 (-34) columns and 73 (-434) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 1.7664639 - largest nonzero change 1.653717e-05 ( 0.00096990836%) - largest zero change 2.7371583e-05
Clp0000I Optimal - objective value 120.49836
Clp0000I Optimal - objective value 120.49836
Coin0511I After Postsolve, objective 120.49836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.39171 - largest nonzero change 1.4785439e-05 ( 0.00096990836%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 186.4484
Clp0000I Optimal - objective value 186.4484
Clp0000I Optimal - objective value 186.4484
Coin0511I After Postsolve, objective 186.4484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 186.4484023 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 57 columns (57 integer (57 of which binary)) and 508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.002%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.2707
Cbc0038I Pass   1: suminf.    1.67667 (15) obj. -7.19046 iterations 18
Cbc0038I Pass   2: suminf.    1.67667 (15) obj. -7.19046 iterations 1
Cbc0038I Solution found of 38.0045
Cbc0038I Rounding solution of -12.113 is better than previous of 38.0045

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -12.113 to -92.8637 (0.01 seconds)
Cbc0038I Round again with cutoff of -101.401
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    4.27923 (23) obj. -139.763 iterations 6
Cbc0038I Pass   4: suminf.    4.27923 (23) obj. -139.763 iterations 0
Cbc0038I Pass   5: suminf.    1.81694 (13) obj. -109.065 iterations 10
Cbc0038I Pass   6: suminf.    0.66853 (2) obj. -101.401 iterations 21
Cbc0038I Pass   7: suminf.    0.37915 (2) obj. -101.401 iterations 4
Cbc0038I Pass   8: suminf.    0.55172 (2) obj. -109.465 iterations 6
Cbc0038I Pass   9: suminf.    0.25000 (1) obj. -108.018 iterations 2
Cbc0038I Pass  10: suminf.    0.56090 (2) obj. -101.401 iterations 3
Cbc0038I Pass  11: suminf.    0.25000 (1) obj. -108.018 iterations 2
Cbc0038I Pass  12: suminf.    1.60622 (8) obj. -101.401 iterations 15
Cbc0038I Pass  13: suminf.    1.41368 (6) obj. -103.026 iterations 4
Cbc0038I Pass  14: suminf.    0.71247 (2) obj. -101.401 iterations 11
Cbc0038I Pass  15: suminf.    0.71247 (2) obj. -101.401 iterations 0
Cbc0038I Pass  16: suminf.    0.88750 (2) obj. -105.902 iterations 3
Cbc0038I Pass  17: suminf.    0.79175 (2) obj. -101.401 iterations 1
Cbc0038I Pass  18: suminf.    0.71247 (2) obj. -101.401 iterations 4
Cbc0038I Pass  19: suminf.    1.57736 (6) obj. -101.401 iterations 11
Cbc0038I Pass  20: suminf.    1.24948 (4) obj. -106.829 iterations 4
Cbc0038I Pass  21: suminf.    0.66971 (2) obj. -101.401 iterations 8
Cbc0038I Pass  22: suminf.    0.33125 (1) obj. -106.05 iterations 5
Cbc0038I Pass  23: suminf.    0.53591 (2) obj. -101.401 iterations 4
Cbc0038I Pass  24: suminf.    0.33125 (1) obj. -106.05 iterations 3
Cbc0038I Pass  25: suminf.    2.79472 (9) obj. -101.401 iterations 16
Cbc0038I Pass  26: suminf.    0.50859 (3) obj. -101.755 iterations 9
Cbc0038I Pass  27: suminf.    0.47112 (2) obj. -101.401 iterations 8
Cbc0038I Pass  28: suminf.    0.40146 (2) obj. -101.401 iterations 3
Cbc0038I Pass  29: suminf.    0.52312 (2) obj. -101.401 iterations 7
Cbc0038I Pass  30: suminf.    0.41138 (2) obj. -101.401 iterations 6
Cbc0038I Pass  31: suminf.    0.41138 (2) obj. -101.401 iterations 1
Cbc0038I Pass  32: suminf.    0.63000 (2) obj. -106.425 iterations 6
Cbc0038I Rounding solution of -101.98 is better than previous of -92.8637

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -101.98 to -104.895 (0.02 seconds)
Cbc0038I Round again with cutoff of -119.564
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.27923 (23) obj. -139.763 iterations 0
Cbc0038I Pass  33: suminf.    4.27923 (23) obj. -139.763 iterations 0
Cbc0038I Pass  34: suminf.    1.67918 (8) obj. -119.564 iterations 24
Cbc0038I Pass  35: suminf.    1.56018 (8) obj. -120.992 iterations 3
Cbc0038I Pass  36: suminf.    0.91562 (4) obj. -119.564 iterations 14
Cbc0038I Pass  37: suminf.    0.82325 (5) obj. -119.564 iterations 3
Cbc0038I Pass  38: suminf.    1.03617 (3) obj. -119.564 iterations 4
Cbc0038I Pass  39: suminf.    1.03617 (3) obj. -119.564 iterations 1
Cbc0038I Pass  40: suminf.    1.00108 (3) obj. -119.564 iterations 4
Cbc0038I Pass  41: suminf.    1.00108 (3) obj. -119.564 iterations 1
Cbc0038I Pass  42: suminf.    1.03617 (3) obj. -119.564 iterations 5
Cbc0038I Pass  43: suminf.    2.98225 (16) obj. -119.564 iterations 19
Cbc0038I Pass  44: suminf.    2.15352 (11) obj. -119.564 iterations 9
Cbc0038I Pass  45: suminf.    1.08293 (5) obj. -119.564 iterations 16
Cbc0038I Pass  46: suminf.    0.90167 (4) obj. -120.755 iterations 6
Cbc0038I Pass  47: suminf.    1.03399 (4) obj. -119.564 iterations 7
Cbc0038I Pass  48: suminf.    1.77750 (6) obj. -119.564 iterations 12
Cbc0038I Pass  49: suminf.    1.57751 (6) obj. -119.564 iterations 8
Cbc0038I Pass  50: suminf.    1.16120 (5) obj. -119.564 iterations 11
Cbc0038I Pass  51: suminf.    1.16120 (5) obj. -119.564 iterations 2
Cbc0038I Pass  52: suminf.    1.10083 (5) obj. -119.564 iterations 4
Cbc0038I Pass  53: suminf.    1.10083 (5) obj. -119.564 iterations 2
Cbc0038I Pass  54: suminf.    1.16120 (5) obj. -119.564 iterations 4
Cbc0038I Pass  55: suminf.    1.40170 (7) obj. -119.564 iterations 5
Cbc0038I Pass  56: suminf.    1.40170 (7) obj. -119.564 iterations 2
Cbc0038I Pass  57: suminf.    2.38164 (10) obj. -119.564 iterations 11
Cbc0038I Pass  58: suminf.    2.00075 (10) obj. -119.564 iterations 2
Cbc0038I Pass  59: suminf.    1.15653 (3) obj. -119.564 iterations 12
Cbc0038I Pass  60: suminf.    1.15653 (3) obj. -119.564 iterations 1
Cbc0038I Pass  61: suminf.    1.07320 (3) obj. -119.564 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 9 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -104.895 - took 0.02 seconds
Cbc0012I Integer solution of -104.8954 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 57 columns, reduced to 8 rows 9 columns
Cbc0031I 4 added rows had average density of 22.5
Cbc0013I At root node, 4 cuts changed objective from -120.49836 to -114.22933 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 24 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0016I Integer solution of -114.22894 found by strong branching after 65 iterations and 0 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -114.22894, took 65 iterations and 0 nodes (0.15 seconds)
Cbc0032I Strong branching done 4 times (14 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 31 (-4) columns and 158 (-37) elements
Clp1000I sum of infeasibilities 8.91002e-06 - average 1.71347e-07, 3 fixed columns
Coin0506I Presolve 46 (-6) rows, 28 (-3) columns and 140 (-18) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Coin0511I After Postsolve, objective 75.059443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Clp0000I Optimal - objective value 75.059443
Coin0511I After Postsolve, objective 75.059443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.05944286 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 31 columns (30 integer (30 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.611%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.48903
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.02746 iterations 24
Cbc0038I Solution found of 0.02746
Cbc0038I Relaxing continuous gives 0.02746
Cbc0038I Rounding solution of -25.5746 is better than previous of 0.02746

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -25.5746 to -26.7898 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.5677
Cbc0038I Pass   2: suminf.    1.17109 (3) obj. -31.5677 iterations 6
Cbc0038I Pass   3: suminf.    0.71484 (2) obj. -31.5677 iterations 1
Cbc0038I Pass   4: suminf.    0.30822 (1) obj. -31.5677 iterations 3
Cbc0038I Pass   5: suminf.    0.38446 (2) obj. -31.5677 iterations 2
Cbc0038I Pass   6: suminf.    0.71484 (2) obj. -31.5677 iterations 3
Cbc0038I Pass   7: suminf.    2.83654 (8) obj. -31.5677 iterations 9
Cbc0038I Pass   8: suminf.    1.19701 (4) obj. -31.5677 iterations 6
Cbc0038I Pass   9: suminf.    0.55980 (3) obj. -31.5677 iterations 4
Cbc0038I Pass  10: suminf.    0.83228 (3) obj. -31.5677 iterations 2
Cbc0038I Pass  11: suminf.    0.79460 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  12: suminf.    0.55660 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  13: suminf.    0.55660 (2) obj. -31.5677 iterations 0
Cbc0038I Pass  14: suminf.    0.86957 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  15: suminf.    1.09036 (4) obj. -31.5677 iterations 3
Cbc0038I Pass  16: suminf.    0.76617 (3) obj. -31.5677 iterations 2
Cbc0038I Pass  17: suminf.    0.74583 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  18: suminf.    0.59447 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  19: suminf.    0.44976 (2) obj. -31.5677 iterations 2
Cbc0038I Pass  20: suminf.    0.29523 (2) obj. -31.5677 iterations 3
Cbc0038I Pass  21: suminf.    0.29523 (2) obj. -31.5677 iterations 0
Cbc0038I Pass  22: suminf.    1.02515 (3) obj. -31.5677 iterations 3
Cbc0038I Pass  23: suminf.    2.89937 (7) obj. -31.5677 iterations 11
Cbc0038I Pass  24: suminf.    1.55154 (5) obj. -31.5677 iterations 9
Cbc0038I Pass  25: suminf.    1.09142 (5) obj. -31.5677 iterations 2
Cbc0038I Pass  26: suminf.    1.07782 (4) obj. -31.5677 iterations 9
Cbc0038I Pass  27: suminf.    0.80644 (4) obj. -31.5677 iterations 6
Cbc0038I Pass  28: suminf.    0.80644 (4) obj. -31.5677 iterations 0
Cbc0038I Pass  29: suminf.    0.29925 (2) obj. -31.5677 iterations 4
Cbc0038I Pass  30: suminf.    0.29523 (2) obj. -31.5677 iterations 1
Cbc0038I Pass  31: suminf.    1.07782 (4) obj. -31.5677 iterations 6
Cbc0038I Rounding solution of -31.7476 is better than previous of -26.7898

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -40.3116
Cbc0038I Pass  31: suminf.    0.91294 (3) obj. -40.3116 iterations 0
Cbc0038I Pass  32: suminf.    0.42033 (2) obj. -40.3116 iterations 5
Cbc0038I Pass  33: suminf.    0.56918 (2) obj. -40.3116 iterations 3
Cbc0038I Pass  34: suminf.    1.92629 (6) obj. -40.3116 iterations 6
Cbc0038I Pass  35: suminf.    0.81170 (2) obj. -40.3116 iterations 4
Cbc0038I Pass  36: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  37: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  38: suminf.    0.67974 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  39: suminf.    2.84749 (9) obj. -40.3116 iterations 7
Cbc0038I Pass  40: suminf.    1.22977 (3) obj. -40.3116 iterations 6
Cbc0038I Pass  41: suminf.    0.47205 (1) obj. -40.3116 iterations 4
Cbc0038I Pass  42: suminf.    0.42033 (2) obj. -40.3116 iterations 2
Cbc0038I Pass  43: suminf.    0.56918 (2) obj. -40.3116 iterations 3
Cbc0038I Pass  44: suminf.    4.06544 (10) obj. -40.3116 iterations 10
Cbc0038I Pass  45: suminf.    1.33523 (7) obj. -40.3116 iterations 7
Cbc0038I Pass  46: suminf.    0.65334 (3) obj. -40.3116 iterations 7
Cbc0038I Pass  47: suminf.    0.64392 (3) obj. -40.3116 iterations 1
Cbc0038I Pass  48: suminf.    0.51306 (3) obj. -40.3116 iterations 7
Cbc0038I Pass  49: suminf.    0.51306 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  50: suminf.    0.63608 (4) obj. -40.3116 iterations 4
Cbc0038I Pass  51: suminf.    1.59025 (4) obj. -40.3116 iterations 7
Cbc0038I Pass  52: suminf.    1.13148 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  53: suminf.    0.61892 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  54: suminf.    0.86300 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  55: suminf.    0.86300 (3) obj. -40.3116 iterations 0
Cbc0038I Pass  56: suminf.    0.66372 (3) obj. -40.3116 iterations 3
Cbc0038I Pass  57: suminf.    0.63608 (4) obj. -40.3116 iterations 4
Cbc0038I Pass  58: suminf.    1.59025 (4) obj. -40.3116 iterations 7
Cbc0038I Pass  59: suminf.    1.13148 (3) obj. -40.3116 iterations 2
Cbc0038I Pass  60: suminf.    0.61892 (3) obj. -40.3116 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 31 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -31.7476 - took 0.03 seconds
Cbc0012I Integer solution of -31.74759 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 31 columns, reduced to 31 rows 21 columns
Cbc0031I 10 added rows had average density of 19.8
Cbc0013I At root node, 10 cuts changed objective from -74.567288 to -55.705985 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1991 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 593 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.74759, took 2928 iterations and 4 nodes (0.21 seconds)
Cbc0032I Strong branching done 72 times (819 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-23) rows, 54 (-13) columns and 462 (-262) elements
Clp1000I sum of infeasibilities 5.63436e-08 - average 1.22486e-09, 31 fixed columns
Coin0506I Presolve 16 (-30) rows, 23 (-31) columns and 72 (-390) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.2593831 - largest nonzero change 1.7830985e-05 ( 0.00096990836%) - largest zero change 2.941326e-05
Clp0000I Optimal - objective value 20.894474
Clp0000I Optimal - objective value 20.894474
Coin0511I After Postsolve, objective 20.894474, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5140929 - largest nonzero change 1.5998633e-05 ( 0.00096990836%) - largest zero change 2.6521755e-05
Clp0000I Optimal - objective value 97.263456
Clp0000I Optimal - objective value 97.263456
Clp0000I Optimal - objective value 97.263456
Coin0511I After Postsolve, objective 97.263456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.26345567 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 54 columns (54 integer (54 of which binary)) and 463 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.051%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 4.32859
Cbc0038I Pass   1: suminf.    1.39980 (15) obj. -48.3521 iterations 14
Cbc0038I Pass   2: suminf.    1.39980 (15) obj. -48.3521 iterations 1
Cbc0038I Solution found of -1.99552
Cbc0038I Rounding solution of -12.113 is better than previous of -1.99552

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 54 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -12.113 to -26.7898 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.9073
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.39980 (15) obj. -48.3521 iterations 0
Cbc0038I Pass   4: suminf.    1.39980 (15) obj. -48.3521 iterations 1
Cbc0038I Pass   5: suminf.    0.49251 (4) obj. -32.9073 iterations 18
Cbc0038I Pass   6: suminf.    0.37897 (3) obj. -39.8236 iterations 1
Cbc0038I Pass   7: suminf.    0.32028 (1) obj. -32.9073 iterations 10
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -34.5041 iterations 6
Cbc0038I Pass   9: suminf.    0.99755 (5) obj. -32.9073 iterations 15
Cbc0038I Pass  10: suminf.    0.84047 (5) obj. -32.9073 iterations 6
Cbc0038I Pass  11: suminf.    1.31796 (4) obj. -32.9073 iterations 12
Cbc0038I Pass  12: suminf.    1.31796 (4) obj. -32.9073 iterations 0
Cbc0038I Pass  13: suminf.    0.46093 (3) obj. -32.9073 iterations 5
Cbc0038I Pass  14: suminf.    0.45235 (3) obj. -32.9073 iterations 4
Cbc0038I Pass  15: suminf.    0.36514 (3) obj. -32.9073 iterations 6
Cbc0038I Pass  16: suminf.    0.34870 (3) obj. -32.9073 iterations 1
Cbc0038I Pass  17: suminf.    0.40231 (2) obj. -32.9073 iterations 5
Cbc0038I Pass  18: suminf.    0.54980 (4) obj. -32.9073 iterations 19
Cbc0038I Pass  19: suminf.    0.40528 (4) obj. -32.9073 iterations 2
Cbc0038I Pass  20: suminf.    0.37617 (4) obj. -32.9073 iterations 10
Cbc0038I Pass  21: suminf.    0.37617 (4) obj. -32.9073 iterations 3
Cbc0038I Pass  22: suminf.    0.44481 (4) obj. -32.9073 iterations 4
Cbc0038I Pass  23: suminf.    0.43655 (4) obj. -32.9073 iterations 3
Cbc0038I Pass  24: suminf.    0.43792 (3) obj. -32.9073 iterations 9
Cbc0038I Pass  25: suminf.    1.53708 (7) obj. -32.9073 iterations 14
Cbc0038I Pass  26: suminf.    0.76103 (5) obj. -37.4937 iterations 4
Cbc0038I Pass  27: suminf.    0.87527 (4) obj. -32.9073 iterations 10
Cbc0038I Pass  28: suminf.    0.84526 (4) obj. -32.9073 iterations 3
Cbc0038I Pass  29: suminf.    0.45963 (3) obj. -34.1214 iterations 4
Cbc0038I Pass  30: suminf.    2.82157 (15) obj. -32.9073 iterations 18
Cbc0038I Pass  31: suminf.    1.57708 (11) obj. -32.9073 iterations 5
Cbc0038I Pass  32: suminf.    1.07450 (6) obj. -32.9073 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 54 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -26.7898 to -29.5892 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.9186
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.39980 (15) obj. -48.3521 iterations 0
Cbc0038I Pass  33: suminf.    1.39980 (15) obj. -48.3521 iterations 1
Cbc0038I Pass  34: suminf.    0.86708 (4) obj. -43.9186 iterations 21
Cbc0038I Pass  35: suminf.    0.52183 (4) obj. -46.6807 iterations 5
Cbc0038I Pass  36: suminf.    0.60539 (3) obj. -43.9186 iterations 9
Cbc0038I Pass  37: suminf.    0.60539 (3) obj. -43.9186 iterations 1
Cbc0038I Pass  38: suminf.    0.58054 (3) obj. -43.9186 iterations 3
Cbc0038I Pass  39: suminf.    0.58054 (3) obj. -43.9186 iterations 1
Cbc0038I Pass  40: suminf.    0.60539 (3) obj. -43.9186 iterations 3
Cbc0038I Pass  41: suminf.    1.72913 (11) obj. -43.9186 iterations 13
Cbc0038I Pass  42: suminf.    1.31024 (8) obj. -43.9186 iterations 5
Cbc0038I Pass  43: suminf.    1.24995 (6) obj. -43.9186 iterations 8
Cbc0038I Pass  44: suminf.    1.24995 (6) obj. -43.9186 iterations 3
Cbc0038I Pass  45: suminf.    1.23011 (6) obj. -43.9186 iterations 7
Cbc0038I Pass  46: suminf.    1.19290 (6) obj. -43.9186 iterations 3
Cbc0038I Pass  47: suminf.    1.29696 (6) obj. -43.9186 iterations 4
Cbc0038I Pass  48: suminf.    1.71024 (9) obj. -43.9186 iterations 11
Cbc0038I Pass  49: suminf.    1.71024 (9) obj. -43.9186 iterations 0
Cbc0038I Pass  50: suminf.    1.95035 (7) obj. -43.9186 iterations 5
Cbc0038I Pass  51: suminf.    1.52992 (7) obj. -43.9186 iterations 4
Cbc0038I Pass  52: suminf.    1.82755 (7) obj. -43.9186 iterations 5
Cbc0038I Pass  53: suminf.    2.24956 (8) obj. -43.9186 iterations 9
Cbc0038I Pass  54: suminf.    2.04297 (9) obj. -43.9186 iterations 5
Cbc0038I Pass  55: suminf.    1.81765 (7) obj. -43.9186 iterations 8
Cbc0038I Pass  56: suminf.    1.71300 (9) obj. -43.9186 iterations 7
Cbc0038I Pass  57: suminf.    1.27218 (6) obj. -43.9186 iterations 7
Cbc0038I Pass  58: suminf.    1.27218 (6) obj. -43.9186 iterations 2
Cbc0038I Pass  59: suminf.    2.28307 (7) obj. -43.9186 iterations 4
Cbc0038I Pass  60: suminf.    1.06994 (5) obj. -45.4158 iterations 7
Cbc0038I Pass  61: suminf.    1.30793 (6) obj. -43.9186 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 54 columns, reduced to 30 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -29.5892 - took 0.02 seconds
Cbc0012I Integer solution of -29.58918 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 45 rows 54 columns, reduced to 19 rows 24 columns
Cbc0031I 29 added rows had average density of 21.586207
Cbc0013I At root node, 29 cuts changed objective from -87.963837 to -39.341153 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4487 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 798 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 43 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 9 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 380 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 244 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.673 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.58918 best solution, best possible -39.341153 (1.52 seconds)
Cbc0012I Integer solution of -30.02005 found by rounding after 2753 iterations and 1 nodes (1.53 seconds)
Cbc0004I Integer solution of -31.74759 found after 2768 iterations and 1 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -31.74759, took 4190 iterations and 10 nodes (1.76 seconds)
Cbc0032I Strong branching done 258 times (4627 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       1.77

