Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.53268e-05 - average 3.28455e-07, 15 fixed columns
Coin0506I Presolve 108 (-30) rows, 60 (-16) columns and 328 (-92) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Coin0511I After Postsolve, objective 49.5978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Coin0511I After Postsolve, objective 49.5978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.59780048 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 428 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.88307
Cbc0038I Solution found of 1.40211
Cbc0038I Relaxing continuous gives -5.9031
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -5.9031 to -23.4219 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.0182
Cbc0038I Pass   1: suminf.    2.61903 (21) obj. -26.0182 iterations 36
Cbc0038I Pass   2: suminf.    1.69934 (5) obj. -26.0182 iterations 22
Cbc0038I Pass   3: suminf.    1.38102 (5) obj. -26.0182 iterations 6
Cbc0038I Pass   4: suminf.    1.22796 (3) obj. -26.0182 iterations 6
Cbc0038I Pass   5: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass   6: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass   7: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass   8: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass   9: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  10: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  11: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  12: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  13: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  14: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  15: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  16: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  17: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  18: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  19: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  20: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  21: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  22: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  23: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  24: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  25: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  26: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  27: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  28: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  29: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  30: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Rounding solution of -24.1035 is better than previous of -23.4219

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -24.1035 to -24.2264 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.6914
Cbc0038I Pass  30: suminf.    3.22748 (21) obj. -30.6914 iterations 0
Cbc0038I Pass  31: suminf.    1.59555 (5) obj. -30.6914 iterations 15
Cbc0038I Pass  32: suminf.    1.18407 (5) obj. -30.6914 iterations 3
Cbc0038I Pass  33: suminf.    1.27135 (4) obj. -30.6914 iterations 11
Cbc0038I Pass  34: suminf.    1.27135 (4) obj. -30.6914 iterations 0
Cbc0038I Pass  35: suminf.    1.59201 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  36: suminf.    1.37999 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  37: suminf.    1.34158 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  38: suminf.    1.63011 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  39: suminf.    1.37129 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  40: suminf.    4.63304 (13) obj. -30.6914 iterations 18
Cbc0038I Pass  41: suminf.    1.75729 (9) obj. -30.6914 iterations 24
Cbc0038I Pass  42: suminf.    1.36700 (4) obj. -30.6914 iterations 13
Cbc0038I Pass  43: suminf.    1.00857 (4) obj. -30.6914 iterations 4
Cbc0038I Pass  44: suminf.    1.00831 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  45: suminf.    1.26752 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  46: suminf.    1.09648 (3) obj. -30.6914 iterations 3
Cbc0038I Pass  47: suminf.    3.65482 (13) obj. -30.6914 iterations 16
Cbc0038I Pass  48: suminf.    1.97986 (7) obj. -30.6914 iterations 18
Cbc0038I Pass  49: suminf.    1.88758 (5) obj. -30.6914 iterations 4
Cbc0038I Pass  50: suminf.    1.61417 (5) obj. -30.6914 iterations 3
Cbc0038I Pass  51: suminf.    1.50820 (5) obj. -30.6914 iterations 2
Cbc0038I Pass  52: suminf.    1.50820 (5) obj. -30.6914 iterations 1
Cbc0038I Pass  53: suminf.    1.88758 (5) obj. -30.6914 iterations 4
Cbc0038I Pass  54: suminf.    2.06424 (8) obj. -30.6914 iterations 17
Cbc0038I Pass  55: suminf.    1.42059 (6) obj. -30.6914 iterations 11
Cbc0038I Pass  56: suminf.    2.17230 (6) obj. -30.6914 iterations 10
Cbc0038I Pass  57: suminf.    1.49497 (7) obj. -30.6914 iterations 4
Cbc0038I Pass  58: suminf.    1.48616 (7) obj. -30.6914 iterations 1
Cbc0038I Pass  59: suminf.    1.45812 (5) obj. -30.6914 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -24.2264 - took 0.08 seconds
Cbc0012I Integer solution of -24.22644 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 67 rows 38 columns
Cbc0031I 24 added rows had average density of 52.458333
Cbc0013I At root node, 24 cuts changed objective from -49.383952 to -42.227817 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7788 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1772 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -24.22644 best solution, best possible -42.227817 (0.70 seconds)
Cbc0016I Integer solution of -24.68062 found by strong branching after 6646 iterations and 41 nodes (0.83 seconds)
Cbc0001I Search completed - best objective -24.68062, took 7174 iterations and 54 nodes (0.84 seconds)
Cbc0032I Strong branching done 616 times (12939 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 24, 87 variables fixed on reduced cost
Total time (CPU seconds):       0.82   (Wallclock seconds):       0.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 120 (-32) columns and 2033 (-1270) elements
Clp1000I sum of infeasibilities 2.68019e-07 - average 2.48165e-09, 14 fixed columns
Coin0506I Presolve 94 (-14) rows, 105 (-15) columns and 1557 (-476) elements
Clp0006I 0  Obj 51.815027 Dual inf 9.954848 (105)
Clp0029I End of values pass after 105 iterations
Clp0014I Perturbing problem by 0.001% of 2.043879 - largest nonzero change 1.4450928e-05 ( 0.0010393299%) - largest zero change 2.9959065e-05
Clp0000I Optimal - objective value 60.15347
Clp0000I Optimal - objective value 60.15347
Coin0511I After Postsolve, objective 60.15347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.15347
Clp0000I Optimal - objective value 60.15347
Clp0000I Optimal - objective value 60.15347
Clp0000I Optimal - objective value 60.15347
Coin0511I After Postsolve, objective 60.15347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.15347003 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 121 columns (121 integer (121 of which binary)) and 2045 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.527%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.1037
Cbc0038I Pass   1: suminf.    1.03667 (26) obj. -32.2569 iterations 25
Cbc0038I Pass   2: suminf.    0.02083 (1) obj. 7.00059 iterations 25
Cbc0038I Solution found of 7.97976
Cbc0038I Rounding solution of -7.54839 is better than previous of 7.97976

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 121 columns, reduced to 14 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -12.5062
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.03667 (26) obj. -32.2569 iterations 0
Cbc0038I Pass   4: suminf.    0.95143 (14) obj. -12.5062 iterations 17
Cbc0038I Solution found of -15.3319
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 121 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -23.6907
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   5: suminf.    1.03667 (26) obj. -32.2569 iterations 0
Cbc0038I Pass   6: suminf.    0.56036 (12) obj. -23.6907 iterations 19
Cbc0038I Pass   7: suminf.    0.27927 (10) obj. -26.9987 iterations 3
Cbc0038I Pass   8: suminf.    0.44664 (5) obj. -23.6907 iterations 28
Cbc0038I Pass   9: suminf.    0.14169 (2) obj. -23.7046 iterations 5
Cbc0038I Pass  10: suminf.    1.75216 (13) obj. -23.6907 iterations 33
Cbc0038I Pass  11: suminf.    1.00101 (10) obj. -23.6907 iterations 3
Cbc0038I Pass  12: suminf.    0.96127 (10) obj. -23.6907 iterations 2
Cbc0038I Pass  13: suminf.    0.72397 (5) obj. -23.6907 iterations 13
Cbc0038I Pass  14: suminf.    0.37838 (4) obj. -24.755 iterations 3
Cbc0038I Pass  15: suminf.    0.64443 (4) obj. -23.6907 iterations 4
Cbc0038I Pass  16: suminf.    1.27887 (15) obj. -23.6907 iterations 35
Cbc0038I Pass  17: suminf.    0.93184 (12) obj. -24.0663 iterations 9
Cbc0038I Pass  18: suminf.    1.23336 (10) obj. -23.6907 iterations 31
Cbc0038I Pass  19: suminf.    0.76647 (9) obj. -23.6907 iterations 7
Cbc0038I Pass  20: suminf.    3.32147 (20) obj. -23.6907 iterations 12
Cbc0038I Pass  21: suminf.    1.36464 (17) obj. -23.6907 iterations 5
Cbc0038I Pass  22: suminf.    1.36464 (17) obj. -23.6907 iterations 0
Cbc0038I Pass  23: suminf.    1.22065 (14) obj. -23.6907 iterations 9
Cbc0038I Pass  24: suminf.    1.22065 (14) obj. -23.6907 iterations 0
Cbc0038I Pass  25: suminf.    1.20167 (14) obj. -23.6907 iterations 4
Cbc0038I Pass  26: suminf.    1.20167 (14) obj. -23.6907 iterations 0
Cbc0038I Pass  27: suminf.    1.22065 (14) obj. -23.6907 iterations 4
Cbc0038I Pass  28: suminf.    2.05809 (20) obj. -23.6907 iterations 23
Cbc0038I Pass  29: suminf.    1.79127 (14) obj. -23.6907 iterations 5
Cbc0038I Pass  30: suminf.    1.77667 (14) obj. -23.6907 iterations 2
Cbc0038I Pass  31: suminf.    2.36595 (14) obj. -23.6907 iterations 17
Cbc0038I Pass  32: suminf.    2.36595 (14) obj. -23.6907 iterations 0
Cbc0038I Pass  33: suminf.    2.35020 (13) obj. -23.6907 iterations 4
Cbc0038I Pass  34: suminf.    2.09229 (13) obj. -23.6907 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 121 columns, reduced to 56 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -15.3319 to -19.6755 (0.18 seconds)
Cbc0038I Round again with cutoff of -33.7212
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  34: suminf.    1.18958 (28) obj. -33.7212 iterations 3
Cbc0038I Pass  35: suminf.    0.87194 (14) obj. -33.7212 iterations 33
Cbc0038I Pass  36: suminf.    0.38869 (11) obj. -34.4036 iterations 6
Cbc0038I Pass  37: suminf.    0.85721 (9) obj. -33.7212 iterations 22
Cbc0038I Pass  38: suminf.    0.85721 (9) obj. -33.7212 iterations 1
Cbc0038I Pass  39: suminf.    1.75188 (9) obj. -33.7212 iterations 7
Cbc0038I Pass  40: suminf.    1.75188 (9) obj. -33.7212 iterations 0
Cbc0038I Pass  41: suminf.    1.69963 (9) obj. -33.7212 iterations 6
Cbc0038I Pass  42: suminf.    1.69963 (9) obj. -33.7212 iterations 3
Cbc0038I Pass  43: suminf.    1.75188 (9) obj. -33.7212 iterations 6
Cbc0038I Pass  44: suminf.    1.10494 (12) obj. -33.7212 iterations 17
Cbc0038I Pass  45: suminf.    0.99225 (11) obj. -33.7212 iterations 7
Cbc0038I Pass  46: suminf.    1.70117 (12) obj. -33.7212 iterations 13
Cbc0038I Pass  47: suminf.    1.33367 (11) obj. -33.7212 iterations 7
Cbc0038I Pass  48: suminf.    1.58671 (10) obj. -33.7212 iterations 7
Cbc0038I Pass  49: suminf.    1.29449 (10) obj. -33.7212 iterations 4
Cbc0038I Pass  50: suminf.    1.51425 (16) obj. -33.7212 iterations 16
Cbc0038I Pass  51: suminf.    1.51425 (16) obj. -33.7212 iterations 0
Cbc0038I Pass  52: suminf.    0.92015 (11) obj. -33.7212 iterations 17
Cbc0038I Pass  53: suminf.    0.59813 (10) obj. -34.2964 iterations 4
Cbc0038I Pass  54: suminf.    0.88915 (11) obj. -33.7212 iterations 9
Cbc0038I Pass  55: suminf.    0.88101 (10) obj. -33.7212 iterations 3
Cbc0038I Pass  56: suminf.    1.13691 (11) obj. -33.7212 iterations 8
Cbc0038I Pass  57: suminf.    1.13691 (11) obj. -33.7212 iterations 2
Cbc0038I Pass  58: suminf.    1.72144 (11) obj. -33.7212 iterations 10
Cbc0038I Pass  59: suminf.    1.72144 (11) obj. -33.7212 iterations 0
Cbc0038I Pass  60: suminf.    1.59682 (28) obj. -33.7212 iterations 6
Cbc0038I Pass  61: suminf.    1.55310 (11) obj. -33.7212 iterations 3
Cbc0038I Pass  62: suminf.    1.35960 (10) obj. -33.7212 iterations 6
Cbc0038I Pass  63: suminf.    1.18546 (10) obj. -33.7212 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -19.6755 - took 0.16 seconds
Cbc0012I Integer solution of -19.6755 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 108 rows 121 columns, reduced to 48 rows 52 columns
Cbc0012I Integer solution of -22.6755 found by RINS after 0 iterations and 0 nodes (0.22 seconds)
Cbc0031I 53 added rows had average density of 33.226415
Cbc0013I At root node, 53 cuts changed objective from -57.125558 to -31.332574 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7089 row cuts average 2.5 elements, 1 column cuts (1 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1096 row cuts average 106.2 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 573 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 244 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 842 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 303 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 195 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.635 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.6755 best solution, best possible -31.332574 (2.13 seconds)
Cbc0010I After 6 nodes, 7 on tree, -22.6755 best solution, best possible -31.332574 (2.86 seconds)
Cbc0010I After 24 nodes, 5 on tree, -22.6755 best solution, best possible -31.332574 (3.61 seconds)
Cbc0016I Integer solution of -23.80513 found by strong branching after 6446 iterations and 32 nodes (4.01 seconds)
Cbc0016I Integer solution of -24.22644 found by strong branching after 6448 iterations and 32 nodes (4.02 seconds)
Cbc0016I Integer solution of -24.68062 found by strong branching after 6611 iterations and 34 nodes (4.11 seconds)
Cbc0001I Search completed - best objective -24.68062, took 6797 iterations and 36 nodes (4.12 seconds)
Cbc0032I Strong branching done 536 times (9444 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 11, 106 variables fixed on reduced cost
Total time (CPU seconds):       3.03   (Wallclock seconds):       4.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.53268e-05 - average 3.28455e-07, 15 fixed columns
Coin0506I Presolve 108 (-30) rows, 60 (-16) columns and 328 (-92) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Coin0511I After Postsolve, objective 49.5978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Clp0000I Optimal - objective value 49.5978
Coin0511I After Postsolve, objective 49.5978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.59780048 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 428 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.88307
Cbc0038I Solution found of 1.40211
Cbc0038I Relaxing continuous gives -5.9031
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -5.9031 to -23.4219 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.0182
Cbc0038I Pass   1: suminf.    2.61903 (21) obj. -26.0182 iterations 36
Cbc0038I Pass   2: suminf.    1.69934 (5) obj. -26.0182 iterations 22
Cbc0038I Pass   3: suminf.    1.38102 (5) obj. -26.0182 iterations 6
Cbc0038I Pass   4: suminf.    1.22796 (3) obj. -26.0182 iterations 6
Cbc0038I Pass   5: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass   6: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass   7: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass   8: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass   9: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  10: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  11: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  12: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  13: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  14: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  15: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  16: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  17: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  18: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  19: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  20: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  21: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  22: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  23: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  24: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Pass  25: suminf.    0.90256 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  26: suminf.    1.42150 (4) obj. -26.0182 iterations 2
Cbc0038I Pass  27: suminf.    1.42150 (4) obj. -26.0182 iterations 0
Cbc0038I Pass  28: suminf.    1.22796 (3) obj. -26.0182 iterations 3
Cbc0038I Pass  29: suminf.    1.22254 (3) obj. -26.0182 iterations 1
Cbc0038I Pass  30: suminf.    0.90256 (4) obj. -26.0182 iterations 5
Cbc0038I Rounding solution of -24.1035 is better than previous of -23.4219

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -24.1035 to -24.2264 (0.07 seconds)
Cbc0038I Round again with cutoff of -30.6914
Cbc0038I Pass  30: suminf.    3.22748 (21) obj. -30.6914 iterations 0
Cbc0038I Pass  31: suminf.    1.59555 (5) obj. -30.6914 iterations 15
Cbc0038I Pass  32: suminf.    1.18407 (5) obj. -30.6914 iterations 3
Cbc0038I Pass  33: suminf.    1.27135 (4) obj. -30.6914 iterations 11
Cbc0038I Pass  34: suminf.    1.27135 (4) obj. -30.6914 iterations 0
Cbc0038I Pass  35: suminf.    1.59201 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  36: suminf.    1.37999 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  37: suminf.    1.34158 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  38: suminf.    1.63011 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  39: suminf.    1.37129 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  40: suminf.    4.63304 (13) obj. -30.6914 iterations 18
Cbc0038I Pass  41: suminf.    1.75729 (9) obj. -30.6914 iterations 24
Cbc0038I Pass  42: suminf.    1.36700 (4) obj. -30.6914 iterations 13
Cbc0038I Pass  43: suminf.    1.00857 (4) obj. -30.6914 iterations 4
Cbc0038I Pass  44: suminf.    1.00831 (4) obj. -30.6914 iterations 1
Cbc0038I Pass  45: suminf.    1.26752 (4) obj. -30.6914 iterations 3
Cbc0038I Pass  46: suminf.    1.09648 (3) obj. -30.6914 iterations 3
Cbc0038I Pass  47: suminf.    3.65482 (13) obj. -30.6914 iterations 16
Cbc0038I Pass  48: suminf.    1.97986 (7) obj. -30.6914 iterations 18
Cbc0038I Pass  49: suminf.    1.88758 (5) obj. -30.6914 iterations 4
Cbc0038I Pass  50: suminf.    1.61417 (5) obj. -30.6914 iterations 3
Cbc0038I Pass  51: suminf.    1.50820 (5) obj. -30.6914 iterations 2
Cbc0038I Pass  52: suminf.    1.50820 (5) obj. -30.6914 iterations 1
Cbc0038I Pass  53: suminf.    1.88758 (5) obj. -30.6914 iterations 4
Cbc0038I Pass  54: suminf.    2.06424 (8) obj. -30.6914 iterations 17
Cbc0038I Pass  55: suminf.    1.42059 (6) obj. -30.6914 iterations 11
Cbc0038I Pass  56: suminf.    2.17230 (6) obj. -30.6914 iterations 10
Cbc0038I Pass  57: suminf.    1.49497 (7) obj. -30.6914 iterations 4
Cbc0038I Pass  58: suminf.    1.48616 (7) obj. -30.6914 iterations 1
Cbc0038I Pass  59: suminf.    1.45812 (5) obj. -30.6914 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -24.2264 - took 0.09 seconds
Cbc0012I Integer solution of -24.22644 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 67 rows 38 columns
Cbc0031I 24 added rows had average density of 52.458333
Cbc0013I At root node, 24 cuts changed objective from -49.383952 to -42.227817 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7788 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1772 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.22644 best solution, best possible -42.227817 (0.72 seconds)
Cbc0016I Integer solution of -24.68062 found by strong branching after 6646 iterations and 41 nodes (0.91 seconds)
Cbc0001I Search completed - best objective -24.68062, took 7174 iterations and 54 nodes (0.91 seconds)
Cbc0032I Strong branching done 616 times (12939 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 24, 87 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       0.92

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 120 (-33) columns and 2033 (-1271) elements
Clp1000I sum of infeasibilities 2.68019e-07 - average 2.48165e-09, 14 fixed columns
Coin0506I Presolve 94 (-14) rows, 105 (-15) columns and 1557 (-476) elements
Clp0006I 0  Obj 51.815027 Dual inf 9.954848 (105)
Clp0029I End of values pass after 105 iterations
Clp0014I Perturbing problem by 0.001% of 2.043879 - largest nonzero change 1.4450928e-05 ( 0.0010393299%) - largest zero change 2.9959065e-05
Clp0000I Optimal - objective value 60.15347
Clp0000I Optimal - objective value 60.15347
Coin0511I After Postsolve, objective 60.15347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.15347
Clp0000I Optimal - objective value 60.15347
Clp0000I Optimal - objective value 60.15347
Clp0000I Optimal - objective value 60.15347
Coin0511I After Postsolve, objective 60.15347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.15347003 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 121 columns (121 integer (121 of which binary)) and 2045 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.527%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.1037
Cbc0038I Pass   1: suminf.    1.03667 (26) obj. -32.2569 iterations 25
Cbc0038I Pass   2: suminf.    0.02083 (1) obj. 7.00059 iterations 25
Cbc0038I Solution found of 7.97976
Cbc0038I Rounding solution of -7.54839 is better than previous of 7.97976

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 121 columns, reduced to 14 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -12.5062
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.03667 (26) obj. -32.2569 iterations 0
Cbc0038I Pass   4: suminf.    0.95143 (14) obj. -12.5062 iterations 17
Cbc0038I Solution found of -15.3319
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 121 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -23.6907
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   5: suminf.    1.03667 (26) obj. -32.2569 iterations 0
Cbc0038I Pass   6: suminf.    0.56036 (12) obj. -23.6907 iterations 19
Cbc0038I Pass   7: suminf.    0.27927 (10) obj. -26.9987 iterations 3
Cbc0038I Pass   8: suminf.    0.44664 (5) obj. -23.6907 iterations 28
Cbc0038I Pass   9: suminf.    0.14169 (2) obj. -23.7046 iterations 5
Cbc0038I Pass  10: suminf.    1.75216 (13) obj. -23.6907 iterations 33
Cbc0038I Pass  11: suminf.    1.00101 (10) obj. -23.6907 iterations 3
Cbc0038I Pass  12: suminf.    0.96127 (10) obj. -23.6907 iterations 2
Cbc0038I Pass  13: suminf.    0.72397 (5) obj. -23.6907 iterations 13
Cbc0038I Pass  14: suminf.    0.37838 (4) obj. -24.755 iterations 3
Cbc0038I Pass  15: suminf.    0.64443 (4) obj. -23.6907 iterations 4
Cbc0038I Pass  16: suminf.    1.27887 (15) obj. -23.6907 iterations 35
Cbc0038I Pass  17: suminf.    0.93184 (12) obj. -24.0663 iterations 9
Cbc0038I Pass  18: suminf.    1.23336 (10) obj. -23.6907 iterations 31
Cbc0038I Pass  19: suminf.    0.76647 (9) obj. -23.6907 iterations 7
Cbc0038I Pass  20: suminf.    3.32147 (20) obj. -23.6907 iterations 12
Cbc0038I Pass  21: suminf.    1.36464 (17) obj. -23.6907 iterations 5
Cbc0038I Pass  22: suminf.    1.36464 (17) obj. -23.6907 iterations 0
Cbc0038I Pass  23: suminf.    1.22065 (14) obj. -23.6907 iterations 9
Cbc0038I Pass  24: suminf.    1.22065 (14) obj. -23.6907 iterations 0
Cbc0038I Pass  25: suminf.    1.20167 (14) obj. -23.6907 iterations 4
Cbc0038I Pass  26: suminf.    1.20167 (14) obj. -23.6907 iterations 0
Cbc0038I Pass  27: suminf.    1.22065 (14) obj. -23.6907 iterations 4
Cbc0038I Pass  28: suminf.    2.05809 (20) obj. -23.6907 iterations 23
Cbc0038I Pass  29: suminf.    1.79127 (14) obj. -23.6907 iterations 5
Cbc0038I Pass  30: suminf.    1.77667 (14) obj. -23.6907 iterations 2
Cbc0038I Pass  31: suminf.    2.36595 (14) obj. -23.6907 iterations 17
Cbc0038I Pass  32: suminf.    2.36595 (14) obj. -23.6907 iterations 0
Cbc0038I Pass  33: suminf.    2.35020 (13) obj. -23.6907 iterations 4
Cbc0038I Pass  34: suminf.    2.09229 (13) obj. -23.6907 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 121 columns, reduced to 56 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -15.3319 to -19.6755 (0.20 seconds)
Cbc0038I Round again with cutoff of -33.7212
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  34: suminf.    1.18958 (28) obj. -33.7212 iterations 3
Cbc0038I Pass  35: suminf.    0.87194 (14) obj. -33.7212 iterations 33
Cbc0038I Pass  36: suminf.    0.38869 (11) obj. -34.4036 iterations 6
Cbc0038I Pass  37: suminf.    0.85721 (9) obj. -33.7212 iterations 22
Cbc0038I Pass  38: suminf.    0.85721 (9) obj. -33.7212 iterations 1
Cbc0038I Pass  39: suminf.    1.75188 (9) obj. -33.7212 iterations 7
Cbc0038I Pass  40: suminf.    1.75188 (9) obj. -33.7212 iterations 0
Cbc0038I Pass  41: suminf.    1.69963 (9) obj. -33.7212 iterations 6
Cbc0038I Pass  42: suminf.    1.69963 (9) obj. -33.7212 iterations 3
Cbc0038I Pass  43: suminf.    1.75188 (9) obj. -33.7212 iterations 6
Cbc0038I Pass  44: suminf.    1.10494 (12) obj. -33.7212 iterations 17
Cbc0038I Pass  45: suminf.    0.99225 (11) obj. -33.7212 iterations 7
Cbc0038I Pass  46: suminf.    1.70117 (12) obj. -33.7212 iterations 13
Cbc0038I Pass  47: suminf.    1.33367 (11) obj. -33.7212 iterations 7
Cbc0038I Pass  48: suminf.    1.58671 (10) obj. -33.7212 iterations 7
Cbc0038I Pass  49: suminf.    1.29449 (10) obj. -33.7212 iterations 4
Cbc0038I Pass  50: suminf.    1.51425 (16) obj. -33.7212 iterations 16
Cbc0038I Pass  51: suminf.    1.51425 (16) obj. -33.7212 iterations 0
Cbc0038I Pass  52: suminf.    0.92015 (11) obj. -33.7212 iterations 17
Cbc0038I Pass  53: suminf.    0.59813 (10) obj. -34.2964 iterations 4
Cbc0038I Pass  54: suminf.    0.88915 (11) obj. -33.7212 iterations 9
Cbc0038I Pass  55: suminf.    0.88101 (10) obj. -33.7212 iterations 3
Cbc0038I Pass  56: suminf.    1.13691 (11) obj. -33.7212 iterations 8
Cbc0038I Pass  57: suminf.    1.13691 (11) obj. -33.7212 iterations 2
Cbc0038I Pass  58: suminf.    1.72144 (11) obj. -33.7212 iterations 10
Cbc0038I Pass  59: suminf.    1.72144 (11) obj. -33.7212 iterations 0
Cbc0038I Pass  60: suminf.    1.59682 (28) obj. -33.7212 iterations 6
Cbc0038I Pass  61: suminf.    1.55310 (11) obj. -33.7212 iterations 3
Cbc0038I Pass  62: suminf.    1.35960 (10) obj. -33.7212 iterations 6
Cbc0038I Pass  63: suminf.    1.18546 (10) obj. -33.7212 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -19.6755 - took 0.18 seconds
Cbc0012I Integer solution of -19.6755 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 108 rows 121 columns, reduced to 48 rows 52 columns
Cbc0012I Integer solution of -22.6755 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 53 added rows had average density of 33.226415
Cbc0013I At root node, 53 cuts changed objective from -57.125558 to -31.332574 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7089 row cuts average 2.5 elements, 1 column cuts (1 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1096 row cuts average 106.2 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 573 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 244 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 842 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 303 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 195 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.6755 best solution, best possible -31.332574 (2.47 seconds)
Cbc0010I After 5 nodes, 6 on tree, -22.6755 best solution, best possible -31.332574 (3.19 seconds)
Cbc0010I After 17 nodes, 6 on tree, -22.6755 best solution, best possible -31.332574 (3.90 seconds)
Cbc0016I Integer solution of -23.80513 found by strong branching after 6446 iterations and 32 nodes (4.64 seconds)
Cbc0016I Integer solution of -24.22644 found by strong branching after 6448 iterations and 32 nodes (4.64 seconds)
Cbc0010I After 32 nodes, 4 on tree, -24.22644 best solution, best possible -31.332574 (4.64 seconds)
Cbc0016I Integer solution of -24.68062 found by strong branching after 6611 iterations and 34 nodes (4.75 seconds)
Cbc0001I Search completed - best objective -24.68062, took 6797 iterations and 36 nodes (4.76 seconds)
Cbc0032I Strong branching done 536 times (9444 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 11, 106 variables fixed on reduced cost
Total time (CPU seconds):       3.38   (Wallclock seconds):       4.78

