Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 13 (-2) columns and 56 (-19) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 18 (-1) rows, 12 (-1) columns and 52 (-4) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 58.683051
Clp0000I Optimal - objective value 58.683051
Coin0511I After Postsolve, objective 58.683051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.683051
Clp0000I Optimal - objective value 58.683051
Clp0000I Optimal - objective value 58.683051
Coin0511I After Postsolve, objective 58.683051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.68305052 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.553%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.55435
Cbc0038I Pass   1: suminf.    0.05882 (1) obj. -35.0644 iterations 6
Cbc0038I Solution found of -15.0811
Cbc0038I Relaxing continuous gives -15.0811
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -15.0811 to -25.7772 (0.00 seconds)
Cbc0038I Round again with cutoff of -28.906
Cbc0038I Pass   2: suminf.    0.05882 (1) obj. -35.0644 iterations 0
Cbc0038I Pass   3: suminf.    0.49073 (1) obj. -28.906 iterations 2
Cbc0038I Pass   4: suminf.    0.15789 (1) obj. -29.6995 iterations 2
Cbc0038I Pass   5: suminf.    0.16524 (3) obj. -28.906 iterations 2
Cbc0038I Pass   6: suminf.    0.15789 (1) obj. -28.906 iterations 2
Cbc0038I Pass   7: suminf.    0.05882 (1) obj. -28.906 iterations 2
Cbc0038I Pass   8: suminf.    1.11479 (3) obj. -28.906 iterations 5
Cbc0038I Pass   9: suminf.    0.38858 (1) obj. -28.906 iterations 5
Cbc0038I Pass  10: suminf.    0.26605 (1) obj. -28.906 iterations 4
Cbc0038I Pass  11: suminf.    0.29418 (3) obj. -28.906 iterations 4
Cbc0038I Pass  12: suminf.    0.20018 (1) obj. -28.906 iterations 2
Cbc0038I Pass  13: suminf.    0.21053 (1) obj. -29.1975 iterations 1
Cbc0038I Pass  14: suminf.    0.50672 (2) obj. -28.906 iterations 4
Cbc0038I Pass  15: suminf.    0.38858 (1) obj. -28.906 iterations 3
Cbc0038I Pass  16: suminf.    0.92035 (4) obj. -28.906 iterations 2
Cbc0038I Pass  17: suminf.    0.83249 (3) obj. -28.906 iterations 2
Cbc0038I Pass  18: suminf.    0.35206 (3) obj. -28.906 iterations 3
Cbc0038I Pass  19: suminf.    0.26605 (1) obj. -28.906 iterations 1
Cbc0038I Pass  20: suminf.    0.38858 (1) obj. -28.906 iterations 1
Cbc0038I Pass  21: suminf.    0.94291 (4) obj. -28.906 iterations 3
Cbc0038I Pass  22: suminf.    0.49073 (1) obj. -28.906 iterations 2
Cbc0038I Pass  23: suminf.    0.15789 (1) obj. -29.6995 iterations 2
Cbc0038I Pass  24: suminf.    0.95959 (3) obj. -28.906 iterations 6
Cbc0038I Pass  25: suminf.    0.05882 (1) obj. -35.0644 iterations 2
Cbc0038I Pass  26: suminf.    0.98579 (3) obj. -28.906 iterations 3
Cbc0038I Pass  27: suminf.    0.05882 (1) obj. -35.0644 iterations 2
Cbc0038I Pass  28: suminf.    0.05882 (1) obj. -35.0644 iterations 0
Cbc0038I Pass  29: suminf.    0.05882 (1) obj. -35.0644 iterations 2
Cbc0038I Pass  30: suminf.    0.45854 (1) obj. -28.906 iterations 5
Cbc0038I Pass  31: suminf.    0.27496 (2) obj. -28.906 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -25.7772 - took 0.02 seconds
Cbc0012I Integer solution of -25.7772 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0031I 5 added rows had average density of 7.4
Cbc0013I At root node, 26 cuts changed objective from -57.064584 to -25.61494 in 41 passes
Cbc0014I Cut generator 0 (Probing) - 80 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 224 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 133 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.354 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.77720000000001, took 395 iterations and 0 nodes (0.62 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-11) rows, 22 (-4) columns and 108 (-45) elements
Clp1000I sum of infeasibilities 1.06522e-08 - average 6.26598e-10, 5 fixed columns
Coin0506I Presolve 15 (-2) rows, 17 (-5) columns and 71 (-37) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 74.537347
Clp0000I Optimal - objective value 74.537347
Coin0511I After Postsolve, objective 74.537347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.537347
Clp0000I Optimal - objective value 74.537347
Clp0000I Optimal - objective value 74.537347
Coin0511I After Postsolve, objective 74.537347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.53734659 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 22 columns (22 integer (22 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.808%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.23118
Cbc0038I Pass   1: suminf.    0.60278 (4) obj. -58.9529 iterations 3
Cbc0038I Solution found of -18.8751
Cbc0038I Rounding solution of -19.8376 is better than previous of -18.8751

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.7973
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.60278 (4) obj. -58.9529 iterations 0
Cbc0038I Pass   3: suminf.    0.23439 (1) obj. -23.7973 iterations 10
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -35.6751 iterations 2
Cbc0038I Pass   5: suminf.    0.58216 (5) obj. -54.2262 iterations 5
Cbc0038I Pass   6: suminf.    0.49167 (3) obj. -54.1751 iterations 1
Cbc0038I Pass   7: suminf.    0.37725 (1) obj. -23.7973 iterations 5
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -32.6751 iterations 2
Cbc0038I Pass   9: suminf.    0.96215 (5) obj. -37.9008 iterations 4
Cbc0038I Pass  10: suminf.    0.47989 (1) obj. -23.7973 iterations 7
Cbc0038I Pass  11: suminf.    0.20000 (1) obj. -29.6751 iterations 3
Cbc0038I Pass  12: suminf.    0.20000 (1) obj. -29.6751 iterations 1
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -29.6751 iterations 1
Cbc0038I Pass  14: suminf.    0.59844 (3) obj. -41.3157 iterations 3
Cbc0038I Pass  15: suminf.    0.28942 (1) obj. -23.7973 iterations 5
Cbc0038I Pass  16: suminf.    0.20000 (1) obj. -25.6751 iterations 3
Cbc0038I Pass  17: suminf.    1.68996 (6) obj. -23.7973 iterations 6
Cbc0038I Pass  18: suminf.    0.87632 (4) obj. -23.7973 iterations 3
Cbc0038I Pass  19: suminf.    0.22665 (2) obj. -23.7973 iterations 4
Cbc0038I Pass  20: suminf.    0.12500 (1) obj. -26.3041 iterations 1
Cbc0038I Pass  21: suminf.    0.55498 (3) obj. -23.7973 iterations 3
Cbc0038I Pass  22: suminf.    0.43088 (3) obj. -37.4242 iterations 2
Cbc0038I Pass  23: suminf.    0.43088 (3) obj. -37.4242 iterations 0
Cbc0038I Pass  24: suminf.    0.55498 (3) obj. -23.7973 iterations 4
Cbc0038I Pass  25: suminf.    1.36246 (4) obj. -23.7973 iterations 4
Cbc0038I Pass  26: suminf.    1.36246 (4) obj. -23.7973 iterations 0
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -25.6751 iterations 3
Cbc0038I Pass  28: suminf.    0.28942 (1) obj. -23.7973 iterations 1
Cbc0038I Pass  29: suminf.    0.47650 (2) obj. -23.7973 iterations 2
Cbc0038I Pass  30: suminf.    0.20000 (1) obj. -29.6751 iterations 1
Cbc0038I Pass  31: suminf.    0.47989 (1) obj. -23.7973 iterations 1
Cbc0038I Rounding solution of -25.7772 is better than previous of -19.8376

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 22 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.5086
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.60278 (4) obj. -58.9529 iterations 0
Cbc0038I Pass  32: suminf.    0.35078 (1) obj. -32.5086 iterations 10
Cbc0038I Pass  33: suminf.    0.20000 (1) obj. -35.6751 iterations 2
Cbc0038I Pass  34: suminf.    1.02978 (4) obj. -32.5086 iterations 8
Cbc0038I Pass  35: suminf.    0.73690 (4) obj. -37.1946 iterations 1
Cbc0038I Pass  36: suminf.    0.53694 (3) obj. -32.5086 iterations 5
Cbc0038I Pass  37: suminf.    0.53694 (3) obj. -32.5086 iterations 0
Cbc0038I Pass  38: suminf.    0.43088 (3) obj. -46.4242 iterations 2
Cbc0038I Pass  39: suminf.    0.43088 (3) obj. -46.4242 iterations 0
Cbc0038I Pass  40: suminf.    0.51211 (4) obj. -32.5086 iterations 4
Cbc0038I Pass  41: suminf.    0.37710 (2) obj. -32.5086 iterations 4
Cbc0038I Pass  42: suminf.    0.37710 (2) obj. -32.5086 iterations 0
Cbc0038I Pass  43: suminf.    0.39326 (2) obj. -32.5086 iterations 1
Cbc0038I Pass  44: suminf.    0.74158 (4) obj. -32.5086 iterations 5
Cbc0038I Pass  45: suminf.    0.54199 (4) obj. -34.202 iterations 2
Cbc0038I Pass  46: suminf.    0.67033 (4) obj. -32.5086 iterations 4
Cbc0038I Pass  47: suminf.    0.67033 (4) obj. -32.5086 iterations 0
Cbc0038I Pass  48: suminf.    0.31678 (3) obj. -32.5086 iterations 5
Cbc0038I Pass  49: suminf.    0.31678 (3) obj. -32.5086 iterations 0
Cbc0038I Pass  50: suminf.    0.20783 (2) obj. -32.5086 iterations 1
Cbc0038I Pass  51: suminf.    0.20000 (1) obj. -32.6751 iterations 1
Cbc0038I Pass  52: suminf.    0.20793 (1) obj. -32.5086 iterations 1
Cbc0038I Pass  53: suminf.    1.39824 (6) obj. -32.5086 iterations 8
Cbc0038I Pass  54: suminf.    1.16967 (5) obj. -32.5086 iterations 2
Cbc0038I Pass  55: suminf.    0.32500 (2) obj. -41.6751 iterations 2
Cbc0038I Pass  56: suminf.    0.50210 (2) obj. -32.5086 iterations 2
Cbc0038I Pass  57: suminf.    0.50210 (2) obj. -32.5086 iterations 0
Cbc0038I Pass  58: suminf.    0.48850 (2) obj. -32.5086 iterations 1
Cbc0038I Pass  59: suminf.    0.72494 (3) obj. -32.5086 iterations 3
Cbc0038I Pass  60: suminf.    0.72494 (3) obj. -32.5086 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 22 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -25.7772 - took 0.01 seconds
Cbc0012I Integer solution of -25.7772 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 17 rows 22 columns, reduced to 8 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 6
Cbc0013I At root node, 5 cuts changed objective from -59.433979 to -26.863375 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 4.1 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25.77720000000001, took 12 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 13 (-2) columns and 56 (-19) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 18 (-1) rows, 12 (-1) columns and 52 (-4) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 58.683051
Clp0000I Optimal - objective value 58.683051
Coin0511I After Postsolve, objective 58.683051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.683051
Clp0000I Optimal - objective value 58.683051
Clp0000I Optimal - objective value 58.683051
Coin0511I After Postsolve, objective 58.683051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.68305052 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.553%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.55435
Cbc0038I Pass   1: suminf.    0.05882 (1) obj. -35.0644 iterations 6
Cbc0038I Solution found of -15.0811
Cbc0038I Relaxing continuous gives -15.0811
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -15.0811 to -25.7772 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.906
Cbc0038I Pass   2: suminf.    0.05882 (1) obj. -35.0644 iterations 0
Cbc0038I Pass   3: suminf.    0.49073 (1) obj. -28.906 iterations 2
Cbc0038I Pass   4: suminf.    0.15789 (1) obj. -29.6995 iterations 2
Cbc0038I Pass   5: suminf.    0.16524 (3) obj. -28.906 iterations 2
Cbc0038I Pass   6: suminf.    0.15789 (1) obj. -28.906 iterations 2
Cbc0038I Pass   7: suminf.    0.05882 (1) obj. -28.906 iterations 2
Cbc0038I Pass   8: suminf.    1.11479 (3) obj. -28.906 iterations 5
Cbc0038I Pass   9: suminf.    0.38858 (1) obj. -28.906 iterations 5
Cbc0038I Pass  10: suminf.    0.26605 (1) obj. -28.906 iterations 4
Cbc0038I Pass  11: suminf.    0.29418 (3) obj. -28.906 iterations 4
Cbc0038I Pass  12: suminf.    0.20018 (1) obj. -28.906 iterations 2
Cbc0038I Pass  13: suminf.    0.21053 (1) obj. -29.1975 iterations 1
Cbc0038I Pass  14: suminf.    0.50672 (2) obj. -28.906 iterations 4
Cbc0038I Pass  15: suminf.    0.38858 (1) obj. -28.906 iterations 3
Cbc0038I Pass  16: suminf.    0.92035 (4) obj. -28.906 iterations 2
Cbc0038I Pass  17: suminf.    0.83249 (3) obj. -28.906 iterations 2
Cbc0038I Pass  18: suminf.    0.35206 (3) obj. -28.906 iterations 3
Cbc0038I Pass  19: suminf.    0.26605 (1) obj. -28.906 iterations 1
Cbc0038I Pass  20: suminf.    0.38858 (1) obj. -28.906 iterations 1
Cbc0038I Pass  21: suminf.    0.94291 (4) obj. -28.906 iterations 3
Cbc0038I Pass  22: suminf.    0.49073 (1) obj. -28.906 iterations 2
Cbc0038I Pass  23: suminf.    0.15789 (1) obj. -29.6995 iterations 2
Cbc0038I Pass  24: suminf.    0.95959 (3) obj. -28.906 iterations 6
Cbc0038I Pass  25: suminf.    0.05882 (1) obj. -35.0644 iterations 2
Cbc0038I Pass  26: suminf.    0.98579 (3) obj. -28.906 iterations 3
Cbc0038I Pass  27: suminf.    0.05882 (1) obj. -35.0644 iterations 2
Cbc0038I Pass  28: suminf.    0.05882 (1) obj. -35.0644 iterations 0
Cbc0038I Pass  29: suminf.    0.05882 (1) obj. -35.0644 iterations 2
Cbc0038I Pass  30: suminf.    0.45854 (1) obj. -28.906 iterations 5
Cbc0038I Pass  31: suminf.    0.27496 (2) obj. -28.906 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -25.7772 - took 0.01 seconds
Cbc0012I Integer solution of -25.7772 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 13 columns, reduced to 12 rows 8 columns
Cbc0031I 5 added rows had average density of 7.4
Cbc0013I At root node, 26 cuts changed objective from -57.064584 to -25.61494 in 41 passes
Cbc0014I Cut generator 0 (Probing) - 80 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 224 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 133 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.330 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.77720000000001, took 395 iterations and 0 nodes (0.61 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 22 (-5) columns and 108 (-46) elements
Clp1000I sum of infeasibilities 1.06522e-08 - average 6.26598e-10, 5 fixed columns
Coin0506I Presolve 15 (-2) rows, 17 (-5) columns and 71 (-37) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 74.537347
Clp0000I Optimal - objective value 74.537347
Coin0511I After Postsolve, objective 74.537347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.537347
Clp0000I Optimal - objective value 74.537347
Clp0000I Optimal - objective value 74.537347
Coin0511I After Postsolve, objective 74.537347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.53734659 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 22 columns (22 integer (22 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.808%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.23118
Cbc0038I Pass   1: suminf.    0.60278 (4) obj. -58.9529 iterations 3
Cbc0038I Solution found of -18.8751
Cbc0038I Rounding solution of -19.8376 is better than previous of -18.8751

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.7973
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.60278 (4) obj. -58.9529 iterations 0
Cbc0038I Pass   3: suminf.    0.23439 (1) obj. -23.7973 iterations 10
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -35.6751 iterations 2
Cbc0038I Pass   5: suminf.    0.58216 (5) obj. -54.2262 iterations 5
Cbc0038I Pass   6: suminf.    0.49167 (3) obj. -54.1751 iterations 1
Cbc0038I Pass   7: suminf.    0.37725 (1) obj. -23.7973 iterations 5
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -32.6751 iterations 2
Cbc0038I Pass   9: suminf.    0.96215 (5) obj. -37.9008 iterations 4
Cbc0038I Pass  10: suminf.    0.47989 (1) obj. -23.7973 iterations 7
Cbc0038I Pass  11: suminf.    0.20000 (1) obj. -29.6751 iterations 3
Cbc0038I Pass  12: suminf.    0.20000 (1) obj. -29.6751 iterations 1
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -29.6751 iterations 1
Cbc0038I Pass  14: suminf.    0.59844 (3) obj. -41.3157 iterations 3
Cbc0038I Pass  15: suminf.    0.28942 (1) obj. -23.7973 iterations 5
Cbc0038I Pass  16: suminf.    0.20000 (1) obj. -25.6751 iterations 3
Cbc0038I Pass  17: suminf.    1.68996 (6) obj. -23.7973 iterations 6
Cbc0038I Pass  18: suminf.    0.87632 (4) obj. -23.7973 iterations 3
Cbc0038I Pass  19: suminf.    0.22665 (2) obj. -23.7973 iterations 4
Cbc0038I Pass  20: suminf.    0.12500 (1) obj. -26.3041 iterations 1
Cbc0038I Pass  21: suminf.    0.55498 (3) obj. -23.7973 iterations 3
Cbc0038I Pass  22: suminf.    0.43088 (3) obj. -37.4242 iterations 2
Cbc0038I Pass  23: suminf.    0.43088 (3) obj. -37.4242 iterations 0
Cbc0038I Pass  24: suminf.    0.55498 (3) obj. -23.7973 iterations 4
Cbc0038I Pass  25: suminf.    1.36246 (4) obj. -23.7973 iterations 4
Cbc0038I Pass  26: suminf.    1.36246 (4) obj. -23.7973 iterations 0
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -25.6751 iterations 3
Cbc0038I Pass  28: suminf.    0.28942 (1) obj. -23.7973 iterations 1
Cbc0038I Pass  29: suminf.    0.47650 (2) obj. -23.7973 iterations 2
Cbc0038I Pass  30: suminf.    0.20000 (1) obj. -29.6751 iterations 1
Cbc0038I Pass  31: suminf.    0.47989 (1) obj. -23.7973 iterations 1
Cbc0038I Rounding solution of -25.7772 is better than previous of -19.8376

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 22 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.5086
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.60278 (4) obj. -58.9529 iterations 0
Cbc0038I Pass  32: suminf.    0.35078 (1) obj. -32.5086 iterations 10
Cbc0038I Pass  33: suminf.    0.20000 (1) obj. -35.6751 iterations 2
Cbc0038I Pass  34: suminf.    1.02978 (4) obj. -32.5086 iterations 8
Cbc0038I Pass  35: suminf.    0.73690 (4) obj. -37.1946 iterations 1
Cbc0038I Pass  36: suminf.    0.53694 (3) obj. -32.5086 iterations 5
Cbc0038I Pass  37: suminf.    0.53694 (3) obj. -32.5086 iterations 0
Cbc0038I Pass  38: suminf.    0.43088 (3) obj. -46.4242 iterations 2
Cbc0038I Pass  39: suminf.    0.43088 (3) obj. -46.4242 iterations 0
Cbc0038I Pass  40: suminf.    0.51211 (4) obj. -32.5086 iterations 4
Cbc0038I Pass  41: suminf.    0.37710 (2) obj. -32.5086 iterations 4
Cbc0038I Pass  42: suminf.    0.37710 (2) obj. -32.5086 iterations 0
Cbc0038I Pass  43: suminf.    0.39326 (2) obj. -32.5086 iterations 1
Cbc0038I Pass  44: suminf.    0.74158 (4) obj. -32.5086 iterations 5
Cbc0038I Pass  45: suminf.    0.54199 (4) obj. -34.202 iterations 2
Cbc0038I Pass  46: suminf.    0.67033 (4) obj. -32.5086 iterations 4
Cbc0038I Pass  47: suminf.    0.67033 (4) obj. -32.5086 iterations 0
Cbc0038I Pass  48: suminf.    0.31678 (3) obj. -32.5086 iterations 5
Cbc0038I Pass  49: suminf.    0.31678 (3) obj. -32.5086 iterations 0
Cbc0038I Pass  50: suminf.    0.20783 (2) obj. -32.5086 iterations 1
Cbc0038I Pass  51: suminf.    0.20000 (1) obj. -32.6751 iterations 1
Cbc0038I Pass  52: suminf.    0.20793 (1) obj. -32.5086 iterations 1
Cbc0038I Pass  53: suminf.    1.39824 (6) obj. -32.5086 iterations 8
Cbc0038I Pass  54: suminf.    1.16967 (5) obj. -32.5086 iterations 2
Cbc0038I Pass  55: suminf.    0.32500 (2) obj. -41.6751 iterations 2
Cbc0038I Pass  56: suminf.    0.50210 (2) obj. -32.5086 iterations 2
Cbc0038I Pass  57: suminf.    0.50210 (2) obj. -32.5086 iterations 0
Cbc0038I Pass  58: suminf.    0.48850 (2) obj. -32.5086 iterations 1
Cbc0038I Pass  59: suminf.    0.72494 (3) obj. -32.5086 iterations 3
Cbc0038I Pass  60: suminf.    0.72494 (3) obj. -32.5086 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 22 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -25.7772 - took 0.01 seconds
Cbc0012I Integer solution of -25.7772 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 17 rows 22 columns, reduced to 8 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 6
Cbc0013I At root node, 5 cuts changed objective from -59.433979 to -26.863375 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 4.1 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25.77720000000001, took 12 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

