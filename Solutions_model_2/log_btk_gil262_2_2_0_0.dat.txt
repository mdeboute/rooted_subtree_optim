Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 261 (-3) columns and 1501 (-44) elements
Clp1000I sum of infeasibilities 6.20412e-05 - average 1.22854e-07, 141 fixed columns
Coin0506I Presolve 211 (-294) rows, 113 (-148) columns and 630 (-871) elements
Clp0029I End of values pass after 113 iterations
Clp0000I Optimal - objective value 187.76903
Clp0000I Optimal - objective value 187.76903
Coin0511I After Postsolve, objective 187.76903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13351183 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 187.76903
Clp0000I Optimal - objective value 187.76903
Clp0000I Optimal - objective value 187.76903
Coin0511I After Postsolve, objective 187.76903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 187.7690262 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 261 columns (260 integer (260 of which binary)) and 1501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 71 integers unsatisfied sum - 10.1766
Cbc0038I Solution found of -9.73783
Cbc0038I Relaxing continuous gives -16.3817
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 261 columns, reduced to 126 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -16.3817 to -77.7346 (0.07 seconds)
Cbc0038I Round again with cutoff of -88.7382
Cbc0038I Pass   1: suminf.    2.77024 (23) obj. -88.7382 iterations 200
Cbc0038I Pass   2: suminf.    2.24256 (9) obj. -88.7382 iterations 42
Cbc0038I Pass   3: suminf.    1.58082 (8) obj. -88.7382 iterations 11
Cbc0038I Pass   4: suminf.    1.44544 (7) obj. -88.7382 iterations 11
Cbc0038I Pass   5: suminf.    3.10291 (9) obj. -88.7382 iterations 21
Cbc0038I Pass   6: suminf.    2.31065 (6) obj. -88.7382 iterations 6
Cbc0038I Pass   7: suminf.    0.52495 (3) obj. -88.7382 iterations 11
Cbc0038I Pass   8: suminf.    1.45470 (5) obj. -88.7382 iterations 14
Cbc0038I Pass   9: suminf.    1.10848 (4) obj. -88.7382 iterations 1
Cbc0038I Pass  10: suminf.    0.91690 (3) obj. -88.7382 iterations 7
Cbc0038I Pass  11: suminf.    0.75156 (4) obj. -88.7382 iterations 6
Cbc0038I Pass  12: suminf.    1.22351 (4) obj. -88.7382 iterations 8
Cbc0038I Pass  13: suminf.    4.24115 (11) obj. -88.7382 iterations 46
Cbc0038I Pass  14: suminf.    3.19821 (11) obj. -88.7382 iterations 29
Cbc0038I Pass  15: suminf.    2.63012 (7) obj. -88.7382 iterations 36
Cbc0038I Pass  16: suminf.    1.05744 (4) obj. -88.7382 iterations 13
Cbc0038I Pass  17: suminf.    0.70736 (3) obj. -88.7382 iterations 1
Cbc0038I Pass  18: suminf.    1.20090 (3) obj. -88.7382 iterations 5
Cbc0038I Pass  19: suminf.    1.45395 (6) obj. -88.7382 iterations 46
Cbc0038I Pass  20: suminf.    1.21733 (4) obj. -88.7382 iterations 20
Cbc0038I Pass  21: suminf.    0.55299 (2) obj. -88.7382 iterations 37
Cbc0038I Pass  22: suminf.    0.31249 (2) obj. -88.7382 iterations 6
Cbc0038I Pass  23: suminf.    2.64398 (10) obj. -88.7382 iterations 34
Cbc0038I Pass  24: suminf.    2.33331 (10) obj. -88.7382 iterations 32
Cbc0038I Pass  25: suminf.    1.83722 (8) obj. -88.7382 iterations 10
Cbc0038I Pass  26: suminf.    1.14238 (3) obj. -88.7382 iterations 22
Cbc0038I Pass  27: suminf.    0.73041 (2) obj. -88.7382 iterations 4
Cbc0038I Pass  28: suminf.    0.59849 (2) obj. -88.7382 iterations 4
Cbc0038I Pass  29: suminf.    0.75274 (3) obj. -88.7382 iterations 5
Cbc0038I Pass  30: suminf.    0.29123 (1) obj. -88.7382 iterations 2
Cbc0038I Rounding solution of -87.9261 is better than previous of -77.7346

Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 261 columns, reduced to 155 rows 90 columns
Cbc0038I Mini branch and bound improved solution from -87.9261 to -105.197 (0.18 seconds)
Cbc0038I Round again with cutoff of -121.711
Cbc0038I Pass  30: suminf.    4.28114 (25) obj. -121.711 iterations 12
Cbc0038I Pass  31: suminf.    4.87570 (12) obj. -121.711 iterations 54
Cbc0038I Pass  32: suminf.    4.05678 (12) obj. -121.711 iterations 18
Cbc0038I Pass  33: suminf.    3.59923 (10) obj. -121.711 iterations 32
Cbc0038I Pass  34: suminf.    3.18575 (8) obj. -121.711 iterations 19
Cbc0038I Pass  35: suminf.    2.97384 (8) obj. -121.711 iterations 14
Cbc0038I Pass  36: suminf.    2.69449 (11) obj. -121.711 iterations 18
Cbc0038I Pass  37: suminf.    2.24458 (9) obj. -121.711 iterations 63
Cbc0038I Pass  38: suminf.    2.22334 (8) obj. -121.711 iterations 10
Cbc0038I Pass  39: suminf.    2.81446 (8) obj. -121.711 iterations 13
Cbc0038I Pass  40: suminf.    1.89130 (10) obj. -121.711 iterations 19
Cbc0038I Pass  41: suminf.    1.84365 (9) obj. -121.711 iterations 4
Cbc0038I Pass  42: suminf.    3.12577 (8) obj. -121.711 iterations 45
Cbc0038I Pass  43: suminf.    2.98373 (8) obj. -121.711 iterations 17
Cbc0038I Pass  44: suminf.    3.45955 (10) obj. -121.711 iterations 38
Cbc0038I Pass  45: suminf.    3.15897 (10) obj. -121.711 iterations 8
Cbc0038I Pass  46: suminf.    2.24458 (9) obj. -121.711 iterations 40
Cbc0038I Pass  47: suminf.    2.22334 (8) obj. -121.711 iterations 10
Cbc0038I Pass  48: suminf.    2.81446 (8) obj. -121.711 iterations 13
Cbc0038I Pass  49: suminf.    1.89130 (10) obj. -121.711 iterations 19
Cbc0038I Pass  50: suminf.    1.84365 (9) obj. -121.711 iterations 4
Cbc0038I Pass  51: suminf.    3.12577 (8) obj. -121.711 iterations 49
Cbc0038I Pass  52: suminf.    2.98373 (8) obj. -121.711 iterations 18
Cbc0038I Pass  53: suminf.    3.45955 (10) obj. -121.711 iterations 39
Cbc0038I Pass  54: suminf.    3.15897 (10) obj. -121.711 iterations 9
Cbc0038I Pass  55: suminf.    2.24458 (9) obj. -121.711 iterations 46
Cbc0038I Pass  56: suminf.    2.22334 (8) obj. -121.711 iterations 10
Cbc0038I Pass  57: suminf.    2.81446 (8) obj. -121.711 iterations 12
Cbc0038I Pass  58: suminf.    1.89130 (10) obj. -121.711 iterations 19
Cbc0038I Pass  59: suminf.    1.84365 (9) obj. -121.711 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 261 columns, reduced to 137 rows 79 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -105.197 - took 0.26 seconds
Cbc0012I Integer solution of -105.19671 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 505 rows 261 columns, reduced to 127 rows 73 columns
Cbc0031I 28 added rows had average density of 140.14286
Cbc0013I At root node, 28 cuts changed objective from -187.76903 to -173.07804 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35057 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.460 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2319 row cuts average 255.2 elements, 0 column cuts (0 active)  in 0.382 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.355 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 250.8 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -105.19671 best solution, best possible -173.07804 (4.06 seconds)
Cbc0010I After 29 nodes, 10 on tree, -105.19671 best solution, best possible -173.07804 (4.76 seconds)
Cbc0038I Full problem 505 rows 261 columns, reduced to 10 rows 13 columns
Cbc0012I Integer solution of -105.42903 found by RINS after 16591 iterations and 44 nodes (4.80 seconds)
Cbc0004I Integer solution of -106.53381 found after 17205 iterations and 66 nodes (4.88 seconds)
Cbc0038I Full problem 505 rows 261 columns, reduced to 147 rows 79 columns
Cbc0012I Integer solution of -108.66743 found by RINS after 17920 iterations and 93 nodes (5.01 seconds)
Cbc0001I Search completed - best objective -108.66743, took 21604 iterations and 196 nodes (5.40 seconds)
Cbc0032I Strong branching done 1580 times (40258 iterations), fathomed 31 nodes and fixed 69 variables
Cbc0035I Maximum depth 46, 1075 variables fixed on reduced cost
Total time (CPU seconds):       5.31   (Wallclock seconds):       5.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 375 (-151) rows, 390 (-134) columns and 19266 (-16470) elements
Clp1000I sum of infeasibilities 1.73204e-05 - average 4.61876e-08, 269 fixed columns
Coin0506I Presolve 92 (-283) rows, 117 (-273) columns and 404 (-18862) elements
Clp0006I 0  Obj 143.37654 Primal inf 9.6002914e-08 (1) Dual inf 2.0000044e+09 (116)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 0.15330124 - largest nonzero change 2.8402819e-05 ( 0.0025820745%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 150.08953
Clp0000I Optimal - objective value 150.08953
Coin0511I After Postsolve, objective 150.08953, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 150.08953 Dual inf 597.55179 (141)
Clp0014I Perturbing problem by 0.001% of 1.7598446 - largest nonzero change 1.807027e-05 ( 0.001262127%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 385.21194
Clp0000I Optimal - objective value 385.21194
Clp0000I Optimal - objective value 385.21194
Coin0511I After Postsolve, objective 385.21194, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 385.2119402 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 375 rows, 390 columns (390 integer (390 of which binary)) and 19266 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.168%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 113 integers unsatisfied sum - 5.85031
Cbc0038I Pass   1: suminf.    4.81235 (107) obj. -371.167 iterations 53
Cbc0038I Pass   2: suminf.    3.61884 (84) obj. -316.189 iterations 23
Cbc0038I Pass   3: suminf.    2.55694 (62) obj. -277.191 iterations 22
Cbc0038I Pass   4: suminf.    1.61522 (41) obj. -251.403 iterations 21
Cbc0038I Pass   5: suminf.    0.64366 (18) obj. -216.92 iterations 23
Cbc0038I Solution found of -190.87
Cbc0038I Before mini branch and bound, 277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 375 rows 390 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -210.304
Cbc0038I Pass   6: suminf.    4.81235 (107) obj. -371.167 iterations 0
Cbc0038I Pass   7: suminf.    3.46865 (81) obj. -299.09 iterations 26
Cbc0038I Pass   8: suminf.    2.55694 (62) obj. -277.191 iterations 19
Cbc0038I Pass   9: suminf.    2.05761 (51) obj. -263.828 iterations 11
Cbc0038I Pass  10: suminf.    1.31176 (34) obj. -243.75 iterations 17
Cbc0038I Pass  11: suminf.    0.46110 (13) obj. -210.304 iterations 26
Cbc0038I Pass  12: suminf.    1.00665 (5) obj. -210.304 iterations 29
Cbc0038I Pass  13: suminf.    0.23395 (2) obj. -210.304 iterations 15
Cbc0038I Pass  14: suminf.    1.77335 (26) obj. -210.304 iterations 93
Cbc0038I Pass  15: suminf.    1.06768 (23) obj. -210.304 iterations 19
Cbc0038I Pass  16: suminf.    0.78137 (4) obj. -210.304 iterations 39
Cbc0038I Pass  17: suminf.    0.20915 (3) obj. -212.897 iterations 18
Cbc0038I Pass  18: suminf.    1.13204 (4) obj. -210.304 iterations 21
Cbc0038I Pass  19: suminf.    0.70687 (4) obj. -210.304 iterations 7
Cbc0038I Pass  20: suminf.    0.80742 (4) obj. -210.304 iterations 24
Cbc0038I Pass  21: suminf.    0.80742 (4) obj. -210.304 iterations 0
Cbc0038I Pass  22: suminf.    0.27874 (3) obj. -210.304 iterations 24
Cbc0038I Pass  23: suminf.    0.17839 (3) obj. -210.304 iterations 21
Cbc0038I Pass  24: suminf.    0.59556 (4) obj. -210.304 iterations 14
Cbc0038I Pass  25: suminf.    0.50137 (7) obj. -210.304 iterations 17
Cbc0038I Pass  26: suminf.    0.77208 (6) obj. -210.304 iterations 20
Cbc0038I Pass  27: suminf.    0.47746 (5) obj. -210.304 iterations 8
Cbc0038I Pass  28: suminf.    0.73436 (3) obj. -210.304 iterations 16
Cbc0038I Pass  29: suminf.    0.41593 (2) obj. -212.055 iterations 20
Cbc0038I Pass  30: suminf.    0.73436 (3) obj. -210.304 iterations 14
Cbc0038I Pass  31: suminf.    1.52090 (30) obj. -210.304 iterations 96
Cbc0038I Pass  32: suminf.    1.52090 (30) obj. -210.304 iterations 13
Cbc0038I Pass  33: suminf.    0.87216 (15) obj. -210.304 iterations 65
Cbc0038I Pass  34: suminf.    0.85041 (16) obj. -210.304 iterations 20
Cbc0038I Pass  35: suminf.    1.27413 (6) obj. -210.304 iterations 65
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 375 rows 390 columns, reduced to 52 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -190.87 to -199.007 (0.23 seconds)
Cbc0038I Round again with cutoff of -245.286
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  35: suminf.    4.81235 (107) obj. -371.167 iterations 0
Cbc0038I Pass  36: suminf.    3.51865 (82) obj. -300.04 iterations 25
Cbc0038I Pass  37: suminf.    2.32751 (57) obj. -270.512 iterations 25
Cbc0038I Pass  38: suminf.    1.48451 (38) obj. -247.578 iterations 19
Cbc0038I Pass  39: suminf.    1.45533 (20) obj. -245.286 iterations 45
Cbc0038I Pass  40: suminf.    1.45533 (20) obj. -245.286 iterations 0
Cbc0038I Pass  41: suminf.    0.96659 (13) obj. -245.286 iterations 42
Cbc0038I Pass  42: suminf.    0.77263 (13) obj. -245.286 iterations 27
Cbc0038I Pass  43: suminf.    1.04945 (9) obj. -245.286 iterations 56
Cbc0038I Pass  44: suminf.    0.93849 (11) obj. -245.286 iterations 24
Cbc0038I Pass  45: suminf.    1.67854 (12) obj. -245.286 iterations 24
Cbc0038I Pass  46: suminf.    2.10412 (21) obj. -245.286 iterations 44
Cbc0038I Pass  47: suminf.    0.93003 (18) obj. -245.286 iterations 42
Cbc0038I Pass  48: suminf.    1.15119 (13) obj. -245.286 iterations 30
Cbc0038I Pass  49: suminf.    0.84318 (13) obj. -245.286 iterations 13
Cbc0038I Pass  50: suminf.    1.08030 (9) obj. -245.286 iterations 48
Cbc0038I Pass  51: suminf.    0.68276 (9) obj. -245.286 iterations 28
Cbc0038I Pass  52: suminf.    2.86817 (32) obj. -245.286 iterations 96
Cbc0038I Pass  53: suminf.    1.45701 (29) obj. -245.286 iterations 36
Cbc0038I Pass  54: suminf.    1.28207 (27) obj. -246.684 iterations 10
Cbc0038I Pass  55: suminf.    1.12065 (19) obj. -245.286 iterations 31
Cbc0038I Pass  56: suminf.    1.12065 (19) obj. -245.286 iterations 0
Cbc0038I Pass  57: suminf.    1.08379 (11) obj. -245.286 iterations 64
Cbc0038I Pass  58: suminf.    0.74982 (11) obj. -245.286 iterations 34
Cbc0038I Pass  59: suminf.    0.87117 (9) obj. -245.286 iterations 42
Cbc0038I Pass  60: suminf.    2.79447 (35) obj. -245.286 iterations 61
Cbc0038I Pass  61: suminf.    1.99072 (33) obj. -245.286 iterations 24
Cbc0038I Pass  62: suminf.    1.93161 (26) obj. -245.286 iterations 47
Cbc0038I Pass  63: suminf.    1.79002 (26) obj. -245.286 iterations 23
Cbc0038I Pass  64: suminf.    1.89180 (18) obj. -245.286 iterations 58
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 375 rows 390 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -199.007 - took 0.23 seconds
Cbc0012I Integer solution of -199.00682 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 375 rows 390 columns, reduced to 10 rows 13 columns
Cbc0031I 121 added rows had average density of 21.38843
Cbc0013I At root node, 121 cuts changed objective from -385.21194 to -208.75534 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 3058 row cuts average 2.4 elements, 43 column cuts (43 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 69 row cuts average 168.4 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 340 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 691 row cuts average 55.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 431 row cuts average 186.6 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -199.00682 best solution, best possible -208.75534 (1.10 seconds)
Cbc0012I Integer solution of -199.3573 found by DiveCoefficient after 678 iterations and 3 nodes (1.21 seconds)
Cbc0038I Full problem 375 rows 390 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -201.17706 found by rounding after 2035 iterations and 47 nodes (1.64 seconds)
Cbc0038I Full problem 496 rows 390 columns, reduced to 207 rows 219 columns
Cbc0044I Reduced cost fixing - 207 rows, 219 columns - restarting search
Cbc0012I Integer solution of -201.17706 found by Previous solution after 0 iterations and 0 nodes (1.70 seconds)
Cbc0038I Full problem 207 rows 219 columns, reduced to 117 rows 119 columns - 28 fixed gives 89, 91 - ok now
Cbc0038I Full problem 207 rows 219 columns, reduced to 3 rows 3 columns
Cbc0031I 112 added rows had average density of 10.25
Cbc0013I At root node, 112 cuts changed objective from -363.66399 to -208.44874 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1374 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 105 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 88 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 78 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 247 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 125 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 39.8 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 109 row cuts average 19.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -201.17706 best solution, best possible -207.90553 (2.08 seconds)
Cbc0001I Search completed - best objective -201.17706, took 1380 iterations and 42 nodes (2.32 seconds)
Cbc0032I Strong branching done 260 times (2633 iterations), fathomed 11 nodes and fixed 30 variables
Cbc0035I Maximum depth 6, 197 variables fixed on reduced cost
Cbc0038I Probing was tried 53 times and created 1629 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Cbc0038I Gomory was tried 52 times and created 106 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Cbc0038I Knapsack was tried 52 times and created 166 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I Clique was tried 52 times and created 79 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I OddWheel was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Cbc0038I MixedIntegerRounding2 was tried 52 times and created 271 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 52 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
Cbc0038I ZeroHalf was tried 11 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
Cbc0038I Stored from first was tried 52 times and created 158 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -201.17706, took 3455 iterations and 92 nodes (2.33 seconds)
Cbc0032I Strong branching done 584 times (9594 iterations), fathomed 5 nodes and fixed 17 variables
Cbc0035I Maximum depth 13, 354 variables fixed on reduced cost
Total time (CPU seconds):       2.17   (Wallclock seconds):       2.35

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 261 (-3) columns and 1501 (-44) elements
Clp1000I sum of infeasibilities 6.20412e-05 - average 1.22854e-07, 141 fixed columns
Coin0506I Presolve 211 (-294) rows, 113 (-148) columns and 630 (-871) elements
Clp0029I End of values pass after 113 iterations
Clp0000I Optimal - objective value 187.76903
Clp0000I Optimal - objective value 187.76903
Coin0511I After Postsolve, objective 187.76903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13351183 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 187.76903
Clp0000I Optimal - objective value 187.76903
Clp0000I Optimal - objective value 187.76903
Coin0511I After Postsolve, objective 187.76903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 187.7690262 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 261 columns (260 integer (260 of which binary)) and 1501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 71 integers unsatisfied sum - 10.1766
Cbc0038I Solution found of -9.73783
Cbc0038I Relaxing continuous gives -16.3817
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 261 columns, reduced to 126 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -16.3817 to -77.7346 (0.07 seconds)
Cbc0038I Round again with cutoff of -88.7382
Cbc0038I Pass   1: suminf.    2.77024 (23) obj. -88.7382 iterations 200
Cbc0038I Pass   2: suminf.    2.24256 (9) obj. -88.7382 iterations 42
Cbc0038I Pass   3: suminf.    1.58082 (8) obj. -88.7382 iterations 11
Cbc0038I Pass   4: suminf.    1.44544 (7) obj. -88.7382 iterations 11
Cbc0038I Pass   5: suminf.    3.10291 (9) obj. -88.7382 iterations 21
Cbc0038I Pass   6: suminf.    2.31065 (6) obj. -88.7382 iterations 6
Cbc0038I Pass   7: suminf.    0.52495 (3) obj. -88.7382 iterations 11
Cbc0038I Pass   8: suminf.    1.45470 (5) obj. -88.7382 iterations 14
Cbc0038I Pass   9: suminf.    1.10848 (4) obj. -88.7382 iterations 1
Cbc0038I Pass  10: suminf.    0.91690 (3) obj. -88.7382 iterations 7
Cbc0038I Pass  11: suminf.    0.75156 (4) obj. -88.7382 iterations 6
Cbc0038I Pass  12: suminf.    1.22351 (4) obj. -88.7382 iterations 8
Cbc0038I Pass  13: suminf.    4.24115 (11) obj. -88.7382 iterations 46
Cbc0038I Pass  14: suminf.    3.19821 (11) obj. -88.7382 iterations 29
Cbc0038I Pass  15: suminf.    2.63012 (7) obj. -88.7382 iterations 36
Cbc0038I Pass  16: suminf.    1.05744 (4) obj. -88.7382 iterations 13
Cbc0038I Pass  17: suminf.    0.70736 (3) obj. -88.7382 iterations 1
Cbc0038I Pass  18: suminf.    1.20090 (3) obj. -88.7382 iterations 5
Cbc0038I Pass  19: suminf.    1.45395 (6) obj. -88.7382 iterations 46
Cbc0038I Pass  20: suminf.    1.21733 (4) obj. -88.7382 iterations 20
Cbc0038I Pass  21: suminf.    0.55299 (2) obj. -88.7382 iterations 37
Cbc0038I Pass  22: suminf.    0.31249 (2) obj. -88.7382 iterations 6
Cbc0038I Pass  23: suminf.    2.64398 (10) obj. -88.7382 iterations 34
Cbc0038I Pass  24: suminf.    2.33331 (10) obj. -88.7382 iterations 32
Cbc0038I Pass  25: suminf.    1.83722 (8) obj. -88.7382 iterations 10
Cbc0038I Pass  26: suminf.    1.14238 (3) obj. -88.7382 iterations 22
Cbc0038I Pass  27: suminf.    0.73041 (2) obj. -88.7382 iterations 4
Cbc0038I Pass  28: suminf.    0.59849 (2) obj. -88.7382 iterations 4
Cbc0038I Pass  29: suminf.    0.75274 (3) obj. -88.7382 iterations 5
Cbc0038I Pass  30: suminf.    0.29123 (1) obj. -88.7382 iterations 2
Cbc0038I Rounding solution of -87.9261 is better than previous of -77.7346

Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 261 columns, reduced to 155 rows 90 columns
Cbc0038I Mini branch and bound improved solution from -87.9261 to -105.197 (0.18 seconds)
Cbc0038I Round again with cutoff of -121.711
Cbc0038I Pass  30: suminf.    4.28114 (25) obj. -121.711 iterations 12
Cbc0038I Pass  31: suminf.    4.87570 (12) obj. -121.711 iterations 54
Cbc0038I Pass  32: suminf.    4.05678 (12) obj. -121.711 iterations 18
Cbc0038I Pass  33: suminf.    3.59923 (10) obj. -121.711 iterations 32
Cbc0038I Pass  34: suminf.    3.18575 (8) obj. -121.711 iterations 19
Cbc0038I Pass  35: suminf.    2.97384 (8) obj. -121.711 iterations 14
Cbc0038I Pass  36: suminf.    2.69449 (11) obj. -121.711 iterations 18
Cbc0038I Pass  37: suminf.    2.24458 (9) obj. -121.711 iterations 63
Cbc0038I Pass  38: suminf.    2.22334 (8) obj. -121.711 iterations 10
Cbc0038I Pass  39: suminf.    2.81446 (8) obj. -121.711 iterations 13
Cbc0038I Pass  40: suminf.    1.89130 (10) obj. -121.711 iterations 19
Cbc0038I Pass  41: suminf.    1.84365 (9) obj. -121.711 iterations 4
Cbc0038I Pass  42: suminf.    3.12577 (8) obj. -121.711 iterations 45
Cbc0038I Pass  43: suminf.    2.98373 (8) obj. -121.711 iterations 17
Cbc0038I Pass  44: suminf.    3.45955 (10) obj. -121.711 iterations 38
Cbc0038I Pass  45: suminf.    3.15897 (10) obj. -121.711 iterations 8
Cbc0038I Pass  46: suminf.    2.24458 (9) obj. -121.711 iterations 40
Cbc0038I Pass  47: suminf.    2.22334 (8) obj. -121.711 iterations 10
Cbc0038I Pass  48: suminf.    2.81446 (8) obj. -121.711 iterations 13
Cbc0038I Pass  49: suminf.    1.89130 (10) obj. -121.711 iterations 19
Cbc0038I Pass  50: suminf.    1.84365 (9) obj. -121.711 iterations 4
Cbc0038I Pass  51: suminf.    3.12577 (8) obj. -121.711 iterations 49
Cbc0038I Pass  52: suminf.    2.98373 (8) obj. -121.711 iterations 18
Cbc0038I Pass  53: suminf.    3.45955 (10) obj. -121.711 iterations 39
Cbc0038I Pass  54: suminf.    3.15897 (10) obj. -121.711 iterations 9
Cbc0038I Pass  55: suminf.    2.24458 (9) obj. -121.711 iterations 46
Cbc0038I Pass  56: suminf.    2.22334 (8) obj. -121.711 iterations 10
Cbc0038I Pass  57: suminf.    2.81446 (8) obj. -121.711 iterations 12
Cbc0038I Pass  58: suminf.    1.89130 (10) obj. -121.711 iterations 19
Cbc0038I Pass  59: suminf.    1.84365 (9) obj. -121.711 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 261 columns, reduced to 137 rows 79 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -105.197 - took 0.26 seconds
Cbc0012I Integer solution of -105.19671 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 505 rows 261 columns, reduced to 127 rows 73 columns
Cbc0031I 28 added rows had average density of 140.14286
Cbc0013I At root node, 28 cuts changed objective from -187.76903 to -173.07804 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35057 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.478 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2319 row cuts average 255.2 elements, 0 column cuts (0 active)  in 0.399 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.365 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 250.8 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -105.19671 best solution, best possible -173.07804 (4.24 seconds)
Cbc0010I After 18 nodes, 12 on tree, -105.19671 best solution, best possible -173.07804 (4.95 seconds)
Cbc0038I Full problem 505 rows 261 columns, reduced to 10 rows 13 columns
Cbc0012I Integer solution of -105.42903 found by RINS after 16591 iterations and 44 nodes (5.05 seconds)
Cbc0004I Integer solution of -106.53381 found after 17205 iterations and 66 nodes (5.14 seconds)
Cbc0038I Full problem 505 rows 261 columns, reduced to 147 rows 79 columns
Cbc0012I Integer solution of -108.66743 found by RINS after 17920 iterations and 93 nodes (5.29 seconds)
Cbc0010I After 181 nodes, 14 on tree, -108.66743 best solution, best possible -173.07804 (5.65 seconds)
Cbc0001I Search completed - best objective -108.66743, took 21604 iterations and 196 nodes (5.71 seconds)
Cbc0032I Strong branching done 1580 times (40258 iterations), fathomed 31 nodes and fixed 69 variables
Cbc0035I Maximum depth 46, 1075 variables fixed on reduced cost
Total time (CPU seconds):       5.58   (Wallclock seconds):       5.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 374 (-153) rows, 389 (-136) columns and 19163 (-16574) elements
Clp1000I sum of infeasibilities 7.75097e-06 - average 2.07245e-08, 215 fixed columns
Coin0506I Presolve 159 (-215) rows, 173 (-216) columns and 643 (-18520) elements
Clp0006I 0  Obj -4.4128188 Dual inf 11423.961 (170)
Clp0029I End of values pass after 103 iterations
Clp0014I Perturbing problem by 0.001% of 0.14866914 - largest nonzero change 2.9640381e-05 ( 0.0026945801%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 3.1959616
Clp0000I Optimal - objective value 3.1959616
Coin0511I After Postsolve, objective 3.1959616, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3.1959616 Dual inf 389.97561 (132)
Clp0014I Perturbing problem by 0.001% of 1.76313 - largest nonzero change 2.7034228e-05 ( 0.0017128079%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 238.82133
Clp0000I Optimal - objective value 238.82133
Clp0000I Optimal - objective value 238.82133
Coin0511I After Postsolve, objective 238.82133, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 238.8213253 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 374 rows, 389 columns (389 integer (389 of which binary)) and 19163 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 109 integers unsatisfied sum - 4.93039
Cbc0038I Pass   1: suminf.    3.65039 (105) obj. -220.117 iterations 37
Cbc0038I Pass   2: suminf.    3.65039 (105) obj. -220.117 iterations 1
Cbc0038I Pass   3: suminf.    1.42646 (66) obj. -129.573 iterations 29
Cbc0038I Pass   4: suminf.    0.72186 (44) obj. -92.7995 iterations 22
Cbc0038I Pass   5: suminf.    0.26033 (23) obj. -59.5354 iterations 21
Cbc0038I Solution found of -32.8439
Cbc0038I Rounding solution of -53.3789 is better than previous of -32.8439

Cbc0038I Before mini branch and bound, 277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 389 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -53.3789 to -59.8122 (0.15 seconds)
Cbc0038I Round again with cutoff of -77.7088
Cbc0038I Pass   6: suminf.    3.65039 (105) obj. -220.117 iterations 0
Cbc0038I Pass   7: suminf.    3.65039 (105) obj. -220.117 iterations 1
Cbc0038I Pass   8: suminf.    1.32444 (63) obj. -123.776 iterations 34
Cbc0038I Pass   9: suminf.    0.72186 (44) obj. -92.7995 iterations 19
Cbc0038I Pass  10: suminf.    0.45097 (34) obj. -77.7088 iterations 15
Cbc0038I Pass  11: suminf.    1.00901 (19) obj. -77.7088 iterations 31
Cbc0038I Pass  12: suminf.    0.56712 (19) obj. -77.7088 iterations 6
Cbc0038I Pass  13: suminf.    0.74923 (25) obj. -77.7088 iterations 33
Cbc0038I Pass  14: suminf.    0.68062 (9) obj. -77.7088 iterations 17
Cbc0038I Pass  15: suminf.    0.47905 (3) obj. -77.7088 iterations 16
Cbc0038I Pass  16: suminf.    0.14856 (3) obj. -82.0052 iterations 6
Cbc0038I Pass  17: suminf.    0.97668 (4) obj. -77.7088 iterations 33
Cbc0038I Pass  18: suminf.    0.97668 (4) obj. -77.7088 iterations 0
Cbc0038I Pass  19: suminf.    1.03774 (4) obj. -77.7088 iterations 13
Cbc0038I Pass  20: suminf.    1.03774 (4) obj. -77.7088 iterations 12
Cbc0038I Pass  21: suminf.    0.97668 (4) obj. -77.7088 iterations 13
Cbc0038I Pass  22: suminf.    1.21064 (23) obj. -77.7088 iterations 39
Cbc0038I Pass  23: suminf.    1.21064 (23) obj. -77.7088 iterations 7
Cbc0038I Pass  24: suminf.    0.64657 (10) obj. -77.7088 iterations 32
Cbc0038I Pass  25: suminf.    0.42853 (10) obj. -77.7088 iterations 20
Cbc0038I Pass  26: suminf.    0.51711 (17) obj. -77.7088 iterations 30
Cbc0038I Pass  27: suminf.    0.36623 (18) obj. -77.7088 iterations 4
Cbc0038I Pass  28: suminf.    1.18006 (11) obj. -77.7088 iterations 34
Cbc0038I Pass  29: suminf.    0.64832 (11) obj. -77.7088 iterations 11
Cbc0038I Pass  30: suminf.    0.71154 (5) obj. -77.7088 iterations 28
Cbc0038I Pass  31: suminf.    0.51458 (4) obj. -77.7088 iterations 16
Cbc0038I Pass  32: suminf.    0.63004 (4) obj. -77.7088 iterations 6
Cbc0038I Pass  33: suminf.    2.51864 (24) obj. -77.7088 iterations 73
Cbc0038I Pass  34: suminf.    1.47504 (20) obj. -77.7088 iterations 34
Cbc0038I Pass  35: suminf.    0.95956 (19) obj. -77.7088 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 389 columns, reduced to 41 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -59.8122 to -69.7542 (0.24 seconds)
Cbc0038I Round again with cutoff of -109.922
Cbc0038I Pass  35: suminf.    3.65039 (105) obj. -220.117 iterations 0
Cbc0038I Pass  36: suminf.    3.65039 (105) obj. -220.117 iterations 1
Cbc0038I Pass  37: suminf.    1.39297 (65) obj. -126.673 iterations 32
Cbc0038I Pass  38: suminf.    1.24699 (47) obj. -109.922 iterations 23
Cbc0038I Pass  39: suminf.    1.42801 (46) obj. -109.922 iterations 40
Cbc0038I Pass  40: suminf.    1.06137 (45) obj. -109.922 iterations 14
Cbc0038I Pass  41: suminf.    1.83247 (33) obj. -109.922 iterations 49
Cbc0038I Pass  42: suminf.    1.38349 (32) obj. -109.922 iterations 21
Cbc0038I Pass  43: suminf.    0.97459 (32) obj. -111.558 iterations 6
Cbc0038I Pass  44: suminf.    1.96153 (26) obj. -109.922 iterations 37
Cbc0038I Pass  45: suminf.    1.16967 (25) obj. -109.922 iterations 33
Cbc0038I Pass  46: suminf.    1.27397 (15) obj. -109.922 iterations 52
Cbc0038I Pass  47: suminf.    1.27397 (15) obj. -109.922 iterations 5
Cbc0038I Pass  48: suminf.    1.08144 (14) obj. -109.922 iterations 13
Cbc0038I Pass  49: suminf.    1.06245 (15) obj. -109.922 iterations 9
Cbc0038I Pass  50: suminf.    1.13055 (12) obj. -109.922 iterations 48
Cbc0038I Pass  51: suminf.    1.02211 (13) obj. -109.922 iterations 8
Cbc0038I Pass  52: suminf.    1.93273 (25) obj. -109.922 iterations 85
Cbc0038I Pass  53: suminf.    1.16172 (22) obj. -109.922 iterations 22
Cbc0038I Pass  54: suminf.    1.63364 (16) obj. -109.922 iterations 58
Cbc0038I Pass  55: suminf.    1.45394 (16) obj. -109.922 iterations 6
Cbc0038I Pass  56: suminf.    2.68472 (16) obj. -109.922 iterations 31
Cbc0038I Pass  57: suminf.    1.45219 (16) obj. -109.922 iterations 15
Cbc0038I Pass  58: suminf.    1.45219 (16) obj. -109.922 iterations 0
Cbc0038I Pass  59: suminf.    2.68523 (16) obj. -109.922 iterations 31
Cbc0038I Pass  60: suminf.    1.45394 (16) obj. -109.922 iterations 14
Cbc0038I Pass  61: suminf.    1.45394 (16) obj. -109.922 iterations 1
Cbc0038I Pass  62: suminf.    2.68472 (16) obj. -109.922 iterations 31
Cbc0038I Pass  63: suminf.    1.45219 (16) obj. -109.922 iterations 15
Cbc0038I Pass  64: suminf.    1.45219 (16) obj. -109.922 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 389 columns, reduced to 27 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of -69.7542 - took 0.23 seconds
Cbc0012I Integer solution of -69.75418 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 374 rows 389 columns, reduced to 38 rows 42 columns
Cbc0031I 143 added rows had average density of 91.251748
Cbc0013I At root node, 143 cuts changed objective from -238.77681 to -140.01357 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26173 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.574 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3713 row cuts average 358.3 elements, 0 column cuts (0 active)  in 1.410 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 343 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6136 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.687 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2328 row cuts average 9.6 elements, 0 column cuts (0 active)  in 1.061 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 412 row cuts average 215.4 elements, 0 column cuts (0 active)  in 0.287 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 475 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.467 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -69.75418 best solution, best possible -140.01357 (9.28 seconds)
Cbc0010I After 2 nodes, 1 on tree, -69.75418 best solution, best possible -139.29545 (10.02 seconds)
Cbc0012I Integer solution of -78.396176 found by rounding after 13420 iterations and 4 nodes (10.51 seconds)
Cbc0010I After 5 nodes, 2 on tree, -78.396176 best solution, best possible -139.29545 (10.83 seconds)
Cbc0010I After 8 nodes, 5 on tree, -78.396176 best solution, best possible -139.29545 (11.66 seconds)
Cbc0004I Integer solution of -92.04351 found after 14506 iterations and 12 nodes (11.92 seconds)
Cbc0010I After 24 nodes, 9 on tree, -92.04351 best solution, best possible -139.29545 (12.40 seconds)
Cbc0012I Integer solution of -96.34951 found by rounding after 15382 iterations and 28 nodes (12.67 seconds)
Cbc0012I Integer solution of -96.38759 found by rounding after 15630 iterations and 33 nodes (12.93 seconds)
Cbc0012I Integer solution of -97.14602 found by rounding after 15728 iterations and 36 nodes (13.15 seconds)
Cbc0010I After 36 nodes, 15 on tree, -97.14602 best solution, best possible -139.29545 (13.15 seconds)
Cbc0038I Full problem 374 rows 389 columns, reduced to 52 rows 58 columns
Cbc0012I Integer solution of -102.67962 found by RINS after 16026 iterations and 42 nodes (13.59 seconds)
Cbc0010I After 49 nodes, 13 on tree, -102.67962 best solution, best possible -139.29545 (13.87 seconds)
Cbc0010I After 64 nodes, 19 on tree, -102.67962 best solution, best possible -139.29545 (14.66 seconds)
Cbc0012I Integer solution of -106.58983 found by rounding after 16814 iterations and 70 nodes (14.98 seconds)
Cbc0016I Integer solution of -107.66743 found by strong branching after 16832 iterations and 72 nodes (15.08 seconds)
Cbc0010I After 81 nodes, 12 on tree, -107.66743 best solution, best possible -139.29545 (15.39 seconds)
Cbc0038I Full problem 374 rows 389 columns, reduced to 12 rows 14 columns
Cbc0010I After 99 nodes, 12 on tree, -107.66743 best solution, best possible -139.29545 (16.10 seconds)
Cbc0010I After 116 nodes, 16 on tree, -107.66743 best solution, best possible -139.29545 (16.81 seconds)
Cbc0010I After 144 nodes, 14 on tree, -107.66743 best solution, best possible -139.29545 (17.53 seconds)
Cbc0010I After 165 nodes, 17 on tree, -107.66743 best solution, best possible -139.29545 (18.24 seconds)
Cbc0010I After 194 nodes, 15 on tree, -107.66743 best solution, best possible -139.29545 (18.94 seconds)
Cbc0038I Full problem 374 rows 389 columns, reduced to 9 rows 15 columns
Cbc0010I After 220 nodes, 13 on tree, -107.66743 best solution, best possible -139.29545 (19.66 seconds)
Cbc0010I After 240 nodes, 15 on tree, -107.66743 best solution, best possible -139.29545 (20.38 seconds)
Cbc0010I After 265 nodes, 18 on tree, -107.66743 best solution, best possible -139.29545 (21.13 seconds)
Cbc0010I After 310 nodes, 5 on tree, -107.66743 best solution, best possible -139.29545 (21.84 seconds)
Cbc0010I After 315 nodes, 4 on tree, -107.66743 best solution, best possible -139.29545 (22.64 seconds)
Cbc0010I After 334 nodes, 7 on tree, -107.66743 best solution, best possible -139.29545 (23.34 seconds)
Cbc0010I After 355 nodes, 6 on tree, -107.66743 best solution, best possible -139.29545 (24.07 seconds)
Cbc0010I After 385 nodes, 8 on tree, -107.66743 best solution, best possible -139.29545 (24.79 seconds)
Cbc0038I Full problem 374 rows 389 columns, reduced to 137 rows 144 columns
Cbc0010I After 402 nodes, 6 on tree, -107.66743 best solution, best possible -139.29545 (26.19 seconds)
Cbc0010I After 412 nodes, 3 on tree, -107.66743 best solution, best possible -139.29545 (26.91 seconds)
Cbc0010I After 422 nodes, 6 on tree, -107.66743 best solution, best possible -139.29545 (27.62 seconds)
Cbc0010I After 435 nodes, 6 on tree, -107.66743 best solution, best possible -139.29545 (28.37 seconds)
Cbc0010I After 449 nodes, 5 on tree, -107.66743 best solution, best possible -139.29545 (29.13 seconds)
Cbc0010I After 470 nodes, 4 on tree, -107.66743 best solution, best possible -139.29545 (29.92 seconds)
Cbc0010I After 489 nodes, 5 on tree, -107.66743 best solution, best possible -139.29545 (30.64 seconds)
Cbc0010I After 513 nodes, 2 on tree, -107.66743 best solution, best possible -139.29545 (31.45 seconds)
Cbc0010I After 526 nodes, 9 on tree, -107.66743 best solution, best possible -139.29545 (32.17 seconds)
Cbc0010I After 541 nodes, 15 on tree, -107.66743 best solution, best possible -139.29545 (32.96 seconds)
Cbc0012I Integer solution of -108.66743 found by rounding after 39990 iterations and 557 nodes (33.57 seconds)
Cbc0010I After 563 nodes, 10 on tree, -108.66743 best solution, best possible -139.29545 (33.68 seconds)
Cbc0001I Search completed - best objective -108.66743, took 40725 iterations and 584 nodes (33.84 seconds)
Cbc0032I Strong branching done 1662 times (40230 iterations), fathomed 8 nodes and fixed 11 variables
Cbc0035I Maximum depth 29, 2420 variables fixed on reduced cost
Total time (CPU seconds):       27.91   (Wallclock seconds):       33.98

