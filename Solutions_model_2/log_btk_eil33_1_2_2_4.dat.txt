Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 1.00019e-05 - average 1.75472e-07, 7 fixed columns
Coin0506I Presolve 44 (-13) rows, 25 (-8) columns and 130 (-42) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 129.52396
Clp0000I Optimal - objective value 129.52396
Coin0511I After Postsolve, objective 129.52396, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 129.52396
Clp0000I Optimal - objective value 129.52396
Clp0000I Optimal - objective value 129.52396
Coin0511I After Postsolve, objective 129.52396, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129.5239561 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.79824
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -22.1743 iterations 18
Cbc0038I Solution found of -22.1743
Cbc0038I Relaxing continuous gives -22.1743
Cbc0038I Rounding solution of -59.5564 is better than previous of -22.1743

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -59.5564 to -65.6466 (0.02 seconds)
Cbc0038I Round again with cutoff of -72.0344
Cbc0038I Pass   2: suminf.    1.16298 (4) obj. -72.0344 iterations 3
Cbc0038I Pass   3: suminf.    0.55978 (2) obj. -72.0344 iterations 4
Cbc0038I Pass   4: suminf.    0.47644 (2) obj. -72.0344 iterations 1
Cbc0038I Pass   5: suminf.    0.47644 (2) obj. -72.0344 iterations 0
Cbc0038I Pass   6: suminf.    1.38971 (6) obj. -72.0344 iterations 9
Cbc0038I Pass   7: suminf.    1.15904 (4) obj. -72.0344 iterations 2
Cbc0038I Pass   8: suminf.    0.87933 (3) obj. -72.0344 iterations 7
Cbc0038I Pass   9: suminf.    0.71193 (3) obj. -72.0344 iterations 2
Cbc0038I Pass  10: suminf.    0.52255 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  11: suminf.    0.52255 (2) obj. -72.0344 iterations 0
Cbc0038I Pass  12: suminf.    0.79909 (3) obj. -72.0344 iterations 3
Cbc0038I Pass  13: suminf.    0.87933 (3) obj. -72.0344 iterations 5
Cbc0038I Pass  14: suminf.    0.87933 (3) obj. -72.0344 iterations 0
Cbc0038I Pass  15: suminf.    0.71193 (3) obj. -72.0344 iterations 2
Cbc0038I Pass  16: suminf.    0.52255 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  17: suminf.    0.52255 (2) obj. -72.0344 iterations 0
Cbc0038I Pass  18: suminf.    2.52832 (9) obj. -72.0344 iterations 19
Cbc0038I Pass  19: suminf.    2.21488 (10) obj. -72.0344 iterations 10
Cbc0038I Pass  20: suminf.    1.48320 (4) obj. -72.0344 iterations 20
Cbc0038I Pass  21: suminf.    1.37260 (3) obj. -72.0344 iterations 1
Cbc0038I Pass  22: suminf.    0.52332 (3) obj. -72.0344 iterations 3
Cbc0038I Pass  23: suminf.    1.17882 (3) obj. -72.0344 iterations 2
Cbc0038I Pass  24: suminf.    0.76168 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  25: suminf.    0.77127 (4) obj. -72.0344 iterations 8
Cbc0038I Pass  26: suminf.    0.75087 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  27: suminf.    0.84670 (4) obj. -72.0344 iterations 3
Cbc0038I Pass  28: suminf.    0.63986 (3) obj. -72.0344 iterations 5
Cbc0038I Pass  29: suminf.    0.49771 (2) obj. -72.0344 iterations 1
Cbc0038I Pass  30: suminf.    0.43742 (2) obj. -72.0344 iterations 1
Cbc0038I Pass  31: suminf.    1.07750 (3) obj. -72.0344 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -65.6466 - took 0.04 seconds
Cbc0012I Integer solution of -65.646624 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 20 columns
Cbc0031I 8 added rows had average density of 33
Cbc0013I At root node, 8 cuts changed objective from -129.52396 to -103.57191 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1153 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 612 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -65.64662380000001, took 3044 iterations and 22 nodes (0.25 seconds)
Cbc0032I Strong branching done 246 times (2294 iterations), fathomed 4 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-16) rows, 59 (-7) columns and 575 (-148) elements
Clp1000I sum of infeasibilities 2.52476e-08 - average 4.8553e-10, 13 fixed columns
Coin0506I Presolve 43 (-9) rows, 46 (-13) columns and 369 (-206) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.4218447 - largest nonzero change 0 ( 0%) - largest zero change 2.4978937e-05
Clp0000I Optimal - objective value 149.40261
Clp0000I Optimal - objective value 149.40261
Coin0511I After Postsolve, objective 149.40261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6978829 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 149.40261
Clp0000I Optimal - objective value 149.40261
Clp0000I Optimal - objective value 149.40261
Coin0511I After Postsolve, objective 149.40261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.402611 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 59 columns (59 integer (59 of which binary)) and 577 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.435%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 6.08922
Cbc0038I Pass   1: suminf.    1.24169 (15) obj. -45.7449 iterations 20
Cbc0038I Pass   2: suminf.    1.24169 (15) obj. -45.7449 iterations 1
Cbc0038I Solution found of 5.65288
Cbc0038I Rounding solution of -37.3471 is better than previous of 5.65288

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -37.3471 to -64.9115 (0.01 seconds)
Cbc0038I Round again with cutoff of -73.0126
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.55419 (25) obj. -73.0126 iterations 8
Cbc0038I Pass   4: suminf.    2.55419 (24) obj. -73.0126 iterations 1
Cbc0038I Pass   5: suminf.    1.61443 (12) obj. -73.0126 iterations 15
Cbc0038I Pass   6: suminf.    0.30437 (3) obj. -73.0126 iterations 18
Cbc0038I Pass   7: suminf.    0.30220 (4) obj. -73.0126 iterations 1
Cbc0038I Pass   8: suminf.    0.79146 (4) obj. -73.0126 iterations 1
Cbc0038I Pass   9: suminf.    2.46609 (12) obj. -73.0126 iterations 10
Cbc0038I Pass  10: suminf.    2.41866 (9) obj. -73.0126 iterations 4
Cbc0038I Pass  11: suminf.    1.09722 (5) obj. -73.0126 iterations 7
Cbc0038I Pass  12: suminf.    1.05325 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  13: suminf.    1.35175 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  14: suminf.    0.71526 (3) obj. -73.0126 iterations 3
Cbc0038I Pass  15: suminf.    1.09722 (5) obj. -73.0126 iterations 4
Cbc0038I Pass  16: suminf.    3.97439 (12) obj. -74.1845 iterations 15
Cbc0038I Pass  17: suminf.    1.49908 (9) obj. -73.0126 iterations 9
Cbc0038I Pass  18: suminf.    1.49908 (9) obj. -73.0126 iterations 0
Cbc0038I Pass  19: suminf.    1.13175 (4) obj. -73.0126 iterations 10
Cbc0038I Pass  20: suminf.    1.13175 (4) obj. -73.0126 iterations 0
Cbc0038I Pass  21: suminf.    1.15819 (5) obj. -73.0126 iterations 2
Cbc0038I Pass  22: suminf.    1.07648 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  23: suminf.    1.25673 (6) obj. -73.0126 iterations 3
Cbc0038I Pass  24: suminf.    1.19683 (5) obj. -73.0126 iterations 1
Cbc0038I Pass  25: suminf.    1.06248 (6) obj. -73.0126 iterations 2
Cbc0038I Pass  26: suminf.    1.02146 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  27: suminf.    1.25673 (6) obj. -73.0126 iterations 4
Cbc0038I Pass  28: suminf.    2.18745 (10) obj. -73.0126 iterations 14
Cbc0038I Pass  29: suminf.    2.15674 (9) obj. -73.8537 iterations 4
Cbc0038I Pass  30: suminf.    0.88228 (6) obj. -73.0126 iterations 11
Cbc0038I Pass  31: suminf.    0.88228 (6) obj. -73.0126 iterations 0
Cbc0038I Pass  32: suminf.    1.28714 (6) obj. -73.0126 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -64.9115 to -65.6466 (0.03 seconds)
Cbc0038I Round again with cutoff of -87.5944
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.88461 (25) obj. -87.5944 iterations 0
Cbc0038I Pass  33: suminf.    2.83461 (24) obj. -87.5944 iterations 2
Cbc0038I Pass  34: suminf.    2.13094 (13) obj. -87.5944 iterations 14
Cbc0038I Pass  35: suminf.    2.13094 (13) obj. -87.5944 iterations 0
Cbc0038I Pass  36: suminf.    0.80273 (6) obj. -87.5944 iterations 21
Cbc0038I Pass  37: suminf.    0.80273 (6) obj. -87.5944 iterations 0
Cbc0038I Pass  38: suminf.    1.07621 (6) obj. -87.5944 iterations 2
Cbc0038I Pass  39: suminf.    1.07621 (6) obj. -87.5944 iterations 0
Cbc0038I Pass  40: suminf.    0.80273 (6) obj. -87.5944 iterations 1
Cbc0038I Pass  41: suminf.    3.44503 (13) obj. -87.5944 iterations 26
Cbc0038I Pass  42: suminf.    3.17518 (12) obj. -87.5944 iterations 4
Cbc0038I Pass  43: suminf.    1.72765 (7) obj. -87.5944 iterations 16
Cbc0038I Pass  44: suminf.    1.53845 (7) obj. -87.5944 iterations 2
Cbc0038I Pass  45: suminf.    1.93512 (7) obj. -87.5944 iterations 4
Cbc0038I Pass  46: suminf.    1.78038 (7) obj. -87.5944 iterations 4
Cbc0038I Pass  47: suminf.    1.56109 (7) obj. -87.5944 iterations 4
Cbc0038I Pass  48: suminf.    2.96506 (11) obj. -87.5944 iterations 13
Cbc0038I Pass  49: suminf.    2.67158 (11) obj. -87.5944 iterations 3
Cbc0038I Pass  50: suminf.    2.53478 (11) obj. -87.5944 iterations 1
Cbc0038I Pass  51: suminf.    1.96751 (6) obj. -87.5944 iterations 11
Cbc0038I Pass  52: suminf.    1.25868 (6) obj. -87.5944 iterations 2
Cbc0038I Pass  53: suminf.    1.87209 (6) obj. -87.5944 iterations 5
Cbc0038I Pass  54: suminf.    1.75804 (7) obj. -87.5944 iterations 2
Cbc0038I Pass  55: suminf.    1.72860 (7) obj. -87.5944 iterations 2
Cbc0038I Pass  56: suminf.    1.69804 (7) obj. -87.5944 iterations 1
Cbc0038I Pass  57: suminf.    1.86526 (6) obj. -87.5944 iterations 4
Cbc0038I Pass  58: suminf.    4.46560 (15) obj. -87.5944 iterations 14
Cbc0038I Pass  59: suminf.    3.83154 (13) obj. -87.5944 iterations 2
Cbc0038I Pass  60: suminf.    2.99272 (10) obj. -87.5944 iterations 4
Cbc0038I Pass  61: suminf.    2.02945 (7) obj. -87.5944 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 41 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -65.6466 - took 0.03 seconds
Cbc0012I Integer solution of -65.646624 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 59 columns, reduced to 3 rows 4 columns
Cbc0031I 25 added rows had average density of 21.56
Cbc0013I At root node, 25 cuts changed objective from -145.9216 to -85.130376 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3492 row cuts average 3.9 elements, 6 column cuts (6 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 919 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 610 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 386 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -65.646624 best solution, best possible -85.130376 (1.64 seconds)
Cbc0001I Search completed - best objective -65.64662380000001, took 3859 iterations and 26 nodes (1.88 seconds)
Cbc0032I Strong branching done 446 times (5962 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 9, 47 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 1.00019e-05 - average 1.75472e-07, 7 fixed columns
Coin0506I Presolve 44 (-13) rows, 25 (-8) columns and 130 (-42) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 129.52396
Clp0000I Optimal - objective value 129.52396
Coin0511I After Postsolve, objective 129.52396, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 129.52396
Clp0000I Optimal - objective value 129.52396
Clp0000I Optimal - objective value 129.52396
Coin0511I After Postsolve, objective 129.52396, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129.5239561 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.79824
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -22.1743 iterations 18
Cbc0038I Solution found of -22.1743
Cbc0038I Relaxing continuous gives -22.1743
Cbc0038I Rounding solution of -59.5564 is better than previous of -22.1743

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -59.5564 to -65.6466 (0.02 seconds)
Cbc0038I Round again with cutoff of -72.0344
Cbc0038I Pass   2: suminf.    1.16298 (4) obj. -72.0344 iterations 3
Cbc0038I Pass   3: suminf.    0.55978 (2) obj. -72.0344 iterations 4
Cbc0038I Pass   4: suminf.    0.47644 (2) obj. -72.0344 iterations 1
Cbc0038I Pass   5: suminf.    0.47644 (2) obj. -72.0344 iterations 0
Cbc0038I Pass   6: suminf.    1.38971 (6) obj. -72.0344 iterations 9
Cbc0038I Pass   7: suminf.    1.15904 (4) obj. -72.0344 iterations 2
Cbc0038I Pass   8: suminf.    0.87933 (3) obj. -72.0344 iterations 7
Cbc0038I Pass   9: suminf.    0.71193 (3) obj. -72.0344 iterations 2
Cbc0038I Pass  10: suminf.    0.52255 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  11: suminf.    0.52255 (2) obj. -72.0344 iterations 0
Cbc0038I Pass  12: suminf.    0.79909 (3) obj. -72.0344 iterations 3
Cbc0038I Pass  13: suminf.    0.87933 (3) obj. -72.0344 iterations 5
Cbc0038I Pass  14: suminf.    0.87933 (3) obj. -72.0344 iterations 0
Cbc0038I Pass  15: suminf.    0.71193 (3) obj. -72.0344 iterations 2
Cbc0038I Pass  16: suminf.    0.52255 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  17: suminf.    0.52255 (2) obj. -72.0344 iterations 0
Cbc0038I Pass  18: suminf.    2.52832 (9) obj. -72.0344 iterations 19
Cbc0038I Pass  19: suminf.    2.21488 (10) obj. -72.0344 iterations 10
Cbc0038I Pass  20: suminf.    1.48320 (4) obj. -72.0344 iterations 20
Cbc0038I Pass  21: suminf.    1.37260 (3) obj. -72.0344 iterations 1
Cbc0038I Pass  22: suminf.    0.52332 (3) obj. -72.0344 iterations 3
Cbc0038I Pass  23: suminf.    1.17882 (3) obj. -72.0344 iterations 2
Cbc0038I Pass  24: suminf.    0.76168 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  25: suminf.    0.77127 (4) obj. -72.0344 iterations 8
Cbc0038I Pass  26: suminf.    0.75087 (2) obj. -72.0344 iterations 2
Cbc0038I Pass  27: suminf.    0.84670 (4) obj. -72.0344 iterations 3
Cbc0038I Pass  28: suminf.    0.63986 (3) obj. -72.0344 iterations 5
Cbc0038I Pass  29: suminf.    0.49771 (2) obj. -72.0344 iterations 1
Cbc0038I Pass  30: suminf.    0.43742 (2) obj. -72.0344 iterations 1
Cbc0038I Pass  31: suminf.    1.07750 (3) obj. -72.0344 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -65.6466 - took 0.05 seconds
Cbc0012I Integer solution of -65.646624 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 20 columns
Cbc0031I 8 added rows had average density of 33
Cbc0013I At root node, 8 cuts changed objective from -129.52396 to -103.57191 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1153 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 612 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -65.64662380000001, took 3044 iterations and 22 nodes (0.29 seconds)
Cbc0032I Strong branching done 246 times (2294 iterations), fathomed 4 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 59 (-8) columns and 575 (-149) elements
Clp1000I sum of infeasibilities 2.52476e-08 - average 4.8553e-10, 13 fixed columns
Coin0506I Presolve 43 (-9) rows, 46 (-13) columns and 369 (-206) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.4218447 - largest nonzero change 0 ( 0%) - largest zero change 2.4978937e-05
Clp0000I Optimal - objective value 149.40261
Clp0000I Optimal - objective value 149.40261
Coin0511I After Postsolve, objective 149.40261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6978829 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 149.40261
Clp0000I Optimal - objective value 149.40261
Clp0000I Optimal - objective value 149.40261
Coin0511I After Postsolve, objective 149.40261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.402611 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 59 columns (59 integer (59 of which binary)) and 577 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.435%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 6.08922
Cbc0038I Pass   1: suminf.    1.24169 (15) obj. -45.7449 iterations 20
Cbc0038I Pass   2: suminf.    1.24169 (15) obj. -45.7449 iterations 1
Cbc0038I Solution found of 5.65288
Cbc0038I Rounding solution of -37.3471 is better than previous of 5.65288

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -37.3471 to -64.9115 (0.01 seconds)
Cbc0038I Round again with cutoff of -73.0126
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.55419 (25) obj. -73.0126 iterations 8
Cbc0038I Pass   4: suminf.    2.55419 (24) obj. -73.0126 iterations 1
Cbc0038I Pass   5: suminf.    1.61443 (12) obj. -73.0126 iterations 15
Cbc0038I Pass   6: suminf.    0.30437 (3) obj. -73.0126 iterations 18
Cbc0038I Pass   7: suminf.    0.30220 (4) obj. -73.0126 iterations 1
Cbc0038I Pass   8: suminf.    0.79146 (4) obj. -73.0126 iterations 1
Cbc0038I Pass   9: suminf.    2.46609 (12) obj. -73.0126 iterations 10
Cbc0038I Pass  10: suminf.    2.41866 (9) obj. -73.0126 iterations 4
Cbc0038I Pass  11: suminf.    1.09722 (5) obj. -73.0126 iterations 7
Cbc0038I Pass  12: suminf.    1.05325 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  13: suminf.    1.35175 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  14: suminf.    0.71526 (3) obj. -73.0126 iterations 3
Cbc0038I Pass  15: suminf.    1.09722 (5) obj. -73.0126 iterations 4
Cbc0038I Pass  16: suminf.    3.97439 (12) obj. -74.1845 iterations 15
Cbc0038I Pass  17: suminf.    1.49908 (9) obj. -73.0126 iterations 9
Cbc0038I Pass  18: suminf.    1.49908 (9) obj. -73.0126 iterations 0
Cbc0038I Pass  19: suminf.    1.13175 (4) obj. -73.0126 iterations 10
Cbc0038I Pass  20: suminf.    1.13175 (4) obj. -73.0126 iterations 0
Cbc0038I Pass  21: suminf.    1.15819 (5) obj. -73.0126 iterations 2
Cbc0038I Pass  22: suminf.    1.07648 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  23: suminf.    1.25673 (6) obj. -73.0126 iterations 3
Cbc0038I Pass  24: suminf.    1.19683 (5) obj. -73.0126 iterations 1
Cbc0038I Pass  25: suminf.    1.06248 (6) obj. -73.0126 iterations 2
Cbc0038I Pass  26: suminf.    1.02146 (4) obj. -73.0126 iterations 1
Cbc0038I Pass  27: suminf.    1.25673 (6) obj. -73.0126 iterations 4
Cbc0038I Pass  28: suminf.    2.18745 (10) obj. -73.0126 iterations 14
Cbc0038I Pass  29: suminf.    2.15674 (9) obj. -73.8537 iterations 4
Cbc0038I Pass  30: suminf.    0.88228 (6) obj. -73.0126 iterations 11
Cbc0038I Pass  31: suminf.    0.88228 (6) obj. -73.0126 iterations 0
Cbc0038I Pass  32: suminf.    1.28714 (6) obj. -73.0126 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -64.9115 to -65.6466 (0.03 seconds)
Cbc0038I Round again with cutoff of -87.5944
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.88461 (25) obj. -87.5944 iterations 0
Cbc0038I Pass  33: suminf.    2.83461 (24) obj. -87.5944 iterations 2
Cbc0038I Pass  34: suminf.    2.13094 (13) obj. -87.5944 iterations 14
Cbc0038I Pass  35: suminf.    2.13094 (13) obj. -87.5944 iterations 0
Cbc0038I Pass  36: suminf.    0.80273 (6) obj. -87.5944 iterations 21
Cbc0038I Pass  37: suminf.    0.80273 (6) obj. -87.5944 iterations 0
Cbc0038I Pass  38: suminf.    1.07621 (6) obj. -87.5944 iterations 2
Cbc0038I Pass  39: suminf.    1.07621 (6) obj. -87.5944 iterations 0
Cbc0038I Pass  40: suminf.    0.80273 (6) obj. -87.5944 iterations 1
Cbc0038I Pass  41: suminf.    3.44503 (13) obj. -87.5944 iterations 26
Cbc0038I Pass  42: suminf.    3.17518 (12) obj. -87.5944 iterations 4
Cbc0038I Pass  43: suminf.    1.72765 (7) obj. -87.5944 iterations 16
Cbc0038I Pass  44: suminf.    1.53845 (7) obj. -87.5944 iterations 2
Cbc0038I Pass  45: suminf.    1.93512 (7) obj. -87.5944 iterations 4
Cbc0038I Pass  46: suminf.    1.78038 (7) obj. -87.5944 iterations 4
Cbc0038I Pass  47: suminf.    1.56109 (7) obj. -87.5944 iterations 4
Cbc0038I Pass  48: suminf.    2.96506 (11) obj. -87.5944 iterations 13
Cbc0038I Pass  49: suminf.    2.67158 (11) obj. -87.5944 iterations 3
Cbc0038I Pass  50: suminf.    2.53478 (11) obj. -87.5944 iterations 1
Cbc0038I Pass  51: suminf.    1.96751 (6) obj. -87.5944 iterations 11
Cbc0038I Pass  52: suminf.    1.25868 (6) obj. -87.5944 iterations 2
Cbc0038I Pass  53: suminf.    1.87209 (6) obj. -87.5944 iterations 5
Cbc0038I Pass  54: suminf.    1.75804 (7) obj. -87.5944 iterations 2
Cbc0038I Pass  55: suminf.    1.72860 (7) obj. -87.5944 iterations 2
Cbc0038I Pass  56: suminf.    1.69804 (7) obj. -87.5944 iterations 1
Cbc0038I Pass  57: suminf.    1.86526 (6) obj. -87.5944 iterations 4
Cbc0038I Pass  58: suminf.    4.46560 (15) obj. -87.5944 iterations 14
Cbc0038I Pass  59: suminf.    3.83154 (13) obj. -87.5944 iterations 2
Cbc0038I Pass  60: suminf.    2.99272 (10) obj. -87.5944 iterations 4
Cbc0038I Pass  61: suminf.    2.02945 (7) obj. -87.5944 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 59 columns, reduced to 41 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -65.6466 - took 0.04 seconds
Cbc0012I Integer solution of -65.646624 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 52 rows 59 columns, reduced to 3 rows 4 columns
Cbc0031I 25 added rows had average density of 21.56
Cbc0013I At root node, 25 cuts changed objective from -145.9216 to -85.130376 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3492 row cuts average 3.9 elements, 6 column cuts (6 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 919 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 610 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 386 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.700 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -65.646624 best solution, best possible -85.130376 (1.59 seconds)
Cbc0001I Search completed - best objective -65.64662380000001, took 3859 iterations and 26 nodes (1.83 seconds)
Cbc0032I Strong branching done 446 times (5962 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 9, 47 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.83

