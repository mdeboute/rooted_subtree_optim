Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 30 (-5) columns and 156 (-39) elements
Clp1000I sum of infeasibilities 5.25999e-05 - average 1.01154e-06, 3 fixed columns
Coin0506I Presolve 47 (-5) rows, 27 (-3) columns and 140 (-16) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 3.1930389 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 102.34694
Clp0000I Optimal - objective value 102.34694
Coin0511I After Postsolve, objective 102.34694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 102.34694
Clp0000I Optimal - objective value 102.34694
Clp0000I Optimal - objective value 102.34694
Coin0511I After Postsolve, objective 102.34694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.346941 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 158 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.951%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.74835
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.11256 iterations 18
Cbc0038I Solution found of 8.11256
Cbc0038I Relaxing continuous gives 8.11256
Cbc0038I Rounding solution of -11.4687 is better than previous of 8.11256

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -11.4687 to -58.5432 (0.02 seconds)
Cbc0038I Round again with cutoff of -62.5825
Cbc0038I Pass   2: suminf.    1.13018 (5) obj. -62.5825 iterations 4
Cbc0038I Pass   3: suminf.    0.97811 (3) obj. -62.5825 iterations 2
Cbc0038I Pass   4: suminf.    0.85736 (3) obj. -62.5825 iterations 3
Cbc0038I Pass   5: suminf.    0.55645 (3) obj. -62.5825 iterations 1
Cbc0038I Pass   6: suminf.    0.75946 (3) obj. -62.5825 iterations 5
Cbc0038I Pass   7: suminf.    0.75946 (3) obj. -62.5825 iterations 0
Cbc0038I Pass   8: suminf.    1.29704 (3) obj. -62.5825 iterations 2
Cbc0038I Pass   9: suminf.    3.04125 (7) obj. -62.5825 iterations 9
Cbc0038I Pass  10: suminf.    2.15298 (6) obj. -62.5825 iterations 6
Cbc0038I Pass  11: suminf.    1.93914 (5) obj. -62.5825 iterations 2
Cbc0038I Pass  12: suminf.    1.19978 (4) obj. -62.5825 iterations 6
Cbc0038I Pass  13: suminf.    1.28829 (3) obj. -62.5825 iterations 5
Cbc0038I Pass  14: suminf.    1.27292 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  15: suminf.    1.27727 (3) obj. -62.5825 iterations 2
Cbc0038I Pass  16: suminf.    1.27602 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  17: suminf.    1.26686 (4) obj. -62.5825 iterations 3
Cbc0038I Pass  18: suminf.    1.75560 (5) obj. -62.5825 iterations 2
Cbc0038I Pass  19: suminf.    1.08481 (4) obj. -62.5825 iterations 5
Cbc0038I Pass  20: suminf.    1.12666 (5) obj. -62.5825 iterations 4
Cbc0038I Pass  21: suminf.    1.00446 (5) obj. -62.5825 iterations 2
Cbc0038I Pass  22: suminf.    1.26686 (4) obj. -62.5825 iterations 2
Cbc0038I Pass  23: suminf.    1.27292 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  24: suminf.    1.27727 (3) obj. -62.5825 iterations 2
Cbc0038I Pass  25: suminf.    1.27602 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  26: suminf.    1.26686 (4) obj. -62.5825 iterations 3
Cbc0038I Pass  27: suminf.    2.75717 (8) obj. -62.5825 iterations 12
Cbc0038I Pass  28: suminf.    1.50753 (7) obj. -62.5825 iterations 5
Cbc0038I Pass  29: suminf.    1.50753 (7) obj. -62.5825 iterations 0
Cbc0038I Pass  30: suminf.    1.74172 (4) obj. -62.5825 iterations 6
Cbc0038I Pass  31: suminf.    1.05880 (3) obj. -62.5825 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -58.5432 - took 0.06 seconds
Cbc0012I Integer solution of -58.54318 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 30 rows 18 columns
Cbc0031I 15 added rows had average density of 25
Cbc0013I At root node, 15 cuts changed objective from -98.935207 to -72.14332 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1419 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1104 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58.54317999999998, took 2710 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 96 times (1210 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-18) rows, 56 (-10) columns and 514 (-209) elements
Clp1000I sum of infeasibilities 2.34239e-08 - average 4.68478e-10, 5 fixed columns
Coin0506I Presolve 47 (-3) rows, 51 (-5) columns and 447 (-67) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 1.8462743 - largest nonzero change 2.2907325e-05 ( 0.0018056464%) - largest zero change 2.7586743e-05
Clp0000I Optimal - objective value 122.98126
Clp0000I Optimal - objective value 122.98126
Coin0511I After Postsolve, objective 122.98126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 122.98126
Clp0000I Optimal - objective value 122.98126
Clp0000I Optimal - objective value 122.98126
Coin0511I After Postsolve, objective 122.98126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.9812607 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 56 columns (56 integer (56 of which binary)) and 522 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.427%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.08484
Cbc0038I Pass   1: suminf.    0.69954 (8) obj. -14.0123 iterations 16
Cbc0038I Pass   2: suminf.    0.69954 (8) obj. -14.0123 iterations 1
Cbc0038I Solution found of 15.8575
Cbc0038I Rounding solution of -13.9905 is better than previous of 15.8575

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 56 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -13.9905 to -53.6731 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.8087
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.09400 (18) obj. -58.8087 iterations 2
Cbc0038I Pass   4: suminf.    3.09400 (18) obj. -58.8087 iterations 0
Cbc0038I Pass   5: suminf.    0.25701 (3) obj. -58.8087 iterations 22
Cbc0038I Pass   6: suminf.    1.26835 (4) obj. -58.8087 iterations 2
Cbc0038I Pass   7: suminf.    0.30000 (1) obj. -64.1731 iterations 2
Cbc0038I Pass   8: suminf.    1.05068 (5) obj. -59.8095 iterations 11
Cbc0038I Pass   9: suminf.    0.98646 (4) obj. -59.7453 iterations 2
Cbc0038I Pass  10: suminf.    1.14639 (4) obj. -58.8087 iterations 4
Cbc0038I Pass  11: suminf.    0.82649 (3) obj. -58.8087 iterations 5
Cbc0038I Pass  12: suminf.    0.36603 (3) obj. -58.8087 iterations 2
Cbc0038I Pass  13: suminf.    0.65021 (3) obj. -58.8087 iterations 2
Cbc0038I Pass  14: suminf.    1.01749 (5) obj. -58.8087 iterations 5
Cbc0038I Pass  15: suminf.    0.91689 (5) obj. -58.8087 iterations 1
Cbc0038I Pass  16: suminf.    0.79522 (4) obj. -58.8087 iterations 5
Cbc0038I Pass  17: suminf.    0.79522 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  18: suminf.    0.80500 (4) obj. -58.8087 iterations 4
Cbc0038I Pass  19: suminf.    0.80500 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  20: suminf.    0.79522 (4) obj. -58.8087 iterations 3
Cbc0038I Pass  21: suminf.    2.17673 (9) obj. -58.8087 iterations 9
Cbc0038I Pass  22: suminf.    2.17673 (9) obj. -58.8087 iterations 0
Cbc0038I Pass  23: suminf.    0.79522 (4) obj. -58.8087 iterations 11
Cbc0038I Pass  24: suminf.    0.79522 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  25: suminf.    0.80500 (4) obj. -58.8087 iterations 4
Cbc0038I Pass  26: suminf.    0.80500 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  27: suminf.    0.79522 (4) obj. -58.8087 iterations 3
Cbc0038I Pass  28: suminf.    2.73978 (10) obj. -58.8087 iterations 24
Cbc0038I Pass  29: suminf.    2.71407 (10) obj. -58.8087 iterations 3
Cbc0038I Pass  30: suminf.    1.38074 (4) obj. -58.8087 iterations 11
Cbc0038I Pass  31: suminf.    1.38074 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  32: suminf.    1.40128 (4) obj. -58.8087 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 56 columns, reduced to 3 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -53.6731 to -58.5432 (0.03 seconds)
Cbc0038I Round again with cutoff of -68.0526
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.46348 (18) obj. -68.0526 iterations 0
Cbc0038I Pass  33: suminf.    0.54039 (4) obj. -68.0526 iterations 20
Cbc0038I Pass  34: suminf.    0.52354 (4) obj. -68.0526 iterations 2
Cbc0038I Pass  35: suminf.    0.50441 (4) obj. -68.0526 iterations 4
Cbc0038I Pass  36: suminf.    0.50441 (4) obj. -68.0526 iterations 1
Cbc0038I Pass  37: suminf.    0.59121 (4) obj. -68.0526 iterations 4
Cbc0038I Pass  38: suminf.    0.59121 (4) obj. -68.0526 iterations 1
Cbc0038I Pass  39: suminf.    0.50441 (4) obj. -68.0526 iterations 3
Cbc0038I Pass  40: suminf.    2.15079 (9) obj. -68.0526 iterations 15
Cbc0038I Pass  41: suminf.    1.85502 (8) obj. -68.0526 iterations 4
Cbc0038I Pass  42: suminf.    1.37203 (8) obj. -68.0526 iterations 2
Cbc0038I Pass  43: suminf.    0.94209 (5) obj. -68.0526 iterations 8
Cbc0038I Pass  44: suminf.    0.94209 (5) obj. -68.0526 iterations 1
Cbc0038I Pass  45: suminf.    0.97829 (5) obj. -68.0526 iterations 4
Cbc0038I Pass  46: suminf.    0.97829 (5) obj. -68.0526 iterations 0
Cbc0038I Pass  47: suminf.    0.94209 (5) obj. -68.0526 iterations 3
Cbc0038I Pass  48: suminf.    1.52261 (6) obj. -68.0526 iterations 7
Cbc0038I Pass  49: suminf.    1.11381 (5) obj. -68.0526 iterations 3
Cbc0038I Pass  50: suminf.    1.48300 (5) obj. -68.0526 iterations 4
Cbc0038I Pass  51: suminf.    2.88131 (10) obj. -68.0526 iterations 14
Cbc0038I Pass  52: suminf.    1.71865 (8) obj. -68.0526 iterations 10
Cbc0038I Pass  53: suminf.    0.97151 (5) obj. -68.0526 iterations 6
Cbc0038I Pass  54: suminf.    0.88558 (5) obj. -68.0526 iterations 2
Cbc0038I Pass  55: suminf.    0.98669 (5) obj. -68.0526 iterations 5
Cbc0038I Pass  56: suminf.    2.27550 (8) obj. -68.0526 iterations 13
Cbc0038I Pass  57: suminf.    2.27550 (8) obj. -68.0526 iterations 1
Cbc0038I Pass  58: suminf.    1.44969 (5) obj. -68.0526 iterations 7
Cbc0038I Pass  59: suminf.    1.22134 (5) obj. -69.651 iterations 4
Cbc0038I Pass  60: suminf.    1.44969 (5) obj. -68.0526 iterations 4
Cbc0038I Pass  61: suminf.    2.06299 (8) obj. -68.0526 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 56 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -58.5432 - took 0.02 seconds
Cbc0012I Integer solution of -58.54318 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 50 rows 56 columns, reduced to 1 rows 2 columns
Cbc0031I 14 added rows had average density of 5.5
Cbc0013I At root node, 20 cuts changed objective from -105.02793 to -58.54318 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 159 row cuts average 7.0 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58.54317999999998, took 117 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 30 (-5) columns and 156 (-39) elements
Clp1000I sum of infeasibilities 5.25999e-05 - average 1.01154e-06, 3 fixed columns
Coin0506I Presolve 47 (-5) rows, 27 (-3) columns and 140 (-16) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 3.1930389 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 102.34694
Clp0000I Optimal - objective value 102.34694
Coin0511I After Postsolve, objective 102.34694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 102.34694
Clp0000I Optimal - objective value 102.34694
Clp0000I Optimal - objective value 102.34694
Coin0511I After Postsolve, objective 102.34694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.346941 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 158 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.951%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.74835
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.11256 iterations 18
Cbc0038I Solution found of 8.11256
Cbc0038I Relaxing continuous gives 8.11256
Cbc0038I Rounding solution of -11.4687 is better than previous of 8.11256

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -11.4687 to -58.5432 (0.02 seconds)
Cbc0038I Round again with cutoff of -62.5825
Cbc0038I Pass   2: suminf.    1.13018 (5) obj. -62.5825 iterations 4
Cbc0038I Pass   3: suminf.    0.97811 (3) obj. -62.5825 iterations 2
Cbc0038I Pass   4: suminf.    0.85736 (3) obj. -62.5825 iterations 3
Cbc0038I Pass   5: suminf.    0.55645 (3) obj. -62.5825 iterations 1
Cbc0038I Pass   6: suminf.    0.75946 (3) obj. -62.5825 iterations 5
Cbc0038I Pass   7: suminf.    0.75946 (3) obj. -62.5825 iterations 0
Cbc0038I Pass   8: suminf.    1.29704 (3) obj. -62.5825 iterations 2
Cbc0038I Pass   9: suminf.    3.04125 (7) obj. -62.5825 iterations 9
Cbc0038I Pass  10: suminf.    2.15298 (6) obj. -62.5825 iterations 6
Cbc0038I Pass  11: suminf.    1.93914 (5) obj. -62.5825 iterations 2
Cbc0038I Pass  12: suminf.    1.19978 (4) obj. -62.5825 iterations 6
Cbc0038I Pass  13: suminf.    1.28829 (3) obj. -62.5825 iterations 5
Cbc0038I Pass  14: suminf.    1.27292 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  15: suminf.    1.27727 (3) obj. -62.5825 iterations 2
Cbc0038I Pass  16: suminf.    1.27602 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  17: suminf.    1.26686 (4) obj. -62.5825 iterations 3
Cbc0038I Pass  18: suminf.    1.75560 (5) obj. -62.5825 iterations 2
Cbc0038I Pass  19: suminf.    1.08481 (4) obj. -62.5825 iterations 5
Cbc0038I Pass  20: suminf.    1.12666 (5) obj. -62.5825 iterations 4
Cbc0038I Pass  21: suminf.    1.00446 (5) obj. -62.5825 iterations 2
Cbc0038I Pass  22: suminf.    1.26686 (4) obj. -62.5825 iterations 2
Cbc0038I Pass  23: suminf.    1.27292 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  24: suminf.    1.27727 (3) obj. -62.5825 iterations 2
Cbc0038I Pass  25: suminf.    1.27602 (3) obj. -62.5825 iterations 1
Cbc0038I Pass  26: suminf.    1.26686 (4) obj. -62.5825 iterations 3
Cbc0038I Pass  27: suminf.    2.75717 (8) obj. -62.5825 iterations 12
Cbc0038I Pass  28: suminf.    1.50753 (7) obj. -62.5825 iterations 5
Cbc0038I Pass  29: suminf.    1.50753 (7) obj. -62.5825 iterations 0
Cbc0038I Pass  30: suminf.    1.74172 (4) obj. -62.5825 iterations 6
Cbc0038I Pass  31: suminf.    1.05880 (3) obj. -62.5825 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -58.5432 - took 0.04 seconds
Cbc0012I Integer solution of -58.54318 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 30 rows 18 columns
Cbc0031I 15 added rows had average density of 25
Cbc0013I At root node, 15 cuts changed objective from -98.935207 to -72.14332 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1419 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1104 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58.54317999999998, took 2710 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 96 times (1210 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-19) rows, 56 (-11) columns and 514 (-210) elements
Clp1000I sum of infeasibilities 2.34239e-08 - average 4.68478e-10, 5 fixed columns
Coin0506I Presolve 47 (-3) rows, 51 (-5) columns and 447 (-67) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 1.8462743 - largest nonzero change 2.2907325e-05 ( 0.0018056464%) - largest zero change 2.7586743e-05
Clp0000I Optimal - objective value 122.98126
Clp0000I Optimal - objective value 122.98126
Coin0511I After Postsolve, objective 122.98126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 122.98126
Clp0000I Optimal - objective value 122.98126
Clp0000I Optimal - objective value 122.98126
Coin0511I After Postsolve, objective 122.98126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.9812607 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 56 columns (56 integer (56 of which binary)) and 522 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.427%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.08484
Cbc0038I Pass   1: suminf.    0.69954 (8) obj. -14.0123 iterations 16
Cbc0038I Pass   2: suminf.    0.69954 (8) obj. -14.0123 iterations 1
Cbc0038I Solution found of 15.8575
Cbc0038I Rounding solution of -13.9905 is better than previous of 15.8575

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 56 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -13.9905 to -53.6731 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.8087
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.09400 (18) obj. -58.8087 iterations 2
Cbc0038I Pass   4: suminf.    3.09400 (18) obj. -58.8087 iterations 0
Cbc0038I Pass   5: suminf.    0.25701 (3) obj. -58.8087 iterations 22
Cbc0038I Pass   6: suminf.    1.26835 (4) obj. -58.8087 iterations 2
Cbc0038I Pass   7: suminf.    0.30000 (1) obj. -64.1731 iterations 2
Cbc0038I Pass   8: suminf.    1.05068 (5) obj. -59.8095 iterations 11
Cbc0038I Pass   9: suminf.    0.98646 (4) obj. -59.7453 iterations 2
Cbc0038I Pass  10: suminf.    1.14639 (4) obj. -58.8087 iterations 4
Cbc0038I Pass  11: suminf.    0.82649 (3) obj. -58.8087 iterations 5
Cbc0038I Pass  12: suminf.    0.36603 (3) obj. -58.8087 iterations 2
Cbc0038I Pass  13: suminf.    0.65021 (3) obj. -58.8087 iterations 2
Cbc0038I Pass  14: suminf.    1.01749 (5) obj. -58.8087 iterations 5
Cbc0038I Pass  15: suminf.    0.91689 (5) obj. -58.8087 iterations 1
Cbc0038I Pass  16: suminf.    0.79522 (4) obj. -58.8087 iterations 5
Cbc0038I Pass  17: suminf.    0.79522 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  18: suminf.    0.80500 (4) obj. -58.8087 iterations 4
Cbc0038I Pass  19: suminf.    0.80500 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  20: suminf.    0.79522 (4) obj. -58.8087 iterations 3
Cbc0038I Pass  21: suminf.    2.17673 (9) obj. -58.8087 iterations 9
Cbc0038I Pass  22: suminf.    2.17673 (9) obj. -58.8087 iterations 0
Cbc0038I Pass  23: suminf.    0.79522 (4) obj. -58.8087 iterations 11
Cbc0038I Pass  24: suminf.    0.79522 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  25: suminf.    0.80500 (4) obj. -58.8087 iterations 4
Cbc0038I Pass  26: suminf.    0.80500 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  27: suminf.    0.79522 (4) obj. -58.8087 iterations 3
Cbc0038I Pass  28: suminf.    2.73978 (10) obj. -58.8087 iterations 24
Cbc0038I Pass  29: suminf.    2.71407 (10) obj. -58.8087 iterations 3
Cbc0038I Pass  30: suminf.    1.38074 (4) obj. -58.8087 iterations 11
Cbc0038I Pass  31: suminf.    1.38074 (4) obj. -58.8087 iterations 1
Cbc0038I Pass  32: suminf.    1.40128 (4) obj. -58.8087 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 56 columns, reduced to 3 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -53.6731 to -58.5432 (0.02 seconds)
Cbc0038I Round again with cutoff of -68.0526
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.46348 (18) obj. -68.0526 iterations 0
Cbc0038I Pass  33: suminf.    0.54039 (4) obj. -68.0526 iterations 20
Cbc0038I Pass  34: suminf.    0.52354 (4) obj. -68.0526 iterations 2
Cbc0038I Pass  35: suminf.    0.50441 (4) obj. -68.0526 iterations 4
Cbc0038I Pass  36: suminf.    0.50441 (4) obj. -68.0526 iterations 1
Cbc0038I Pass  37: suminf.    0.59121 (4) obj. -68.0526 iterations 4
Cbc0038I Pass  38: suminf.    0.59121 (4) obj. -68.0526 iterations 1
Cbc0038I Pass  39: suminf.    0.50441 (4) obj. -68.0526 iterations 3
Cbc0038I Pass  40: suminf.    2.15079 (9) obj. -68.0526 iterations 15
Cbc0038I Pass  41: suminf.    1.85502 (8) obj. -68.0526 iterations 4
Cbc0038I Pass  42: suminf.    1.37203 (8) obj. -68.0526 iterations 2
Cbc0038I Pass  43: suminf.    0.94209 (5) obj. -68.0526 iterations 8
Cbc0038I Pass  44: suminf.    0.94209 (5) obj. -68.0526 iterations 1
Cbc0038I Pass  45: suminf.    0.97829 (5) obj. -68.0526 iterations 4
Cbc0038I Pass  46: suminf.    0.97829 (5) obj. -68.0526 iterations 0
Cbc0038I Pass  47: suminf.    0.94209 (5) obj. -68.0526 iterations 3
Cbc0038I Pass  48: suminf.    1.52261 (6) obj. -68.0526 iterations 7
Cbc0038I Pass  49: suminf.    1.11381 (5) obj. -68.0526 iterations 3
Cbc0038I Pass  50: suminf.    1.48300 (5) obj. -68.0526 iterations 4
Cbc0038I Pass  51: suminf.    2.88131 (10) obj. -68.0526 iterations 14
Cbc0038I Pass  52: suminf.    1.71865 (8) obj. -68.0526 iterations 10
Cbc0038I Pass  53: suminf.    0.97151 (5) obj. -68.0526 iterations 6
Cbc0038I Pass  54: suminf.    0.88558 (5) obj. -68.0526 iterations 2
Cbc0038I Pass  55: suminf.    0.98669 (5) obj. -68.0526 iterations 5
Cbc0038I Pass  56: suminf.    2.27550 (8) obj. -68.0526 iterations 13
Cbc0038I Pass  57: suminf.    2.27550 (8) obj. -68.0526 iterations 1
Cbc0038I Pass  58: suminf.    1.44969 (5) obj. -68.0526 iterations 7
Cbc0038I Pass  59: suminf.    1.22134 (5) obj. -69.651 iterations 4
Cbc0038I Pass  60: suminf.    1.44969 (5) obj. -68.0526 iterations 4
Cbc0038I Pass  61: suminf.    2.06299 (8) obj. -68.0526 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 56 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -58.5432 - took 0.02 seconds
Cbc0012I Integer solution of -58.54318 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 50 rows 56 columns, reduced to 1 rows 2 columns
Cbc0031I 14 added rows had average density of 5.5
Cbc0013I At root node, 20 cuts changed objective from -105.02793 to -58.54318 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 159 row cuts average 7.0 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58.54317999999998, took 117 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

