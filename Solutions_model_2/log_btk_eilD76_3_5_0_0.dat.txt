Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.55169e-06 - average 1.1936e-08, 8 fixed columns
Coin0506I Presolve 115 (-15) rows, 68 (-8) columns and 358 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.3047144 - largest nonzero change 0 ( 0%) - largest zero change 1.9978266e-05
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Coin0511I After Postsolve, objective 57.538535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Coin0511I After Postsolve, objective 57.538535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.53853518 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.2126
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.65654 iterations 55
Cbc0038I Solution found of -1.65654
Cbc0038I Relaxing continuous gives -1.65654
Cbc0038I Rounding solution of -15.0983 is better than previous of -1.65654

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -15.0983 to -28.9869 (0.05 seconds)
Cbc0038I Round again with cutoff of -31.8422
Cbc0038I Pass   2: suminf.    2.83078 (11) obj. -31.8422 iterations 15
Cbc0038I Pass   3: suminf.    2.55010 (9) obj. -31.8422 iterations 2
Cbc0038I Pass   4: suminf.    1.96844 (6) obj. -31.8422 iterations 13
Cbc0038I Pass   5: suminf.    2.05303 (6) obj. -31.8422 iterations 7
Cbc0038I Pass   6: suminf.    2.00133 (5) obj. -31.8422 iterations 1
Cbc0038I Pass   7: suminf.    1.44971 (4) obj. -31.8422 iterations 6
Cbc0038I Pass   8: suminf.    1.41827 (5) obj. -31.8422 iterations 1
Cbc0038I Pass   9: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  10: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  11: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  12: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  13: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  14: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  15: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  16: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  17: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  18: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  19: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  20: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  21: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  22: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  23: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  24: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  25: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  26: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  27: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  28: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  29: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  30: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  31: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -28.9869 to -30.1235 (0.10 seconds)
Cbc0038I Round again with cutoff of -36.9814
Cbc0038I Pass  31: suminf.    3.56854 (12) obj. -36.9814 iterations 3
Cbc0038I Pass  32: suminf.    3.28422 (9) obj. -36.9814 iterations 5
Cbc0038I Pass  33: suminf.    2.00726 (5) obj. -36.9814 iterations 12
Cbc0038I Pass  34: suminf.    1.80228 (5) obj. -36.9814 iterations 1
Cbc0038I Pass  35: suminf.    1.75632 (5) obj. -36.9814 iterations 5
Cbc0038I Pass  36: suminf.    1.75632 (5) obj. -36.9814 iterations 0
Cbc0038I Pass  37: suminf.    1.26984 (3) obj. -36.9814 iterations 4
Cbc0038I Pass  38: suminf.    1.17169 (4) obj. -36.9814 iterations 4
Cbc0038I Pass  39: suminf.    1.75632 (5) obj. -36.9814 iterations 3
Cbc0038I Pass  40: suminf.    3.65144 (12) obj. -36.9814 iterations 23
Cbc0038I Pass  41: suminf.    2.75958 (9) obj. -36.9814 iterations 12
Cbc0038I Pass  42: suminf.    6.79678 (19) obj. -36.9814 iterations 18
Cbc0038I Pass  43: suminf.    3.32261 (10) obj. -36.9814 iterations 23
Cbc0038I Pass  44: suminf.    2.72409 (9) obj. -36.9814 iterations 5
Cbc0038I Pass  45: suminf.    2.30129 (6) obj. -36.9814 iterations 15
Cbc0038I Pass  46: suminf.    1.52458 (7) obj. -36.9814 iterations 4
Cbc0038I Pass  47: suminf.    2.40756 (6) obj. -36.9814 iterations 9
Cbc0038I Pass  48: suminf.    1.51450 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  49: suminf.    1.50407 (4) obj. -36.9814 iterations 2
Cbc0038I Pass  50: suminf.    1.58967 (4) obj. -36.9814 iterations 5
Cbc0038I Pass  51: suminf.    1.44511 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  52: suminf.    1.58967 (4) obj. -36.9814 iterations 2
Cbc0038I Pass  53: suminf.    5.25891 (19) obj. -36.9814 iterations 29
Cbc0038I Pass  54: suminf.    1.78141 (6) obj. -36.9814 iterations 26
Cbc0038I Pass  55: suminf.    1.50476 (6) obj. -36.9814 iterations 4
Cbc0038I Pass  56: suminf.    1.58024 (5) obj. -36.9814 iterations 9
Cbc0038I Pass  57: suminf.    1.58024 (5) obj. -36.9814 iterations 0
Cbc0038I Pass  58: suminf.    1.41275 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  59: suminf.    1.03873 (3) obj. -36.9814 iterations 3
Cbc0038I Pass  60: suminf.    1.00995 (4) obj. -36.9814 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 95 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -30.1235 - took 0.12 seconds
Cbc0012I Integer solution of -30.12353 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 76 rows 47 columns
Cbc0031I 22 added rows had average density of 66.227273
Cbc0013I At root node, 22 cuts changed objective from -57.538535 to -48.630868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15213 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1906 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.12353 best solution, best possible -48.630868 (0.99 seconds)
Cbc0012I Integer solution of -30.56588 found by rounding after 9456 iterations and 27 nodes (1.16 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 52 rows 34 columns
Cbc0012I Integer solution of -30.86624 found by RINS after 9907 iterations and 43 nodes (1.21 seconds)
Cbc0001I Search completed - best objective -30.86623999999999, took 10587 iterations and 64 nodes (1.24 seconds)
Cbc0032I Strong branching done 790 times (16395 iterations), fathomed 4 nodes and fixed 31 variables
Cbc0035I Maximum depth 26, 125 variables fixed on reduced cost
Total time (CPU seconds):       1.21   (Wallclock seconds):       1.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 115 (-37) columns and 1766 (-1537) elements
Clp1000I sum of infeasibilities 2.28619e-07 - average 2.40652e-09, 59 fixed columns
Coin0506I Presolve 39 (-56) rows, 56 (-59) columns and 184 (-1582) elements
Clp0006I 0  Obj 8.0911605 Dual inf 3.9119611 (56)
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 1.5142175 - largest nonzero change 2.9558931e-05 ( 0.0016580886%) - largest zero change 2.8730476e-05
Clp0000I Optimal - objective value 9.3338802
Clp0000I Optimal - objective value 9.3338802
Coin0511I After Postsolve, objective 9.3338802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 9.3338802 Dual inf 37.999703 (40)
Clp0014I Perturbing problem by 0.001% of 1.9831014 - largest nonzero change 2.1845123e-05 ( 0.0015380202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 75.835446
Clp0000I Optimal - objective value 75.835446
Clp0000I Optimal - objective value 75.835446
Coin0511I After Postsolve, objective 75.835446, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.83544581 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 115 columns (115 integer (115 of which binary)) and 1770 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.60204
Cbc0038I Pass   1: suminf.    1.68312 (30) obj. -45.0174 iterations 22
Cbc0038I Pass   2: suminf.    1.68312 (30) obj. -45.0174 iterations 1
Cbc0038I Pass   3: suminf.    0.31704 (8) obj. 0.266183 iterations 22
Cbc0038I Solution found of 11.7897
Cbc0038I Rounding solution of -5.38921 is better than previous of 11.7897

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -5.38921 to -8.20906 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.1341
Cbc0038I Pass   4: suminf.    1.68312 (30) obj. -45.0174 iterations 0
Cbc0038I Pass   5: suminf.    1.68312 (30) obj. -45.0174 iterations 1
Cbc0038I Pass   6: suminf.    0.38347 (4) obj. -14.1341 iterations 31
Cbc0038I Pass   7: suminf.    0.38347 (4) obj. -14.1341 iterations 0
Cbc0038I Pass   8: suminf.    0.62593 (2) obj. -14.1341 iterations 5
Cbc0038I Pass   9: suminf.    0.60531 (2) obj. -14.8461 iterations 1
Cbc0038I Pass  10: suminf.    0.55782 (2) obj. -14.1341 iterations 2
Cbc0038I Pass  11: suminf.    0.55782 (2) obj. -14.1341 iterations 1
Cbc0038I Pass  12: suminf.    1.22079 (12) obj. -28.8939 iterations 28
Cbc0038I Pass  13: suminf.    1.22079 (12) obj. -28.8939 iterations 5
Cbc0038I Pass  14: suminf.    0.71076 (3) obj. -14.1341 iterations 15
Cbc0038I Pass  15: suminf.    0.71076 (3) obj. -14.1341 iterations 0
Cbc0038I Pass  16: suminf.    0.52016 (2) obj. -14.1341 iterations 4
Cbc0038I Pass  17: suminf.    0.51205 (2) obj. -14.4908 iterations 1
Cbc0038I Pass  18: suminf.    1.88833 (16) obj. -14.1341 iterations 36
Cbc0038I Pass  19: suminf.    0.93587 (10) obj. -14.9416 iterations 12
Cbc0038I Pass  20: suminf.    1.01059 (5) obj. -14.1341 iterations 15
Cbc0038I Pass  21: suminf.    0.44362 (4) obj. -14.9649 iterations 5
Cbc0038I Pass  22: suminf.    0.93079 (5) obj. -14.1341 iterations 12
Cbc0038I Pass  23: suminf.    0.48359 (5) obj. -14.1341 iterations 3
Cbc0038I Pass  24: suminf.    0.55246 (5) obj. -14.1341 iterations 9
Cbc0038I Pass  25: suminf.    0.52634 (5) obj. -14.1341 iterations 3
Cbc0038I Pass  26: suminf.    0.69990 (5) obj. -14.1341 iterations 7
Cbc0038I Pass  27: suminf.    0.55811 (4) obj. -14.1341 iterations 6
Cbc0038I Pass  28: suminf.    1.21989 (5) obj. -14.1341 iterations 7
Cbc0038I Pass  29: suminf.    1.21989 (5) obj. -14.1341 iterations 0
Cbc0038I Pass  30: suminf.    0.31890 (3) obj. -14.1341 iterations 5
Cbc0038I Pass  31: suminf.    0.31037 (3) obj. -14.2977 iterations 4
Cbc0038I Pass  32: suminf.    0.61824 (4) obj. -14.1341 iterations 6
Cbc0038I Pass  33: suminf.    1.49896 (12) obj. -14.1341 iterations 35
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 43 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -8.20906 to -28.8373 (0.06 seconds)
Cbc0038I Round again with cutoff of -36.5616
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.68312 (30) obj. -45.0174 iterations 0
Cbc0038I Pass  34: suminf.    1.68312 (30) obj. -45.0174 iterations 1
Cbc0038I Pass  35: suminf.    1.09539 (21) obj. -36.5616 iterations 11
Cbc0038I Pass  36: suminf.    0.99236 (20) obj. -37.4175 iterations 1
Cbc0038I Pass  37: suminf.    1.41626 (15) obj. -36.5616 iterations 24
Cbc0038I Pass  38: suminf.    1.41626 (15) obj. -36.5616 iterations 0
Cbc0038I Pass  39: suminf.    1.54248 (15) obj. -36.5616 iterations 20
Cbc0038I Pass  40: suminf.    1.30426 (8) obj. -36.5616 iterations 6
Cbc0038I Pass  41: suminf.    0.80750 (8) obj. -36.5616 iterations 3
Cbc0038I Pass  42: suminf.    1.30426 (8) obj. -36.5616 iterations 2
Cbc0038I Pass  43: suminf.    3.50521 (19) obj. -36.5616 iterations 25
Cbc0038I Pass  44: suminf.    3.32959 (20) obj. -36.5616 iterations 5
Cbc0038I Pass  45: suminf.    3.30930 (13) obj. -36.5616 iterations 22
Cbc0038I Pass  46: suminf.    2.69547 (15) obj. -36.5616 iterations 8
Cbc0038I Pass  47: suminf.    2.50276 (15) obj. -36.5616 iterations 8
Cbc0038I Pass  48: suminf.    2.20848 (13) obj. -36.5616 iterations 10
Cbc0038I Pass  49: suminf.    1.73238 (13) obj. -36.5616 iterations 5
Cbc0038I Pass  50: suminf.    1.61293 (12) obj. -36.5616 iterations 1
Cbc0038I Pass  51: suminf.    1.87014 (12) obj. -36.5616 iterations 6
Cbc0038I Pass  52: suminf.    1.74162 (12) obj. -36.5616 iterations 4
Cbc0038I Pass  53: suminf.    2.85246 (16) obj. -36.5616 iterations 12
Cbc0038I Pass  54: suminf.    2.85246 (16) obj. -36.5616 iterations 2
Cbc0038I Pass  55: suminf.    2.69547 (15) obj. -36.5616 iterations 14
Cbc0038I Pass  56: suminf.    2.50276 (15) obj. -36.5616 iterations 9
Cbc0038I Pass  57: suminf.    2.20848 (13) obj. -36.5616 iterations 10
Cbc0038I Pass  58: suminf.    1.73238 (13) obj. -36.5616 iterations 5
Cbc0038I Pass  59: suminf.    1.61293 (12) obj. -36.5616 iterations 1
Cbc0038I Pass  60: suminf.    1.87014 (12) obj. -36.5616 iterations 5
Cbc0038I Pass  61: suminf.    3.01236 (19) obj. -36.5616 iterations 21
Cbc0038I Pass  62: suminf.    2.26628 (17) obj. -36.5616 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 42 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -28.8373 - took 0.05 seconds
Cbc0012I Integer solution of -28.83735 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 29 rows 33 columns
Cbc0031I 64 added rows had average density of 24.15625
Cbc0013I At root node, 64 cuts changed objective from -67.458181 to -34.1392 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19296 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1677 row cuts average 109.8 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 609 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 734 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 262 row cuts average 65.4 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.658 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.83735 best solution, best possible -34.1392 (2.64 seconds)
Cbc0012I Integer solution of -29.11721 found by rounding after 7814 iterations and 5 nodes (3.21 seconds)
Cbc0010I After 7 nodes, 6 on tree, -29.11721 best solution, best possible -32.836859 (3.37 seconds)
Cbc0012I Integer solution of -30.61276 found by DiveCoefficient after 8186 iterations and 11 nodes (3.51 seconds)
Cbc0016I Integer solution of -30.86624 found by strong branching after 8506 iterations and 22 nodes (3.58 seconds)
Cbc0001I Search completed - best objective -30.86623999999999, took 8923 iterations and 34 nodes (3.59 seconds)
Cbc0032I Strong branching done 524 times (14792 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 16, 35 variables fixed on reduced cost
Total time (CPU seconds):       2.89   (Wallclock seconds):       3.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.55169e-06 - average 1.1936e-08, 8 fixed columns
Coin0506I Presolve 115 (-15) rows, 68 (-8) columns and 358 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.3047144 - largest nonzero change 0 ( 0%) - largest zero change 1.9978266e-05
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Coin0511I After Postsolve, objective 57.538535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Clp0000I Optimal - objective value 57.538535
Coin0511I After Postsolve, objective 57.538535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.53853518 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.2126
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.65654 iterations 55
Cbc0038I Solution found of -1.65654
Cbc0038I Relaxing continuous gives -1.65654
Cbc0038I Rounding solution of -15.0983 is better than previous of -1.65654

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -15.0983 to -28.9869 (0.05 seconds)
Cbc0038I Round again with cutoff of -31.8422
Cbc0038I Pass   2: suminf.    2.83078 (11) obj. -31.8422 iterations 15
Cbc0038I Pass   3: suminf.    2.55010 (9) obj. -31.8422 iterations 2
Cbc0038I Pass   4: suminf.    1.96844 (6) obj. -31.8422 iterations 13
Cbc0038I Pass   5: suminf.    2.05303 (6) obj. -31.8422 iterations 7
Cbc0038I Pass   6: suminf.    2.00133 (5) obj. -31.8422 iterations 1
Cbc0038I Pass   7: suminf.    1.44971 (4) obj. -31.8422 iterations 6
Cbc0038I Pass   8: suminf.    1.41827 (5) obj. -31.8422 iterations 1
Cbc0038I Pass   9: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  10: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  11: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  12: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  13: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  14: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  15: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  16: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  17: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  18: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  19: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  20: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  21: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  22: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  23: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  24: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  25: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  26: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I Pass  27: suminf.    1.41827 (5) obj. -31.8422 iterations 6
Cbc0038I Pass  28: suminf.    1.41827 (5) obj. -31.8422 iterations 0
Cbc0038I Pass  29: suminf.    2.05614 (5) obj. -31.8422 iterations 8
Cbc0038I Pass  30: suminf.    1.44056 (4) obj. -31.8422 iterations 5
Cbc0038I Pass  31: suminf.    1.28300 (4) obj. -31.8422 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -28.9869 to -30.1235 (0.09 seconds)
Cbc0038I Round again with cutoff of -36.9814
Cbc0038I Pass  31: suminf.    3.56854 (12) obj. -36.9814 iterations 3
Cbc0038I Pass  32: suminf.    3.28422 (9) obj. -36.9814 iterations 5
Cbc0038I Pass  33: suminf.    2.00726 (5) obj. -36.9814 iterations 12
Cbc0038I Pass  34: suminf.    1.80228 (5) obj. -36.9814 iterations 1
Cbc0038I Pass  35: suminf.    1.75632 (5) obj. -36.9814 iterations 5
Cbc0038I Pass  36: suminf.    1.75632 (5) obj. -36.9814 iterations 0
Cbc0038I Pass  37: suminf.    1.26984 (3) obj. -36.9814 iterations 4
Cbc0038I Pass  38: suminf.    1.17169 (4) obj. -36.9814 iterations 4
Cbc0038I Pass  39: suminf.    1.75632 (5) obj. -36.9814 iterations 3
Cbc0038I Pass  40: suminf.    3.65144 (12) obj. -36.9814 iterations 23
Cbc0038I Pass  41: suminf.    2.75958 (9) obj. -36.9814 iterations 12
Cbc0038I Pass  42: suminf.    6.79678 (19) obj. -36.9814 iterations 18
Cbc0038I Pass  43: suminf.    3.32261 (10) obj. -36.9814 iterations 23
Cbc0038I Pass  44: suminf.    2.72409 (9) obj. -36.9814 iterations 5
Cbc0038I Pass  45: suminf.    2.30129 (6) obj. -36.9814 iterations 15
Cbc0038I Pass  46: suminf.    1.52458 (7) obj. -36.9814 iterations 4
Cbc0038I Pass  47: suminf.    2.40756 (6) obj. -36.9814 iterations 9
Cbc0038I Pass  48: suminf.    1.51450 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  49: suminf.    1.50407 (4) obj. -36.9814 iterations 2
Cbc0038I Pass  50: suminf.    1.58967 (4) obj. -36.9814 iterations 5
Cbc0038I Pass  51: suminf.    1.44511 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  52: suminf.    1.58967 (4) obj. -36.9814 iterations 2
Cbc0038I Pass  53: suminf.    5.25891 (19) obj. -36.9814 iterations 29
Cbc0038I Pass  54: suminf.    1.78141 (6) obj. -36.9814 iterations 26
Cbc0038I Pass  55: suminf.    1.50476 (6) obj. -36.9814 iterations 4
Cbc0038I Pass  56: suminf.    1.58024 (5) obj. -36.9814 iterations 9
Cbc0038I Pass  57: suminf.    1.58024 (5) obj. -36.9814 iterations 0
Cbc0038I Pass  58: suminf.    1.41275 (4) obj. -36.9814 iterations 3
Cbc0038I Pass  59: suminf.    1.03873 (3) obj. -36.9814 iterations 3
Cbc0038I Pass  60: suminf.    1.00995 (4) obj. -36.9814 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 95 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -30.1235 - took 0.12 seconds
Cbc0012I Integer solution of -30.12353 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 76 rows 47 columns
Cbc0031I 22 added rows had average density of 66.227273
Cbc0013I At root node, 22 cuts changed objective from -57.538535 to -48.630868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15213 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1906 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.12353 best solution, best possible -48.630868 (1.06 seconds)
Cbc0012I Integer solution of -30.56588 found by rounding after 9456 iterations and 27 nodes (1.24 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 52 rows 34 columns
Cbc0012I Integer solution of -30.86624 found by RINS after 9907 iterations and 43 nodes (1.29 seconds)
Cbc0001I Search completed - best objective -30.86623999999999, took 10587 iterations and 64 nodes (1.32 seconds)
Cbc0032I Strong branching done 790 times (16395 iterations), fathomed 4 nodes and fixed 31 variables
Cbc0035I Maximum depth 26, 125 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 115 (-38) columns and 1766 (-1538) elements
Clp1000I sum of infeasibilities 2.28619e-07 - average 2.40652e-09, 59 fixed columns
Coin0506I Presolve 39 (-56) rows, 56 (-59) columns and 184 (-1582) elements
Clp0006I 0  Obj 8.0911605 Dual inf 3.9119611 (56)
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 1.5142175 - largest nonzero change 2.9558931e-05 ( 0.0016580886%) - largest zero change 2.8730476e-05
Clp0000I Optimal - objective value 9.3338802
Clp0000I Optimal - objective value 9.3338802
Coin0511I After Postsolve, objective 9.3338802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 9.3338802 Dual inf 37.999703 (40)
Clp0014I Perturbing problem by 0.001% of 1.9831014 - largest nonzero change 2.1845123e-05 ( 0.0015380202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 75.835446
Clp0000I Optimal - objective value 75.835446
Clp0000I Optimal - objective value 75.835446
Coin0511I After Postsolve, objective 75.835446, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.83544581 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 115 columns (115 integer (115 of which binary)) and 1770 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.60204
Cbc0038I Pass   1: suminf.    1.68312 (30) obj. -45.0174 iterations 22
Cbc0038I Pass   2: suminf.    1.68312 (30) obj. -45.0174 iterations 1
Cbc0038I Pass   3: suminf.    0.31704 (8) obj. 0.266183 iterations 22
Cbc0038I Solution found of 11.7897
Cbc0038I Rounding solution of -5.38921 is better than previous of 11.7897

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -5.38921 to -8.20906 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.1341
Cbc0038I Pass   4: suminf.    1.68312 (30) obj. -45.0174 iterations 0
Cbc0038I Pass   5: suminf.    1.68312 (30) obj. -45.0174 iterations 1
Cbc0038I Pass   6: suminf.    0.38347 (4) obj. -14.1341 iterations 31
Cbc0038I Pass   7: suminf.    0.38347 (4) obj. -14.1341 iterations 0
Cbc0038I Pass   8: suminf.    0.62593 (2) obj. -14.1341 iterations 5
Cbc0038I Pass   9: suminf.    0.60531 (2) obj. -14.8461 iterations 1
Cbc0038I Pass  10: suminf.    0.55782 (2) obj. -14.1341 iterations 2
Cbc0038I Pass  11: suminf.    0.55782 (2) obj. -14.1341 iterations 1
Cbc0038I Pass  12: suminf.    1.22079 (12) obj. -28.8939 iterations 28
Cbc0038I Pass  13: suminf.    1.22079 (12) obj. -28.8939 iterations 5
Cbc0038I Pass  14: suminf.    0.71076 (3) obj. -14.1341 iterations 15
Cbc0038I Pass  15: suminf.    0.71076 (3) obj. -14.1341 iterations 0
Cbc0038I Pass  16: suminf.    0.52016 (2) obj. -14.1341 iterations 4
Cbc0038I Pass  17: suminf.    0.51205 (2) obj. -14.4908 iterations 1
Cbc0038I Pass  18: suminf.    1.88833 (16) obj. -14.1341 iterations 36
Cbc0038I Pass  19: suminf.    0.93587 (10) obj. -14.9416 iterations 12
Cbc0038I Pass  20: suminf.    1.01059 (5) obj. -14.1341 iterations 15
Cbc0038I Pass  21: suminf.    0.44362 (4) obj. -14.9649 iterations 5
Cbc0038I Pass  22: suminf.    0.93079 (5) obj. -14.1341 iterations 12
Cbc0038I Pass  23: suminf.    0.48359 (5) obj. -14.1341 iterations 3
Cbc0038I Pass  24: suminf.    0.55246 (5) obj. -14.1341 iterations 9
Cbc0038I Pass  25: suminf.    0.52634 (5) obj. -14.1341 iterations 3
Cbc0038I Pass  26: suminf.    0.69990 (5) obj. -14.1341 iterations 7
Cbc0038I Pass  27: suminf.    0.55811 (4) obj. -14.1341 iterations 6
Cbc0038I Pass  28: suminf.    1.21989 (5) obj. -14.1341 iterations 7
Cbc0038I Pass  29: suminf.    1.21989 (5) obj. -14.1341 iterations 0
Cbc0038I Pass  30: suminf.    0.31890 (3) obj. -14.1341 iterations 5
Cbc0038I Pass  31: suminf.    0.31037 (3) obj. -14.2977 iterations 4
Cbc0038I Pass  32: suminf.    0.61824 (4) obj. -14.1341 iterations 6
Cbc0038I Pass  33: suminf.    1.49896 (12) obj. -14.1341 iterations 35
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 43 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -8.20906 to -28.8373 (0.07 seconds)
Cbc0038I Round again with cutoff of -36.5616
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.68312 (30) obj. -45.0174 iterations 0
Cbc0038I Pass  34: suminf.    1.68312 (30) obj. -45.0174 iterations 1
Cbc0038I Pass  35: suminf.    1.09539 (21) obj. -36.5616 iterations 11
Cbc0038I Pass  36: suminf.    0.99236 (20) obj. -37.4175 iterations 1
Cbc0038I Pass  37: suminf.    1.41626 (15) obj. -36.5616 iterations 24
Cbc0038I Pass  38: suminf.    1.41626 (15) obj. -36.5616 iterations 0
Cbc0038I Pass  39: suminf.    1.54248 (15) obj. -36.5616 iterations 20
Cbc0038I Pass  40: suminf.    1.30426 (8) obj. -36.5616 iterations 6
Cbc0038I Pass  41: suminf.    0.80750 (8) obj. -36.5616 iterations 3
Cbc0038I Pass  42: suminf.    1.30426 (8) obj. -36.5616 iterations 2
Cbc0038I Pass  43: suminf.    3.50521 (19) obj. -36.5616 iterations 25
Cbc0038I Pass  44: suminf.    3.32959 (20) obj. -36.5616 iterations 5
Cbc0038I Pass  45: suminf.    3.30930 (13) obj. -36.5616 iterations 22
Cbc0038I Pass  46: suminf.    2.69547 (15) obj. -36.5616 iterations 8
Cbc0038I Pass  47: suminf.    2.50276 (15) obj. -36.5616 iterations 8
Cbc0038I Pass  48: suminf.    2.20848 (13) obj. -36.5616 iterations 10
Cbc0038I Pass  49: suminf.    1.73238 (13) obj. -36.5616 iterations 5
Cbc0038I Pass  50: suminf.    1.61293 (12) obj. -36.5616 iterations 1
Cbc0038I Pass  51: suminf.    1.87014 (12) obj. -36.5616 iterations 6
Cbc0038I Pass  52: suminf.    1.74162 (12) obj. -36.5616 iterations 4
Cbc0038I Pass  53: suminf.    2.85246 (16) obj. -36.5616 iterations 12
Cbc0038I Pass  54: suminf.    2.85246 (16) obj. -36.5616 iterations 2
Cbc0038I Pass  55: suminf.    2.69547 (15) obj. -36.5616 iterations 14
Cbc0038I Pass  56: suminf.    2.50276 (15) obj. -36.5616 iterations 9
Cbc0038I Pass  57: suminf.    2.20848 (13) obj. -36.5616 iterations 10
Cbc0038I Pass  58: suminf.    1.73238 (13) obj. -36.5616 iterations 5
Cbc0038I Pass  59: suminf.    1.61293 (12) obj. -36.5616 iterations 1
Cbc0038I Pass  60: suminf.    1.87014 (12) obj. -36.5616 iterations 5
Cbc0038I Pass  61: suminf.    3.01236 (19) obj. -36.5616 iterations 21
Cbc0038I Pass  62: suminf.    2.26628 (17) obj. -36.5616 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 42 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -28.8373 - took 0.06 seconds
Cbc0012I Integer solution of -28.83735 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 29 rows 33 columns
Cbc0031I 64 added rows had average density of 24.15625
Cbc0013I At root node, 64 cuts changed objective from -67.458181 to -34.1392 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19296 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1677 row cuts average 109.8 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 609 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 734 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 262 row cuts average 65.4 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.83735 best solution, best possible -34.1392 (2.98 seconds)
Cbc0012I Integer solution of -29.11721 found by rounding after 7814 iterations and 5 nodes (3.60 seconds)
Cbc0010I After 6 nodes, 5 on tree, -29.11721 best solution, best possible -32.836859 (3.73 seconds)
Cbc0012I Integer solution of -30.61276 found by DiveCoefficient after 8186 iterations and 11 nodes (3.93 seconds)
Cbc0016I Integer solution of -30.86624 found by strong branching after 8506 iterations and 22 nodes (4.00 seconds)
Cbc0001I Search completed - best objective -30.86623999999999, took 8923 iterations and 34 nodes (4.01 seconds)
Cbc0032I Strong branching done 524 times (14792 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 16, 35 variables fixed on reduced cost
Total time (CPU seconds):       3.17   (Wallclock seconds):       4.03

