Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 64 (-35) rows, 36 (-14) columns and 193 (-92) elements
Clp1000I sum of infeasibilities 0.00742115 - average 0.000115955, 19 fixed columns
Coin0506I Presolve 30 (-34) rows, 17 (-19) columns and 87 (-106) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Coin0511I After Postsolve, objective 22721.389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7297324 - largest nonzero change 1.5795841e-05 ( 0.00078979204%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Coin0511I After Postsolve, objective 22721.389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22721.38934 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 64 rows, 36 columns (35 integer (35 of which binary)) and 193 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.359%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20239.4 iterations 15
Cbc0038I Solution found of -20239.4
Cbc0038I Relaxing continuous gives -20239.4
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 36 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -20239.4 to -22236.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -22284.8
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.00000 (3) obj. -22284.8 iterations 7
Cbc0038I Pass   3: suminf.    1.15646 (3) obj. -22284.8 iterations 8
Cbc0038I Pass   4: suminf.    1.15646 (3) obj. -22284.8 iterations 3
Cbc0038I Pass   5: suminf.    1.15646 (3) obj. -22284.8 iterations 3
Cbc0038I Pass   6: suminf.    1.18850 (10) obj. -22284.8 iterations 11
Cbc0038I Pass   7: suminf.    1.02880 (4) obj. -22284.8 iterations 4
Cbc0038I Pass   8: suminf.    0.11935 (4) obj. -22284.8 iterations 18
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. -22284.8 iterations 11
Cbc0038I Pass  10: suminf.    1.00000 (3) obj. -22284.8 iterations 3
Cbc0038I Pass  11: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  12: suminf.    0.11935 (4) obj. -22284.8 iterations 18
Cbc0038I Pass  13: suminf.    1.61643 (4) obj. -22284.8 iterations 6
Cbc0038I Pass  14: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  15: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  16: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  17: suminf.    1.50649 (11) obj. -22284.8 iterations 5
Cbc0038I Pass  18: suminf.    1.42494 (4) obj. -22284.8 iterations 3
Cbc0038I Pass  19: suminf.    1.00000 (3) obj. -22284.8 iterations 17
Cbc0038I Pass  20: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  21: suminf.    1.22257 (4) obj. -22284.8 iterations 10
Cbc0038I Pass  22: suminf.    1.22257 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  23: suminf.    0.11935 (4) obj. -22284.8 iterations 17
Cbc0038I Pass  24: suminf.    1.00000 (7) obj. -22284.8 iterations 14
Cbc0038I Pass  25: suminf.    1.00000 (3) obj. -22284.8 iterations 4
Cbc0038I Pass  26: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  27: suminf.    0.16198 (5) obj. -22284.8 iterations 12
Cbc0038I Pass  28: suminf.    0.27709 (7) obj. -22284.8 iterations 8
Cbc0038I Pass  29: suminf.    0.17783 (6) obj. -22284.8 iterations 7
Cbc0038I Pass  30: suminf.    3.00000 (7) obj. -22284.8 iterations 9
Cbc0038I Pass  31: suminf.    2.00000 (6) obj. -22284.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 36 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -22236.3 - took 0.01 seconds
Cbc0012I Integer solution of -22236.271 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 64 rows 36 columns, reduced to 17 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 20
Cbc0013I At root node, 2 cuts changed objective from -22721.389 to -22264.226 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 1.9 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22236.27099999999, took 9 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 75 (-23) rows, 81 (-15) columns and 927 (-486) elements
Clp1000I sum of infeasibilities 7.09627e-07 - average 9.4617e-09, 77 fixed columns
Coin0506I Presolve 4 (-71) rows, 4 (-77) columns and 10 (-917) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 21389.258
Clp0000I Optimal - objective value 21389.258
Coin0511I After Postsolve, objective 21389.258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9022835 - largest nonzero change 1.8582096e-05 ( 0.00027615596%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 24928.727
Clp0000I Optimal - objective value 24928.727
Clp0000I Optimal - objective value 24928.727
Coin0511I After Postsolve, objective 24928.727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24928.72675 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 81 columns (81 integer (81 of which binary)) and 929 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.559%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 15.4969
Cbc0038I Pass   1: suminf.    2.50725 (19) obj. -8276.75 iterations 25
Cbc0038I Pass   2: suminf.    2.50725 (19) obj. -8276.75 iterations 1
Cbc0038I Pass   3: suminf.    0.63701 (9) obj. -7114.51 iterations 10
Cbc0038I Solution found of -6608.69
Cbc0038I Rounding solution of -10334 is better than previous of -6608.69

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 81 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -10334 to -22236.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -22423.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.   10.70175 (35) obj. -22423.3 iterations 11
Cbc0038I Pass   5: suminf.    9.66484 (35) obj. -22423.3 iterations 1
Cbc0038I Pass   6: suminf.    9.65710 (36) obj. -22423.3 iterations 1
Cbc0038I Pass   7: suminf.    3.91934 (16) obj. -22423.3 iterations 29
Cbc0038I Pass   8: suminf.    3.37357 (15) obj. -22423.3 iterations 9
Cbc0038I Pass   9: suminf.    0.40782 (1) obj. -22423.3 iterations 23
Cbc0038I Pass  10: suminf.    0.39394 (1) obj. -22432.1 iterations 15
Cbc0038I Pass  11: suminf.    0.40782 (1) obj. -22423.3 iterations 9
Cbc0038I Pass  12: suminf.    2.60408 (10) obj. -22423.3 iterations 31
Cbc0038I Pass  13: suminf.    2.01457 (7) obj. -22538.7 iterations 12
Cbc0038I Pass  14: suminf.    0.53370 (2) obj. -22423.3 iterations 22
Cbc0038I Pass  15: suminf.    0.53370 (2) obj. -22423.3 iterations 0
Cbc0038I Pass  16: suminf.    0.85788 (2) obj. -22423.3 iterations 5
Cbc0038I Pass  17: suminf.    4.64535 (16) obj. -22423.3 iterations 22
Cbc0038I Pass  18: suminf.    2.85547 (17) obj. -22423.3 iterations 7
Cbc0038I Pass  19: suminf.    2.85008 (9) obj. -22423.3 iterations 2
Cbc0038I Pass  20: suminf.    0.70963 (2) obj. -22423.3 iterations 37
Cbc0038I Pass  21: suminf.    0.70963 (2) obj. -22423.3 iterations 0
Cbc0038I Pass  22: suminf.    0.89477 (2) obj. -22423.3 iterations 2
Cbc0038I Pass  23: suminf.    0.80019 (2) obj. -22483.4 iterations 14
Cbc0038I Pass  24: suminf.    3.72412 (14) obj. -22423.3 iterations 31
Cbc0038I Pass  25: suminf.    3.35434 (10) obj. -22566.3 iterations 11
Cbc0038I Pass  26: suminf.    0.43122 (2) obj. -22423.3 iterations 25
Cbc0038I Pass  27: suminf.    0.39394 (1) obj. -22434.1 iterations 14
Cbc0038I Pass  28: suminf.    0.41097 (1) obj. -22423.3 iterations 13
Cbc0038I Pass  29: suminf.    1.86472 (5) obj. -22423.3 iterations 13
Cbc0038I Pass  30: suminf.    1.86472 (5) obj. -22423.3 iterations 1
Cbc0038I Pass  31: suminf.    0.84596 (2) obj. -22423.3 iterations 8
Cbc0038I Pass  32: suminf.    0.80019 (2) obj. -22452.4 iterations 14
Cbc0038I Pass  33: suminf.    0.85314 (2) obj. -22423.3 iterations 13
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 81 columns, reduced to 38 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -22760
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.   10.77889 (35) obj. -22760 iterations 0
Cbc0038I Pass  34: suminf.   10.77889 (35) obj. -22760 iterations 0
Cbc0038I Pass  35: suminf.    4.65882 (18) obj. -22760 iterations 24
Cbc0038I Pass  36: suminf.    4.65882 (18) obj. -22760 iterations 0
Cbc0038I Pass  37: suminf.    1.88964 (10) obj. -22760 iterations 20
Cbc0038I Pass  38: suminf.    1.88964 (10) obj. -22760 iterations 0
Cbc0038I Pass  39: suminf.    0.85720 (3) obj. -22760 iterations 42
Cbc0038I Pass  40: suminf.    0.85720 (3) obj. -22760 iterations 0
Cbc0038I Pass  41: suminf.    0.93390 (3) obj. -22760 iterations 4
Cbc0038I Pass  42: suminf.    0.93390 (3) obj. -22760 iterations 0
Cbc0038I Pass  43: suminf.    0.85720 (3) obj. -22760 iterations 2
Cbc0038I Pass  44: suminf.    2.05765 (7) obj. -22760 iterations 11
Cbc0038I Pass  45: suminf.    2.05695 (6) obj. -22760.2 iterations 15
Cbc0038I Pass  46: suminf.    0.85720 (3) obj. -22760 iterations 20
Cbc0038I Pass  47: suminf.    0.85720 (3) obj. -22760 iterations 0
Cbc0038I Pass  48: suminf.    0.93390 (3) obj. -22760 iterations 9
Cbc0038I Pass  49: suminf.    0.93390 (3) obj. -22760 iterations 0
Cbc0038I Pass  50: suminf.    0.85720 (3) obj. -22760 iterations 9
Cbc0038I Pass  51: suminf.    2.65191 (8) obj. -22760 iterations 8
Cbc0038I Pass  52: suminf.    2.65191 (8) obj. -22760 iterations 1
Cbc0038I Pass  53: suminf.    1.19053 (3) obj. -22760 iterations 29
Cbc0038I Pass  54: suminf.    1.19053 (3) obj. -22760 iterations 0
Cbc0038I Pass  55: suminf.    1.22094 (3) obj. -22760 iterations 3
Cbc0038I Pass  56: suminf.    1.22094 (3) obj. -22760 iterations 0
Cbc0038I Pass  57: suminf.    1.19053 (3) obj. -22760 iterations 1
Cbc0038I Pass  58: suminf.    4.53824 (15) obj. -22760 iterations 15
Cbc0038I Pass  59: suminf.    4.53824 (15) obj. -22760 iterations 1
Cbc0038I Pass  60: suminf.    1.19053 (3) obj. -22760 iterations 19
Cbc0038I Pass  61: suminf.    1.19053 (3) obj. -22760 iterations 1
Cbc0038I Pass  62: suminf.    1.22094 (3) obj. -22760 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -22236.3 - took 0.03 seconds
Cbc0012I Integer solution of -22236.271 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 75 rows 81 columns, reduced to 14 rows 15 columns
Cbc0031I 9 added rows had average density of 2.4444444
Cbc0013I At root node, 344 cuts changed objective from -24106.638 to -22236.271 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 290 row cuts average 3.4 elements, 35 column cuts (35 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22236.27099999999, took 43 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 64 (-35) rows, 36 (-14) columns and 193 (-92) elements
Clp1000I sum of infeasibilities 0.00742115 - average 0.000115955, 19 fixed columns
Coin0506I Presolve 30 (-34) rows, 17 (-19) columns and 87 (-106) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Coin0511I After Postsolve, objective 22721.389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7297324 - largest nonzero change 1.5795841e-05 ( 0.00078979204%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Clp0000I Optimal - objective value 22721.389
Coin0511I After Postsolve, objective 22721.389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22721.38934 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 64 rows, 36 columns (35 integer (35 of which binary)) and 193 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.359%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20239.4 iterations 15
Cbc0038I Solution found of -20239.4
Cbc0038I Relaxing continuous gives -20239.4
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 36 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -20239.4 to -22236.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -22284.8
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.00000 (3) obj. -22284.8 iterations 7
Cbc0038I Pass   3: suminf.    1.15646 (3) obj. -22284.8 iterations 8
Cbc0038I Pass   4: suminf.    1.15646 (3) obj. -22284.8 iterations 3
Cbc0038I Pass   5: suminf.    1.15646 (3) obj. -22284.8 iterations 3
Cbc0038I Pass   6: suminf.    1.18850 (10) obj. -22284.8 iterations 11
Cbc0038I Pass   7: suminf.    1.02880 (4) obj. -22284.8 iterations 4
Cbc0038I Pass   8: suminf.    0.11935 (4) obj. -22284.8 iterations 18
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. -22284.8 iterations 11
Cbc0038I Pass  10: suminf.    1.00000 (3) obj. -22284.8 iterations 3
Cbc0038I Pass  11: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  12: suminf.    0.11935 (4) obj. -22284.8 iterations 18
Cbc0038I Pass  13: suminf.    1.61643 (4) obj. -22284.8 iterations 6
Cbc0038I Pass  14: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  15: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  16: suminf.    1.61643 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  17: suminf.    1.50649 (11) obj. -22284.8 iterations 5
Cbc0038I Pass  18: suminf.    1.42494 (4) obj. -22284.8 iterations 3
Cbc0038I Pass  19: suminf.    1.00000 (3) obj. -22284.8 iterations 17
Cbc0038I Pass  20: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  21: suminf.    1.22257 (4) obj. -22284.8 iterations 10
Cbc0038I Pass  22: suminf.    1.22257 (4) obj. -22284.8 iterations 0
Cbc0038I Pass  23: suminf.    0.11935 (4) obj. -22284.8 iterations 17
Cbc0038I Pass  24: suminf.    1.00000 (7) obj. -22284.8 iterations 14
Cbc0038I Pass  25: suminf.    1.00000 (3) obj. -22284.8 iterations 4
Cbc0038I Pass  26: suminf.    1.15646 (3) obj. -22284.8 iterations 7
Cbc0038I Pass  27: suminf.    0.16198 (5) obj. -22284.8 iterations 12
Cbc0038I Pass  28: suminf.    0.27709 (7) obj. -22284.8 iterations 8
Cbc0038I Pass  29: suminf.    0.17783 (6) obj. -22284.8 iterations 7
Cbc0038I Pass  30: suminf.    3.00000 (7) obj. -22284.8 iterations 9
Cbc0038I Pass  31: suminf.    2.00000 (6) obj. -22284.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 36 columns, reduced to 29 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -22236.3 - took 0.01 seconds
Cbc0012I Integer solution of -22236.271 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 64 rows 36 columns, reduced to 17 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 20
Cbc0013I At root node, 2 cuts changed objective from -22721.389 to -22264.226 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 1.9 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22236.27099999999, took 9 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 75 (-24) rows, 81 (-16) columns and 927 (-487) elements
Clp1000I sum of infeasibilities 7.09627e-07 - average 9.4617e-09, 77 fixed columns
Coin0506I Presolve 4 (-71) rows, 4 (-77) columns and 10 (-917) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 21389.258
Clp0000I Optimal - objective value 21389.258
Coin0511I After Postsolve, objective 21389.258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9022835 - largest nonzero change 1.8582096e-05 ( 0.00027615596%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 24928.727
Clp0000I Optimal - objective value 24928.727
Clp0000I Optimal - objective value 24928.727
Coin0511I After Postsolve, objective 24928.727, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24928.72675 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 81 columns (81 integer (81 of which binary)) and 929 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.559%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 15.4969
Cbc0038I Pass   1: suminf.    2.50725 (19) obj. -8276.75 iterations 25
Cbc0038I Pass   2: suminf.    2.50725 (19) obj. -8276.75 iterations 1
Cbc0038I Pass   3: suminf.    0.63701 (9) obj. -7114.51 iterations 10
Cbc0038I Solution found of -6608.69
Cbc0038I Rounding solution of -10334 is better than previous of -6608.69

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 81 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -10334 to -22236.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -22423.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.   10.70175 (35) obj. -22423.3 iterations 11
Cbc0038I Pass   5: suminf.    9.66484 (35) obj. -22423.3 iterations 1
Cbc0038I Pass   6: suminf.    9.65710 (36) obj. -22423.3 iterations 1
Cbc0038I Pass   7: suminf.    3.91934 (16) obj. -22423.3 iterations 29
Cbc0038I Pass   8: suminf.    3.37357 (15) obj. -22423.3 iterations 9
Cbc0038I Pass   9: suminf.    0.40782 (1) obj. -22423.3 iterations 23
Cbc0038I Pass  10: suminf.    0.39394 (1) obj. -22432.1 iterations 15
Cbc0038I Pass  11: suminf.    0.40782 (1) obj. -22423.3 iterations 9
Cbc0038I Pass  12: suminf.    2.60408 (10) obj. -22423.3 iterations 31
Cbc0038I Pass  13: suminf.    2.01457 (7) obj. -22538.7 iterations 12
Cbc0038I Pass  14: suminf.    0.53370 (2) obj. -22423.3 iterations 22
Cbc0038I Pass  15: suminf.    0.53370 (2) obj. -22423.3 iterations 0
Cbc0038I Pass  16: suminf.    0.85788 (2) obj. -22423.3 iterations 5
Cbc0038I Pass  17: suminf.    4.64535 (16) obj. -22423.3 iterations 22
Cbc0038I Pass  18: suminf.    2.85547 (17) obj. -22423.3 iterations 7
Cbc0038I Pass  19: suminf.    2.85008 (9) obj. -22423.3 iterations 2
Cbc0038I Pass  20: suminf.    0.70963 (2) obj. -22423.3 iterations 37
Cbc0038I Pass  21: suminf.    0.70963 (2) obj. -22423.3 iterations 0
Cbc0038I Pass  22: suminf.    0.89477 (2) obj. -22423.3 iterations 2
Cbc0038I Pass  23: suminf.    0.80019 (2) obj. -22483.4 iterations 14
Cbc0038I Pass  24: suminf.    3.72412 (14) obj. -22423.3 iterations 31
Cbc0038I Pass  25: suminf.    3.35434 (10) obj. -22566.3 iterations 11
Cbc0038I Pass  26: suminf.    0.43122 (2) obj. -22423.3 iterations 25
Cbc0038I Pass  27: suminf.    0.39394 (1) obj. -22434.1 iterations 14
Cbc0038I Pass  28: suminf.    0.41097 (1) obj. -22423.3 iterations 13
Cbc0038I Pass  29: suminf.    1.86472 (5) obj. -22423.3 iterations 13
Cbc0038I Pass  30: suminf.    1.86472 (5) obj. -22423.3 iterations 1
Cbc0038I Pass  31: suminf.    0.84596 (2) obj. -22423.3 iterations 8
Cbc0038I Pass  32: suminf.    0.80019 (2) obj. -22452.4 iterations 14
Cbc0038I Pass  33: suminf.    0.85314 (2) obj. -22423.3 iterations 13
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 81 columns, reduced to 38 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -22760
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.   10.77889 (35) obj. -22760 iterations 0
Cbc0038I Pass  34: suminf.   10.77889 (35) obj. -22760 iterations 0
Cbc0038I Pass  35: suminf.    4.65882 (18) obj. -22760 iterations 24
Cbc0038I Pass  36: suminf.    4.65882 (18) obj. -22760 iterations 0
Cbc0038I Pass  37: suminf.    1.88964 (10) obj. -22760 iterations 20
Cbc0038I Pass  38: suminf.    1.88964 (10) obj. -22760 iterations 0
Cbc0038I Pass  39: suminf.    0.85720 (3) obj. -22760 iterations 42
Cbc0038I Pass  40: suminf.    0.85720 (3) obj. -22760 iterations 0
Cbc0038I Pass  41: suminf.    0.93390 (3) obj. -22760 iterations 4
Cbc0038I Pass  42: suminf.    0.93390 (3) obj. -22760 iterations 0
Cbc0038I Pass  43: suminf.    0.85720 (3) obj. -22760 iterations 2
Cbc0038I Pass  44: suminf.    2.05765 (7) obj. -22760 iterations 11
Cbc0038I Pass  45: suminf.    2.05695 (6) obj. -22760.2 iterations 15
Cbc0038I Pass  46: suminf.    0.85720 (3) obj. -22760 iterations 20
Cbc0038I Pass  47: suminf.    0.85720 (3) obj. -22760 iterations 0
Cbc0038I Pass  48: suminf.    0.93390 (3) obj. -22760 iterations 9
Cbc0038I Pass  49: suminf.    0.93390 (3) obj. -22760 iterations 0
Cbc0038I Pass  50: suminf.    0.85720 (3) obj. -22760 iterations 9
Cbc0038I Pass  51: suminf.    2.65191 (8) obj. -22760 iterations 8
Cbc0038I Pass  52: suminf.    2.65191 (8) obj. -22760 iterations 1
Cbc0038I Pass  53: suminf.    1.19053 (3) obj. -22760 iterations 29
Cbc0038I Pass  54: suminf.    1.19053 (3) obj. -22760 iterations 0
Cbc0038I Pass  55: suminf.    1.22094 (3) obj. -22760 iterations 3
Cbc0038I Pass  56: suminf.    1.22094 (3) obj. -22760 iterations 0
Cbc0038I Pass  57: suminf.    1.19053 (3) obj. -22760 iterations 1
Cbc0038I Pass  58: suminf.    4.53824 (15) obj. -22760 iterations 15
Cbc0038I Pass  59: suminf.    4.53824 (15) obj. -22760 iterations 1
Cbc0038I Pass  60: suminf.    1.19053 (3) obj. -22760 iterations 19
Cbc0038I Pass  61: suminf.    1.19053 (3) obj. -22760 iterations 1
Cbc0038I Pass  62: suminf.    1.22094 (3) obj. -22760 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -22236.3 - took 0.03 seconds
Cbc0012I Integer solution of -22236.271 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 75 rows 81 columns, reduced to 14 rows 15 columns
Cbc0031I 9 added rows had average density of 2.4444444
Cbc0013I At root node, 344 cuts changed objective from -24106.638 to -22236.271 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 290 row cuts average 3.4 elements, 35 column cuts (35 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22236.27099999999, took 43 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

