Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 8.14358e-06 - average 9.25407e-08, 2 fixed columns
Coin0506I Presolve 79 (-9) rows, 46 (-2) columns and 242 (-22) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 2174.5361
Clp0000I Optimal - objective value 2174.5361
Coin0511I After Postsolve, objective 2174.5361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2174.5361
Clp0000I Optimal - objective value 2174.5361
Clp0000I Optimal - objective value 2174.5361
Coin0511I After Postsolve, objective 2174.5361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2174.536087 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 11.7486
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 541.701 iterations 31
Cbc0038I Solution found of 541.701
Cbc0038I Relaxing continuous gives 541.701
Cbc0038I Rounding solution of 339.226 is better than previous of 541.701

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 339.226 to -127.848 (0.07 seconds)
Cbc0038I Round again with cutoff of -332.517
Cbc0038I Pass   2: suminf.    1.51049 (8) obj. -332.517 iterations 6
Cbc0038I Pass   3: suminf.    1.49874 (7) obj. -332.517 iterations 1
Cbc0038I Pass   4: suminf.    2.38405 (6) obj. -332.517 iterations 8
Cbc0038I Pass   5: suminf.    1.65894 (6) obj. -332.517 iterations 4
Cbc0038I Pass   6: suminf.    1.64252 (5) obj. -332.517 iterations 1
Cbc0038I Pass   7: suminf.    2.25621 (7) obj. -332.517 iterations 4
Cbc0038I Pass   8: suminf.    1.63214 (8) obj. -332.517 iterations 2
Cbc0038I Pass   9: suminf.    1.63214 (8) obj. -332.517 iterations 0
Cbc0038I Pass  10: suminf.    3.17575 (8) obj. -332.517 iterations 8
Cbc0038I Pass  11: suminf.    1.82347 (7) obj. -332.517 iterations 2
Cbc0038I Pass  12: suminf.    1.80492 (7) obj. -332.517 iterations 1
Cbc0038I Pass  13: suminf.    2.76507 (8) obj. -332.517 iterations 5
Cbc0038I Pass  14: suminf.    2.31366 (8) obj. -332.517 iterations 1
Cbc0038I Pass  15: suminf.    3.46239 (8) obj. -332.517 iterations 4
Cbc0038I Pass  16: suminf.    1.70245 (9) obj. -332.517 iterations 4
Cbc0038I Pass  17: suminf.    1.68873 (7) obj. -332.517 iterations 2
Cbc0038I Pass  18: suminf.    3.17575 (8) obj. -332.517 iterations 7
Cbc0038I Pass  19: suminf.    1.82347 (7) obj. -332.517 iterations 2
Cbc0038I Pass  20: suminf.    1.80492 (7) obj. -332.517 iterations 1
Cbc0038I Pass  21: suminf.    2.76507 (8) obj. -332.517 iterations 5
Cbc0038I Pass  22: suminf.    2.31366 (8) obj. -332.517 iterations 1
Cbc0038I Pass  23: suminf.    3.46239 (8) obj. -332.517 iterations 4
Cbc0038I Pass  24: suminf.    1.70245 (9) obj. -332.517 iterations 4
Cbc0038I Pass  25: suminf.    1.68873 (7) obj. -332.517 iterations 2
Cbc0038I Pass  26: suminf.    3.17575 (8) obj. -332.517 iterations 7
Cbc0038I Pass  27: suminf.    1.82347 (7) obj. -332.517 iterations 2
Cbc0038I Pass  28: suminf.    1.80492 (7) obj. -332.517 iterations 1
Cbc0038I Pass  29: suminf.    2.76507 (8) obj. -332.517 iterations 5
Cbc0038I Pass  30: suminf.    2.31366 (8) obj. -332.517 iterations 1
Cbc0038I Pass  31: suminf.    3.46239 (8) obj. -332.517 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -127.848 to -276.823 (0.12 seconds)
Cbc0038I Round again with cutoff of -700.921
Cbc0038I Pass  31: suminf.    2.55313 (10) obj. -700.921 iterations 2
Cbc0038I Pass  32: suminf.    2.54575 (9) obj. -700.921 iterations 1
Cbc0038I Pass  33: suminf.    3.11500 (8) obj. -700.921 iterations 6
Cbc0038I Pass  34: suminf.    2.59069 (7) obj. -700.921 iterations 1
Cbc0038I Pass  35: suminf.    2.22325 (8) obj. -700.921 iterations 1
Cbc0038I Pass  36: suminf.    2.22325 (8) obj. -700.921 iterations 0
Cbc0038I Pass  37: suminf.    2.39673 (7) obj. -700.921 iterations 8
Cbc0038I Pass  38: suminf.    2.38866 (8) obj. -700.921 iterations 1
Cbc0038I Pass  39: suminf.    3.36396 (10) obj. -700.921 iterations 6
Cbc0038I Pass  40: suminf.    2.92147 (8) obj. -700.921 iterations 2
Cbc0038I Pass  41: suminf.    3.00489 (7) obj. -700.921 iterations 5
Cbc0038I Pass  42: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  43: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  44: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  45: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I Pass  46: suminf.    3.00489 (7) obj. -700.921 iterations 3
Cbc0038I Pass  47: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  48: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  49: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  50: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I Pass  51: suminf.    3.00489 (7) obj. -700.921 iterations 3
Cbc0038I Pass  52: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  53: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  54: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  55: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I Pass  56: suminf.    3.00489 (7) obj. -700.921 iterations 3
Cbc0038I Pass  57: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  58: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  59: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  60: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -276.823 - took 0.14 seconds
Cbc0012I Integer solution of -276.823 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0031I 23 added rows had average density of 36.826087
Cbc0013I At root node, 23 cuts changed objective from -2174.5361 to -1166.5414 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7844 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1550 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 181 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 3 nodes, 4 on tree, -276.823 best solution, best possible -1166.5414 (0.70 seconds)
Cbc0001I Search completed - best objective -276.8229999999994, took 7692 iterations and 24 nodes (0.85 seconds)
Cbc0032I Strong branching done 394 times (9276 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 11, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.86

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-10) rows, 94 (-2) columns and 1345 (-68) elements
Clp1000I sum of infeasibilities 3.78023e-08 - average 4.29572e-10, 85 fixed columns
Coin0506I Presolve 6 (-82) rows, 9 (-85) columns and 24 (-1321) elements
Clp0006I 0  Obj -581.1099 Dual inf 19.879624 (9)
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value -581.105
Clp0000I Optimal - objective value -581.105
Coin0511I After Postsolve, objective -581.105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -581.105 Dual inf 3178.9389 (55)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.235827e-05 ( 0.00085132148%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 3058.3331
Clp0000I Optimal - objective value 3058.3331
Clp0000I Optimal - objective value 3058.3331
Coin0511I After Postsolve, objective 3058.3331, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3058.333104 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 94 columns (94 integer (94 of which binary)) and 1349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 12.015
Cbc0038I Pass   1: suminf.    3.22278 (27) obj. -1628.91 iterations 26
Cbc0038I Pass   2: suminf.    3.22278 (27) obj. -1628.91 iterations 1
Cbc0038I Pass   3: suminf.    1.61020 (16) obj. -274.07 iterations 11
Cbc0038I Pass   4: suminf.    0.37548 (5) obj. 219.818 iterations 11
Cbc0038I Solution found of 576.744
Cbc0038I Rounding solution of -14.5448 is better than previous of 576.744

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -14.5448 to -95.895 (0.03 seconds)
Cbc0038I Round again with cutoff of -346.974
Cbc0038I Pass   5: suminf.    3.22278 (27) obj. -1628.91 iterations 0
Cbc0038I Pass   6: suminf.    3.22278 (27) obj. -1628.91 iterations 1
Cbc0038I Pass   7: suminf.    0.97905 (3) obj. -346.974 iterations 28
Cbc0038I Pass   8: suminf.    0.97905 (3) obj. -346.974 iterations 0
Cbc0038I Pass   9: suminf.    0.90650 (3) obj. -346.974 iterations 2
Cbc0038I Pass  10: suminf.    0.38647 (3) obj. -346.974 iterations 1
Cbc0038I Pass  11: suminf.    0.97905 (3) obj. -346.974 iterations 2
Cbc0038I Pass  12: suminf.    2.52523 (18) obj. -346.974 iterations 29
Cbc0038I Pass  13: suminf.    1.35290 (17) obj. -346.974 iterations 7
Cbc0038I Pass  14: suminf.    0.98628 (6) obj. -346.974 iterations 4
Cbc0038I Pass  15: suminf.    1.14019 (4) obj. -346.974 iterations 5
Cbc0038I Pass  16: suminf.    1.14019 (4) obj. -346.974 iterations 0
Cbc0038I Pass  17: suminf.    0.57132 (4) obj. -346.974 iterations 7
Cbc0038I Pass  18: suminf.    0.57132 (4) obj. -346.974 iterations 0
Cbc0038I Pass  19: suminf.    0.45742 (1) obj. -346.974 iterations 4
Cbc0038I Pass  20: suminf.    0.27907 (1) obj. -460.045 iterations 2
Cbc0038I Pass  21: suminf.    0.45742 (1) obj. -346.974 iterations 1
Cbc0038I Pass  22: suminf.    3.56640 (19) obj. -346.974 iterations 31
Cbc0038I Pass  23: suminf.    2.47949 (16) obj. -346.974 iterations 9
Cbc0038I Pass  24: suminf.    1.80224 (11) obj. -346.974 iterations 2
Cbc0038I Pass  25: suminf.    1.52831 (9) obj. -346.974 iterations 17
Cbc0038I Pass  26: suminf.    1.01856 (10) obj. -346.974 iterations 1
Cbc0038I Pass  27: suminf.    1.08852 (4) obj. -346.974 iterations 14
Cbc0038I Pass  28: suminf.    1.07624 (7) obj. -346.974 iterations 1
Cbc0038I Pass  29: suminf.    1.15345 (7) obj. -346.974 iterations 5
Cbc0038I Pass  30: suminf.    1.01272 (6) obj. -346.974 iterations 1
Cbc0038I Pass  31: suminf.    0.74068 (4) obj. -346.974 iterations 6
Cbc0038I Pass  32: suminf.    0.53241 (2) obj. -388.766 iterations 3
Cbc0038I Pass  33: suminf.    0.68591 (3) obj. -346.974 iterations 2
Cbc0038I Pass  34: suminf.    3.18994 (16) obj. -346.974 iterations 28
Cbc0038I Rounding solution of -163.975 is better than previous of -95.895

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -163.975 to -227.161 (0.05 seconds)
Cbc0038I Round again with cutoff of -798.915
Cbc0038I Pass  34: suminf.    3.22278 (27) obj. -1628.91 iterations 0
Cbc0038I Pass  35: suminf.    3.22278 (27) obj. -1628.91 iterations 1
Cbc0038I Pass  36: suminf.    1.42252 (12) obj. -798.915 iterations 19
Cbc0038I Pass  37: suminf.    1.42252 (12) obj. -798.915 iterations 0
Cbc0038I Pass  38: suminf.    1.03426 (5) obj. -798.915 iterations 22
Cbc0038I Pass  39: suminf.    0.86543 (5) obj. -798.915 iterations 4
Cbc0038I Pass  40: suminf.    1.03426 (5) obj. -798.915 iterations 6
Cbc0038I Pass  41: suminf.    3.33519 (25) obj. -798.915 iterations 28
Cbc0038I Pass  42: suminf.    1.60742 (10) obj. -798.915 iterations 6
Cbc0038I Pass  43: suminf.    0.98108 (6) obj. -798.915 iterations 7
Cbc0038I Pass  44: suminf.    0.98108 (6) obj. -798.915 iterations 0
Cbc0038I Pass  45: suminf.    0.71447 (5) obj. -798.915 iterations 3
Cbc0038I Pass  46: suminf.    0.71447 (5) obj. -798.915 iterations 0
Cbc0038I Pass  47: suminf.    0.74891 (5) obj. -798.915 iterations 2
Cbc0038I Pass  48: suminf.    0.74891 (5) obj. -798.915 iterations 0
Cbc0038I Pass  49: suminf.    0.71447 (5) obj. -798.915 iterations 1
Cbc0038I Pass  50: suminf.    2.64710 (13) obj. -798.915 iterations 17
Cbc0038I Pass  51: suminf.    1.49248 (10) obj. -798.915 iterations 7
Cbc0038I Pass  52: suminf.    1.49297 (12) obj. -798.915 iterations 9
Cbc0038I Pass  53: suminf.    1.49297 (12) obj. -798.915 iterations 0
Cbc0038I Pass  54: suminf.    1.39885 (7) obj. -798.915 iterations 12
Cbc0038I Pass  55: suminf.    1.10855 (10) obj. -798.915 iterations 5
Cbc0038I Pass  56: suminf.    1.68387 (7) obj. -798.915 iterations 7
Cbc0038I Pass  57: suminf.    1.45705 (8) obj. -798.915 iterations 4
Cbc0038I Pass  58: suminf.    1.54194 (5) obj. -798.915 iterations 9
Cbc0038I Pass  59: suminf.    1.49529 (5) obj. -806.707 iterations 5
Cbc0038I Pass  60: suminf.    1.54194 (5) obj. -798.915 iterations 5
Cbc0038I Pass  61: suminf.    3.32072 (13) obj. -798.915 iterations 15
Cbc0038I Pass  62: suminf.    2.81859 (13) obj. -798.915 iterations 2
Cbc0038I Pass  63: suminf.    1.51939 (6) obj. -798.915 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 30 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -227.161 - took 0.04 seconds
Cbc0012I Integer solution of -227.1609 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 88 rows 94 columns, reduced to 25 rows 31 columns
Cbc0031I 51 added rows had average density of 15.137255
Cbc0013I At root node, 51 cuts changed objective from -2606.6819 to -313.36834 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 2460 row cuts average 7.1 elements, 26 column cuts (26 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 322 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 275 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -227.1609 best solution, best possible -313.36834 (0.51 seconds)
Cbc0012I Integer solution of -267.312 found by rounding after 708 iterations and 1 nodes (0.51 seconds)
Cbc0012I Integer solution of -276.823 found by DiveCoefficient after 708 iterations and 1 nodes (0.51 seconds)
Cbc0001I Search completed - best objective -276.8229999999994, took 765 iterations and 2 nodes (0.52 seconds)
Cbc0032I Strong branching done 66 times (1106 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.40   (Wallclock seconds):       0.53

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 8.14358e-06 - average 9.25407e-08, 2 fixed columns
Coin0506I Presolve 79 (-9) rows, 46 (-2) columns and 242 (-22) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 2174.5361
Clp0000I Optimal - objective value 2174.5361
Coin0511I After Postsolve, objective 2174.5361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2174.5361
Clp0000I Optimal - objective value 2174.5361
Clp0000I Optimal - objective value 2174.5361
Coin0511I After Postsolve, objective 2174.5361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2174.536087 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 11.7486
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 541.701 iterations 31
Cbc0038I Solution found of 541.701
Cbc0038I Relaxing continuous gives 541.701
Cbc0038I Rounding solution of 339.226 is better than previous of 541.701

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 339.226 to -127.848 (0.07 seconds)
Cbc0038I Round again with cutoff of -332.517
Cbc0038I Pass   2: suminf.    1.51049 (8) obj. -332.517 iterations 6
Cbc0038I Pass   3: suminf.    1.49874 (7) obj. -332.517 iterations 1
Cbc0038I Pass   4: suminf.    2.38405 (6) obj. -332.517 iterations 8
Cbc0038I Pass   5: suminf.    1.65894 (6) obj. -332.517 iterations 4
Cbc0038I Pass   6: suminf.    1.64252 (5) obj. -332.517 iterations 1
Cbc0038I Pass   7: suminf.    2.25621 (7) obj. -332.517 iterations 4
Cbc0038I Pass   8: suminf.    1.63214 (8) obj. -332.517 iterations 2
Cbc0038I Pass   9: suminf.    1.63214 (8) obj. -332.517 iterations 0
Cbc0038I Pass  10: suminf.    3.17575 (8) obj. -332.517 iterations 8
Cbc0038I Pass  11: suminf.    1.82347 (7) obj. -332.517 iterations 2
Cbc0038I Pass  12: suminf.    1.80492 (7) obj. -332.517 iterations 1
Cbc0038I Pass  13: suminf.    2.76507 (8) obj. -332.517 iterations 5
Cbc0038I Pass  14: suminf.    2.31366 (8) obj. -332.517 iterations 1
Cbc0038I Pass  15: suminf.    3.46239 (8) obj. -332.517 iterations 4
Cbc0038I Pass  16: suminf.    1.70245 (9) obj. -332.517 iterations 4
Cbc0038I Pass  17: suminf.    1.68873 (7) obj. -332.517 iterations 2
Cbc0038I Pass  18: suminf.    3.17575 (8) obj. -332.517 iterations 7
Cbc0038I Pass  19: suminf.    1.82347 (7) obj. -332.517 iterations 2
Cbc0038I Pass  20: suminf.    1.80492 (7) obj. -332.517 iterations 1
Cbc0038I Pass  21: suminf.    2.76507 (8) obj. -332.517 iterations 5
Cbc0038I Pass  22: suminf.    2.31366 (8) obj. -332.517 iterations 1
Cbc0038I Pass  23: suminf.    3.46239 (8) obj. -332.517 iterations 4
Cbc0038I Pass  24: suminf.    1.70245 (9) obj. -332.517 iterations 4
Cbc0038I Pass  25: suminf.    1.68873 (7) obj. -332.517 iterations 2
Cbc0038I Pass  26: suminf.    3.17575 (8) obj. -332.517 iterations 7
Cbc0038I Pass  27: suminf.    1.82347 (7) obj. -332.517 iterations 2
Cbc0038I Pass  28: suminf.    1.80492 (7) obj. -332.517 iterations 1
Cbc0038I Pass  29: suminf.    2.76507 (8) obj. -332.517 iterations 5
Cbc0038I Pass  30: suminf.    2.31366 (8) obj. -332.517 iterations 1
Cbc0038I Pass  31: suminf.    3.46239 (8) obj. -332.517 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -127.848 to -276.823 (0.13 seconds)
Cbc0038I Round again with cutoff of -700.921
Cbc0038I Pass  31: suminf.    2.55313 (10) obj. -700.921 iterations 2
Cbc0038I Pass  32: suminf.    2.54575 (9) obj. -700.921 iterations 1
Cbc0038I Pass  33: suminf.    3.11500 (8) obj. -700.921 iterations 6
Cbc0038I Pass  34: suminf.    2.59069 (7) obj. -700.921 iterations 1
Cbc0038I Pass  35: suminf.    2.22325 (8) obj. -700.921 iterations 1
Cbc0038I Pass  36: suminf.    2.22325 (8) obj. -700.921 iterations 0
Cbc0038I Pass  37: suminf.    2.39673 (7) obj. -700.921 iterations 8
Cbc0038I Pass  38: suminf.    2.38866 (8) obj. -700.921 iterations 1
Cbc0038I Pass  39: suminf.    3.36396 (10) obj. -700.921 iterations 6
Cbc0038I Pass  40: suminf.    2.92147 (8) obj. -700.921 iterations 2
Cbc0038I Pass  41: suminf.    3.00489 (7) obj. -700.921 iterations 5
Cbc0038I Pass  42: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  43: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  44: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  45: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I Pass  46: suminf.    3.00489 (7) obj. -700.921 iterations 3
Cbc0038I Pass  47: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  48: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  49: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  50: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I Pass  51: suminf.    3.00489 (7) obj. -700.921 iterations 3
Cbc0038I Pass  52: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  53: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  54: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  55: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I Pass  56: suminf.    3.00489 (7) obj. -700.921 iterations 3
Cbc0038I Pass  57: suminf.    2.87853 (11) obj. -700.921 iterations 4
Cbc0038I Pass  58: suminf.    1.78389 (8) obj. -700.921 iterations 11
Cbc0038I Pass  59: suminf.    1.09967 (6) obj. -700.921 iterations 2
Cbc0038I Pass  60: suminf.    2.28102 (7) obj. -700.921 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -276.823 - took 0.15 seconds
Cbc0012I Integer solution of -276.823 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 35 columns
Cbc0031I 23 added rows had average density of 36.826087
Cbc0013I At root node, 23 cuts changed objective from -2174.5361 to -1166.5414 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7844 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1550 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 181 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 3 nodes, 4 on tree, -276.823 best solution, best possible -1166.5414 (0.69 seconds)
Cbc0001I Search completed - best objective -276.8229999999994, took 7692 iterations and 24 nodes (0.85 seconds)
Cbc0032I Strong branching done 394 times (9276 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 11, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.86

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 94 (-3) columns and 1345 (-69) elements
Clp1000I sum of infeasibilities 3.78023e-08 - average 4.29572e-10, 85 fixed columns
Coin0506I Presolve 6 (-82) rows, 9 (-85) columns and 24 (-1321) elements
Clp0006I 0  Obj -581.1099 Dual inf 19.879624 (9)
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value -581.105
Clp0000I Optimal - objective value -581.105
Coin0511I After Postsolve, objective -581.105, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -581.105 Dual inf 3178.9389 (55)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.235827e-05 ( 0.00085132148%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 3058.3331
Clp0000I Optimal - objective value 3058.3331
Clp0000I Optimal - objective value 3058.3331
Coin0511I After Postsolve, objective 3058.3331, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3058.333104 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 94 columns (94 integer (94 of which binary)) and 1349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 12.015
Cbc0038I Pass   1: suminf.    3.22278 (27) obj. -1628.91 iterations 26
Cbc0038I Pass   2: suminf.    3.22278 (27) obj. -1628.91 iterations 1
Cbc0038I Pass   3: suminf.    1.61020 (16) obj. -274.07 iterations 11
Cbc0038I Pass   4: suminf.    0.37548 (5) obj. 219.818 iterations 11
Cbc0038I Solution found of 576.744
Cbc0038I Rounding solution of -14.5448 is better than previous of 576.744

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -14.5448 to -95.895 (0.03 seconds)
Cbc0038I Round again with cutoff of -346.974
Cbc0038I Pass   5: suminf.    3.22278 (27) obj. -1628.91 iterations 0
Cbc0038I Pass   6: suminf.    3.22278 (27) obj. -1628.91 iterations 1
Cbc0038I Pass   7: suminf.    0.97905 (3) obj. -346.974 iterations 28
Cbc0038I Pass   8: suminf.    0.97905 (3) obj. -346.974 iterations 0
Cbc0038I Pass   9: suminf.    0.90650 (3) obj. -346.974 iterations 2
Cbc0038I Pass  10: suminf.    0.38647 (3) obj. -346.974 iterations 1
Cbc0038I Pass  11: suminf.    0.97905 (3) obj. -346.974 iterations 2
Cbc0038I Pass  12: suminf.    2.52523 (18) obj. -346.974 iterations 29
Cbc0038I Pass  13: suminf.    1.35290 (17) obj. -346.974 iterations 7
Cbc0038I Pass  14: suminf.    0.98628 (6) obj. -346.974 iterations 4
Cbc0038I Pass  15: suminf.    1.14019 (4) obj. -346.974 iterations 5
Cbc0038I Pass  16: suminf.    1.14019 (4) obj. -346.974 iterations 0
Cbc0038I Pass  17: suminf.    0.57132 (4) obj. -346.974 iterations 7
Cbc0038I Pass  18: suminf.    0.57132 (4) obj. -346.974 iterations 0
Cbc0038I Pass  19: suminf.    0.45742 (1) obj. -346.974 iterations 4
Cbc0038I Pass  20: suminf.    0.27907 (1) obj. -460.045 iterations 2
Cbc0038I Pass  21: suminf.    0.45742 (1) obj. -346.974 iterations 1
Cbc0038I Pass  22: suminf.    3.56640 (19) obj. -346.974 iterations 31
Cbc0038I Pass  23: suminf.    2.47949 (16) obj. -346.974 iterations 9
Cbc0038I Pass  24: suminf.    1.80224 (11) obj. -346.974 iterations 2
Cbc0038I Pass  25: suminf.    1.52831 (9) obj. -346.974 iterations 17
Cbc0038I Pass  26: suminf.    1.01856 (10) obj. -346.974 iterations 1
Cbc0038I Pass  27: suminf.    1.08852 (4) obj. -346.974 iterations 14
Cbc0038I Pass  28: suminf.    1.07624 (7) obj. -346.974 iterations 1
Cbc0038I Pass  29: suminf.    1.15345 (7) obj. -346.974 iterations 5
Cbc0038I Pass  30: suminf.    1.01272 (6) obj. -346.974 iterations 1
Cbc0038I Pass  31: suminf.    0.74068 (4) obj. -346.974 iterations 6
Cbc0038I Pass  32: suminf.    0.53241 (2) obj. -388.766 iterations 3
Cbc0038I Pass  33: suminf.    0.68591 (3) obj. -346.974 iterations 2
Cbc0038I Pass  34: suminf.    3.18994 (16) obj. -346.974 iterations 28
Cbc0038I Rounding solution of -163.975 is better than previous of -95.895

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -163.975 to -227.161 (0.05 seconds)
Cbc0038I Round again with cutoff of -798.915
Cbc0038I Pass  34: suminf.    3.22278 (27) obj. -1628.91 iterations 0
Cbc0038I Pass  35: suminf.    3.22278 (27) obj. -1628.91 iterations 1
Cbc0038I Pass  36: suminf.    1.42252 (12) obj. -798.915 iterations 19
Cbc0038I Pass  37: suminf.    1.42252 (12) obj. -798.915 iterations 0
Cbc0038I Pass  38: suminf.    1.03426 (5) obj. -798.915 iterations 22
Cbc0038I Pass  39: suminf.    0.86543 (5) obj. -798.915 iterations 4
Cbc0038I Pass  40: suminf.    1.03426 (5) obj. -798.915 iterations 6
Cbc0038I Pass  41: suminf.    3.33519 (25) obj. -798.915 iterations 28
Cbc0038I Pass  42: suminf.    1.60742 (10) obj. -798.915 iterations 6
Cbc0038I Pass  43: suminf.    0.98108 (6) obj. -798.915 iterations 7
Cbc0038I Pass  44: suminf.    0.98108 (6) obj. -798.915 iterations 0
Cbc0038I Pass  45: suminf.    0.71447 (5) obj. -798.915 iterations 3
Cbc0038I Pass  46: suminf.    0.71447 (5) obj. -798.915 iterations 0
Cbc0038I Pass  47: suminf.    0.74891 (5) obj. -798.915 iterations 2
Cbc0038I Pass  48: suminf.    0.74891 (5) obj. -798.915 iterations 0
Cbc0038I Pass  49: suminf.    0.71447 (5) obj. -798.915 iterations 1
Cbc0038I Pass  50: suminf.    2.64710 (13) obj. -798.915 iterations 17
Cbc0038I Pass  51: suminf.    1.49248 (10) obj. -798.915 iterations 7
Cbc0038I Pass  52: suminf.    1.49297 (12) obj. -798.915 iterations 9
Cbc0038I Pass  53: suminf.    1.49297 (12) obj. -798.915 iterations 0
Cbc0038I Pass  54: suminf.    1.39885 (7) obj. -798.915 iterations 12
Cbc0038I Pass  55: suminf.    1.10855 (10) obj. -798.915 iterations 5
Cbc0038I Pass  56: suminf.    1.68387 (7) obj. -798.915 iterations 7
Cbc0038I Pass  57: suminf.    1.45705 (8) obj. -798.915 iterations 4
Cbc0038I Pass  58: suminf.    1.54194 (5) obj. -798.915 iterations 9
Cbc0038I Pass  59: suminf.    1.49529 (5) obj. -806.707 iterations 5
Cbc0038I Pass  60: suminf.    1.54194 (5) obj. -798.915 iterations 5
Cbc0038I Pass  61: suminf.    3.32072 (13) obj. -798.915 iterations 15
Cbc0038I Pass  62: suminf.    2.81859 (13) obj. -798.915 iterations 2
Cbc0038I Pass  63: suminf.    1.51939 (6) obj. -798.915 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 30 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -227.161 - took 0.04 seconds
Cbc0012I Integer solution of -227.1609 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 88 rows 94 columns, reduced to 25 rows 31 columns
Cbc0031I 51 added rows had average density of 15.137255
Cbc0013I At root node, 51 cuts changed objective from -2606.6819 to -313.36834 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 2460 row cuts average 7.1 elements, 26 column cuts (26 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 322 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 275 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -227.1609 best solution, best possible -313.36834 (0.53 seconds)
Cbc0012I Integer solution of -267.312 found by rounding after 708 iterations and 1 nodes (0.53 seconds)
Cbc0012I Integer solution of -276.823 found by DiveCoefficient after 708 iterations and 1 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -276.8229999999994, took 765 iterations and 2 nodes (0.54 seconds)
Cbc0032I Strong branching done 66 times (1106 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.55

