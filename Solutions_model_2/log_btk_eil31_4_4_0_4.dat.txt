Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 20 (-13) columns and 108 (-75) elements
Clp1000I sum of infeasibilities 3.10475e-06 - average 8.39121e-08, 11 fixed columns
Coin0506I Presolve 12 (-25) rows, 8 (-12) columns and 34 (-74) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 4065.6136
Clp0000I Optimal - objective value 4065.6136
Coin0511I After Postsolve, objective 4065.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4065.6136
Clp0000I Optimal - objective value 4065.6136
Clp0000I Optimal - objective value 4065.6136
Coin0511I After Postsolve, objective 4065.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4065.613555 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.951%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.58288
Cbc0038I Pass   1: suminf.    0.43277 (4) obj. -2642.8 iterations 6
Cbc0038I Pass   2: suminf.    0.43277 (4) obj. -2642.8 iterations 0
Cbc0038I Solution found of -404.473
Cbc0038I Relaxing continuous gives -409.7
Cbc0038I Rounding solution of -1756.57 is better than previous of -409.7

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 15 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -1756.57 to -2705.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -2783.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73440 (5) obj. -2783.3 iterations 1
Cbc0038I Pass   4: suminf.    0.68361 (4) obj. -2783.3 iterations 1
Cbc0038I Pass   5: suminf.    0.11647 (2) obj. -2783.3 iterations 10
Cbc0038I Pass   6: suminf.    0.65517 (2) obj. -3144.53 iterations 5
Cbc0038I Pass   7: suminf.    1.73913 (4) obj. -2860.13 iterations 5
Cbc0038I Pass   8: suminf.    1.69886 (5) obj. -2783.3 iterations 2
Cbc0038I Pass   9: suminf.    1.55072 (4) obj. -2783.3 iterations 6
Cbc0038I Pass  10: suminf.    0.76736 (4) obj. -3284 iterations 5
Cbc0038I Pass  11: suminf.    0.91360 (7) obj. -2783.3 iterations 6
Cbc0038I Pass  12: suminf.    0.87107 (3) obj. -2783.3 iterations 2
Cbc0038I Pass  13: suminf.    0.85548 (3) obj. -2783.3 iterations 5
Cbc0038I Pass  14: suminf.    0.76922 (2) obj. -2783.3 iterations 1
Cbc0038I Pass  15: suminf.    0.86207 (2) obj. -2845.56 iterations 4
Cbc0038I Pass  16: suminf.    0.35360 (5) obj. -2783.3 iterations 6
Cbc0038I Pass  17: suminf.    0.35360 (5) obj. -2783.3 iterations 0
Cbc0038I Pass  18: suminf.    0.08366 (2) obj. -2783.3 iterations 9
Cbc0038I Pass  19: suminf.    0.08366 (2) obj. -2783.3 iterations 2
Cbc0038I Pass  20: suminf.    0.34483 (2) obj. -2958.42 iterations 5
Cbc0038I Pass  21: suminf.    0.08366 (2) obj. -2783.3 iterations 2
Cbc0038I Pass  22: suminf.    0.92494 (4) obj. -2783.3 iterations 5
Cbc0038I Pass  23: suminf.    0.59065 (4) obj. -2783.3 iterations 1
Cbc0038I Pass  24: suminf.    0.34109 (2) obj. -2783.3 iterations 9
Cbc0038I Pass  25: suminf.    0.34109 (2) obj. -2783.3 iterations 0
Cbc0038I Pass  26: suminf.    0.85924 (2) obj. -2783.3 iterations 3
Cbc0038I Pass  27: suminf.    0.07173 (2) obj. -2783.3 iterations 3
Cbc0038I Pass  28: suminf.    0.31034 (2) obj. -2943.3 iterations 4
Cbc0038I Pass  29: suminf.    0.32143 (1) obj. -2877.5 iterations 1
Cbc0038I Pass  30: suminf.    0.34109 (2) obj. -2783.3 iterations 5
Cbc0038I Pass  31: suminf.    1.00000 (3) obj. -3456.7 iterations 11
Cbc0038I Pass  32: suminf.    0.76736 (4) obj. -3284 iterations 4
Cbc0038I Rounding solution of -2739.2 is better than previous of -2705.2

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2923.7
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.03580 (5) obj. -2923.7 iterations 0
Cbc0038I Pass  33: suminf.    0.95516 (4) obj. -2923.7 iterations 1
Cbc0038I Pass  34: suminf.    0.32585 (2) obj. -2923.7 iterations 8
Cbc0038I Pass  35: suminf.    0.65517 (2) obj. -3144.53 iterations 5
Cbc0038I Pass  36: suminf.    0.65517 (2) obj. -3144.53 iterations 1
Cbc0038I Pass  37: suminf.    1.08348 (6) obj. -2923.7 iterations 7
Cbc0038I Pass  38: suminf.    0.82759 (2) obj. -3041.66 iterations 4
Cbc0038I Pass  39: suminf.    0.99650 (2) obj. -2923.7 iterations 2
Cbc0038I Pass  40: suminf.    1.08925 (4) obj. -2923.7 iterations 7
Cbc0038I Pass  41: suminf.    0.15000 (1) obj. -3084.9 iterations 3
Cbc0038I Pass  42: suminf.    0.32585 (2) obj. -2923.7 iterations 2
Cbc0038I Pass  43: suminf.    0.44828 (2) obj. -3005.79 iterations 2
Cbc0038I Pass  44: suminf.    1.49387 (5) obj. -2923.7 iterations 11
Cbc0038I Pass  45: suminf.    0.79782 (4) obj. -3090.84 iterations 5
Cbc0038I Pass  46: suminf.    0.37320 (4) obj. -2923.7 iterations 2
Cbc0038I Pass  47: suminf.    0.35922 (5) obj. -2923.7 iterations 3
Cbc0038I Pass  48: suminf.    1.00648 (4) obj. -2923.7 iterations 5
Cbc0038I Pass  49: suminf.    1.00648 (4) obj. -2923.7 iterations 2
Cbc0038I Pass  50: suminf.    1.05400 (4) obj. -2975.19 iterations 8
Cbc0038I Pass  51: suminf.    1.05400 (4) obj. -2975.19 iterations 0
Cbc0038I Pass  52: suminf.    1.13562 (4) obj. -2923.7 iterations 1
Cbc0038I Pass  53: suminf.    2.67413 (9) obj. -2923.7 iterations 7
Cbc0038I Pass  54: suminf.    0.58824 (3) obj. -2923.7 iterations 4
Cbc0038I Pass  55: suminf.    0.30796 (2) obj. -2923.7 iterations 5
Cbc0038I Pass  56: suminf.    0.34483 (2) obj. -2948.42 iterations 2
Cbc0038I Pass  57: suminf.    0.61950 (3) obj. -2923.7 iterations 7
Cbc0038I Pass  58: suminf.    0.61950 (3) obj. -2923.7 iterations 1
Cbc0038I Pass  59: suminf.    1.33594 (3) obj. -3072.98 iterations 4
Cbc0038I Pass  60: suminf.    0.97860 (2) obj. -2923.7 iterations 3
Cbc0038I Pass  61: suminf.    0.93103 (2) obj. -2984.29 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 25 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2739.2 - took 0.05 seconds
Cbc0012I Integer solution of -2739.2 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 20 rows 11 columns
Cbc0031I 5 added rows had average density of 18
Cbc0013I At root node, 5 cuts changed objective from -3485.2901 to -2973.5223 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 60 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 295 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 189 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 80 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.744 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2739.2 best solution, best possible -2973.5223 (1.44 seconds)
Cbc0001I Search completed - best objective -2739.2, took 1060 iterations and 2 nodes (1.51 seconds)
Cbc0032I Strong branching done 26 times (165 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-20) rows, 45 (-17) columns and 368 (-280) elements
Clp1000I sum of infeasibilities 6.81163e-06 - average 1.5481e-07, 40 fixed columns
Coin0506I Presolve 6 (-38) rows, 5 (-40) columns and 18 (-350) elements
Clp0006I 0  Obj 4046.6136 Dual inf 39.926755 (4)
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 4046.6136
Clp0000I Optimal - objective value 4046.6136
Coin0511I After Postsolve, objective 4046.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 4046.6136 Dual inf 1196.4182 (22)
Clp0014I Perturbing problem by 0.001% of 1.7949465 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 4085.4507
Clp0000I Optimal - objective value 4085.4507
Clp0000I Optimal - objective value 4085.4507
Coin0511I After Postsolve, objective 4085.4507, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4085.450651 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 40 columns (40 integer (40 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.179%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.20071
Cbc0038I Pass   1: suminf.    0.43277 (4) obj. -2630.02 iterations 29
Cbc0038I Pass   2: suminf.    0.43277 (4) obj. -2630.02 iterations 0
Cbc0038I Solution found of -391.7
Cbc0038I Rounding solution of -2219.5 is better than previous of -391.7

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 26 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -2219.5 to -2705.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -2783.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.76065 (5) obj. -2783.1 iterations 1
Cbc0038I Pass   4: suminf.    0.70592 (4) obj. -2783.1 iterations 1
Cbc0038I Pass   5: suminf.    0.14153 (2) obj. -2783.1 iterations 8
Cbc0038I Pass   6: suminf.    0.65517 (2) obj. -3127.53 iterations 5
Cbc0038I Pass   7: suminf.    0.49495 (3) obj. -3094.9 iterations 7
Cbc0038I Pass   8: suminf.    0.34722 (2) obj. -2986.67 iterations 6
Cbc0038I Pass   9: suminf.    0.27236 (1) obj. -2783.1 iterations 4
Cbc0038I Pass  10: suminf.    0.12500 (1) obj. -2985.89 iterations 3
Cbc0038I Pass  11: suminf.    0.60446 (3) obj. -2997.02 iterations 7
Cbc0038I Pass  12: suminf.    0.60446 (3) obj. -2997.02 iterations 1
Cbc0038I Pass  13: suminf.    0.27818 (1) obj. -2783.1 iterations 5
Cbc0038I Pass  14: suminf.    0.12500 (1) obj. -2993.89 iterations 3
Cbc0038I Pass  15: suminf.    0.55629 (3) obj. -2783.1 iterations 14
Cbc0038I Pass  16: suminf.    0.83777 (2) obj. -2783.1 iterations 5
Cbc0038I Pass  17: suminf.    0.08635 (2) obj. -2783.1 iterations 3
Cbc0038I Pass  18: suminf.    0.31034 (2) obj. -2933.3 iterations 5
Cbc0038I Pass  19: suminf.    0.94669 (5) obj. -2989.63 iterations 7
Cbc0038I Pass  20: suminf.    0.39941 (4) obj. -2783.1 iterations 2
Cbc0038I Pass  21: suminf.    0.41379 (2) obj. -2992.67 iterations 7
Cbc0038I Pass  22: suminf.    0.10126 (2) obj. -2783.1 iterations 3
Cbc0038I Pass  23: suminf.    1.02755 (5) obj. -2783.1 iterations 9
Cbc0038I Pass  24: suminf.    0.52229 (5) obj. -2783.1 iterations 3
Cbc0038I Pass  25: suminf.    0.31034 (2) obj. -2931.3 iterations 7
Cbc0038I Pass  26: suminf.    0.08933 (2) obj. -2783.1 iterations 1
Cbc0038I Pass  27: suminf.    2.10753 (9) obj. -2783.1 iterations 16
Cbc0038I Pass  28: suminf.    1.31884 (6) obj. -2945.13 iterations 6
Cbc0038I Pass  29: suminf.    0.90983 (7) obj. -2783.1 iterations 2
Cbc0038I Pass  30: suminf.    0.31034 (2) obj. -2931.3 iterations 9
Cbc0038I Pass  31: suminf.    0.08933 (2) obj. -2783.1 iterations 1
Cbc0038I Pass  32: suminf.    1.79406 (6) obj. -2783.1 iterations 9
Cbc0038I Rounding solution of -2739.2 is better than previous of -2705.2

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -2923.1
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.06051 (5) obj. -2923.1 iterations 0
Cbc0038I Pass  33: suminf.    0.97534 (4) obj. -2923.1 iterations 1
Cbc0038I Pass  34: suminf.    0.35031 (2) obj. -2923.1 iterations 10
Cbc0038I Pass  35: suminf.    0.65517 (2) obj. -3127.53 iterations 5
Cbc0038I Pass  36: suminf.    1.12460 (4) obj. -3138.06 iterations 4
Cbc0038I Pass  37: suminf.    0.77166 (4) obj. -2923.1 iterations 2
Cbc0038I Pass  38: suminf.    0.65517 (2) obj. -3136.53 iterations 8
Cbc0038I Pass  39: suminf.    0.33689 (2) obj. -2923.1 iterations 3
Cbc0038I Pass  40: suminf.    0.30855 (2) obj. -2923.1 iterations 4
Cbc0038I Pass  41: suminf.    0.55172 (2) obj. -3086.16 iterations 5
Cbc0038I Pass  42: suminf.    0.30855 (2) obj. -2923.1 iterations 2
Cbc0038I Pass  43: suminf.    1.05943 (5) obj. -2923.1 iterations 10
Cbc0038I Pass  44: suminf.    0.88048 (5) obj. -2923.1 iterations 3
Cbc0038I Pass  45: suminf.    0.44828 (2) obj. -3003.79 iterations 8
Cbc0038I Pass  46: suminf.    0.32794 (2) obj. -2923.1 iterations 3
Cbc0038I Pass  47: suminf.    0.93546 (8) obj. -2923.1 iterations 9
Cbc0038I Pass  48: suminf.    0.30259 (2) obj. -2923.1 iterations 7
Cbc0038I Pass  49: suminf.    0.30259 (2) obj. -2923.1 iterations 2
Cbc0038I Pass  50: suminf.    0.41379 (2) obj. -2997.67 iterations 5
Cbc0038I Pass  51: suminf.    1.48184 (6) obj. -2923.1 iterations 10
Cbc0038I Pass  52: suminf.    0.75261 (6) obj. -2923.1 iterations 4
Cbc0038I Pass  53: suminf.    0.41379 (2) obj. -2996.67 iterations 9
Cbc0038I Pass  54: suminf.    0.30408 (2) obj. -2923.1 iterations 2
Cbc0038I Pass  55: suminf.    0.31157 (3) obj. -2923.1 iterations 4
Cbc0038I Pass  56: suminf.    0.31157 (3) obj. -2923.1 iterations 1
Cbc0038I Pass  57: suminf.    0.31034 (2) obj. -2940.3 iterations 6
Cbc0038I Pass  58: suminf.    0.28469 (2) obj. -2923.1 iterations 2
Cbc0038I Pass  59: suminf.    1.16960 (5) obj. -2923.1 iterations 11
Cbc0038I Pass  60: suminf.    1.92850 (5) obj. -2923.1 iterations 5
Cbc0038I Pass  61: suminf.    0.98218 (2) obj. -2923.1 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2739.2 - took 0.02 seconds
Cbc0012I Integer solution of -2739.2 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 40 columns, reduced to 28 rows 28 columns
Cbc0031I 12 added rows had average density of 8.6666667
Cbc0013I At root node, 12 cuts changed objective from -3482.8027 to -2957.6849 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 299 row cuts average 3.5 elements, 6 column cuts (6 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 583 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 123 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 137 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2739.2 best solution, best possible -2957.4806 (1.50 seconds)
Cbc0001I Search completed - best objective -2739.2, took 1448 iterations and 2 nodes (1.60 seconds)
Cbc0032I Strong branching done 40 times (250 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.60

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 20 (-13) columns and 108 (-75) elements
Clp1000I sum of infeasibilities 3.10475e-06 - average 8.39121e-08, 11 fixed columns
Coin0506I Presolve 12 (-25) rows, 8 (-12) columns and 34 (-74) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 4065.6136
Clp0000I Optimal - objective value 4065.6136
Coin0511I After Postsolve, objective 4065.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4065.6136
Clp0000I Optimal - objective value 4065.6136
Clp0000I Optimal - objective value 4065.6136
Coin0511I After Postsolve, objective 4065.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4065.613555 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.951%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.58288
Cbc0038I Pass   1: suminf.    0.43277 (4) obj. -2642.8 iterations 6
Cbc0038I Pass   2: suminf.    0.43277 (4) obj. -2642.8 iterations 0
Cbc0038I Solution found of -404.473
Cbc0038I Relaxing continuous gives -409.7
Cbc0038I Rounding solution of -1756.57 is better than previous of -409.7

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 15 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -1756.57 to -2705.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -2783.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73440 (5) obj. -2783.3 iterations 1
Cbc0038I Pass   4: suminf.    0.68361 (4) obj. -2783.3 iterations 1
Cbc0038I Pass   5: suminf.    0.11647 (2) obj. -2783.3 iterations 10
Cbc0038I Pass   6: suminf.    0.65517 (2) obj. -3144.53 iterations 5
Cbc0038I Pass   7: suminf.    1.73913 (4) obj. -2860.13 iterations 5
Cbc0038I Pass   8: suminf.    1.69886 (5) obj. -2783.3 iterations 2
Cbc0038I Pass   9: suminf.    1.55072 (4) obj. -2783.3 iterations 6
Cbc0038I Pass  10: suminf.    0.76736 (4) obj. -3284 iterations 5
Cbc0038I Pass  11: suminf.    0.91360 (7) obj. -2783.3 iterations 6
Cbc0038I Pass  12: suminf.    0.87107 (3) obj. -2783.3 iterations 2
Cbc0038I Pass  13: suminf.    0.85548 (3) obj. -2783.3 iterations 5
Cbc0038I Pass  14: suminf.    0.76922 (2) obj. -2783.3 iterations 1
Cbc0038I Pass  15: suminf.    0.86207 (2) obj. -2845.56 iterations 4
Cbc0038I Pass  16: suminf.    0.35360 (5) obj. -2783.3 iterations 6
Cbc0038I Pass  17: suminf.    0.35360 (5) obj. -2783.3 iterations 0
Cbc0038I Pass  18: suminf.    0.08366 (2) obj. -2783.3 iterations 9
Cbc0038I Pass  19: suminf.    0.08366 (2) obj. -2783.3 iterations 2
Cbc0038I Pass  20: suminf.    0.34483 (2) obj. -2958.42 iterations 5
Cbc0038I Pass  21: suminf.    0.08366 (2) obj. -2783.3 iterations 2
Cbc0038I Pass  22: suminf.    0.92494 (4) obj. -2783.3 iterations 5
Cbc0038I Pass  23: suminf.    0.59065 (4) obj. -2783.3 iterations 1
Cbc0038I Pass  24: suminf.    0.34109 (2) obj. -2783.3 iterations 9
Cbc0038I Pass  25: suminf.    0.34109 (2) obj. -2783.3 iterations 0
Cbc0038I Pass  26: suminf.    0.85924 (2) obj. -2783.3 iterations 3
Cbc0038I Pass  27: suminf.    0.07173 (2) obj. -2783.3 iterations 3
Cbc0038I Pass  28: suminf.    0.31034 (2) obj. -2943.3 iterations 4
Cbc0038I Pass  29: suminf.    0.32143 (1) obj. -2877.5 iterations 1
Cbc0038I Pass  30: suminf.    0.34109 (2) obj. -2783.3 iterations 5
Cbc0038I Pass  31: suminf.    1.00000 (3) obj. -3456.7 iterations 11
Cbc0038I Pass  32: suminf.    0.76736 (4) obj. -3284 iterations 4
Cbc0038I Rounding solution of -2739.2 is better than previous of -2705.2

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2923.7
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.03580 (5) obj. -2923.7 iterations 0
Cbc0038I Pass  33: suminf.    0.95516 (4) obj. -2923.7 iterations 1
Cbc0038I Pass  34: suminf.    0.32585 (2) obj. -2923.7 iterations 8
Cbc0038I Pass  35: suminf.    0.65517 (2) obj. -3144.53 iterations 5
Cbc0038I Pass  36: suminf.    0.65517 (2) obj. -3144.53 iterations 1
Cbc0038I Pass  37: suminf.    1.08348 (6) obj. -2923.7 iterations 7
Cbc0038I Pass  38: suminf.    0.82759 (2) obj. -3041.66 iterations 4
Cbc0038I Pass  39: suminf.    0.99650 (2) obj. -2923.7 iterations 2
Cbc0038I Pass  40: suminf.    1.08925 (4) obj. -2923.7 iterations 7
Cbc0038I Pass  41: suminf.    0.15000 (1) obj. -3084.9 iterations 3
Cbc0038I Pass  42: suminf.    0.32585 (2) obj. -2923.7 iterations 2
Cbc0038I Pass  43: suminf.    0.44828 (2) obj. -3005.79 iterations 2
Cbc0038I Pass  44: suminf.    1.49387 (5) obj. -2923.7 iterations 11
Cbc0038I Pass  45: suminf.    0.79782 (4) obj. -3090.84 iterations 5
Cbc0038I Pass  46: suminf.    0.37320 (4) obj. -2923.7 iterations 2
Cbc0038I Pass  47: suminf.    0.35922 (5) obj. -2923.7 iterations 3
Cbc0038I Pass  48: suminf.    1.00648 (4) obj. -2923.7 iterations 5
Cbc0038I Pass  49: suminf.    1.00648 (4) obj. -2923.7 iterations 2
Cbc0038I Pass  50: suminf.    1.05400 (4) obj. -2975.19 iterations 8
Cbc0038I Pass  51: suminf.    1.05400 (4) obj. -2975.19 iterations 0
Cbc0038I Pass  52: suminf.    1.13562 (4) obj. -2923.7 iterations 1
Cbc0038I Pass  53: suminf.    2.67413 (9) obj. -2923.7 iterations 7
Cbc0038I Pass  54: suminf.    0.58824 (3) obj. -2923.7 iterations 4
Cbc0038I Pass  55: suminf.    0.30796 (2) obj. -2923.7 iterations 5
Cbc0038I Pass  56: suminf.    0.34483 (2) obj. -2948.42 iterations 2
Cbc0038I Pass  57: suminf.    0.61950 (3) obj. -2923.7 iterations 7
Cbc0038I Pass  58: suminf.    0.61950 (3) obj. -2923.7 iterations 1
Cbc0038I Pass  59: suminf.    1.33594 (3) obj. -3072.98 iterations 4
Cbc0038I Pass  60: suminf.    0.97860 (2) obj. -2923.7 iterations 3
Cbc0038I Pass  61: suminf.    0.93103 (2) obj. -2984.29 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 25 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2739.2 - took 0.02 seconds
Cbc0012I Integer solution of -2739.2 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 20 columns, reduced to 20 rows 11 columns
Cbc0031I 5 added rows had average density of 18
Cbc0013I At root node, 5 cuts changed objective from -3485.2901 to -2973.5223 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 60 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 295 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 189 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 80 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2739.2 best solution, best possible -2973.5223 (1.39 seconds)
Cbc0001I Search completed - best objective -2739.2, took 1060 iterations and 2 nodes (1.45 seconds)
Cbc0032I Strong branching done 26 times (165 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 40 (-23) columns and 276 (-373) elements
Clp1000I sum of infeasibilities 1.91715e-06 - average 4.91578e-08, 35 fixed columns
Coin0506I Presolve 6 (-33) rows, 5 (-35) columns and 18 (-258) elements
Clp0006I 0  Obj 4046.6135 Dual inf 39.926755 (4)
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 4046.6136
Clp0000I Optimal - objective value 4046.6136
Coin0511I After Postsolve, objective 4046.6136, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 4046.6136 Dual inf 866.55749 (22)
Clp0014I Perturbing problem by 0.001% of 1.8125801 - largest nonzero change 1.1170802e-05 ( 0.0011170802%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 4085.4507
Clp0000I Optimal - objective value 4085.4507
Clp0000I Optimal - objective value 4085.4507
Coin0511I After Postsolve, objective 4085.4507, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4085.450651 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 40 columns (40 integer (40 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.179%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.124
Cbc0038I Pass   1: suminf.    0.43277 (4) obj. -2630.02 iterations 29
Cbc0038I Pass   2: suminf.    0.43277 (4) obj. -2630.02 iterations 0
Cbc0038I Solution found of -391.7
Cbc0038I Rounding solution of -2219.5 is better than previous of -391.7

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 27 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -2219.5 to -2705.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -2783.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.76065 (5) obj. -2783.1 iterations 1
Cbc0038I Pass   4: suminf.    0.70592 (4) obj. -2783.1 iterations 1
Cbc0038I Pass   5: suminf.    0.14153 (2) obj. -2783.1 iterations 8
Cbc0038I Pass   6: suminf.    0.65517 (2) obj. -3127.53 iterations 5
Cbc0038I Pass   7: suminf.    0.49495 (3) obj. -3094.9 iterations 8
Cbc0038I Pass   8: suminf.    0.34722 (2) obj. -2986.67 iterations 6
Cbc0038I Pass   9: suminf.    0.27236 (1) obj. -2783.1 iterations 4
Cbc0038I Pass  10: suminf.    0.12500 (1) obj. -2985.89 iterations 3
Cbc0038I Pass  11: suminf.    0.65290 (3) obj. -2996.88 iterations 7
Cbc0038I Pass  12: suminf.    0.65290 (3) obj. -2996.88 iterations 1
Cbc0038I Pass  13: suminf.    0.27818 (1) obj. -2783.1 iterations 5
Cbc0038I Pass  14: suminf.    0.12500 (1) obj. -2993.89 iterations 3
Cbc0038I Pass  15: suminf.    0.61750 (3) obj. -2783.1 iterations 14
Cbc0038I Pass  16: suminf.    0.83777 (2) obj. -2783.1 iterations 5
Cbc0038I Pass  17: suminf.    0.08635 (2) obj. -2783.1 iterations 3
Cbc0038I Pass  18: suminf.    0.31034 (2) obj. -2933.3 iterations 5
Cbc0038I Pass  19: suminf.    1.02984 (5) obj. -2989.55 iterations 7
Cbc0038I Pass  20: suminf.    0.47367 (4) obj. -2783.1 iterations 2
Cbc0038I Pass  21: suminf.    0.41379 (2) obj. -2992.67 iterations 7
Cbc0038I Pass  22: suminf.    0.10126 (2) obj. -2783.1 iterations 3
Cbc0038I Pass  23: suminf.    1.12689 (5) obj. -2783.1 iterations 9
Cbc0038I Pass  24: suminf.    0.60770 (5) obj. -2783.1 iterations 3
Cbc0038I Pass  25: suminf.    0.31034 (2) obj. -2931.3 iterations 7
Cbc0038I Pass  26: suminf.    0.08933 (2) obj. -2783.1 iterations 1
Cbc0038I Pass  27: suminf.    2.23664 (9) obj. -2783.1 iterations 16
Cbc0038I Pass  28: suminf.    1.46414 (6) obj. -2944.99 iterations 7
Cbc0038I Pass  29: suminf.    1.05181 (7) obj. -2783.1 iterations 2
Cbc0038I Pass  30: suminf.    0.31034 (2) obj. -2931.3 iterations 10
Cbc0038I Pass  31: suminf.    0.08933 (2) obj. -2783.1 iterations 3
Cbc0038I Pass  32: suminf.    1.85534 (6) obj. -2783.1 iterations 10
Cbc0038I Rounding solution of -2739.2 is better than previous of -2705.2

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 33 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -2923.1
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.06051 (5) obj. -2923.1 iterations 0
Cbc0038I Pass  33: suminf.    0.97534 (4) obj. -2923.1 iterations 1
Cbc0038I Pass  34: suminf.    0.35031 (2) obj. -2923.1 iterations 10
Cbc0038I Pass  35: suminf.    0.65517 (2) obj. -3127.53 iterations 5
Cbc0038I Pass  36: suminf.    0.86380 (3) obj. -2947.31 iterations 5
Cbc0038I Pass  37: suminf.    0.86380 (3) obj. -2947.31 iterations 0
Cbc0038I Pass  38: suminf.    0.33689 (2) obj. -2923.1 iterations 5
Cbc0038I Pass  39: suminf.    0.65517 (2) obj. -3136.53 iterations 5
Cbc0038I Pass  40: suminf.    0.30855 (2) obj. -2923.1 iterations 7
Cbc0038I Pass  41: suminf.    0.30855 (2) obj. -2923.1 iterations 0
Cbc0038I Pass  42: suminf.    0.55172 (2) obj. -3086.16 iterations 5
Cbc0038I Pass  43: suminf.    1.14421 (5) obj. -2923.1 iterations 10
Cbc0038I Pass  44: suminf.    0.95406 (5) obj. -2923.1 iterations 3
Cbc0038I Pass  45: suminf.    0.44828 (2) obj. -3003.79 iterations 7
Cbc0038I Pass  46: suminf.    0.32794 (2) obj. -2923.1 iterations 2
Cbc0038I Pass  47: suminf.    1.04300 (8) obj. -2923.1 iterations 9
Cbc0038I Pass  48: suminf.    0.30259 (2) obj. -2923.1 iterations 7
Cbc0038I Pass  49: suminf.    0.30259 (2) obj. -2923.1 iterations 2
Cbc0038I Pass  50: suminf.    0.41379 (2) obj. -2997.67 iterations 5
Cbc0038I Pass  51: suminf.    1.61840 (6) obj. -2923.1 iterations 10
Cbc0038I Pass  52: suminf.    0.86269 (6) obj. -2923.1 iterations 4
Cbc0038I Pass  53: suminf.    0.41379 (2) obj. -2996.67 iterations 9
Cbc0038I Pass  54: suminf.    0.30408 (2) obj. -2923.1 iterations 2
Cbc0038I Pass  55: suminf.    0.31157 (3) obj. -2923.1 iterations 4
Cbc0038I Pass  56: suminf.    0.31157 (3) obj. -2923.1 iterations 1
Cbc0038I Pass  57: suminf.    0.31034 (2) obj. -2940.3 iterations 6
Cbc0038I Pass  58: suminf.    0.28469 (2) obj. -2923.1 iterations 3
Cbc0038I Pass  59: suminf.    1.16960 (5) obj. -2923.1 iterations 12
Cbc0038I Pass  60: suminf.    1.92850 (5) obj. -2923.1 iterations 5
Cbc0038I Pass  61: suminf.    0.98218 (2) obj. -2923.1 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 32 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2739.2 - took 0.03 seconds
Cbc0012I Integer solution of -2739.2 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 40 columns, reduced to 29 rows 28 columns
Cbc0031I 16 added rows had average density of 16.5625
Cbc0013I At root node, 16 cuts changed objective from -3482.7047 to -2994.2651 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 305 row cuts average 3.3 elements, 6 column cuts (6 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 623 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 124 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 11 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 158 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 71 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2739.2 best solution, best possible -2994.258 (1.43 seconds)
Cbc0001I Search completed - best objective -2739.2, took 1551 iterations and 4 nodes (1.59 seconds)
Cbc0032I Strong branching done 64 times (795 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.60

