Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 26 (-7) columns and 142 (-41) elements
Clp1000I sum of infeasibilities 4.86949e-05 - average 9.93774e-07, 1 fixed columns
Coin0506I Presolve 47 (-2) rows, 25 (-1) columns and 136 (-6) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.9958477 - largest nonzero change 0 ( 0%) - largest zero change 1.8885209e-05
Clp0000I Optimal - objective value 84.421755
Clp0000I Optimal - objective value 84.421755
Coin0511I After Postsolve, objective 84.421755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.421755
Clp0000I Optimal - objective value 84.421755
Clp0000I Optimal - objective value 84.421755
Coin0511I After Postsolve, objective 84.421755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.42175458 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 26 columns (25 integer (25 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.32693
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.2089 iterations 18
Cbc0038I Solution found of -3.2089
Cbc0038I Relaxing continuous gives -3.2089
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 26 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -3.2089 to -37.6419 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.7755
Cbc0038I Pass   2: suminf.    0.93810 (4) obj. -41.7755 iterations 2
Cbc0038I Pass   3: suminf.    0.32609 (1) obj. -41.7755 iterations 5
Cbc0038I Pass   4: suminf.    0.38593 (1) obj. -41.7755 iterations 1
Cbc0038I Pass   5: suminf.    1.37356 (3) obj. -41.7755 iterations 7
Cbc0038I Pass   6: suminf.    0.72245 (3) obj. -41.7755 iterations 5
Cbc0038I Pass   7: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass   8: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass   9: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  10: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  11: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  12: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  13: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  14: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  15: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  16: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  17: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  18: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  19: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  20: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  21: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  22: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  23: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  24: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  25: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  26: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  27: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  28: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  29: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  30: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  31: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -37.6419 - took 0.03 seconds
Cbc0012I Integer solution of -37.64191 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 26 columns, reduced to 26 rows 14 columns
Cbc0031I 7 added rows had average density of 12.428571
Cbc0013I At root node, 7 cuts changed objective from -78.976572 to -55.330873 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1300 row cuts average 4.9 elements, 4 column cuts (4 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 791 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -43.20008 found by rounding after 1806 iterations and 1 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -43.20008, took 2065 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 54 times (519 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-18) rows, 47 (-15) columns and 418 (-228) elements
Clp1000I sum of infeasibilities 1.03853e-05 - average 2.30784e-07, 32 fixed columns
Coin0506I Presolve 8 (-37) rows, 9 (-38) columns and 30 (-388) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 69.08653
Clp0000I Optimal - objective value 69.08653
Coin0511I After Postsolve, objective 69.08653, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6056599 - largest nonzero change 1.0183553e-05 ( 0.00074158712%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 124.22661
Clp0000I Optimal - objective value 124.22661
Clp0000I Optimal - objective value 124.22661
Coin0511I After Postsolve, objective 124.22661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.2266079 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 44 columns (44 integer (44 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.00716
Cbc0038I Pass   1: suminf.    0.99718 (12) obj. -44.8438 iterations 7
Cbc0038I Pass   2: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Solution found of -13.3299
Cbc0038I Rounding solution of -29.2203 is better than previous of -13.3299

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -29.2203 to -30.8165 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.1745
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass   4: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass   5: suminf.    0.42871 (1) obj. -34.1745 iterations 21
Cbc0038I Pass   6: suminf.    0.38947 (1) obj. -43.0145 iterations 1
Cbc0038I Pass   7: suminf.    0.56673 (3) obj. -34.1745 iterations 6
Cbc0038I Pass   8: suminf.    0.56673 (3) obj. -34.1745 iterations 2
Cbc0038I Pass   9: suminf.    0.38947 (1) obj. -44.0145 iterations 3
Cbc0038I Pass  10: suminf.    0.40815 (1) obj. -34.1745 iterations 1
Cbc0038I Pass  11: suminf.    2.22870 (7) obj. -34.1745 iterations 17
Cbc0038I Pass  12: suminf.    0.78886 (4) obj. -34.1745 iterations 5
Cbc0038I Pass  13: suminf.    0.38947 (1) obj. -42.0145 iterations 4
Cbc0038I Pass  14: suminf.    0.44928 (1) obj. -34.1745 iterations 1
Cbc0038I Pass  15: suminf.    0.60459 (7) obj. -34.1745 iterations 6
Cbc0038I Pass  16: suminf.    0.37941 (4) obj. -37.3377 iterations 2
Cbc0038I Pass  17: suminf.    0.05240 (1) obj. -34.1745 iterations 4
Cbc0038I Pass  18: suminf.    0.04211 (1) obj. -34.675 iterations 1
Cbc0038I Pass  19: suminf.    1.01396 (6) obj. -34.1745 iterations 10
Cbc0038I Pass  20: suminf.    1.01396 (6) obj. -34.1745 iterations 1
Cbc0038I Pass  21: suminf.    0.38947 (1) obj. -40.0145 iterations 6
Cbc0038I Pass  22: suminf.    0.49042 (1) obj. -34.1745 iterations 1
Cbc0038I Pass  23: suminf.    2.61547 (15) obj. -34.1745 iterations 15
Cbc0038I Pass  24: suminf.    2.15179 (12) obj. -34.1745 iterations 4
Cbc0038I Pass  25: suminf.    0.41698 (3) obj. -34.1745 iterations 13
Cbc0038I Pass  26: suminf.    0.69469 (3) obj. -34.1745 iterations 2
Cbc0038I Pass  27: suminf.    0.40256 (3) obj. -36.469 iterations 3
Cbc0038I Pass  28: suminf.    1.16243 (5) obj. -34.1745 iterations 4
Cbc0038I Pass  29: suminf.    2.03713 (11) obj. -34.1745 iterations 15
Cbc0038I Pass  30: suminf.    1.21759 (5) obj. -34.5413 iterations 4
Cbc0038I Pass  31: suminf.    0.35394 (2) obj. -34.1745 iterations 7
Cbc0038I Pass  32: suminf.    0.36781 (2) obj. -34.1745 iterations 2
Cbc0038I Rounding solution of -33.1663 is better than previous of -30.8165

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -33.1663 to -36.8948 (0.05 seconds)
Cbc0038I Round again with cutoff of -42.3951
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass  33: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass  34: suminf.    0.40221 (1) obj. -42.3951 iterations 18
Cbc0038I Pass  35: suminf.    0.38947 (1) obj. -43.0145 iterations 1
Cbc0038I Pass  36: suminf.    1.34616 (8) obj. -42.3951 iterations 8
Cbc0038I Pass  37: suminf.    1.34616 (8) obj. -42.3951 iterations 1
Cbc0038I Pass  38: suminf.    0.71053 (4) obj. -42.3951 iterations 8
Cbc0038I Pass  39: suminf.    0.71053 (4) obj. -42.3951 iterations 1
Cbc0038I Pass  40: suminf.    0.94261 (4) obj. -42.3951 iterations 5
Cbc0038I Pass  41: suminf.    0.57400 (4) obj. -42.3951 iterations 2
Cbc0038I Pass  42: suminf.    0.66069 (3) obj. -42.3951 iterations 2
Cbc0038I Pass  43: suminf.    0.66069 (3) obj. -42.3951 iterations 0
Cbc0038I Pass  44: suminf.    0.58257 (3) obj. -42.3951 iterations 2
Cbc0038I Pass  45: suminf.    0.82748 (5) obj. -42.3951 iterations 6
Cbc0038I Pass  46: suminf.    0.82748 (5) obj. -42.3951 iterations 0
Cbc0038I Pass  47: suminf.    0.71261 (3) obj. -42.3951 iterations 5
Cbc0038I Pass  48: suminf.    0.65339 (3) obj. -42.3951 iterations 1
Cbc0038I Pass  49: suminf.    0.74047 (3) obj. -42.3951 iterations 3
Cbc0038I Pass  50: suminf.    0.51878 (4) obj. -42.3951 iterations 2
Cbc0038I Pass  51: suminf.    0.71261 (3) obj. -42.3951 iterations 2
Cbc0038I Pass  52: suminf.    1.62865 (7) obj. -42.3951 iterations 8
Cbc0038I Pass  53: suminf.    1.44544 (7) obj. -42.3951 iterations 5
Cbc0038I Pass  54: suminf.    0.41261 (3) obj. -42.3951 iterations 9
Cbc0038I Pass  55: suminf.    0.35339 (3) obj. -42.3951 iterations 1
Cbc0038I Pass  56: suminf.    0.73146 (2) obj. -45.0084 iterations 3
Cbc0038I Pass  57: suminf.    0.34958 (2) obj. -42.3951 iterations 5
Cbc0038I Pass  58: suminf.    1.56331 (6) obj. -49.6541 iterations 8
Cbc0038I Pass  59: suminf.    0.93116 (3) obj. -47.2806 iterations 2
Cbc0038I Pass  60: suminf.    0.15571 (3) obj. -42.3951 iterations 5
Cbc0038I Pass  61: suminf.    0.36398 (2) obj. -43.9089 iterations 2
Cbc0038I Rounding solution of -42.8504 is better than previous of -36.8948

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -49.3142
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.07638 (13) obj. -49.3142 iterations 1
Cbc0038I Pass  62: suminf.    1.45877 (13) obj. -49.3142 iterations 1
Cbc0038I Pass  63: suminf.    0.91196 (3) obj. -49.3142 iterations 16
Cbc0038I Pass  64: suminf.    0.64557 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  65: suminf.    1.28366 (4) obj. -49.3142 iterations 2
Cbc0038I Pass  66: suminf.    0.82111 (3) obj. -49.3142 iterations 1
Cbc0038I Pass  67: suminf.    0.89705 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  68: suminf.    0.79705 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  69: suminf.    0.71784 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  70: suminf.    1.58039 (4) obj. -49.3142 iterations 2
Cbc0038I Pass  71: suminf.    1.49596 (3) obj. -49.3142 iterations 1
Cbc0038I Pass  72: suminf.    1.29511 (4) obj. -49.3142 iterations 3
Cbc0038I Pass  73: suminf.    2.20780 (11) obj. -49.3142 iterations 2
Cbc0038I Pass  74: suminf.    1.53835 (9) obj. -49.3142 iterations 2
Cbc0038I Pass  75: suminf.    1.28397 (5) obj. -49.3142 iterations 11
Cbc0038I Pass  76: suminf.    1.28397 (5) obj. -49.3142 iterations 1
Cbc0038I Pass  77: suminf.    1.15169 (3) obj. -49.3142 iterations 5
Cbc0038I Pass  78: suminf.    1.15169 (3) obj. -49.3142 iterations 1
Cbc0038I Pass  79: suminf.    1.13890 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  80: suminf.    1.13890 (5) obj. -49.3142 iterations 0
Cbc0038I Pass  81: suminf.    1.28397 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  82: suminf.    1.28397 (5) obj. -49.3142 iterations 1
Cbc0038I Pass  83: suminf.    1.15169 (3) obj. -49.3142 iterations 5
Cbc0038I Pass  84: suminf.    1.15169 (3) obj. -49.3142 iterations 1
Cbc0038I Pass  85: suminf.    1.13890 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  86: suminf.    1.13890 (5) obj. -49.3142 iterations 0
Cbc0038I Pass  87: suminf.    1.28397 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  88: suminf.    1.28397 (5) obj. -49.3142 iterations 1
Cbc0038I Pass  89: suminf.    1.15169 (3) obj. -49.3142 iterations 5
Cbc0038I Pass  90: suminf.    1.15169 (3) obj. -49.3142 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -42.8504 - took 0.05 seconds
Cbc0012I Integer solution of -42.85037 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 40 rows 44 columns, reduced to 5 rows 6 columns
Cbc0031I 25 added rows had average density of 10.24
Cbc0013I At root node, 25 cuts changed objective from -64.396084 to -43.283301 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1282 row cuts average 7.2 elements, 12 column cuts (12 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 472 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 98 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 271 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.732 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -42.85037 best solution, best possible -43.283301 (1.53 seconds)
Cbc0004I Integer solution of -43.20008 found after 1159 iterations and 1 nodes (1.59 seconds)
Cbc0001I Search completed - best objective -43.20008, took 1285 iterations and 4 nodes (1.70 seconds)
Cbc0032I Strong branching done 58 times (553 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 26 (-7) columns and 142 (-41) elements
Clp1000I sum of infeasibilities 4.86949e-05 - average 9.93774e-07, 1 fixed columns
Coin0506I Presolve 47 (-2) rows, 25 (-1) columns and 136 (-6) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.9958477 - largest nonzero change 0 ( 0%) - largest zero change 1.8885209e-05
Clp0000I Optimal - objective value 84.421755
Clp0000I Optimal - objective value 84.421755
Coin0511I After Postsolve, objective 84.421755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.421755
Clp0000I Optimal - objective value 84.421755
Clp0000I Optimal - objective value 84.421755
Coin0511I After Postsolve, objective 84.421755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.42175458 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 26 columns (25 integer (25 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.32693
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.2089 iterations 18
Cbc0038I Solution found of -3.2089
Cbc0038I Relaxing continuous gives -3.2089
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 26 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -3.2089 to -37.6419 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.7755
Cbc0038I Pass   2: suminf.    0.93810 (4) obj. -41.7755 iterations 2
Cbc0038I Pass   3: suminf.    0.32609 (1) obj. -41.7755 iterations 5
Cbc0038I Pass   4: suminf.    0.38593 (1) obj. -41.7755 iterations 1
Cbc0038I Pass   5: suminf.    1.37356 (3) obj. -41.7755 iterations 7
Cbc0038I Pass   6: suminf.    0.72245 (3) obj. -41.7755 iterations 5
Cbc0038I Pass   7: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass   8: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass   9: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  10: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  11: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  12: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  13: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  14: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  15: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  16: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  17: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  18: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  19: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  20: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  21: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  22: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  23: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  24: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  25: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  26: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I Pass  27: suminf.    0.63523 (3) obj. -41.7755 iterations 1
Cbc0038I Pass  28: suminf.    0.33696 (1) obj. -41.7755 iterations 3
Cbc0038I Pass  29: suminf.    0.34879 (2) obj. -41.7755 iterations 2
Cbc0038I Pass  30: suminf.    0.34575 (2) obj. -41.7755 iterations 1
Cbc0038I Pass  31: suminf.    0.72245 (3) obj. -41.7755 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 26 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -37.6419 - took 0.03 seconds
Cbc0012I Integer solution of -37.64191 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 26 columns, reduced to 26 rows 14 columns
Cbc0031I 7 added rows had average density of 12.428571
Cbc0013I At root node, 7 cuts changed objective from -78.976572 to -55.330873 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1300 row cuts average 4.9 elements, 4 column cuts (4 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 791 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -43.20008 found by rounding after 1806 iterations and 1 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -43.20008, took 2065 iterations and 4 nodes (0.17 seconds)
Cbc0032I Strong branching done 54 times (519 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 42 (-21) columns and 340 (-309) elements
Clp1000I sum of infeasibilities 5.17614e-09 - average 1.26247e-10, 9 fixed columns
Coin0506I Presolve 32 (-9) rows, 33 (-9) columns and 214 (-126) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 100.57756
Clp0000I Optimal - objective value 100.57756
Coin0511I After Postsolve, objective 100.57756, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.57756
Clp0000I Optimal - objective value 100.57756
Clp0000I Optimal - objective value 100.57756
Coin0511I After Postsolve, objective 100.57756, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.5775553 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 44 columns (44 integer (44 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.00716
Cbc0038I Pass   1: suminf.    0.99718 (12) obj. -44.8438 iterations 9
Cbc0038I Pass   2: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Solution found of -13.3299
Cbc0038I Rounding solution of -29.2203 is better than previous of -13.3299

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -29.2203 to -30.8165 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.1745
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass   4: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass   5: suminf.    0.42871 (1) obj. -34.1745 iterations 21
Cbc0038I Pass   6: suminf.    0.38947 (1) obj. -43.0145 iterations 1
Cbc0038I Pass   7: suminf.    0.56673 (3) obj. -34.1745 iterations 6
Cbc0038I Pass   8: suminf.    0.56673 (3) obj. -34.1745 iterations 2
Cbc0038I Pass   9: suminf.    0.38947 (1) obj. -44.0145 iterations 3
Cbc0038I Pass  10: suminf.    0.40815 (1) obj. -34.1745 iterations 1
Cbc0038I Pass  11: suminf.    2.22870 (7) obj. -34.1745 iterations 16
Cbc0038I Pass  12: suminf.    0.78886 (4) obj. -34.1745 iterations 6
Cbc0038I Pass  13: suminf.    0.38947 (1) obj. -42.0145 iterations 6
Cbc0038I Pass  14: suminf.    0.44928 (1) obj. -34.1745 iterations 1
Cbc0038I Pass  15: suminf.    0.60459 (7) obj. -34.1745 iterations 7
Cbc0038I Pass  16: suminf.    0.37941 (4) obj. -37.3377 iterations 2
Cbc0038I Pass  17: suminf.    0.05240 (1) obj. -34.1745 iterations 4
Cbc0038I Pass  18: suminf.    0.04211 (1) obj. -34.675 iterations 1
Cbc0038I Pass  19: suminf.    1.01396 (6) obj. -34.1745 iterations 10
Cbc0038I Pass  20: suminf.    1.01396 (6) obj. -34.1745 iterations 1
Cbc0038I Pass  21: suminf.    0.38947 (1) obj. -40.0145 iterations 6
Cbc0038I Pass  22: suminf.    0.49042 (1) obj. -34.1745 iterations 1
Cbc0038I Pass  23: suminf.    2.61547 (15) obj. -34.1745 iterations 15
Cbc0038I Pass  24: suminf.    2.15179 (12) obj. -34.1745 iterations 4
Cbc0038I Pass  25: suminf.    0.41698 (3) obj. -34.1745 iterations 13
Cbc0038I Pass  26: suminf.    0.69469 (3) obj. -34.1745 iterations 2
Cbc0038I Pass  27: suminf.    0.40256 (3) obj. -36.469 iterations 3
Cbc0038I Pass  28: suminf.    1.16243 (5) obj. -34.1745 iterations 4
Cbc0038I Pass  29: suminf.    2.03713 (11) obj. -34.1745 iterations 17
Cbc0038I Pass  30: suminf.    1.21759 (5) obj. -34.5413 iterations 4
Cbc0038I Pass  31: suminf.    0.35394 (2) obj. -34.1745 iterations 7
Cbc0038I Pass  32: suminf.    0.36781 (2) obj. -34.1745 iterations 2
Cbc0038I Rounding solution of -33.1663 is better than previous of -30.8165

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -33.1663 to -36.8948 (0.05 seconds)
Cbc0038I Round again with cutoff of -42.3951
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass  33: suminf.    0.99718 (12) obj. -44.8438 iterations 0
Cbc0038I Pass  34: suminf.    0.40221 (1) obj. -42.3951 iterations 18
Cbc0038I Pass  35: suminf.    0.38947 (1) obj. -43.0145 iterations 1
Cbc0038I Pass  36: suminf.    1.34616 (8) obj. -42.3951 iterations 11
Cbc0038I Pass  37: suminf.    1.34616 (8) obj. -42.3951 iterations 1
Cbc0038I Pass  38: suminf.    0.71053 (4) obj. -42.3951 iterations 8
Cbc0038I Pass  39: suminf.    0.71053 (4) obj. -42.3951 iterations 1
Cbc0038I Pass  40: suminf.    0.94261 (4) obj. -42.3951 iterations 5
Cbc0038I Pass  41: suminf.    0.57400 (4) obj. -42.3951 iterations 2
Cbc0038I Pass  42: suminf.    0.66069 (3) obj. -42.3951 iterations 2
Cbc0038I Pass  43: suminf.    0.66069 (3) obj. -42.3951 iterations 0
Cbc0038I Pass  44: suminf.    0.58257 (3) obj. -42.3951 iterations 2
Cbc0038I Pass  45: suminf.    0.82748 (5) obj. -42.3951 iterations 6
Cbc0038I Pass  46: suminf.    0.82748 (5) obj. -42.3951 iterations 0
Cbc0038I Pass  47: suminf.    0.71261 (3) obj. -42.3951 iterations 5
Cbc0038I Pass  48: suminf.    0.65339 (3) obj. -42.3951 iterations 1
Cbc0038I Pass  49: suminf.    0.74047 (3) obj. -42.3951 iterations 3
Cbc0038I Pass  50: suminf.    0.51878 (4) obj. -42.3951 iterations 2
Cbc0038I Pass  51: suminf.    0.71261 (3) obj. -42.3951 iterations 2
Cbc0038I Pass  52: suminf.    1.62865 (7) obj. -42.3951 iterations 8
Cbc0038I Pass  53: suminf.    1.44544 (7) obj. -42.3951 iterations 5
Cbc0038I Pass  54: suminf.    0.41261 (3) obj. -42.3951 iterations 9
Cbc0038I Pass  55: suminf.    0.35339 (3) obj. -42.3951 iterations 1
Cbc0038I Pass  56: suminf.    0.73146 (2) obj. -45.0084 iterations 3
Cbc0038I Pass  57: suminf.    0.34958 (2) obj. -42.3951 iterations 5
Cbc0038I Pass  58: suminf.    1.56331 (6) obj. -49.6541 iterations 7
Cbc0038I Pass  59: suminf.    0.93116 (3) obj. -47.2806 iterations 2
Cbc0038I Pass  60: suminf.    0.15571 (3) obj. -42.3951 iterations 5
Cbc0038I Pass  61: suminf.    0.36398 (2) obj. -43.9089 iterations 2
Cbc0038I Rounding solution of -42.8504 is better than previous of -36.8948

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -49.3142
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.07638 (13) obj. -49.3142 iterations 1
Cbc0038I Pass  62: suminf.    1.45877 (13) obj. -49.3142 iterations 1
Cbc0038I Pass  63: suminf.    0.91196 (3) obj. -49.3142 iterations 14
Cbc0038I Pass  64: suminf.    0.64557 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  65: suminf.    1.28366 (4) obj. -49.3142 iterations 2
Cbc0038I Pass  66: suminf.    0.82111 (3) obj. -49.3142 iterations 3
Cbc0038I Pass  67: suminf.    0.89705 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  68: suminf.    0.79705 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  69: suminf.    0.71784 (3) obj. -49.3142 iterations 2
Cbc0038I Pass  70: suminf.    1.58039 (4) obj. -49.3142 iterations 2
Cbc0038I Pass  71: suminf.    1.49596 (3) obj. -49.3142 iterations 1
Cbc0038I Pass  72: suminf.    1.29511 (4) obj. -49.3142 iterations 3
Cbc0038I Pass  73: suminf.    2.20780 (11) obj. -49.3142 iterations 3
Cbc0038I Pass  74: suminf.    1.53835 (9) obj. -49.3142 iterations 2
Cbc0038I Pass  75: suminf.    1.28397 (5) obj. -49.3142 iterations 12
Cbc0038I Pass  76: suminf.    1.28397 (5) obj. -49.3142 iterations 1
Cbc0038I Pass  77: suminf.    1.15169 (3) obj. -49.3142 iterations 5
Cbc0038I Pass  78: suminf.    1.15169 (3) obj. -49.3142 iterations 1
Cbc0038I Pass  79: suminf.    1.13890 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  80: suminf.    1.13890 (5) obj. -49.3142 iterations 0
Cbc0038I Pass  81: suminf.    1.28397 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  82: suminf.    1.28397 (5) obj. -49.3142 iterations 1
Cbc0038I Pass  83: suminf.    1.15169 (3) obj. -49.3142 iterations 5
Cbc0038I Pass  84: suminf.    1.15169 (3) obj. -49.3142 iterations 1
Cbc0038I Pass  85: suminf.    1.13890 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  86: suminf.    1.13890 (5) obj. -49.3142 iterations 0
Cbc0038I Pass  87: suminf.    1.28397 (5) obj. -49.3142 iterations 3
Cbc0038I Pass  88: suminf.    1.28397 (5) obj. -49.3142 iterations 1
Cbc0038I Pass  89: suminf.    1.15169 (3) obj. -49.3142 iterations 5
Cbc0038I Pass  90: suminf.    1.15169 (3) obj. -49.3142 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -42.8504 - took 0.05 seconds
Cbc0012I Integer solution of -42.85037 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 40 rows 44 columns, reduced to 5 rows 6 columns
Cbc0031I 22 added rows had average density of 9.0454545
Cbc0013I At root node, 22 cuts changed objective from -64.396084 to -44.564652 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1466 row cuts average 4.4 elements, 9 column cuts (9 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 431 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 70 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 111 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 197 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 269 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.774 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -42.85037 best solution, best possible -44.564652 (1.61 seconds)
Cbc0012I Integer solution of -43.20008 found by rounding after 1381 iterations and 3 nodes (1.82 seconds)
Cbc0001I Search completed - best objective -43.20008, took 1402 iterations and 4 nodes (1.83 seconds)
Cbc0032I Strong branching done 76 times (632 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.83

