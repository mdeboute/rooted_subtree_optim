Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 6.56025e-05 - average 1.11191e-06, 4 fixed columns
Coin0506I Presolve 38 (-21) rows, 28 (-5) columns and 125 (-51) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 2.4195598 - largest nonzero change 0 ( 0%) - largest zero change 2.8265383e-05
Clp0000I Optimal - objective value 87.460802
Clp0000I Optimal - objective value 87.460802
Coin0511I After Postsolve, objective 87.460802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.460802
Clp0000I Optimal - objective value 87.460802
Clp0000I Optimal - objective value 87.460802
Coin0511I After Postsolve, objective 87.460802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.46080186 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 179 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.849%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.82752
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.6495 iterations 14
Cbc0038I Solution found of -24.6495
Cbc0038I Relaxing continuous gives -24.6495
Cbc0038I Rounding solution of -33.424 is better than previous of -24.6495

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -33.424 to -42.516 (0.01 seconds)
Cbc0038I Round again with cutoff of -47.0106
Cbc0038I Pass   2: suminf.    0.77310 (4) obj. -47.0106 iterations 4
Cbc0038I Pass   3: suminf.    0.66637 (3) obj. -47.0106 iterations 1
Cbc0038I Pass   4: suminf.    0.59942 (3) obj. -47.0106 iterations 6
Cbc0038I Pass   5: suminf.    0.51554 (3) obj. -47.0106 iterations 1
Cbc0038I Pass   6: suminf.    0.77378 (4) obj. -47.0106 iterations 4
Cbc0038I Pass   7: suminf.    0.99704 (4) obj. -47.0106 iterations 10
Cbc0038I Pass   8: suminf.    0.99704 (4) obj. -47.0106 iterations 1
Cbc0038I Pass   9: suminf.    0.51073 (3) obj. -47.0106 iterations 5
Cbc0038I Pass  10: suminf.    0.51073 (3) obj. -47.0106 iterations 0
Cbc0038I Pass  11: suminf.    0.91927 (3) obj. -47.0106 iterations 2
Cbc0038I Pass  12: suminf.    0.46106 (2) obj. -47.0106 iterations 2
Cbc0038I Pass  13: suminf.    0.46106 (2) obj. -47.0106 iterations 1
Cbc0038I Pass  14: suminf.    0.46106 (2) obj. -47.0106 iterations 1
Cbc0038I Pass  15: suminf.    0.51073 (3) obj. -47.0106 iterations 3
Cbc0038I Pass  16: suminf.    0.51073 (3) obj. -47.0106 iterations 0
Cbc0038I Pass  17: suminf.    0.91927 (3) obj. -47.0106 iterations 2
Cbc0038I Pass  18: suminf.    1.97751 (8) obj. -47.0106 iterations 11
Cbc0038I Pass  19: suminf.    1.67781 (5) obj. -47.0106 iterations 4
Cbc0038I Pass  20: suminf.    1.40915 (4) obj. -47.0106 iterations 9
Cbc0038I Pass  21: suminf.    1.18800 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  22: suminf.    1.18800 (4) obj. -47.0106 iterations 0
Cbc0038I Pass  23: suminf.    1.40825 (4) obj. -47.0106 iterations 6
Cbc0038I Pass  24: suminf.    1.15929 (4) obj. -47.0106 iterations 3
Cbc0038I Pass  25: suminf.    1.15310 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  26: suminf.    1.33447 (4) obj. -47.0106 iterations 5
Cbc0038I Pass  27: suminf.    1.33447 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  28: suminf.    1.26300 (4) obj. -47.0106 iterations 4
Cbc0038I Pass  29: suminf.    1.10783 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  30: suminf.    1.44859 (4) obj. -47.0106 iterations 2
Cbc0038I Pass  31: suminf.    2.94180 (9) obj. -47.0106 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 37 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -42.516 - took 0.04 seconds
Cbc0012I Integer solution of -42.51599 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 20 rows 16 columns
Cbc0031I 8 added rows had average density of 29.5
Cbc0013I At root node, 8 cuts changed objective from -87.460802 to -61.371488 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 640 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -42.61414 found by strong branching after 1977 iterations and 7 nodes (0.17 seconds)
Cbc0001I Search completed - best objective -42.61414000000001, took 2045 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 114 times (972 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 59 (-7) columns and 599 (-124) elements
Clp1000I sum of infeasibilities 3.35233e-08 - average 6.20801e-10, 37 fixed columns
Coin0506I Presolve 17 (-37) rows, 22 (-37) columns and 72 (-527) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.6131884 - largest nonzero change 1.3480774e-05 ( 0.0005126734%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 38.233252
Clp0000I Optimal - objective value 38.233252
Coin0511I After Postsolve, objective 38.233252, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8143988 - largest nonzero change 2.2058263e-05 ( 0.0018167249%) - largest zero change 1.9016319e-05
Clp0000I Optimal - objective value 119.41972
Clp0000I Optimal - objective value 119.41972
Clp0000I Optimal - objective value 119.41972
Coin0511I After Postsolve, objective 119.41972, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.4197232 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 59 columns (59 integer (59 of which binary)) and 604 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.834%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.1208
Cbc0038I Pass   1: suminf.    2.23570 (17) obj. -50.6206 iterations 21
Cbc0038I Pass   2: suminf.    2.23570 (17) obj. -50.6206 iterations 1
Cbc0038I Solution found of -12.363
Cbc0038I Rounding solution of -26.3069 is better than previous of -12.363

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -34.5188
Cbc0038I Pass   3: suminf.    2.23570 (17) obj. -50.6206 iterations 0
Cbc0038I Pass   4: suminf.    2.23570 (17) obj. -50.6206 iterations 1
Cbc0038I Pass   5: suminf.    0.95456 (8) obj. -34.5188 iterations 18
Cbc0038I Pass   6: suminf.    0.39653 (2) obj. -34.5188 iterations 13
Cbc0038I Pass   7: suminf.    0.07312 (2) obj. -36.0798 iterations 3
Cbc0038I Pass   8: suminf.    0.16182 (2) obj. -34.5188 iterations 4
Cbc0038I Pass   9: suminf.    1.31017 (6) obj. -34.5188 iterations 13
Cbc0038I Pass  10: suminf.    1.31017 (6) obj. -34.5188 iterations 3
Cbc0038I Solution found of -35.007
Cbc0038I Rounding solution of -38.007 is better than previous of -35.007

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -52.0908
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  11: suminf.    2.36420 (22) obj. -52.0908 iterations 3
Cbc0038I Pass  12: suminf.    2.36420 (22) obj. -52.0908 iterations 0
Cbc0038I Pass  13: suminf.    1.43515 (7) obj. -52.0908 iterations 36
Cbc0038I Pass  14: suminf.    1.43515 (7) obj. -52.0908 iterations 1
Cbc0038I Pass  15: suminf.    1.00099 (4) obj. -52.0908 iterations 5
Cbc0038I Pass  16: suminf.    1.00099 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  17: suminf.    0.77450 (2) obj. -52.0908 iterations 5
Cbc0038I Pass  18: suminf.    0.65376 (2) obj. -54.2154 iterations 2
Cbc0038I Pass  19: suminf.    2.89473 (7) obj. -52.0908 iterations 12
Cbc0038I Pass  20: suminf.    2.02578 (6) obj. -52.0908 iterations 6
Cbc0038I Pass  21: suminf.    1.32992 (4) obj. -52.0908 iterations 10
Cbc0038I Pass  22: suminf.    1.31118 (3) obj. -52.0908 iterations 4
Cbc0038I Pass  23: suminf.    1.27984 (3) obj. -53.5494 iterations 3
Cbc0038I Pass  24: suminf.    1.17278 (3) obj. -52.0908 iterations 2
Cbc0038I Pass  25: suminf.    1.31118 (3) obj. -52.0908 iterations 3
Cbc0038I Pass  26: suminf.    2.48278 (9) obj. -52.0908 iterations 17
Cbc0038I Pass  27: suminf.    1.95229 (8) obj. -52.0908 iterations 7
Cbc0038I Pass  28: suminf.    1.99540 (5) obj. -52.0908 iterations 7
Cbc0038I Pass  29: suminf.    1.99540 (5) obj. -52.0908 iterations 0
Cbc0038I Pass  30: suminf.    1.85343 (5) obj. -52.0908 iterations 4
Cbc0038I Pass  31: suminf.    1.83327 (5) obj. -52.0908 iterations 1
Cbc0038I Pass  32: suminf.    1.68954 (4) obj. -52.0908 iterations 6
Cbc0038I Pass  33: suminf.    1.68954 (4) obj. -52.0908 iterations 1
Cbc0038I Pass  34: suminf.    1.07426 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  35: suminf.    0.99416 (4) obj. -52.0908 iterations 3
Cbc0038I Pass  36: suminf.    1.23942 (5) obj. -52.0908 iterations 4
Cbc0038I Pass  37: suminf.    0.94180 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  38: suminf.    0.92298 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  39: suminf.    0.92298 (4) obj. -52.0908 iterations 1
Cbc0038I Pass  40: suminf.    1.23942 (5) obj. -52.0908 iterations 4
Cbc0038I Rounding solution of -39.1211 is better than previous of -38.007

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -39.1211 to -42.516 (0.03 seconds)
Cbc0038I Round again with cutoff of -68.9912
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  40: suminf.    3.41394 (22) obj. -68.9912 iterations 0
Cbc0038I Pass  41: suminf.    3.41394 (22) obj. -68.9912 iterations 0
Cbc0038I Pass  42: suminf.    2.54737 (8) obj. -68.9912 iterations 33
Cbc0038I Pass  43: suminf.    2.32381 (8) obj. -68.9912 iterations 2
Cbc0038I Pass  44: suminf.    2.26107 (6) obj. -68.9912 iterations 8
Cbc0038I Pass  45: suminf.    1.70610 (5) obj. -68.9912 iterations 5
Cbc0038I Pass  46: suminf.    2.17047 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  47: suminf.    1.74685 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  48: suminf.    1.98681 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  49: suminf.    4.02814 (11) obj. -68.9912 iterations 23
Cbc0038I Pass  50: suminf.    3.65530 (10) obj. -68.9912 iterations 5
Cbc0038I Pass  51: suminf.    2.99687 (9) obj. -69.9243 iterations 5
Cbc0038I Pass  52: suminf.    2.11729 (6) obj. -68.9912 iterations 12
Cbc0038I Pass  53: suminf.    2.10771 (6) obj. -68.9912 iterations 2
Cbc0038I Pass  54: suminf.    2.26197 (6) obj. -68.9912 iterations 4
Cbc0038I Pass  55: suminf.    1.81340 (7) obj. -68.9912 iterations 3
Cbc0038I Pass  56: suminf.    1.81335 (7) obj. -68.9912 iterations 1
Cbc0038I Pass  57: suminf.    1.86664 (5) obj. -68.9912 iterations 8
Cbc0038I Pass  58: suminf.    1.86664 (5) obj. -68.9912 iterations 3
Cbc0038I Pass  59: suminf.    1.98681 (6) obj. -68.9912 iterations 4
Cbc0038I Pass  60: suminf.    1.70610 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  61: suminf.    2.17047 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  62: suminf.    1.74685 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  63: suminf.    2.50095 (9) obj. -68.9912 iterations 11
Cbc0038I Pass  64: suminf.    2.50095 (9) obj. -68.9912 iterations 0
Cbc0038I Pass  65: suminf.    1.98681 (6) obj. -68.9912 iterations 9
Cbc0038I Pass  66: suminf.    1.70610 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  67: suminf.    2.17047 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  68: suminf.    1.74685 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  69: suminf.    1.98681 (6) obj. -68.9912 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -42.516 - took 0.03 seconds
Cbc0012I Integer solution of -42.51599 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 54 rows 59 columns, reduced to 7 rows 8 columns
Cbc0031I 17 added rows had average density of 15.647059
Cbc0013I At root node, 17 cuts changed objective from -108.42556 to -49.203059 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 749 row cuts average 2.5 elements, 16 column cuts (16 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 360 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 146 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -42.51599 best solution, best possible -49.202937 (1.50 seconds)
Cbc0012I Integer solution of -42.61414 found by DiveCoefficient after 1271 iterations and 6 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -42.61414000000001, took 1303 iterations and 6 nodes (1.54 seconds)
Cbc0032I Strong branching done 86 times (582 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.54

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 6.56025e-05 - average 1.11191e-06, 4 fixed columns
Coin0506I Presolve 38 (-21) rows, 28 (-5) columns and 125 (-51) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 2.4195598 - largest nonzero change 0 ( 0%) - largest zero change 2.8265383e-05
Clp0000I Optimal - objective value 87.460802
Clp0000I Optimal - objective value 87.460802
Coin0511I After Postsolve, objective 87.460802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.460802
Clp0000I Optimal - objective value 87.460802
Clp0000I Optimal - objective value 87.460802
Coin0511I After Postsolve, objective 87.460802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.46080186 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 179 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.849%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.82752
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.6495 iterations 14
Cbc0038I Solution found of -24.6495
Cbc0038I Relaxing continuous gives -24.6495
Cbc0038I Rounding solution of -33.424 is better than previous of -24.6495

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -33.424 to -42.516 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.0106
Cbc0038I Pass   2: suminf.    0.77310 (4) obj. -47.0106 iterations 4
Cbc0038I Pass   3: suminf.    0.66637 (3) obj. -47.0106 iterations 1
Cbc0038I Pass   4: suminf.    0.59942 (3) obj. -47.0106 iterations 6
Cbc0038I Pass   5: suminf.    0.51554 (3) obj. -47.0106 iterations 1
Cbc0038I Pass   6: suminf.    0.77378 (4) obj. -47.0106 iterations 4
Cbc0038I Pass   7: suminf.    0.99704 (4) obj. -47.0106 iterations 10
Cbc0038I Pass   8: suminf.    0.99704 (4) obj. -47.0106 iterations 1
Cbc0038I Pass   9: suminf.    0.51073 (3) obj. -47.0106 iterations 5
Cbc0038I Pass  10: suminf.    0.51073 (3) obj. -47.0106 iterations 0
Cbc0038I Pass  11: suminf.    0.91927 (3) obj. -47.0106 iterations 2
Cbc0038I Pass  12: suminf.    0.46106 (2) obj. -47.0106 iterations 2
Cbc0038I Pass  13: suminf.    0.46106 (2) obj. -47.0106 iterations 1
Cbc0038I Pass  14: suminf.    0.46106 (2) obj. -47.0106 iterations 1
Cbc0038I Pass  15: suminf.    0.51073 (3) obj. -47.0106 iterations 3
Cbc0038I Pass  16: suminf.    0.51073 (3) obj. -47.0106 iterations 0
Cbc0038I Pass  17: suminf.    0.91927 (3) obj. -47.0106 iterations 2
Cbc0038I Pass  18: suminf.    1.97751 (8) obj. -47.0106 iterations 11
Cbc0038I Pass  19: suminf.    1.67781 (5) obj. -47.0106 iterations 4
Cbc0038I Pass  20: suminf.    1.40915 (4) obj. -47.0106 iterations 9
Cbc0038I Pass  21: suminf.    1.18800 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  22: suminf.    1.18800 (4) obj. -47.0106 iterations 0
Cbc0038I Pass  23: suminf.    1.40825 (4) obj. -47.0106 iterations 6
Cbc0038I Pass  24: suminf.    1.15929 (4) obj. -47.0106 iterations 3
Cbc0038I Pass  25: suminf.    1.15310 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  26: suminf.    1.33447 (4) obj. -47.0106 iterations 5
Cbc0038I Pass  27: suminf.    1.33447 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  28: suminf.    1.26300 (4) obj. -47.0106 iterations 4
Cbc0038I Pass  29: suminf.    1.10783 (4) obj. -47.0106 iterations 1
Cbc0038I Pass  30: suminf.    1.44859 (4) obj. -47.0106 iterations 2
Cbc0038I Pass  31: suminf.    2.94180 (9) obj. -47.0106 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 37 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -42.516 - took 0.02 seconds
Cbc0012I Integer solution of -42.51599 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 20 rows 16 columns
Cbc0031I 8 added rows had average density of 29.5
Cbc0013I At root node, 8 cuts changed objective from -87.460802 to -61.371488 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 640 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0016I Integer solution of -42.61414 found by strong branching after 1977 iterations and 7 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -42.61414000000001, took 2045 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 114 times (972 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 59 (-8) columns and 599 (-125) elements
Clp1000I sum of infeasibilities 3.35233e-08 - average 6.20801e-10, 37 fixed columns
Coin0506I Presolve 17 (-37) rows, 22 (-37) columns and 72 (-527) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.6131884 - largest nonzero change 1.3480774e-05 ( 0.0005126734%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 38.233252
Clp0000I Optimal - objective value 38.233252
Coin0511I After Postsolve, objective 38.233252, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8143988 - largest nonzero change 2.2058263e-05 ( 0.0018167249%) - largest zero change 1.9016319e-05
Clp0000I Optimal - objective value 119.41972
Clp0000I Optimal - objective value 119.41972
Clp0000I Optimal - objective value 119.41972
Coin0511I After Postsolve, objective 119.41972, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.4197232 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 59 columns (59 integer (59 of which binary)) and 604 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.834%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.1208
Cbc0038I Pass   1: suminf.    2.23570 (17) obj. -50.6206 iterations 21
Cbc0038I Pass   2: suminf.    2.23570 (17) obj. -50.6206 iterations 1
Cbc0038I Solution found of -12.363
Cbc0038I Rounding solution of -26.3069 is better than previous of -12.363

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -34.5188
Cbc0038I Pass   3: suminf.    2.23570 (17) obj. -50.6206 iterations 0
Cbc0038I Pass   4: suminf.    2.23570 (17) obj. -50.6206 iterations 1
Cbc0038I Pass   5: suminf.    0.95456 (8) obj. -34.5188 iterations 18
Cbc0038I Pass   6: suminf.    0.39653 (2) obj. -34.5188 iterations 13
Cbc0038I Pass   7: suminf.    0.07312 (2) obj. -36.0798 iterations 3
Cbc0038I Pass   8: suminf.    0.16182 (2) obj. -34.5188 iterations 4
Cbc0038I Pass   9: suminf.    1.31017 (6) obj. -34.5188 iterations 13
Cbc0038I Pass  10: suminf.    1.31017 (6) obj. -34.5188 iterations 3
Cbc0038I Solution found of -35.007
Cbc0038I Rounding solution of -38.007 is better than previous of -35.007

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -52.0908
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  11: suminf.    2.36420 (22) obj. -52.0908 iterations 3
Cbc0038I Pass  12: suminf.    2.36420 (22) obj. -52.0908 iterations 0
Cbc0038I Pass  13: suminf.    1.43515 (7) obj. -52.0908 iterations 36
Cbc0038I Pass  14: suminf.    1.43515 (7) obj. -52.0908 iterations 1
Cbc0038I Pass  15: suminf.    1.00099 (4) obj. -52.0908 iterations 5
Cbc0038I Pass  16: suminf.    1.00099 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  17: suminf.    0.77450 (2) obj. -52.0908 iterations 5
Cbc0038I Pass  18: suminf.    0.65376 (2) obj. -54.2154 iterations 2
Cbc0038I Pass  19: suminf.    2.89473 (7) obj. -52.0908 iterations 12
Cbc0038I Pass  20: suminf.    2.02578 (6) obj. -52.0908 iterations 6
Cbc0038I Pass  21: suminf.    1.32992 (4) obj. -52.0908 iterations 10
Cbc0038I Pass  22: suminf.    1.31118 (3) obj. -52.0908 iterations 4
Cbc0038I Pass  23: suminf.    1.27984 (3) obj. -53.5494 iterations 3
Cbc0038I Pass  24: suminf.    1.17278 (3) obj. -52.0908 iterations 2
Cbc0038I Pass  25: suminf.    1.31118 (3) obj. -52.0908 iterations 3
Cbc0038I Pass  26: suminf.    2.48278 (9) obj. -52.0908 iterations 17
Cbc0038I Pass  27: suminf.    1.95229 (8) obj. -52.0908 iterations 7
Cbc0038I Pass  28: suminf.    1.99540 (5) obj. -52.0908 iterations 7
Cbc0038I Pass  29: suminf.    1.99540 (5) obj. -52.0908 iterations 0
Cbc0038I Pass  30: suminf.    1.85343 (5) obj. -52.0908 iterations 4
Cbc0038I Pass  31: suminf.    1.83327 (5) obj. -52.0908 iterations 1
Cbc0038I Pass  32: suminf.    1.68954 (4) obj. -52.0908 iterations 6
Cbc0038I Pass  33: suminf.    1.68954 (4) obj. -52.0908 iterations 1
Cbc0038I Pass  34: suminf.    1.07426 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  35: suminf.    0.99416 (4) obj. -52.0908 iterations 3
Cbc0038I Pass  36: suminf.    1.23942 (5) obj. -52.0908 iterations 4
Cbc0038I Pass  37: suminf.    0.94180 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  38: suminf.    0.92298 (4) obj. -52.0908 iterations 2
Cbc0038I Pass  39: suminf.    0.92298 (4) obj. -52.0908 iterations 1
Cbc0038I Pass  40: suminf.    1.23942 (5) obj. -52.0908 iterations 4
Cbc0038I Rounding solution of -39.1211 is better than previous of -38.007

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -39.1211 to -42.516 (0.03 seconds)
Cbc0038I Round again with cutoff of -68.9912
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  40: suminf.    3.41394 (22) obj. -68.9912 iterations 0
Cbc0038I Pass  41: suminf.    3.41394 (22) obj. -68.9912 iterations 0
Cbc0038I Pass  42: suminf.    2.54737 (8) obj. -68.9912 iterations 33
Cbc0038I Pass  43: suminf.    2.32381 (8) obj. -68.9912 iterations 2
Cbc0038I Pass  44: suminf.    2.26107 (6) obj. -68.9912 iterations 8
Cbc0038I Pass  45: suminf.    1.70610 (5) obj. -68.9912 iterations 5
Cbc0038I Pass  46: suminf.    2.17047 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  47: suminf.    1.74685 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  48: suminf.    1.98681 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  49: suminf.    4.02814 (11) obj. -68.9912 iterations 23
Cbc0038I Pass  50: suminf.    3.65530 (10) obj. -68.9912 iterations 5
Cbc0038I Pass  51: suminf.    2.99687 (9) obj. -69.9243 iterations 5
Cbc0038I Pass  52: suminf.    2.11729 (6) obj. -68.9912 iterations 12
Cbc0038I Pass  53: suminf.    2.10771 (6) obj. -68.9912 iterations 2
Cbc0038I Pass  54: suminf.    2.26197 (6) obj. -68.9912 iterations 4
Cbc0038I Pass  55: suminf.    1.81340 (7) obj. -68.9912 iterations 3
Cbc0038I Pass  56: suminf.    1.81335 (7) obj. -68.9912 iterations 1
Cbc0038I Pass  57: suminf.    1.86664 (5) obj. -68.9912 iterations 8
Cbc0038I Pass  58: suminf.    1.86664 (5) obj. -68.9912 iterations 3
Cbc0038I Pass  59: suminf.    1.98681 (6) obj. -68.9912 iterations 4
Cbc0038I Pass  60: suminf.    1.70610 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  61: suminf.    2.17047 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  62: suminf.    1.74685 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  63: suminf.    2.50095 (9) obj. -68.9912 iterations 11
Cbc0038I Pass  64: suminf.    2.50095 (9) obj. -68.9912 iterations 0
Cbc0038I Pass  65: suminf.    1.98681 (6) obj. -68.9912 iterations 9
Cbc0038I Pass  66: suminf.    1.70610 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  67: suminf.    2.17047 (6) obj. -68.9912 iterations 5
Cbc0038I Pass  68: suminf.    1.74685 (5) obj. -68.9912 iterations 4
Cbc0038I Pass  69: suminf.    1.98681 (6) obj. -68.9912 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -42.516 - took 0.02 seconds
Cbc0012I Integer solution of -42.51599 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 54 rows 59 columns, reduced to 7 rows 8 columns
Cbc0031I 17 added rows had average density of 15.647059
Cbc0013I At root node, 17 cuts changed objective from -108.42556 to -49.203059 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 749 row cuts average 2.5 elements, 16 column cuts (16 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 360 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 146 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.843 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -42.51599 best solution, best possible -49.202937 (1.70 seconds)
Cbc0012I Integer solution of -42.61414 found by DiveCoefficient after 1271 iterations and 6 nodes (1.74 seconds)
Cbc0001I Search completed - best objective -42.61414000000001, took 1303 iterations and 6 nodes (1.74 seconds)
Cbc0032I Strong branching done 86 times (582 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.75

