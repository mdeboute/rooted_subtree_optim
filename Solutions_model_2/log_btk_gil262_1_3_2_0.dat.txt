Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 3.82687e-05 - average 7.57796e-08, 142 fixed columns
Coin0506I Presolve 215 (-290) rows, 119 (-143) columns and 645 (-857) elements
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 0.16768406 - largest nonzero change 0 ( 0%) - largest zero change 2.9227548e-05
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Coin0511I After Postsolve, objective 155.9043, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13376464 - largest nonzero change 0 ( 0%) - largest zero change 2.9755385e-05
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Coin0511I After Postsolve, objective 155.9043, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 155.9043009 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 11.3013
Cbc0038I Solution found of -9.45514
Cbc0038I Relaxing continuous gives -18.024
Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 107 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -18.024 to -73.9997 (0.08 seconds)
Cbc0038I Round again with cutoff of -82.1903
Cbc0038I Pass   1: suminf.    3.35040 (30) obj. -82.1903 iterations 189
Cbc0038I Pass   2: suminf.    2.85649 (10) obj. -82.1903 iterations 59
Cbc0038I Pass   3: suminf.    2.24942 (9) obj. -82.1903 iterations 12
Cbc0038I Pass   4: suminf.    2.46313 (8) obj. -82.1903 iterations 48
Cbc0038I Pass   5: suminf.    2.06933 (8) obj. -82.1903 iterations 15
Cbc0038I Pass   6: suminf.    2.74397 (9) obj. -82.1903 iterations 26
Cbc0038I Pass   7: suminf.    2.15284 (7) obj. -82.1903 iterations 7
Cbc0038I Pass   8: suminf.    1.80524 (7) obj. -82.1903 iterations 7
Cbc0038I Pass   9: suminf.    2.33681 (6) obj. -82.1903 iterations 39
Cbc0038I Pass  10: suminf.    1.82159 (6) obj. -82.1903 iterations 11
Cbc0038I Pass  11: suminf.    1.58613 (7) obj. -82.1903 iterations 29
Cbc0038I Pass  12: suminf.    1.54462 (7) obj. -82.1903 iterations 6
Cbc0038I Pass  13: suminf.    2.32221 (7) obj. -82.1903 iterations 25
Cbc0038I Pass  14: suminf.    1.58036 (7) obj. -82.1903 iterations 25
Cbc0038I Pass  15: suminf.    1.38839 (6) obj. -82.1903 iterations 5
Cbc0038I Pass  16: suminf.    1.87041 (9) obj. -82.1903 iterations 37
Cbc0038I Pass  17: suminf.    1.64414 (6) obj. -82.1903 iterations 11
Cbc0038I Pass  18: suminf.    2.58499 (8) obj. -82.1903 iterations 42
Cbc0038I Pass  19: suminf.    1.93632 (7) obj. -82.1903 iterations 1
Cbc0038I Pass  20: suminf.    2.09629 (9) obj. -82.1903 iterations 29
Cbc0038I Pass  21: suminf.    2.05586 (9) obj. -82.1903 iterations 3
Cbc0038I Pass  22: suminf.    3.16706 (9) obj. -82.1903 iterations 23
Cbc0038I Pass  23: suminf.    2.30747 (9) obj. -82.1903 iterations 12
Cbc0038I Pass  24: suminf.    2.30747 (9) obj. -82.1903 iterations 2
Cbc0038I Pass  25: suminf.    2.88635 (9) obj. -82.1903 iterations 40
Cbc0038I Pass  26: suminf.    2.37359 (8) obj. -82.1903 iterations 12
Cbc0038I Pass  27: suminf.    2.06933 (8) obj. -82.1903 iterations 19
Cbc0038I Pass  28: suminf.    2.74397 (9) obj. -82.1903 iterations 26
Cbc0038I Pass  29: suminf.    2.15284 (7) obj. -82.1903 iterations 7
Cbc0038I Pass  30: suminf.    1.80524 (7) obj. -82.1903 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 136 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -73.9997 to -75.4219 (0.15 seconds)
Cbc0038I Round again with cutoff of -96.9331
Cbc0038I Pass  30: suminf.    4.25668 (38) obj. -96.9331 iterations 9
Cbc0038I Pass  31: suminf.    3.73821 (11) obj. -96.9331 iterations 73
Cbc0038I Pass  32: suminf.    2.90004 (10) obj. -96.9331 iterations 47
Cbc0038I Pass  33: suminf.    3.42709 (9) obj. -96.9331 iterations 35
Cbc0038I Pass  34: suminf.    2.90866 (13) obj. -96.9331 iterations 25
Cbc0038I Pass  35: suminf.    3.54514 (12) obj. -96.9331 iterations 33
Cbc0038I Pass  36: suminf.    2.98835 (10) obj. -96.9331 iterations 7
Cbc0038I Pass  37: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  38: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  39: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  40: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  41: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  42: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  43: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  44: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  45: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  46: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  47: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  48: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  49: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  50: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  51: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  52: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  53: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  54: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  55: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  56: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  57: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  58: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  59: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 138 rows 80 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -75.4219 - took 0.22 seconds
Cbc0012I Integer solution of -75.4219 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 108 rows 64 columns
Cbc0031I 28 added rows had average density of 141.25
Cbc0013I At root node, 28 cuts changed objective from -155.9043 to -135.70914 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17217 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.410 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1743 row cuts average 259.3 elements, 0 column cuts (0 active)  in 0.304 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 252.1 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -75.4219 best solution, best possible -135.70914 (3.00 seconds)
Cbc0010I After 37 nodes, 13 on tree, -75.4219 best solution, best possible -135.70914 (3.71 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 12 columns
Cbc0012I Integer solution of -75.7902 found by RINS after 13174 iterations and 41 nodes (3.73 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -76.09019 found by rounding after 15556 iterations and 119 nodes (3.98 seconds)
Cbc0012I Integer solution of -78.098233 found by rounding after 19053 iterations and 240 nodes (4.26 seconds)
Cbc0010I After 273 nodes, 14 on tree, -78.098233 best solution, best possible -135.70914 (4.42 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -78.11832 found by rounding after 22416 iterations and 352 nodes (4.61 seconds)
Cbc0012I Integer solution of -78.78661 found by rounding after 22517 iterations and 354 nodes (4.62 seconds)
Cbc0012I Integer solution of -81.00763 found by rounding after 23465 iterations and 385 nodes (4.74 seconds)
Cbc0012I Integer solution of -81.0545 found by rounding after 23772 iterations and 395 nodes (4.76 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 0 rows 0 columns
Cbc0010I After 475 nodes, 12 on tree, -81.0545 best solution, best possible -135.70914 (5.12 seconds)
Cbc0001I Search completed - best objective -81.05449999999999, took 27810 iterations and 504 nodes (5.23 seconds)
Cbc0032I Strong branching done 3112 times (58184 iterations), fathomed 144 nodes and fixed 238 variables
Cbc0035I Maximum depth 51, 3599 variables fixed on reduced cost
Total time (CPU seconds):       5.11   (Wallclock seconds):       5.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 364 (-162) rows, 381 (-143) columns and 16965 (-18771) elements
Clp1000I sum of infeasibilities 1.15043e-05 - average 3.16053e-08, 197 fixed columns
Coin0506I Presolve 155 (-209) rows, 182 (-199) columns and 652 (-16313) elements
Clp0006I 0  Obj 14.673469 Primal inf 1.8439425e-05 (2) Dual inf 2.0200001e+11 (177)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 0.13971793 - largest nonzero change 2.8587626e-05 ( 0.0025988751%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 16.11471
Clp0000I Optimal - objective value 16.11471
Coin0511I After Postsolve, objective 16.11471, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 16.11471 Dual inf 393.85222 (126)
Clp0014I Perturbing problem by 0.001% of 1.5905963 - largest nonzero change 2.7151435e-05 ( 0.0027151435%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 213.68603
Clp0000I Optimal - objective value 213.68603
Clp0000I Optimal - objective value 213.68603
Coin0511I After Postsolve, objective 213.68603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 213.6860318 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 364 rows, 381 columns (381 integer (381 of which binary)) and 16965 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.672%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 118 integers unsatisfied sum - 7.68526
Cbc0038I Pass   1: suminf.    4.75856 (101) obj. -185.644 iterations 39
Cbc0038I Pass   2: suminf.    4.75856 (101) obj. -185.644 iterations 0
Cbc0038I Pass   3: suminf.    3.42292 (76) obj. -125.119 iterations 25
Cbc0038I Pass   4: suminf.    2.82076 (64) obj. -109.921 iterations 12
Cbc0038I Pass   5: suminf.    1.75118 (42) obj. -80.4255 iterations 22
Cbc0038I Pass   6: suminf.    1.04434 (27) obj. -63.2733 iterations 15
Cbc0038I Pass   7: suminf.    0.05971 (2) obj. -35.4037 iterations 25
Cbc0038I Solution found of -33.4635
Cbc0038I Rounding solution of -49.4293 is better than previous of -33.4635

Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 364 rows 381 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -65.855
Cbc0038I Pass   8: suminf.    4.75856 (101) obj. -185.644 iterations 0
Cbc0038I Pass   9: suminf.    4.75856 (101) obj. -185.644 iterations 0
Cbc0038I Pass  10: suminf.    3.52498 (78) obj. -127.966 iterations 23
Cbc0038I Pass  11: suminf.    2.42705 (56) obj. -99.462 iterations 22
Cbc0038I Pass  12: suminf.    1.41822 (35) obj. -72.8061 iterations 21
Cbc0038I Pass  13: suminf.    1.27286 (15) obj. -65.855 iterations 42
Cbc0038I Pass  14: suminf.    1.01014 (14) obj. -65.855 iterations 21
Cbc0038I Pass  15: suminf.    0.90417 (4) obj. -65.855 iterations 31
Cbc0038I Pass  16: suminf.    0.76427 (4) obj. -65.855 iterations 24
Cbc0038I Pass  17: suminf.    0.90316 (3) obj. -65.855 iterations 15
Cbc0038I Pass  18: suminf.    2.24757 (24) obj. -65.855 iterations 80
Cbc0038I Pass  19: suminf.    1.65739 (20) obj. -71.8554 iterations 23
Cbc0038I Pass  20: suminf.    1.55557 (13) obj. -65.855 iterations 53
Cbc0038I Pass  21: suminf.    1.47210 (12) obj. -65.855 iterations 6
Cbc0038I Pass  22: suminf.    1.46441 (6) obj. -65.855 iterations 48
Cbc0038I Pass  23: suminf.    1.14286 (8) obj. -65.855 iterations 22
Cbc0038I Pass  24: suminf.    0.51381 (4) obj. -65.855 iterations 21
Cbc0038I Pass  25: suminf.    0.51129 (6) obj. -65.855 iterations 3
Cbc0038I Pass  26: suminf.    1.05129 (6) obj. -65.855 iterations 21
Cbc0038I Pass  27: suminf.    0.51200 (4) obj. -65.855 iterations 18
Cbc0038I Pass  28: suminf.    1.90361 (29) obj. -71.2157 iterations 65
Cbc0038I Pass  29: suminf.    1.51952 (27) obj. -69.6288 iterations 17
Cbc0038I Pass  30: suminf.    1.34692 (13) obj. -65.855 iterations 32
Cbc0038I Pass  31: suminf.    1.34692 (13) obj. -65.855 iterations 0
Cbc0038I Pass  32: suminf.    1.11178 (6) obj. -65.855 iterations 29
Cbc0038I Pass  33: suminf.    1.05969 (5) obj. -65.855 iterations 12
Cbc0038I Pass  34: suminf.    0.98622 (5) obj. -65.855 iterations 11
Cbc0038I Pass  35: suminf.    0.45877 (5) obj. -65.855 iterations 9
Cbc0038I Pass  36: suminf.    1.05969 (5) obj. -65.855 iterations 11
Cbc0038I Pass  37: suminf.    1.70734 (23) obj. -65.855 iterations 57
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 364 rows 381 columns, reduced to 132 rows 144 columns - 33 fixed gives 95, 110 - ok now
Cbc0038I Full problem 364 rows 381 columns, reduced to 28 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -49.4293 - took 0.16 seconds
Cbc0012I Integer solution of -49.429253 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 15 rows 19 columns
Cbc0031I 142 added rows had average density of 66.507042
Cbc0013I At root node, 142 cuts changed objective from -213.68603 to -118.94004 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 37193 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.498 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3383 row cuts average 359.4 elements, 0 column cuts (0 active)  in 1.088 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 253 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5542 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.591 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2236 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 398 row cuts average 211.5 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 301 row cuts average 31.6 elements, 0 column cuts (0 active)  in 0.420 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -49.429253 best solution, best possible -118.94004 (7.61 seconds)
Cbc0010I After 1 nodes, 2 on tree, -49.429253 best solution, best possible -118.94004 (8.37 seconds)
Cbc0012I Integer solution of -49.82951 found by rounding after 13255 iterations and 3 nodes (8.76 seconds)
Cbc0012I Integer solution of -53.09664 found by DiveCoefficient after 13255 iterations and 3 nodes (8.76 seconds)
Cbc0012I Integer solution of -56.4172 found by DiveCoefficient after 13277 iterations and 4 nodes (8.83 seconds)
Cbc0012I Integer solution of -58.76978 found by DiveCoefficient after 13341 iterations and 5 nodes (8.93 seconds)
Cbc0010I After 11 nodes, 8 on tree, -58.76978 best solution, best possible -118.94004 (9.07 seconds)
Cbc0012I Integer solution of -72.14712 found by rounding after 13740 iterations and 14 nodes (9.12 seconds)
Cbc0004I Integer solution of -77.08203 found after 13913 iterations and 21 nodes (9.21 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 22 rows 30 columns
Cbc0016I Integer solution of -81.00763 found by strong branching after 14666 iterations and 48 nodes (9.61 seconds)
Cbc0010I After 65 nodes, 3 on tree, -81.00763 best solution, best possible -118.94004 (10.33 seconds)
Cbc0010I After 67 nodes, 5 on tree, -81.00763 best solution, best possible -118.94004 (11.51 seconds)
Cbc0010I After 69 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (12.57 seconds)
Cbc0010I After 87 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (13.30 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 75 rows 90 columns
Cbc0010I After 91 nodes, 8 on tree, -81.00763 best solution, best possible -118.94004 (14.06 seconds)
Cbc0010I After 163 nodes, 6 on tree, -81.00763 best solution, best possible -118.94004 (14.79 seconds)
Cbc0010I After 194 nodes, 4 on tree, -81.00763 best solution, best possible -118.94004 (15.65 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 95 rows 107 columns
Cbc0010I After 200 nodes, 6 on tree, -81.00763 best solution, best possible -118.94004 (17.13 seconds)
Cbc0010I After 258 nodes, 2 on tree, -81.00763 best solution, best possible -118.94004 (18.51 seconds)
Cbc0010I After 259 nodes, 3 on tree, -81.00763 best solution, best possible -118.94004 (20.04 seconds)
Cbc0010I After 260 nodes, 4 on tree, -81.00763 best solution, best possible -118.94004 (21.20 seconds)
Cbc0010I After 262 nodes, 6 on tree, -81.00763 best solution, best possible -118.94004 (22.35 seconds)
Cbc0010I After 265 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (23.25 seconds)
Cbc0010I After 269 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (23.99 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 154 rows 166 columns
Cbc0010I After 300 nodes, 8 on tree, -81.00763 best solution, best possible -118.94004 (26.11 seconds)
Cbc0010I After 354 nodes, 9 on tree, -81.00763 best solution, best possible -118.94004 (26.81 seconds)
Cbc0010I After 392 nodes, 2 on tree, -81.00763 best solution, best possible -115.12112 (27.61 seconds)
Cbc0010I After 395 nodes, 5 on tree, -81.00763 best solution, best possible -115.12112 (28.52 seconds)
Cbc0010I After 398 nodes, 8 on tree, -81.00763 best solution, best possible -115.12112 (29.32 seconds)
Cbc0010I After 408 nodes, 9 on tree, -81.00763 best solution, best possible -115.12112 (30.14 seconds)
Cbc0010I After 456 nodes, 14 on tree, -81.00763 best solution, best possible -115.12112 (30.87 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 58 rows 71 columns
Cbc0010I After 524 nodes, 14 on tree, -81.00763 best solution, best possible -115.12112 (31.58 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 117 rows 135 columns
Cbc0010I After 600 nodes, 11 on tree, -81.00763 best solution, best possible -115.12112 (33.23 seconds)
Cbc0012I Integer solution of -81.0545 found by DiveCoefficient after 59157 iterations and 640 nodes (33.77 seconds)
Cbc0001I Search completed - best objective -81.05449999999999, took 59372 iterations and 653 nodes (33.83 seconds)
Cbc0032I Strong branching done 3390 times (59263 iterations), fathomed 20 nodes and fixed 36 variables
Cbc0035I Maximum depth 31, 3933 variables fixed on reduced cost
Total time (CPU seconds):       33.20   (Wallclock seconds):       33.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 3.82687e-05 - average 7.57796e-08, 142 fixed columns
Coin0506I Presolve 215 (-290) rows, 119 (-143) columns and 645 (-857) elements
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 0.16768406 - largest nonzero change 0 ( 0%) - largest zero change 2.9227548e-05
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Coin0511I After Postsolve, objective 155.9043, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13376464 - largest nonzero change 0 ( 0%) - largest zero change 2.9755385e-05
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Clp0000I Optimal - objective value 155.9043
Coin0511I After Postsolve, objective 155.9043, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 155.9043009 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 11.3013
Cbc0038I Solution found of -9.45514
Cbc0038I Relaxing continuous gives -18.024
Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 107 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -18.024 to -73.9997 (0.08 seconds)
Cbc0038I Round again with cutoff of -82.1903
Cbc0038I Pass   1: suminf.    3.35040 (30) obj. -82.1903 iterations 189
Cbc0038I Pass   2: suminf.    2.85649 (10) obj. -82.1903 iterations 59
Cbc0038I Pass   3: suminf.    2.24942 (9) obj. -82.1903 iterations 12
Cbc0038I Pass   4: suminf.    2.46313 (8) obj. -82.1903 iterations 48
Cbc0038I Pass   5: suminf.    2.06933 (8) obj. -82.1903 iterations 15
Cbc0038I Pass   6: suminf.    2.74397 (9) obj. -82.1903 iterations 26
Cbc0038I Pass   7: suminf.    2.15284 (7) obj. -82.1903 iterations 7
Cbc0038I Pass   8: suminf.    1.80524 (7) obj. -82.1903 iterations 7
Cbc0038I Pass   9: suminf.    2.33681 (6) obj. -82.1903 iterations 39
Cbc0038I Pass  10: suminf.    1.82159 (6) obj. -82.1903 iterations 11
Cbc0038I Pass  11: suminf.    1.58613 (7) obj. -82.1903 iterations 29
Cbc0038I Pass  12: suminf.    1.54462 (7) obj. -82.1903 iterations 6
Cbc0038I Pass  13: suminf.    2.32221 (7) obj. -82.1903 iterations 25
Cbc0038I Pass  14: suminf.    1.58036 (7) obj. -82.1903 iterations 25
Cbc0038I Pass  15: suminf.    1.38839 (6) obj. -82.1903 iterations 5
Cbc0038I Pass  16: suminf.    1.87041 (9) obj. -82.1903 iterations 37
Cbc0038I Pass  17: suminf.    1.64414 (6) obj. -82.1903 iterations 11
Cbc0038I Pass  18: suminf.    2.58499 (8) obj. -82.1903 iterations 42
Cbc0038I Pass  19: suminf.    1.93632 (7) obj. -82.1903 iterations 1
Cbc0038I Pass  20: suminf.    2.09629 (9) obj. -82.1903 iterations 29
Cbc0038I Pass  21: suminf.    2.05586 (9) obj. -82.1903 iterations 3
Cbc0038I Pass  22: suminf.    3.16706 (9) obj. -82.1903 iterations 23
Cbc0038I Pass  23: suminf.    2.30747 (9) obj. -82.1903 iterations 12
Cbc0038I Pass  24: suminf.    2.30747 (9) obj. -82.1903 iterations 2
Cbc0038I Pass  25: suminf.    2.88635 (9) obj. -82.1903 iterations 40
Cbc0038I Pass  26: suminf.    2.37359 (8) obj. -82.1903 iterations 12
Cbc0038I Pass  27: suminf.    2.06933 (8) obj. -82.1903 iterations 19
Cbc0038I Pass  28: suminf.    2.74397 (9) obj. -82.1903 iterations 26
Cbc0038I Pass  29: suminf.    2.15284 (7) obj. -82.1903 iterations 7
Cbc0038I Pass  30: suminf.    1.80524 (7) obj. -82.1903 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 136 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -73.9997 to -75.4219 (0.15 seconds)
Cbc0038I Round again with cutoff of -96.9331
Cbc0038I Pass  30: suminf.    4.25668 (38) obj. -96.9331 iterations 9
Cbc0038I Pass  31: suminf.    3.73821 (11) obj. -96.9331 iterations 73
Cbc0038I Pass  32: suminf.    2.90004 (10) obj. -96.9331 iterations 47
Cbc0038I Pass  33: suminf.    3.42709 (9) obj. -96.9331 iterations 35
Cbc0038I Pass  34: suminf.    2.90866 (13) obj. -96.9331 iterations 25
Cbc0038I Pass  35: suminf.    3.54514 (12) obj. -96.9331 iterations 33
Cbc0038I Pass  36: suminf.    2.98835 (10) obj. -96.9331 iterations 7
Cbc0038I Pass  37: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  38: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  39: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  40: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  41: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  42: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  43: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  44: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  45: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  46: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  47: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  48: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  49: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  50: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  51: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  52: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  53: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  54: suminf.    2.98835 (10) obj. -96.9331 iterations 12
Cbc0038I Pass  55: suminf.    2.98835 (10) obj. -96.9331 iterations 0
Cbc0038I Pass  56: suminf.    3.18681 (9) obj. -96.9331 iterations 14
Cbc0038I Pass  57: suminf.    2.83209 (8) obj. -96.9331 iterations 6
Cbc0038I Pass  58: suminf.    2.52652 (10) obj. -96.9331 iterations 13
Cbc0038I Pass  59: suminf.    3.47822 (10) obj. -96.9331 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 138 rows 80 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -75.4219 - took 0.22 seconds
Cbc0012I Integer solution of -75.4219 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 108 rows 64 columns
Cbc0031I 28 added rows had average density of 141.25
Cbc0013I At root node, 28 cuts changed objective from -155.9043 to -135.70914 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17217 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.412 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1743 row cuts average 259.3 elements, 0 column cuts (0 active)  in 0.305 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.277 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 252.1 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -75.4219 best solution, best possible -135.70914 (3.00 seconds)
Cbc0010I After 36 nodes, 12 on tree, -75.4219 best solution, best possible -135.70914 (3.71 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 12 columns
Cbc0012I Integer solution of -75.7902 found by RINS after 13174 iterations and 41 nodes (3.74 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 5 rows 6 columns
Cbc0012I Integer solution of -76.09019 found by rounding after 15556 iterations and 119 nodes (3.99 seconds)
Cbc0012I Integer solution of -78.098233 found by rounding after 19053 iterations and 240 nodes (4.28 seconds)
Cbc0010I After 269 nodes, 12 on tree, -78.098233 best solution, best possible -135.70914 (4.41 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -78.11832 found by rounding after 22416 iterations and 352 nodes (4.63 seconds)
Cbc0012I Integer solution of -78.78661 found by rounding after 22517 iterations and 354 nodes (4.64 seconds)
Cbc0012I Integer solution of -81.00763 found by rounding after 23465 iterations and 385 nodes (4.76 seconds)
Cbc0012I Integer solution of -81.0545 found by rounding after 23772 iterations and 395 nodes (4.78 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 0 rows 0 columns
Cbc0010I After 467 nodes, 11 on tree, -81.0545 best solution, best possible -135.70914 (5.12 seconds)
Cbc0001I Search completed - best objective -81.05449999999999, took 27810 iterations and 504 nodes (5.26 seconds)
Cbc0032I Strong branching done 3112 times (58184 iterations), fathomed 144 nodes and fixed 238 variables
Cbc0035I Maximum depth 51, 3599 variables fixed on reduced cost
Total time (CPU seconds):       5.15   (Wallclock seconds):       5.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 364 (-163) rows, 381 (-144) columns and 16965 (-18772) elements
Clp1000I sum of infeasibilities 1.15043e-05 - average 3.16053e-08, 197 fixed columns
Coin0506I Presolve 155 (-209) rows, 182 (-199) columns and 652 (-16313) elements
Clp0006I 0  Obj 14.673469 Primal inf 1.8439425e-05 (2) Dual inf 2.0200001e+11 (177)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 0.13971793 - largest nonzero change 2.8587626e-05 ( 0.0025988751%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 16.11471
Clp0000I Optimal - objective value 16.11471
Coin0511I After Postsolve, objective 16.11471, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 16.11471 Dual inf 393.85222 (126)
Clp0014I Perturbing problem by 0.001% of 1.5905963 - largest nonzero change 2.7151435e-05 ( 0.0027151435%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 213.68603
Clp0000I Optimal - objective value 213.68603
Clp0000I Optimal - objective value 213.68603
Coin0511I After Postsolve, objective 213.68603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 213.6860318 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 364 rows, 381 columns (381 integer (381 of which binary)) and 16965 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.672%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 118 integers unsatisfied sum - 7.68526
Cbc0038I Pass   1: suminf.    4.75856 (101) obj. -185.644 iterations 39
Cbc0038I Pass   2: suminf.    4.75856 (101) obj. -185.644 iterations 0
Cbc0038I Pass   3: suminf.    3.42292 (76) obj. -125.119 iterations 25
Cbc0038I Pass   4: suminf.    2.82076 (64) obj. -109.921 iterations 12
Cbc0038I Pass   5: suminf.    1.75118 (42) obj. -80.4255 iterations 22
Cbc0038I Pass   6: suminf.    1.04434 (27) obj. -63.2733 iterations 15
Cbc0038I Pass   7: suminf.    0.05971 (2) obj. -35.4037 iterations 25
Cbc0038I Solution found of -33.4635
Cbc0038I Rounding solution of -49.4293 is better than previous of -33.4635

Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 364 rows 381 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -65.855
Cbc0038I Pass   8: suminf.    4.75856 (101) obj. -185.644 iterations 0
Cbc0038I Pass   9: suminf.    4.75856 (101) obj. -185.644 iterations 0
Cbc0038I Pass  10: suminf.    3.52498 (78) obj. -127.966 iterations 23
Cbc0038I Pass  11: suminf.    2.42705 (56) obj. -99.462 iterations 22
Cbc0038I Pass  12: suminf.    1.41822 (35) obj. -72.8061 iterations 21
Cbc0038I Pass  13: suminf.    1.27286 (15) obj. -65.855 iterations 42
Cbc0038I Pass  14: suminf.    1.01014 (14) obj. -65.855 iterations 21
Cbc0038I Pass  15: suminf.    0.90417 (4) obj. -65.855 iterations 31
Cbc0038I Pass  16: suminf.    0.76427 (4) obj. -65.855 iterations 24
Cbc0038I Pass  17: suminf.    0.90316 (3) obj. -65.855 iterations 15
Cbc0038I Pass  18: suminf.    2.24757 (24) obj. -65.855 iterations 80
Cbc0038I Pass  19: suminf.    1.65739 (20) obj. -71.8554 iterations 23
Cbc0038I Pass  20: suminf.    1.55557 (13) obj. -65.855 iterations 53
Cbc0038I Pass  21: suminf.    1.47210 (12) obj. -65.855 iterations 6
Cbc0038I Pass  22: suminf.    1.46441 (6) obj. -65.855 iterations 48
Cbc0038I Pass  23: suminf.    1.14286 (8) obj. -65.855 iterations 22
Cbc0038I Pass  24: suminf.    0.51381 (4) obj. -65.855 iterations 21
Cbc0038I Pass  25: suminf.    0.51129 (6) obj. -65.855 iterations 3
Cbc0038I Pass  26: suminf.    1.05129 (6) obj. -65.855 iterations 21
Cbc0038I Pass  27: suminf.    0.51200 (4) obj. -65.855 iterations 18
Cbc0038I Pass  28: suminf.    1.90361 (29) obj. -71.2157 iterations 65
Cbc0038I Pass  29: suminf.    1.51952 (27) obj. -69.6288 iterations 17
Cbc0038I Pass  30: suminf.    1.34692 (13) obj. -65.855 iterations 32
Cbc0038I Pass  31: suminf.    1.34692 (13) obj. -65.855 iterations 0
Cbc0038I Pass  32: suminf.    1.11178 (6) obj. -65.855 iterations 29
Cbc0038I Pass  33: suminf.    1.05969 (5) obj. -65.855 iterations 12
Cbc0038I Pass  34: suminf.    0.98622 (5) obj. -65.855 iterations 11
Cbc0038I Pass  35: suminf.    0.45877 (5) obj. -65.855 iterations 9
Cbc0038I Pass  36: suminf.    1.05969 (5) obj. -65.855 iterations 11
Cbc0038I Pass  37: suminf.    1.70734 (23) obj. -65.855 iterations 57
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 364 rows 381 columns, reduced to 132 rows 144 columns - 33 fixed gives 95, 110 - ok now
Cbc0038I Full problem 364 rows 381 columns, reduced to 28 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -49.4293 - took 0.15 seconds
Cbc0012I Integer solution of -49.429253 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 15 rows 19 columns
Cbc0031I 142 added rows had average density of 66.507042
Cbc0013I At root node, 142 cuts changed objective from -213.68603 to -118.94004 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 37193 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.504 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3383 row cuts average 359.4 elements, 0 column cuts (0 active)  in 1.108 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 253 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5542 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.604 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2236 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.757 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 398 row cuts average 211.5 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 301 row cuts average 31.6 elements, 0 column cuts (0 active)  in 0.427 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -49.429253 best solution, best possible -118.94004 (7.74 seconds)
Cbc0010I After 1 nodes, 2 on tree, -49.429253 best solution, best possible -118.94004 (8.51 seconds)
Cbc0012I Integer solution of -49.82951 found by rounding after 13255 iterations and 3 nodes (8.90 seconds)
Cbc0012I Integer solution of -53.09664 found by DiveCoefficient after 13255 iterations and 3 nodes (8.90 seconds)
Cbc0012I Integer solution of -56.4172 found by DiveCoefficient after 13277 iterations and 4 nodes (8.97 seconds)
Cbc0012I Integer solution of -58.76978 found by DiveCoefficient after 13341 iterations and 5 nodes (9.07 seconds)
Cbc0010I After 13 nodes, 8 on tree, -58.76978 best solution, best possible -118.94004 (9.23 seconds)
Cbc0012I Integer solution of -72.14712 found by rounding after 13740 iterations and 14 nodes (9.25 seconds)
Cbc0004I Integer solution of -77.08203 found after 13913 iterations and 21 nodes (9.34 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 22 rows 30 columns
Cbc0016I Integer solution of -81.00763 found by strong branching after 14666 iterations and 48 nodes (9.73 seconds)
Cbc0010I After 65 nodes, 3 on tree, -81.00763 best solution, best possible -118.94004 (10.45 seconds)
Cbc0010I After 66 nodes, 4 on tree, -81.00763 best solution, best possible -118.94004 (11.16 seconds)
Cbc0010I After 68 nodes, 6 on tree, -81.00763 best solution, best possible -118.94004 (11.99 seconds)
Cbc0010I After 69 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (12.71 seconds)
Cbc0010I After 87 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (13.44 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 75 rows 90 columns
Cbc0010I After 91 nodes, 8 on tree, -81.00763 best solution, best possible -118.94004 (14.20 seconds)
Cbc0010I After 163 nodes, 6 on tree, -81.00763 best solution, best possible -118.94004 (14.91 seconds)
Cbc0010I After 194 nodes, 4 on tree, -81.00763 best solution, best possible -118.94004 (15.76 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 95 rows 107 columns
Cbc0010I After 200 nodes, 6 on tree, -81.00763 best solution, best possible -118.94004 (17.25 seconds)
Cbc0010I After 258 nodes, 2 on tree, -81.00763 best solution, best possible -118.94004 (18.68 seconds)
Cbc0010I After 259 nodes, 3 on tree, -81.00763 best solution, best possible -118.94004 (20.25 seconds)
Cbc0010I After 260 nodes, 4 on tree, -81.00763 best solution, best possible -118.94004 (21.41 seconds)
Cbc0010I After 262 nodes, 6 on tree, -81.00763 best solution, best possible -118.94004 (22.59 seconds)
Cbc0010I After 265 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (23.46 seconds)
Cbc0010I After 269 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (24.25 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 154 rows 166 columns
Cbc0010I After 300 nodes, 8 on tree, -81.00763 best solution, best possible -118.94004 (26.46 seconds)
Cbc0010I After 357 nodes, 7 on tree, -81.00763 best solution, best possible -118.94004 (27.16 seconds)
Cbc0010I After 392 nodes, 2 on tree, -81.00763 best solution, best possible -115.12112 (27.96 seconds)
Cbc0010I After 395 nodes, 5 on tree, -81.00763 best solution, best possible -115.12112 (28.87 seconds)
Cbc0010I After 398 nodes, 8 on tree, -81.00763 best solution, best possible -115.12112 (29.67 seconds)
Cbc0010I After 408 nodes, 9 on tree, -81.00763 best solution, best possible -115.12112 (30.47 seconds)
Cbc0010I After 455 nodes, 13 on tree, -81.00763 best solution, best possible -115.12112 (31.17 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 58 rows 71 columns
Cbc0010I After 522 nodes, 14 on tree, -81.00763 best solution, best possible -115.12112 (31.87 seconds)
Cbc0038I Full problem 364 rows 381 columns, reduced to 117 rows 135 columns
Cbc0010I After 600 nodes, 11 on tree, -81.00763 best solution, best possible -115.12112 (33.59 seconds)
Cbc0012I Integer solution of -81.0545 found by DiveCoefficient after 59157 iterations and 640 nodes (34.14 seconds)
Cbc0001I Search completed - best objective -81.05449999999999, took 59372 iterations and 653 nodes (34.20 seconds)
Cbc0032I Strong branching done 3390 times (59263 iterations), fathomed 20 nodes and fixed 36 variables
Cbc0035I Maximum depth 31, 3933 variables fixed on reduced cost
Total time (CPU seconds):       33.61   (Wallclock seconds):       34.30

