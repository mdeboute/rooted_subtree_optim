Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 59 (-19) columns and 331 (-122) elements
Clp1000I sum of infeasibilities 0.00137878 - average 1.25344e-05, 35 fixed columns
Coin0506I Presolve 35 (-75) rows, 24 (-35) columns and 111 (-220) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 7.3943281 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 718.62905
Clp0000I Optimal - objective value 718.62905
Coin0511I After Postsolve, objective 718.62905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.34405582 - largest nonzero change 1.2459402e-05 ( 0.0012459402%) - largest zero change 2.8820022e-05
Clp0000I Optimal - objective value 718.62905
Clp0000I Optimal - objective value 718.62905
Clp0000I Optimal - objective value 718.62905
Coin0511I After Postsolve, objective 718.62905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 718.6290541 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 110 rows, 59 columns (58 integer (58 of which binary)) and 331 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.538%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 0.980244
Cbc0038I Pass   1: suminf.    0.73500 (2) obj. -711.635 iterations 15
Cbc0038I Pass   2: suminf.    0.03571 (1) obj. -696.176 iterations 3
Cbc0038I Solution found of -627.843
Cbc0038I Relaxing continuous gives -627.843
Cbc0038I Rounding solution of -690.252 is better than previous of -627.843

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 59 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -693.09
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73500 (2) obj. -711.635 iterations 0
Cbc0038I Pass   4: suminf.    0.03571 (1) obj. -696.176 iterations 1
Cbc0038I Pass   5: suminf.    0.42827 (2) obj. -693.09 iterations 5
Cbc0038I Pass   6: suminf.    0.42827 (2) obj. -693.09 iterations 6
Cbc0038I Pass   7: suminf.    0.61197 (4) obj. -693.09 iterations 4
Cbc0038I Pass   8: suminf.    0.42827 (2) obj. -693.09 iterations 4
Cbc0038I Pass   9: suminf.    2.40923 (7) obj. -693.09 iterations 7
Cbc0038I Pass  10: suminf.    0.45139 (2) obj. -695.813 iterations 13
Cbc0038I Pass  11: suminf.    0.45139 (2) obj. -695.813 iterations 0
Cbc0038I Pass  12: suminf.    0.49860 (2) obj. -693.09 iterations 6
Cbc0038I Pass  13: suminf.    0.99639 (5) obj. -693.09 iterations 9
Cbc0038I Pass  14: suminf.    0.40817 (3) obj. -693.09 iterations 16
Cbc0038I Pass  15: suminf.    0.13917 (1) obj. -693.09 iterations 14
Cbc0038I Pass  16: suminf.    0.13917 (1) obj. -693.09 iterations 0
Cbc0038I Pass  17: suminf.    0.30000 (1) obj. -705.19 iterations 5
Cbc0038I Pass  18: suminf.    1.53340 (4) obj. -693.09 iterations 17
Cbc0038I Pass  19: suminf.    0.41572 (3) obj. -693.09 iterations 9
Cbc0038I Pass  20: suminf.    0.41572 (3) obj. -693.09 iterations 0
Cbc0038I Pass  21: suminf.    0.27816 (3) obj. -693.09 iterations 15
Cbc0038I Pass  22: suminf.    0.03571 (1) obj. -696.176 iterations 7
Cbc0038I Pass  23: suminf.    0.42827 (2) obj. -693.09 iterations 5
Cbc0038I Pass  24: suminf.    0.42827 (2) obj. -693.09 iterations 6
Cbc0038I Pass  25: suminf.    2.11305 (6) obj. -693.09 iterations 14
Cbc0038I Pass  26: suminf.    0.69209 (3) obj. -693.09 iterations 10
Cbc0038I Pass  27: suminf.    0.24229 (2) obj. -693.09 iterations 3
Cbc0038I Pass  28: suminf.    0.27103 (1) obj. -693.09 iterations 5
Cbc0038I Pass  29: suminf.    0.52476 (3) obj. -693.09 iterations 7
Cbc0038I Pass  30: suminf.    0.91150 (7) obj. -693.09 iterations 8
Cbc0038I Pass  31: suminf.    0.74626 (3) obj. -693.09 iterations 8
Cbc0038I Pass  32: suminf.    0.42827 (2) obj. -693.09 iterations 12
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 59 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -698.198
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.73500 (2) obj. -711.635 iterations 0
Cbc0038I Pass  33: suminf.    0.04833 (2) obj. -698.198 iterations 6
Cbc0038I Pass  34: suminf.    0.92843 (3) obj. -698.198 iterations 9
Cbc0038I Pass  35: suminf.    0.22107 (2) obj. -698.198 iterations 7
Cbc0038I Pass  36: suminf.    1.76721 (7) obj. -698.198 iterations 12
Cbc0038I Pass  37: suminf.    0.20297 (2) obj. -698.198 iterations 10
Cbc0038I Pass  38: suminf.    1.37273 (4) obj. -698.198 iterations 9
Cbc0038I Pass  39: suminf.    2.04803 (8) obj. -698.198 iterations 8
Cbc0038I Pass  40: suminf.    1.29880 (3) obj. -698.198 iterations 9
Cbc0038I Pass  41: suminf.    0.10561 (1) obj. -698.198 iterations 6
Cbc0038I Pass  42: suminf.    0.10561 (1) obj. -698.198 iterations 0
Cbc0038I Pass  43: suminf.    0.16667 (1) obj. -702.791 iterations 3
Cbc0038I Pass  44: suminf.    0.38604 (5) obj. -698.198 iterations 9
Cbc0038I Pass  45: suminf.    0.47433 (3) obj. -698.198 iterations 7
Cbc0038I Pass  46: suminf.    0.47433 (3) obj. -698.198 iterations 1
Cbc0038I Pass  47: suminf.    0.55988 (3) obj. -698.198 iterations 9
Cbc0038I Pass  48: suminf.    0.20706 (1) obj. -698.198 iterations 2
Cbc0038I Pass  49: suminf.    0.30000 (1) obj. -705.19 iterations 3
Cbc0038I Pass  50: suminf.    1.71116 (7) obj. -698.198 iterations 13
Cbc0038I Pass  51: suminf.    1.03894 (6) obj. -698.198 iterations 7
Cbc0038I Pass  52: suminf.    0.89685 (2) obj. -698.198 iterations 12
Cbc0038I Pass  53: suminf.    0.38591 (3) obj. -698.198 iterations 9
Cbc0038I Pass  54: suminf.    0.30964 (7) obj. -698.198 iterations 17
Cbc0038I Pass  55: suminf.    0.30964 (7) obj. -698.198 iterations 0
Cbc0038I Pass  56: suminf.    0.39879 (7) obj. -698.198 iterations 10
Cbc0038I Pass  57: suminf.    0.04833 (2) obj. -698.198 iterations 7
Cbc0038I Pass  58: suminf.    0.92843 (3) obj. -698.198 iterations 14
Cbc0038I Pass  59: suminf.    0.22107 (2) obj. -698.198 iterations 9
Cbc0038I Pass  60: suminf.    1.15341 (8) obj. -698.198 iterations 17
Cbc0038I Pass  61: suminf.    0.58323 (3) obj. -698.198 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 59 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -690.252 - took 0.02 seconds
Cbc0012I Integer solution of -690.25203 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 110 rows 59 columns, reduced to 20 rows 14 columns
Cbc0031I 6 added rows had average density of 15.166667
Cbc0013I At root node, 6 cuts changed objective from -718.62905 to -706.97923 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 63 row cuts average 3.9 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0001I Search completed - best objective -690.25203, took 125 iterations and 8 nodes (0.45 seconds)
Cbc0032I Strong branching done 68 times (276 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 94 (-58) columns and 1424 (-1879) elements
Clp1000I sum of infeasibilities 1.48558e-06 - average 1.68816e-08, 60 fixed columns
Coin0506I Presolve 28 (-60) rows, 34 (-60) columns and 119 (-1305) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 3.6400139 - largest nonzero change 3.6794364e-05 ( 0.00091204228%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 715.76862
Clp0000I Optimal - objective value 715.76862
Coin0511I After Postsolve, objective 715.76862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0511207 - largest nonzero change 2.8003594e-05 ( 0.0016324266%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 762.7838
Clp0000I Optimal - objective value 762.7838
Clp0000I Optimal - objective value 762.7838
Coin0511I After Postsolve, objective 762.7838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 762.7837962 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 99 columns (99 integer (99 of which binary)) and 1444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.766%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.39177
Cbc0038I Pass   1: suminf.    4.27462 (29) obj. -663.005 iterations 15
Cbc0038I Pass   2: suminf.    4.27462 (29) obj. -663.005 iterations 0
Cbc0038I Pass   3: suminf.    0.18590 (2) obj. -631.717 iterations 27
Cbc0038I Solution found of -629.903
Cbc0038I Rounding solution of -642.952 is better than previous of -629.903

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 99 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -642.952 to -657.926 (0.03 seconds)
Cbc0038I Round again with cutoff of -667.419
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.39990 (32) obj. -667.419 iterations 2
Cbc0038I Pass   5: suminf.    4.35871 (30) obj. -667.419 iterations 3
Cbc0038I Pass   6: suminf.    2.04238 (14) obj. -667.419 iterations 19
Cbc0038I Pass   7: suminf.    0.35000 (2) obj. -673.166 iterations 18
Cbc0038I Pass   8: suminf.    0.33086 (1) obj. -667.419 iterations 5
Cbc0038I Pass   9: suminf.    0.26667 (1) obj. -672.249 iterations 5
Cbc0038I Pass  10: suminf.    1.79158 (13) obj. -667.419 iterations 22
Cbc0038I Pass  11: suminf.    1.58205 (14) obj. -667.419 iterations 12
Cbc0038I Pass  12: suminf.    0.24762 (2) obj. -679.217 iterations 23
Cbc0038I Pass  13: suminf.    0.18182 (1) obj. -677.868 iterations 2
Cbc0038I Pass  14: suminf.    0.45990 (2) obj. -667.419 iterations 8
Cbc0038I Pass  15: suminf.    0.60333 (2) obj. -684.049 iterations 7
Cbc0038I Pass  16: suminf.    0.35714 (1) obj. -678.606 iterations 2
Cbc0038I Pass  17: suminf.    2.70963 (15) obj. -667.419 iterations 32
Cbc0038I Pass  18: suminf.    2.31137 (13) obj. -667.419 iterations 11
Cbc0038I Pass  19: suminf.    2.08456 (13) obj. -682.936 iterations 3
Cbc0038I Pass  20: suminf.    0.75371 (5) obj. -667.419 iterations 17
Cbc0038I Pass  21: suminf.    0.47589 (3) obj. -669.541 iterations 8
Cbc0038I Pass  22: suminf.    0.25441 (1) obj. -667.419 iterations 7
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -667.767 iterations 7
Cbc0038I Pass  24: suminf.    2.03829 (8) obj. -667.419 iterations 14
Cbc0038I Pass  25: suminf.    1.14908 (5) obj. -667.419 iterations 9
Cbc0038I Pass  26: suminf.    0.94758 (5) obj. -683.342 iterations 4
Cbc0038I Pass  27: suminf.    0.36921 (1) obj. -667.419 iterations 9
Cbc0038I Pass  28: suminf.    0.25000 (1) obj. -676.749 iterations 6
Cbc0038I Pass  29: suminf.    1.83488 (10) obj. -667.419 iterations 22
Cbc0038I Pass  30: suminf.    1.26451 (6) obj. -670.781 iterations 11
Cbc0038I Pass  31: suminf.    0.38442 (2) obj. -667.419 iterations 9
Cbc0038I Pass  32: suminf.    0.33681 (2) obj. -667.419 iterations 4
Cbc0038I Pass  33: suminf.    0.39072 (1) obj. -667.419 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 99 columns, reduced to 46 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -657.926 to -690.252 (0.07 seconds)
Cbc0038I Round again with cutoff of -702.773
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.50954 (38) obj. -702.773 iterations 2
Cbc0038I Pass  34: suminf.    5.09045 (38) obj. -702.773 iterations 7
Cbc0038I Pass  35: suminf.    4.70074 (34) obj. -702.773 iterations 9
Cbc0038I Pass  36: suminf.    2.96517 (23) obj. -702.773 iterations 30
Cbc0038I Pass  37: suminf.    1.07122 (8) obj. -702.773 iterations 30
Cbc0038I Pass  38: suminf.    1.07122 (8) obj. -702.773 iterations 0
Cbc0038I Pass  39: suminf.    0.70271 (2) obj. -702.773 iterations 11
Cbc0038I Pass  40: suminf.    0.33412 (2) obj. -702.773 iterations 8
Cbc0038I Pass  41: suminf.    0.86515 (2) obj. -702.773 iterations 5
Cbc0038I Pass  42: suminf.    3.50474 (12) obj. -702.773 iterations 17
Cbc0038I Pass  43: suminf.    2.16609 (8) obj. -702.773 iterations 12
Cbc0038I Pass  44: suminf.    0.29446 (1) obj. -702.773 iterations 10
Cbc0038I Pass  45: suminf.    0.29446 (1) obj. -702.773 iterations 0
Cbc0038I Pass  46: suminf.    0.30000 (1) obj. -703.19 iterations 5
Cbc0038I Pass  47: suminf.    1.74968 (10) obj. -702.773 iterations 25
Cbc0038I Pass  48: suminf.    1.68944 (9) obj. -702.773 iterations 4
Cbc0038I Pass  49: suminf.    0.94821 (2) obj. -702.773 iterations 20
Cbc0038I Pass  50: suminf.    0.73500 (2) obj. -709.635 iterations 5
Cbc0038I Pass  51: suminf.    0.42459 (2) obj. -702.773 iterations 4
Cbc0038I Pass  52: suminf.    0.94821 (2) obj. -702.773 iterations 5
Cbc0038I Pass  53: suminf.    2.12250 (12) obj. -702.773 iterations 19
Cbc0038I Pass  54: suminf.    2.05593 (10) obj. -702.773 iterations 6
Cbc0038I Pass  55: suminf.    0.21151 (2) obj. -702.773 iterations 16
Cbc0038I Pass  56: suminf.    0.21151 (2) obj. -702.773 iterations 0
Cbc0038I Pass  57: suminf.    0.22500 (2) obj. -703.67 iterations 5
Cbc0038I Pass  58: suminf.    2.78443 (14) obj. -702.773 iterations 12
Cbc0038I Pass  59: suminf.    1.25188 (7) obj. -702.773 iterations 14
Cbc0038I Pass  60: suminf.    0.21151 (2) obj. -702.773 iterations 17
Cbc0038I Pass  61: suminf.    1.76113 (8) obj. -702.773 iterations 15
Cbc0038I Pass  62: suminf.    1.11408 (6) obj. -702.773 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 99 columns, reduced to 46 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -690.252 - took 0.07 seconds
Cbc0012I Integer solution of -690.25203 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 93 rows 99 columns, reduced to 5 rows 7 columns
Cbc0031I 18 added rows had average density of 9.8333333
Cbc0013I At root node, 18 cuts changed objective from -752.85573 to -700.17184 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 352 row cuts average 14.8 elements, 30 column cuts (30 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -690.25203 best solution, best possible -700.05521 (0.29 seconds)
Cbc0001I Search completed - best objective -690.25203, took 277 iterations and 6 nodes (0.61 seconds)
Cbc0032I Strong branching done 34 times (181 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.62

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 59 (-19) columns and 331 (-122) elements
Clp1000I sum of infeasibilities 0.00137878 - average 1.25344e-05, 35 fixed columns
Coin0506I Presolve 35 (-75) rows, 24 (-35) columns and 111 (-220) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 7.3943281 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 718.62905
Clp0000I Optimal - objective value 718.62905
Coin0511I After Postsolve, objective 718.62905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.34405582 - largest nonzero change 1.2459402e-05 ( 0.0012459402%) - largest zero change 2.8820022e-05
Clp0000I Optimal - objective value 718.62905
Clp0000I Optimal - objective value 718.62905
Clp0000I Optimal - objective value 718.62905
Coin0511I After Postsolve, objective 718.62905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 718.6290541 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 110 rows, 59 columns (58 integer (58 of which binary)) and 331 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.538%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 0.980244
Cbc0038I Pass   1: suminf.    0.73500 (2) obj. -711.635 iterations 15
Cbc0038I Pass   2: suminf.    0.03571 (1) obj. -696.176 iterations 3
Cbc0038I Solution found of -627.843
Cbc0038I Relaxing continuous gives -627.843
Cbc0038I Rounding solution of -690.252 is better than previous of -627.843

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 59 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -693.09
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73500 (2) obj. -711.635 iterations 0
Cbc0038I Pass   4: suminf.    0.03571 (1) obj. -696.176 iterations 1
Cbc0038I Pass   5: suminf.    0.42827 (2) obj. -693.09 iterations 5
Cbc0038I Pass   6: suminf.    0.42827 (2) obj. -693.09 iterations 6
Cbc0038I Pass   7: suminf.    0.61197 (4) obj. -693.09 iterations 4
Cbc0038I Pass   8: suminf.    0.42827 (2) obj. -693.09 iterations 4
Cbc0038I Pass   9: suminf.    2.40923 (7) obj. -693.09 iterations 7
Cbc0038I Pass  10: suminf.    0.45139 (2) obj. -695.813 iterations 13
Cbc0038I Pass  11: suminf.    0.45139 (2) obj. -695.813 iterations 0
Cbc0038I Pass  12: suminf.    0.49860 (2) obj. -693.09 iterations 6
Cbc0038I Pass  13: suminf.    0.99639 (5) obj. -693.09 iterations 9
Cbc0038I Pass  14: suminf.    0.40817 (3) obj. -693.09 iterations 16
Cbc0038I Pass  15: suminf.    0.13917 (1) obj. -693.09 iterations 14
Cbc0038I Pass  16: suminf.    0.13917 (1) obj. -693.09 iterations 0
Cbc0038I Pass  17: suminf.    0.30000 (1) obj. -705.19 iterations 5
Cbc0038I Pass  18: suminf.    1.53340 (4) obj. -693.09 iterations 17
Cbc0038I Pass  19: suminf.    0.41572 (3) obj. -693.09 iterations 9
Cbc0038I Pass  20: suminf.    0.41572 (3) obj. -693.09 iterations 0
Cbc0038I Pass  21: suminf.    0.27816 (3) obj. -693.09 iterations 15
Cbc0038I Pass  22: suminf.    0.03571 (1) obj. -696.176 iterations 7
Cbc0038I Pass  23: suminf.    0.42827 (2) obj. -693.09 iterations 5
Cbc0038I Pass  24: suminf.    0.42827 (2) obj. -693.09 iterations 6
Cbc0038I Pass  25: suminf.    2.11305 (6) obj. -693.09 iterations 14
Cbc0038I Pass  26: suminf.    0.69209 (3) obj. -693.09 iterations 10
Cbc0038I Pass  27: suminf.    0.24229 (2) obj. -693.09 iterations 3
Cbc0038I Pass  28: suminf.    0.27103 (1) obj. -693.09 iterations 5
Cbc0038I Pass  29: suminf.    0.52476 (3) obj. -693.09 iterations 7
Cbc0038I Pass  30: suminf.    0.91150 (7) obj. -693.09 iterations 8
Cbc0038I Pass  31: suminf.    0.74626 (3) obj. -693.09 iterations 8
Cbc0038I Pass  32: suminf.    0.42827 (2) obj. -693.09 iterations 12
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 59 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -698.198
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.73500 (2) obj. -711.635 iterations 0
Cbc0038I Pass  33: suminf.    0.04833 (2) obj. -698.198 iterations 6
Cbc0038I Pass  34: suminf.    0.92843 (3) obj. -698.198 iterations 9
Cbc0038I Pass  35: suminf.    0.22107 (2) obj. -698.198 iterations 7
Cbc0038I Pass  36: suminf.    1.76721 (7) obj. -698.198 iterations 12
Cbc0038I Pass  37: suminf.    0.20297 (2) obj. -698.198 iterations 10
Cbc0038I Pass  38: suminf.    1.37273 (4) obj. -698.198 iterations 9
Cbc0038I Pass  39: suminf.    2.04803 (8) obj. -698.198 iterations 8
Cbc0038I Pass  40: suminf.    1.29880 (3) obj. -698.198 iterations 9
Cbc0038I Pass  41: suminf.    0.10561 (1) obj. -698.198 iterations 6
Cbc0038I Pass  42: suminf.    0.10561 (1) obj. -698.198 iterations 0
Cbc0038I Pass  43: suminf.    0.16667 (1) obj. -702.791 iterations 3
Cbc0038I Pass  44: suminf.    0.38604 (5) obj. -698.198 iterations 9
Cbc0038I Pass  45: suminf.    0.47433 (3) obj. -698.198 iterations 7
Cbc0038I Pass  46: suminf.    0.47433 (3) obj. -698.198 iterations 1
Cbc0038I Pass  47: suminf.    0.55988 (3) obj. -698.198 iterations 9
Cbc0038I Pass  48: suminf.    0.20706 (1) obj. -698.198 iterations 2
Cbc0038I Pass  49: suminf.    0.30000 (1) obj. -705.19 iterations 3
Cbc0038I Pass  50: suminf.    1.71116 (7) obj. -698.198 iterations 13
Cbc0038I Pass  51: suminf.    1.03894 (6) obj. -698.198 iterations 7
Cbc0038I Pass  52: suminf.    0.89685 (2) obj. -698.198 iterations 12
Cbc0038I Pass  53: suminf.    0.38591 (3) obj. -698.198 iterations 9
Cbc0038I Pass  54: suminf.    0.30964 (7) obj. -698.198 iterations 17
Cbc0038I Pass  55: suminf.    0.30964 (7) obj. -698.198 iterations 0
Cbc0038I Pass  56: suminf.    0.39879 (7) obj. -698.198 iterations 10
Cbc0038I Pass  57: suminf.    0.04833 (2) obj. -698.198 iterations 7
Cbc0038I Pass  58: suminf.    0.92843 (3) obj. -698.198 iterations 14
Cbc0038I Pass  59: suminf.    0.22107 (2) obj. -698.198 iterations 9
Cbc0038I Pass  60: suminf.    1.15341 (8) obj. -698.198 iterations 17
Cbc0038I Pass  61: suminf.    0.58323 (3) obj. -698.198 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 59 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -690.252 - took 0.03 seconds
Cbc0012I Integer solution of -690.25203 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 110 rows 59 columns, reduced to 20 rows 14 columns
Cbc0031I 6 added rows had average density of 15.166667
Cbc0013I At root node, 6 cuts changed objective from -718.62905 to -706.97923 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 63 row cuts average 3.9 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0001I Search completed - best objective -690.25203, took 125 iterations and 8 nodes (0.45 seconds)
Cbc0032I Strong branching done 68 times (276 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 94 (-59) columns and 1424 (-1880) elements
Clp1000I sum of infeasibilities 1.48558e-06 - average 1.68816e-08, 60 fixed columns
Coin0506I Presolve 28 (-60) rows, 34 (-60) columns and 119 (-1305) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 3.6400139 - largest nonzero change 3.6794364e-05 ( 0.00091204228%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 715.76862
Clp0000I Optimal - objective value 715.76862
Coin0511I After Postsolve, objective 715.76862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0511207 - largest nonzero change 2.8003594e-05 ( 0.0016324266%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 762.7838
Clp0000I Optimal - objective value 762.7838
Clp0000I Optimal - objective value 762.7838
Coin0511I After Postsolve, objective 762.7838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 762.7837962 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 99 columns (99 integer (99 of which binary)) and 1444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.766%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.39177
Cbc0038I Pass   1: suminf.    4.27462 (29) obj. -663.005 iterations 15
Cbc0038I Pass   2: suminf.    4.27462 (29) obj. -663.005 iterations 0
Cbc0038I Pass   3: suminf.    0.18590 (2) obj. -631.717 iterations 27
Cbc0038I Solution found of -629.903
Cbc0038I Rounding solution of -642.952 is better than previous of -629.903

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 99 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -642.952 to -657.926 (0.03 seconds)
Cbc0038I Round again with cutoff of -667.419
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.39990 (32) obj. -667.419 iterations 2
Cbc0038I Pass   5: suminf.    4.35871 (30) obj. -667.419 iterations 3
Cbc0038I Pass   6: suminf.    2.04238 (14) obj. -667.419 iterations 19
Cbc0038I Pass   7: suminf.    0.35000 (2) obj. -673.166 iterations 18
Cbc0038I Pass   8: suminf.    0.33086 (1) obj. -667.419 iterations 5
Cbc0038I Pass   9: suminf.    0.26667 (1) obj. -672.249 iterations 5
Cbc0038I Pass  10: suminf.    1.79158 (13) obj. -667.419 iterations 22
Cbc0038I Pass  11: suminf.    1.58205 (14) obj. -667.419 iterations 12
Cbc0038I Pass  12: suminf.    0.24762 (2) obj. -679.217 iterations 23
Cbc0038I Pass  13: suminf.    0.18182 (1) obj. -677.868 iterations 2
Cbc0038I Pass  14: suminf.    0.45990 (2) obj. -667.419 iterations 8
Cbc0038I Pass  15: suminf.    0.60333 (2) obj. -684.049 iterations 7
Cbc0038I Pass  16: suminf.    0.35714 (1) obj. -678.606 iterations 2
Cbc0038I Pass  17: suminf.    2.70963 (15) obj. -667.419 iterations 32
Cbc0038I Pass  18: suminf.    2.31137 (13) obj. -667.419 iterations 11
Cbc0038I Pass  19: suminf.    2.08456 (13) obj. -682.936 iterations 3
Cbc0038I Pass  20: suminf.    0.75371 (5) obj. -667.419 iterations 17
Cbc0038I Pass  21: suminf.    0.47589 (3) obj. -669.541 iterations 8
Cbc0038I Pass  22: suminf.    0.25441 (1) obj. -667.419 iterations 7
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -667.767 iterations 7
Cbc0038I Pass  24: suminf.    2.03829 (8) obj. -667.419 iterations 14
Cbc0038I Pass  25: suminf.    1.14908 (5) obj. -667.419 iterations 9
Cbc0038I Pass  26: suminf.    0.94758 (5) obj. -683.342 iterations 4
Cbc0038I Pass  27: suminf.    0.36921 (1) obj. -667.419 iterations 9
Cbc0038I Pass  28: suminf.    0.25000 (1) obj. -676.749 iterations 6
Cbc0038I Pass  29: suminf.    1.83488 (10) obj. -667.419 iterations 22
Cbc0038I Pass  30: suminf.    1.26451 (6) obj. -670.781 iterations 11
Cbc0038I Pass  31: suminf.    0.38442 (2) obj. -667.419 iterations 9
Cbc0038I Pass  32: suminf.    0.33681 (2) obj. -667.419 iterations 4
Cbc0038I Pass  33: suminf.    0.39072 (1) obj. -667.419 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 99 columns, reduced to 46 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -657.926 to -690.252 (0.07 seconds)
Cbc0038I Round again with cutoff of -702.773
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.50954 (38) obj. -702.773 iterations 2
Cbc0038I Pass  34: suminf.    5.09045 (38) obj. -702.773 iterations 7
Cbc0038I Pass  35: suminf.    4.70074 (34) obj. -702.773 iterations 9
Cbc0038I Pass  36: suminf.    2.96517 (23) obj. -702.773 iterations 30
Cbc0038I Pass  37: suminf.    1.07122 (8) obj. -702.773 iterations 30
Cbc0038I Pass  38: suminf.    1.07122 (8) obj. -702.773 iterations 0
Cbc0038I Pass  39: suminf.    0.70271 (2) obj. -702.773 iterations 11
Cbc0038I Pass  40: suminf.    0.33412 (2) obj. -702.773 iterations 8
Cbc0038I Pass  41: suminf.    0.86515 (2) obj. -702.773 iterations 5
Cbc0038I Pass  42: suminf.    3.50474 (12) obj. -702.773 iterations 17
Cbc0038I Pass  43: suminf.    2.16609 (8) obj. -702.773 iterations 12
Cbc0038I Pass  44: suminf.    0.29446 (1) obj. -702.773 iterations 10
Cbc0038I Pass  45: suminf.    0.29446 (1) obj. -702.773 iterations 0
Cbc0038I Pass  46: suminf.    0.30000 (1) obj. -703.19 iterations 5
Cbc0038I Pass  47: suminf.    1.74968 (10) obj. -702.773 iterations 25
Cbc0038I Pass  48: suminf.    1.68944 (9) obj. -702.773 iterations 4
Cbc0038I Pass  49: suminf.    0.94821 (2) obj. -702.773 iterations 20
Cbc0038I Pass  50: suminf.    0.73500 (2) obj. -709.635 iterations 5
Cbc0038I Pass  51: suminf.    0.42459 (2) obj. -702.773 iterations 4
Cbc0038I Pass  52: suminf.    0.94821 (2) obj. -702.773 iterations 5
Cbc0038I Pass  53: suminf.    2.12250 (12) obj. -702.773 iterations 19
Cbc0038I Pass  54: suminf.    2.05593 (10) obj. -702.773 iterations 6
Cbc0038I Pass  55: suminf.    0.21151 (2) obj. -702.773 iterations 16
Cbc0038I Pass  56: suminf.    0.21151 (2) obj. -702.773 iterations 0
Cbc0038I Pass  57: suminf.    0.22500 (2) obj. -703.67 iterations 5
Cbc0038I Pass  58: suminf.    2.78443 (14) obj. -702.773 iterations 12
Cbc0038I Pass  59: suminf.    1.25188 (7) obj. -702.773 iterations 14
Cbc0038I Pass  60: suminf.    0.21151 (2) obj. -702.773 iterations 17
Cbc0038I Pass  61: suminf.    1.76113 (8) obj. -702.773 iterations 15
Cbc0038I Pass  62: suminf.    1.11408 (6) obj. -702.773 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 99 columns, reduced to 46 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -690.252 - took 0.07 seconds
Cbc0012I Integer solution of -690.25203 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 93 rows 99 columns, reduced to 5 rows 7 columns
Cbc0031I 18 added rows had average density of 9.8333333
Cbc0013I At root node, 18 cuts changed objective from -752.85573 to -700.17184 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 352 row cuts average 14.8 elements, 30 column cuts (30 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -690.25203 best solution, best possible -700.05521 (0.28 seconds)
Cbc0001I Search completed - best objective -690.25203, took 277 iterations and 6 nodes (0.58 seconds)
Cbc0032I Strong branching done 34 times (181 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.58

