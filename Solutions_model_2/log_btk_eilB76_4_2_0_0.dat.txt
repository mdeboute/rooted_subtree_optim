Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 70 (-8) columns and 386 (-67) elements
Clp1000I sum of infeasibilities 0.000119826 - average 9.43512e-07, 18 fixed columns
Coin0506I Presolve 91 (-36) rows, 51 (-19) columns and 277 (-109) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 49.92559
Clp0000I Optimal - objective value 49.92559
Coin0511I After Postsolve, objective 49.92559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.92559
Clp0000I Optimal - objective value 49.92559
Clp0000I Optimal - objective value 49.92559
Coin0511I After Postsolve, objective 49.92559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.9255898 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 70 columns (69 integer (69 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.047%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.36683
Cbc0038I Solution found of 0.942147
Cbc0038I Relaxing continuous gives -4.3757
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 68 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -4.3757 to -27.4115 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.6492
Cbc0038I Pass   1: suminf.    1.74620 (16) obj. -29.6492 iterations 46
Cbc0038I Pass   2: suminf.    1.31873 (11) obj. -29.6492 iterations 8
Cbc0038I Pass   3: suminf.    2.79316 (7) obj. -29.6492 iterations 15
Cbc0038I Pass   4: suminf.    0.88159 (4) obj. -29.6492 iterations 9
Cbc0038I Pass   5: suminf.    0.86411 (5) obj. -29.6492 iterations 4
Cbc0038I Pass   6: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass   7: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass   8: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass   9: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  10: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  11: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  12: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass  13: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass  14: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass  15: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  16: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  17: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  18: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass  19: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass  20: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass  21: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  22: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  23: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  24: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass  25: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass  26: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass  27: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  28: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  29: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  30: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.4115 - took 0.05 seconds
Cbc0012I Integer solution of -27.41147 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 126 rows 70 columns, reduced to 68 rows 39 columns
Cbc0031I 19 added rows had average density of 45.894737
Cbc0013I At root node, 19 cuts changed objective from -49.788216 to -43.161246 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7463 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2013 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -27.41147 best solution, best possible -43.161246 (0.69 seconds)
Cbc0001I Search completed - best objective -27.41147, took 6457 iterations and 26 nodes (0.75 seconds)
Cbc0032I Strong branching done 328 times (6947 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 7, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.75   (Wallclock seconds):       0.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 117 (-35) columns and 1973 (-1330) elements
Clp1000I sum of infeasibilities 4.37231e-07 - average 4.12482e-09, 101 fixed columns
Coin0506I Presolve 14 (-92) rows, 16 (-101) columns and 55 (-1918) elements
Clp0006I 0  Obj 75.344314 Dual inf 879.51541 (16)
Clp0029I End of values pass after 5 iterations
Clp0014I Perturbing problem by 0.001% of 0.41190375 - largest nonzero change 0 ( 0%) - largest zero change 1.3694173e-05
Clp0000I Optimal - objective value 75.345388
Clp0000I Optimal - objective value 75.345388
Coin0511I After Postsolve, objective 75.345388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 75.345388 Dual inf 82.743195 (44)
Clp0014I Perturbing problem by 0.001% of 1.4023611 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 148.38439
Clp0000I Optimal - objective value 148.38439
Clp0000I Optimal - objective value 148.38439
Coin0511I After Postsolve, objective 148.38439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.384388 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 2023 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.983%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 13.9385
Cbc0038I Pass   1: suminf.    0.15303 (10) obj. -9.10649 iterations 40
Cbc0038I Pass   2: suminf.    0.15303 (10) obj. -9.10649 iterations 1
Cbc0038I Solution found of 12.5648
Cbc0038I Rounding solution of -18.3496 is better than previous of 12.5648

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 44 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -18.3496 to -70.4352 (0.05 seconds)
Cbc0038I Round again with cutoff of -75.9415
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.06746 (33) obj. -75.9415 iterations 21
Cbc0038I Pass   4: suminf.    3.06746 (33) obj. -75.9415 iterations 0
Cbc0038I Pass   5: suminf.    1.65028 (12) obj. -75.9415 iterations 37
Cbc0038I Pass   6: suminf.    1.06715 (7) obj. -75.9415 iterations 6
Cbc0038I Pass   7: suminf.    0.61727 (2) obj. -75.9415 iterations 10
Cbc0038I Pass   8: suminf.    0.49606 (2) obj. -75.9415 iterations 5
Cbc0038I Pass   9: suminf.    2.37226 (13) obj. -75.9415 iterations 25
Cbc0038I Pass  10: suminf.    2.33417 (10) obj. -75.9415 iterations 3
Cbc0038I Pass  11: suminf.    1.84220 (9) obj. -75.9415 iterations 3
Cbc0038I Pass  12: suminf.    0.67787 (8) obj. -75.9415 iterations 19
Cbc0038I Pass  13: suminf.    0.75000 (2) obj. -75.9415 iterations 10
Cbc0038I Pass  14: suminf.    0.75000 (2) obj. -75.9415 iterations 0
Cbc0038I Pass  15: suminf.    0.16679 (1) obj. -75.9415 iterations 1
Cbc0038I Pass  16: suminf.    0.16679 (1) obj. -75.9415 iterations 0
Cbc0038I Pass  17: suminf.    4.49762 (17) obj. -75.9415 iterations 18
Cbc0038I Pass  18: suminf.    3.94657 (12) obj. -75.9415 iterations 4
Cbc0038I Pass  19: suminf.    1.23302 (6) obj. -75.9415 iterations 15
Cbc0038I Pass  20: suminf.    1.02472 (6) obj. -75.9415 iterations 1
Cbc0038I Pass  21: suminf.    1.72432 (6) obj. -75.9415 iterations 4
Cbc0038I Pass  22: suminf.    0.14946 (2) obj. -75.9415 iterations 4
Cbc0038I Pass  23: suminf.    0.54916 (2) obj. -75.9415 iterations 3
Cbc0038I Pass  24: suminf.    0.20601 (1) obj. -75.9415 iterations 1
Cbc0038I Pass  25: suminf.    0.54916 (2) obj. -75.9415 iterations 2
Cbc0038I Pass  26: suminf.    2.77234 (12) obj. -75.9415 iterations 13
Cbc0038I Pass  27: suminf.    2.76303 (12) obj. -75.9415 iterations 8
Cbc0038I Pass  28: suminf.    0.41583 (2) obj. -75.9415 iterations 18
Cbc0038I Pass  29: suminf.    0.22561 (1) obj. -75.9415 iterations 2
Cbc0038I Pass  30: suminf.    1.88718 (6) obj. -75.9415 iterations 15
Cbc0038I Pass  31: suminf.    1.61023 (5) obj. -75.9415 iterations 6
Cbc0038I Pass  32: suminf.    0.75000 (2) obj. -75.9415 iterations 7
Cbc0038I Rounding solution of -71.5766 is better than previous of -70.4352

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 48 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -85.8527
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.30666 (33) obj. -85.8527 iterations 0
Cbc0038I Pass  33: suminf.    2.53222 (33) obj. -85.8527 iterations 1
Cbc0038I Pass  34: suminf.    2.53222 (33) obj. -85.8527 iterations 1
Cbc0038I Pass  35: suminf.    2.62810 (19) obj. -85.8527 iterations 37
Cbc0038I Pass  36: suminf.    1.99242 (9) obj. -85.8527 iterations 4
Cbc0038I Pass  37: suminf.    1.21242 (11) obj. -85.8527 iterations 13
Cbc0038I Pass  38: suminf.    1.21242 (11) obj. -85.8527 iterations 1
Cbc0038I Pass  39: suminf.    0.87548 (5) obj. -85.8527 iterations 13
Cbc0038I Pass  40: suminf.    0.87548 (5) obj. -85.8527 iterations 0
Cbc0038I Pass  41: suminf.    0.95954 (6) obj. -85.8527 iterations 3
Cbc0038I Pass  42: suminf.    1.98061 (9) obj. -85.8527 iterations 12
Cbc0038I Pass  43: suminf.    1.98061 (9) obj. -85.8527 iterations 2
Cbc0038I Pass  44: suminf.    1.20450 (6) obj. -85.8527 iterations 6
Cbc0038I Pass  45: suminf.    1.20450 (6) obj. -85.8527 iterations 0
Cbc0038I Pass  46: suminf.    1.62429 (7) obj. -85.8527 iterations 1
Cbc0038I Pass  47: suminf.    1.09605 (5) obj. -85.8527 iterations 2
Cbc0038I Pass  48: suminf.    1.20450 (6) obj. -85.8527 iterations 3
Cbc0038I Pass  49: suminf.    2.42674 (11) obj. -85.8527 iterations 11
Cbc0038I Pass  50: suminf.    2.42674 (11) obj. -85.8527 iterations 2
Cbc0038I Pass  51: suminf.    1.32768 (6) obj. -85.8527 iterations 10
Cbc0038I Pass  52: suminf.    1.16296 (6) obj. -85.8527 iterations 1
Cbc0038I Pass  53: suminf.    1.32768 (6) obj. -85.8527 iterations 3
Cbc0038I Pass  54: suminf.    4.06001 (17) obj. -85.8527 iterations 14
Cbc0038I Pass  55: suminf.    3.73020 (14) obj. -85.8527 iterations 3
Cbc0038I Pass  56: suminf.    2.88038 (12) obj. -85.8527 iterations 6
Cbc0038I Pass  57: suminf.    1.51875 (7) obj. -85.8527 iterations 19
Cbc0038I Pass  58: suminf.    1.16296 (6) obj. -85.8527 iterations 2
Cbc0038I Pass  59: suminf.    1.32768 (6) obj. -85.8527 iterations 3
Cbc0038I Pass  60: suminf.    2.77286 (11) obj. -85.8527 iterations 9
Cbc0038I Pass  61: suminf.    2.77286 (11) obj. -85.8527 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 47 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -71.5766 - took 0.05 seconds
Cbc0012I Integer solution of -71.5766 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 45 rows 43 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 14 added rows had average density of 4.2142857
Cbc0013I At root node, 14 cuts changed objective from -125.49736 to -71.826768 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 229 row cuts average 2.1 elements, 64 column cuts (64 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 54 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 153 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0001I Search completed - best objective -71.5766, took 222 iterations and 0 nodes (0.21 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 70 (-8) columns and 386 (-67) elements
Clp1000I sum of infeasibilities 0.000119826 - average 9.43512e-07, 18 fixed columns
Coin0506I Presolve 91 (-36) rows, 51 (-19) columns and 277 (-109) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 49.92559
Clp0000I Optimal - objective value 49.92559
Coin0511I After Postsolve, objective 49.92559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.92559
Clp0000I Optimal - objective value 49.92559
Clp0000I Optimal - objective value 49.92559
Coin0511I After Postsolve, objective 49.92559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.9255898 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 70 columns (69 integer (69 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.047%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.36683
Cbc0038I Solution found of 0.942147
Cbc0038I Relaxing continuous gives -4.3757
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 68 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -4.3757 to -27.4115 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.6492
Cbc0038I Pass   1: suminf.    1.74620 (16) obj. -29.6492 iterations 46
Cbc0038I Pass   2: suminf.    1.31873 (11) obj. -29.6492 iterations 8
Cbc0038I Pass   3: suminf.    2.79316 (7) obj. -29.6492 iterations 15
Cbc0038I Pass   4: suminf.    0.88159 (4) obj. -29.6492 iterations 9
Cbc0038I Pass   5: suminf.    0.86411 (5) obj. -29.6492 iterations 4
Cbc0038I Pass   6: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass   7: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass   8: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass   9: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  10: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  11: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  12: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass  13: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass  14: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass  15: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  16: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  17: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  18: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass  19: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass  20: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass  21: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  22: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  23: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  24: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I Pass  25: suminf.    1.26605 (4) obj. -29.6492 iterations 5
Cbc0038I Pass  26: suminf.    1.19447 (7) obj. -29.6492 iterations 8
Cbc0038I Pass  27: suminf.    1.17777 (4) obj. -29.6492 iterations 2
Cbc0038I Pass  28: suminf.    1.49498 (4) obj. -29.6492 iterations 1
Cbc0038I Pass  29: suminf.    0.86411 (5) obj. -29.6492 iterations 5
Cbc0038I Pass  30: suminf.    1.84070 (4) obj. -29.6492 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.4115 - took 0.05 seconds
Cbc0012I Integer solution of -27.41147 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 126 rows 70 columns, reduced to 68 rows 39 columns
Cbc0031I 19 added rows had average density of 45.894737
Cbc0013I At root node, 19 cuts changed objective from -49.788216 to -43.161246 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7463 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2013 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -27.41147 best solution, best possible -43.161246 (0.69 seconds)
Cbc0001I Search completed - best objective -27.41147, took 6457 iterations and 26 nodes (0.81 seconds)
Cbc0032I Strong branching done 328 times (6947 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 7, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 112 (-41) columns and 1805 (-1499) elements
Clp1000I sum of infeasibilities 2.67058e-07 - average 2.64414e-09, 75 fixed columns
Coin0506I Presolve 31 (-70) rows, 37 (-75) columns and 132 (-1673) elements
Clp0006I 0  Obj -12.765065 Dual inf 22.570169 (36)
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 0.25751506 - largest nonzero change 1.7908692e-05 ( 0.0015380202%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -10.714012
Clp0000I Optimal - objective value -10.714012
Coin0511I After Postsolve, objective -10.714012, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -10.714012 Dual inf 78.321737 (44)
Clp0014I Perturbing problem by 0.001% of 1.4330646 - largest nonzero change 2.4511263e-05 ( 0.0015380202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 60.987912
Clp0000I Optimal - objective value 60.987912
Clp0000I Optimal - objective value 60.987912
Coin0511I After Postsolve, objective 60.987912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.98791186 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 53 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 112 columns (112 integer (112 of which binary)) and 1834 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.857%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.78053
Cbc0038I Pass   1: suminf.    0.47896 (13) obj. -46.7381 iterations 17
Cbc0038I Pass   2: suminf.    0.47896 (13) obj. -46.7381 iterations 4
Cbc0038I Solution found of -22.8164
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 112 columns, reduced to 35 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -25.877
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.47896 (13) obj. -46.7381 iterations 0
Cbc0038I Pass   4: suminf.    0.47896 (13) obj. -46.7381 iterations 2
Cbc0038I Pass   5: suminf.    0.35939 (2) obj. -25.877 iterations 16
Cbc0038I Pass   6: suminf.    0.09046 (2) obj. -30.7631 iterations 3
Cbc0038I Pass   7: suminf.    0.05970 (1) obj. -30.3388 iterations 1
Cbc0038I Pass   8: suminf.    2.30185 (25) obj. -25.877 iterations 25
Cbc0038I Pass   9: suminf.    1.11930 (22) obj. -25.877 iterations 12
Cbc0038I Pass  10: suminf.    0.71814 (20) obj. -27.5576 iterations 3
Cbc0038I Pass  11: suminf.    1.13081 (10) obj. -25.877 iterations 22
Cbc0038I Pass  12: suminf.    1.06212 (10) obj. -25.877 iterations 3
Cbc0038I Pass  13: suminf.    2.42751 (11) obj. -25.877 iterations 5
Cbc0038I Pass  14: suminf.    2.08407 (11) obj. -25.877 iterations 1
Cbc0038I Pass  15: suminf.    1.14868 (16) obj. -25.877 iterations 15
Cbc0038I Pass  16: suminf.    1.14868 (16) obj. -25.877 iterations 3
Cbc0038I Pass  17: suminf.    0.82872 (16) obj. -25.877 iterations 21
Cbc0038I Pass  18: suminf.    0.58727 (10) obj. -26.0729 iterations 4
Cbc0038I Pass  19: suminf.    0.82872 (16) obj. -25.877 iterations 5
Cbc0038I Pass  20: suminf.    1.07777 (13) obj. -25.877 iterations 14
Cbc0038I Pass  21: suminf.    1.07777 (13) obj. -25.877 iterations 3
Cbc0038I Pass  22: suminf.    2.70588 (16) obj. -25.877 iterations 10
Cbc0038I Pass  23: suminf.    1.02550 (16) obj. -25.877 iterations 11
Cbc0038I Pass  24: suminf.    0.69940 (12) obj. -25.9608 iterations 11
Cbc0038I Pass  25: suminf.    2.70588 (16) obj. -25.877 iterations 10
Cbc0038I Pass  26: suminf.    1.79020 (16) obj. -25.877 iterations 15
Cbc0038I Pass  27: suminf.    1.79020 (16) obj. -25.877 iterations 1
Cbc0038I Pass  28: suminf.    2.52585 (12) obj. -25.877 iterations 13
Cbc0038I Pass  29: suminf.    2.52585 (12) obj. -25.877 iterations 1
Cbc0038I Pass  30: suminf.    1.24765 (12) obj. -25.877 iterations 5
Cbc0038I Pass  31: suminf.    1.24765 (12) obj. -25.877 iterations 2
Cbc0038I Pass  32: suminf.    2.31982 (12) obj. -25.877 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 112 columns, reduced to 47 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -22.8164 to -25.7662 (0.08 seconds)
Cbc0038I Round again with cutoff of -31.386
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.47896 (13) obj. -46.7381 iterations 0
Cbc0038I Pass  33: suminf.    0.47896 (13) obj. -46.7381 iterations 2
Cbc0038I Pass  34: suminf.    0.22876 (24) obj. -31.386 iterations 22
Cbc0038I Pass  35: suminf.    0.22607 (24) obj. -31.386 iterations 2
Cbc0038I Pass  36: suminf.    1.81059 (15) obj. -31.386 iterations 22
Cbc0038I Pass  37: suminf.    1.81059 (15) obj. -31.386 iterations 3
Cbc0038I Pass  38: suminf.    2.40009 (16) obj. -31.386 iterations 17
Cbc0038I Pass  39: suminf.    1.77088 (13) obj. -31.386 iterations 2
Cbc0038I Pass  40: suminf.    1.31759 (13) obj. -31.386 iterations 4
Cbc0038I Pass  41: suminf.    2.40009 (16) obj. -31.386 iterations 7
Cbc0038I Pass  42: suminf.    1.55735 (18) obj. -31.386 iterations 17
Cbc0038I Pass  43: suminf.    1.47906 (16) obj. -31.386 iterations 7
Cbc0038I Pass  44: suminf.    1.54605 (15) obj. -31.386 iterations 20
Cbc0038I Pass  45: suminf.    1.54605 (15) obj. -31.386 iterations 5
Cbc0038I Pass  46: suminf.    1.58185 (13) obj. -31.386 iterations 11
Cbc0038I Pass  47: suminf.    1.28635 (13) obj. -31.386 iterations 4
Cbc0038I Pass  48: suminf.    2.40009 (16) obj. -31.386 iterations 7
Cbc0038I Pass  49: suminf.    1.77088 (13) obj. -31.386 iterations 2
Cbc0038I Pass  50: suminf.    1.31759 (13) obj. -31.386 iterations 4
Cbc0038I Pass  51: suminf.    2.64208 (23) obj. -31.386 iterations 26
Cbc0038I Pass  52: suminf.    1.74123 (22) obj. -31.386 iterations 11
Cbc0038I Pass  53: suminf.    1.19619 (20) obj. -31.386 iterations 7
Cbc0038I Pass  54: suminf.    0.80821 (19) obj. -32.3207 iterations 2
Cbc0038I Pass  55: suminf.    2.90338 (20) obj. -31.386 iterations 22
Cbc0038I Pass  56: suminf.    1.96631 (18) obj. -31.386 iterations 4
Cbc0038I Pass  57: suminf.    1.57579 (13) obj. -31.386 iterations 14
Cbc0038I Pass  58: suminf.    1.27082 (13) obj. -31.386 iterations 7
Cbc0038I Pass  59: suminf.    2.40009 (16) obj. -31.386 iterations 9
Cbc0038I Pass  60: suminf.    1.77088 (13) obj. -31.386 iterations 3
Cbc0038I Pass  61: suminf.    1.31759 (13) obj. -31.386 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 112 columns, reduced to 45 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -25.7662 - took 0.08 seconds
Cbc0012I Integer solution of -25.76618 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 100 rows 112 columns, reduced to 21 rows 22 columns
Cbc0031I 52 added rows had average density of 28.596154
Cbc0013I At root node, 52 cuts changed objective from -53.421848 to -36.294921 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14690 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1637 row cuts average 98.7 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 81 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 577 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 660 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 308 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.749 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.76618 best solution, best possible -36.294921 (2.67 seconds)
Cbc0010I After 3 nodes, 2 on tree, -25.76618 best solution, best possible -33.346935 (3.38 seconds)
Cbc0004I Integer solution of -26.41147 found after 6490 iterations and 9 nodes (3.73 seconds)
Cbc0010I After 16 nodes, 6 on tree, -26.41147 best solution, best possible -33.346935 (4.08 seconds)
Cbc0004I Integer solution of -27.41147 found after 6877 iterations and 21 nodes (4.24 seconds)
Cbc0001I Search completed - best objective -27.41147, took 7272 iterations and 28 nodes (4.45 seconds)
Cbc0032I Strong branching done 502 times (10463 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 34 variables fixed on reduced cost
Total time (CPU seconds):       3.15   (Wallclock seconds):       4.46

