Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 49 (-4) columns and 262 (-41) elements
Clp1000I sum of infeasibilities 2.07075e-05 - average 2.40785e-07, 3 fixed columns
Coin0506I Presolve 80 (-6) rows, 46 (-3) columns and 244 (-18) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Coin0511I After Postsolve, objective 41.475372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Coin0511I After Postsolve, objective 41.475372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.47537193 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 49 columns (48 integer (48 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.73926
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.74036 iterations 32
Cbc0038I Solution found of 1.74036
Cbc0038I Relaxing continuous gives 1.74036
Cbc0038I Rounding solution of -0.01005 is better than previous of 1.74036

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -0.01005 to -9.47555 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.6756
Cbc0038I Pass   2: suminf.    1.44579 (9) obj. -12.6756 iterations 7
Cbc0038I Pass   3: suminf.    1.37135 (8) obj. -12.6756 iterations 1
Cbc0038I Pass   4: suminf.    1.37135 (8) obj. -12.6756 iterations 0
Cbc0038I Pass   5: suminf.    1.90425 (6) obj. -12.6756 iterations 9
Cbc0038I Pass   6: suminf.    1.90425 (6) obj. -12.6756 iterations 0
Cbc0038I Pass   7: suminf.    1.16227 (4) obj. -12.6756 iterations 7
Cbc0038I Pass   8: suminf.    1.02115 (3) obj. -12.6756 iterations 2
Cbc0038I Pass   9: suminf.    1.04671 (3) obj. -12.6756 iterations 1
Cbc0038I Pass  10: suminf.    1.27311 (5) obj. -12.6756 iterations 12
Cbc0038I Pass  11: suminf.    1.27311 (5) obj. -12.6756 iterations 1
Cbc0038I Pass  12: suminf.    1.86495 (5) obj. -12.6756 iterations 12
Cbc0038I Pass  13: suminf.    1.68274 (6) obj. -12.6756 iterations 3
Cbc0038I Pass  14: suminf.    1.68274 (6) obj. -12.6756 iterations 0
Cbc0038I Pass  15: suminf.    1.35880 (5) obj. -12.6756 iterations 6
Cbc0038I Pass  16: suminf.    1.35880 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  17: suminf.    0.98551 (4) obj. -12.6756 iterations 7
Cbc0038I Pass  18: suminf.    0.83126 (3) obj. -12.6756 iterations 1
Cbc0038I Pass  19: suminf.    1.46742 (4) obj. -12.6756 iterations 4
Cbc0038I Pass  20: suminf.    1.46742 (4) obj. -12.6756 iterations 0
Cbc0038I Pass  21: suminf.    1.62266 (5) obj. -12.6756 iterations 5
Cbc0038I Pass  22: suminf.    1.62266 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  23: suminf.    2.12062 (5) obj. -12.6756 iterations 5
Cbc0038I Pass  24: suminf.    2.12062 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  25: suminf.    1.93950 (5) obj. -12.6756 iterations 2
Cbc0038I Pass  26: suminf.    1.68274 (6) obj. -12.6756 iterations 3
Cbc0038I Pass  27: suminf.    1.68274 (6) obj. -12.6756 iterations 0
Cbc0038I Pass  28: suminf.    1.35880 (5) obj. -12.6756 iterations 6
Cbc0038I Pass  29: suminf.    1.35880 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  30: suminf.    0.98551 (4) obj. -12.6756 iterations 7
Cbc0038I Pass  31: suminf.    0.83126 (3) obj. -12.6756 iterations 1
Cbc0038I Rounding solution of -10.404 is better than previous of -9.47555

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -18.4356
Cbc0038I Pass  31: suminf.    2.20213 (9) obj. -18.4356 iterations 0
Cbc0038I Pass  32: suminf.    2.12769 (8) obj. -18.4356 iterations 1
Cbc0038I Pass  33: suminf.    2.12769 (8) obj. -18.4356 iterations 0
Cbc0038I Pass  34: suminf.    2.15227 (6) obj. -18.4356 iterations 10
Cbc0038I Pass  35: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  36: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  37: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  38: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  39: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  40: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  41: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  42: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  43: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  44: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  45: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  46: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  47: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  48: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  49: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  50: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  51: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  52: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  53: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  54: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  55: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  56: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  57: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  58: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  59: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  60: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -10.404 - took 0.07 seconds
Cbc0012I Integer solution of -10.40399 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 86 rows 49 columns, reduced to 65 rows 38 columns
Cbc0031I 29 added rows had average density of 33.413793
Cbc0013I At root node, 29 cuts changed objective from -41.475372 to -30.475799 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9885 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 48.9 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 159 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 48.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -10.40399 best solution, best possible -30.475799 (0.69 seconds)
Cbc0038I Full problem 86 rows 49 columns, reduced to 56 rows 33 columns
Cbc0001I Search completed - best objective -10.40399, took 11128 iterations and 60 nodes (1.10 seconds)
Cbc0032I Strong branching done 862 times (14348 iterations), fathomed 4 nodes and fixed 22 variables
Cbc0035I Maximum depth 17, 80 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-26) rows, 88 (-14) columns and 1186 (-392) elements
Clp1000I sum of infeasibilities 4.06084e-09 - average 5.2062e-11, 20 fixed columns
Coin0506I Presolve 63 (-15) rows, 68 (-20) columns and 673 (-513) elements
Clp0006I 0  Obj 39.572688 Dual inf 2.1859294 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 4.6179003 - largest nonzero change 2.8309492e-05 ( 0.0017125872%) - largest zero change 2.8045997e-05
Clp0000I Optimal - objective value 54.490802
Clp0000I Optimal - objective value 54.490802
Coin0511I After Postsolve, objective 54.490802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.490802
Clp0000I Optimal - objective value 54.490802
Clp0000I Optimal - objective value 54.490802
Clp0000I Optimal - objective value 54.490802
Coin0511I After Postsolve, objective 54.490802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.4908018 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 88 columns (88 integer (88 of which binary)) and 1188 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.088%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.79336
Cbc0038I Pass   1: suminf.    2.43186 (23) obj. -34.6302 iterations 13
Cbc0038I Pass   2: suminf.    2.43186 (23) obj. -34.6302 iterations 1
Cbc0038I Pass   3: suminf.    0.50903 (6) obj. -2.88688 iterations 17
Cbc0038I Solution found of 4.44409
Cbc0038I Rounding solution of 0.00521 is better than previous of 4.44409

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.52501
Cbc0038I Pass   4: suminf.    2.43186 (23) obj. -34.6302 iterations 0
Cbc0038I Pass   5: suminf.    2.43186 (23) obj. -34.6302 iterations 1
Cbc0038I Pass   6: suminf.    0.66208 (8) obj. -4.52501 iterations 19
Cbc0038I Pass   7: suminf.    0.82667 (2) obj. -4.52501 iterations 9
Cbc0038I Pass   8: suminf.    0.51087 (2) obj. -6.41979 iterations 2
Cbc0038I Pass   9: suminf.    0.82667 (2) obj. -4.52501 iterations 3
Cbc0038I Pass  10: suminf.    1.57626 (11) obj. -4.52501 iterations 27
Cbc0038I Pass  11: suminf.    1.57626 (11) obj. -4.52501 iterations 0
Cbc0038I Pass  12: suminf.    1.48064 (8) obj. -4.52501 iterations 23
Cbc0038I Pass  13: suminf.    1.30788 (7) obj. -5.70985 iterations 3
Cbc0038I Pass  14: suminf.    1.54837 (5) obj. -4.52501 iterations 14
Cbc0038I Pass  15: suminf.    1.25707 (5) obj. -5.39893 iterations 5
Cbc0038I Pass  16: suminf.    1.61774 (11) obj. -4.52501 iterations 30
Cbc0038I Pass  17: suminf.    1.53798 (10) obj. -4.64699 iterations 5
Cbc0038I Pass  18: suminf.    1.56758 (7) obj. -4.52501 iterations 15
Cbc0038I Pass  19: suminf.    1.27176 (7) obj. -5.03039 iterations 3
Cbc0038I Pass  20: suminf.    2.36995 (17) obj. -6.21719 iterations 31
Cbc0038I Pass  21: suminf.    1.93022 (13) obj. -6.37108 iterations 5
Cbc0038I Pass  22: suminf.    1.36718 (9) obj. -4.52501 iterations 11
Cbc0038I Pass  23: suminf.    1.26438 (8) obj. -4.64094 iterations 3
Cbc0038I Pass  24: suminf.    2.00737 (10) obj. -4.52501 iterations 5
Cbc0038I Pass  25: suminf.    1.24143 (8) obj. -4.52501 iterations 3
Cbc0038I Pass  26: suminf.    1.50307 (8) obj. -4.52501 iterations 15
Cbc0038I Pass  27: suminf.    1.45071 (6) obj. -4.52501 iterations 2
Cbc0038I Pass  28: suminf.    1.12903 (6) obj. -4.52501 iterations 2
Cbc0038I Pass  29: suminf.    1.16209 (6) obj. -4.52501 iterations 10
Cbc0038I Pass  30: suminf.    0.75507 (6) obj. -4.52501 iterations 1
Cbc0038I Pass  31: suminf.    0.74659 (5) obj. -4.52501 iterations 4
Cbc0038I Pass  32: suminf.    0.73157 (4) obj. -4.52501 iterations 4
Cbc0038I Pass  33: suminf.    0.90423 (5) obj. -4.52501 iterations 4
Cbc0038I Rounding solution of -0.1866 is better than previous of 0.00521

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 48 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -0.1866 to -7.80822 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.3059
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.43186 (23) obj. -34.6302 iterations 0
Cbc0038I Pass  34: suminf.    2.43186 (23) obj. -34.6302 iterations 1
Cbc0038I Pass  35: suminf.    1.66191 (13) obj. -15.3059 iterations 12
Cbc0038I Pass  36: suminf.    1.12162 (5) obj. -15.3059 iterations 20
Cbc0038I Pass  37: suminf.    0.86583 (5) obj. -16.0732 iterations 2
Cbc0038I Pass  38: suminf.    1.42163 (11) obj. -15.3059 iterations 8
Cbc0038I Pass  39: suminf.    1.42163 (11) obj. -15.3059 iterations 0
Cbc0038I Pass  40: suminf.    1.38465 (6) obj. -15.3059 iterations 18
Cbc0038I Pass  41: suminf.    1.14166 (6) obj. -15.3059 iterations 2
Cbc0038I Pass  42: suminf.    1.38465 (6) obj. -15.3059 iterations 5
Cbc0038I Pass  43: suminf.    2.95934 (15) obj. -15.3059 iterations 23
Cbc0038I Pass  44: suminf.    1.99775 (14) obj. -15.3059 iterations 5
Cbc0038I Pass  45: suminf.    1.79645 (13) obj. -15.6102 iterations 2
Cbc0038I Pass  46: suminf.    1.19365 (13) obj. -15.3059 iterations 13
Cbc0038I Pass  47: suminf.    1.18940 (9) obj. -15.3059 iterations 2
Cbc0038I Pass  48: suminf.    1.49762 (9) obj. -15.3059 iterations 10
Cbc0038I Pass  49: suminf.    1.49762 (9) obj. -15.3059 iterations 0
Cbc0038I Pass  50: suminf.    1.57355 (8) obj. -15.3059 iterations 6
Cbc0038I Pass  51: suminf.    1.57355 (8) obj. -15.3059 iterations 1
Cbc0038I Pass  52: suminf.    1.29882 (8) obj. -15.3059 iterations 4
Cbc0038I Pass  53: suminf.    1.28663 (7) obj. -15.3059 iterations 3
Cbc0038I Pass  54: suminf.    1.24139 (8) obj. -15.3059 iterations 5
Cbc0038I Pass  55: suminf.    1.22904 (7) obj. -15.3059 iterations 3
Cbc0038I Pass  56: suminf.    1.29882 (8) obj. -15.3059 iterations 3
Cbc0038I Pass  57: suminf.    2.14586 (14) obj. -15.3059 iterations 16
Cbc0038I Pass  58: suminf.    1.94882 (14) obj. -15.3195 iterations 5
Cbc0038I Pass  59: suminf.    2.00381 (10) obj. -15.3059 iterations 14
Cbc0038I Pass  60: suminf.    1.43625 (9) obj. -15.3059 iterations 1
Cbc0038I Pass  61: suminf.    1.08139 (8) obj. -15.3059 iterations 4
Cbc0038I Pass  62: suminf.    1.57355 (8) obj. -15.3059 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -7.80822 - took 0.05 seconds
Cbc0012I Integer solution of -7.80822 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 78 rows 88 columns, reduced to 25 rows 31 columns
Cbc0031I 56 added rows had average density of 11.875
Cbc0013I At root node, 56 cuts changed objective from -45.296121 to -12.376439 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6564 row cuts average 6.7 elements, 2 column cuts (2 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1083 row cuts average 78.5 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 617 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 256 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.637 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.80822 best solution, best possible -12.376439 (1.77 seconds)
Cbc0012I Integer solution of -8.61969 found by DiveCoefficient after 3106 iterations and 5 nodes (1.92 seconds)
Cbc0012I Integer solution of -8.96659 found by DiveCoefficient after 3123 iterations and 6 nodes (1.92 seconds)
Cbc0016I Integer solution of -10.34735 found by strong branching after 3187 iterations and 6 nodes (1.95 seconds)
Cbc0004I Integer solution of -10.40399 found after 3652 iterations and 14 nodes (2.02 seconds)
Cbc0001I Search completed - best objective -10.40399, took 3652 iterations and 14 nodes (2.02 seconds)
Cbc0032I Strong branching done 268 times (3246 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.49   (Wallclock seconds):       2.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 49 (-4) columns and 262 (-41) elements
Clp1000I sum of infeasibilities 2.07075e-05 - average 2.40785e-07, 3 fixed columns
Coin0506I Presolve 80 (-6) rows, 46 (-3) columns and 244 (-18) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Coin0511I After Postsolve, objective 41.475372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Clp0000I Optimal - objective value 41.475372
Coin0511I After Postsolve, objective 41.475372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.47537193 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 49 columns (48 integer (48 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.73926
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.74036 iterations 32
Cbc0038I Solution found of 1.74036
Cbc0038I Relaxing continuous gives 1.74036
Cbc0038I Rounding solution of -0.01005 is better than previous of 1.74036

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -0.01005 to -9.47555 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.6756
Cbc0038I Pass   2: suminf.    1.44579 (9) obj. -12.6756 iterations 7
Cbc0038I Pass   3: suminf.    1.37135 (8) obj. -12.6756 iterations 1
Cbc0038I Pass   4: suminf.    1.37135 (8) obj. -12.6756 iterations 0
Cbc0038I Pass   5: suminf.    1.90425 (6) obj. -12.6756 iterations 9
Cbc0038I Pass   6: suminf.    1.90425 (6) obj. -12.6756 iterations 0
Cbc0038I Pass   7: suminf.    1.16227 (4) obj. -12.6756 iterations 7
Cbc0038I Pass   8: suminf.    1.02115 (3) obj. -12.6756 iterations 2
Cbc0038I Pass   9: suminf.    1.04671 (3) obj. -12.6756 iterations 1
Cbc0038I Pass  10: suminf.    1.27311 (5) obj. -12.6756 iterations 12
Cbc0038I Pass  11: suminf.    1.27311 (5) obj. -12.6756 iterations 1
Cbc0038I Pass  12: suminf.    1.86495 (5) obj. -12.6756 iterations 12
Cbc0038I Pass  13: suminf.    1.68274 (6) obj. -12.6756 iterations 3
Cbc0038I Pass  14: suminf.    1.68274 (6) obj. -12.6756 iterations 0
Cbc0038I Pass  15: suminf.    1.35880 (5) obj. -12.6756 iterations 6
Cbc0038I Pass  16: suminf.    1.35880 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  17: suminf.    0.98551 (4) obj. -12.6756 iterations 7
Cbc0038I Pass  18: suminf.    0.83126 (3) obj. -12.6756 iterations 1
Cbc0038I Pass  19: suminf.    1.46742 (4) obj. -12.6756 iterations 4
Cbc0038I Pass  20: suminf.    1.46742 (4) obj. -12.6756 iterations 0
Cbc0038I Pass  21: suminf.    1.62266 (5) obj. -12.6756 iterations 5
Cbc0038I Pass  22: suminf.    1.62266 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  23: suminf.    2.12062 (5) obj. -12.6756 iterations 5
Cbc0038I Pass  24: suminf.    2.12062 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  25: suminf.    1.93950 (5) obj. -12.6756 iterations 2
Cbc0038I Pass  26: suminf.    1.68274 (6) obj. -12.6756 iterations 3
Cbc0038I Pass  27: suminf.    1.68274 (6) obj. -12.6756 iterations 0
Cbc0038I Pass  28: suminf.    1.35880 (5) obj. -12.6756 iterations 6
Cbc0038I Pass  29: suminf.    1.35880 (5) obj. -12.6756 iterations 0
Cbc0038I Pass  30: suminf.    0.98551 (4) obj. -12.6756 iterations 7
Cbc0038I Pass  31: suminf.    0.83126 (3) obj. -12.6756 iterations 1
Cbc0038I Rounding solution of -10.404 is better than previous of -9.47555

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -18.4356
Cbc0038I Pass  31: suminf.    2.20213 (9) obj. -18.4356 iterations 0
Cbc0038I Pass  32: suminf.    2.12769 (8) obj. -18.4356 iterations 1
Cbc0038I Pass  33: suminf.    2.12769 (8) obj. -18.4356 iterations 0
Cbc0038I Pass  34: suminf.    2.15227 (6) obj. -18.4356 iterations 10
Cbc0038I Pass  35: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  36: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  37: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  38: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  39: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  40: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  41: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  42: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  43: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  44: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  45: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  46: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  47: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  48: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  49: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  50: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  51: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  52: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  53: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  54: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I Pass  55: suminf.    1.58598 (6) obj. -18.4356 iterations 2
Cbc0038I Pass  56: suminf.    1.80120 (6) obj. -18.4356 iterations 8
Cbc0038I Pass  57: suminf.    1.68828 (6) obj. -18.4356 iterations 3
Cbc0038I Pass  58: suminf.    2.15227 (6) obj. -18.4356 iterations 4
Cbc0038I Pass  59: suminf.    1.60293 (5) obj. -18.4356 iterations 1
Cbc0038I Pass  60: suminf.    2.11459 (5) obj. -18.4356 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 49 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -10.404 - took 0.06 seconds
Cbc0012I Integer solution of -10.40399 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 86 rows 49 columns, reduced to 65 rows 38 columns
Cbc0031I 29 added rows had average density of 33.413793
Cbc0013I At root node, 29 cuts changed objective from -41.475372 to -30.475799 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9885 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 48.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 159 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 48.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -10.40399 best solution, best possible -30.475799 (0.68 seconds)
Cbc0038I Full problem 86 rows 49 columns, reduced to 56 rows 33 columns
Cbc0001I Search completed - best objective -10.40399, took 11128 iterations and 60 nodes (1.09 seconds)
Cbc0032I Strong branching done 862 times (14348 iterations), fathomed 4 nodes and fixed 22 variables
Cbc0035I Maximum depth 17, 80 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-27) rows, 88 (-15) columns and 1186 (-393) elements
Clp1000I sum of infeasibilities 4.06084e-09 - average 5.2062e-11, 20 fixed columns
Coin0506I Presolve 63 (-15) rows, 68 (-20) columns and 673 (-513) elements
Clp0006I 0  Obj 39.572688 Dual inf 2.1859294 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 4.6179003 - largest nonzero change 2.8309492e-05 ( 0.0017125872%) - largest zero change 2.8045997e-05
Clp0000I Optimal - objective value 54.490802
Clp0000I Optimal - objective value 54.490802
Coin0511I After Postsolve, objective 54.490802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.490802
Clp0000I Optimal - objective value 54.490802
Clp0000I Optimal - objective value 54.490802
Clp0000I Optimal - objective value 54.490802
Coin0511I After Postsolve, objective 54.490802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.4908018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 88 columns (88 integer (88 of which binary)) and 1188 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.088%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.79336
Cbc0038I Pass   1: suminf.    2.43186 (23) obj. -34.6302 iterations 13
Cbc0038I Pass   2: suminf.    2.43186 (23) obj. -34.6302 iterations 1
Cbc0038I Pass   3: suminf.    0.50903 (6) obj. -2.88688 iterations 17
Cbc0038I Solution found of 4.44409
Cbc0038I Rounding solution of 0.00521 is better than previous of 4.44409

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.52501
Cbc0038I Pass   4: suminf.    2.43186 (23) obj. -34.6302 iterations 0
Cbc0038I Pass   5: suminf.    2.43186 (23) obj. -34.6302 iterations 1
Cbc0038I Pass   6: suminf.    0.66208 (8) obj. -4.52501 iterations 19
Cbc0038I Pass   7: suminf.    0.82667 (2) obj. -4.52501 iterations 9
Cbc0038I Pass   8: suminf.    0.51087 (2) obj. -6.41979 iterations 2
Cbc0038I Pass   9: suminf.    0.82667 (2) obj. -4.52501 iterations 3
Cbc0038I Pass  10: suminf.    1.57626 (11) obj. -4.52501 iterations 27
Cbc0038I Pass  11: suminf.    1.57626 (11) obj. -4.52501 iterations 0
Cbc0038I Pass  12: suminf.    1.48064 (8) obj. -4.52501 iterations 23
Cbc0038I Pass  13: suminf.    1.30788 (7) obj. -5.70985 iterations 3
Cbc0038I Pass  14: suminf.    1.54837 (5) obj. -4.52501 iterations 14
Cbc0038I Pass  15: suminf.    1.25707 (5) obj. -5.39893 iterations 5
Cbc0038I Pass  16: suminf.    1.61774 (11) obj. -4.52501 iterations 30
Cbc0038I Pass  17: suminf.    1.53798 (10) obj. -4.64699 iterations 5
Cbc0038I Pass  18: suminf.    1.56758 (7) obj. -4.52501 iterations 15
Cbc0038I Pass  19: suminf.    1.27176 (7) obj. -5.03039 iterations 3
Cbc0038I Pass  20: suminf.    2.36995 (17) obj. -6.21719 iterations 31
Cbc0038I Pass  21: suminf.    1.93022 (13) obj. -6.37108 iterations 5
Cbc0038I Pass  22: suminf.    1.36718 (9) obj. -4.52501 iterations 11
Cbc0038I Pass  23: suminf.    1.26438 (8) obj. -4.64094 iterations 3
Cbc0038I Pass  24: suminf.    2.00737 (10) obj. -4.52501 iterations 5
Cbc0038I Pass  25: suminf.    1.24143 (8) obj. -4.52501 iterations 3
Cbc0038I Pass  26: suminf.    1.50307 (8) obj. -4.52501 iterations 15
Cbc0038I Pass  27: suminf.    1.45071 (6) obj. -4.52501 iterations 2
Cbc0038I Pass  28: suminf.    1.12903 (6) obj. -4.52501 iterations 2
Cbc0038I Pass  29: suminf.    1.16209 (6) obj. -4.52501 iterations 10
Cbc0038I Pass  30: suminf.    0.75507 (6) obj. -4.52501 iterations 1
Cbc0038I Pass  31: suminf.    0.74659 (5) obj. -4.52501 iterations 4
Cbc0038I Pass  32: suminf.    0.73157 (4) obj. -4.52501 iterations 4
Cbc0038I Pass  33: suminf.    0.90423 (5) obj. -4.52501 iterations 4
Cbc0038I Rounding solution of -0.1866 is better than previous of 0.00521

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 88 columns, reduced to 48 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -0.1866 to -7.80822 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.3059
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.43186 (23) obj. -34.6302 iterations 0
Cbc0038I Pass  34: suminf.    2.43186 (23) obj. -34.6302 iterations 1
Cbc0038I Pass  35: suminf.    1.66191 (13) obj. -15.3059 iterations 12
Cbc0038I Pass  36: suminf.    1.12162 (5) obj. -15.3059 iterations 20
Cbc0038I Pass  37: suminf.    0.86583 (5) obj. -16.0732 iterations 2
Cbc0038I Pass  38: suminf.    1.42163 (11) obj. -15.3059 iterations 8
Cbc0038I Pass  39: suminf.    1.42163 (11) obj. -15.3059 iterations 0
Cbc0038I Pass  40: suminf.    1.38465 (6) obj. -15.3059 iterations 18
Cbc0038I Pass  41: suminf.    1.14166 (6) obj. -15.3059 iterations 2
Cbc0038I Pass  42: suminf.    1.38465 (6) obj. -15.3059 iterations 5
Cbc0038I Pass  43: suminf.    2.95934 (15) obj. -15.3059 iterations 23
Cbc0038I Pass  44: suminf.    1.99775 (14) obj. -15.3059 iterations 5
Cbc0038I Pass  45: suminf.    1.79645 (13) obj. -15.6102 iterations 2
Cbc0038I Pass  46: suminf.    1.19365 (13) obj. -15.3059 iterations 13
Cbc0038I Pass  47: suminf.    1.18940 (9) obj. -15.3059 iterations 2
Cbc0038I Pass  48: suminf.    1.49762 (9) obj. -15.3059 iterations 10
Cbc0038I Pass  49: suminf.    1.49762 (9) obj. -15.3059 iterations 0
Cbc0038I Pass  50: suminf.    1.57355 (8) obj. -15.3059 iterations 6
Cbc0038I Pass  51: suminf.    1.57355 (8) obj. -15.3059 iterations 1
Cbc0038I Pass  52: suminf.    1.29882 (8) obj. -15.3059 iterations 4
Cbc0038I Pass  53: suminf.    1.28663 (7) obj. -15.3059 iterations 3
Cbc0038I Pass  54: suminf.    1.24139 (8) obj. -15.3059 iterations 5
Cbc0038I Pass  55: suminf.    1.22904 (7) obj. -15.3059 iterations 3
Cbc0038I Pass  56: suminf.    1.29882 (8) obj. -15.3059 iterations 3
Cbc0038I Pass  57: suminf.    2.14586 (14) obj. -15.3059 iterations 16
Cbc0038I Pass  58: suminf.    1.94882 (14) obj. -15.3195 iterations 5
Cbc0038I Pass  59: suminf.    2.00381 (10) obj. -15.3059 iterations 14
Cbc0038I Pass  60: suminf.    1.43625 (9) obj. -15.3059 iterations 1
Cbc0038I Pass  61: suminf.    1.08139 (8) obj. -15.3059 iterations 4
Cbc0038I Pass  62: suminf.    1.57355 (8) obj. -15.3059 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -7.80822 - took 0.06 seconds
Cbc0012I Integer solution of -7.80822 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 78 rows 88 columns, reduced to 25 rows 31 columns
Cbc0031I 56 added rows had average density of 11.875
Cbc0013I At root node, 56 cuts changed objective from -45.296121 to -12.376439 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6564 row cuts average 6.7 elements, 2 column cuts (2 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1083 row cuts average 78.5 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 617 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 256 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.673 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.80822 best solution, best possible -12.376439 (1.89 seconds)
Cbc0012I Integer solution of -8.61969 found by DiveCoefficient after 3106 iterations and 5 nodes (2.05 seconds)
Cbc0012I Integer solution of -8.96659 found by DiveCoefficient after 3123 iterations and 6 nodes (2.05 seconds)
Cbc0016I Integer solution of -10.34735 found by strong branching after 3187 iterations and 6 nodes (2.07 seconds)
Cbc0004I Integer solution of -10.40399 found after 3652 iterations and 14 nodes (2.14 seconds)
Cbc0001I Search completed - best objective -10.40399, took 3652 iterations and 14 nodes (2.14 seconds)
Cbc0032I Strong branching done 268 times (3246 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.56   (Wallclock seconds):       2.15

