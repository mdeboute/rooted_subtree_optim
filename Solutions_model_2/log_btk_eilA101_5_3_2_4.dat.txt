Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 101 (-2) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 3.28757e-05 - average 1.84695e-07, 13 fixed columns
Coin0506I Presolve 150 (-28) rows, 86 (-15) columns and 464 (-86) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 0.26375812 - largest nonzero change 0 ( 0%) - largest zero change 2.916819e-05
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Coin0511I After Postsolve, objective 35.298896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24182605 - largest nonzero change 0 ( 0%) - largest zero change 2.9528267e-05
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Coin0511I After Postsolve, objective 35.298896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.29889551 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 101 columns (100 integer (100 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.858%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 13.2539
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.45833 iterations 78
Cbc0038I Solution found of 9.45833
Cbc0038I Relaxing continuous gives 9.45833
Cbc0038I Rounding solution of 2.60412 is better than previous of 9.45833

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 100 rows 59 columns
Cbc0038I Mini branch and bound improved solution from 2.60412 to -2.32853 (0.05 seconds)
Cbc0038I Round again with cutoff of -5.62566
Cbc0038I Pass   2: suminf.    2.64713 (12) obj. -5.62566 iterations 18
Cbc0038I Pass   3: suminf.    1.64571 (7) obj. -5.62566 iterations 15
Cbc0038I Pass   4: suminf.    2.19071 (7) obj. -5.62566 iterations 10
Cbc0038I Pass   5: suminf.    2.01486 (9) obj. -5.62566 iterations 6
Cbc0038I Pass   6: suminf.    3.53414 (12) obj. -5.62566 iterations 26
Cbc0038I Pass   7: suminf.    3.21624 (11) obj. -5.62566 iterations 7
Cbc0038I Pass   8: suminf.    2.35859 (10) obj. -5.62566 iterations 11
Cbc0038I Pass   9: suminf.    2.13903 (8) obj. -5.62566 iterations 17
Cbc0038I Pass  10: suminf.    2.13903 (8) obj. -5.62566 iterations 0
Cbc0038I Pass  11: suminf.    1.98304 (10) obj. -5.62566 iterations 14
Cbc0038I Pass  12: suminf.    1.60488 (6) obj. -5.62566 iterations 7
Cbc0038I Pass  13: suminf.    2.25413 (7) obj. -5.62566 iterations 10
Cbc0038I Pass  14: suminf.    2.65038 (11) obj. -5.62566 iterations 8
Cbc0038I Pass  15: suminf.    3.74546 (14) obj. -5.62566 iterations 38
Cbc0038I Pass  16: suminf.    2.68498 (11) obj. -5.62566 iterations 18
Cbc0038I Pass  17: suminf.    3.27388 (10) obj. -5.62566 iterations 22
Cbc0038I Pass  18: suminf.    2.86347 (9) obj. -5.62566 iterations 2
Cbc0038I Pass  19: suminf.    2.86347 (9) obj. -5.62566 iterations 0
Cbc0038I Pass  20: suminf.    2.07064 (8) obj. -5.62566 iterations 9
Cbc0038I Pass  21: suminf.    1.64571 (7) obj. -5.62566 iterations 7
Cbc0038I Pass  22: suminf.    2.19071 (7) obj. -5.62566 iterations 8
Cbc0038I Pass  23: suminf.    2.01486 (9) obj. -5.62566 iterations 6
Cbc0038I Pass  24: suminf.    1.98939 (10) obj. -5.62566 iterations 23
Cbc0038I Pass  25: suminf.    1.82644 (8) obj. -5.62566 iterations 3
Cbc0038I Pass  26: suminf.    2.36896 (7) obj. -5.62566 iterations 20
Cbc0038I Pass  27: suminf.    2.31954 (7) obj. -5.62566 iterations 3
Cbc0038I Pass  28: suminf.    1.78947 (5) obj. -5.62566 iterations 11
Cbc0038I Pass  29: suminf.    1.73035 (6) obj. -5.62566 iterations 2
Cbc0038I Pass  30: suminf.    2.23662 (7) obj. -5.62566 iterations 6
Cbc0038I Pass  31: suminf.    2.02717 (9) obj. -5.62566 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -2.32853 to -2.41492 (0.11 seconds)
Cbc0038I Round again with cutoff of -11.5603
Cbc0038I Pass  31: suminf.    3.99116 (19) obj. -11.5603 iterations 4
Cbc0038I Pass  32: suminf.    2.75321 (8) obj. -11.5603 iterations 17
Cbc0038I Pass  33: suminf.    2.71462 (7) obj. -11.5603 iterations 3
Cbc0038I Pass  34: suminf.    2.80747 (9) obj. -11.5603 iterations 13
Cbc0038I Pass  35: suminf.    2.72142 (8) obj. -11.5603 iterations 1
Cbc0038I Pass  36: suminf.    3.33739 (9) obj. -11.5603 iterations 11
Cbc0038I Pass  37: suminf.    2.14631 (6) obj. -11.5603 iterations 5
Cbc0038I Pass  38: suminf.    3.81249 (13) obj. -11.5603 iterations 21
Cbc0038I Pass  39: suminf.    3.18478 (12) obj. -11.5603 iterations 9
Cbc0038I Pass  40: suminf.    3.18478 (12) obj. -11.5603 iterations 0
Cbc0038I Pass  41: suminf.    3.04826 (9) obj. -11.5603 iterations 17
Cbc0038I Pass  42: suminf.    2.81331 (9) obj. -11.5603 iterations 3
Cbc0038I Pass  43: suminf.    2.81331 (9) obj. -11.5603 iterations 0
Cbc0038I Pass  44: suminf.    3.24133 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  45: suminf.    2.72524 (7) obj. -11.5603 iterations 4
Cbc0038I Pass  46: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  47: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  48: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  49: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  50: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I Pass  51: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  52: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  53: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  54: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  55: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I Pass  56: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  57: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  58: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  59: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  60: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 107 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -2.41492 - took 0.16 seconds
Cbc0012I Integer solution of -2.41492 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 100 rows 59 columns
Cbc0012I Integer solution of -2.580823 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 33 added rows had average density of 68.848485
Cbc0013I At root node, 33 cuts changed objective from -35.298896 to -28.061232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21152 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2575 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.580823 best solution, best possible -28.061232 (1.50 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 88 rows 54 columns
Cbc0012I Integer solution of -3.84707 found by RINS after 12481 iterations and 41 nodes (1.90 seconds)
Cbc0012I Integer solution of -4.05072 found by rounding after 13734 iterations and 79 nodes (2.02 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 2 rows 3 columns
Cbc0016I Integer solution of -4.21131 found by strong branching after 14189 iterations and 101 nodes (2.05 seconds)
Cbc0001I Search completed - best objective -4.211310000000005, took 15385 iterations and 134 nodes (2.10 seconds)
Cbc0032I Strong branching done 1396 times (26553 iterations), fathomed 13 nodes and fixed 72 variables
Cbc0035I Maximum depth 42, 388 variables fixed on reduced cost
Total time (CPU seconds):       2.06   (Wallclock seconds):       2.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-82) rows, 144 (-58) columns and 2526 (-3127) elements
Clp1000I sum of infeasibilities 6.45076e-08 - average 5.28751e-10, 46 fixed columns
Coin0506I Presolve 82 (-40) rows, 98 (-46) columns and 1316 (-1210) elements
Clp0006I 0  Obj 35.461202 Dual inf 5.2029587 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.6668986 - largest nonzero change 1.3400982e-05 ( 0.00096990836%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 49.474365
Clp0000I Optimal - objective value 49.474365
Coin0511I After Postsolve, objective 49.474365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.474365
Clp0000I Optimal - objective value 49.474365
Clp0000I Optimal - objective value 49.474365
Clp0000I Optimal - objective value 49.474365
Coin0511I After Postsolve, objective 49.474365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.4743651 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 144 columns (144 integer (144 of which binary)) and 2529 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.652%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 7.15513
Cbc0038I Pass   1: suminf.    2.92032 (34) obj. -39.8485 iterations 15
Cbc0038I Pass   2: suminf.    2.92032 (34) obj. -39.8485 iterations 1
Cbc0038I Pass   3: suminf.    1.40057 (19) obj. -13.9082 iterations 15
Cbc0038I Solution found of 7.38914
Cbc0038I Rounding solution of 5.04549 is better than previous of 7.38914

Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 144 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -0.274031
Cbc0038I Pass   4: suminf.    2.92032 (34) obj. -39.8485 iterations 0
Cbc0038I Pass   5: suminf.    2.92032 (34) obj. -39.8485 iterations 1
Cbc0038I Pass   6: suminf.    0.98673 (14) obj. -8.40808 iterations 20
Cbc0038I Pass   7: suminf.    0.48912 (1) obj. -0.274031 iterations 15
Cbc0038I Pass   8: suminf.    0.11000 (1) obj. -5.96086 iterations 1
Cbc0038I Pass   9: suminf.    1.35578 (14) obj. -7.09428 iterations 32
Cbc0038I Pass  10: suminf.    0.74736 (9) obj. -4.32855 iterations 5
Cbc0038I Pass  11: suminf.    1.03055 (6) obj. -0.274031 iterations 16
Cbc0038I Pass  12: suminf.    0.86681 (5) obj. -0.274031 iterations 2
Cbc0038I Pass  13: suminf.    0.42881 (2) obj. -0.274031 iterations 7
Cbc0038I Pass  14: suminf.    0.42881 (2) obj. -0.274031 iterations 0
Cbc0038I Pass  15: suminf.    0.83527 (8) obj. -0.274031 iterations 8
Cbc0038I Pass  16: suminf.    0.61431 (3) obj. -1.35523 iterations 4
Cbc0038I Pass  17: suminf.    0.98238 (6) obj. -0.274031 iterations 24
Cbc0038I Pass  18: suminf.    0.54212 (5) obj. -1.80419 iterations 13
Cbc0038I Pass  19: suminf.    1.00485 (9) obj. -0.274031 iterations 12
Cbc0038I Pass  20: suminf.    1.00485 (9) obj. -0.274031 iterations 0
Cbc0038I Pass  21: suminf.    3.15631 (10) obj. -0.274031 iterations 7
Cbc0038I Pass  22: suminf.    0.66965 (6) obj. -0.274031 iterations 6
Cbc0038I Pass  23: suminf.    0.39154 (6) obj. -0.274031 iterations 5
Cbc0038I Pass  24: suminf.    0.97579 (4) obj. -0.274031 iterations 8
Cbc0038I Pass  25: suminf.    0.79364 (4) obj. -0.274031 iterations 8
Cbc0038I Pass  26: suminf.    0.97579 (4) obj. -0.274031 iterations 6
Cbc0038I Pass  27: suminf.    1.30937 (9) obj. -0.274031 iterations 35
Cbc0038I Pass  28: suminf.    1.28827 (8) obj. -0.274031 iterations 8
Cbc0038I Pass  29: suminf.    0.51986 (6) obj. -0.274031 iterations 18
Cbc0038I Pass  30: suminf.    1.10016 (6) obj. -0.274031 iterations 10
Cbc0038I Pass  31: suminf.    0.90029 (6) obj. -0.274031 iterations 3
Cbc0038I Pass  32: suminf.    0.49057 (5) obj. -0.274031 iterations 8
Cbc0038I Pass  33: suminf.    0.39229 (3) obj. -0.274031 iterations 4
Cbc0038I Rounding solution of 4.31389 is better than previous of 5.04549

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 144 columns, reduced to 32 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 4.31389 to 1.80598 (0.07 seconds)
Cbc0038I Round again with cutoff of -9.84898
Cbc0038I Pass  33: suminf.    2.92032 (34) obj. -39.8485 iterations 0
Cbc0038I Pass  34: suminf.    2.92032 (34) obj. -39.8485 iterations 1
Cbc0038I Pass  35: suminf.    1.08350 (10) obj. -9.84898 iterations 25
Cbc0038I Pass  36: suminf.    0.72123 (10) obj. -15.283 iterations 1
Cbc0038I Pass  37: suminf.    0.91275 (8) obj. -9.84898 iterations 22
Cbc0038I Pass  38: suminf.    0.89793 (7) obj. -9.87831 iterations 6
Cbc0038I Pass  39: suminf.    1.72788 (10) obj. -9.84898 iterations 14
Cbc0038I Pass  40: suminf.    1.72788 (10) obj. -9.84898 iterations 1
Cbc0038I Pass  41: suminf.    1.94198 (7) obj. -9.84898 iterations 18
Cbc0038I Pass  42: suminf.    1.81115 (8) obj. -9.84898 iterations 3
Cbc0038I Pass  43: suminf.    1.72597 (10) obj. -9.84898 iterations 11
Cbc0038I Pass  44: suminf.    1.72597 (10) obj. -9.84898 iterations 1
Cbc0038I Pass  45: suminf.    2.69557 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  46: suminf.    1.61056 (10) obj. -9.84898 iterations 7
Cbc0038I Pass  47: suminf.    1.61056 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  48: suminf.    2.87055 (10) obj. -9.84898 iterations 9
Cbc0038I Pass  49: suminf.    1.72597 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  50: suminf.    1.72597 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  51: suminf.    2.69557 (10) obj. -9.84898 iterations 9
Cbc0038I Pass  52: suminf.    1.61056 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  53: suminf.    1.61056 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  54: suminf.    2.87055 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  55: suminf.    1.72597 (10) obj. -9.84898 iterations 7
Cbc0038I Pass  56: suminf.    1.72597 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  57: suminf.    2.69557 (10) obj. -9.84898 iterations 9
Cbc0038I Pass  58: suminf.    1.61056 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  59: suminf.    1.61056 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  60: suminf.    2.87055 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  61: suminf.    1.72597 (10) obj. -9.84898 iterations 7
Cbc0038I Pass  62: suminf.    1.72597 (10) obj. -9.84898 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 144 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 1.80598 - took 0.06 seconds
Cbc0012I Integer solution of 1.80598 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 17 rows 22 columns
Cbc0031I 62 added rows had average density of 59.080645
Cbc0013I At root node, 62 cuts changed objective from -48.148789 to -10.359881 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14662 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2137 row cuts average 138.6 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 537 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1604 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 435 row cuts average 82.1 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 145 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.323 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.80598 best solution, best possible -10.359881 (2.31 seconds)
Cbc0012I Integer solution of -1.162543 found by rounding after 6444 iterations and 1 nodes (2.36 seconds)
Cbc0012I Integer solution of -3.377713 found by rounding after 7035 iterations and 3 nodes (2.69 seconds)
Cbc0012I Integer solution of -3.970283 found by rounding after 7091 iterations and 4 nodes (2.70 seconds)
Cbc0004I Integer solution of -4.21131 found after 7110 iterations and 6 nodes (2.71 seconds)
Cbc0010I After 30 nodes, 9 on tree, -4.21131 best solution, best possible -10.359881 (3.04 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 56 rows 75 columns
Cbc0010I After 71 nodes, 21 on tree, -4.21131 best solution, best possible -10.359881 (3.75 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 37 rows 60 columns
Cbc0010I After 125 nodes, 28 on tree, -4.21131 best solution, best possible -10.359881 (4.45 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 56 rows 74 columns
Cbc0010I After 247 nodes, 29 on tree, -4.21131 best solution, best possible -10.359881 (5.16 seconds)
Cbc0010I After 326 nodes, 21 on tree, -4.21131 best solution, best possible -10.359881 (5.86 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 42 rows 63 columns
Cbc0010I After 410 nodes, 5 on tree, -4.21131 best solution, best possible -10.359881 (6.56 seconds)
Cbc0010I After 508 nodes, 16 on tree, -4.21131 best solution, best possible -10.359881 (7.27 seconds)
Cbc0010I After 546 nodes, 7 on tree, -4.21131 best solution, best possible -10.359881 (8.00 seconds)
Cbc0010I After 573 nodes, 6 on tree, -4.21131 best solution, best possible -10.359881 (8.74 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 59 rows 77 columns
Cbc0010I After 601 nodes, 7 on tree, -4.21131 best solution, best possible -10.359881 (9.51 seconds)
Cbc0001I Search completed - best objective -4.211310000000005, took 72311 iterations and 3302 nodes (9.61 seconds)
Cbc0032I Strong branching done 5280 times (88387 iterations), fathomed 32 nodes and fixed 193 variables
Cbc0041I Maximum depth 33, 1338 variables fixed on reduced cost (complete fathoming 48 times, 2688 nodes taking 39641 iterations)
Total time (CPU seconds):       9.12   (Wallclock seconds):       9.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 101 (-2) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 3.28757e-05 - average 1.84695e-07, 13 fixed columns
Coin0506I Presolve 150 (-28) rows, 86 (-15) columns and 464 (-86) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 0.26375812 - largest nonzero change 0 ( 0%) - largest zero change 2.916819e-05
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Coin0511I After Postsolve, objective 35.298896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24182605 - largest nonzero change 0 ( 0%) - largest zero change 2.9528267e-05
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Clp0000I Optimal - objective value 35.298896
Coin0511I After Postsolve, objective 35.298896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.29889551 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 101 columns (100 integer (100 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.858%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 13.2539
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.45833 iterations 78
Cbc0038I Solution found of 9.45833
Cbc0038I Relaxing continuous gives 9.45833
Cbc0038I Rounding solution of 2.60412 is better than previous of 9.45833

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 100 rows 59 columns
Cbc0038I Mini branch and bound improved solution from 2.60412 to -2.32853 (0.05 seconds)
Cbc0038I Round again with cutoff of -5.62566
Cbc0038I Pass   2: suminf.    2.64713 (12) obj. -5.62566 iterations 18
Cbc0038I Pass   3: suminf.    1.64571 (7) obj. -5.62566 iterations 15
Cbc0038I Pass   4: suminf.    2.19071 (7) obj. -5.62566 iterations 10
Cbc0038I Pass   5: suminf.    2.01486 (9) obj. -5.62566 iterations 6
Cbc0038I Pass   6: suminf.    3.53414 (12) obj. -5.62566 iterations 26
Cbc0038I Pass   7: suminf.    3.21624 (11) obj. -5.62566 iterations 7
Cbc0038I Pass   8: suminf.    2.35859 (10) obj. -5.62566 iterations 11
Cbc0038I Pass   9: suminf.    2.13903 (8) obj. -5.62566 iterations 17
Cbc0038I Pass  10: suminf.    2.13903 (8) obj. -5.62566 iterations 0
Cbc0038I Pass  11: suminf.    1.98304 (10) obj. -5.62566 iterations 14
Cbc0038I Pass  12: suminf.    1.60488 (6) obj. -5.62566 iterations 7
Cbc0038I Pass  13: suminf.    2.25413 (7) obj. -5.62566 iterations 10
Cbc0038I Pass  14: suminf.    2.65038 (11) obj. -5.62566 iterations 8
Cbc0038I Pass  15: suminf.    3.74546 (14) obj. -5.62566 iterations 38
Cbc0038I Pass  16: suminf.    2.68498 (11) obj. -5.62566 iterations 18
Cbc0038I Pass  17: suminf.    3.27388 (10) obj. -5.62566 iterations 22
Cbc0038I Pass  18: suminf.    2.86347 (9) obj. -5.62566 iterations 2
Cbc0038I Pass  19: suminf.    2.86347 (9) obj. -5.62566 iterations 0
Cbc0038I Pass  20: suminf.    2.07064 (8) obj. -5.62566 iterations 9
Cbc0038I Pass  21: suminf.    1.64571 (7) obj. -5.62566 iterations 7
Cbc0038I Pass  22: suminf.    2.19071 (7) obj. -5.62566 iterations 8
Cbc0038I Pass  23: suminf.    2.01486 (9) obj. -5.62566 iterations 6
Cbc0038I Pass  24: suminf.    1.98939 (10) obj. -5.62566 iterations 23
Cbc0038I Pass  25: suminf.    1.82644 (8) obj. -5.62566 iterations 3
Cbc0038I Pass  26: suminf.    2.36896 (7) obj. -5.62566 iterations 20
Cbc0038I Pass  27: suminf.    2.31954 (7) obj. -5.62566 iterations 3
Cbc0038I Pass  28: suminf.    1.78947 (5) obj. -5.62566 iterations 11
Cbc0038I Pass  29: suminf.    1.73035 (6) obj. -5.62566 iterations 2
Cbc0038I Pass  30: suminf.    2.23662 (7) obj. -5.62566 iterations 6
Cbc0038I Pass  31: suminf.    2.02717 (9) obj. -5.62566 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -2.32853 to -2.41492 (0.12 seconds)
Cbc0038I Round again with cutoff of -11.5603
Cbc0038I Pass  31: suminf.    3.99116 (19) obj. -11.5603 iterations 4
Cbc0038I Pass  32: suminf.    2.75321 (8) obj. -11.5603 iterations 17
Cbc0038I Pass  33: suminf.    2.71462 (7) obj. -11.5603 iterations 3
Cbc0038I Pass  34: suminf.    2.80747 (9) obj. -11.5603 iterations 13
Cbc0038I Pass  35: suminf.    2.72142 (8) obj. -11.5603 iterations 1
Cbc0038I Pass  36: suminf.    3.33739 (9) obj. -11.5603 iterations 11
Cbc0038I Pass  37: suminf.    2.14631 (6) obj. -11.5603 iterations 5
Cbc0038I Pass  38: suminf.    3.81249 (13) obj. -11.5603 iterations 21
Cbc0038I Pass  39: suminf.    3.18478 (12) obj. -11.5603 iterations 9
Cbc0038I Pass  40: suminf.    3.18478 (12) obj. -11.5603 iterations 0
Cbc0038I Pass  41: suminf.    3.04826 (9) obj. -11.5603 iterations 17
Cbc0038I Pass  42: suminf.    2.81331 (9) obj. -11.5603 iterations 3
Cbc0038I Pass  43: suminf.    2.81331 (9) obj. -11.5603 iterations 0
Cbc0038I Pass  44: suminf.    3.24133 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  45: suminf.    2.72524 (7) obj. -11.5603 iterations 4
Cbc0038I Pass  46: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  47: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  48: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  49: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  50: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I Pass  51: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  52: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  53: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  54: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  55: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I Pass  56: suminf.    2.26513 (6) obj. -11.5603 iterations 10
Cbc0038I Pass  57: suminf.    2.13962 (7) obj. -11.5603 iterations 1
Cbc0038I Pass  58: suminf.    2.13962 (7) obj. -11.5603 iterations 0
Cbc0038I Pass  59: suminf.    3.22816 (8) obj. -11.5603 iterations 9
Cbc0038I Pass  60: suminf.    2.72524 (7) obj. -11.5603 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 107 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -2.41492 - took 0.16 seconds
Cbc0012I Integer solution of -2.41492 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 100 rows 59 columns
Cbc0012I Integer solution of -2.580823 found by RINS after 0 iterations and 0 nodes (0.27 seconds)
Cbc0031I 33 added rows had average density of 68.848485
Cbc0013I At root node, 33 cuts changed objective from -35.298896 to -28.061232 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21152 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2575 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.580823 best solution, best possible -28.061232 (1.86 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 88 rows 54 columns
Cbc0012I Integer solution of -3.84707 found by RINS after 12481 iterations and 41 nodes (2.31 seconds)
Cbc0012I Integer solution of -4.05072 found by rounding after 13734 iterations and 79 nodes (2.43 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 2 rows 3 columns
Cbc0016I Integer solution of -4.21131 found by strong branching after 14189 iterations and 101 nodes (2.47 seconds)
Cbc0001I Search completed - best objective -4.211310000000005, took 15385 iterations and 134 nodes (2.53 seconds)
Cbc0032I Strong branching done 1396 times (26553 iterations), fathomed 13 nodes and fixed 72 variables
Cbc0035I Maximum depth 42, 388 variables fixed on reduced cost
Total time (CPU seconds):       2.41   (Wallclock seconds):       2.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-83) rows, 144 (-59) columns and 2526 (-3128) elements
Clp1000I sum of infeasibilities 6.45076e-08 - average 5.28751e-10, 46 fixed columns
Coin0506I Presolve 82 (-40) rows, 98 (-46) columns and 1316 (-1210) elements
Clp0006I 0  Obj 35.461202 Dual inf 5.2029587 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.6668986 - largest nonzero change 1.3400982e-05 ( 0.00096990836%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 49.474365
Clp0000I Optimal - objective value 49.474365
Coin0511I After Postsolve, objective 49.474365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.474365
Clp0000I Optimal - objective value 49.474365
Clp0000I Optimal - objective value 49.474365
Clp0000I Optimal - objective value 49.474365
Coin0511I After Postsolve, objective 49.474365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.4743651 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 144 columns (144 integer (144 of which binary)) and 2529 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.652%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 7.15513
Cbc0038I Pass   1: suminf.    2.92032 (34) obj. -39.8485 iterations 15
Cbc0038I Pass   2: suminf.    2.92032 (34) obj. -39.8485 iterations 1
Cbc0038I Pass   3: suminf.    1.40057 (19) obj. -13.9082 iterations 15
Cbc0038I Solution found of 7.38914
Cbc0038I Rounding solution of 5.04549 is better than previous of 7.38914

Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 144 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -0.274031
Cbc0038I Pass   4: suminf.    2.92032 (34) obj. -39.8485 iterations 0
Cbc0038I Pass   5: suminf.    2.92032 (34) obj. -39.8485 iterations 1
Cbc0038I Pass   6: suminf.    0.98673 (14) obj. -8.40808 iterations 20
Cbc0038I Pass   7: suminf.    0.48912 (1) obj. -0.274031 iterations 15
Cbc0038I Pass   8: suminf.    0.11000 (1) obj. -5.96086 iterations 1
Cbc0038I Pass   9: suminf.    1.35578 (14) obj. -7.09428 iterations 32
Cbc0038I Pass  10: suminf.    0.74736 (9) obj. -4.32855 iterations 5
Cbc0038I Pass  11: suminf.    1.03055 (6) obj. -0.274031 iterations 16
Cbc0038I Pass  12: suminf.    0.86681 (5) obj. -0.274031 iterations 2
Cbc0038I Pass  13: suminf.    0.42881 (2) obj. -0.274031 iterations 7
Cbc0038I Pass  14: suminf.    0.42881 (2) obj. -0.274031 iterations 0
Cbc0038I Pass  15: suminf.    0.83527 (8) obj. -0.274031 iterations 8
Cbc0038I Pass  16: suminf.    0.61431 (3) obj. -1.35523 iterations 4
Cbc0038I Pass  17: suminf.    0.98238 (6) obj. -0.274031 iterations 24
Cbc0038I Pass  18: suminf.    0.54212 (5) obj. -1.80419 iterations 13
Cbc0038I Pass  19: suminf.    1.00485 (9) obj. -0.274031 iterations 12
Cbc0038I Pass  20: suminf.    1.00485 (9) obj. -0.274031 iterations 0
Cbc0038I Pass  21: suminf.    3.15631 (10) obj. -0.274031 iterations 7
Cbc0038I Pass  22: suminf.    0.66965 (6) obj. -0.274031 iterations 6
Cbc0038I Pass  23: suminf.    0.39154 (6) obj. -0.274031 iterations 5
Cbc0038I Pass  24: suminf.    0.97579 (4) obj. -0.274031 iterations 8
Cbc0038I Pass  25: suminf.    0.79364 (4) obj. -0.274031 iterations 8
Cbc0038I Pass  26: suminf.    0.97579 (4) obj. -0.274031 iterations 6
Cbc0038I Pass  27: suminf.    1.30937 (9) obj. -0.274031 iterations 35
Cbc0038I Pass  28: suminf.    1.28827 (8) obj. -0.274031 iterations 8
Cbc0038I Pass  29: suminf.    0.51986 (6) obj. -0.274031 iterations 18
Cbc0038I Pass  30: suminf.    1.10016 (6) obj. -0.274031 iterations 10
Cbc0038I Pass  31: suminf.    0.90029 (6) obj. -0.274031 iterations 3
Cbc0038I Pass  32: suminf.    0.49057 (5) obj. -0.274031 iterations 8
Cbc0038I Pass  33: suminf.    0.39229 (3) obj. -0.274031 iterations 4
Cbc0038I Rounding solution of 4.31389 is better than previous of 5.04549

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 144 columns, reduced to 32 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 4.31389 to 1.80598 (0.07 seconds)
Cbc0038I Round again with cutoff of -9.84898
Cbc0038I Pass  33: suminf.    2.92032 (34) obj. -39.8485 iterations 0
Cbc0038I Pass  34: suminf.    2.92032 (34) obj. -39.8485 iterations 1
Cbc0038I Pass  35: suminf.    1.08350 (10) obj. -9.84898 iterations 25
Cbc0038I Pass  36: suminf.    0.72123 (10) obj. -15.283 iterations 1
Cbc0038I Pass  37: suminf.    0.91275 (8) obj. -9.84898 iterations 22
Cbc0038I Pass  38: suminf.    0.89793 (7) obj. -9.87831 iterations 6
Cbc0038I Pass  39: suminf.    1.72788 (10) obj. -9.84898 iterations 14
Cbc0038I Pass  40: suminf.    1.72788 (10) obj. -9.84898 iterations 1
Cbc0038I Pass  41: suminf.    1.94198 (7) obj. -9.84898 iterations 18
Cbc0038I Pass  42: suminf.    1.81115 (8) obj. -9.84898 iterations 3
Cbc0038I Pass  43: suminf.    1.72597 (10) obj. -9.84898 iterations 11
Cbc0038I Pass  44: suminf.    1.72597 (10) obj. -9.84898 iterations 1
Cbc0038I Pass  45: suminf.    2.69557 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  46: suminf.    1.61056 (10) obj. -9.84898 iterations 7
Cbc0038I Pass  47: suminf.    1.61056 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  48: suminf.    2.87055 (10) obj. -9.84898 iterations 9
Cbc0038I Pass  49: suminf.    1.72597 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  50: suminf.    1.72597 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  51: suminf.    2.69557 (10) obj. -9.84898 iterations 9
Cbc0038I Pass  52: suminf.    1.61056 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  53: suminf.    1.61056 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  54: suminf.    2.87055 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  55: suminf.    1.72597 (10) obj. -9.84898 iterations 7
Cbc0038I Pass  56: suminf.    1.72597 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  57: suminf.    2.69557 (10) obj. -9.84898 iterations 9
Cbc0038I Pass  58: suminf.    1.61056 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  59: suminf.    1.61056 (10) obj. -9.84898 iterations 0
Cbc0038I Pass  60: suminf.    2.87055 (10) obj. -9.84898 iterations 8
Cbc0038I Pass  61: suminf.    1.72597 (10) obj. -9.84898 iterations 7
Cbc0038I Pass  62: suminf.    1.72597 (10) obj. -9.84898 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 144 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 1.80598 - took 0.06 seconds
Cbc0012I Integer solution of 1.80598 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 17 rows 22 columns
Cbc0031I 62 added rows had average density of 59.080645
Cbc0013I At root node, 62 cuts changed objective from -48.148789 to -10.359881 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14662 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2137 row cuts average 138.6 elements, 0 column cuts (0 active)  in 0.255 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 537 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1604 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 435 row cuts average 82.1 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 145 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.353 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.80598 best solution, best possible -10.359881 (2.48 seconds)
Cbc0012I Integer solution of -1.162543 found by rounding after 6444 iterations and 1 nodes (2.53 seconds)
Cbc0012I Integer solution of -3.377713 found by rounding after 7035 iterations and 3 nodes (2.89 seconds)
Cbc0012I Integer solution of -3.970283 found by rounding after 7091 iterations and 4 nodes (2.89 seconds)
Cbc0004I Integer solution of -4.21131 found after 7110 iterations and 6 nodes (2.90 seconds)
Cbc0010I After 27 nodes, 7 on tree, -4.21131 best solution, best possible -10.359881 (3.18 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 56 rows 75 columns
Cbc0010I After 51 nodes, 16 on tree, -4.21131 best solution, best possible -10.359881 (3.88 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 37 rows 60 columns
Cbc0010I After 91 nodes, 23 on tree, -4.21131 best solution, best possible -10.359881 (4.72 seconds)
Cbc0010I After 199 nodes, 27 on tree, -4.21131 best solution, best possible -10.359881 (5.44 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 56 rows 74 columns
Cbc0010I After 277 nodes, 29 on tree, -4.21131 best solution, best possible -10.359881 (6.16 seconds)
Cbc0010I After 349 nodes, 20 on tree, -4.21131 best solution, best possible -10.359881 (6.88 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 42 rows 63 columns
Cbc0010I After 414 nodes, 7 on tree, -4.21131 best solution, best possible -10.359881 (7.58 seconds)
Cbc0010I After 508 nodes, 16 on tree, -4.21131 best solution, best possible -10.359881 (8.30 seconds)
Cbc0010I After 542 nodes, 5 on tree, -4.21131 best solution, best possible -10.359881 (9.04 seconds)
Cbc0010I After 558 nodes, 5 on tree, -4.21131 best solution, best possible -10.359881 (9.78 seconds)
Cbc0010I After 591 nodes, 8 on tree, -4.21131 best solution, best possible -10.359881 (10.49 seconds)
Cbc0038I Full problem 122 rows 144 columns, reduced to 59 rows 77 columns
Cbc0001I Search completed - best objective -4.211310000000005, took 72311 iterations and 3302 nodes (11.12 seconds)
Cbc0032I Strong branching done 5280 times (88387 iterations), fathomed 32 nodes and fixed 193 variables
Cbc0041I Maximum depth 33, 1338 variables fixed on reduced cost (complete fathoming 48 times, 2688 nodes taking 39641 iterations)
Total time (CPU seconds):       10.38   (Wallclock seconds):       11.15

