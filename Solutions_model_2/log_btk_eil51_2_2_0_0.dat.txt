Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-20) rows, 51 (-2) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 6.87269e-06 - average 8.08552e-08, 5 fixed columns
Coin0506I Presolve 77 (-8) rows, 46 (-5) columns and 238 (-26) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 34.634717
Clp0000I Optimal - objective value 34.634717
Coin0511I After Postsolve, objective 34.634717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.39893571 - largest nonzero change 0 ( 0%) - largest zero change 2.9392985e-05
Clp0000I Optimal - objective value 34.634717
Clp0000I Optimal - objective value 34.634717
Clp0000I Optimal - objective value 34.634717
Coin0511I After Postsolve, objective 34.634717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.63471691 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 51 columns (50 integer (50 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.58929
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.75867 iterations 30
Cbc0038I Solution found of 7.75867
Cbc0038I Relaxing continuous gives 7.75867
Cbc0038I Rounding solution of -4.99425 is better than previous of 7.75867

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -4.99425 to -8.51129 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.1237
Cbc0038I Pass   2: suminf.    1.15517 (5) obj. -11.1237 iterations 8
Cbc0038I Pass   3: suminf.    1.12095 (4) obj. -11.1237 iterations 2
Cbc0038I Pass   4: suminf.    1.29850 (5) obj. -11.1237 iterations 5
Cbc0038I Pass   5: suminf.    1.26844 (4) obj. -11.1237 iterations 1
Cbc0038I Pass   6: suminf.    1.12095 (4) obj. -11.1237 iterations 1
Cbc0038I Pass   7: suminf.    0.52826 (8) obj. -11.1237 iterations 10
Cbc0038I Pass   8: suminf.    0.44538 (5) obj. -11.1237 iterations 5
Cbc0038I Pass   9: suminf.    1.35534 (4) obj. -11.1237 iterations 5
Cbc0038I Pass  10: suminf.    1.35534 (4) obj. -11.1237 iterations 0
Cbc0038I Pass  11: suminf.    1.17759 (3) obj. -11.1237 iterations 3
Cbc0038I Pass  12: suminf.    1.12095 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  13: suminf.    1.29850 (5) obj. -11.1237 iterations 5
Cbc0038I Pass  14: suminf.    1.26844 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  15: suminf.    1.12095 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  16: suminf.    3.08308 (8) obj. -11.1237 iterations 13
Cbc0038I Pass  17: suminf.    1.81983 (8) obj. -11.1237 iterations 8
Cbc0038I Pass  18: suminf.    1.23494 (4) obj. -11.1237 iterations 7
Cbc0038I Pass  19: suminf.    1.00195 (3) obj. -11.1237 iterations 2
Cbc0038I Pass  20: suminf.    1.23484 (4) obj. -11.1237 iterations 3
Cbc0038I Pass  21: suminf.    4.47360 (12) obj. -11.1237 iterations 15
Cbc0038I Pass  22: suminf.    1.88513 (7) obj. -11.1237 iterations 7
Cbc0038I Pass  23: suminf.    1.74760 (6) obj. -11.1237 iterations 9
Cbc0038I Pass  24: suminf.    1.66108 (5) obj. -11.1237 iterations 1
Cbc0038I Pass  25: suminf.    1.14692 (3) obj. -11.1237 iterations 3
Cbc0038I Pass  26: suminf.    1.12128 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  27: suminf.    1.12087 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  28: suminf.    1.12087 (4) obj. -11.1237 iterations 0
Cbc0038I Pass  29: suminf.    1.12128 (4) obj. -11.1237 iterations 2
Cbc0038I Pass  30: suminf.    2.22475 (8) obj. -11.1237 iterations 20
Cbc0038I Pass  31: suminf.    2.22475 (8) obj. -11.1237 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -8.51129 to -9.02191 (0.08 seconds)
Cbc0038I Round again with cutoff of -15.8259
Cbc0038I Pass  31: suminf.    1.66862 (7) obj. -15.8259 iterations 2
Cbc0038I Pass  32: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  33: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  34: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  35: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  36: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  37: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  38: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  39: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  40: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  41: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  42: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  43: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  44: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  45: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  46: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  47: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  48: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  49: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  50: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  51: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  52: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  53: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  54: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  55: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  56: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  57: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  58: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  59: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  60: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -9.02191 - took 0.08 seconds
Cbc0012I Integer solution of -9.021909 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 54 rows 32 columns
Cbc0031I 26 added rows had average density of 27.384615
Cbc0013I At root node, 26 cuts changed objective from -34.634717 to -24.3681 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8921 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1486 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0012I Integer solution of -9.034289 found by rounding after 6690 iterations and 39 nodes (0.63 seconds)
Cbc0012I Integer solution of -9.090389 found by DiveCoefficient after 6836 iterations and 59 nodes (0.65 seconds)
Cbc0012I Integer solution of -9.258519 found by rounding after 6840 iterations and 61 nodes (0.65 seconds)
Cbc0001I Search completed - best objective -9.258519, took 6947 iterations and 78 nodes (0.66 seconds)
Cbc0032I Strong branching done 690 times (10352 iterations), fathomed 8 nodes and fixed 14 variables
Cbc0035I Maximum depth 14, 140 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-36) rows, 83 (-19) columns and 1031 (-547) elements
Clp1000I sum of infeasibilities 7.35962e-08 - average 1.0823e-09, 45 fixed columns
Coin0506I Presolve 28 (-40) rows, 38 (-45) columns and 127 (-904) elements
Clp0006I 0  Obj -16.736348 Dual inf 58.225392 (38)
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 0.38836551 - largest nonzero change 1.2691202e-05 ( 0.00099891329%) - largest zero change 2.8380143e-05
Clp0000I Optimal - objective value -7.9074928
Clp0000I Optimal - objective value -7.9074928
Coin0511I After Postsolve, objective -7.9074928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9074928 Dual inf 21.787319 (34)
Clp0014I Perturbing problem by 0.001% of 4.3327596 - largest nonzero change 1.028065e-05 ( 0.001028065%) - largest zero change 2.6094544e-05
Clp0000I Optimal - objective value 48.386843
Clp0000I Optimal - objective value 48.386843
Clp0000I Optimal - objective value 48.386843
Coin0511I After Postsolve, objective 48.386843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.38684308 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 84 columns (84 integer (84 of which binary)) and 1036 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 5.19111
Cbc0038I Pass   1: suminf.    3.34998 (25) obj. -36.0869 iterations 15
Cbc0038I Pass   2: suminf.    3.34998 (25) obj. -36.0869 iterations 1
Cbc0038I Pass   3: suminf.    0.43897 (7) obj. -7.37991 iterations 16
Cbc0038I Solution found of -0.818879
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.87669
Cbc0038I Pass   4: suminf.    3.34998 (25) obj. -36.0869 iterations 0
Cbc0038I Pass   5: suminf.    3.34998 (25) obj. -36.0869 iterations 1
Cbc0038I Pass   6: suminf.    0.37647 (6) obj. -6.44241 iterations 21
Cbc0038I Pass   7: suminf.    0.50205 (2) obj. -4.87669 iterations 14
Cbc0038I Pass   8: suminf.    0.22505 (2) obj. -7.72191 iterations 1
Cbc0038I Pass   9: suminf.    0.18367 (1) obj. -7.34949 iterations 1
Cbc0038I Pass  10: suminf.    1.12387 (6) obj. -4.87669 iterations 30
Cbc0038I Pass  11: suminf.    0.93475 (5) obj. -4.87669 iterations 7
Cbc0038I Pass  12: suminf.    0.88721 (3) obj. -4.87669 iterations 5
Cbc0038I Pass  13: suminf.    0.88721 (3) obj. -4.87669 iterations 0
Cbc0038I Pass  14: suminf.    0.78331 (3) obj. -4.87669 iterations 2
Cbc0038I Pass  15: suminf.    0.56945 (3) obj. -6.58758 iterations 1
Cbc0038I Pass  16: suminf.    1.20901 (6) obj. -4.87669 iterations 4
Cbc0038I Pass  17: suminf.    0.95851 (5) obj. -7.17039 iterations 1
Cbc0038I Pass  18: suminf.    0.68315 (6) obj. -4.87669 iterations 2
Cbc0038I Pass  19: suminf.    1.06904 (3) obj. -4.87669 iterations 8
Cbc0038I Pass  20: suminf.    0.76480 (4) obj. -4.87669 iterations 2
Cbc0038I Pass  21: suminf.    3.25169 (15) obj. -4.87669 iterations 24
Cbc0038I Pass  22: suminf.    2.90241 (14) obj. -4.87669 iterations 8
Cbc0038I Pass  23: suminf.    1.67994 (7) obj. -4.87669 iterations 16
Cbc0038I Pass  24: suminf.    1.66846 (7) obj. -4.87669 iterations 3
Cbc0038I Pass  25: suminf.    1.97410 (7) obj. -4.87669 iterations 12
Cbc0038I Pass  26: suminf.    1.94728 (7) obj. -4.87669 iterations 3
Cbc0038I Pass  27: suminf.    1.35485 (7) obj. -4.87669 iterations 9
Cbc0038I Pass  28: suminf.    1.35485 (7) obj. -4.87669 iterations 1
Cbc0038I Pass  29: suminf.    1.35485 (7) obj. -4.87669 iterations 7
Cbc0038I Pass  30: suminf.    1.35485 (7) obj. -4.87669 iterations 2
Cbc0038I Pass  31: suminf.    1.35485 (7) obj. -4.87669 iterations 3
Cbc0038I Pass  32: suminf.    1.51764 (16) obj. -4.87669 iterations 33
Cbc0038I Pass  33: suminf.    1.24908 (10) obj. -4.87669 iterations 10
Cbc0038I Rounding solution of -6.2716 is better than previous of -0.818879

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 46 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -6.2716 to -8.41499 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.0113
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.34998 (25) obj. -36.0869 iterations 0
Cbc0038I Pass  34: suminf.    3.34998 (25) obj. -36.0869 iterations 1
Cbc0038I Pass  35: suminf.    0.92559 (10) obj. -15.0113 iterations 22
Cbc0038I Pass  36: suminf.    0.92559 (10) obj. -15.0113 iterations 1
Cbc0038I Pass  37: suminf.    0.90632 (8) obj. -15.0113 iterations 9
Cbc0038I Pass  38: suminf.    0.90632 (8) obj. -15.0113 iterations 0
Cbc0038I Pass  39: suminf.    0.91967 (4) obj. -15.0113 iterations 6
Cbc0038I Pass  40: suminf.    0.61483 (4) obj. -16.2307 iterations 2
Cbc0038I Pass  41: suminf.    0.91967 (4) obj. -15.0113 iterations 5
Cbc0038I Pass  42: suminf.    1.15119 (7) obj. -15.0113 iterations 12
Cbc0038I Pass  43: suminf.    1.15119 (7) obj. -15.0113 iterations 3
Cbc0038I Pass  44: suminf.    1.88804 (14) obj. -15.0113 iterations 9
Cbc0038I Pass  45: suminf.    1.39683 (9) obj. -15.0113 iterations 9
Cbc0038I Pass  46: suminf.    1.43819 (6) obj. -15.0113 iterations 13
Cbc0038I Pass  47: suminf.    1.43819 (6) obj. -15.0113 iterations 4
Cbc0038I Pass  48: suminf.    1.33445 (5) obj. -15.0113 iterations 9
Cbc0038I Pass  49: suminf.    1.33445 (5) obj. -15.0113 iterations 4
Cbc0038I Pass  50: suminf.    1.54114 (5) obj. -15.0113 iterations 4
Cbc0038I Pass  51: suminf.    0.98738 (5) obj. -15.0113 iterations 2
Cbc0038I Pass  52: suminf.    1.57554 (10) obj. -15.0113 iterations 28
Cbc0038I Pass  53: suminf.    1.21811 (8) obj. -15.0113 iterations 5
Cbc0038I Pass  54: suminf.    1.23948 (6) obj. -15.0113 iterations 10
Cbc0038I Pass  55: suminf.    1.12395 (7) obj. -15.0113 iterations 3
Cbc0038I Pass  56: suminf.    1.18285 (5) obj. -15.0113 iterations 8
Cbc0038I Pass  57: suminf.    1.96947 (11) obj. -15.0113 iterations 10
Cbc0038I Pass  58: suminf.    1.66139 (10) obj. -15.0113 iterations 2
Cbc0038I Pass  59: suminf.    1.03713 (5) obj. -15.0113 iterations 9
Cbc0038I Pass  60: suminf.    0.73080 (5) obj. -15.8022 iterations 3
Cbc0038I Pass  61: suminf.    0.99443 (5) obj. -15.0113 iterations 8
Cbc0038I Pass  62: suminf.    1.47115 (8) obj. -15.0113 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.41499 - took 0.05 seconds
Cbc0012I Integer solution of -8.414989 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 69 rows 84 columns, reduced to 18 rows 24 columns
Cbc0031I 43 added rows had average density of 22.697674
Cbc0013I At root node, 43 cuts changed objective from -41.396131 to -11.177047 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7529 row cuts average 6.4 elements, 2 column cuts (2 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 663 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 771 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 280 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.625 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.414989 best solution, best possible -11.177047 (1.67 seconds)
Cbc0012I Integer solution of -8.679419 found by DiveCoefficient after 3123 iterations and 4 nodes (1.79 seconds)
Cbc0016I Integer solution of -9.021909 found by strong branching after 3311 iterations and 9 nodes (1.83 seconds)
Cbc0012I Integer solution of -9.034289 found by DiveCoefficient after 3412 iterations and 14 nodes (1.85 seconds)
Cbc0016I Integer solution of -9.258519 found by strong branching after 3481 iterations and 18 nodes (1.86 seconds)
Cbc0001I Search completed - best objective -9.258519, took 4002 iterations and 28 nodes (2.01 seconds)
Cbc0032I Strong branching done 406 times (4805 iterations), fathomed 5 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 29 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       2.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-20) rows, 51 (-2) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 6.87269e-06 - average 8.08552e-08, 5 fixed columns
Coin0506I Presolve 77 (-8) rows, 46 (-5) columns and 238 (-26) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 34.634717
Clp0000I Optimal - objective value 34.634717
Coin0511I After Postsolve, objective 34.634717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.39893571 - largest nonzero change 0 ( 0%) - largest zero change 2.9392985e-05
Clp0000I Optimal - objective value 34.634717
Clp0000I Optimal - objective value 34.634717
Clp0000I Optimal - objective value 34.634717
Coin0511I After Postsolve, objective 34.634717, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.63471691 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 51 columns (50 integer (50 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.58929
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.75867 iterations 30
Cbc0038I Solution found of 7.75867
Cbc0038I Relaxing continuous gives 7.75867
Cbc0038I Rounding solution of -4.99425 is better than previous of 7.75867

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -4.99425 to -8.51129 (0.04 seconds)
Cbc0038I Round again with cutoff of -11.1237
Cbc0038I Pass   2: suminf.    1.15517 (5) obj. -11.1237 iterations 8
Cbc0038I Pass   3: suminf.    1.12095 (4) obj. -11.1237 iterations 2
Cbc0038I Pass   4: suminf.    1.29850 (5) obj. -11.1237 iterations 5
Cbc0038I Pass   5: suminf.    1.26844 (4) obj. -11.1237 iterations 1
Cbc0038I Pass   6: suminf.    1.12095 (4) obj. -11.1237 iterations 1
Cbc0038I Pass   7: suminf.    0.52826 (8) obj. -11.1237 iterations 10
Cbc0038I Pass   8: suminf.    0.44538 (5) obj. -11.1237 iterations 5
Cbc0038I Pass   9: suminf.    1.35534 (4) obj. -11.1237 iterations 5
Cbc0038I Pass  10: suminf.    1.35534 (4) obj. -11.1237 iterations 0
Cbc0038I Pass  11: suminf.    1.17759 (3) obj. -11.1237 iterations 3
Cbc0038I Pass  12: suminf.    1.12095 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  13: suminf.    1.29850 (5) obj. -11.1237 iterations 5
Cbc0038I Pass  14: suminf.    1.26844 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  15: suminf.    1.12095 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  16: suminf.    3.08308 (8) obj. -11.1237 iterations 13
Cbc0038I Pass  17: suminf.    1.81983 (8) obj. -11.1237 iterations 8
Cbc0038I Pass  18: suminf.    1.23494 (4) obj. -11.1237 iterations 7
Cbc0038I Pass  19: suminf.    1.00195 (3) obj. -11.1237 iterations 2
Cbc0038I Pass  20: suminf.    1.23484 (4) obj. -11.1237 iterations 3
Cbc0038I Pass  21: suminf.    4.47360 (12) obj. -11.1237 iterations 15
Cbc0038I Pass  22: suminf.    1.88513 (7) obj. -11.1237 iterations 7
Cbc0038I Pass  23: suminf.    1.74760 (6) obj. -11.1237 iterations 9
Cbc0038I Pass  24: suminf.    1.66108 (5) obj. -11.1237 iterations 1
Cbc0038I Pass  25: suminf.    1.14692 (3) obj. -11.1237 iterations 3
Cbc0038I Pass  26: suminf.    1.12128 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  27: suminf.    1.12087 (4) obj. -11.1237 iterations 1
Cbc0038I Pass  28: suminf.    1.12087 (4) obj. -11.1237 iterations 0
Cbc0038I Pass  29: suminf.    1.12128 (4) obj. -11.1237 iterations 2
Cbc0038I Pass  30: suminf.    2.22475 (8) obj. -11.1237 iterations 20
Cbc0038I Pass  31: suminf.    2.22475 (8) obj. -11.1237 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -8.51129 to -9.02191 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.8259
Cbc0038I Pass  31: suminf.    1.66862 (7) obj. -15.8259 iterations 2
Cbc0038I Pass  32: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  33: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  34: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  35: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  36: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  37: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  38: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  39: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  40: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  41: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  42: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  43: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  44: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  45: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  46: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  47: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  48: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  49: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  50: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  51: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  52: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  53: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  54: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I Pass  55: suminf.    1.66862 (7) obj. -15.8259 iterations 4
Cbc0038I Pass  56: suminf.    1.53115 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  57: suminf.    1.02149 (4) obj. -15.8259 iterations 6
Cbc0038I Pass  58: suminf.    1.01820 (5) obj. -15.8259 iterations 2
Cbc0038I Pass  59: suminf.    1.59529 (4) obj. -15.8259 iterations 3
Cbc0038I Pass  60: suminf.    0.88931 (5) obj. -15.8259 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -9.02191 - took 0.10 seconds
Cbc0012I Integer solution of -9.021909 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 54 rows 32 columns
Cbc0031I 26 added rows had average density of 27.384615
Cbc0013I At root node, 26 cuts changed objective from -34.634717 to -24.3681 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8921 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1486 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 7 nodes, 8 on tree, -9.021909 best solution, best possible -24.3681 (0.68 seconds)
Cbc0012I Integer solution of -9.034289 found by rounding after 6690 iterations and 39 nodes (0.74 seconds)
Cbc0012I Integer solution of -9.090389 found by DiveCoefficient after 6836 iterations and 59 nodes (0.76 seconds)
Cbc0012I Integer solution of -9.258519 found by rounding after 6840 iterations and 61 nodes (0.76 seconds)
Cbc0001I Search completed - best objective -9.258519, took 6947 iterations and 78 nodes (0.77 seconds)
Cbc0032I Strong branching done 690 times (10352 iterations), fathomed 8 nodes and fixed 14 variables
Cbc0035I Maximum depth 14, 140 variables fixed on reduced cost
Total time (CPU seconds):       0.73   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-37) rows, 83 (-20) columns and 1031 (-548) elements
Clp1000I sum of infeasibilities 7.35962e-08 - average 1.0823e-09, 45 fixed columns
Coin0506I Presolve 28 (-40) rows, 38 (-45) columns and 127 (-904) elements
Clp0006I 0  Obj -16.736348 Dual inf 58.225392 (38)
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 0.38836551 - largest nonzero change 1.2691202e-05 ( 0.00099891329%) - largest zero change 2.8380143e-05
Clp0000I Optimal - objective value -7.9074928
Clp0000I Optimal - objective value -7.9074928
Coin0511I After Postsolve, objective -7.9074928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9074928 Dual inf 21.787319 (34)
Clp0014I Perturbing problem by 0.001% of 4.3327596 - largest nonzero change 1.028065e-05 ( 0.001028065%) - largest zero change 2.6094544e-05
Clp0000I Optimal - objective value 48.386843
Clp0000I Optimal - objective value 48.386843
Clp0000I Optimal - objective value 48.386843
Coin0511I After Postsolve, objective 48.386843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.38684308 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 84 columns (84 integer (84 of which binary)) and 1036 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 5.19111
Cbc0038I Pass   1: suminf.    3.34998 (25) obj. -36.0869 iterations 15
Cbc0038I Pass   2: suminf.    3.34998 (25) obj. -36.0869 iterations 1
Cbc0038I Pass   3: suminf.    0.43897 (7) obj. -7.37991 iterations 16
Cbc0038I Solution found of -0.818879
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.87669
Cbc0038I Pass   4: suminf.    3.34998 (25) obj. -36.0869 iterations 0
Cbc0038I Pass   5: suminf.    3.34998 (25) obj. -36.0869 iterations 1
Cbc0038I Pass   6: suminf.    0.37647 (6) obj. -6.44241 iterations 21
Cbc0038I Pass   7: suminf.    0.50205 (2) obj. -4.87669 iterations 14
Cbc0038I Pass   8: suminf.    0.22505 (2) obj. -7.72191 iterations 1
Cbc0038I Pass   9: suminf.    0.18367 (1) obj. -7.34949 iterations 1
Cbc0038I Pass  10: suminf.    1.12387 (6) obj. -4.87669 iterations 30
Cbc0038I Pass  11: suminf.    0.93475 (5) obj. -4.87669 iterations 7
Cbc0038I Pass  12: suminf.    0.88721 (3) obj. -4.87669 iterations 5
Cbc0038I Pass  13: suminf.    0.88721 (3) obj. -4.87669 iterations 0
Cbc0038I Pass  14: suminf.    0.78331 (3) obj. -4.87669 iterations 2
Cbc0038I Pass  15: suminf.    0.56945 (3) obj. -6.58758 iterations 1
Cbc0038I Pass  16: suminf.    1.20901 (6) obj. -4.87669 iterations 4
Cbc0038I Pass  17: suminf.    0.95851 (5) obj. -7.17039 iterations 1
Cbc0038I Pass  18: suminf.    0.68315 (6) obj. -4.87669 iterations 2
Cbc0038I Pass  19: suminf.    1.06904 (3) obj. -4.87669 iterations 8
Cbc0038I Pass  20: suminf.    0.76480 (4) obj. -4.87669 iterations 2
Cbc0038I Pass  21: suminf.    3.25169 (15) obj. -4.87669 iterations 24
Cbc0038I Pass  22: suminf.    2.90241 (14) obj. -4.87669 iterations 8
Cbc0038I Pass  23: suminf.    1.67994 (7) obj. -4.87669 iterations 16
Cbc0038I Pass  24: suminf.    1.66846 (7) obj. -4.87669 iterations 3
Cbc0038I Pass  25: suminf.    1.97410 (7) obj. -4.87669 iterations 12
Cbc0038I Pass  26: suminf.    1.94728 (7) obj. -4.87669 iterations 3
Cbc0038I Pass  27: suminf.    1.35485 (7) obj. -4.87669 iterations 9
Cbc0038I Pass  28: suminf.    1.35485 (7) obj. -4.87669 iterations 1
Cbc0038I Pass  29: suminf.    1.35485 (7) obj. -4.87669 iterations 7
Cbc0038I Pass  30: suminf.    1.35485 (7) obj. -4.87669 iterations 2
Cbc0038I Pass  31: suminf.    1.35485 (7) obj. -4.87669 iterations 3
Cbc0038I Pass  32: suminf.    1.51764 (16) obj. -4.87669 iterations 33
Cbc0038I Pass  33: suminf.    1.24908 (10) obj. -4.87669 iterations 10
Cbc0038I Rounding solution of -6.2716 is better than previous of -0.818879

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 46 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -6.2716 to -8.41499 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.0113
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.34998 (25) obj. -36.0869 iterations 0
Cbc0038I Pass  34: suminf.    3.34998 (25) obj. -36.0869 iterations 1
Cbc0038I Pass  35: suminf.    0.92559 (10) obj. -15.0113 iterations 22
Cbc0038I Pass  36: suminf.    0.92559 (10) obj. -15.0113 iterations 1
Cbc0038I Pass  37: suminf.    0.90632 (8) obj. -15.0113 iterations 9
Cbc0038I Pass  38: suminf.    0.90632 (8) obj. -15.0113 iterations 0
Cbc0038I Pass  39: suminf.    0.91967 (4) obj. -15.0113 iterations 6
Cbc0038I Pass  40: suminf.    0.61483 (4) obj. -16.2307 iterations 2
Cbc0038I Pass  41: suminf.    0.91967 (4) obj. -15.0113 iterations 5
Cbc0038I Pass  42: suminf.    1.15119 (7) obj. -15.0113 iterations 12
Cbc0038I Pass  43: suminf.    1.15119 (7) obj. -15.0113 iterations 3
Cbc0038I Pass  44: suminf.    1.88804 (14) obj. -15.0113 iterations 9
Cbc0038I Pass  45: suminf.    1.39683 (9) obj. -15.0113 iterations 9
Cbc0038I Pass  46: suminf.    1.43819 (6) obj. -15.0113 iterations 13
Cbc0038I Pass  47: suminf.    1.43819 (6) obj. -15.0113 iterations 4
Cbc0038I Pass  48: suminf.    1.33445 (5) obj. -15.0113 iterations 9
Cbc0038I Pass  49: suminf.    1.33445 (5) obj. -15.0113 iterations 4
Cbc0038I Pass  50: suminf.    1.54114 (5) obj. -15.0113 iterations 4
Cbc0038I Pass  51: suminf.    0.98738 (5) obj. -15.0113 iterations 2
Cbc0038I Pass  52: suminf.    1.57554 (10) obj. -15.0113 iterations 28
Cbc0038I Pass  53: suminf.    1.21811 (8) obj. -15.0113 iterations 5
Cbc0038I Pass  54: suminf.    1.23948 (6) obj. -15.0113 iterations 10
Cbc0038I Pass  55: suminf.    1.12395 (7) obj. -15.0113 iterations 3
Cbc0038I Pass  56: suminf.    1.18285 (5) obj. -15.0113 iterations 8
Cbc0038I Pass  57: suminf.    1.96947 (11) obj. -15.0113 iterations 10
Cbc0038I Pass  58: suminf.    1.66139 (10) obj. -15.0113 iterations 2
Cbc0038I Pass  59: suminf.    1.03713 (5) obj. -15.0113 iterations 9
Cbc0038I Pass  60: suminf.    0.73080 (5) obj. -15.8022 iterations 3
Cbc0038I Pass  61: suminf.    0.99443 (5) obj. -15.0113 iterations 8
Cbc0038I Pass  62: suminf.    1.47115 (8) obj. -15.0113 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.41499 - took 0.06 seconds
Cbc0012I Integer solution of -8.414989 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 69 rows 84 columns, reduced to 18 rows 24 columns
Cbc0031I 43 added rows had average density of 22.697674
Cbc0013I At root node, 43 cuts changed objective from -41.396131 to -11.177047 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7529 row cuts average 6.4 elements, 2 column cuts (2 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 663 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 771 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 280 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.765 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.414989 best solution, best possible -11.177047 (2.06 seconds)
Cbc0012I Integer solution of -8.679419 found by DiveCoefficient after 3123 iterations and 4 nodes (2.21 seconds)
Cbc0016I Integer solution of -9.021909 found by strong branching after 3311 iterations and 9 nodes (2.25 seconds)
Cbc0012I Integer solution of -9.034289 found by DiveCoefficient after 3412 iterations and 14 nodes (2.27 seconds)
Cbc0016I Integer solution of -9.258519 found by strong branching after 3481 iterations and 18 nodes (2.29 seconds)
Cbc0001I Search completed - best objective -9.258519, took 4002 iterations and 28 nodes (2.44 seconds)
Cbc0032I Strong branching done 406 times (4805 iterations), fathomed 5 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 29 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       2.45

