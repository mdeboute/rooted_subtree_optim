Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 63 (-15) columns and 352 (-101) elements
Clp1000I sum of infeasibilities 4.49702e-05 - average 3.87674e-07, 53 fixed columns
Coin0506I Presolve 8 (-108) rows, 6 (-57) columns and 22 (-330) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 20235.8
Clp0000I Optimal - objective value 20235.8
Coin0511I After Postsolve, objective 20235.8, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0242367 - largest nonzero change 2.0272006e-05 ( 0.0020272006%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 20235.8
Clp0000I Optimal - objective value 20235.8
Clp0000I Optimal - objective value 20235.8
Coin0511I After Postsolve, objective 20235.8, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20235.80025 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 63 columns (62 integer (62 of which binary)) and 361 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.575%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.43802
Cbc0038I Pass   1: suminf.    0.52000 (2) obj. -18070.7 iterations 18
Cbc0038I Pass   2: suminf.    0.10000 (1) obj. -17224.1 iterations 1
Cbc0038I Solution found of -14049.9
Cbc0038I Relaxing continuous gives -14049.9
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 63 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -14049.9 to -19566.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -19633.2
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61176 (2) obj. -19819.6 iterations 4
Cbc0038I Pass   4: suminf.    0.31398 (2) obj. -19633.2 iterations 7
Cbc0038I Pass   5: suminf.    1.08198 (3) obj. -19633.2 iterations 9
Cbc0038I Pass   6: suminf.    0.19119 (3) obj. -19633.2 iterations 9
Cbc0038I Pass   7: suminf.    0.19119 (3) obj. -19633.2 iterations 2
Cbc0038I Pass   8: suminf.    0.19119 (3) obj. -19633.2 iterations 2
Cbc0038I Pass   9: suminf.    0.19119 (3) obj. -19633.2 iterations 0
Cbc0038I Pass  10: suminf.    0.57006 (8) obj. -19633.2 iterations 4
Cbc0038I Pass  11: suminf.    3.22477 (8) obj. -19633.2 iterations 9
Cbc0038I Pass  12: suminf.    3.22477 (8) obj. -19633.2 iterations 3
Cbc0038I Pass  13: suminf.    0.29469 (3) obj. -19633.2 iterations 9
Cbc0038I Pass  14: suminf.    0.29469 (3) obj. -19633.2 iterations 2
Cbc0038I Pass  15: suminf.    0.19119 (3) obj. -19633.2 iterations 8
Cbc0038I Pass  16: suminf.    0.48370 (6) obj. -19633.2 iterations 8
Cbc0038I Pass  17: suminf.    3.58173 (8) obj. -19633.2 iterations 4
Cbc0038I Pass  18: suminf.    2.00976 (6) obj. -19633.2 iterations 2
Cbc0038I Pass  19: suminf.    0.19119 (3) obj. -19633.2 iterations 11
Cbc0038I Pass  20: suminf.    0.19119 (3) obj. -19633.2 iterations 5
Cbc0038I Pass  21: suminf.    1.08198 (3) obj. -19633.2 iterations 8
Cbc0038I Pass  22: suminf.    1.08198 (3) obj. -19633.2 iterations 1
Cbc0038I Pass  23: suminf.    1.08198 (3) obj. -19633.2 iterations 1
Cbc0038I Pass  24: suminf.    0.68552 (4) obj. -19633.2 iterations 8
Cbc0038I Pass  25: suminf.    0.49042 (6) obj. -19633.2 iterations 3
Cbc0038I Pass  26: suminf.    0.19119 (3) obj. -19633.2 iterations 14
Cbc0038I Pass  27: suminf.    0.19119 (3) obj. -19633.2 iterations 4
Cbc0038I Pass  28: suminf.    0.29469 (3) obj. -19633.2 iterations 5
Cbc0038I Pass  29: suminf.    0.19119 (3) obj. -19633.2 iterations 5
Cbc0038I Pass  30: suminf.    1.08198 (3) obj. -19633.2 iterations 7
Cbc0038I Pass  31: suminf.    1.08198 (3) obj. -19633.2 iterations 0
Cbc0038I Pass  32: suminf.    0.83411 (4) obj. -19633.2 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 63 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -19566.3 - took 0.01 seconds
Cbc0012I Integer solution of -19566.27 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 116 rows 63 columns, reduced to 8 rows 6 columns
Cbc0031I 4 added rows had average density of 6
Cbc0013I At root node, 9 cuts changed objective from -20235.8 to -19566.27 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19566.27, took 11 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 96 (-56) columns and 1367 (-1936) elements
Clp1000I sum of infeasibilities 1.45776e-06 - average 1.65654e-08, 52 fixed columns
Coin0506I Presolve 43 (-45) rows, 44 (-52) columns and 226 (-1141) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 20270.673
Clp0000I Optimal - objective value 20270.673
Coin0511I After Postsolve, objective 20270.673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0338441 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 20270.673
Clp0000I Optimal - objective value 20270.673
Clp0000I Optimal - objective value 20270.673
Coin0511I After Postsolve, objective 20270.673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20270.67289 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 100 columns (100 integer (100 of which binary)) and 1386 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.328%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.38025
Cbc0038I Pass   1: suminf.    1.93805 (22) obj. -18248.7 iterations 17
Cbc0038I Pass   2: suminf.    1.93805 (22) obj. -18248.7 iterations 1
Cbc0038I Pass   3: suminf.    0.42452 (10) obj. -15030.5 iterations 13
Cbc0038I Solution found of -15018
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -15018 to -19566.3 (0.03 seconds)
Cbc0038I Round again with cutoff of -19636.1
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.96631 (27) obj. -19636.1 iterations 5
Cbc0038I Pass   5: suminf.    1.96631 (27) obj. -19636.1 iterations 5
Cbc0038I Pass   6: suminf.    0.89511 (15) obj. -19636.1 iterations 15
Cbc0038I Pass   7: suminf.    0.89511 (15) obj. -19636.1 iterations 1
Cbc0038I Pass   8: suminf.    0.32707 (6) obj. -19636.1 iterations 10
Cbc0038I Pass   9: suminf.    0.32707 (6) obj. -19636.1 iterations 2
Cbc0038I Pass  10: suminf.    1.08965 (3) obj. -19636.1 iterations 12
Cbc0038I Pass  11: suminf.    0.21940 (3) obj. -19636.1 iterations 6
Cbc0038I Pass  12: suminf.    0.30180 (6) obj. -19636.1 iterations 4
Cbc0038I Pass  13: suminf.    0.30180 (6) obj. -19636.1 iterations 1
Cbc0038I Pass  14: suminf.    0.70455 (15) obj. -19636.1 iterations 18
Cbc0038I Pass  15: suminf.    0.70455 (15) obj. -19636.1 iterations 3
Cbc0038I Pass  16: suminf.    1.09430 (3) obj. -19636.1 iterations 19
Cbc0038I Pass  17: suminf.    0.23653 (3) obj. -19636.1 iterations 6
Cbc0038I Pass  18: suminf.    0.52041 (7) obj. -19636.1 iterations 7
Cbc0038I Pass  19: suminf.    0.39706 (7) obj. -19636.1 iterations 2
Cbc0038I Pass  20: suminf.    1.09508 (3) obj. -19636.1 iterations 13
Cbc0038I Pass  21: suminf.    0.23939 (3) obj. -19636.1 iterations 7
Cbc0038I Pass  22: suminf.    0.40147 (6) obj. -19636.1 iterations 6
Cbc0038I Pass  23: suminf.    0.40147 (6) obj. -19636.1 iterations 2
Cbc0038I Pass  24: suminf.    1.09430 (3) obj. -19636.1 iterations 12
Cbc0038I Pass  25: suminf.    0.23653 (3) obj. -19636.1 iterations 7
Cbc0038I Pass  26: suminf.    0.47792 (8) obj. -19636.1 iterations 9
Cbc0038I Pass  27: suminf.    0.47792 (8) obj. -19636.1 iterations 1
Cbc0038I Pass  28: suminf.    1.09430 (3) obj. -19636.1 iterations 14
Cbc0038I Pass  29: suminf.    0.23653 (3) obj. -19636.1 iterations 6
Cbc0038I Pass  30: suminf.    0.46413 (7) obj. -19636.1 iterations 6
Cbc0038I Pass  31: suminf.    0.46413 (7) obj. -19636.1 iterations 1
Cbc0038I Pass  32: suminf.    1.09353 (3) obj. -19636.1 iterations 12
Cbc0038I Pass  33: suminf.    0.23368 (3) obj. -19636.1 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19566.3 - took 0.02 seconds
Cbc0012I Integer solution of -19566.27 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 92 rows 100 columns, reduced to 12 rows 11 columns
Cbc0031I 4 added rows had average density of 8
Cbc0013I At root node, 15 cuts changed objective from -20235.465 to -19561.27 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19566.27, took 26 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 63 (-15) columns and 352 (-101) elements
Clp1000I sum of infeasibilities 4.49702e-05 - average 3.87674e-07, 53 fixed columns
Coin0506I Presolve 8 (-108) rows, 6 (-57) columns and 22 (-330) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 20235.8
Clp0000I Optimal - objective value 20235.8
Coin0511I After Postsolve, objective 20235.8, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0242367 - largest nonzero change 2.0272006e-05 ( 0.0020272006%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 20235.8
Clp0000I Optimal - objective value 20235.8
Clp0000I Optimal - objective value 20235.8
Coin0511I After Postsolve, objective 20235.8, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20235.80025 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 63 columns (62 integer (62 of which binary)) and 361 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.575%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.43802
Cbc0038I Pass   1: suminf.    0.52000 (2) obj. -18070.7 iterations 18
Cbc0038I Pass   2: suminf.    0.10000 (1) obj. -17224.1 iterations 1
Cbc0038I Solution found of -14049.9
Cbc0038I Relaxing continuous gives -14049.9
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 63 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -14049.9 to -19566.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -19633.2
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61176 (2) obj. -19819.6 iterations 4
Cbc0038I Pass   4: suminf.    0.31398 (2) obj. -19633.2 iterations 7
Cbc0038I Pass   5: suminf.    1.08198 (3) obj. -19633.2 iterations 9
Cbc0038I Pass   6: suminf.    0.19119 (3) obj. -19633.2 iterations 9
Cbc0038I Pass   7: suminf.    0.19119 (3) obj. -19633.2 iterations 2
Cbc0038I Pass   8: suminf.    0.19119 (3) obj. -19633.2 iterations 2
Cbc0038I Pass   9: suminf.    0.19119 (3) obj. -19633.2 iterations 0
Cbc0038I Pass  10: suminf.    0.57006 (8) obj. -19633.2 iterations 4
Cbc0038I Pass  11: suminf.    3.22477 (8) obj. -19633.2 iterations 9
Cbc0038I Pass  12: suminf.    3.22477 (8) obj. -19633.2 iterations 3
Cbc0038I Pass  13: suminf.    0.29469 (3) obj. -19633.2 iterations 9
Cbc0038I Pass  14: suminf.    0.29469 (3) obj. -19633.2 iterations 2
Cbc0038I Pass  15: suminf.    0.19119 (3) obj. -19633.2 iterations 8
Cbc0038I Pass  16: suminf.    0.48370 (6) obj. -19633.2 iterations 8
Cbc0038I Pass  17: suminf.    3.58173 (8) obj. -19633.2 iterations 4
Cbc0038I Pass  18: suminf.    2.00976 (6) obj. -19633.2 iterations 2
Cbc0038I Pass  19: suminf.    0.19119 (3) obj. -19633.2 iterations 11
Cbc0038I Pass  20: suminf.    0.19119 (3) obj. -19633.2 iterations 5
Cbc0038I Pass  21: suminf.    1.08198 (3) obj. -19633.2 iterations 8
Cbc0038I Pass  22: suminf.    1.08198 (3) obj. -19633.2 iterations 1
Cbc0038I Pass  23: suminf.    1.08198 (3) obj. -19633.2 iterations 1
Cbc0038I Pass  24: suminf.    0.68552 (4) obj. -19633.2 iterations 8
Cbc0038I Pass  25: suminf.    0.49042 (6) obj. -19633.2 iterations 3
Cbc0038I Pass  26: suminf.    0.19119 (3) obj. -19633.2 iterations 14
Cbc0038I Pass  27: suminf.    0.19119 (3) obj. -19633.2 iterations 4
Cbc0038I Pass  28: suminf.    0.29469 (3) obj. -19633.2 iterations 5
Cbc0038I Pass  29: suminf.    0.19119 (3) obj. -19633.2 iterations 5
Cbc0038I Pass  30: suminf.    1.08198 (3) obj. -19633.2 iterations 7
Cbc0038I Pass  31: suminf.    1.08198 (3) obj. -19633.2 iterations 0
Cbc0038I Pass  32: suminf.    0.83411 (4) obj. -19633.2 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 63 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -19566.3 - took 0.01 seconds
Cbc0012I Integer solution of -19566.27 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 116 rows 63 columns, reduced to 8 rows 6 columns
Cbc0031I 4 added rows had average density of 6
Cbc0013I At root node, 9 cuts changed objective from -20235.8 to -19566.27 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19566.27, took 11 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 96 (-57) columns and 1367 (-1937) elements
Clp1000I sum of infeasibilities 1.45776e-06 - average 1.65654e-08, 52 fixed columns
Coin0506I Presolve 43 (-45) rows, 44 (-52) columns and 226 (-1141) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 20270.673
Clp0000I Optimal - objective value 20270.673
Coin0511I After Postsolve, objective 20270.673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0338441 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 20270.673
Clp0000I Optimal - objective value 20270.673
Clp0000I Optimal - objective value 20270.673
Coin0511I After Postsolve, objective 20270.673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 20270.67289 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 100 columns (100 integer (100 of which binary)) and 1386 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.328%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.38025
Cbc0038I Pass   1: suminf.    1.93805 (22) obj. -18248.7 iterations 17
Cbc0038I Pass   2: suminf.    1.93805 (22) obj. -18248.7 iterations 1
Cbc0038I Pass   3: suminf.    0.42452 (10) obj. -15030.5 iterations 13
Cbc0038I Solution found of -15018
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -15018 to -19566.3 (0.03 seconds)
Cbc0038I Round again with cutoff of -19636.1
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.96631 (27) obj. -19636.1 iterations 5
Cbc0038I Pass   5: suminf.    1.96631 (27) obj. -19636.1 iterations 5
Cbc0038I Pass   6: suminf.    0.89511 (15) obj. -19636.1 iterations 15
Cbc0038I Pass   7: suminf.    0.89511 (15) obj. -19636.1 iterations 1
Cbc0038I Pass   8: suminf.    0.32707 (6) obj. -19636.1 iterations 10
Cbc0038I Pass   9: suminf.    0.32707 (6) obj. -19636.1 iterations 2
Cbc0038I Pass  10: suminf.    1.08965 (3) obj. -19636.1 iterations 12
Cbc0038I Pass  11: suminf.    0.21940 (3) obj. -19636.1 iterations 6
Cbc0038I Pass  12: suminf.    0.30180 (6) obj. -19636.1 iterations 4
Cbc0038I Pass  13: suminf.    0.30180 (6) obj. -19636.1 iterations 1
Cbc0038I Pass  14: suminf.    0.70455 (15) obj. -19636.1 iterations 18
Cbc0038I Pass  15: suminf.    0.70455 (15) obj. -19636.1 iterations 3
Cbc0038I Pass  16: suminf.    1.09430 (3) obj. -19636.1 iterations 19
Cbc0038I Pass  17: suminf.    0.23653 (3) obj. -19636.1 iterations 6
Cbc0038I Pass  18: suminf.    0.52041 (7) obj. -19636.1 iterations 7
Cbc0038I Pass  19: suminf.    0.39706 (7) obj. -19636.1 iterations 2
Cbc0038I Pass  20: suminf.    1.09508 (3) obj. -19636.1 iterations 13
Cbc0038I Pass  21: suminf.    0.23939 (3) obj. -19636.1 iterations 7
Cbc0038I Pass  22: suminf.    0.40147 (6) obj. -19636.1 iterations 6
Cbc0038I Pass  23: suminf.    0.40147 (6) obj. -19636.1 iterations 2
Cbc0038I Pass  24: suminf.    1.09430 (3) obj. -19636.1 iterations 12
Cbc0038I Pass  25: suminf.    0.23653 (3) obj. -19636.1 iterations 7
Cbc0038I Pass  26: suminf.    0.47792 (8) obj. -19636.1 iterations 9
Cbc0038I Pass  27: suminf.    0.47792 (8) obj. -19636.1 iterations 1
Cbc0038I Pass  28: suminf.    1.09430 (3) obj. -19636.1 iterations 14
Cbc0038I Pass  29: suminf.    0.23653 (3) obj. -19636.1 iterations 6
Cbc0038I Pass  30: suminf.    0.46413 (7) obj. -19636.1 iterations 6
Cbc0038I Pass  31: suminf.    0.46413 (7) obj. -19636.1 iterations 1
Cbc0038I Pass  32: suminf.    1.09353 (3) obj. -19636.1 iterations 12
Cbc0038I Pass  33: suminf.    0.23368 (3) obj. -19636.1 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19566.3 - took 0.02 seconds
Cbc0012I Integer solution of -19566.27 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 92 rows 100 columns, reduced to 12 rows 11 columns
Cbc0031I 4 added rows had average density of 8
Cbc0013I At root node, 15 cuts changed objective from -20235.465 to -19561.27 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19566.27, took 26 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

