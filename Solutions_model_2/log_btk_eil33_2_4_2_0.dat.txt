Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 1.39604e-05 - average 2.40697e-07, 6 fixed columns
Coin0506I Presolve 46 (-12) rows, 27 (-6) columns and 139 (-35) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 3.7569694 - largest nonzero change 0 ( 0%) - largest zero change 1.7295226e-05
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Coin0511I After Postsolve, objective 99.563994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Coin0511I After Postsolve, objective 99.563994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.56399443 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.43699
Cbc0038I Pass   1: suminf.    0.44500 (1) obj. -33.7116 iterations 20
Cbc0038I Solution found of -14.6662
Cbc0038I Relaxing continuous gives -14.6662
Cbc0038I Rounding solution of -25.7107 is better than previous of -14.6662

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.7107 to -41.1818 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.4918
Cbc0038I Pass   2: suminf.    0.70736 (3) obj. -46.4918 iterations 2
Cbc0038I Pass   3: suminf.    0.97756 (4) obj. -46.4918 iterations 8
Cbc0038I Pass   4: suminf.    0.55164 (2) obj. -46.4918 iterations 5
Cbc0038I Pass   5: suminf.    0.76679 (2) obj. -46.4918 iterations 3
Cbc0038I Pass   6: suminf.    1.72625 (7) obj. -46.4918 iterations 11
Cbc0038I Pass   7: suminf.    0.93255 (5) obj. -46.4918 iterations 4
Cbc0038I Pass   8: suminf.    0.80368 (2) obj. -46.4918 iterations 5
Cbc0038I Pass   9: suminf.    0.75829 (3) obj. -46.4918 iterations 2
Cbc0038I Pass  10: suminf.    1.11883 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  11: suminf.    0.99844 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  12: suminf.    0.99844 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  13: suminf.    0.98263 (3) obj. -46.4918 iterations 5
Cbc0038I Pass  14: suminf.    0.97433 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  15: suminf.    1.25256 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  16: suminf.    1.13052 (6) obj. -46.4918 iterations 1
Cbc0038I Pass  17: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  18: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  19: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  20: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  21: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I Pass  22: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  23: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  24: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  25: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  26: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I Pass  27: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  28: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  29: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  30: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  31: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -41.1818 - took 0.03 seconds
Cbc0012I Integer solution of -41.18183 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 30 rows 18 columns
Cbc0031I 12 added rows had average density of 25.166667
Cbc0013I At root node, 12 cuts changed objective from -94.280842 to -69.399586 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1139 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 862 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0012I Integer solution of -41.21276 found by rounding after 2618 iterations and 8 nodes (0.23 seconds)
Cbc0004I Integer solution of -43.025331 found after 2639 iterations and 11 nodes (0.23 seconds)
Cbc0012I Integer solution of -43.52116 found by DiveCoefficient after 2718 iterations and 16 nodes (0.24 seconds)
Cbc0012I Integer solution of -44.52116 found by rounding after 2799 iterations and 19 nodes (0.24 seconds)
Cbc0001I Search completed - best objective -44.52115999999999, took 2856 iterations and 20 nodes (0.24 seconds)
Cbc0032I Strong branching done 208 times (1847 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-16) rows, 58 (-8) columns and 552 (-171) elements
Clp1000I sum of infeasibilities 1.26038e-06 - average 2.42381e-08, 13 fixed columns
Coin0506I Presolve 39 (-13) rows, 44 (-14) columns and 366 (-186) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.7116367 - largest nonzero change 2.3561002e-05 ( 0.0015380202%) - largest zero change 2.6357625e-05
Clp0000I Optimal - objective value 109.37049
Clp0000I Optimal - objective value 109.37049
Coin0511I After Postsolve, objective 109.37049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7775365 - largest nonzero change 1.2246856e-05 ( 0.00079945292%) - largest zero change 2.6287936e-05
Clp0000I Optimal - objective value 114.42064
Clp0000I Optimal - objective value 114.42064
Clp0000I Optimal - objective value 114.42064
Coin0511I After Postsolve, objective 114.42064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.4206408 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 58 columns (58 integer (58 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.412%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.1275
Cbc0038I Pass   1: suminf.    1.76709 (15) obj. -65.9484 iterations 12
Cbc0038I Pass   2: suminf.    1.76709 (15) obj. -65.9484 iterations 1
Cbc0038I Solution found of -17.4933
Cbc0038I Rounding solution of -22.9473 is better than previous of -17.4933

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -22.9473 to -23.141 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.8972
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.76709 (15) obj. -65.9484 iterations 0
Cbc0038I Pass   4: suminf.    1.76709 (15) obj. -65.9484 iterations 1
Cbc0038I Pass   5: suminf.    0.46652 (1) obj. -31.8972 iterations 17
Cbc0038I Pass   6: suminf.    0.19355 (1) obj. -39.2675 iterations 1
Cbc0038I Pass   7: suminf.    1.90476 (9) obj. -41.4805 iterations 14
Cbc0038I Pass   8: suminf.    0.96949 (6) obj. -34.7277 iterations 3
Cbc0038I Pass   9: suminf.    0.65592 (4) obj. -31.8972 iterations 9
Cbc0038I Pass  10: suminf.    0.64536 (2) obj. -31.8972 iterations 1
Cbc0038I Pass  11: suminf.    0.79136 (2) obj. -31.8972 iterations 3
Cbc0038I Pass  12: suminf.    0.72581 (2) obj. -33.6671 iterations 1
Cbc0038I Pass  13: suminf.    1.15662 (9) obj. -31.8972 iterations 11
Cbc0038I Pass  14: suminf.    0.90533 (4) obj. -31.8972 iterations 4
Cbc0038I Pass  15: suminf.    0.94616 (2) obj. -31.8972 iterations 5
Cbc0038I Pass  16: suminf.    0.79032 (2) obj. -36.1048 iterations 1
Cbc0038I Pass  17: suminf.    0.60376 (4) obj. -31.8972 iterations 3
Cbc0038I Pass  18: suminf.    0.59907 (2) obj. -31.8972 iterations 1
Cbc0038I Pass  19: suminf.    2.44250 (9) obj. -31.8972 iterations 16
Cbc0038I Pass  20: suminf.    1.95796 (6) obj. -33.2943 iterations 4
Cbc0038I Pass  21: suminf.    1.47054 (5) obj. -31.8972 iterations 6
Cbc0038I Pass  22: suminf.    1.38730 (5) obj. -31.8972 iterations 4
Cbc0038I Pass  23: suminf.    1.38730 (5) obj. -31.8972 iterations 0
Cbc0038I Pass  24: suminf.    1.24324 (5) obj. -31.8972 iterations 3
Cbc0038I Pass  25: suminf.    1.14297 (5) obj. -31.8972 iterations 2
Cbc0038I Pass  26: suminf.    1.14297 (5) obj. -31.8972 iterations 0
Cbc0038I Pass  27: suminf.    1.47277 (5) obj. -31.8972 iterations 2
Cbc0038I Pass  28: suminf.    1.38730 (5) obj. -31.8972 iterations 1
Cbc0038I Pass  29: suminf.    1.24324 (5) obj. -31.8972 iterations 3
Cbc0038I Pass  30: suminf.    1.14297 (5) obj. -31.8972 iterations 2
Cbc0038I Pass  31: suminf.    1.14297 (5) obj. -31.8972 iterations 0
Cbc0038I Pass  32: suminf.    1.47277 (5) obj. -31.8972 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -23.141 to -38.2862 (0.04 seconds)
Cbc0038I Round again with cutoff of -52.7694
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.76709 (15) obj. -65.9484 iterations 0
Cbc0038I Pass  33: suminf.    1.76709 (15) obj. -65.9484 iterations 1
Cbc0038I Pass  34: suminf.    1.15083 (5) obj. -52.7694 iterations 25
Cbc0038I Pass  35: suminf.    1.15083 (5) obj. -52.7694 iterations 0
Cbc0038I Pass  36: suminf.    0.55868 (2) obj. -52.7694 iterations 6
Cbc0038I Pass  37: suminf.    0.63631 (2) obj. -52.7694 iterations 1
Cbc0038I Pass  38: suminf.    0.38629 (2) obj. -61.4101 iterations 1
Cbc0038I Pass  39: suminf.    0.55868 (2) obj. -52.7694 iterations 2
Cbc0038I Pass  40: suminf.    3.82967 (17) obj. -52.7694 iterations 23
Cbc0038I Pass  41: suminf.    2.92208 (12) obj. -52.7694 iterations 4
Cbc0038I Pass  42: suminf.    2.44493 (11) obj. -54.221 iterations 1
Cbc0038I Pass  43: suminf.    1.40342 (7) obj. -52.7694 iterations 11
Cbc0038I Pass  44: suminf.    1.31384 (4) obj. -52.7694 iterations 3
Cbc0038I Pass  45: suminf.    1.04457 (4) obj. -55.1929 iterations 3
Cbc0038I Pass  46: suminf.    1.48955 (6) obj. -52.7694 iterations 3
Cbc0038I Pass  47: suminf.    0.86374 (4) obj. -52.7694 iterations 4
Cbc0038I Pass  48: suminf.    0.86374 (4) obj. -52.7694 iterations 0
Cbc0038I Pass  49: suminf.    1.93086 (7) obj. -52.7694 iterations 5
Cbc0038I Pass  50: suminf.    1.93086 (7) obj. -52.7694 iterations 0
Cbc0038I Pass  51: suminf.    2.30155 (6) obj. -52.7694 iterations 5
Cbc0038I Pass  52: suminf.    1.91604 (5) obj. -52.7694 iterations 5
Cbc0038I Pass  53: suminf.    1.74660 (5) obj. -52.7694 iterations 4
Cbc0038I Pass  54: suminf.    2.79642 (9) obj. -52.7694 iterations 14
Cbc0038I Pass  55: suminf.    2.17864 (8) obj. -52.7694 iterations 4
Cbc0038I Pass  56: suminf.    1.84877 (9) obj. -52.7694 iterations 4
Cbc0038I Pass  57: suminf.    1.91596 (6) obj. -52.7694 iterations 8
Cbc0038I Pass  58: suminf.    1.67777 (6) obj. -52.7694 iterations 3
Cbc0038I Pass  59: suminf.    3.24385 (12) obj. -52.7694 iterations 10
Cbc0038I Pass  60: suminf.    2.02246 (10) obj. -52.7694 iterations 2
Cbc0038I Pass  61: suminf.    2.02246 (10) obj. -52.7694 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -38.2862 to -41.1818 (0.05 seconds)
Cbc0038I Round again with cutoff of -70.1492
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.60207 (20) obj. -70.1492 iterations 3
Cbc0038I Pass  62: suminf.    2.07974 (16) obj. -70.1492 iterations 3
Cbc0038I Pass  63: suminf.    1.62635 (7) obj. -70.1492 iterations 22
Cbc0038I Pass  64: suminf.    1.62635 (7) obj. -70.1492 iterations 0
Cbc0038I Pass  65: suminf.    1.42997 (11) obj. -70.1492 iterations 14
Cbc0038I Pass  66: suminf.    1.42878 (13) obj. -70.1492 iterations 2
Cbc0038I Pass  67: suminf.    0.68462 (4) obj. -70.1492 iterations 4
Cbc0038I Pass  68: suminf.    0.66011 (10) obj. -70.1492 iterations 2
Cbc0038I Pass  69: suminf.    2.17135 (8) obj. -70.1492 iterations 7
Cbc0038I Pass  70: suminf.    1.73701 (6) obj. -70.1492 iterations 2
Cbc0038I Pass  71: suminf.    2.11161 (6) obj. -70.1492 iterations 6
Cbc0038I Pass  72: suminf.    2.57454 (9) obj. -70.1492 iterations 9
Cbc0038I Pass  73: suminf.    2.40296 (8) obj. -70.1492 iterations 2
Cbc0038I Pass  74: suminf.    2.25158 (8) obj. -70.1492 iterations 1
Cbc0038I Pass  75: suminf.    1.80027 (8) obj. -70.1492 iterations 9
Cbc0038I Pass  76: suminf.    1.79812 (7) obj. -70.1492 iterations 1
Cbc0038I Pass  77: suminf.    2.13705 (7) obj. -70.1492 iterations 3
Cbc0038I Pass  78: suminf.    2.13705 (7) obj. -70.1492 iterations 0
Cbc0038I Pass  79: suminf.    1.80027 (8) obj. -70.1492 iterations 4
Cbc0038I Pass  80: suminf.    3.04827 (11) obj. -70.1492 iterations 13
Cbc0038I Pass  81: suminf.    2.63547 (11) obj. -70.1492 iterations 2
Cbc0038I Pass  82: suminf.    2.27604 (9) obj. -70.1492 iterations 9
Cbc0038I Pass  83: suminf.    2.02916 (7) obj. -70.1492 iterations 2
Cbc0038I Pass  84: suminf.    2.21962 (7) obj. -70.1492 iterations 3
Cbc0038I Pass  85: suminf.    1.75712 (7) obj. -70.1492 iterations 1
Cbc0038I Pass  86: suminf.    2.06241 (8) obj. -70.1492 iterations 4
Cbc0038I Pass  87: suminf.    3.13044 (10) obj. -70.1492 iterations 12
Cbc0038I Pass  88: suminf.    2.92080 (12) obj. -70.1492 iterations 4
Cbc0038I Pass  89: suminf.    2.59714 (7) obj. -70.1492 iterations 8
Cbc0038I Pass  90: suminf.    2.14317 (6) obj. -70.1492 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -41.1818 - took 0.06 seconds
Cbc0012I Integer solution of -41.18183 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 52 rows 58 columns, reduced to 8 rows 10 columns
Cbc0031I 24 added rows had average density of 16.666667
Cbc0013I At root node, 24 cuts changed objective from -110.70205 to -51.83609 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1847 row cuts average 2.9 elements, 8 column cuts (8 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 512 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -41.18183 best solution, best possible -51.83609 (1.59 seconds)
Cbc0012I Integer solution of -41.829331 found by rounding after 1713 iterations and 1 nodes (1.60 seconds)
Cbc0012I Integer solution of -41.904411 found by DiveCoefficient after 1761 iterations and 1 nodes (1.69 seconds)
Cbc0012I Integer solution of -43.025331 found by rounding after 1771 iterations and 3 nodes (1.73 seconds)
Cbc0016I Integer solution of -44.52116 found by strong branching after 2310 iterations and 7 nodes (2.27 seconds)
Cbc0010I After 8 nodes, 2 on tree, -44.52116 best solution, best possible -50.938085 (2.31 seconds)
Cbc0001I Search completed - best objective -44.52115999999999, took 2415 iterations and 10 nodes (2.34 seconds)
Cbc0032I Strong branching done 194 times (2339 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 41 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       2.34

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 1.39604e-05 - average 2.40697e-07, 6 fixed columns
Coin0506I Presolve 46 (-12) rows, 27 (-6) columns and 139 (-35) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 3.7569694 - largest nonzero change 0 ( 0%) - largest zero change 1.7295226e-05
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Coin0511I After Postsolve, objective 99.563994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Clp0000I Optimal - objective value 99.563994
Coin0511I After Postsolve, objective 99.563994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.56399443 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.43699
Cbc0038I Pass   1: suminf.    0.44500 (1) obj. -33.7116 iterations 20
Cbc0038I Solution found of -14.6662
Cbc0038I Relaxing continuous gives -14.6662
Cbc0038I Rounding solution of -25.7107 is better than previous of -14.6662

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.7107 to -41.1818 (0.01 seconds)
Cbc0038I Round again with cutoff of -46.4918
Cbc0038I Pass   2: suminf.    0.70736 (3) obj. -46.4918 iterations 2
Cbc0038I Pass   3: suminf.    0.97756 (4) obj. -46.4918 iterations 8
Cbc0038I Pass   4: suminf.    0.55164 (2) obj. -46.4918 iterations 5
Cbc0038I Pass   5: suminf.    0.76679 (2) obj. -46.4918 iterations 3
Cbc0038I Pass   6: suminf.    1.72625 (7) obj. -46.4918 iterations 11
Cbc0038I Pass   7: suminf.    0.93255 (5) obj. -46.4918 iterations 4
Cbc0038I Pass   8: suminf.    0.80368 (2) obj. -46.4918 iterations 5
Cbc0038I Pass   9: suminf.    0.75829 (3) obj. -46.4918 iterations 2
Cbc0038I Pass  10: suminf.    1.11883 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  11: suminf.    0.99844 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  12: suminf.    0.99844 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  13: suminf.    0.98263 (3) obj. -46.4918 iterations 5
Cbc0038I Pass  14: suminf.    0.97433 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  15: suminf.    1.25256 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  16: suminf.    1.13052 (6) obj. -46.4918 iterations 1
Cbc0038I Pass  17: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  18: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  19: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  20: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  21: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I Pass  22: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  23: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  24: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  25: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  26: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I Pass  27: suminf.    1.56633 (4) obj. -46.4918 iterations 8
Cbc0038I Pass  28: suminf.    0.95151 (4) obj. -46.4918 iterations 3
Cbc0038I Pass  29: suminf.    1.24982 (4) obj. -46.4918 iterations 4
Cbc0038I Pass  30: suminf.    1.22292 (4) obj. -46.4918 iterations 1
Cbc0038I Pass  31: suminf.    0.91700 (5) obj. -46.4918 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -41.1818 - took 0.03 seconds
Cbc0012I Integer solution of -41.18183 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 30 rows 18 columns
Cbc0031I 12 added rows had average density of 25.166667
Cbc0013I At root node, 12 cuts changed objective from -94.280842 to -69.399586 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1139 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 862 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0012I Integer solution of -41.21276 found by rounding after 2618 iterations and 8 nodes (0.23 seconds)
Cbc0004I Integer solution of -43.025331 found after 2639 iterations and 11 nodes (0.23 seconds)
Cbc0012I Integer solution of -43.52116 found by DiveCoefficient after 2718 iterations and 16 nodes (0.23 seconds)
Cbc0012I Integer solution of -44.52116 found by rounding after 2799 iterations and 19 nodes (0.24 seconds)
Cbc0001I Search completed - best objective -44.52115999999999, took 2856 iterations and 20 nodes (0.24 seconds)
Cbc0032I Strong branching done 208 times (1847 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 58 (-9) columns and 552 (-172) elements
Clp1000I sum of infeasibilities 1.26038e-06 - average 2.42381e-08, 13 fixed columns
Coin0506I Presolve 39 (-13) rows, 44 (-14) columns and 366 (-186) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.7116367 - largest nonzero change 2.3561002e-05 ( 0.0015380202%) - largest zero change 2.6357625e-05
Clp0000I Optimal - objective value 109.37049
Clp0000I Optimal - objective value 109.37049
Coin0511I After Postsolve, objective 109.37049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7775365 - largest nonzero change 1.2246856e-05 ( 0.00079945292%) - largest zero change 2.6287936e-05
Clp0000I Optimal - objective value 114.42064
Clp0000I Optimal - objective value 114.42064
Clp0000I Optimal - objective value 114.42064
Coin0511I After Postsolve, objective 114.42064, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.4206408 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 58 columns (58 integer (58 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.412%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.1275
Cbc0038I Pass   1: suminf.    1.76709 (15) obj. -65.9484 iterations 12
Cbc0038I Pass   2: suminf.    1.76709 (15) obj. -65.9484 iterations 1
Cbc0038I Solution found of -17.4933
Cbc0038I Rounding solution of -22.9473 is better than previous of -17.4933

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -22.9473 to -23.141 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.8972
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.76709 (15) obj. -65.9484 iterations 0
Cbc0038I Pass   4: suminf.    1.76709 (15) obj. -65.9484 iterations 1
Cbc0038I Pass   5: suminf.    0.46652 (1) obj. -31.8972 iterations 17
Cbc0038I Pass   6: suminf.    0.19355 (1) obj. -39.2675 iterations 1
Cbc0038I Pass   7: suminf.    1.90476 (9) obj. -41.4805 iterations 14
Cbc0038I Pass   8: suminf.    0.96949 (6) obj. -34.7277 iterations 3
Cbc0038I Pass   9: suminf.    0.65592 (4) obj. -31.8972 iterations 9
Cbc0038I Pass  10: suminf.    0.64536 (2) obj. -31.8972 iterations 1
Cbc0038I Pass  11: suminf.    0.79136 (2) obj. -31.8972 iterations 3
Cbc0038I Pass  12: suminf.    0.72581 (2) obj. -33.6671 iterations 1
Cbc0038I Pass  13: suminf.    1.15662 (9) obj. -31.8972 iterations 11
Cbc0038I Pass  14: suminf.    0.90533 (4) obj. -31.8972 iterations 4
Cbc0038I Pass  15: suminf.    0.94616 (2) obj. -31.8972 iterations 5
Cbc0038I Pass  16: suminf.    0.79032 (2) obj. -36.1048 iterations 1
Cbc0038I Pass  17: suminf.    0.60376 (4) obj. -31.8972 iterations 3
Cbc0038I Pass  18: suminf.    0.59907 (2) obj. -31.8972 iterations 1
Cbc0038I Pass  19: suminf.    2.44250 (9) obj. -31.8972 iterations 16
Cbc0038I Pass  20: suminf.    1.95796 (6) obj. -33.2943 iterations 4
Cbc0038I Pass  21: suminf.    1.47054 (5) obj. -31.8972 iterations 6
Cbc0038I Pass  22: suminf.    1.38730 (5) obj. -31.8972 iterations 4
Cbc0038I Pass  23: suminf.    1.38730 (5) obj. -31.8972 iterations 0
Cbc0038I Pass  24: suminf.    1.24324 (5) obj. -31.8972 iterations 3
Cbc0038I Pass  25: suminf.    1.14297 (5) obj. -31.8972 iterations 2
Cbc0038I Pass  26: suminf.    1.14297 (5) obj. -31.8972 iterations 0
Cbc0038I Pass  27: suminf.    1.47277 (5) obj. -31.8972 iterations 2
Cbc0038I Pass  28: suminf.    1.38730 (5) obj. -31.8972 iterations 1
Cbc0038I Pass  29: suminf.    1.24324 (5) obj. -31.8972 iterations 3
Cbc0038I Pass  30: suminf.    1.14297 (5) obj. -31.8972 iterations 2
Cbc0038I Pass  31: suminf.    1.14297 (5) obj. -31.8972 iterations 0
Cbc0038I Pass  32: suminf.    1.47277 (5) obj. -31.8972 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -23.141 to -38.2862 (0.05 seconds)
Cbc0038I Round again with cutoff of -52.7694
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.76709 (15) obj. -65.9484 iterations 0
Cbc0038I Pass  33: suminf.    1.76709 (15) obj. -65.9484 iterations 1
Cbc0038I Pass  34: suminf.    1.15083 (5) obj. -52.7694 iterations 25
Cbc0038I Pass  35: suminf.    1.15083 (5) obj. -52.7694 iterations 0
Cbc0038I Pass  36: suminf.    0.55868 (2) obj. -52.7694 iterations 6
Cbc0038I Pass  37: suminf.    0.63631 (2) obj. -52.7694 iterations 1
Cbc0038I Pass  38: suminf.    0.38629 (2) obj. -61.4101 iterations 1
Cbc0038I Pass  39: suminf.    0.55868 (2) obj. -52.7694 iterations 2
Cbc0038I Pass  40: suminf.    3.82967 (17) obj. -52.7694 iterations 23
Cbc0038I Pass  41: suminf.    2.92208 (12) obj. -52.7694 iterations 4
Cbc0038I Pass  42: suminf.    2.44493 (11) obj. -54.221 iterations 1
Cbc0038I Pass  43: suminf.    1.40342 (7) obj. -52.7694 iterations 11
Cbc0038I Pass  44: suminf.    1.31384 (4) obj. -52.7694 iterations 3
Cbc0038I Pass  45: suminf.    1.04457 (4) obj. -55.1929 iterations 3
Cbc0038I Pass  46: suminf.    1.48955 (6) obj. -52.7694 iterations 3
Cbc0038I Pass  47: suminf.    0.86374 (4) obj. -52.7694 iterations 4
Cbc0038I Pass  48: suminf.    0.86374 (4) obj. -52.7694 iterations 0
Cbc0038I Pass  49: suminf.    1.93086 (7) obj. -52.7694 iterations 5
Cbc0038I Pass  50: suminf.    1.93086 (7) obj. -52.7694 iterations 0
Cbc0038I Pass  51: suminf.    2.30155 (6) obj. -52.7694 iterations 5
Cbc0038I Pass  52: suminf.    1.91604 (5) obj. -52.7694 iterations 5
Cbc0038I Pass  53: suminf.    1.74660 (5) obj. -52.7694 iterations 4
Cbc0038I Pass  54: suminf.    2.79642 (9) obj. -52.7694 iterations 14
Cbc0038I Pass  55: suminf.    2.17864 (8) obj. -52.7694 iterations 4
Cbc0038I Pass  56: suminf.    1.84877 (9) obj. -52.7694 iterations 4
Cbc0038I Pass  57: suminf.    1.91596 (6) obj. -52.7694 iterations 8
Cbc0038I Pass  58: suminf.    1.67777 (6) obj. -52.7694 iterations 3
Cbc0038I Pass  59: suminf.    3.24385 (12) obj. -52.7694 iterations 10
Cbc0038I Pass  60: suminf.    2.02246 (10) obj. -52.7694 iterations 2
Cbc0038I Pass  61: suminf.    2.02246 (10) obj. -52.7694 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -38.2862 to -41.1818 (0.06 seconds)
Cbc0038I Round again with cutoff of -70.1492
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.60207 (20) obj. -70.1492 iterations 3
Cbc0038I Pass  62: suminf.    2.07974 (16) obj. -70.1492 iterations 3
Cbc0038I Pass  63: suminf.    1.62635 (7) obj. -70.1492 iterations 22
Cbc0038I Pass  64: suminf.    1.62635 (7) obj. -70.1492 iterations 0
Cbc0038I Pass  65: suminf.    1.42997 (11) obj. -70.1492 iterations 14
Cbc0038I Pass  66: suminf.    1.42878 (13) obj. -70.1492 iterations 2
Cbc0038I Pass  67: suminf.    0.68462 (4) obj. -70.1492 iterations 4
Cbc0038I Pass  68: suminf.    0.66011 (10) obj. -70.1492 iterations 2
Cbc0038I Pass  69: suminf.    2.17135 (8) obj. -70.1492 iterations 7
Cbc0038I Pass  70: suminf.    1.73701 (6) obj. -70.1492 iterations 2
Cbc0038I Pass  71: suminf.    2.11161 (6) obj. -70.1492 iterations 6
Cbc0038I Pass  72: suminf.    2.57454 (9) obj. -70.1492 iterations 9
Cbc0038I Pass  73: suminf.    2.40296 (8) obj. -70.1492 iterations 2
Cbc0038I Pass  74: suminf.    2.25158 (8) obj. -70.1492 iterations 1
Cbc0038I Pass  75: suminf.    1.80027 (8) obj. -70.1492 iterations 9
Cbc0038I Pass  76: suminf.    1.79812 (7) obj. -70.1492 iterations 1
Cbc0038I Pass  77: suminf.    2.13705 (7) obj. -70.1492 iterations 3
Cbc0038I Pass  78: suminf.    2.13705 (7) obj. -70.1492 iterations 0
Cbc0038I Pass  79: suminf.    1.80027 (8) obj. -70.1492 iterations 4
Cbc0038I Pass  80: suminf.    3.04827 (11) obj. -70.1492 iterations 13
Cbc0038I Pass  81: suminf.    2.63547 (11) obj. -70.1492 iterations 2
Cbc0038I Pass  82: suminf.    2.27604 (9) obj. -70.1492 iterations 9
Cbc0038I Pass  83: suminf.    2.02916 (7) obj. -70.1492 iterations 2
Cbc0038I Pass  84: suminf.    2.21962 (7) obj. -70.1492 iterations 3
Cbc0038I Pass  85: suminf.    1.75712 (7) obj. -70.1492 iterations 1
Cbc0038I Pass  86: suminf.    2.06241 (8) obj. -70.1492 iterations 4
Cbc0038I Pass  87: suminf.    3.13044 (10) obj. -70.1492 iterations 12
Cbc0038I Pass  88: suminf.    2.92080 (12) obj. -70.1492 iterations 4
Cbc0038I Pass  89: suminf.    2.59714 (7) obj. -70.1492 iterations 8
Cbc0038I Pass  90: suminf.    2.14317 (6) obj. -70.1492 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 58 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -41.1818 - took 0.06 seconds
Cbc0012I Integer solution of -41.18183 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 52 rows 58 columns, reduced to 8 rows 10 columns
Cbc0031I 24 added rows had average density of 16.666667
Cbc0013I At root node, 24 cuts changed objective from -110.70205 to -51.83609 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1847 row cuts average 2.9 elements, 8 column cuts (8 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 512 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.719 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -41.18183 best solution, best possible -51.83609 (1.59 seconds)
Cbc0012I Integer solution of -41.829331 found by rounding after 1713 iterations and 1 nodes (1.60 seconds)
Cbc0012I Integer solution of -41.904411 found by DiveCoefficient after 1761 iterations and 1 nodes (1.69 seconds)
Cbc0012I Integer solution of -43.025331 found by rounding after 1771 iterations and 3 nodes (1.74 seconds)
Cbc0016I Integer solution of -44.52116 found by strong branching after 2310 iterations and 7 nodes (2.35 seconds)
Cbc0010I After 7 nodes, 3 on tree, -44.52116 best solution, best possible -50.938085 (2.36 seconds)
Cbc0001I Search completed - best objective -44.52115999999999, took 2415 iterations and 10 nodes (2.43 seconds)
Cbc0032I Strong branching done 194 times (2339 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 41 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       2.44

