Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 69 (-9) columns and 376 (-77) elements
Clp1000I sum of infeasibilities 2.103e-05 - average 1.70975e-07, 13 fixed columns
Coin0506I Presolve 99 (-24) rows, 56 (-13) columns and 302 (-74) elements
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 81.05049
Clp0000I Optimal - objective value 81.05049
Coin0511I After Postsolve, objective 81.05049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2573867 - largest nonzero change 0 ( 0%) - largest zero change 2.9375698e-05
Clp0000I Optimal - objective value 81.05049
Clp0000I Optimal - objective value 81.05049
Clp0000I Optimal - objective value 81.05049
Coin0511I After Postsolve, objective 81.05049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.05049001 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 69 columns (68 integer (68 of which binary)) and 384 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.65756
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.8995 iterations 42
Cbc0038I Solution found of -28.8995
Cbc0038I Relaxing continuous gives -28.8995
Cbc0038I Rounding solution of -29.9244 is better than previous of -28.8995

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -29.9244 to -50.6648 (0.05 seconds)
Cbc0038I Round again with cutoff of -53.6947
Cbc0038I Pass   2: suminf.    1.33518 (9) obj. -53.6947 iterations 20
Cbc0038I Pass   3: suminf.    0.98133 (8) obj. -53.6947 iterations 1
Cbc0038I Pass   4: suminf.    1.00684 (3) obj. -53.6947 iterations 20
Cbc0038I Pass   5: suminf.    0.77241 (3) obj. -53.6947 iterations 4
Cbc0038I Pass   6: suminf.    0.98661 (4) obj. -53.6947 iterations 3
Cbc0038I Pass   7: suminf.    4.21911 (12) obj. -53.6947 iterations 18
Cbc0038I Pass   8: suminf.    2.99569 (9) obj. -53.6947 iterations 15
Cbc0038I Pass   9: suminf.    1.33286 (5) obj. -53.6947 iterations 7
Cbc0038I Pass  10: suminf.    1.12652 (4) obj. -53.6947 iterations 4
Cbc0038I Pass  11: suminf.    1.19053 (5) obj. -53.6947 iterations 5
Cbc0038I Pass  12: suminf.    1.11399 (4) obj. -53.6947 iterations 4
Cbc0038I Pass  13: suminf.    1.14512 (4) obj. -53.6947 iterations 5
Cbc0038I Pass  14: suminf.    2.95024 (11) obj. -53.6947 iterations 18
Cbc0038I Pass  15: suminf.    1.76379 (6) obj. -53.6947 iterations 15
Cbc0038I Pass  16: suminf.    1.02546 (4) obj. -53.6947 iterations 5
Cbc0038I Pass  17: suminf.    0.79235 (3) obj. -53.6947 iterations 4
Cbc0038I Pass  18: suminf.    0.85119 (3) obj. -53.6947 iterations 2
Cbc0038I Pass  19: suminf.    3.35708 (14) obj. -53.6947 iterations 17
Cbc0038I Pass  20: suminf.    1.00414 (9) obj. -53.6947 iterations 11
Cbc0038I Pass  21: suminf.    2.10985 (8) obj. -53.6947 iterations 13
Cbc0038I Pass  22: suminf.    1.38739 (4) obj. -53.6947 iterations 10
Cbc0038I Pass  23: suminf.    0.80977 (4) obj. -53.6947 iterations 10
Cbc0038I Pass  24: suminf.    1.65321 (4) obj. -53.6947 iterations 11
Cbc0038I Pass  25: suminf.    1.24270 (3) obj. -53.6947 iterations 4
Cbc0038I Pass  26: suminf.    1.12594 (4) obj. -53.6947 iterations 4
Cbc0038I Pass  27: suminf.    1.71074 (5) obj. -53.6947 iterations 15
Cbc0038I Pass  28: suminf.    1.38739 (4) obj. -53.6947 iterations 7
Cbc0038I Pass  29: suminf.    0.80977 (4) obj. -53.6947 iterations 10
Cbc0038I Pass  30: suminf.    1.65321 (4) obj. -53.6947 iterations 11
Cbc0038I Pass  31: suminf.    1.24270 (3) obj. -53.6947 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 84 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -50.6648 - took 0.09 seconds
Cbc0012I Integer solution of -50.6648 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 122 rows 69 columns, reduced to 67 rows 39 columns
Cbc0031I 19 added rows had average density of 55.315789
Cbc0013I At root node, 19 cuts changed objective from -80.963278 to -70.759402 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7256 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1333 row cuts average 68.8 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0038I Full problem 122 rows 69 columns, reduced to 7 rows 6 columns
Cbc0010I After 41 nodes, 9 on tree, -50.6648 best solution, best possible -70.759402 (0.67 seconds)
Cbc0001I Search completed - best objective -50.6648, took 5784 iterations and 70 nodes (0.70 seconds)
Cbc0032I Strong branching done 454 times (7312 iterations), fathomed 7 nodes and fixed 28 variables
Cbc0035I Maximum depth 10, 245 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 119 (-33) columns and 2016 (-1287) elements
Clp1000I sum of infeasibilities 8.68267e-08 - average 8.1912e-10, 33 fixed columns
Coin0506I Presolve 76 (-30) rows, 85 (-34) columns and 1006 (-1010) elements
Clp0006I 0  Obj 122.35527 Dual inf 7.2680643 (84)
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 2.3073275 - largest nonzero change 2.4718686e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 133.64983
Clp0000I Optimal - objective value 133.64983
Coin0511I After Postsolve, objective 133.64983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 133.64983 Dual inf 2.0115052 (1)
Clp0014I Perturbing problem by 0.001% of 1.7490198 - largest nonzero change 2.390857e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 133.64983
Clp0000I Optimal - objective value 133.64983
Clp0000I Optimal - objective value 133.64983
Coin0511I After Postsolve, objective 133.64983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.6498286 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 119 columns (119 integer (119 of which binary)) and 2025 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.688%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 4.08565
Cbc0038I Pass   1: suminf.    1.46229 (24) obj. -52.4363 iterations 15
Cbc0038I Pass   2: suminf.    1.46229 (24) obj. -52.4363 iterations 1
Cbc0038I Solution found of -9.57271
Cbc0038I Rounding solution of -20.5276 is better than previous of -9.57271

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 119 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -20.5276 to -43.1408 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.1208
Cbc0038I Pass   3: suminf.    1.46229 (24) obj. -52.4363 iterations 0
Cbc0038I Pass   4: suminf.    1.46229 (24) obj. -52.4363 iterations 1
Cbc0038I Pass   5: suminf.    1.17880 (20) obj. -51.1208 iterations 34
Cbc0038I Pass   6: suminf.    1.17880 (20) obj. -51.1208 iterations 0
Cbc0038I Pass   7: suminf.    0.26569 (5) obj. -51.1208 iterations 19
Cbc0038I Pass   8: suminf.    0.20162 (4) obj. -62.8909 iterations 1
Cbc0038I Pass   9: suminf.    0.46423 (1) obj. -51.1208 iterations 5
Cbc0038I Pass  10: suminf.    0.10714 (1) obj. -58.4889 iterations 1
Cbc0038I Pass  11: suminf.    1.84111 (14) obj. -51.1208 iterations 21
Cbc0038I Pass  12: suminf.    1.72031 (13) obj. -51.1208 iterations 2
Cbc0038I Pass  13: suminf.    0.41942 (1) obj. -51.1208 iterations 12
Cbc0038I Pass  14: suminf.    0.10714 (1) obj. -56.4889 iterations 2
Cbc0038I Pass  15: suminf.    0.41942 (1) obj. -51.1208 iterations 1
Cbc0038I Pass  16: suminf.    3.81507 (17) obj. -51.1208 iterations 26
Cbc0038I Pass  17: suminf.    2.00200 (17) obj. -51.1208 iterations 6
Cbc0038I Pass  18: suminf.    2.00200 (17) obj. -51.1208 iterations 0
Cbc0038I Pass  19: suminf.    0.74935 (7) obj. -51.1208 iterations 15
Cbc0038I Pass  20: suminf.    0.14168 (1) obj. -51.1208 iterations 5
Cbc0038I Pass  21: suminf.    0.25926 (1) obj. -53.142 iterations 2
Cbc0038I Pass  22: suminf.    1.10778 (13) obj. -51.1208 iterations 24
Cbc0038I Pass  23: suminf.    0.73802 (11) obj. -53.8228 iterations 8
Cbc0038I Pass  24: suminf.    0.38819 (3) obj. -51.1208 iterations 14
Cbc0038I Pass  25: suminf.    0.38819 (3) obj. -51.1208 iterations 0
Cbc0038I Pass  26: suminf.    0.15536 (2) obj. -59.7999 iterations 6
Cbc0038I Pass  27: suminf.    0.15536 (2) obj. -59.7999 iterations 0
Cbc0038I Pass  28: suminf.    0.24490 (1) obj. -51.1208 iterations 5
Cbc0038I Pass  29: suminf.    0.10714 (1) obj. -53.4889 iterations 1
Cbc0038I Pass  30: suminf.    1.43378 (12) obj. -51.1208 iterations 20
Cbc0038I Pass  31: suminf.    0.54637 (9) obj. -59.0157 iterations 8
Cbc0038I Pass  32: suminf.    0.14168 (1) obj. -51.1208 iterations 10
Cbc0038I Rounding solution of -57.5727 is better than previous of -43.1408

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 119 columns, reduced to 58 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -70.6463
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.16838 (44) obj. -70.6463 iterations 8
Cbc0038I Pass  33: suminf.    2.16838 (44) obj. -70.6463 iterations 0
Cbc0038I Pass  34: suminf.    1.84116 (29) obj. -70.6463 iterations 16
Cbc0038I Pass  35: suminf.    0.86068 (17) obj. -70.6463 iterations 16
Cbc0038I Pass  36: suminf.    0.86068 (17) obj. -70.6463 iterations 0
Cbc0038I Pass  37: suminf.    1.09781 (4) obj. -70.6463 iterations 26
Cbc0038I Pass  38: suminf.    0.89040 (4) obj. -70.6463 iterations 4
Cbc0038I Pass  39: suminf.    0.64129 (4) obj. -70.6463 iterations 7
Cbc0038I Pass  40: suminf.    0.44615 (10) obj. -70.6463 iterations 1
Cbc0038I Pass  41: suminf.    1.09781 (4) obj. -70.6463 iterations 9
Cbc0038I Pass  42: suminf.    1.08396 (10) obj. -70.6463 iterations 17
Cbc0038I Pass  43: suminf.    0.56093 (8) obj. -73.3308 iterations 9
Cbc0038I Pass  44: suminf.    1.04772 (5) obj. -70.6463 iterations 17
Cbc0038I Pass  45: suminf.    1.04772 (5) obj. -70.6463 iterations 0
Cbc0038I Pass  46: suminf.    0.64129 (4) obj. -70.6463 iterations 8
Cbc0038I Pass  47: suminf.    0.44615 (10) obj. -70.6463 iterations 1
Cbc0038I Pass  48: suminf.    1.09781 (4) obj. -70.6463 iterations 9
Cbc0038I Pass  49: suminf.    0.89040 (4) obj. -70.6463 iterations 4
Cbc0038I Pass  50: suminf.    0.64129 (4) obj. -70.6463 iterations 10
Cbc0038I Pass  51: suminf.    1.90326 (9) obj. -70.6463 iterations 18
Cbc0038I Pass  52: suminf.    1.01654 (7) obj. -70.6463 iterations 16
Cbc0038I Pass  53: suminf.    1.20113 (5) obj. -70.6463 iterations 12
Cbc0038I Pass  54: suminf.    0.71441 (5) obj. -70.6463 iterations 2
Cbc0038I Pass  55: suminf.    0.71441 (5) obj. -70.6463 iterations 3
Cbc0038I Pass  56: suminf.    1.09781 (4) obj. -70.6463 iterations 8
Cbc0038I Pass  57: suminf.    0.89040 (4) obj. -70.6463 iterations 5
Cbc0038I Pass  58: suminf.    0.64129 (4) obj. -70.6463 iterations 7
Cbc0038I Pass  59: suminf.    0.44615 (10) obj. -70.6463 iterations 1
Cbc0038I Pass  60: suminf.    1.09781 (4) obj. -70.6463 iterations 9
Cbc0038I Pass  61: suminf.    1.57735 (11) obj. -70.6463 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 119 columns, reduced to 55 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -57.5727 - took 0.05 seconds
Cbc0012I Integer solution of -57.57271 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 50 added rows had average density of 37.64
Cbc0013I At root node, 50 cuts changed objective from -122.9402 to -69.352018 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6827 row cuts average 4.4 elements, 2 column cuts (2 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1401 row cuts average 89.7 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 309 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1030 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 361 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.613 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -57.57271 best solution, best possible -69.352018 (1.89 seconds)
Cbc0012I Integer solution of -58.3327 found by rounding after 2412 iterations and 2 nodes (1.91 seconds)
Cbc0001I Search completed - best objective -58.33269999999999, took 3055 iterations and 20 nodes (2.11 seconds)
Cbc0032I Strong branching done 372 times (7793 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 108 variables fixed on reduced cost
Total time (CPU seconds):       1.64   (Wallclock seconds):       2.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 69 (-9) columns and 376 (-77) elements
Clp1000I sum of infeasibilities 2.103e-05 - average 1.70975e-07, 13 fixed columns
Coin0506I Presolve 99 (-24) rows, 56 (-13) columns and 302 (-74) elements
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 81.05049
Clp0000I Optimal - objective value 81.05049
Coin0511I After Postsolve, objective 81.05049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2573867 - largest nonzero change 0 ( 0%) - largest zero change 2.9375698e-05
Clp0000I Optimal - objective value 81.05049
Clp0000I Optimal - objective value 81.05049
Clp0000I Optimal - objective value 81.05049
Coin0511I After Postsolve, objective 81.05049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.05049001 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 69 columns (68 integer (68 of which binary)) and 384 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.439%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.65756
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.8995 iterations 42
Cbc0038I Solution found of -28.8995
Cbc0038I Relaxing continuous gives -28.8995
Cbc0038I Rounding solution of -29.9244 is better than previous of -28.8995

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -29.9244 to -50.6648 (0.05 seconds)
Cbc0038I Round again with cutoff of -53.6947
Cbc0038I Pass   2: suminf.    1.33518 (9) obj. -53.6947 iterations 20
Cbc0038I Pass   3: suminf.    0.98133 (8) obj. -53.6947 iterations 1
Cbc0038I Pass   4: suminf.    1.00684 (3) obj. -53.6947 iterations 20
Cbc0038I Pass   5: suminf.    0.77241 (3) obj. -53.6947 iterations 4
Cbc0038I Pass   6: suminf.    0.98661 (4) obj. -53.6947 iterations 3
Cbc0038I Pass   7: suminf.    4.21911 (12) obj. -53.6947 iterations 18
Cbc0038I Pass   8: suminf.    2.99569 (9) obj. -53.6947 iterations 15
Cbc0038I Pass   9: suminf.    1.33286 (5) obj. -53.6947 iterations 7
Cbc0038I Pass  10: suminf.    1.12652 (4) obj. -53.6947 iterations 4
Cbc0038I Pass  11: suminf.    1.19053 (5) obj. -53.6947 iterations 5
Cbc0038I Pass  12: suminf.    1.11399 (4) obj. -53.6947 iterations 4
Cbc0038I Pass  13: suminf.    1.14512 (4) obj. -53.6947 iterations 5
Cbc0038I Pass  14: suminf.    2.95024 (11) obj. -53.6947 iterations 18
Cbc0038I Pass  15: suminf.    1.76379 (6) obj. -53.6947 iterations 15
Cbc0038I Pass  16: suminf.    1.02546 (4) obj. -53.6947 iterations 5
Cbc0038I Pass  17: suminf.    0.79235 (3) obj. -53.6947 iterations 4
Cbc0038I Pass  18: suminf.    0.85119 (3) obj. -53.6947 iterations 2
Cbc0038I Pass  19: suminf.    3.35708 (14) obj. -53.6947 iterations 17
Cbc0038I Pass  20: suminf.    1.00414 (9) obj. -53.6947 iterations 11
Cbc0038I Pass  21: suminf.    2.10985 (8) obj. -53.6947 iterations 13
Cbc0038I Pass  22: suminf.    1.38739 (4) obj. -53.6947 iterations 10
Cbc0038I Pass  23: suminf.    0.80977 (4) obj. -53.6947 iterations 10
Cbc0038I Pass  24: suminf.    1.65321 (4) obj. -53.6947 iterations 11
Cbc0038I Pass  25: suminf.    1.24270 (3) obj. -53.6947 iterations 4
Cbc0038I Pass  26: suminf.    1.12594 (4) obj. -53.6947 iterations 4
Cbc0038I Pass  27: suminf.    1.71074 (5) obj. -53.6947 iterations 15
Cbc0038I Pass  28: suminf.    1.38739 (4) obj. -53.6947 iterations 7
Cbc0038I Pass  29: suminf.    0.80977 (4) obj. -53.6947 iterations 10
Cbc0038I Pass  30: suminf.    1.65321 (4) obj. -53.6947 iterations 11
Cbc0038I Pass  31: suminf.    1.24270 (3) obj. -53.6947 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 69 columns, reduced to 84 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -50.6648 - took 0.09 seconds
Cbc0012I Integer solution of -50.6648 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 122 rows 69 columns, reduced to 67 rows 39 columns
Cbc0031I 19 added rows had average density of 55.315789
Cbc0013I At root node, 19 cuts changed objective from -80.963278 to -70.759402 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7256 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1333 row cuts average 68.8 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 27 nodes, 11 on tree, -50.6648 best solution, best possible -70.759402 (0.68 seconds)
Cbc0038I Full problem 122 rows 69 columns, reduced to 7 rows 6 columns
Cbc0001I Search completed - best objective -50.6648, took 5784 iterations and 70 nodes (0.73 seconds)
Cbc0032I Strong branching done 454 times (7312 iterations), fathomed 7 nodes and fixed 28 variables
Cbc0035I Maximum depth 10, 245 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 118 (-35) columns and 1967 (-1337) elements
Clp1000I sum of infeasibilities 3.84219e-06 - average 3.65923e-08, 17 fixed columns
Coin0506I Presolve 84 (-21) rows, 95 (-23) columns and 1369 (-598) elements
Clp0006I 0  Obj 89.907485 Dual inf 9.6140926 (92)
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 2.1441734 - largest nonzero change 1.9795022e-05 ( 0.0015380202%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 98.502563
Clp0000I Optimal - objective value 98.502563
Coin0511I After Postsolve, objective 98.502563, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 98.502563
Clp0000I Optimal - objective value 98.502563
Clp0000I Optimal - objective value 98.502563
Clp0000I Optimal - objective value 98.502563
Coin0511I After Postsolve, objective 98.502563, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.50256278 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 118 columns (118 integer (118 of which binary)) and 1974 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.633%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.05284
Cbc0038I Pass   1: suminf.    1.44535 (29) obj. -80.4155 iterations 30
Cbc0038I Pass   2: suminf.    0.63868 (16) obj. -52.5846 iterations 13
Cbc0038I Pass   3: suminf.    0.19194 (6) obj. -38.2456 iterations 10
Cbc0038I Solution found of -28.5794
Cbc0038I Rounding solution of -37.9103 is better than previous of -28.5794

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 118 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -37.9103 to -38.389 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.6674
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.44535 (29) obj. -80.4155 iterations 0
Cbc0038I Pass   5: suminf.    0.68996 (17) obj. -53.5333 iterations 12
Cbc0038I Pass   6: suminf.    0.83372 (2) obj. -43.6674 iterations 26
Cbc0038I Pass   7: suminf.    0.83372 (2) obj. -43.6674 iterations 3
Cbc0038I Pass   8: suminf.    0.33019 (2) obj. -43.6674 iterations 5
Cbc0038I Pass   9: suminf.    0.96716 (12) obj. -43.6674 iterations 32
Cbc0038I Pass  10: suminf.    0.77625 (9) obj. -43.6674 iterations 7
Cbc0038I Pass  11: suminf.    1.22327 (3) obj. -43.6674 iterations 15
Cbc0038I Pass  12: suminf.    0.78540 (3) obj. -43.6674 iterations 2
Cbc0038I Pass  13: suminf.    0.69654 (3) obj. -45.1078 iterations 1
Cbc0038I Pass  14: suminf.    1.03588 (7) obj. -43.6674 iterations 11
Cbc0038I Pass  15: suminf.    0.29059 (3) obj. -43.6674 iterations 4
Cbc0038I Pass  16: suminf.    0.26479 (6) obj. -43.6674 iterations 3
Cbc0038I Pass  17: suminf.    1.36978 (6) obj. -43.6674 iterations 12
Cbc0038I Pass  18: suminf.    1.36978 (6) obj. -43.6674 iterations 0
Cbc0038I Pass  19: suminf.    0.36175 (3) obj. -43.6674 iterations 19
Cbc0038I Pass  20: suminf.    0.31059 (3) obj. -44.3149 iterations 3
Cbc0038I Pass  21: suminf.    1.35278 (5) obj. -43.6674 iterations 11
Cbc0038I Pass  22: suminf.    1.35278 (5) obj. -43.6674 iterations 0
Cbc0038I Pass  23: suminf.    1.04871 (4) obj. -43.6674 iterations 9
Cbc0038I Pass  24: suminf.    0.95624 (4) obj. -43.6674 iterations 1
Cbc0038I Pass  25: suminf.    1.69598 (13) obj. -43.6674 iterations 35
Cbc0038I Pass  26: suminf.    1.38813 (11) obj. -43.6674 iterations 8
Cbc0038I Pass  27: suminf.    1.24389 (11) obj. -43.6674 iterations 13
Cbc0038I Pass  28: suminf.    0.91546 (5) obj. -43.6674 iterations 18
Cbc0038I Pass  29: suminf.    0.35453 (4) obj. -43.6674 iterations 12
Cbc0038I Pass  30: suminf.    0.60993 (5) obj. -43.6674 iterations 5
Cbc0038I Pass  31: suminf.    1.00458 (9) obj. -43.6674 iterations 23
Cbc0038I Pass  32: suminf.    0.70642 (7) obj. -44.1718 iterations 9
Cbc0038I Pass  33: suminf.    1.16992 (5) obj. -43.6674 iterations 8
Cbc0038I Rounding solution of -40.4427 is better than previous of -38.389

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 118 columns, reduced to 24 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -40.4427 to -48.25 (0.06 seconds)
Cbc0038I Round again with cutoff of -56.8345
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.44535 (29) obj. -80.4155 iterations 0
Cbc0038I Pass  34: suminf.    0.83046 (20) obj. -56.8345 iterations 11
Cbc0038I Pass  35: suminf.    0.95187 (11) obj. -56.8345 iterations 13
Cbc0038I Pass  36: suminf.    0.95187 (11) obj. -56.8345 iterations 2
Cbc0038I Pass  37: suminf.    1.57734 (9) obj. -56.8345 iterations 27
Cbc0038I Pass  38: suminf.    1.57734 (9) obj. -56.8345 iterations 2
Cbc0038I Pass  39: suminf.    1.78824 (7) obj. -56.8345 iterations 11
Cbc0038I Pass  40: suminf.    1.78824 (7) obj. -56.8345 iterations 9
Cbc0038I Pass  41: suminf.    1.78988 (7) obj. -56.8345 iterations 5
Cbc0038I Pass  42: suminf.    1.12437 (7) obj. -56.8345 iterations 10
Cbc0038I Pass  43: suminf.    1.67474 (7) obj. -56.8345 iterations 11
Cbc0038I Pass  44: suminf.    0.57133 (7) obj. -56.8345 iterations 2
Cbc0038I Pass  45: suminf.    0.57071 (7) obj. -56.8345 iterations 3
Cbc0038I Pass  46: suminf.    1.79057 (7) obj. -56.8345 iterations 9
Cbc0038I Pass  47: suminf.    1.12437 (7) obj. -56.8345 iterations 7
Cbc0038I Pass  48: suminf.    1.67474 (7) obj. -56.8345 iterations 10
Cbc0038I Pass  49: suminf.    0.57133 (7) obj. -56.8345 iterations 2
Cbc0038I Pass  50: suminf.    0.57071 (7) obj. -56.8345 iterations 3
Cbc0038I Pass  51: suminf.    1.79057 (7) obj. -56.8345 iterations 10
Cbc0038I Pass  52: suminf.    1.12437 (7) obj. -56.8345 iterations 7
Cbc0038I Pass  53: suminf.    1.67474 (7) obj. -56.8345 iterations 10
Cbc0038I Pass  54: suminf.    0.57133 (7) obj. -56.8345 iterations 2
Cbc0038I Pass  55: suminf.    0.57071 (7) obj. -56.8345 iterations 3
Cbc0038I Pass  56: suminf.    1.79057 (7) obj. -56.8345 iterations 10
Cbc0038I Pass  57: suminf.    1.12437 (7) obj. -56.8345 iterations 7
Cbc0038I Pass  58: suminf.    1.67474 (7) obj. -56.8345 iterations 9
Cbc0038I Pass  59: suminf.    0.57133 (7) obj. -56.8345 iterations 2
Cbc0038I Pass  60: suminf.    0.57071 (7) obj. -56.8345 iterations 3
Cbc0038I Pass  61: suminf.    1.79057 (7) obj. -56.8345 iterations 9
Cbc0038I Pass  62: suminf.    1.12437 (7) obj. -56.8345 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -48.25 - took 0.05 seconds
Cbc0012I Integer solution of -48.25001 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 104 rows 118 columns, reduced to 22 rows 26 columns
Cbc0031I 61 added rows had average density of 33.393443
Cbc0013I At root node, 61 cuts changed objective from -91.171955 to -58.512543 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19427 row cuts average 9.7 elements, 1 column cuts (1 active)  in 0.244 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1968 row cuts average 105.7 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 480 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 813 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 65.5 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 313 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.603 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.25001 best solution, best possible -58.512543 (2.84 seconds)
Cbc0012I Integer solution of -49.41124 found by DiveCoefficient after 5375 iterations and 3 nodes (3.29 seconds)
Cbc0010I After 6 nodes, 7 on tree, -49.41124 best solution, best possible -58.512543 (3.59 seconds)
Cbc0012I Integer solution of -50.6648 found by rounding after 5553 iterations and 7 nodes (3.66 seconds)
Cbc0010I After 19 nodes, 13 on tree, -50.6648 best solution, best possible -58.512543 (4.33 seconds)
Cbc0010I After 35 nodes, 14 on tree, -50.6648 best solution, best possible -58.512543 (5.06 seconds)
Cbc0038I Full problem 104 rows 118 columns, reduced to 9 rows 14 columns
Cbc0001I Search completed - best objective -50.6648, took 7090 iterations and 62 nodes (5.63 seconds)
Cbc0032I Strong branching done 672 times (12013 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 15, 76 variables fixed on reduced cost
Total time (CPU seconds):       3.89   (Wallclock seconds):       5.65

