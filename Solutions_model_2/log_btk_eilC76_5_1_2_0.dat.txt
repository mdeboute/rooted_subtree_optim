Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 0.000101693 - average 7.36902e-07, 10 fixed columns
Coin0506I Presolve 118 (-20) rows, 65 (-10) columns and 358 (-60) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 0.29660135 - largest nonzero change 0 ( 0%) - largest zero change 2.8436704e-05
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Coin0511I After Postsolve, objective 34.674461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Coin0511I After Postsolve, objective 34.674461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.67446135 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.68735
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.78937 iterations 55
Cbc0038I Solution found of 5.78937
Cbc0038I Relaxing continuous gives 5.78937
Cbc0038I Rounding solution of 0.901483 is better than previous of 5.78937

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 0.901483 to -5.26076 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.20222
Cbc0038I Pass   2: suminf.    1.83334 (17) obj. -8.20222 iterations 23
Cbc0038I Pass   3: suminf.    1.50991 (47) obj. -8.20222 iterations 27
Cbc0038I Pass   4: suminf.    0.81896 (4) obj. -8.20222 iterations 46
Cbc0038I Pass   5: suminf.    0.81896 (4) obj. -8.20222 iterations 0
Cbc0038I Pass   6: suminf.    1.20001 (5) obj. -8.20222 iterations 9
Cbc0038I Pass   7: suminf.    1.20001 (5) obj. -8.20222 iterations 1
Cbc0038I Pass   8: suminf.    1.36321 (4) obj. -8.20222 iterations 5
Cbc0038I Pass   9: suminf.    1.36321 (4) obj. -8.20222 iterations 0
Cbc0038I Pass  10: suminf.    0.86550 (3) obj. -8.20222 iterations 2
Cbc0038I Pass  11: suminf.    0.86550 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  12: suminf.    0.82096 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  13: suminf.    0.82096 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  14: suminf.    0.86550 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  15: suminf.    1.56879 (6) obj. -8.20222 iterations 18
Cbc0038I Pass  16: suminf.    1.53965 (7) obj. -8.20222 iterations 5
Cbc0038I Pass  17: suminf.    1.65036 (6) obj. -8.20222 iterations 12
Cbc0038I Pass  18: suminf.    1.53988 (4) obj. -8.20222 iterations 2
Cbc0038I Pass  19: suminf.    1.02805 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  20: suminf.    1.02805 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  21: suminf.    0.96525 (3) obj. -8.20222 iterations 2
Cbc0038I Pass  22: suminf.    0.96525 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  23: suminf.    1.02805 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  24: suminf.    2.10314 (8) obj. -8.20222 iterations 16
Cbc0038I Pass  25: suminf.    0.89070 (5) obj. -8.20222 iterations 15
Cbc0038I Pass  26: suminf.    0.83008 (5) obj. -8.20222 iterations 5
Cbc0038I Pass  27: suminf.    1.40612 (5) obj. -8.20222 iterations 12
Cbc0038I Pass  28: suminf.    1.29821 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  29: suminf.    0.97868 (3) obj. -8.20222 iterations 4
Cbc0038I Pass  30: suminf.    1.29821 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  31: suminf.    1.79026 (9) obj. -8.20222 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 112 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -5.26076 to -7.94305 (0.12 seconds)
Cbc0038I Round again with cutoff of -13.4967
Cbc0038I Pass  31: suminf.    3.28241 (17) obj. -13.4967 iterations 0
Cbc0038I Pass  32: suminf.    1.41644 (7) obj. -13.4967 iterations 23
Cbc0038I Pass  33: suminf.    1.24414 (7) obj. -13.4967 iterations 2
Cbc0038I Pass  34: suminf.    2.22307 (6) obj. -13.4967 iterations 9
Cbc0038I Pass  35: suminf.    1.95530 (5) obj. -13.4967 iterations 2
Cbc0038I Pass  36: suminf.    1.73533 (7) obj. -13.4967 iterations 4
Cbc0038I Pass  37: suminf.    2.87466 (7) obj. -13.4967 iterations 8
Cbc0038I Pass  38: suminf.    1.20132 (6) obj. -13.4967 iterations 10
Cbc0038I Pass  39: suminf.    1.19479 (5) obj. -13.4967 iterations 4
Cbc0038I Pass  40: suminf.    1.90670 (7) obj. -13.4967 iterations 7
Cbc0038I Pass  41: suminf.    1.89287 (6) obj. -13.4967 iterations 1
Cbc0038I Pass  42: suminf.    1.25401 (6) obj. -13.4967 iterations 4
Cbc0038I Pass  43: suminf.    2.17457 (6) obj. -13.4967 iterations 21
Cbc0038I Pass  44: suminf.    1.48663 (5) obj. -13.4967 iterations 10
Cbc0038I Pass  45: suminf.    1.89173 (5) obj. -13.4967 iterations 9
Cbc0038I Pass  46: suminf.    1.84214 (6) obj. -13.4967 iterations 1
Cbc0038I Pass  47: suminf.    2.18304 (6) obj. -13.4967 iterations 2
Cbc0038I Pass  48: suminf.    1.83892 (6) obj. -13.4967 iterations 7
Cbc0038I Pass  49: suminf.    1.82241 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  50: suminf.    1.46736 (4) obj. -13.4967 iterations 5
Cbc0038I Pass  51: suminf.    1.46244 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  52: suminf.    2.13211 (6) obj. -13.4967 iterations 5
Cbc0038I Pass  53: suminf.    2.13211 (6) obj. -13.4967 iterations 0
Cbc0038I Pass  54: suminf.    1.82241 (5) obj. -13.4967 iterations 6
Cbc0038I Pass  55: suminf.    1.82241 (5) obj. -13.4967 iterations 0
Cbc0038I Pass  56: suminf.    1.46736 (4) obj. -13.4967 iterations 5
Cbc0038I Pass  57: suminf.    1.46244 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  58: suminf.    2.13211 (6) obj. -13.4967 iterations 5
Cbc0038I Pass  59: suminf.    2.13211 (6) obj. -13.4967 iterations 0
Cbc0038I Pass  60: suminf.    1.82241 (5) obj. -13.4967 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -7.94305 - took 0.14 seconds
Cbc0012I Integer solution of -7.943045 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0031I 37 added rows had average density of 44.513514
Cbc0013I At root node, 37 cuts changed objective from -34.674461 to -26.497735 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14785 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2031 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.943045 best solution, best possible -26.497735 (1.10 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 52 rows 32 columns
Cbc0012I Integer solution of -8.0483 found by rounding after 12398 iterations and 79 nodes (1.48 seconds)
Cbc0001I Search completed - best objective -8.048299999999998, took 12559 iterations and 86 nodes (1.49 seconds)
Cbc0032I Strong branching done 1032 times (15561 iterations), fathomed 12 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 99 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       1.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 114 (-38) columns and 1851 (-1452) elements
Clp1000I sum of infeasibilities 1.53266e-07 - average 1.47371e-09, 63 fixed columns
Coin0506I Presolve 43 (-61) rows, 51 (-63) columns and 183 (-1668) elements
Clp0006I 0  Obj -6.4531343 Dual inf 65.870024 (51)
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 0.23881684 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -4.615073
Clp0000I Optimal - objective value -4.615073
Coin0511I After Postsolve, objective -4.615073, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.615073 Dual inf 40.0086 (41)
Clp0014I Perturbing problem by 0.001% of 1.5972629 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 54.292957
Clp0000I Optimal - objective value 54.292957
Clp0000I Optimal - objective value 54.292957
Coin0511I After Postsolve, objective 54.292957, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.29295667 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1853 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.577%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.24077
Cbc0038I Pass   1: suminf.    3.15537 (33) obj. -41.9734 iterations 19
Cbc0038I Pass   2: suminf.    3.15537 (33) obj. -41.9734 iterations 1
Cbc0038I Pass   3: suminf.    1.81099 (22) obj. -21.7917 iterations 11
Cbc0038I Solution found of 6.67794
Cbc0038I Rounding solution of 4.05007 is better than previous of 6.67794

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 4.05007 to 3.29824 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.85065
Cbc0038I Pass   4: suminf.    3.15537 (33) obj. -41.9734 iterations 0
Cbc0038I Pass   5: suminf.    3.15537 (33) obj. -41.9734 iterations 1
Cbc0038I Pass   6: suminf.    1.92726 (23) obj. -22.6755 iterations 10
Cbc0038I Pass   7: suminf.    0.86501 (3) obj. -1.85065 iterations 28
Cbc0038I Pass   8: suminf.    0.56366 (4) obj. -5.15712 iterations 2
Cbc0038I Pass   9: suminf.    1.02370 (4) obj. -1.85065 iterations 7
Cbc0038I Pass  10: suminf.    0.47275 (3) obj. -4.24803 iterations 5
Cbc0038I Pass  11: suminf.    1.42384 (14) obj. -10.3652 iterations 25
Cbc0038I Pass  12: suminf.    1.25474 (10) obj. -9.87997 iterations 6
Cbc0038I Pass  13: suminf.    0.56994 (3) obj. -1.85065 iterations 15
Cbc0038I Pass  14: suminf.    0.47392 (4) obj. -1.85065 iterations 2
Cbc0038I Pass  15: suminf.    0.53898 (3) obj. -1.85065 iterations 5
Cbc0038I Pass  16: suminf.    0.47275 (3) obj. -2.24803 iterations 1
Cbc0038I Pass  17: suminf.    0.60208 (5) obj. -1.85065 iterations 6
Cbc0038I Pass  18: suminf.    3.35160 (16) obj. -1.85065 iterations 41
Cbc0038I Pass  19: suminf.    2.02501 (15) obj. -1.85065 iterations 14
Cbc0038I Pass  20: suminf.    2.02501 (15) obj. -1.85065 iterations 0
Cbc0038I Pass  21: suminf.    0.65651 (5) obj. -1.85065 iterations 26
Cbc0038I Pass  22: suminf.    0.61382 (4) obj. -2.3577 iterations 5
Cbc0038I Pass  23: suminf.    1.48841 (7) obj. -1.85065 iterations 17
Cbc0038I Pass  24: suminf.    1.48841 (7) obj. -1.85065 iterations 2
Cbc0038I Pass  25: suminf.    2.23254 (6) obj. -1.85065 iterations 8
Cbc0038I Pass  26: suminf.    1.91821 (7) obj. -1.85065 iterations 9
Cbc0038I Pass  27: suminf.    2.35638 (6) obj. -1.85065 iterations 13
Cbc0038I Pass  28: suminf.    1.93469 (7) obj. -1.85065 iterations 8
Cbc0038I Pass  29: suminf.    1.81592 (14) obj. -9.02347 iterations 30
Cbc0038I Pass  30: suminf.    1.31349 (11) obj. -7.62804 iterations 5
Cbc0038I Pass  31: suminf.    0.97263 (4) obj. -1.85065 iterations 27
Cbc0038I Pass  32: suminf.    0.97263 (4) obj. -1.85065 iterations 3
Cbc0038I Pass  33: suminf.    0.99954 (4) obj. -1.85065 iterations 8
Cbc0038I Rounding solution of 1.04868 is better than previous of 3.29824

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 43 rows 52 columns
Cbc0038I Mini branch and bound improved solution from 1.04868 to -7.44082 (0.08 seconds)
Cbc0038I Round again with cutoff of -15.5907
Cbc0038I Pass  33: suminf.    3.15537 (33) obj. -41.9734 iterations 0
Cbc0038I Pass  34: suminf.    3.15537 (33) obj. -41.9734 iterations 1
Cbc0038I Pass  35: suminf.    1.24179 (15) obj. -15.5907 iterations 21
Cbc0038I Pass  36: suminf.    0.98134 (14) obj. -16.3316 iterations 2
Cbc0038I Pass  37: suminf.    1.41318 (9) obj. -15.5907 iterations 27
Cbc0038I Pass  38: suminf.    1.41318 (9) obj. -15.5907 iterations 1
Cbc0038I Pass  39: suminf.    1.29656 (9) obj. -15.5907 iterations 14
Cbc0038I Pass  40: suminf.    1.09280 (8) obj. -15.6567 iterations 10
Cbc0038I Pass  41: suminf.    1.29656 (9) obj. -15.5907 iterations 12
Cbc0038I Pass  42: suminf.    2.95173 (16) obj. -15.5907 iterations 23
Cbc0038I Pass  43: suminf.    1.39545 (13) obj. -15.5907 iterations 10
Cbc0038I Pass  44: suminf.    1.16384 (9) obj. -15.5907 iterations 16
Cbc0038I Pass  45: suminf.    1.16384 (9) obj. -15.5907 iterations 0
Cbc0038I Pass  46: suminf.    1.16340 (8) obj. -15.5907 iterations 13
Cbc0038I Pass  47: suminf.    1.16340 (8) obj. -15.5907 iterations 7
Cbc0038I Pass  48: suminf.    1.17448 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  49: suminf.    1.17818 (10) obj. -15.5907 iterations 8
Cbc0038I Pass  50: suminf.    2.39064 (10) obj. -15.5907 iterations 13
Cbc0038I Pass  51: suminf.    0.82709 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  52: suminf.    0.82709 (8) obj. -15.5907 iterations 6
Cbc0038I Pass  53: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I Pass  54: suminf.    1.02777 (10) obj. -15.5907 iterations 2
Cbc0038I Pass  55: suminf.    0.82463 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  56: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I Pass  57: suminf.    0.82709 (8) obj. -15.5907 iterations 4
Cbc0038I Pass  58: suminf.    0.82709 (8) obj. -15.5907 iterations 6
Cbc0038I Pass  59: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I Pass  60: suminf.    1.02777 (10) obj. -15.5907 iterations 2
Cbc0038I Pass  61: suminf.    0.82463 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  62: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.44082 - took 0.08 seconds
Cbc0012I Integer solution of -7.44082 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 30 rows 34 columns
Cbc0031I 58 added rows had average density of 37.172414
Cbc0013I At root node, 58 cuts changed objective from -48.189786 to -12.546868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14020 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1305 row cuts average 106.3 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 349 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1436 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 154 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.612 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.44082 best solution, best possible -12.546868 (2.42 seconds)
Cbc0012I Integer solution of -7.943045 found by DiveCoefficient after 5896 iterations and 4 nodes (2.94 seconds)
Cbc0010I After 10 nodes, 3 on tree, -7.943045 best solution, best possible -12.376826 (3.12 seconds)
Cbc0012I Integer solution of -8.0483 found by rounding after 6050 iterations and 15 nodes (3.27 seconds)
Cbc0010I After 25 nodes, 6 on tree, -8.0483 best solution, best possible -12.376826 (3.83 seconds)
Cbc0001I Search completed - best objective -8.048299999999998, took 6847 iterations and 34 nodes (3.97 seconds)
Cbc0032I Strong branching done 536 times (10041 iterations), fathomed 9 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 49 variables fixed on reduced cost
Total time (CPU seconds):       2.81   (Wallclock seconds):       3.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 0.000101693 - average 7.36902e-07, 10 fixed columns
Coin0506I Presolve 118 (-20) rows, 65 (-10) columns and 358 (-60) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 0.29660135 - largest nonzero change 0 ( 0%) - largest zero change 2.8436704e-05
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Coin0511I After Postsolve, objective 34.674461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Clp0000I Optimal - objective value 34.674461
Coin0511I After Postsolve, objective 34.674461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.67446135 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.68735
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.78937 iterations 55
Cbc0038I Solution found of 5.78937
Cbc0038I Relaxing continuous gives 5.78937
Cbc0038I Rounding solution of 0.901483 is better than previous of 5.78937

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 81 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 0.901483 to -5.26076 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.20222
Cbc0038I Pass   2: suminf.    1.83334 (17) obj. -8.20222 iterations 23
Cbc0038I Pass   3: suminf.    1.50991 (47) obj. -8.20222 iterations 27
Cbc0038I Pass   4: suminf.    0.81896 (4) obj. -8.20222 iterations 46
Cbc0038I Pass   5: suminf.    0.81896 (4) obj. -8.20222 iterations 0
Cbc0038I Pass   6: suminf.    1.20001 (5) obj. -8.20222 iterations 9
Cbc0038I Pass   7: suminf.    1.20001 (5) obj. -8.20222 iterations 1
Cbc0038I Pass   8: suminf.    1.36321 (4) obj. -8.20222 iterations 5
Cbc0038I Pass   9: suminf.    1.36321 (4) obj. -8.20222 iterations 0
Cbc0038I Pass  10: suminf.    0.86550 (3) obj. -8.20222 iterations 2
Cbc0038I Pass  11: suminf.    0.86550 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  12: suminf.    0.82096 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  13: suminf.    0.82096 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  14: suminf.    0.86550 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  15: suminf.    1.56879 (6) obj. -8.20222 iterations 18
Cbc0038I Pass  16: suminf.    1.53965 (7) obj. -8.20222 iterations 5
Cbc0038I Pass  17: suminf.    1.65036 (6) obj. -8.20222 iterations 12
Cbc0038I Pass  18: suminf.    1.53988 (4) obj. -8.20222 iterations 2
Cbc0038I Pass  19: suminf.    1.02805 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  20: suminf.    1.02805 (3) obj. -8.20222 iterations 0
Cbc0038I Pass  21: suminf.    0.96525 (3) obj. -8.20222 iterations 2
Cbc0038I Pass  22: suminf.    0.96525 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  23: suminf.    1.02805 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  24: suminf.    2.10314 (8) obj. -8.20222 iterations 16
Cbc0038I Pass  25: suminf.    0.89070 (5) obj. -8.20222 iterations 15
Cbc0038I Pass  26: suminf.    0.83008 (5) obj. -8.20222 iterations 5
Cbc0038I Pass  27: suminf.    1.40612 (5) obj. -8.20222 iterations 12
Cbc0038I Pass  28: suminf.    1.29821 (3) obj. -8.20222 iterations 1
Cbc0038I Pass  29: suminf.    0.97868 (3) obj. -8.20222 iterations 4
Cbc0038I Pass  30: suminf.    1.29821 (3) obj. -8.20222 iterations 3
Cbc0038I Pass  31: suminf.    1.79026 (9) obj. -8.20222 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 112 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -5.26076 to -7.94305 (0.15 seconds)
Cbc0038I Round again with cutoff of -13.4967
Cbc0038I Pass  31: suminf.    3.28241 (17) obj. -13.4967 iterations 0
Cbc0038I Pass  32: suminf.    1.41644 (7) obj. -13.4967 iterations 23
Cbc0038I Pass  33: suminf.    1.24414 (7) obj. -13.4967 iterations 2
Cbc0038I Pass  34: suminf.    2.22307 (6) obj. -13.4967 iterations 9
Cbc0038I Pass  35: suminf.    1.95530 (5) obj. -13.4967 iterations 2
Cbc0038I Pass  36: suminf.    1.73533 (7) obj. -13.4967 iterations 4
Cbc0038I Pass  37: suminf.    2.87466 (7) obj. -13.4967 iterations 8
Cbc0038I Pass  38: suminf.    1.20132 (6) obj. -13.4967 iterations 10
Cbc0038I Pass  39: suminf.    1.19479 (5) obj. -13.4967 iterations 4
Cbc0038I Pass  40: suminf.    1.90670 (7) obj. -13.4967 iterations 7
Cbc0038I Pass  41: suminf.    1.89287 (6) obj. -13.4967 iterations 1
Cbc0038I Pass  42: suminf.    1.25401 (6) obj. -13.4967 iterations 4
Cbc0038I Pass  43: suminf.    2.17457 (6) obj. -13.4967 iterations 21
Cbc0038I Pass  44: suminf.    1.48663 (5) obj. -13.4967 iterations 10
Cbc0038I Pass  45: suminf.    1.89173 (5) obj. -13.4967 iterations 9
Cbc0038I Pass  46: suminf.    1.84214 (6) obj. -13.4967 iterations 1
Cbc0038I Pass  47: suminf.    2.18304 (6) obj. -13.4967 iterations 2
Cbc0038I Pass  48: suminf.    1.83892 (6) obj. -13.4967 iterations 7
Cbc0038I Pass  49: suminf.    1.82241 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  50: suminf.    1.46736 (4) obj. -13.4967 iterations 5
Cbc0038I Pass  51: suminf.    1.46244 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  52: suminf.    2.13211 (6) obj. -13.4967 iterations 5
Cbc0038I Pass  53: suminf.    2.13211 (6) obj. -13.4967 iterations 0
Cbc0038I Pass  54: suminf.    1.82241 (5) obj. -13.4967 iterations 6
Cbc0038I Pass  55: suminf.    1.82241 (5) obj. -13.4967 iterations 0
Cbc0038I Pass  56: suminf.    1.46736 (4) obj. -13.4967 iterations 5
Cbc0038I Pass  57: suminf.    1.46244 (5) obj. -13.4967 iterations 1
Cbc0038I Pass  58: suminf.    2.13211 (6) obj. -13.4967 iterations 5
Cbc0038I Pass  59: suminf.    2.13211 (6) obj. -13.4967 iterations 0
Cbc0038I Pass  60: suminf.    1.82241 (5) obj. -13.4967 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -7.94305 - took 0.18 seconds
Cbc0012I Integer solution of -7.943045 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0031I 37 added rows had average density of 44.513514
Cbc0013I At root node, 37 cuts changed objective from -34.674461 to -26.497735 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14785 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2031 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.943045 best solution, best possible -26.497735 (1.26 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 52 rows 32 columns
Cbc0012I Integer solution of -8.0483 found by rounding after 12398 iterations and 79 nodes (1.72 seconds)
Cbc0001I Search completed - best objective -8.048299999999998, took 12559 iterations and 86 nodes (1.73 seconds)
Cbc0032I Strong branching done 1032 times (15561 iterations), fathomed 12 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 99 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       1.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 114 (-39) columns and 1851 (-1453) elements
Clp1000I sum of infeasibilities 1.53266e-07 - average 1.47371e-09, 63 fixed columns
Coin0506I Presolve 43 (-61) rows, 51 (-63) columns and 183 (-1668) elements
Clp0006I 0  Obj -6.4531343 Dual inf 65.870024 (51)
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 0.23881684 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -4.615073
Clp0000I Optimal - objective value -4.615073
Coin0511I After Postsolve, objective -4.615073, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.615073 Dual inf 40.0086 (41)
Clp0014I Perturbing problem by 0.001% of 1.5972629 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 54.292957
Clp0000I Optimal - objective value 54.292957
Clp0000I Optimal - objective value 54.292957
Coin0511I After Postsolve, objective 54.292957, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.29295667 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1853 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.577%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.24077
Cbc0038I Pass   1: suminf.    3.15537 (33) obj. -41.9734 iterations 19
Cbc0038I Pass   2: suminf.    3.15537 (33) obj. -41.9734 iterations 1
Cbc0038I Pass   3: suminf.    1.81099 (22) obj. -21.7917 iterations 11
Cbc0038I Solution found of 6.67794
Cbc0038I Rounding solution of 4.05007 is better than previous of 6.67794

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 4.05007 to 3.29824 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.85065
Cbc0038I Pass   4: suminf.    3.15537 (33) obj. -41.9734 iterations 0
Cbc0038I Pass   5: suminf.    3.15537 (33) obj. -41.9734 iterations 1
Cbc0038I Pass   6: suminf.    1.92726 (23) obj. -22.6755 iterations 10
Cbc0038I Pass   7: suminf.    0.86501 (3) obj. -1.85065 iterations 28
Cbc0038I Pass   8: suminf.    0.56366 (4) obj. -5.15712 iterations 2
Cbc0038I Pass   9: suminf.    1.02370 (4) obj. -1.85065 iterations 7
Cbc0038I Pass  10: suminf.    0.47275 (3) obj. -4.24803 iterations 5
Cbc0038I Pass  11: suminf.    1.42384 (14) obj. -10.3652 iterations 25
Cbc0038I Pass  12: suminf.    1.25474 (10) obj. -9.87997 iterations 6
Cbc0038I Pass  13: suminf.    0.56994 (3) obj. -1.85065 iterations 15
Cbc0038I Pass  14: suminf.    0.47392 (4) obj. -1.85065 iterations 2
Cbc0038I Pass  15: suminf.    0.53898 (3) obj. -1.85065 iterations 5
Cbc0038I Pass  16: suminf.    0.47275 (3) obj. -2.24803 iterations 1
Cbc0038I Pass  17: suminf.    0.60208 (5) obj. -1.85065 iterations 6
Cbc0038I Pass  18: suminf.    3.35160 (16) obj. -1.85065 iterations 41
Cbc0038I Pass  19: suminf.    2.02501 (15) obj. -1.85065 iterations 14
Cbc0038I Pass  20: suminf.    2.02501 (15) obj. -1.85065 iterations 0
Cbc0038I Pass  21: suminf.    0.65651 (5) obj. -1.85065 iterations 26
Cbc0038I Pass  22: suminf.    0.61382 (4) obj. -2.3577 iterations 5
Cbc0038I Pass  23: suminf.    1.48841 (7) obj. -1.85065 iterations 17
Cbc0038I Pass  24: suminf.    1.48841 (7) obj. -1.85065 iterations 2
Cbc0038I Pass  25: suminf.    2.23254 (6) obj. -1.85065 iterations 8
Cbc0038I Pass  26: suminf.    1.91821 (7) obj. -1.85065 iterations 9
Cbc0038I Pass  27: suminf.    2.35638 (6) obj. -1.85065 iterations 13
Cbc0038I Pass  28: suminf.    1.93469 (7) obj. -1.85065 iterations 8
Cbc0038I Pass  29: suminf.    1.81592 (14) obj. -9.02347 iterations 30
Cbc0038I Pass  30: suminf.    1.31349 (11) obj. -7.62804 iterations 5
Cbc0038I Pass  31: suminf.    0.97263 (4) obj. -1.85065 iterations 27
Cbc0038I Pass  32: suminf.    0.97263 (4) obj. -1.85065 iterations 3
Cbc0038I Pass  33: suminf.    0.99954 (4) obj. -1.85065 iterations 8
Cbc0038I Rounding solution of 1.04868 is better than previous of 3.29824

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 43 rows 52 columns
Cbc0038I Mini branch and bound improved solution from 1.04868 to -7.44082 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.5907
Cbc0038I Pass  33: suminf.    3.15537 (33) obj. -41.9734 iterations 0
Cbc0038I Pass  34: suminf.    3.15537 (33) obj. -41.9734 iterations 1
Cbc0038I Pass  35: suminf.    1.24179 (15) obj. -15.5907 iterations 21
Cbc0038I Pass  36: suminf.    0.98134 (14) obj. -16.3316 iterations 2
Cbc0038I Pass  37: suminf.    1.41318 (9) obj. -15.5907 iterations 27
Cbc0038I Pass  38: suminf.    1.41318 (9) obj. -15.5907 iterations 1
Cbc0038I Pass  39: suminf.    1.29656 (9) obj. -15.5907 iterations 14
Cbc0038I Pass  40: suminf.    1.09280 (8) obj. -15.6567 iterations 10
Cbc0038I Pass  41: suminf.    1.29656 (9) obj. -15.5907 iterations 12
Cbc0038I Pass  42: suminf.    2.95173 (16) obj. -15.5907 iterations 23
Cbc0038I Pass  43: suminf.    1.39545 (13) obj. -15.5907 iterations 10
Cbc0038I Pass  44: suminf.    1.16384 (9) obj. -15.5907 iterations 16
Cbc0038I Pass  45: suminf.    1.16384 (9) obj. -15.5907 iterations 0
Cbc0038I Pass  46: suminf.    1.16340 (8) obj. -15.5907 iterations 13
Cbc0038I Pass  47: suminf.    1.16340 (8) obj. -15.5907 iterations 7
Cbc0038I Pass  48: suminf.    1.17448 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  49: suminf.    1.17818 (10) obj. -15.5907 iterations 8
Cbc0038I Pass  50: suminf.    2.39064 (10) obj. -15.5907 iterations 13
Cbc0038I Pass  51: suminf.    0.82709 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  52: suminf.    0.82709 (8) obj. -15.5907 iterations 6
Cbc0038I Pass  53: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I Pass  54: suminf.    1.02777 (10) obj. -15.5907 iterations 2
Cbc0038I Pass  55: suminf.    0.82463 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  56: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I Pass  57: suminf.    0.82709 (8) obj. -15.5907 iterations 4
Cbc0038I Pass  58: suminf.    0.82709 (8) obj. -15.5907 iterations 6
Cbc0038I Pass  59: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I Pass  60: suminf.    1.02777 (10) obj. -15.5907 iterations 2
Cbc0038I Pass  61: suminf.    0.82463 (8) obj. -15.5907 iterations 9
Cbc0038I Pass  62: suminf.    2.39064 (10) obj. -15.5907 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.44082 - took 0.08 seconds
Cbc0012I Integer solution of -7.44082 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 30 rows 34 columns
Cbc0031I 58 added rows had average density of 37.172414
Cbc0013I At root node, 58 cuts changed objective from -48.189786 to -12.546868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14020 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1305 row cuts average 106.3 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 349 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1436 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 154 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.684 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.44082 best solution, best possible -12.546868 (2.85 seconds)
Cbc0012I Integer solution of -7.943045 found by DiveCoefficient after 5896 iterations and 4 nodes (3.44 seconds)
Cbc0010I After 8 nodes, 4 on tree, -7.943045 best solution, best possible -12.376826 (3.57 seconds)
Cbc0012I Integer solution of -8.0483 found by rounding after 6050 iterations and 15 nodes (3.83 seconds)
Cbc0010I After 23 nodes, 4 on tree, -8.0483 best solution, best possible -12.376826 (4.29 seconds)
Cbc0001I Search completed - best objective -8.048299999999998, took 6847 iterations and 34 nodes (4.61 seconds)
Cbc0032I Strong branching done 536 times (10041 iterations), fathomed 9 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 49 variables fixed on reduced cost
Total time (CPU seconds):       3.15   (Wallclock seconds):       4.62

