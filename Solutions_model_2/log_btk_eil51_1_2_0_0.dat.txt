Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-20) rows, 51 (-2) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 3.11896e-05 - average 3.66936e-07, 5 fixed columns
Coin0506I Presolve 76 (-9) rows, 46 (-5) columns and 236 (-28) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Coin0511I After Postsolve, objective 34.46149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Coin0511I After Postsolve, objective 34.46149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.46149023 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 51 columns (50 integer (50 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.23463
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.30849 iterations 39
Cbc0038I Solution found of 6.30849
Cbc0038I Relaxing continuous gives 6.30849
Cbc0038I Rounding solution of 4.33699 is better than previous of 6.30849

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 4.33699 to -9.50585 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.0015
Cbc0038I Pass   2: suminf.    2.32908 (8) obj. -12.0015 iterations 7
Cbc0038I Pass   3: suminf.    2.32908 (8) obj. -12.0015 iterations 0
Cbc0038I Pass   4: suminf.    1.10687 (4) obj. -12.0015 iterations 7
Cbc0038I Pass   5: suminf.    1.10158 (4) obj. -12.0015 iterations 2
Cbc0038I Pass   6: suminf.    0.89674 (3) obj. -12.0015 iterations 6
Cbc0038I Pass   7: suminf.    0.37575 (3) obj. -12.0015 iterations 1
Cbc0038I Pass   8: suminf.    0.32719 (4) obj. -12.0015 iterations 2
Cbc0038I Pass   9: suminf.    1.39219 (5) obj. -12.0015 iterations 6
Cbc0038I Pass  10: suminf.    1.12472 (4) obj. -12.0015 iterations 2
Cbc0038I Pass  11: suminf.    1.12472 (4) obj. -12.0015 iterations 0
Cbc0038I Pass  12: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  13: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  14: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  15: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  16: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  17: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  18: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  19: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  20: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  21: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  22: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  23: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  24: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  25: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  26: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  27: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  28: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  29: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  30: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  31: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -9.50585 - took 0.06 seconds
Cbc0012I Integer solution of -9.50585 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0031I 23 added rows had average density of 32.956522
Cbc0013I At root node, 23 cuts changed objective from -34.46149 to -23.719546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7875 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1591 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 40 nodes, 1 on tree, -9.50585 best solution, best possible -14.944579 (0.69 seconds)
Cbc0012I Integer solution of -9.62741 found by rounding after 7431 iterations and 41 nodes (0.69 seconds)
Cbc0001I Search completed - best objective -9.627409999999998, took 7532 iterations and 46 nodes (0.70 seconds)
Cbc0032I Strong branching done 538 times (10446 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 14, 105 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 84 (-18) columns and 1063 (-515) elements
Clp1000I sum of infeasibilities 3.0944e-08 - average 4.48464e-10, 15 fixed columns
Coin0506I Presolve 56 (-13) rows, 67 (-17) columns and 708 (-355) elements
Clp0006I 0  Obj 39.858861 Dual inf 1.5249943 (67)
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 4.3024701 - largest nonzero change 2.0312138e-05 ( 0.0009598595%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 47.838622
Clp0000I Optimal - objective value 47.838622
Coin0511I After Postsolve, objective 47.838622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.838622
Clp0000I Optimal - objective value 47.838622
Clp0000I Optimal - objective value 47.838622
Clp0000I Optimal - objective value 47.838622
Coin0511I After Postsolve, objective 47.838622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.83862221 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 84 columns (84 integer (84 of which binary)) and 1065 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.40651
Cbc0038I Pass   1: suminf.    1.68345 (22) obj. -31.9534 iterations 10
Cbc0038I Pass   2: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass   3: suminf.    0.26668 (6) obj. -4.84697 iterations 16
Cbc0038I Solution found of 0.88635
Cbc0038I Rounding solution of 0.784758 is better than previous of 0.88635

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 0.784758 to -1.23494 (0.02 seconds)
Cbc0038I Round again with cutoff of -5.06065
Cbc0038I Pass   4: suminf.    1.68345 (22) obj. -31.9534 iterations 0
Cbc0038I Pass   5: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass   6: suminf.    0.33305 (6) obj. -5.06065 iterations 18
Cbc0038I Pass   7: suminf.    0.34464 (2) obj. -5.06065 iterations 12
Cbc0038I Pass   8: suminf.    0.19062 (2) obj. -5.06065 iterations 1
Cbc0038I Pass   9: suminf.    1.06823 (8) obj. -7.71186 iterations 22
Cbc0038I Pass  10: suminf.    0.80011 (7) obj. -7.6618 iterations 3
Cbc0038I Pass  11: suminf.    0.98775 (4) obj. -5.06065 iterations 9
Cbc0038I Pass  12: suminf.    0.98775 (4) obj. -5.06065 iterations 0
Cbc0038I Pass  13: suminf.    1.13893 (5) obj. -5.06065 iterations 4
Cbc0038I Pass  14: suminf.    1.11216 (5) obj. -5.06065 iterations 7
Cbc0038I Pass  15: suminf.    1.24066 (4) obj. -5.06065 iterations 4
Cbc0038I Pass  16: suminf.    0.77225 (3) obj. -5.06065 iterations 3
Cbc0038I Pass  17: suminf.    0.66192 (3) obj. -6.29123 iterations 1
Cbc0038I Pass  18: suminf.    0.96956 (3) obj. -5.06065 iterations 2
Cbc0038I Pass  19: suminf.    0.86057 (6) obj. -5.06065 iterations 23
Cbc0038I Pass  20: suminf.    0.83626 (8) obj. -5.06065 iterations 6
Cbc0038I Pass  21: suminf.    1.41148 (4) obj. -5.06065 iterations 9
Cbc0038I Pass  22: suminf.    1.41148 (4) obj. -5.06065 iterations 1
Cbc0038I Pass  23: suminf.    1.15930 (5) obj. -5.06065 iterations 2
Cbc0038I Pass  24: suminf.    1.15930 (5) obj. -5.06065 iterations 0
Cbc0038I Pass  25: suminf.    1.41148 (4) obj. -5.06065 iterations 7
Cbc0038I Pass  26: suminf.    2.57775 (12) obj. -5.06065 iterations 27
Cbc0038I Pass  27: suminf.    2.14605 (12) obj. -5.06065 iterations 9
Cbc0038I Pass  28: suminf.    1.30103 (7) obj. -5.06065 iterations 15
Cbc0038I Pass  29: suminf.    1.30103 (7) obj. -5.06065 iterations 0
Cbc0038I Pass  30: suminf.    1.11929 (5) obj. -5.06065 iterations 10
Cbc0038I Pass  31: suminf.    0.82238 (4) obj. -5.94518 iterations 4
Cbc0038I Pass  32: suminf.    1.19701 (6) obj. -5.06065 iterations 6
Cbc0038I Pass  33: suminf.    1.36117 (9) obj. -5.06065 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -1.23494 to -3.98876 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.9468
Cbc0038I Pass  33: suminf.    1.68345 (22) obj. -31.9534 iterations 0
Cbc0038I Pass  34: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass  35: suminf.    0.48282 (7) obj. -11.9468 iterations 25
Cbc0038I Pass  36: suminf.    0.45666 (6) obj. -11.9468 iterations 2
Cbc0038I Pass  37: suminf.    0.87333 (7) obj. -11.9468 iterations 17
Cbc0038I Pass  38: suminf.    0.87333 (7) obj. -11.9468 iterations 0
Cbc0038I Pass  39: suminf.    1.18627 (6) obj. -11.9468 iterations 12
Cbc0038I Pass  40: suminf.    0.54689 (4) obj. -12.6272 iterations 12
Cbc0038I Pass  41: suminf.    0.77371 (4) obj. -11.9468 iterations 3
Cbc0038I Pass  42: suminf.    1.81495 (8) obj. -11.9468 iterations 23
Cbc0038I Pass  43: suminf.    1.40717 (9) obj. -13.6043 iterations 6
Cbc0038I Pass  44: suminf.    0.98213 (8) obj. -11.9468 iterations 4
Cbc0038I Pass  45: suminf.    1.55828 (8) obj. -11.9468 iterations 5
Cbc0038I Pass  46: suminf.    1.10959 (7) obj. -11.9468 iterations 2
Cbc0038I Pass  47: suminf.    1.92593 (7) obj. -11.9468 iterations 3
Cbc0038I Pass  48: suminf.    1.38724 (9) obj. -11.9468 iterations 4
Cbc0038I Pass  49: suminf.    1.55828 (8) obj. -11.9468 iterations 4
Cbc0038I Pass  50: suminf.    1.96370 (11) obj. -11.9468 iterations 16
Cbc0038I Pass  51: suminf.    1.94241 (12) obj. -11.9468 iterations 8
Cbc0038I Pass  52: suminf.    1.38927 (8) obj. -11.9468 iterations 11
Cbc0038I Pass  53: suminf.    1.38927 (8) obj. -11.9468 iterations 0
Cbc0038I Pass  54: suminf.    2.21029 (8) obj. -11.9468 iterations 5
Cbc0038I Pass  55: suminf.    1.78009 (8) obj. -11.9468 iterations 3
Cbc0038I Pass  56: suminf.    1.78009 (8) obj. -11.9468 iterations 0
Cbc0038I Pass  57: suminf.    1.86873 (8) obj. -11.9468 iterations 8
Cbc0038I Pass  58: suminf.    1.38927 (8) obj. -11.9468 iterations 6
Cbc0038I Pass  59: suminf.    1.38927 (8) obj. -11.9468 iterations 1
Cbc0038I Pass  60: suminf.    2.21029 (8) obj. -11.9468 iterations 5
Cbc0038I Pass  61: suminf.    1.78009 (8) obj. -11.9468 iterations 3
Cbc0038I Pass  62: suminf.    1.78009 (8) obj. -11.9468 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -3.98876 to -9.16177 (0.06 seconds)
Cbc0038I Round again with cutoff of -20.2101
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.68345 (22) obj. -31.9534 iterations 0
Cbc0038I Pass  63: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass  64: suminf.    1.43784 (12) obj. -20.2101 iterations 24
Cbc0038I Pass  65: suminf.    1.43784 (12) obj. -20.2101 iterations 0
Cbc0038I Pass  66: suminf.    1.04790 (9) obj. -20.2101 iterations 15
Cbc0038I Pass  67: suminf.    0.81465 (7) obj. -20.2101 iterations 7
Cbc0038I Pass  68: suminf.    0.91472 (8) obj. -20.2101 iterations 8
Cbc0038I Pass  69: suminf.    2.73217 (18) obj. -20.2101 iterations 14
Cbc0038I Pass  70: suminf.    1.24285 (12) obj. -20.2101 iterations 4
Cbc0038I Pass  71: suminf.    1.24285 (12) obj. -20.2101 iterations 1
Cbc0038I Pass  72: suminf.    1.51283 (10) obj. -20.2101 iterations 16
Cbc0038I Pass  73: suminf.    0.81465 (7) obj. -20.2101 iterations 11
Cbc0038I Pass  74: suminf.    0.91472 (8) obj. -20.2101 iterations 8
Cbc0038I Pass  75: suminf.    1.39704 (12) obj. -20.2101 iterations 23
Cbc0038I Pass  76: suminf.    1.25184 (11) obj. -20.2101 iterations 7
Cbc0038I Pass  77: suminf.    1.22889 (9) obj. -20.2101 iterations 12
Cbc0038I Pass  78: suminf.    1.21990 (10) obj. -20.2101 iterations 5
Cbc0038I Pass  79: suminf.    2.47155 (17) obj. -20.2101 iterations 14
Cbc0038I Pass  80: suminf.    1.95855 (16) obj. -20.2101 iterations 3
Cbc0038I Pass  81: suminf.    1.74593 (10) obj. -20.2101 iterations 15
Cbc0038I Pass  82: suminf.    1.59643 (10) obj. -20.2101 iterations 6
Cbc0038I Pass  83: suminf.    2.27743 (11) obj. -20.2101 iterations 8
Cbc0038I Pass  84: suminf.    1.89262 (12) obj. -20.2101 iterations 2
Cbc0038I Pass  85: suminf.    2.27743 (11) obj. -20.2101 iterations 6
Cbc0038I Pass  86: suminf.    2.42629 (12) obj. -20.2101 iterations 12
Cbc0038I Pass  87: suminf.    1.83116 (10) obj. -20.2101 iterations 9
Cbc0038I Pass  88: suminf.    1.71175 (11) obj. -20.2101 iterations 3
Cbc0038I Pass  89: suminf.    1.58683 (10) obj. -20.2101 iterations 12
Cbc0038I Pass  90: suminf.    1.58683 (10) obj. -20.2101 iterations 1
Cbc0038I Pass  91: suminf.    2.04399 (12) obj. -20.2101 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 27 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -9.16177 - took 0.06 seconds
Cbc0012I Integer solution of -9.16177 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 69 rows 84 columns, reduced to 10 rows 12 columns
Cbc0031I 39 added rows had average density of 7.2307692
Cbc0013I At root node, 39 cuts changed objective from -39.491177 to -10.438943 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 2629 row cuts average 6.7 elements, 13 column cuts (13 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 301 row cuts average 64.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 219 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 218 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.203 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.16177 best solution, best possible -10.418073 (0.63 seconds)
Cbc0016I Integer solution of -9.62741 found by strong branching after 1048 iterations and 1 nodes (0.78 seconds)
Cbc0001I Search completed - best objective -9.627409999999998, took 1153 iterations and 8 nodes (1.01 seconds)
Cbc0032I Strong branching done 98 times (857 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.66   (Wallclock seconds):       1.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-20) rows, 51 (-2) columns and 264 (-39) elements
Clp1000I sum of infeasibilities 3.11896e-05 - average 3.66936e-07, 5 fixed columns
Coin0506I Presolve 76 (-9) rows, 46 (-5) columns and 236 (-28) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Coin0511I After Postsolve, objective 34.46149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Clp0000I Optimal - objective value 34.46149
Coin0511I After Postsolve, objective 34.46149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.46149023 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 51 columns (50 integer (50 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.23463
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.30849 iterations 39
Cbc0038I Solution found of 6.30849
Cbc0038I Relaxing continuous gives 6.30849
Cbc0038I Rounding solution of 4.33699 is better than previous of 6.30849

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 4.33699 to -9.50585 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.0015
Cbc0038I Pass   2: suminf.    2.32908 (8) obj. -12.0015 iterations 7
Cbc0038I Pass   3: suminf.    2.32908 (8) obj. -12.0015 iterations 0
Cbc0038I Pass   4: suminf.    1.10687 (4) obj. -12.0015 iterations 7
Cbc0038I Pass   5: suminf.    1.10158 (4) obj. -12.0015 iterations 2
Cbc0038I Pass   6: suminf.    0.89674 (3) obj. -12.0015 iterations 6
Cbc0038I Pass   7: suminf.    0.37575 (3) obj. -12.0015 iterations 1
Cbc0038I Pass   8: suminf.    0.32719 (4) obj. -12.0015 iterations 2
Cbc0038I Pass   9: suminf.    1.39219 (5) obj. -12.0015 iterations 6
Cbc0038I Pass  10: suminf.    1.12472 (4) obj. -12.0015 iterations 2
Cbc0038I Pass  11: suminf.    1.12472 (4) obj. -12.0015 iterations 0
Cbc0038I Pass  12: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  13: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  14: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  15: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  16: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  17: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  18: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  19: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  20: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  21: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  22: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  23: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  24: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  25: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  26: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I Pass  27: suminf.    0.74885 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  28: suminf.    0.74885 (3) obj. -12.0015 iterations 0
Cbc0038I Pass  29: suminf.    1.29736 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  30: suminf.    0.66612 (3) obj. -12.0015 iterations 2
Cbc0038I Pass  31: suminf.    0.66612 (3) obj. -12.0015 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -9.50585 - took 0.07 seconds
Cbc0012I Integer solution of -9.50585 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 85 rows 51 columns, reduced to 57 rows 36 columns
Cbc0031I 23 added rows had average density of 32.956522
Cbc0013I At root node, 23 cuts changed objective from -34.46149 to -23.719546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7875 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1591 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -9.50585 best solution, best possible -23.719546 (0.68 seconds)
Cbc0012I Integer solution of -9.62741 found by rounding after 7431 iterations and 41 nodes (0.79 seconds)
Cbc0001I Search completed - best objective -9.627409999999998, took 7532 iterations and 46 nodes (0.80 seconds)
Cbc0032I Strong branching done 538 times (10446 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 14, 105 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 84 (-19) columns and 1063 (-516) elements
Clp1000I sum of infeasibilities 3.0944e-08 - average 4.48464e-10, 15 fixed columns
Coin0506I Presolve 56 (-13) rows, 67 (-17) columns and 708 (-355) elements
Clp0006I 0  Obj 39.858861 Dual inf 1.5249943 (67)
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 4.3024701 - largest nonzero change 2.0312138e-05 ( 0.0009598595%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 47.838622
Clp0000I Optimal - objective value 47.838622
Coin0511I After Postsolve, objective 47.838622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.838622
Clp0000I Optimal - objective value 47.838622
Clp0000I Optimal - objective value 47.838622
Clp0000I Optimal - objective value 47.838622
Coin0511I After Postsolve, objective 47.838622, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.83862221 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 84 columns (84 integer (84 of which binary)) and 1065 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.40651
Cbc0038I Pass   1: suminf.    1.68345 (22) obj. -31.9534 iterations 10
Cbc0038I Pass   2: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass   3: suminf.    0.26668 (6) obj. -4.84697 iterations 16
Cbc0038I Solution found of 0.88635
Cbc0038I Rounding solution of 0.784758 is better than previous of 0.88635

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 0.784758 to -1.23494 (0.02 seconds)
Cbc0038I Round again with cutoff of -5.06065
Cbc0038I Pass   4: suminf.    1.68345 (22) obj. -31.9534 iterations 0
Cbc0038I Pass   5: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass   6: suminf.    0.33305 (6) obj. -5.06065 iterations 18
Cbc0038I Pass   7: suminf.    0.34464 (2) obj. -5.06065 iterations 12
Cbc0038I Pass   8: suminf.    0.19062 (2) obj. -5.06065 iterations 1
Cbc0038I Pass   9: suminf.    1.06823 (8) obj. -7.71186 iterations 22
Cbc0038I Pass  10: suminf.    0.80011 (7) obj. -7.6618 iterations 3
Cbc0038I Pass  11: suminf.    0.98775 (4) obj. -5.06065 iterations 9
Cbc0038I Pass  12: suminf.    0.98775 (4) obj. -5.06065 iterations 0
Cbc0038I Pass  13: suminf.    1.13893 (5) obj. -5.06065 iterations 4
Cbc0038I Pass  14: suminf.    1.11216 (5) obj. -5.06065 iterations 7
Cbc0038I Pass  15: suminf.    1.24066 (4) obj. -5.06065 iterations 4
Cbc0038I Pass  16: suminf.    0.77225 (3) obj. -5.06065 iterations 3
Cbc0038I Pass  17: suminf.    0.66192 (3) obj. -6.29123 iterations 1
Cbc0038I Pass  18: suminf.    0.96956 (3) obj. -5.06065 iterations 2
Cbc0038I Pass  19: suminf.    0.86057 (6) obj. -5.06065 iterations 23
Cbc0038I Pass  20: suminf.    0.83626 (8) obj. -5.06065 iterations 6
Cbc0038I Pass  21: suminf.    1.41148 (4) obj. -5.06065 iterations 9
Cbc0038I Pass  22: suminf.    1.41148 (4) obj. -5.06065 iterations 1
Cbc0038I Pass  23: suminf.    1.15930 (5) obj. -5.06065 iterations 2
Cbc0038I Pass  24: suminf.    1.15930 (5) obj. -5.06065 iterations 0
Cbc0038I Pass  25: suminf.    1.41148 (4) obj. -5.06065 iterations 7
Cbc0038I Pass  26: suminf.    2.57775 (12) obj. -5.06065 iterations 27
Cbc0038I Pass  27: suminf.    2.14605 (12) obj. -5.06065 iterations 9
Cbc0038I Pass  28: suminf.    1.30103 (7) obj. -5.06065 iterations 15
Cbc0038I Pass  29: suminf.    1.30103 (7) obj. -5.06065 iterations 0
Cbc0038I Pass  30: suminf.    1.11929 (5) obj. -5.06065 iterations 10
Cbc0038I Pass  31: suminf.    0.82238 (4) obj. -5.94518 iterations 4
Cbc0038I Pass  32: suminf.    1.19701 (6) obj. -5.06065 iterations 6
Cbc0038I Pass  33: suminf.    1.36117 (9) obj. -5.06065 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -1.23494 to -3.98876 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.9468
Cbc0038I Pass  33: suminf.    1.68345 (22) obj. -31.9534 iterations 0
Cbc0038I Pass  34: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass  35: suminf.    0.48282 (7) obj. -11.9468 iterations 25
Cbc0038I Pass  36: suminf.    0.45666 (6) obj. -11.9468 iterations 2
Cbc0038I Pass  37: suminf.    0.87333 (7) obj. -11.9468 iterations 17
Cbc0038I Pass  38: suminf.    0.87333 (7) obj. -11.9468 iterations 0
Cbc0038I Pass  39: suminf.    1.18627 (6) obj. -11.9468 iterations 12
Cbc0038I Pass  40: suminf.    0.54689 (4) obj. -12.6272 iterations 12
Cbc0038I Pass  41: suminf.    0.77371 (4) obj. -11.9468 iterations 3
Cbc0038I Pass  42: suminf.    1.81495 (8) obj. -11.9468 iterations 23
Cbc0038I Pass  43: suminf.    1.40717 (9) obj. -13.6043 iterations 6
Cbc0038I Pass  44: suminf.    0.98213 (8) obj. -11.9468 iterations 4
Cbc0038I Pass  45: suminf.    1.55828 (8) obj. -11.9468 iterations 5
Cbc0038I Pass  46: suminf.    1.10959 (7) obj. -11.9468 iterations 2
Cbc0038I Pass  47: suminf.    1.92593 (7) obj. -11.9468 iterations 3
Cbc0038I Pass  48: suminf.    1.38724 (9) obj. -11.9468 iterations 4
Cbc0038I Pass  49: suminf.    1.55828 (8) obj. -11.9468 iterations 4
Cbc0038I Pass  50: suminf.    1.96370 (11) obj. -11.9468 iterations 16
Cbc0038I Pass  51: suminf.    1.94241 (12) obj. -11.9468 iterations 8
Cbc0038I Pass  52: suminf.    1.38927 (8) obj. -11.9468 iterations 11
Cbc0038I Pass  53: suminf.    1.38927 (8) obj. -11.9468 iterations 0
Cbc0038I Pass  54: suminf.    2.21029 (8) obj. -11.9468 iterations 5
Cbc0038I Pass  55: suminf.    1.78009 (8) obj. -11.9468 iterations 3
Cbc0038I Pass  56: suminf.    1.78009 (8) obj. -11.9468 iterations 0
Cbc0038I Pass  57: suminf.    1.86873 (8) obj. -11.9468 iterations 8
Cbc0038I Pass  58: suminf.    1.38927 (8) obj. -11.9468 iterations 6
Cbc0038I Pass  59: suminf.    1.38927 (8) obj. -11.9468 iterations 1
Cbc0038I Pass  60: suminf.    2.21029 (8) obj. -11.9468 iterations 5
Cbc0038I Pass  61: suminf.    1.78009 (8) obj. -11.9468 iterations 3
Cbc0038I Pass  62: suminf.    1.78009 (8) obj. -11.9468 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -3.98876 to -9.16177 (0.06 seconds)
Cbc0038I Round again with cutoff of -20.2101
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.68345 (22) obj. -31.9534 iterations 0
Cbc0038I Pass  63: suminf.    1.68345 (22) obj. -31.9534 iterations 1
Cbc0038I Pass  64: suminf.    1.43784 (12) obj. -20.2101 iterations 24
Cbc0038I Pass  65: suminf.    1.43784 (12) obj. -20.2101 iterations 0
Cbc0038I Pass  66: suminf.    1.04790 (9) obj. -20.2101 iterations 15
Cbc0038I Pass  67: suminf.    0.81465 (7) obj. -20.2101 iterations 7
Cbc0038I Pass  68: suminf.    0.91472 (8) obj. -20.2101 iterations 8
Cbc0038I Pass  69: suminf.    2.73217 (18) obj. -20.2101 iterations 14
Cbc0038I Pass  70: suminf.    1.24285 (12) obj. -20.2101 iterations 4
Cbc0038I Pass  71: suminf.    1.24285 (12) obj. -20.2101 iterations 1
Cbc0038I Pass  72: suminf.    1.51283 (10) obj. -20.2101 iterations 16
Cbc0038I Pass  73: suminf.    0.81465 (7) obj. -20.2101 iterations 11
Cbc0038I Pass  74: suminf.    0.91472 (8) obj. -20.2101 iterations 8
Cbc0038I Pass  75: suminf.    1.39704 (12) obj. -20.2101 iterations 23
Cbc0038I Pass  76: suminf.    1.25184 (11) obj. -20.2101 iterations 7
Cbc0038I Pass  77: suminf.    1.22889 (9) obj. -20.2101 iterations 12
Cbc0038I Pass  78: suminf.    1.21990 (10) obj. -20.2101 iterations 5
Cbc0038I Pass  79: suminf.    2.47155 (17) obj. -20.2101 iterations 14
Cbc0038I Pass  80: suminf.    1.95855 (16) obj. -20.2101 iterations 3
Cbc0038I Pass  81: suminf.    1.74593 (10) obj. -20.2101 iterations 15
Cbc0038I Pass  82: suminf.    1.59643 (10) obj. -20.2101 iterations 6
Cbc0038I Pass  83: suminf.    2.27743 (11) obj. -20.2101 iterations 8
Cbc0038I Pass  84: suminf.    1.89262 (12) obj. -20.2101 iterations 2
Cbc0038I Pass  85: suminf.    2.27743 (11) obj. -20.2101 iterations 6
Cbc0038I Pass  86: suminf.    2.42629 (12) obj. -20.2101 iterations 12
Cbc0038I Pass  87: suminf.    1.83116 (10) obj. -20.2101 iterations 9
Cbc0038I Pass  88: suminf.    1.71175 (11) obj. -20.2101 iterations 3
Cbc0038I Pass  89: suminf.    1.58683 (10) obj. -20.2101 iterations 12
Cbc0038I Pass  90: suminf.    1.58683 (10) obj. -20.2101 iterations 1
Cbc0038I Pass  91: suminf.    2.04399 (12) obj. -20.2101 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 84 columns, reduced to 27 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -9.16177 - took 0.06 seconds
Cbc0012I Integer solution of -9.16177 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 69 rows 84 columns, reduced to 10 rows 12 columns
Cbc0031I 39 added rows had average density of 7.2307692
Cbc0013I At root node, 39 cuts changed objective from -39.491177 to -10.438943 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 2629 row cuts average 6.7 elements, 13 column cuts (13 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 301 row cuts average 64.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 219 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 218 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.203 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.16177 best solution, best possible -10.418073 (0.64 seconds)
Cbc0016I Integer solution of -9.62741 found by strong branching after 1048 iterations and 1 nodes (0.80 seconds)
Cbc0001I Search completed - best objective -9.627409999999998, took 1153 iterations and 8 nodes (1.03 seconds)
Cbc0032I Strong branching done 98 times (857 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       1.04

