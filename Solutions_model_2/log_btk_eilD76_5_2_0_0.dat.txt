Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 5.36567e-05 - average 4.00423e-07, 11 fixed columns
Coin0506I Presolve 114 (-20) rows, 64 (-11) columns and 349 (-61) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Coin0511I After Postsolve, objective 65.835577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Coin0511I After Postsolve, objective 65.835577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.83557695 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.1513
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.24618 iterations 59
Cbc0038I Solution found of -7.24618
Cbc0038I Relaxing continuous gives -7.24618
Cbc0038I Rounding solution of -16.1088 is better than previous of -7.24618

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -16.1088 to -37.0829 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.9583
Cbc0038I Pass   2: suminf.    3.56790 (17) obj. -39.9583 iterations 27
Cbc0038I Pass   3: suminf.    3.26256 (11) obj. -39.9583 iterations 6
Cbc0038I Pass   4: suminf.    2.18480 (8) obj. -39.9583 iterations 18
Cbc0038I Pass   5: suminf.    2.18480 (8) obj. -39.9583 iterations 0
Cbc0038I Pass   6: suminf.    3.21294 (9) obj. -39.9583 iterations 17
Cbc0038I Pass   7: suminf.    2.58264 (11) obj. -39.9583 iterations 8
Cbc0038I Pass   8: suminf.    2.46679 (8) obj. -39.9583 iterations 2
Cbc0038I Pass   9: suminf.    2.58578 (8) obj. -39.9583 iterations 12
Cbc0038I Pass  10: suminf.    1.73738 (6) obj. -39.9583 iterations 4
Cbc0038I Pass  11: suminf.    2.48103 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  12: suminf.    1.78351 (5) obj. -39.9583 iterations 21
Cbc0038I Pass  13: suminf.    1.04666 (4) obj. -39.9583 iterations 23
Cbc0038I Pass  14: suminf.    1.84190 (5) obj. -39.9583 iterations 5
Cbc0038I Pass  15: suminf.    1.35009 (8) obj. -39.9583 iterations 3
Cbc0038I Pass  16: suminf.    1.67274 (5) obj. -39.9583 iterations 12
Cbc0038I Pass  17: suminf.    1.30459 (5) obj. -39.9583 iterations 3
Cbc0038I Pass  18: suminf.    2.45550 (7) obj. -39.9583 iterations 11
Cbc0038I Pass  19: suminf.    2.22890 (9) obj. -39.9583 iterations 5
Cbc0038I Pass  20: suminf.    2.07218 (8) obj. -39.9583 iterations 1
Cbc0038I Pass  21: suminf.    1.73738 (6) obj. -39.9583 iterations 12
Cbc0038I Pass  22: suminf.    1.73738 (6) obj. -39.9583 iterations 0
Cbc0038I Pass  23: suminf.    2.48103 (8) obj. -39.9583 iterations 9
Cbc0038I Pass  24: suminf.    2.46679 (8) obj. -39.9583 iterations 3
Cbc0038I Pass  25: suminf.    2.58578 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  26: suminf.    2.87936 (8) obj. -39.9583 iterations 15
Cbc0038I Pass  27: suminf.    2.23657 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  28: suminf.    1.85952 (8) obj. -39.9583 iterations 13
Cbc0038I Pass  29: suminf.    1.66918 (6) obj. -39.9583 iterations 1
Cbc0038I Pass  30: suminf.    1.42827 (5) obj. -39.9583 iterations 9
Cbc0038I Pass  31: suminf.    1.42078 (5) obj. -39.9583 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -37.0829 to -38.3774 (0.10 seconds)
Cbc0038I Round again with cutoff of -45.1337
Cbc0038I Pass  31: suminf.    4.32720 (17) obj. -45.1337 iterations 0
Cbc0038I Pass  32: suminf.    3.99240 (15) obj. -45.1337 iterations 2
Cbc0038I Pass  33: suminf.    2.97405 (9) obj. -45.1337 iterations 17
Cbc0038I Pass  34: suminf.    2.68450 (8) obj. -45.1337 iterations 7
Cbc0038I Pass  35: suminf.    3.02565 (7) obj. -45.1337 iterations 10
Cbc0038I Pass  36: suminf.    2.52339 (9) obj. -45.1337 iterations 4
Cbc0038I Pass  37: suminf.    2.52339 (9) obj. -45.1337 iterations 0
Cbc0038I Pass  38: suminf.    2.80562 (8) obj. -45.1337 iterations 11
Cbc0038I Pass  39: suminf.    2.77936 (8) obj. -45.1337 iterations 4
Cbc0038I Pass  40: suminf.    2.67487 (8) obj. -45.1337 iterations 9
Cbc0038I Pass  41: suminf.    4.44635 (14) obj. -45.1337 iterations 30
Cbc0038I Pass  42: suminf.    4.05137 (15) obj. -45.1337 iterations 9
Cbc0038I Pass  43: suminf.    3.75223 (9) obj. -45.1337 iterations 20
Cbc0038I Pass  44: suminf.    2.83539 (9) obj. -45.1337 iterations 6
Cbc0038I Pass  45: suminf.    2.36147 (9) obj. -45.1337 iterations 15
Cbc0038I Pass  46: suminf.    2.36147 (9) obj. -45.1337 iterations 1
Cbc0038I Pass  47: suminf.    3.55736 (10) obj. -45.1337 iterations 11
Cbc0038I Pass  48: suminf.    3.14975 (10) obj. -45.1337 iterations 5
Cbc0038I Pass  49: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  50: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I Pass  51: suminf.    2.11938 (7) obj. -45.1337 iterations 5
Cbc0038I Pass  52: suminf.    3.27767 (10) obj. -45.1337 iterations 9
Cbc0038I Pass  53: suminf.    3.14975 (10) obj. -45.1337 iterations 2
Cbc0038I Pass  54: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  55: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I Pass  56: suminf.    2.11938 (7) obj. -45.1337 iterations 5
Cbc0038I Pass  57: suminf.    3.27767 (10) obj. -45.1337 iterations 9
Cbc0038I Pass  58: suminf.    3.14975 (10) obj. -45.1337 iterations 2
Cbc0038I Pass  59: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  60: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 84 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -38.3774 - took 0.14 seconds
Cbc0012I Integer solution of -38.37738 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 76 rows 44 columns
Cbc0031I 31 added rows had average density of 52.387097
Cbc0013I At root node, 31 cuts changed objective from -65.835577 to -53.817229 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12944 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2501 row cuts average 74.3 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 189 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 68.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.37738 best solution, best possible -53.817229 (1.04 seconds)
Cbc0012I Integer solution of -38.73125 found by rounding after 9871 iterations and 55 nodes (1.25 seconds)
Cbc0001I Search completed - best objective -38.73125, took 9993 iterations and 60 nodes (1.26 seconds)
Cbc0032I Strong branching done 716 times (14033 iterations), fathomed 7 nodes and fixed 42 variables
Cbc0035I Maximum depth 16, 144 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-47) rows, 121 (-31) columns and 2082 (-1221) elements
Clp1000I sum of infeasibilities 4.02855e-08 - average 3.765e-10, 25 fixed columns
Coin0506I Presolve 79 (-28) rows, 89 (-32) columns and 1274 (-808) elements
Clp0006I 0  Obj 69.142029 Dual inf 5.1125099 (88)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.2178004 - largest nonzero change 2.7876633e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 78.358338
Clp0000I Optimal - objective value 78.358338
Coin0511I After Postsolve, objective 78.358338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 78.358338
Clp0000I Optimal - objective value 78.358338
Clp0000I Optimal - objective value 78.358338
Clp0000I Optimal - objective value 78.358338
Coin0511I After Postsolve, objective 78.358338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.35833842 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 2087 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 3.75116
Cbc0038I Pass   1: suminf.    3.31070 (36) obj. -66.1756 iterations 11
Cbc0038I Pass   2: suminf.    1.76177 (24) obj. -45.3895 iterations 12
Cbc0038I Solution found of -16.5679
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -21.652
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.31070 (36) obj. -66.1756 iterations 0
Cbc0038I Pass   4: suminf.    1.27432 (19) obj. -40.8769 iterations 17
Cbc0038I Pass   5: suminf.    0.50293 (2) obj. -21.652 iterations 30
Cbc0038I Pass   6: suminf.    0.15068 (1) obj. -21.6638 iterations 6
Cbc0038I Pass   7: suminf.    1.24836 (11) obj. -21.9562 iterations 27
Cbc0038I Pass   8: suminf.    1.22634 (11) obj. -21.652 iterations 5
Cbc0038I Pass   9: suminf.    0.81891 (3) obj. -21.652 iterations 13
Cbc0038I Pass  10: suminf.    0.81891 (3) obj. -21.652 iterations 0
Cbc0038I Pass  11: suminf.    0.76057 (3) obj. -21.652 iterations 6
Cbc0038I Pass  12: suminf.    0.76057 (3) obj. -21.652 iterations 1
Cbc0038I Pass  13: suminf.    1.21024 (6) obj. -21.652 iterations 6
Cbc0038I Pass  14: suminf.    0.65976 (4) obj. -21.652 iterations 8
Cbc0038I Pass  15: suminf.    0.36817 (3) obj. -23.0177 iterations 3
Cbc0038I Pass  16: suminf.    0.70959 (3) obj. -21.652 iterations 2
Cbc0038I Pass  17: suminf.    2.21232 (13) obj. -21.652 iterations 36
Cbc0038I Pass  18: suminf.    2.21232 (13) obj. -21.652 iterations 4
Cbc0038I Pass  19: suminf.    0.52527 (4) obj. -21.652 iterations 24
Cbc0038I Pass  20: suminf.    0.52527 (4) obj. -21.652 iterations 3
Cbc0038I Pass  21: suminf.    0.90304 (4) obj. -21.652 iterations 6
Cbc0038I Pass  22: suminf.    0.90304 (4) obj. -21.652 iterations 5
Cbc0038I Pass  23: suminf.    0.52527 (4) obj. -21.652 iterations 6
Cbc0038I Pass  24: suminf.    2.04441 (12) obj. -21.652 iterations 22
Cbc0038I Pass  25: suminf.    1.18353 (9) obj. -21.652 iterations 7
Cbc0038I Pass  26: suminf.    0.98206 (9) obj. -24.5125 iterations 1
Cbc0038I Pass  27: suminf.    0.99040 (5) obj. -21.652 iterations 11
Cbc0038I Pass  28: suminf.    0.72850 (5) obj. -22.4377 iterations 1
Cbc0038I Pass  29: suminf.    1.61041 (19) obj. -23.8241 iterations 27
Cbc0038I Pass  30: suminf.    0.89628 (6) obj. -21.652 iterations 12
Cbc0038I Pass  31: suminf.    0.44598 (4) obj. -21.652 iterations 6
Cbc0038I Pass  32: suminf.    0.44598 (4) obj. -21.652 iterations 0
Cbc0038I Rounding solution of -18.0207 is better than previous of -16.5679

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -18.0207 to -36.255 (0.05 seconds)
Cbc0038I Round again with cutoff of -42.4857
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.31070 (36) obj. -66.1756 iterations 0
Cbc0038I Pass  33: suminf.    1.49988 (21) obj. -42.4857 iterations 18
Cbc0038I Pass  34: suminf.    1.27859 (11) obj. -42.4857 iterations 20
Cbc0038I Pass  35: suminf.    1.17731 (11) obj. -42.4857 iterations 2
Cbc0038I Pass  36: suminf.    1.26348 (11) obj. -42.4857 iterations 4
Cbc0038I Pass  37: suminf.    1.90594 (14) obj. -42.4857 iterations 17
Cbc0038I Pass  38: suminf.    1.69091 (17) obj. -42.4857 iterations 8
Cbc0038I Pass  39: suminf.    2.49947 (14) obj. -42.4857 iterations 14
Cbc0038I Pass  40: suminf.    2.49947 (14) obj. -42.4857 iterations 0
Cbc0038I Pass  41: suminf.    2.33235 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  42: suminf.    1.86925 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  43: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  44: suminf.    2.33836 (14) obj. -42.4857 iterations 9
Cbc0038I Pass  45: suminf.    1.89668 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  46: suminf.    1.82232 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  47: suminf.    2.33235 (14) obj. -42.4857 iterations 8
Cbc0038I Pass  48: suminf.    1.86925 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  49: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  50: suminf.    2.33836 (14) obj. -42.4857 iterations 9
Cbc0038I Pass  51: suminf.    1.89668 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  52: suminf.    1.82232 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  53: suminf.    2.33235 (14) obj. -42.4857 iterations 7
Cbc0038I Pass  54: suminf.    1.86925 (14) obj. -42.4857 iterations 5
Cbc0038I Pass  55: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  56: suminf.    2.33836 (14) obj. -42.4857 iterations 11
Cbc0038I Pass  57: suminf.    1.89668 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  58: suminf.    1.82232 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  59: suminf.    2.33235 (14) obj. -42.4857 iterations 7
Cbc0038I Pass  60: suminf.    1.86925 (14) obj. -42.4857 iterations 5
Cbc0038I Pass  61: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -36.255 - took 0.12 seconds
Cbc0012I Integer solution of -36.25504 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 8 rows 11 columns
Cbc0031I 68 added rows had average density of 13.808824
Cbc0013I At root node, 68 cuts changed objective from -67.408111 to -44.187898 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13494 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1420 row cuts average 109.8 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 440 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 896 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 299 row cuts average 56.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 101 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.605 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.25504 best solution, best possible -44.187898 (2.38 seconds)
Cbc0012I Integer solution of -36.6248 found by DiveCoefficient after 5569 iterations and 7 nodes (2.71 seconds)
Cbc0012I Integer solution of -38.37738 found by DiveCoefficient after 5576 iterations and 8 nodes (2.71 seconds)
Cbc0004I Integer solution of -38.73125 found after 5637 iterations and 12 nodes (2.73 seconds)
Cbc0001I Search completed - best objective -38.73125, took 5815 iterations and 20 nodes (2.74 seconds)
Cbc0032I Strong branching done 408 times (7463 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 8, 37 variables fixed on reduced cost
Total time (CPU seconds):       2.07   (Wallclock seconds):       2.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 5.36567e-05 - average 4.00423e-07, 11 fixed columns
Coin0506I Presolve 114 (-20) rows, 64 (-11) columns and 349 (-61) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Coin0511I After Postsolve, objective 65.835577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Clp0000I Optimal - objective value 65.835577
Coin0511I After Postsolve, objective 65.835577, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.83557695 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.1513
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.24618 iterations 59
Cbc0038I Solution found of -7.24618
Cbc0038I Relaxing continuous gives -7.24618
Cbc0038I Rounding solution of -16.1088 is better than previous of -7.24618

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -16.1088 to -37.0829 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.9583
Cbc0038I Pass   2: suminf.    3.56790 (17) obj. -39.9583 iterations 27
Cbc0038I Pass   3: suminf.    3.26256 (11) obj. -39.9583 iterations 6
Cbc0038I Pass   4: suminf.    2.18480 (8) obj. -39.9583 iterations 18
Cbc0038I Pass   5: suminf.    2.18480 (8) obj. -39.9583 iterations 0
Cbc0038I Pass   6: suminf.    3.21294 (9) obj. -39.9583 iterations 17
Cbc0038I Pass   7: suminf.    2.58264 (11) obj. -39.9583 iterations 8
Cbc0038I Pass   8: suminf.    2.46679 (8) obj. -39.9583 iterations 2
Cbc0038I Pass   9: suminf.    2.58578 (8) obj. -39.9583 iterations 12
Cbc0038I Pass  10: suminf.    1.73738 (6) obj. -39.9583 iterations 4
Cbc0038I Pass  11: suminf.    2.48103 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  12: suminf.    1.78351 (5) obj. -39.9583 iterations 21
Cbc0038I Pass  13: suminf.    1.04666 (4) obj. -39.9583 iterations 23
Cbc0038I Pass  14: suminf.    1.84190 (5) obj. -39.9583 iterations 5
Cbc0038I Pass  15: suminf.    1.35009 (8) obj. -39.9583 iterations 3
Cbc0038I Pass  16: suminf.    1.67274 (5) obj. -39.9583 iterations 12
Cbc0038I Pass  17: suminf.    1.30459 (5) obj. -39.9583 iterations 3
Cbc0038I Pass  18: suminf.    2.45550 (7) obj. -39.9583 iterations 11
Cbc0038I Pass  19: suminf.    2.22890 (9) obj. -39.9583 iterations 5
Cbc0038I Pass  20: suminf.    2.07218 (8) obj. -39.9583 iterations 1
Cbc0038I Pass  21: suminf.    1.73738 (6) obj. -39.9583 iterations 12
Cbc0038I Pass  22: suminf.    1.73738 (6) obj. -39.9583 iterations 0
Cbc0038I Pass  23: suminf.    2.48103 (8) obj. -39.9583 iterations 9
Cbc0038I Pass  24: suminf.    2.46679 (8) obj. -39.9583 iterations 3
Cbc0038I Pass  25: suminf.    2.58578 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  26: suminf.    2.87936 (8) obj. -39.9583 iterations 15
Cbc0038I Pass  27: suminf.    2.23657 (8) obj. -39.9583 iterations 10
Cbc0038I Pass  28: suminf.    1.85952 (8) obj. -39.9583 iterations 13
Cbc0038I Pass  29: suminf.    1.66918 (6) obj. -39.9583 iterations 1
Cbc0038I Pass  30: suminf.    1.42827 (5) obj. -39.9583 iterations 9
Cbc0038I Pass  31: suminf.    1.42078 (5) obj. -39.9583 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -37.0829 to -38.3774 (0.10 seconds)
Cbc0038I Round again with cutoff of -45.1337
Cbc0038I Pass  31: suminf.    4.32720 (17) obj. -45.1337 iterations 0
Cbc0038I Pass  32: suminf.    3.99240 (15) obj. -45.1337 iterations 2
Cbc0038I Pass  33: suminf.    2.97405 (9) obj. -45.1337 iterations 17
Cbc0038I Pass  34: suminf.    2.68450 (8) obj. -45.1337 iterations 7
Cbc0038I Pass  35: suminf.    3.02565 (7) obj. -45.1337 iterations 10
Cbc0038I Pass  36: suminf.    2.52339 (9) obj. -45.1337 iterations 4
Cbc0038I Pass  37: suminf.    2.52339 (9) obj. -45.1337 iterations 0
Cbc0038I Pass  38: suminf.    2.80562 (8) obj. -45.1337 iterations 11
Cbc0038I Pass  39: suminf.    2.77936 (8) obj. -45.1337 iterations 4
Cbc0038I Pass  40: suminf.    2.67487 (8) obj. -45.1337 iterations 9
Cbc0038I Pass  41: suminf.    4.44635 (14) obj. -45.1337 iterations 30
Cbc0038I Pass  42: suminf.    4.05137 (15) obj. -45.1337 iterations 9
Cbc0038I Pass  43: suminf.    3.75223 (9) obj. -45.1337 iterations 20
Cbc0038I Pass  44: suminf.    2.83539 (9) obj. -45.1337 iterations 6
Cbc0038I Pass  45: suminf.    2.36147 (9) obj. -45.1337 iterations 15
Cbc0038I Pass  46: suminf.    2.36147 (9) obj. -45.1337 iterations 1
Cbc0038I Pass  47: suminf.    3.55736 (10) obj. -45.1337 iterations 11
Cbc0038I Pass  48: suminf.    3.14975 (10) obj. -45.1337 iterations 5
Cbc0038I Pass  49: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  50: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I Pass  51: suminf.    2.11938 (7) obj. -45.1337 iterations 5
Cbc0038I Pass  52: suminf.    3.27767 (10) obj. -45.1337 iterations 9
Cbc0038I Pass  53: suminf.    3.14975 (10) obj. -45.1337 iterations 2
Cbc0038I Pass  54: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  55: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I Pass  56: suminf.    2.11938 (7) obj. -45.1337 iterations 5
Cbc0038I Pass  57: suminf.    3.27767 (10) obj. -45.1337 iterations 9
Cbc0038I Pass  58: suminf.    3.14975 (10) obj. -45.1337 iterations 2
Cbc0038I Pass  59: suminf.    3.44562 (10) obj. -45.1337 iterations 13
Cbc0038I Pass  60: suminf.    2.74730 (8) obj. -45.1337 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 84 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -38.3774 - took 0.14 seconds
Cbc0012I Integer solution of -38.37738 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 76 rows 44 columns
Cbc0031I 31 added rows had average density of 52.387097
Cbc0013I At root node, 31 cuts changed objective from -65.835577 to -53.817229 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12944 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2501 row cuts average 74.3 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 189 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 68.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.37738 best solution, best possible -53.817229 (1.04 seconds)
Cbc0012I Integer solution of -38.73125 found by rounding after 9871 iterations and 55 nodes (1.24 seconds)
Cbc0001I Search completed - best objective -38.73125, took 9993 iterations and 60 nodes (1.25 seconds)
Cbc0032I Strong branching done 716 times (14033 iterations), fathomed 7 nodes and fixed 42 variables
Cbc0035I Maximum depth 16, 144 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 121 (-32) columns and 2082 (-1222) elements
Clp1000I sum of infeasibilities 4.02855e-08 - average 3.765e-10, 25 fixed columns
Coin0506I Presolve 79 (-28) rows, 89 (-32) columns and 1274 (-808) elements
Clp0006I 0  Obj 69.142029 Dual inf 5.1125099 (88)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.2178004 - largest nonzero change 2.7876633e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 78.358338
Clp0000I Optimal - objective value 78.358338
Coin0511I After Postsolve, objective 78.358338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 78.358338
Clp0000I Optimal - objective value 78.358338
Clp0000I Optimal - objective value 78.358338
Clp0000I Optimal - objective value 78.358338
Coin0511I After Postsolve, objective 78.358338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.35833842 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 2087 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 3.75116
Cbc0038I Pass   1: suminf.    3.31070 (36) obj. -66.1756 iterations 11
Cbc0038I Pass   2: suminf.    1.76177 (24) obj. -45.3895 iterations 12
Cbc0038I Solution found of -16.5679
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -21.652
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.31070 (36) obj. -66.1756 iterations 0
Cbc0038I Pass   4: suminf.    1.27432 (19) obj. -40.8769 iterations 17
Cbc0038I Pass   5: suminf.    0.50293 (2) obj. -21.652 iterations 30
Cbc0038I Pass   6: suminf.    0.15068 (1) obj. -21.6638 iterations 6
Cbc0038I Pass   7: suminf.    1.24836 (11) obj. -21.9562 iterations 27
Cbc0038I Pass   8: suminf.    1.22634 (11) obj. -21.652 iterations 5
Cbc0038I Pass   9: suminf.    0.81891 (3) obj. -21.652 iterations 13
Cbc0038I Pass  10: suminf.    0.81891 (3) obj. -21.652 iterations 0
Cbc0038I Pass  11: suminf.    0.76057 (3) obj. -21.652 iterations 6
Cbc0038I Pass  12: suminf.    0.76057 (3) obj. -21.652 iterations 1
Cbc0038I Pass  13: suminf.    1.21024 (6) obj. -21.652 iterations 6
Cbc0038I Pass  14: suminf.    0.65976 (4) obj. -21.652 iterations 8
Cbc0038I Pass  15: suminf.    0.36817 (3) obj. -23.0177 iterations 3
Cbc0038I Pass  16: suminf.    0.70959 (3) obj. -21.652 iterations 2
Cbc0038I Pass  17: suminf.    2.21232 (13) obj. -21.652 iterations 36
Cbc0038I Pass  18: suminf.    2.21232 (13) obj. -21.652 iterations 4
Cbc0038I Pass  19: suminf.    0.52527 (4) obj. -21.652 iterations 24
Cbc0038I Pass  20: suminf.    0.52527 (4) obj. -21.652 iterations 3
Cbc0038I Pass  21: suminf.    0.90304 (4) obj. -21.652 iterations 6
Cbc0038I Pass  22: suminf.    0.90304 (4) obj. -21.652 iterations 5
Cbc0038I Pass  23: suminf.    0.52527 (4) obj. -21.652 iterations 6
Cbc0038I Pass  24: suminf.    2.04441 (12) obj. -21.652 iterations 22
Cbc0038I Pass  25: suminf.    1.18353 (9) obj. -21.652 iterations 7
Cbc0038I Pass  26: suminf.    0.98206 (9) obj. -24.5125 iterations 1
Cbc0038I Pass  27: suminf.    0.99040 (5) obj. -21.652 iterations 11
Cbc0038I Pass  28: suminf.    0.72850 (5) obj. -22.4377 iterations 1
Cbc0038I Pass  29: suminf.    1.61041 (19) obj. -23.8241 iterations 27
Cbc0038I Pass  30: suminf.    0.89628 (6) obj. -21.652 iterations 12
Cbc0038I Pass  31: suminf.    0.44598 (4) obj. -21.652 iterations 6
Cbc0038I Pass  32: suminf.    0.44598 (4) obj. -21.652 iterations 0
Cbc0038I Rounding solution of -18.0207 is better than previous of -16.5679

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -18.0207 to -36.255 (0.05 seconds)
Cbc0038I Round again with cutoff of -42.4857
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.31070 (36) obj. -66.1756 iterations 0
Cbc0038I Pass  33: suminf.    1.49988 (21) obj. -42.4857 iterations 18
Cbc0038I Pass  34: suminf.    1.27859 (11) obj. -42.4857 iterations 20
Cbc0038I Pass  35: suminf.    1.17731 (11) obj. -42.4857 iterations 2
Cbc0038I Pass  36: suminf.    1.26348 (11) obj. -42.4857 iterations 4
Cbc0038I Pass  37: suminf.    1.90594 (14) obj. -42.4857 iterations 17
Cbc0038I Pass  38: suminf.    1.69091 (17) obj. -42.4857 iterations 8
Cbc0038I Pass  39: suminf.    2.49947 (14) obj. -42.4857 iterations 14
Cbc0038I Pass  40: suminf.    2.49947 (14) obj. -42.4857 iterations 0
Cbc0038I Pass  41: suminf.    2.33235 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  42: suminf.    1.86925 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  43: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  44: suminf.    2.33836 (14) obj. -42.4857 iterations 9
Cbc0038I Pass  45: suminf.    1.89668 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  46: suminf.    1.82232 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  47: suminf.    2.33235 (14) obj. -42.4857 iterations 8
Cbc0038I Pass  48: suminf.    1.86925 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  49: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  50: suminf.    2.33836 (14) obj. -42.4857 iterations 9
Cbc0038I Pass  51: suminf.    1.89668 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  52: suminf.    1.82232 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  53: suminf.    2.33235 (14) obj. -42.4857 iterations 7
Cbc0038I Pass  54: suminf.    1.86925 (14) obj. -42.4857 iterations 5
Cbc0038I Pass  55: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  56: suminf.    2.33836 (14) obj. -42.4857 iterations 11
Cbc0038I Pass  57: suminf.    1.89668 (14) obj. -42.4857 iterations 4
Cbc0038I Pass  58: suminf.    1.82232 (14) obj. -42.4857 iterations 6
Cbc0038I Pass  59: suminf.    2.33235 (14) obj. -42.4857 iterations 7
Cbc0038I Pass  60: suminf.    1.86925 (14) obj. -42.4857 iterations 5
Cbc0038I Pass  61: suminf.    1.79668 (14) obj. -42.4857 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -36.255 - took 0.12 seconds
Cbc0012I Integer solution of -36.25504 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 8 rows 11 columns
Cbc0031I 68 added rows had average density of 13.808824
Cbc0013I At root node, 68 cuts changed objective from -67.408111 to -44.187898 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13494 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1420 row cuts average 109.8 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 440 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 896 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 299 row cuts average 56.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 101 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.616 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.25504 best solution, best possible -44.187898 (2.45 seconds)
Cbc0012I Integer solution of -36.6248 found by DiveCoefficient after 5569 iterations and 7 nodes (2.77 seconds)
Cbc0012I Integer solution of -38.37738 found by DiveCoefficient after 5576 iterations and 8 nodes (2.78 seconds)
Cbc0004I Integer solution of -38.73125 found after 5637 iterations and 12 nodes (2.80 seconds)
Cbc0001I Search completed - best objective -38.73125, took 5815 iterations and 20 nodes (2.81 seconds)
Cbc0032I Strong branching done 408 times (7463 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 8, 37 variables fixed on reduced cost
Total time (CPU seconds):       2.10   (Wallclock seconds):       2.82

