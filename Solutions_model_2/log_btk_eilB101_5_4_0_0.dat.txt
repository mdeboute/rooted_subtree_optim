Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 166 (-39) rows, 92 (-11) columns and 508 (-95) elements
Clp1000I sum of infeasibilities 0.00019433 - average 1.17066e-06, 62 fixed columns
Coin0506I Presolve 52 (-114) rows, 29 (-63) columns and 155 (-353) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 2.9967848 - largest nonzero change 0 ( 0%) - largest zero change 2.696549e-05
Clp0000I Optimal - objective value 292.90451
Clp0000I Optimal - objective value 292.90451
Coin0511I After Postsolve, objective 292.90451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2039571 - largest nonzero change 0 ( 0%) - largest zero change 2.9528267e-05
Clp0000I Optimal - objective value 292.90451
Clp0000I Optimal - objective value 292.90451
Clp0000I Optimal - objective value 292.90451
Coin0511I After Postsolve, objective 292.90451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 292.9045116 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 164 rows, 92 columns (91 integer (91 of which binary)) and 539 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.63867
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -58.8754 iterations 43
Cbc0038I Solution found of -58.8754
Cbc0038I Relaxing continuous gives -58.8754
Cbc0038I Rounding solution of -185.245 is better than previous of -58.8754

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 164 rows 92 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -185.245 to -265.118 (0.04 seconds)
Cbc0038I Round again with cutoff of -267.629
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.76055 (8) obj. -267.629 iterations 14
Cbc0038I Pass   3: suminf.    0.47365 (3) obj. -267.629 iterations 16
Cbc0038I Pass   4: suminf.    0.92806 (4) obj. -267.629 iterations 3
Cbc0038I Pass   5: suminf.    0.80837 (4) obj. -267.629 iterations 6
Cbc0038I Pass   6: suminf.    0.87778 (3) obj. -268.275 iterations 5
Cbc0038I Pass   7: suminf.    1.97018 (7) obj. -267.629 iterations 14
Cbc0038I Pass   8: suminf.    3.33178 (13) obj. -267.629 iterations 22
Cbc0038I Pass   9: suminf.    1.12012 (4) obj. -267.629 iterations 27
Cbc0038I Pass  10: suminf.    1.17778 (3) obj. -267.684 iterations 6
Cbc0038I Pass  11: suminf.    2.31242 (8) obj. -267.629 iterations 25
Cbc0038I Pass  12: suminf.    1.71397 (7) obj. -267.629 iterations 28
Cbc0038I Pass  13: suminf.    1.65489 (6) obj. -267.629 iterations 4
Cbc0038I Pass  14: suminf.    1.64514 (7) obj. -267.629 iterations 1
Cbc0038I Pass  15: suminf.    0.82424 (6) obj. -267.629 iterations 13
Cbc0038I Pass  16: suminf.    0.66985 (4) obj. -267.629 iterations 5
Cbc0038I Pass  17: suminf.    0.91980 (3) obj. -269.755 iterations 7
Cbc0038I Pass  18: suminf.    0.60559 (3) obj. -267.629 iterations 2
Cbc0038I Pass  19: suminf.    0.66985 (4) obj. -267.629 iterations 7
Cbc0038I Pass  20: suminf.    1.01479 (5) obj. -267.629 iterations 12
Cbc0038I Pass  21: suminf.    0.68555 (4) obj. -267.629 iterations 5
Cbc0038I Pass  22: suminf.    1.88153 (6) obj. -267.629 iterations 9
Cbc0038I Pass  23: suminf.    1.08064 (7) obj. -267.629 iterations 14
Cbc0038I Pass  24: suminf.    0.99929 (4) obj. -267.629 iterations 10
Cbc0038I Pass  25: suminf.    1.15753 (3) obj. -267.629 iterations 7
Cbc0038I Pass  26: suminf.    0.92221 (4) obj. -267.629 iterations 4
Cbc0038I Pass  27: suminf.    0.73785 (3) obj. -267.629 iterations 1
Cbc0038I Pass  28: suminf.    0.56296 (2) obj. -268.428 iterations 5
Cbc0038I Pass  29: suminf.    0.91449 (3) obj. -267.629 iterations 3
Cbc0038I Pass  30: suminf.    1.39415 (5) obj. -267.629 iterations 10
Cbc0038I Pass  31: suminf.    1.87846 (6) obj. -267.629 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 164 rows 92 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -265.118 - took 0.04 seconds
Cbc0012I Integer solution of -265.11801 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 164 rows 92 columns, reduced to 40 rows 22 columns
Cbc0031I 6 added rows had average density of 43.666667
Cbc0013I At root node, 6 cuts changed objective from -290.23052 to -281.19898 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 3.2 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 54.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -265.118013, took 475 iterations and 14 nodes (0.13 seconds)
Cbc0032I Strong branching done 128 times (941 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-72) rows, 148 (-54) columns and 2793 (-2860) elements
Clp1000I sum of infeasibilities 2.88161e-06 - average 2.18304e-08, 59 fixed columns
Coin0506I Presolve 76 (-56) rows, 82 (-66) columns and 950 (-1843) elements
Clp0014I Perturbing problem by 0.001% of 2.1267133 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 362.07888
Clp0000I Optimal - objective value 362.07888
Coin0511I After Postsolve, objective 362.07888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5393185 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 362.07888
Clp0000I Optimal - objective value 362.07888
Clp0000I Optimal - objective value 362.07888
Coin0511I After Postsolve, objective 362.07888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 362.0788834 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 148 columns (148 integer (148 of which binary)) and 2816 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.024%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 5.01159
Cbc0038I Pass   1: suminf.    0.46397 (11) obj. -210.065 iterations 33
Cbc0038I Pass   2: suminf.    0.46397 (11) obj. -210.065 iterations 4
Cbc0038I Solution found of -192.801
Cbc0038I Rounding solution of -206.429 is better than previous of -192.801

Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 148 columns, reduced to 41 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -206.429 to -281.801 (0.06 seconds)
Cbc0038I Round again with cutoff of -288.72
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.37692 (44) obj. -288.72 iterations 12
Cbc0038I Pass   4: suminf.    1.88686 (42) obj. -288.72 iterations 6
Cbc0038I Pass   5: suminf.    1.47248 (30) obj. -288.72 iterations 16
Cbc0038I Pass   6: suminf.    1.47280 (31) obj. -288.72 iterations 2
Cbc0038I Pass   7: suminf.    1.44214 (16) obj. -288.72 iterations 27
Cbc0038I Pass   8: suminf.    0.99747 (13) obj. -302.479 iterations 4
Cbc0038I Pass   9: suminf.    0.37497 (2) obj. -288.72 iterations 16
Cbc0038I Pass  10: suminf.    0.20599 (4) obj. -291.727 iterations 8
Cbc0038I Pass  11: suminf.    0.37497 (2) obj. -288.72 iterations 5
Cbc0038I Pass  12: suminf.    2.99102 (24) obj. -288.72 iterations 48
Cbc0038I Pass  13: suminf.    1.93390 (22) obj. -288.72 iterations 9
Cbc0038I Pass  14: suminf.    1.49878 (21) obj. -288.72 iterations 1
Cbc0038I Pass  15: suminf.    1.02642 (11) obj. -288.72 iterations 16
Cbc0038I Pass  16: suminf.    0.42701 (4) obj. -288.72 iterations 10
Cbc0038I Pass  17: suminf.    0.20599 (4) obj. -291.727 iterations 9
Cbc0038I Pass  18: suminf.    0.37497 (2) obj. -288.72 iterations 5
Cbc0038I Pass  19: suminf.    1.81335 (12) obj. -288.72 iterations 24
Cbc0038I Pass  20: suminf.    1.65355 (11) obj. -288.72 iterations 9
Cbc0038I Pass  21: suminf.    1.90563 (5) obj. -288.72 iterations 19
Cbc0038I Pass  22: suminf.    0.16206 (6) obj. -288.72 iterations 13
Cbc0038I Pass  23: suminf.    0.16206 (6) obj. -288.72 iterations 0
Cbc0038I Pass  24: suminf.    1.90563 (5) obj. -288.72 iterations 13
Cbc0038I Pass  25: suminf.    2.13471 (15) obj. -288.72 iterations 21
Cbc0038I Pass  26: suminf.    1.88399 (16) obj. -288.72 iterations 13
Cbc0038I Pass  27: suminf.    1.55656 (5) obj. -288.72 iterations 16
Cbc0038I Pass  28: suminf.    0.34765 (4) obj. -288.72 iterations 6
Cbc0038I Pass  29: suminf.    0.22240 (4) obj. -288.72 iterations 4
Cbc0038I Pass  30: suminf.    1.87638 (5) obj. -288.72 iterations 13
Cbc0038I Pass  31: suminf.    0.37231 (5) obj. -288.72 iterations 13
Cbc0038I Pass  32: suminf.    0.22180 (3) obj. -288.72 iterations 9
Cbc0038I Rounding solution of -281.997 is better than previous of -281.801

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 148 columns, reduced to 67 rows 73 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -301.175
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.88345 (44) obj. -301.175 iterations 0
Cbc0038I Pass  33: suminf.    0.73801 (18) obj. -301.175 iterations 36
Cbc0038I Pass  34: suminf.    0.73801 (18) obj. -301.175 iterations 0
Cbc0038I Pass  35: suminf.    0.68770 (5) obj. -301.175 iterations 31
Cbc0038I Pass  36: suminf.    0.48093 (4) obj. -301.175 iterations 11
Cbc0038I Pass  37: suminf.    0.64037 (3) obj. -301.175 iterations 13
Cbc0038I Pass  38: suminf.    2.15862 (15) obj. -301.175 iterations 25
Cbc0038I Pass  39: suminf.    0.95907 (11) obj. -301.175 iterations 7
Cbc0038I Pass  40: suminf.    0.57393 (6) obj. -301.175 iterations 25
Cbc0038I Pass  41: suminf.    0.54264 (6) obj. -301.175 iterations 9
Cbc0038I Pass  42: suminf.    0.97615 (3) obj. -301.175 iterations 18
Cbc0038I Pass  43: suminf.    1.81552 (13) obj. -301.175 iterations 16
Cbc0038I Pass  44: suminf.    1.81552 (13) obj. -301.175 iterations 4
Cbc0038I Pass  45: suminf.    0.96490 (6) obj. -301.175 iterations 22
Cbc0038I Pass  46: suminf.    0.96490 (6) obj. -301.175 iterations 6
Cbc0038I Pass  47: suminf.    0.83387 (5) obj. -301.175 iterations 11
Cbc0038I Pass  48: suminf.    0.54264 (6) obj. -301.175 iterations 15
Cbc0038I Pass  49: suminf.    0.97615 (3) obj. -301.175 iterations 18
Cbc0038I Pass  50: suminf.    2.54135 (13) obj. -301.175 iterations 22
Cbc0038I Pass  51: suminf.    0.84765 (9) obj. -301.175 iterations 11
Cbc0038I Pass  52: suminf.    0.57393 (6) obj. -301.175 iterations 20
Cbc0038I Pass  53: suminf.    2.20499 (14) obj. -301.175 iterations 14
Cbc0038I Pass  54: suminf.    2.20499 (14) obj. -301.175 iterations 3
Cbc0038I Pass  55: suminf.    1.09187 (5) obj. -301.175 iterations 23
Cbc0038I Pass  56: suminf.    0.54264 (6) obj. -301.175 iterations 9
Cbc0038I Pass  57: suminf.    0.97615 (3) obj. -301.175 iterations 17
Cbc0038I Pass  58: suminf.    1.41835 (11) obj. -301.175 iterations 14
Cbc0038I Pass  59: suminf.    1.38259 (12) obj. -301.175 iterations 13
Cbc0038I Pass  60: suminf.    0.89187 (5) obj. -301.175 iterations 18
Cbc0038I Pass  61: suminf.    0.59629 (6) obj. -301.175 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 148 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -281.997 - took 0.09 seconds
Cbc0012I Integer solution of -281.9968 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 131 rows 148 columns, reduced to 10 rows 11 columns
Cbc0031I 45 added rows had average density of 12.911111
Cbc0013I At root node, 45 cuts changed objective from -350.99479 to -294.19969 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 559 row cuts average 6.1 elements, 11 column cuts (11 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 71.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 88 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -281.9968 best solution, best possible -294.1949 (0.61 seconds)
Cbc0001I Search completed - best objective -281.9968, took 895 iterations and 20 nodes (1.05 seconds)
Cbc0032I Strong branching done 360 times (5847 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 8, 102 variables fixed on reduced cost
Total time (CPU seconds):       0.73   (Wallclock seconds):       1.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 166 (-39) rows, 92 (-11) columns and 508 (-95) elements
Clp1000I sum of infeasibilities 0.00019433 - average 1.17066e-06, 62 fixed columns
Coin0506I Presolve 52 (-114) rows, 29 (-63) columns and 155 (-353) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 2.9967848 - largest nonzero change 0 ( 0%) - largest zero change 2.696549e-05
Clp0000I Optimal - objective value 292.90451
Clp0000I Optimal - objective value 292.90451
Coin0511I After Postsolve, objective 292.90451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2039571 - largest nonzero change 0 ( 0%) - largest zero change 2.9528267e-05
Clp0000I Optimal - objective value 292.90451
Clp0000I Optimal - objective value 292.90451
Clp0000I Optimal - objective value 292.90451
Coin0511I After Postsolve, objective 292.90451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 292.9045116 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 164 rows, 92 columns (91 integer (91 of which binary)) and 539 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.63867
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -58.8754 iterations 43
Cbc0038I Solution found of -58.8754
Cbc0038I Relaxing continuous gives -58.8754
Cbc0038I Rounding solution of -185.245 is better than previous of -58.8754

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 164 rows 92 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -185.245 to -265.118 (0.04 seconds)
Cbc0038I Round again with cutoff of -267.629
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.76055 (8) obj. -267.629 iterations 14
Cbc0038I Pass   3: suminf.    0.47365 (3) obj. -267.629 iterations 16
Cbc0038I Pass   4: suminf.    0.92806 (4) obj. -267.629 iterations 3
Cbc0038I Pass   5: suminf.    0.80837 (4) obj. -267.629 iterations 6
Cbc0038I Pass   6: suminf.    0.87778 (3) obj. -268.275 iterations 5
Cbc0038I Pass   7: suminf.    1.97018 (7) obj. -267.629 iterations 14
Cbc0038I Pass   8: suminf.    3.33178 (13) obj. -267.629 iterations 22
Cbc0038I Pass   9: suminf.    1.12012 (4) obj. -267.629 iterations 27
Cbc0038I Pass  10: suminf.    1.17778 (3) obj. -267.684 iterations 6
Cbc0038I Pass  11: suminf.    2.31242 (8) obj. -267.629 iterations 25
Cbc0038I Pass  12: suminf.    1.71397 (7) obj. -267.629 iterations 28
Cbc0038I Pass  13: suminf.    1.65489 (6) obj. -267.629 iterations 4
Cbc0038I Pass  14: suminf.    1.64514 (7) obj. -267.629 iterations 1
Cbc0038I Pass  15: suminf.    0.82424 (6) obj. -267.629 iterations 13
Cbc0038I Pass  16: suminf.    0.66985 (4) obj. -267.629 iterations 5
Cbc0038I Pass  17: suminf.    0.91980 (3) obj. -269.755 iterations 7
Cbc0038I Pass  18: suminf.    0.60559 (3) obj. -267.629 iterations 2
Cbc0038I Pass  19: suminf.    0.66985 (4) obj. -267.629 iterations 7
Cbc0038I Pass  20: suminf.    1.01479 (5) obj. -267.629 iterations 12
Cbc0038I Pass  21: suminf.    0.68555 (4) obj. -267.629 iterations 5
Cbc0038I Pass  22: suminf.    1.88153 (6) obj. -267.629 iterations 9
Cbc0038I Pass  23: suminf.    1.08064 (7) obj. -267.629 iterations 14
Cbc0038I Pass  24: suminf.    0.99929 (4) obj. -267.629 iterations 10
Cbc0038I Pass  25: suminf.    1.15753 (3) obj. -267.629 iterations 7
Cbc0038I Pass  26: suminf.    0.92221 (4) obj. -267.629 iterations 4
Cbc0038I Pass  27: suminf.    0.73785 (3) obj. -267.629 iterations 1
Cbc0038I Pass  28: suminf.    0.56296 (2) obj. -268.428 iterations 5
Cbc0038I Pass  29: suminf.    0.91449 (3) obj. -267.629 iterations 3
Cbc0038I Pass  30: suminf.    1.39415 (5) obj. -267.629 iterations 10
Cbc0038I Pass  31: suminf.    1.87846 (6) obj. -267.629 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 164 rows 92 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -265.118 - took 0.05 seconds
Cbc0012I Integer solution of -265.11801 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 164 rows 92 columns, reduced to 40 rows 22 columns
Cbc0031I 6 added rows had average density of 43.666667
Cbc0013I At root node, 6 cuts changed objective from -290.23052 to -281.19898 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 3.2 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 54.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -265.118013, took 475 iterations and 14 nodes (0.15 seconds)
Cbc0032I Strong branching done 128 times (941 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-77) rows, 144 (-59) columns and 2595 (-3059) elements
Clp1000I sum of infeasibilities 6.59648e-06 - average 5.1535e-08, 56 fixed columns
Coin0506I Presolve 73 (-55) rows, 79 (-65) columns and 928 (-1667) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 2.8702534 - largest nonzero change 0 ( 0%) - largest zero change 2.6750801e-05
Clp0000I Optimal - objective value 312.03209
Clp0000I Optimal - objective value 312.03209
Coin0511I After Postsolve, objective 312.03209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5688392 - largest nonzero change 0 ( 0%) - largest zero change 2.9049144e-05
Clp0000I Optimal - objective value 312.03209
Clp0000I Optimal - objective value 312.03209
Clp0000I Optimal - objective value 312.03209
Coin0511I After Postsolve, objective 312.03209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 312.0320907 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 144 columns (144 integer (144 of which binary)) and 2618 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.911%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.04843
Cbc0038I Pass   1: suminf.    1.99559 (31) obj. -284.774 iterations 19
Cbc0038I Pass   2: suminf.    1.44926 (30) obj. -276.064 iterations 2
Cbc0038I Pass   3: suminf.    0.35828 (15) obj. -185.265 iterations 16
Cbc0038I Solution found of -168.68
Cbc0038I Rounding solution of -189.516 is better than previous of -168.68

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 31 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -189.516 to -265.118 (0.08 seconds)
Cbc0038I Round again with cutoff of -268.482
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.99559 (31) obj. -284.774 iterations 0
Cbc0038I Pass   5: suminf.    1.44926 (30) obj. -276.064 iterations 2
Cbc0038I Pass   6: suminf.    1.38208 (18) obj. -268.482 iterations 35
Cbc0038I Pass   7: suminf.    1.35858 (18) obj. -268.482 iterations 1
Cbc0038I Pass   8: suminf.    2.71091 (14) obj. -268.482 iterations 20
Cbc0038I Pass   9: suminf.    2.71091 (14) obj. -268.482 iterations 0
Cbc0038I Pass  10: suminf.    0.91865 (5) obj. -268.482 iterations 15
Cbc0038I Pass  11: suminf.    0.89131 (8) obj. -268.482 iterations 4
Cbc0038I Pass  12: suminf.    0.89530 (5) obj. -268.482 iterations 4
Cbc0038I Pass  13: suminf.    0.55305 (8) obj. -268.482 iterations 8
Cbc0038I Pass  14: suminf.    0.89131 (8) obj. -268.482 iterations 12
Cbc0038I Pass  15: suminf.    1.14266 (9) obj. -268.482 iterations 26
Cbc0038I Pass  16: suminf.    0.87595 (7) obj. -268.584 iterations 14
Cbc0038I Pass  17: suminf.    0.73967 (3) obj. -268.482 iterations 11
Cbc0038I Pass  18: suminf.    0.43126 (3) obj. -270.024 iterations 6
Cbc0038I Pass  19: suminf.    0.45796 (7) obj. -268.482 iterations 13
Cbc0038I Pass  20: suminf.    0.45796 (7) obj. -268.482 iterations 4
Cbc0038I Pass  21: suminf.    0.84599 (4) obj. -268.482 iterations 11
Cbc0038I Pass  22: suminf.    0.80131 (11) obj. -268.482 iterations 15
Cbc0038I Pass  23: suminf.    0.80131 (11) obj. -268.482 iterations 2
Cbc0038I Pass  24: suminf.    1.08923 (10) obj. -268.482 iterations 7
Cbc0038I Pass  25: suminf.    1.08923 (10) obj. -268.482 iterations 3
Cbc0038I Pass  26: suminf.    1.19523 (10) obj. -268.482 iterations 4
Cbc0038I Pass  27: suminf.    1.19523 (10) obj. -268.482 iterations 3
Cbc0038I Pass  28: suminf.    0.87930 (12) obj. -268.482 iterations 9
Cbc0038I Pass  29: suminf.    0.87930 (12) obj. -268.482 iterations 0
Cbc0038I Pass  30: suminf.    0.75535 (9) obj. -268.482 iterations 11
Cbc0038I Pass  31: suminf.    0.72000 (9) obj. -268.482 iterations 8
Cbc0038I Pass  32: suminf.    1.28571 (13) obj. -268.482 iterations 10
Cbc0038I Pass  33: suminf.    0.74994 (8) obj. -270.541 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 144 columns, reduced to 31 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -265.118 - took 0.07 seconds
Cbc0012I Integer solution of -265.11801 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 127 rows 144 columns, reduced to 31 rows 31 columns
Cbc0031I 29 added rows had average density of 15.37931
Cbc0013I At root node, 29 cuts changed objective from -298.75242 to -277.13205 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 1255 row cuts average 7.8 elements, 20 column cuts (37 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 14 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 67 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 53.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 50 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -265.11801 best solution, best possible -277.13205 (0.56 seconds)
Cbc0010I After 8 nodes, 5 on tree, -265.11801 best solution, best possible -277.13205 (1.27 seconds)
Cbc0001I Search completed - best objective -265.118013, took 1703 iterations and 14 nodes (1.72 seconds)
Cbc0032I Strong branching done 220 times (2667 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 68 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.73

