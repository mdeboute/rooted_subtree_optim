Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 61 (-17) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 1.55051e-08 - average 1.44908e-10, 55 fixed columns
Coin0506I Presolve 5 (-102) rows, 6 (-55) columns and 16 (-314) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Coin0511I After Postsolve, objective 15986.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35446509 - largest nonzero change 1.5018368e-05 ( 0.0011689744%) - largest zero change 2.8195251e-05
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Coin0511I After Postsolve, objective 15986.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15986.46723 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 61 columns (60 integer (60 of which binary)) and 345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.508929
Cbc0038I Solution found of -14330.2
Cbc0038I Relaxing continuous gives -14330.2
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -14495.9
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03716 (1) obj. -14495.9 iterations 9
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -15763 iterations 1
Cbc0038I Pass   3: suminf.    1.11106 (3) obj. -14495.9 iterations 9
Cbc0038I Pass   4: suminf.    0.31828 (3) obj. -15281.7 iterations 7
Cbc0038I Pass   5: suminf.    0.10290 (3) obj. -14495.9 iterations 8
Cbc0038I Pass   6: suminf.    0.10290 (3) obj. -14495.9 iterations 0
Cbc0038I Pass   7: suminf.    0.31828 (3) obj. -15281.7 iterations 8
Cbc0038I Pass   8: suminf.    1.25345 (5) obj. -14495.9 iterations 7
Cbc0038I Pass   9: suminf.    0.41352 (1) obj. -14495.9 iterations 9
Cbc0038I Pass  10: suminf.    0.31828 (3) obj. -15281.7 iterations 3
Cbc0038I Pass  11: suminf.    0.10290 (3) obj. -14495.9 iterations 7
Cbc0038I Pass  12: suminf.    0.10290 (3) obj. -14495.9 iterations 0
Cbc0038I Pass  13: suminf.    0.31828 (3) obj. -15281.7 iterations 7
Cbc0038I Pass  14: suminf.    0.56115 (2) obj. -15053.5 iterations 11
Cbc0038I Pass  15: suminf.    0.41361 (1) obj. -14495.9 iterations 7
Cbc0038I Pass  16: suminf.    0.48649 (1) obj. -15037 iterations 1
Cbc0038I Pass  17: suminf.    1.14935 (4) obj. -14495.9 iterations 15
Cbc0038I Pass  18: suminf.    0.03716 (1) obj. -14495.9 iterations 14
Cbc0038I Pass  19: suminf.    0.32143 (1) obj. -15763 iterations 2
Cbc0038I Pass  20: suminf.    0.76684 (3) obj. -14495.9 iterations 6
Cbc0038I Pass  21: suminf.    0.31778 (2) obj. -14495.9 iterations 3
Cbc0038I Pass  22: suminf.    0.80821 (2) obj. -14495.9 iterations 9
Cbc0038I Pass  23: suminf.    0.26014 (2) obj. -14495.9 iterations 4
Cbc0038I Pass  24: suminf.    0.36106 (3) obj. -14495.9 iterations 3
Cbc0038I Pass  25: suminf.    0.26014 (2) obj. -14495.9 iterations 4
Cbc0038I Pass  26: suminf.    1.16679 (5) obj. -14495.9 iterations 11
Cbc0038I Pass  27: suminf.    0.44000 (1) obj. -14964.5 iterations 8
Cbc0038I Pass  28: suminf.    0.01719 (1) obj. -14495.9 iterations 7
Cbc0038I Pass  29: suminf.    0.73201 (2) obj. -15334.3 iterations 2
Cbc0038I Pass  30: suminf.    0.01719 (1) obj. -14495.9 iterations 2
Cbc0038I Rounding solution of -14419.2 is better than previous of -14330.2

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -14419.2 to -14519.7 (0.02 seconds)
Cbc0038I Round again with cutoff of -14813.1
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.10833 (1) obj. -14813.1 iterations 0
Cbc0038I Pass  31: suminf.    0.32143 (1) obj. -15763 iterations 1
Cbc0038I Pass  32: suminf.    0.52120 (3) obj. -14813.1 iterations 4
Cbc0038I Pass  33: suminf.    0.37500 (2) obj. -15159 iterations 6
Cbc0038I Pass  34: suminf.    0.59547 (3) obj. -14813.1 iterations 11
Cbc0038I Pass  35: suminf.    0.60886 (4) obj. -14813.1 iterations 10
Cbc0038I Pass  36: suminf.    0.08836 (1) obj. -14813.1 iterations 9
Cbc0038I Pass  37: suminf.    0.73201 (2) obj. -15334.3 iterations 2
Cbc0038I Pass  38: suminf.    0.08836 (1) obj. -14813.1 iterations 2
Cbc0038I Pass  39: suminf.    0.86447 (3) obj. -14813.1 iterations 10
Cbc0038I Pass  40: suminf.    1.23963 (5) obj. -14813.1 iterations 7
Cbc0038I Pass  41: suminf.    0.62463 (2) obj. -14813.1 iterations 12
Cbc0038I Pass  42: suminf.    0.62463 (2) obj. -14813.1 iterations 2
Cbc0038I Pass  43: suminf.    0.48860 (1) obj. -14813.1 iterations 3
Cbc0038I Pass  44: suminf.    0.36387 (2) obj. -15652.8 iterations 3
Cbc0038I Pass  45: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I Pass  46: suminf.    0.58262 (2) obj. -14813.1 iterations 12
Cbc0038I Pass  47: suminf.    0.47217 (1) obj. -14813.1 iterations 5
Cbc0038I Pass  48: suminf.    0.48649 (1) obj. -15037 iterations 1
Cbc0038I Pass  49: suminf.    0.31828 (3) obj. -15281.7 iterations 5
Cbc0038I Pass  50: suminf.    0.31828 (3) obj. -15281.7 iterations 0
Cbc0038I Pass  51: suminf.    0.33733 (3) obj. -14813.1 iterations 4
Cbc0038I Pass  52: suminf.    0.33733 (3) obj. -14813.1 iterations 0
Cbc0038I Pass  53: suminf.    0.55367 (2) obj. -14813.1 iterations 3
Cbc0038I Pass  54: suminf.    0.48860 (1) obj. -14813.1 iterations 2
Cbc0038I Pass  55: suminf.    0.36387 (2) obj. -15652.8 iterations 3
Cbc0038I Pass  56: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I Pass  57: suminf.    0.62463 (2) obj. -14813.1 iterations 0
Cbc0038I Pass  58: suminf.    0.62463 (2) obj. -14813.1 iterations 5
Cbc0038I Pass  59: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14519.7 - took 0.02 seconds
Cbc0012I Integer solution of -14519.74 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 61 columns, reduced to 2 rows 2 columns
Cbc0031I 4 added rows had average density of 7.75
Cbc0013I At root node, 11 cuts changed objective from -15986.467 to -14519.74 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 3.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -14519.74, took 54 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 105 (-47) columns and 1595 (-1708) elements
Clp1000I sum of infeasibilities 3.62877e-08 - average 3.94432e-10, 101 fixed columns
Coin0506I Presolve 3 (-89) rows, 4 (-101) columns and 10 (-1585) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 15968.467
Clp0000I Optimal - objective value 15968.467
Coin0511I After Postsolve, objective 15968.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.1858156 - largest nonzero change 1.4585176e-05 ( 0.00076683715%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16030.144
Clp0000I Optimal - objective value 16030.144
Clp0000I Optimal - objective value 16030.144
Coin0511I After Postsolve, objective 16030.144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16030.14377 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 106 columns (106 integer (106 of which binary)) and 1630 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.790%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 1.64854
Cbc0038I Pass   1: suminf.    1.09575 (23) obj. -14360.7 iterations 11
Cbc0038I Pass   2: suminf.    0.25634 (8) obj. -14338.9 iterations 15
Cbc0038I Solution found of -14330.2
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 106 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14498.9
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.13780 (24) obj. -14498.9 iterations 3
Cbc0038I Pass   4: suminf.    0.21941 (7) obj. -14498.9 iterations 17
Cbc0038I Pass   5: suminf.    0.32143 (1) obj. -15763 iterations 10
Cbc0038I Pass   6: suminf.    0.03784 (1) obj. -14498.9 iterations 1
Cbc0038I Pass   7: suminf.    0.40529 (6) obj. -14498.9 iterations 13
Cbc0038I Pass   8: suminf.    0.25914 (5) obj. -14498.9 iterations 5
Cbc0038I Pass   9: suminf.    0.32143 (1) obj. -15760 iterations 6
Cbc0038I Pass  10: suminf.    0.03851 (1) obj. -14498.9 iterations 1
Cbc0038I Pass  11: suminf.    2.07776 (17) obj. -14498.9 iterations 21
Cbc0038I Pass  12: suminf.    0.58634 (12) obj. -14498.9 iterations 10
Cbc0038I Pass  13: suminf.    0.32143 (1) obj. -15760 iterations 16
Cbc0038I Pass  14: suminf.    0.03851 (1) obj. -14498.9 iterations 2
Cbc0038I Pass  15: suminf.    1.17483 (5) obj. -14498.9 iterations 14
Cbc0038I Pass  16: suminf.    0.69848 (3) obj. -14498.9 iterations 5
Cbc0038I Pass  17: suminf.    0.41074 (1) obj. -14498.9 iterations 2
Cbc0038I Pass  18: suminf.    0.31828 (3) obj. -15269.7 iterations 3
Cbc0038I Pass  19: suminf.    0.10599 (3) obj. -14498.9 iterations 6
Cbc0038I Pass  20: suminf.    0.10599 (3) obj. -14498.9 iterations 0
Cbc0038I Pass  21: suminf.    0.31828 (3) obj. -15269.7 iterations 9
Cbc0038I Pass  22: suminf.    0.53011 (6) obj. -14498.9 iterations 16
Cbc0038I Pass  23: suminf.    0.40697 (7) obj. -14498.9 iterations 5
Cbc0038I Pass  24: suminf.    0.81757 (2) obj. -14498.9 iterations 9
Cbc0038I Pass  25: suminf.    0.27667 (2) obj. -14498.9 iterations 3
Cbc0038I Pass  26: suminf.    1.40311 (10) obj. -14498.9 iterations 12
Cbc0038I Pass  27: suminf.    0.50736 (6) obj. -14498.9 iterations 6
Cbc0038I Pass  28: suminf.    0.45438 (6) obj. -14498.9 iterations 2
Cbc0038I Pass  29: suminf.    1.05145 (11) obj. -14498.9 iterations 10
Cbc0038I Pass  30: suminf.    0.42252 (10) obj. -14498.9 iterations 4
Cbc0038I Pass  31: suminf.    0.32143 (1) obj. -15752 iterations 13
Cbc0038I Pass  32: suminf.    0.04031 (1) obj. -14498.9 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 106 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -14330.2 to -14519.7 (0.05 seconds)
Cbc0038I Round again with cutoff of -14819.2
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.23522 (24) obj. -14819.2 iterations 0
Cbc0038I Pass  33: suminf.    0.32143 (1) obj. -15763 iterations 27
Cbc0038I Pass  34: suminf.    0.10969 (1) obj. -14819.2 iterations 1
Cbc0038I Pass  35: suminf.    0.37188 (8) obj. -14819.2 iterations 12
Cbc0038I Pass  36: suminf.    0.29175 (5) obj. -14819.2 iterations 7
Cbc0038I Pass  37: suminf.    0.32143 (1) obj. -15762 iterations 6
Cbc0038I Pass  38: suminf.    0.10991 (1) obj. -14819.2 iterations 1
Cbc0038I Pass  39: suminf.    0.99567 (8) obj. -14819.2 iterations 16
Cbc0038I Pass  40: suminf.    0.21663 (5) obj. -14819.2 iterations 6
Cbc0038I Pass  41: suminf.    0.73201 (2) obj. -15315.3 iterations 6
Cbc0038I Pass  42: suminf.    0.09398 (1) obj. -14819.2 iterations 2
Cbc0038I Pass  43: suminf.    0.09398 (1) obj. -14819.2 iterations 0
Cbc0038I Pass  44: suminf.    0.75659 (6) obj. -14819.2 iterations 14
Cbc0038I Pass  45: suminf.    0.63620 (4) obj. -14819.2 iterations 3
Cbc0038I Pass  46: suminf.    0.48649 (1) obj. -15020 iterations 4
Cbc0038I Pass  47: suminf.    0.47643 (1) obj. -14819.2 iterations 1
Cbc0038I Pass  48: suminf.    1.77044 (9) obj. -14819.2 iterations 16
Cbc0038I Pass  49: suminf.    0.29291 (6) obj. -14819.2 iterations 8
Cbc0038I Pass  50: suminf.    0.29291 (6) obj. -14819.2 iterations 0
Cbc0038I Pass  51: suminf.    0.73201 (2) obj. -15314.3 iterations 7
Cbc0038I Pass  52: suminf.    0.09420 (1) obj. -14819.2 iterations 2
Cbc0038I Pass  53: suminf.    0.09420 (1) obj. -14819.2 iterations 0
Cbc0038I Pass  54: suminf.    0.79222 (4) obj. -15029.8 iterations 23
Cbc0038I Pass  55: suminf.    0.62695 (3) obj. -14819.2 iterations 9
Cbc0038I Pass  56: suminf.    0.48649 (1) obj. -15017 iterations 3
Cbc0038I Pass  57: suminf.    0.47698 (1) obj. -14819.2 iterations 1
Cbc0038I Pass  58: suminf.    1.65985 (10) obj. -14819.2 iterations 20
Cbc0038I Pass  59: suminf.    0.15674 (4) obj. -14819.2 iterations 9
Cbc0038I Pass  60: suminf.    0.15674 (4) obj. -14819.2 iterations 0
Cbc0038I Pass  61: suminf.    0.73201 (2) obj. -15314.3 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 106 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14519.7 - took 0.03 seconds
Cbc0012I Integer solution of -14519.74 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 106 columns, reduced to 2 rows 2 columns
Cbc0031I 18 added rows had average density of 8.1666667
Cbc0013I At root node, 18 cuts changed objective from -16016.815 to -15062.379 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 217 row cuts average 6.4 elements, 20 column cuts (20 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 71 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14519.74, took 176 iterations and 2 nodes (0.21 seconds)
Cbc0032I Strong branching done 12 times (77 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.22

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 61 (-17) columns and 330 (-123) elements
Clp1000I sum of infeasibilities 1.55051e-08 - average 1.44908e-10, 55 fixed columns
Coin0506I Presolve 5 (-102) rows, 6 (-55) columns and 16 (-314) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Coin0511I After Postsolve, objective 15986.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.35446509 - largest nonzero change 1.5018368e-05 ( 0.0011689744%) - largest zero change 2.8195251e-05
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Clp0000I Optimal - objective value 15986.467
Coin0511I After Postsolve, objective 15986.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15986.46723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 61 columns (60 integer (60 of which binary)) and 345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.508929
Cbc0038I Solution found of -14330.2
Cbc0038I Relaxing continuous gives -14330.2
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14495.9
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03716 (1) obj. -14495.9 iterations 9
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -15763 iterations 1
Cbc0038I Pass   3: suminf.    1.11106 (3) obj. -14495.9 iterations 9
Cbc0038I Pass   4: suminf.    0.31828 (3) obj. -15281.7 iterations 7
Cbc0038I Pass   5: suminf.    0.10290 (3) obj. -14495.9 iterations 8
Cbc0038I Pass   6: suminf.    0.10290 (3) obj. -14495.9 iterations 0
Cbc0038I Pass   7: suminf.    0.31828 (3) obj. -15281.7 iterations 8
Cbc0038I Pass   8: suminf.    1.25345 (5) obj. -14495.9 iterations 7
Cbc0038I Pass   9: suminf.    0.41352 (1) obj. -14495.9 iterations 9
Cbc0038I Pass  10: suminf.    0.31828 (3) obj. -15281.7 iterations 3
Cbc0038I Pass  11: suminf.    0.10290 (3) obj. -14495.9 iterations 7
Cbc0038I Pass  12: suminf.    0.10290 (3) obj. -14495.9 iterations 0
Cbc0038I Pass  13: suminf.    0.31828 (3) obj. -15281.7 iterations 7
Cbc0038I Pass  14: suminf.    0.56115 (2) obj. -15053.5 iterations 11
Cbc0038I Pass  15: suminf.    0.41361 (1) obj. -14495.9 iterations 7
Cbc0038I Pass  16: suminf.    0.48649 (1) obj. -15037 iterations 1
Cbc0038I Pass  17: suminf.    1.14935 (4) obj. -14495.9 iterations 15
Cbc0038I Pass  18: suminf.    0.03716 (1) obj. -14495.9 iterations 14
Cbc0038I Pass  19: suminf.    0.32143 (1) obj. -15763 iterations 2
Cbc0038I Pass  20: suminf.    0.76684 (3) obj. -14495.9 iterations 6
Cbc0038I Pass  21: suminf.    0.31778 (2) obj. -14495.9 iterations 3
Cbc0038I Pass  22: suminf.    0.80821 (2) obj. -14495.9 iterations 9
Cbc0038I Pass  23: suminf.    0.26014 (2) obj. -14495.9 iterations 4
Cbc0038I Pass  24: suminf.    0.36106 (3) obj. -14495.9 iterations 3
Cbc0038I Pass  25: suminf.    0.26014 (2) obj. -14495.9 iterations 4
Cbc0038I Pass  26: suminf.    1.16679 (5) obj. -14495.9 iterations 11
Cbc0038I Pass  27: suminf.    0.44000 (1) obj. -14964.5 iterations 8
Cbc0038I Pass  28: suminf.    0.01719 (1) obj. -14495.9 iterations 7
Cbc0038I Pass  29: suminf.    0.73201 (2) obj. -15334.3 iterations 2
Cbc0038I Pass  30: suminf.    0.01719 (1) obj. -14495.9 iterations 2
Cbc0038I Rounding solution of -14419.2 is better than previous of -14330.2

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -14419.2 to -14519.7 (0.02 seconds)
Cbc0038I Round again with cutoff of -14813.1
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.10833 (1) obj. -14813.1 iterations 0
Cbc0038I Pass  31: suminf.    0.32143 (1) obj. -15763 iterations 1
Cbc0038I Pass  32: suminf.    0.52120 (3) obj. -14813.1 iterations 4
Cbc0038I Pass  33: suminf.    0.37500 (2) obj. -15159 iterations 6
Cbc0038I Pass  34: suminf.    0.59547 (3) obj. -14813.1 iterations 11
Cbc0038I Pass  35: suminf.    0.60886 (4) obj. -14813.1 iterations 10
Cbc0038I Pass  36: suminf.    0.08836 (1) obj. -14813.1 iterations 9
Cbc0038I Pass  37: suminf.    0.73201 (2) obj. -15334.3 iterations 2
Cbc0038I Pass  38: suminf.    0.08836 (1) obj. -14813.1 iterations 2
Cbc0038I Pass  39: suminf.    0.86447 (3) obj. -14813.1 iterations 10
Cbc0038I Pass  40: suminf.    1.23963 (5) obj. -14813.1 iterations 7
Cbc0038I Pass  41: suminf.    0.62463 (2) obj. -14813.1 iterations 12
Cbc0038I Pass  42: suminf.    0.62463 (2) obj. -14813.1 iterations 2
Cbc0038I Pass  43: suminf.    0.48860 (1) obj. -14813.1 iterations 3
Cbc0038I Pass  44: suminf.    0.36387 (2) obj. -15652.8 iterations 3
Cbc0038I Pass  45: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I Pass  46: suminf.    0.58262 (2) obj. -14813.1 iterations 12
Cbc0038I Pass  47: suminf.    0.47217 (1) obj. -14813.1 iterations 5
Cbc0038I Pass  48: suminf.    0.48649 (1) obj. -15037 iterations 1
Cbc0038I Pass  49: suminf.    0.31828 (3) obj. -15281.7 iterations 5
Cbc0038I Pass  50: suminf.    0.31828 (3) obj. -15281.7 iterations 0
Cbc0038I Pass  51: suminf.    0.33733 (3) obj. -14813.1 iterations 4
Cbc0038I Pass  52: suminf.    0.33733 (3) obj. -14813.1 iterations 0
Cbc0038I Pass  53: suminf.    0.55367 (2) obj. -14813.1 iterations 3
Cbc0038I Pass  54: suminf.    0.48860 (1) obj. -14813.1 iterations 2
Cbc0038I Pass  55: suminf.    0.36387 (2) obj. -15652.8 iterations 3
Cbc0038I Pass  56: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I Pass  57: suminf.    0.62463 (2) obj. -14813.1 iterations 0
Cbc0038I Pass  58: suminf.    0.62463 (2) obj. -14813.1 iterations 5
Cbc0038I Pass  59: suminf.    0.62463 (2) obj. -14813.1 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14519.7 - took 0.02 seconds
Cbc0012I Integer solution of -14519.74 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 104 rows 61 columns, reduced to 2 rows 2 columns
Cbc0031I 4 added rows had average density of 7.75
Cbc0013I At root node, 11 cuts changed objective from -15986.467 to -14519.74 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 3.0 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -14519.74, took 54 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-75) rows, 93 (-60) columns and 1356 (-1948) elements
Clp1000I sum of infeasibilities 1.78637e-09 - average 2.23296e-11, 89 fixed columns
Coin0506I Presolve 3 (-77) rows, 4 (-89) columns and 10 (-1346) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 15979.467
Clp0000I Optimal - objective value 15979.467
Coin0511I After Postsolve, objective 15979.467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.5532396 - largest nonzero change 1.6413516e-05 ( 0.00086296483%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16030.144
Clp0000I Optimal - objective value 16030.144
Clp0000I Optimal - objective value 16030.144
Coin0511I After Postsolve, objective 16030.144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16030.14377 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 100 columns (100 integer (100 of which binary)) and 1408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.532%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 1.85298
Cbc0038I Pass   1: suminf.    1.29485 (23) obj. -14360.4 iterations 11
Cbc0038I Solution found of -14330.2
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 100 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -14498.9
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.33870 (24) obj. -14498.9 iterations 3
Cbc0038I Pass   3: suminf.    0.35918 (2) obj. -15763.9 iterations 26
Cbc0038I Pass   4: suminf.    0.06726 (2) obj. -14498.9 iterations 1
Cbc0038I Pass   5: suminf.    0.32143 (1) obj. -15763 iterations 3
Cbc0038I Pass   6: suminf.    0.03783 (1) obj. -14498.9 iterations 1
Cbc0038I Pass   7: suminf.    1.21514 (6) obj. -14498.9 iterations 13
Cbc0038I Pass   8: suminf.    0.94142 (5) obj. -14498.9 iterations 7
Cbc0038I Pass   9: suminf.    0.40214 (2) obj. -15105 iterations 10
Cbc0038I Solution found of -14517.7
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 100 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -14517.7 to -14519.7 (0.04 seconds)
Cbc0038I Round again with cutoff of -14819.1
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  10: suminf.    1.44009 (24) obj. -14819.1 iterations 0
Cbc0038I Pass  11: suminf.    0.94133 (12) obj. -15852.3 iterations 17
Cbc0038I Pass  12: suminf.    0.54609 (11) obj. -14819.1 iterations 12
Cbc0038I Pass  13: suminf.    0.32143 (1) obj. -15763 iterations 14
Cbc0038I Pass  14: suminf.    0.10967 (1) obj. -14819.1 iterations 1
Cbc0038I Pass  15: suminf.    1.88905 (18) obj. -14819.1 iterations 25
Cbc0038I Pass  16: suminf.    0.85415 (14) obj. -14819.1 iterations 9
Cbc0038I Pass  17: suminf.    0.32143 (1) obj. -15758 iterations 16
Cbc0038I Pass  18: suminf.    0.11080 (1) obj. -14819.1 iterations 1
Cbc0038I Pass  19: suminf.    0.90740 (6) obj. -14819.1 iterations 13
Cbc0038I Pass  20: suminf.    0.54912 (6) obj. -15291.2 iterations 7
Cbc0038I Pass  21: suminf.    0.64609 (2) obj. -14819.1 iterations 7
Cbc0038I Pass  22: suminf.    0.64609 (2) obj. -14819.1 iterations 0
Cbc0038I Pass  23: suminf.    0.49082 (1) obj. -14819.1 iterations 2
Cbc0038I Pass  24: suminf.    0.36387 (2) obj. -15646 iterations 2
Cbc0038I Pass  25: suminf.    2.36049 (9) obj. -14819.1 iterations 17
Cbc0038I Pass  26: suminf.    1.34087 (7) obj. -14819.1 iterations 12
Cbc0038I Pass  27: suminf.    0.83875 (7) obj. -14819.1 iterations 3
Cbc0038I Pass  28: suminf.    0.11192 (1) obj. -14819.1 iterations 7
Cbc0038I Pass  29: suminf.    0.11192 (1) obj. -14819.1 iterations 0
Cbc0038I Pass  30: suminf.    0.32143 (1) obj. -15753 iterations 2
Cbc0038I Pass  31: suminf.    0.79168 (4) obj. -14819.1 iterations 10
Cbc0038I Pass  32: suminf.    0.52808 (3) obj. -15745.5 iterations 2
Cbc0038I Pass  33: suminf.    0.16791 (2) obj. -14819.1 iterations 2
Cbc0038I Pass  34: suminf.    0.73201 (2) obj. -15311.3 iterations 3
Cbc0038I Pass  35: suminf.    0.09487 (1) obj. -14819.1 iterations 2
Cbc0038I Pass  36: suminf.    0.09487 (1) obj. -14819.1 iterations 0
Cbc0038I Pass  37: suminf.    0.48649 (1) obj. -15017 iterations 12
Cbc0038I Pass  38: suminf.    0.48649 (1) obj. -15017 iterations 3
Cbc0038I Pass  39: suminf.    0.47697 (1) obj. -14819.1 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 100 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14519.7 - took 0.03 seconds
Cbc0012I Integer solution of -14519.74 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 84 rows 100 columns, reduced to 2 rows 2 columns
Cbc0031I 20 added rows had average density of 6.9
Cbc0013I At root node, 20 cuts changed objective from -16016.534 to -15015.973 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 209 row cuts average 6.4 elements, 19 column cuts (19 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 25.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0001I Search completed - best objective -14519.74, took 189 iterations and 2 nodes (0.20 seconds)
Cbc0032I Strong branching done 12 times (81 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.20

