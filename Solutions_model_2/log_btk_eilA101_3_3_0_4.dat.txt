Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 144 (-61) rows, 79 (-24) columns and 440 (-163) elements
Clp1000I sum of infeasibilities 2.67315e-07 - average 1.85635e-09, 64 fixed columns
Coin0506I Presolve 14 (-130) rows, 15 (-64) columns and 52 (-388) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 24183.619
Clp0000I Optimal - objective value 24183.619
Coin0511I After Postsolve, objective 24183.619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9526287 - largest nonzero change 1.2527913e-05 ( 0.0012527913%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 24183.619
Clp0000I Optimal - objective value 24183.619
Clp0000I Optimal - objective value 24183.619
Coin0511I After Postsolve, objective 24183.619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24183.61918 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 144 rows, 79 columns (78 integer (78 of which binary)) and 440 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.42555
Cbc0038I Pass   1: suminf.    0.50947 (3) obj. -21341 iterations 17
Cbc0038I Pass   2: suminf.    0.35556 (2) obj. -21001.4 iterations 1
Cbc0038I Solution found of -18387.3
Cbc0038I Relaxing continuous gives -18387.3
Cbc0038I Rounding solution of -19727.2 is better than previous of -18387.3

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 144 rows 79 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -19727.2 to -20840.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -21174.5
Cbc0038I Pass   3: suminf.    0.50947 (3) obj. -21341 iterations 0
Cbc0038I Pass   4: suminf.    0.43402 (3) obj. -21174.5 iterations 2
Cbc0038I Pass   5: suminf.    0.51832 (2) obj. -21174.5 iterations 11
Cbc0038I Pass   6: suminf.    0.00334 (1) obj. -21174.5 iterations 1
Cbc0038I Solution found of -21193.1
Cbc0038I Relaxing continuous gives -21193.1
Cbc0038I Rounding solution of -21577.2 is better than previous of -21193.1

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 144 rows 79 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -21577.2 to -23643 (0.01 seconds)
Cbc0038I Round again with cutoff of -23751.1
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass   7: suminf.    1.57638 (5) obj. -23751.1 iterations 2
Cbc0038I Pass   8: suminf.    0.91531 (3) obj. -23751.1 iterations 7
Cbc0038I Pass   9: suminf.    0.89946 (3) obj. -23751.1 iterations 4
Cbc0038I Pass  10: suminf.    0.91531 (3) obj. -23751.1 iterations 9
Cbc0038I Pass  11: suminf.    2.67537 (9) obj. -23751.1 iterations 6
Cbc0038I Pass  12: suminf.    0.91364 (4) obj. -23751.1 iterations 10
Cbc0038I Pass  13: suminf.    1.15312 (4) obj. -23751.1 iterations 16
Cbc0038I Pass  14: suminf.    4.42352 (10) obj. -23751.1 iterations 13
Cbc0038I Pass  15: suminf.    4.42352 (10) obj. -23751.1 iterations 6
Cbc0038I Pass  16: suminf.    1.58874 (5) obj. -23751.1 iterations 10
Cbc0038I Pass  17: suminf.    0.91531 (3) obj. -23751.1 iterations 7
Cbc0038I Pass  18: suminf.    0.89946 (3) obj. -23751.1 iterations 4
Cbc0038I Pass  19: suminf.    0.91531 (3) obj. -23751.1 iterations 9
Cbc0038I Pass  20: suminf.    0.97674 (8) obj. -23751.1 iterations 13
Cbc0038I Pass  21: suminf.    1.38188 (4) obj. -23751.1 iterations 11
Cbc0038I Pass  22: suminf.    1.41429 (3) obj. -23835.1 iterations 12
Cbc0038I Pass  23: suminf.    1.23568 (5) obj. -23751.1 iterations 14
Cbc0038I Pass  24: suminf.    1.16718 (4) obj. -23751.1 iterations 4
Cbc0038I Pass  25: suminf.    0.91531 (3) obj. -23751.1 iterations 11
Cbc0038I Pass  26: suminf.    0.94822 (4) obj. -23751.1 iterations 8
Cbc0038I Pass  27: suminf.    2.63372 (10) obj. -23751.1 iterations 8
Cbc0038I Pass  28: suminf.    0.91364 (4) obj. -23751.1 iterations 11
Cbc0038I Pass  29: suminf.    0.89946 (3) obj. -23751.1 iterations 4
Cbc0038I Pass  30: suminf.    0.91531 (3) obj. -23751.1 iterations 9
Cbc0038I Pass  31: suminf.    1.39999 (5) obj. -23751.1 iterations 8
Cbc0038I Pass  32: suminf.    0.91531 (3) obj. -23751.1 iterations 10
Cbc0038I Pass  33: suminf.    2.27001 (9) obj. -23751.1 iterations 12
Cbc0038I Pass  34: suminf.    0.79022 (11) obj. -23751.1 iterations 13
Cbc0038I Pass  35: suminf.    0.79022 (11) obj. -23751.1 iterations 0
Cbc0038I Pass  36: suminf.    1.02809 (3) obj. -23751.1 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 144 rows 79 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23643 - took 0.02 seconds
Cbc0012I Integer solution of -23642.994 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 144 rows 79 columns, reduced to 13 rows 12 columns
Cbc0031I 8 added rows had average density of 19.75
Cbc0013I At root node, 8 cuts changed objective from -24183.619 to -23801.827 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 36 row cuts average 2.6 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23642.994, took 178 iterations and 4 nodes (0.07 seconds)
Cbc0032I Strong branching done 68 times (226 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-94) rows, 122 (-80) columns and 1953 (-3700) elements
Clp1000I sum of infeasibilities 2.94962e-06 - average 2.68147e-08, 105 fixed columns
Coin0506I Presolve 13 (-97) rows, 17 (-105) columns and 56 (-1897) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 24159.619
Clp0000I Optimal - objective value 24159.619
Coin0511I After Postsolve, objective 24159.619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8378101 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 24218.984
Clp0000I Optimal - objective value 24218.984
Clp0000I Optimal - objective value 24218.984
Coin0511I After Postsolve, objective 24218.984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24218.98359 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 122 columns (122 integer (122 of which binary)) and 1955 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.059%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.26123
Cbc0038I Pass   1: suminf.    2.94781 (27) obj. -20579.1 iterations 20
Cbc0038I Pass   2: suminf.    2.94781 (27) obj. -20579.1 iterations 1
Cbc0038I Solution found of -18415.4
Cbc0038I Rounding solution of -18608 is better than previous of -18415.4

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -18608 to -20840.2 (0.04 seconds)
Cbc0038I Round again with cutoff of -21177.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.24690 (32) obj. -21177.4 iterations 4
Cbc0038I Pass   4: suminf.    3.24690 (32) obj. -21177.4 iterations 0
Cbc0038I Pass   5: suminf.    1.52350 (14) obj. -21177.4 iterations 20
Cbc0038I Pass   6: suminf.    0.81055 (12) obj. -21229.4 iterations 2
Cbc0038I Solution found of -21218.2
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -21218.2 to -23643 (0.05 seconds)
Cbc0038I Round again with cutoff of -23756.9
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass   7: suminf.    4.54182 (34) obj. -23756.9 iterations 2
Cbc0038I Pass   8: suminf.    4.51279 (33) obj. -23756.9 iterations 3
Cbc0038I Pass   9: suminf.    1.85376 (13) obj. -23756.9 iterations 23
Cbc0038I Pass  10: suminf.    1.83014 (13) obj. -23756.9 iterations 3
Cbc0038I Pass  11: suminf.    1.12803 (6) obj. -23756.9 iterations 13
Cbc0038I Pass  12: suminf.    1.11843 (6) obj. -23756.9 iterations 8
Cbc0038I Pass  13: suminf.    0.90906 (3) obj. -23756.9 iterations 10
Cbc0038I Pass  14: suminf.    0.90525 (3) obj. -23756.9 iterations 7
Cbc0038I Pass  15: suminf.    2.52711 (17) obj. -23756.9 iterations 22
Cbc0038I Pass  16: suminf.    2.08588 (9) obj. -23756.9 iterations 11
Cbc0038I Pass  17: suminf.    1.99518 (10) obj. -23756.9 iterations 5
Cbc0038I Pass  18: suminf.    0.92162 (4) obj. -23756.9 iterations 20
Cbc0038I Pass  19: suminf.    0.92162 (4) obj. -23756.9 iterations 2
Cbc0038I Pass  20: suminf.    1.19632 (4) obj. -23756.9 iterations 10
Cbc0038I Pass  21: suminf.    1.19632 (4) obj. -23756.9 iterations 5
Cbc0038I Pass  22: suminf.    2.91746 (13) obj. -23756.9 iterations 14
Cbc0038I Pass  23: suminf.    2.91746 (13) obj. -23756.9 iterations 7
Cbc0038I Pass  24: suminf.    3.53076 (8) obj. -23756.9 iterations 13
Cbc0038I Pass  25: suminf.    3.53076 (8) obj. -23756.9 iterations 0
Cbc0038I Pass  26: suminf.    1.57704 (5) obj. -23756.9 iterations 8
Cbc0038I Pass  27: suminf.    0.92622 (4) obj. -23756.9 iterations 6
Cbc0038I Pass  28: suminf.    0.92622 (4) obj. -23756.9 iterations 3
Cbc0038I Pass  29: suminf.    1.19902 (4) obj. -23756.9 iterations 10
Cbc0038I Pass  30: suminf.    1.19902 (4) obj. -23756.9 iterations 6
Cbc0038I Pass  31: suminf.    0.92622 (4) obj. -23756.9 iterations 9
Cbc0038I Pass  32: suminf.    0.50448 (8) obj. -23756.9 iterations 14
Cbc0038I Pass  33: suminf.    0.32548 (5) obj. -23756.9 iterations 14
Cbc0038I Pass  34: suminf.    0.78909 (5) obj. -23756.9 iterations 9
Cbc0038I Pass  35: suminf.    0.68802 (4) obj. -23756.9 iterations 2
Cbc0038I Pass  36: suminf.    0.05656 (2) obj. -23756.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -23643 - took 0.05 seconds
Cbc0012I Integer solution of -23642.994 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 14 rows 15 columns
Cbc0031I 7 added rows had average density of 25.571429
Cbc0013I At root node, 7 cuts changed objective from -24183.332 to -23855.293 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 59 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23642.994, took 222 iterations and 4 nodes (0.11 seconds)
Cbc0032I Strong branching done 50 times (263 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 57 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 144 (-61) rows, 79 (-24) columns and 440 (-163) elements
Clp1000I sum of infeasibilities 2.67315e-07 - average 1.85635e-09, 64 fixed columns
Coin0506I Presolve 14 (-130) rows, 15 (-64) columns and 52 (-388) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 24183.619
Clp0000I Optimal - objective value 24183.619
Coin0511I After Postsolve, objective 24183.619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9526287 - largest nonzero change 1.2527913e-05 ( 0.0012527913%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 24183.619
Clp0000I Optimal - objective value 24183.619
Clp0000I Optimal - objective value 24183.619
Coin0511I After Postsolve, objective 24183.619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24183.61918 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 144 rows, 79 columns (78 integer (78 of which binary)) and 440 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.42555
Cbc0038I Pass   1: suminf.    0.50947 (3) obj. -21341 iterations 17
Cbc0038I Pass   2: suminf.    0.35556 (2) obj. -21001.4 iterations 1
Cbc0038I Solution found of -18387.3
Cbc0038I Relaxing continuous gives -18387.3
Cbc0038I Rounding solution of -19727.2 is better than previous of -18387.3

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 144 rows 79 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -19727.2 to -20840.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -21174.5
Cbc0038I Pass   3: suminf.    0.50947 (3) obj. -21341 iterations 0
Cbc0038I Pass   4: suminf.    0.43402 (3) obj. -21174.5 iterations 2
Cbc0038I Pass   5: suminf.    0.51832 (2) obj. -21174.5 iterations 11
Cbc0038I Pass   6: suminf.    0.00334 (1) obj. -21174.5 iterations 1
Cbc0038I Solution found of -21193.1
Cbc0038I Relaxing continuous gives -21193.1
Cbc0038I Rounding solution of -21577.2 is better than previous of -21193.1

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 144 rows 79 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -21577.2 to -23643 (0.02 seconds)
Cbc0038I Round again with cutoff of -23751.1
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass   7: suminf.    1.57638 (5) obj. -23751.1 iterations 2
Cbc0038I Pass   8: suminf.    0.91531 (3) obj. -23751.1 iterations 7
Cbc0038I Pass   9: suminf.    0.89946 (3) obj. -23751.1 iterations 4
Cbc0038I Pass  10: suminf.    0.91531 (3) obj. -23751.1 iterations 9
Cbc0038I Pass  11: suminf.    2.67537 (9) obj. -23751.1 iterations 6
Cbc0038I Pass  12: suminf.    0.91364 (4) obj. -23751.1 iterations 10
Cbc0038I Pass  13: suminf.    1.15312 (4) obj. -23751.1 iterations 16
Cbc0038I Pass  14: suminf.    4.42352 (10) obj. -23751.1 iterations 13
Cbc0038I Pass  15: suminf.    4.42352 (10) obj. -23751.1 iterations 6
Cbc0038I Pass  16: suminf.    1.58874 (5) obj. -23751.1 iterations 10
Cbc0038I Pass  17: suminf.    0.91531 (3) obj. -23751.1 iterations 7
Cbc0038I Pass  18: suminf.    0.89946 (3) obj. -23751.1 iterations 4
Cbc0038I Pass  19: suminf.    0.91531 (3) obj. -23751.1 iterations 9
Cbc0038I Pass  20: suminf.    0.97674 (8) obj. -23751.1 iterations 13
Cbc0038I Pass  21: suminf.    1.38188 (4) obj. -23751.1 iterations 11
Cbc0038I Pass  22: suminf.    1.41429 (3) obj. -23835.1 iterations 12
Cbc0038I Pass  23: suminf.    1.23568 (5) obj. -23751.1 iterations 14
Cbc0038I Pass  24: suminf.    1.16718 (4) obj. -23751.1 iterations 4
Cbc0038I Pass  25: suminf.    0.91531 (3) obj. -23751.1 iterations 11
Cbc0038I Pass  26: suminf.    0.94822 (4) obj. -23751.1 iterations 8
Cbc0038I Pass  27: suminf.    2.63372 (10) obj. -23751.1 iterations 8
Cbc0038I Pass  28: suminf.    0.91364 (4) obj. -23751.1 iterations 11
Cbc0038I Pass  29: suminf.    0.89946 (3) obj. -23751.1 iterations 4
Cbc0038I Pass  30: suminf.    0.91531 (3) obj. -23751.1 iterations 9
Cbc0038I Pass  31: suminf.    1.39999 (5) obj. -23751.1 iterations 8
Cbc0038I Pass  32: suminf.    0.91531 (3) obj. -23751.1 iterations 10
Cbc0038I Pass  33: suminf.    2.27001 (9) obj. -23751.1 iterations 12
Cbc0038I Pass  34: suminf.    0.79022 (11) obj. -23751.1 iterations 13
Cbc0038I Pass  35: suminf.    0.79022 (11) obj. -23751.1 iterations 0
Cbc0038I Pass  36: suminf.    1.02809 (3) obj. -23751.1 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 144 rows 79 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23643 - took 0.02 seconds
Cbc0012I Integer solution of -23642.994 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 144 rows 79 columns, reduced to 13 rows 12 columns
Cbc0031I 8 added rows had average density of 19.75
Cbc0013I At root node, 8 cuts changed objective from -24183.619 to -23801.827 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 36 row cuts average 2.6 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23642.994, took 178 iterations and 4 nodes (0.07 seconds)
Cbc0032I Strong branching done 68 times (226 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-95) rows, 122 (-81) columns and 1953 (-3701) elements
Clp1000I sum of infeasibilities 2.94962e-06 - average 2.68147e-08, 105 fixed columns
Coin0506I Presolve 13 (-97) rows, 17 (-105) columns and 56 (-1897) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 24159.619
Clp0000I Optimal - objective value 24159.619
Coin0511I After Postsolve, objective 24159.619, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8378101 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 24218.984
Clp0000I Optimal - objective value 24218.984
Clp0000I Optimal - objective value 24218.984
Coin0511I After Postsolve, objective 24218.984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 24218.98359 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 122 columns (122 integer (122 of which binary)) and 1955 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.059%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.26123
Cbc0038I Pass   1: suminf.    2.94781 (27) obj. -20579.1 iterations 20
Cbc0038I Pass   2: suminf.    2.94781 (27) obj. -20579.1 iterations 1
Cbc0038I Solution found of -18415.4
Cbc0038I Rounding solution of -18608 is better than previous of -18415.4

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -18608 to -20840.2 (0.04 seconds)
Cbc0038I Round again with cutoff of -21177.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.24690 (32) obj. -21177.4 iterations 4
Cbc0038I Pass   4: suminf.    3.24690 (32) obj. -21177.4 iterations 0
Cbc0038I Pass   5: suminf.    1.52350 (14) obj. -21177.4 iterations 20
Cbc0038I Pass   6: suminf.    0.81055 (12) obj. -21229.4 iterations 2
Cbc0038I Solution found of -21218.2
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -21218.2 to -23643 (0.05 seconds)
Cbc0038I Round again with cutoff of -23756.9
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass   7: suminf.    4.54182 (34) obj. -23756.9 iterations 2
Cbc0038I Pass   8: suminf.    4.51279 (33) obj. -23756.9 iterations 3
Cbc0038I Pass   9: suminf.    1.85376 (13) obj. -23756.9 iterations 23
Cbc0038I Pass  10: suminf.    1.83014 (13) obj. -23756.9 iterations 3
Cbc0038I Pass  11: suminf.    1.12803 (6) obj. -23756.9 iterations 13
Cbc0038I Pass  12: suminf.    1.11843 (6) obj. -23756.9 iterations 8
Cbc0038I Pass  13: suminf.    0.90906 (3) obj. -23756.9 iterations 10
Cbc0038I Pass  14: suminf.    0.90525 (3) obj. -23756.9 iterations 7
Cbc0038I Pass  15: suminf.    2.52711 (17) obj. -23756.9 iterations 22
Cbc0038I Pass  16: suminf.    2.08588 (9) obj. -23756.9 iterations 11
Cbc0038I Pass  17: suminf.    1.99518 (10) obj. -23756.9 iterations 5
Cbc0038I Pass  18: suminf.    0.92162 (4) obj. -23756.9 iterations 20
Cbc0038I Pass  19: suminf.    0.92162 (4) obj. -23756.9 iterations 2
Cbc0038I Pass  20: suminf.    1.19632 (4) obj. -23756.9 iterations 10
Cbc0038I Pass  21: suminf.    1.19632 (4) obj. -23756.9 iterations 5
Cbc0038I Pass  22: suminf.    2.91746 (13) obj. -23756.9 iterations 14
Cbc0038I Pass  23: suminf.    2.91746 (13) obj. -23756.9 iterations 7
Cbc0038I Pass  24: suminf.    3.53076 (8) obj. -23756.9 iterations 13
Cbc0038I Pass  25: suminf.    3.53076 (8) obj. -23756.9 iterations 0
Cbc0038I Pass  26: suminf.    1.57704 (5) obj. -23756.9 iterations 8
Cbc0038I Pass  27: suminf.    0.92622 (4) obj. -23756.9 iterations 6
Cbc0038I Pass  28: suminf.    0.92622 (4) obj. -23756.9 iterations 3
Cbc0038I Pass  29: suminf.    1.19902 (4) obj. -23756.9 iterations 10
Cbc0038I Pass  30: suminf.    1.19902 (4) obj. -23756.9 iterations 6
Cbc0038I Pass  31: suminf.    0.92622 (4) obj. -23756.9 iterations 9
Cbc0038I Pass  32: suminf.    0.50448 (8) obj. -23756.9 iterations 14
Cbc0038I Pass  33: suminf.    0.32548 (5) obj. -23756.9 iterations 14
Cbc0038I Pass  34: suminf.    0.78909 (5) obj. -23756.9 iterations 9
Cbc0038I Pass  35: suminf.    0.68802 (4) obj. -23756.9 iterations 2
Cbc0038I Pass  36: suminf.    0.05656 (2) obj. -23756.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 122 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -23643 - took 0.04 seconds
Cbc0012I Integer solution of -23642.994 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 110 rows 122 columns, reduced to 14 rows 15 columns
Cbc0031I 7 added rows had average density of 25.571429
Cbc0013I At root node, 7 cuts changed objective from -24183.332 to -23855.293 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 59 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23642.994, took 222 iterations and 4 nodes (0.11 seconds)
Cbc0032I Strong branching done 50 times (263 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 57 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

