Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 59 (-16) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 18 (-2) rows, 12 (-1) columns and 53 (-6) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 54.19357
Clp0000I Optimal - objective value 54.19357
Coin0511I After Postsolve, objective 54.19357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.19357
Clp0000I Optimal - objective value 54.19357
Clp0000I Optimal - objective value 54.19357
Coin0511I After Postsolve, objective 54.19357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.19356961 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 13 columns (12 integer (12 of which binary)) and 60 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.692%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.94218
Cbc0038I Solution found of -19.4114
Cbc0038I Relaxing continuous gives -19.4114
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 14 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -19.4114 to -27.442 (0.00 seconds)
Cbc0038I Round again with cutoff of -29.9437
Cbc0038I Pass   1: suminf.    0.52268 (4) obj. -29.9437 iterations 5
Cbc0038I Pass   2: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass   3: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass   4: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass   5: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass   6: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass   7: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass   8: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass   9: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  10: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  11: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  12: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass  13: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass  14: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass  15: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  16: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  17: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  18: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass  19: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass  20: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass  21: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  22: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  23: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  24: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass  25: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass  26: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass  27: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  28: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  29: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  30: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -27.442 - took 0.01 seconds
Cbc0012I Integer solution of -27.442 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 13 columns, reduced to 14 rows 8 columns
Cbc0012I Integer solution of -28.136 found by DiveCoefficient after 25 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 4.6666667
Cbc0013I At root node, 3 cuts changed objective from -52.458409 to -28.136 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.2 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.136, took 25 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-8) rows, 24 (-2) columns and 125 (-28) elements
Clp1000I sum of infeasibilities 4.23459e-09 - average 2.11729e-10, 1 fixed columns
Coin0506I Presolve 19 (-1) rows, 23 (-1) columns and 111 (-14) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 1.912149 - largest nonzero change 2.2054206e-05 ( 0.0013047287%) - largest zero change 2.7097691e-05
Clp0000I Optimal - objective value 60.422397
Clp0000I Optimal - objective value 60.422397
Coin0511I After Postsolve, objective 60.422397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.422397
Clp0000I Optimal - objective value 60.422397
Clp0000I Optimal - objective value 60.422397
Coin0511I After Postsolve, objective 60.422397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.42239684 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 24 columns (24 integer (24 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.40209
Cbc0038I Pass   1: suminf.    1.40209 (8) obj. -43.7803 iterations 3
Cbc0038I Solution found of 8.5886
Cbc0038I Rounding solution of -19.4114 is better than previous of 8.5886

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -21.8484
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.40209 (8) obj. -43.7803 iterations 0
Cbc0038I Pass   3: suminf.    0.42803 (2) obj. -21.8484 iterations 8
Cbc0038I Pass   4: suminf.    0.18750 (1) obj. -26.6071 iterations 2
Cbc0038I Pass   5: suminf.    0.44033 (1) obj. -21.8484 iterations 2
Cbc0038I Pass   6: suminf.    1.29457 (4) obj. -21.8484 iterations 9
Cbc0038I Pass   7: suminf.    0.70800 (3) obj. -21.8484 iterations 3
Cbc0038I Pass   8: suminf.    0.66536 (3) obj. -23.1243 iterations 1
Cbc0038I Pass   9: suminf.    0.57648 (2) obj. -21.8484 iterations 4
Cbc0038I Pass  10: suminf.    0.53595 (2) obj. -22.2537 iterations 2
Cbc0038I Pass  11: suminf.    1.36182 (6) obj. -21.8484 iterations 5
Cbc0038I Pass  12: suminf.    0.90093 (5) obj. -30.2417 iterations 2
Cbc0038I Pass  13: suminf.    0.90093 (5) obj. -23.2417 iterations 1
Cbc0038I Pass  14: suminf.    0.59385 (3) obj. -21.8484 iterations 6
Cbc0038I Pass  15: suminf.    0.28094 (1) obj. -21.8484 iterations 10
Cbc0038I Pass  16: suminf.    0.18750 (1) obj. -23.6071 iterations 2
Cbc0038I Pass  17: suminf.    0.28094 (1) obj. -21.8484 iterations 3
Cbc0038I Pass  18: suminf.    1.16424 (4) obj. -21.8484 iterations 6
Cbc0038I Pass  19: suminf.    0.93993 (4) obj. -21.8484 iterations 2
Cbc0038I Pass  20: suminf.    0.79867 (3) obj. -21.8484 iterations 6
Cbc0038I Pass  21: suminf.    0.89655 (2) obj. -23.6404 iterations 4
Cbc0038I Pass  22: suminf.    0.90819 (4) obj. -21.8484 iterations 4
Cbc0038I Pass  23: suminf.    0.89516 (3) obj. -21.8484 iterations 1
Cbc0038I Pass  24: suminf.    0.89655 (2) obj. -23.6404 iterations 2
Cbc0038I Pass  25: suminf.    0.28094 (1) obj. -21.8484 iterations 3
Cbc0038I Pass  26: suminf.    0.18750 (1) obj. -23.6071 iterations 3
Cbc0038I Pass  27: suminf.    1.01388 (4) obj. -21.8484 iterations 8
Cbc0038I Pass  28: suminf.    0.31721 (3) obj. -21.8484 iterations 8
Cbc0038I Pass  29: suminf.    0.55861 (2) obj. -21.8484 iterations 3
Cbc0038I Pass  30: suminf.    0.49347 (1) obj. -21.8484 iterations 1
Cbc0038I Pass  31: suminf.    0.18750 (1) obj. -27.6071 iterations 3
Cbc0038I Rounding solution of -27.442 is better than previous of -19.4114

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.7097
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.40209 (8) obj. -43.7803 iterations 0
Cbc0038I Pass  32: suminf.    0.80052 (4) obj. -30.7097 iterations 7
Cbc0038I Pass  33: suminf.    0.72598 (3) obj. -30.7097 iterations 2
Cbc0038I Pass  34: suminf.    0.51158 (2) obj. -30.7097 iterations 2
Cbc0038I Pass  35: suminf.    0.18750 (1) obj. -33.6071 iterations 3
Cbc0038I Pass  36: suminf.    0.34144 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  37: suminf.    0.39457 (1) obj. -30.7097 iterations 1
Cbc0038I Pass  38: suminf.    0.18750 (1) obj. -34.6071 iterations 2
Cbc0038I Pass  39: suminf.    0.39457 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  40: suminf.    1.65312 (7) obj. -30.7097 iterations 10
Cbc0038I Pass  41: suminf.    1.65312 (7) obj. -30.7097 iterations 1
Cbc0038I Pass  42: suminf.    0.76335 (3) obj. -30.7097 iterations 12
Cbc0038I Pass  43: suminf.    0.71624 (4) obj. -30.7097 iterations 3
Cbc0038I Pass  44: suminf.    0.33190 (2) obj. -30.7097 iterations 3
Cbc0038I Pass  45: suminf.    0.18750 (1) obj. -33.6071 iterations 2
Cbc0038I Pass  46: suminf.    0.34144 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  47: suminf.    0.79906 (4) obj. -30.7097 iterations 11
Cbc0038I Pass  48: suminf.    0.68791 (5) obj. -30.7097 iterations 2
Cbc0038I Pass  49: suminf.    0.28656 (3) obj. -30.7097 iterations 5
Cbc0038I Pass  50: suminf.    0.19777 (2) obj. -30.7097 iterations 1
Cbc0038I Pass  51: suminf.    0.35219 (2) obj. -30.7097 iterations 2
Cbc0038I Pass  52: suminf.    1.28945 (8) obj. -30.7097 iterations 9
Cbc0038I Pass  53: suminf.    1.06056 (7) obj. -30.7097 iterations 3
Cbc0038I Pass  54: suminf.    0.87948 (4) obj. -30.7097 iterations 6
Cbc0038I Pass  55: suminf.    0.68295 (4) obj. -32.675 iterations 1
Cbc0038I Pass  56: suminf.    0.89789 (4) obj. -30.7097 iterations 6
Cbc0038I Pass  57: suminf.    0.18750 (1) obj. -32.6071 iterations 3
Cbc0038I Pass  58: suminf.    0.28831 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  59: suminf.    0.18750 (1) obj. -33.6071 iterations 4
Cbc0038I Pass  60: suminf.    0.18750 (1) obj. -33.6071 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -27.442 - took 0.01 seconds
Cbc0012I Integer solution of -27.442 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 24 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -28.136 found by DiveCoefficient after 13 iterations and 0 nodes (0.06 seconds)
Cbc0031I 1 added rows had average density of 6
Cbc0013I At root node, 1 cuts changed objective from -43.780333 to -28.136 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 2.2 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -28.136, took 13 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 59 (-16) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 18 (-2) rows, 12 (-1) columns and 53 (-6) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 54.19357
Clp0000I Optimal - objective value 54.19357
Coin0511I After Postsolve, objective 54.19357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.19357
Clp0000I Optimal - objective value 54.19357
Clp0000I Optimal - objective value 54.19357
Coin0511I After Postsolve, objective 54.19357, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.19356961 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 13 columns (12 integer (12 of which binary)) and 60 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.692%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.94218
Cbc0038I Solution found of -19.4114
Cbc0038I Relaxing continuous gives -19.4114
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 14 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -19.4114 to -27.442 (0.00 seconds)
Cbc0038I Round again with cutoff of -29.9437
Cbc0038I Pass   1: suminf.    0.52268 (4) obj. -29.9437 iterations 5
Cbc0038I Pass   2: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass   3: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass   4: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass   5: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass   6: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass   7: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass   8: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass   9: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  10: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  11: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  12: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass  13: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass  14: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass  15: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  16: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  17: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  18: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass  19: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass  20: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass  21: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  22: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  23: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  24: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I Pass  25: suminf.    0.50861 (2) obj. -29.9437 iterations 2
Cbc0038I Pass  26: suminf.    0.98248 (3) obj. -29.9437 iterations 7
Cbc0038I Pass  27: suminf.    0.13793 (2) obj. -29.9437 iterations 1
Cbc0038I Pass  28: suminf.    1.22794 (4) obj. -29.9437 iterations 4
Cbc0038I Pass  29: suminf.    1.20739 (5) obj. -29.9437 iterations 1
Cbc0038I Pass  30: suminf.    0.82759 (2) obj. -29.9437 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 13 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -27.442 - took 0.01 seconds
Cbc0012I Integer solution of -27.442 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 13 columns, reduced to 14 rows 8 columns
Cbc0012I Integer solution of -28.136 found by DiveCoefficient after 25 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 4.6666667
Cbc0013I At root node, 3 cuts changed objective from -52.458409 to -28.136 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.2 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.136, took 25 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 24 (-3) columns and 125 (-29) elements
Clp1000I sum of infeasibilities 4.23459e-09 - average 2.11729e-10, 1 fixed columns
Coin0506I Presolve 19 (-1) rows, 23 (-1) columns and 111 (-14) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 1.912149 - largest nonzero change 2.2054206e-05 ( 0.0013047287%) - largest zero change 2.7097691e-05
Clp0000I Optimal - objective value 60.422397
Clp0000I Optimal - objective value 60.422397
Coin0511I After Postsolve, objective 60.422397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.422397
Clp0000I Optimal - objective value 60.422397
Clp0000I Optimal - objective value 60.422397
Coin0511I After Postsolve, objective 60.422397, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.42239684 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 24 columns (24 integer (24 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.40209
Cbc0038I Pass   1: suminf.    1.40209 (8) obj. -43.7803 iterations 3
Cbc0038I Solution found of 8.5886
Cbc0038I Rounding solution of -19.4114 is better than previous of 8.5886

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -21.8484
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.40209 (8) obj. -43.7803 iterations 0
Cbc0038I Pass   3: suminf.    0.42803 (2) obj. -21.8484 iterations 8
Cbc0038I Pass   4: suminf.    0.18750 (1) obj. -26.6071 iterations 2
Cbc0038I Pass   5: suminf.    0.44033 (1) obj. -21.8484 iterations 2
Cbc0038I Pass   6: suminf.    1.29457 (4) obj. -21.8484 iterations 9
Cbc0038I Pass   7: suminf.    0.70800 (3) obj. -21.8484 iterations 3
Cbc0038I Pass   8: suminf.    0.66536 (3) obj. -23.1243 iterations 1
Cbc0038I Pass   9: suminf.    0.57648 (2) obj. -21.8484 iterations 4
Cbc0038I Pass  10: suminf.    0.53595 (2) obj. -22.2537 iterations 2
Cbc0038I Pass  11: suminf.    1.36182 (6) obj. -21.8484 iterations 5
Cbc0038I Pass  12: suminf.    0.90093 (5) obj. -30.2417 iterations 2
Cbc0038I Pass  13: suminf.    0.90093 (5) obj. -23.2417 iterations 1
Cbc0038I Pass  14: suminf.    0.59385 (3) obj. -21.8484 iterations 6
Cbc0038I Pass  15: suminf.    0.28094 (1) obj. -21.8484 iterations 10
Cbc0038I Pass  16: suminf.    0.18750 (1) obj. -23.6071 iterations 2
Cbc0038I Pass  17: suminf.    0.28094 (1) obj. -21.8484 iterations 3
Cbc0038I Pass  18: suminf.    1.16424 (4) obj. -21.8484 iterations 6
Cbc0038I Pass  19: suminf.    0.93993 (4) obj. -21.8484 iterations 2
Cbc0038I Pass  20: suminf.    0.79867 (3) obj. -21.8484 iterations 6
Cbc0038I Pass  21: suminf.    0.89655 (2) obj. -23.6404 iterations 4
Cbc0038I Pass  22: suminf.    0.90819 (4) obj. -21.8484 iterations 4
Cbc0038I Pass  23: suminf.    0.89516 (3) obj. -21.8484 iterations 1
Cbc0038I Pass  24: suminf.    0.89655 (2) obj. -23.6404 iterations 2
Cbc0038I Pass  25: suminf.    0.28094 (1) obj. -21.8484 iterations 3
Cbc0038I Pass  26: suminf.    0.18750 (1) obj. -23.6071 iterations 3
Cbc0038I Pass  27: suminf.    1.01388 (4) obj. -21.8484 iterations 8
Cbc0038I Pass  28: suminf.    0.31721 (3) obj. -21.8484 iterations 8
Cbc0038I Pass  29: suminf.    0.55861 (2) obj. -21.8484 iterations 3
Cbc0038I Pass  30: suminf.    0.49347 (1) obj. -21.8484 iterations 1
Cbc0038I Pass  31: suminf.    0.18750 (1) obj. -27.6071 iterations 3
Cbc0038I Rounding solution of -27.442 is better than previous of -19.4114

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.7097
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.40209 (8) obj. -43.7803 iterations 0
Cbc0038I Pass  32: suminf.    0.80052 (4) obj. -30.7097 iterations 7
Cbc0038I Pass  33: suminf.    0.72598 (3) obj. -30.7097 iterations 2
Cbc0038I Pass  34: suminf.    0.51158 (2) obj. -30.7097 iterations 2
Cbc0038I Pass  35: suminf.    0.18750 (1) obj. -33.6071 iterations 3
Cbc0038I Pass  36: suminf.    0.34144 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  37: suminf.    0.39457 (1) obj. -30.7097 iterations 1
Cbc0038I Pass  38: suminf.    0.18750 (1) obj. -34.6071 iterations 2
Cbc0038I Pass  39: suminf.    0.39457 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  40: suminf.    1.65312 (7) obj. -30.7097 iterations 10
Cbc0038I Pass  41: suminf.    1.65312 (7) obj. -30.7097 iterations 1
Cbc0038I Pass  42: suminf.    0.76335 (3) obj. -30.7097 iterations 12
Cbc0038I Pass  43: suminf.    0.71624 (4) obj. -30.7097 iterations 3
Cbc0038I Pass  44: suminf.    0.33190 (2) obj. -30.7097 iterations 3
Cbc0038I Pass  45: suminf.    0.18750 (1) obj. -33.6071 iterations 2
Cbc0038I Pass  46: suminf.    0.34144 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  47: suminf.    0.79906 (4) obj. -30.7097 iterations 11
Cbc0038I Pass  48: suminf.    0.68791 (5) obj. -30.7097 iterations 2
Cbc0038I Pass  49: suminf.    0.28656 (3) obj. -30.7097 iterations 5
Cbc0038I Pass  50: suminf.    0.19777 (2) obj. -30.7097 iterations 1
Cbc0038I Pass  51: suminf.    0.35219 (2) obj. -30.7097 iterations 2
Cbc0038I Pass  52: suminf.    1.28945 (8) obj. -30.7097 iterations 9
Cbc0038I Pass  53: suminf.    1.06056 (7) obj. -30.7097 iterations 3
Cbc0038I Pass  54: suminf.    0.87948 (4) obj. -30.7097 iterations 6
Cbc0038I Pass  55: suminf.    0.68295 (4) obj. -32.675 iterations 1
Cbc0038I Pass  56: suminf.    0.89789 (4) obj. -30.7097 iterations 6
Cbc0038I Pass  57: suminf.    0.18750 (1) obj. -32.6071 iterations 3
Cbc0038I Pass  58: suminf.    0.28831 (1) obj. -30.7097 iterations 2
Cbc0038I Pass  59: suminf.    0.18750 (1) obj. -33.6071 iterations 4
Cbc0038I Pass  60: suminf.    0.18750 (1) obj. -33.6071 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -27.442 - took 0.01 seconds
Cbc0012I Integer solution of -27.442 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 24 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -28.136 found by DiveCoefficient after 13 iterations and 0 nodes (0.05 seconds)
Cbc0031I 1 added rows had average density of 6
Cbc0013I At root node, 1 cuts changed objective from -43.780333 to -28.136 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 2.2 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -28.136, took 13 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.06

