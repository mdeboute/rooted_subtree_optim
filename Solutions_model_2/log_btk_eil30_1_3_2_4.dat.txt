Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-20) rows, 26 (-6) columns and 131 (-46) elements
Clp1000I sum of infeasibilities 4.12337e-05 - average 9.58923e-07, 5 fixed columns
Coin0506I Presolve 35 (-8) rows, 21 (-5) columns and 105 (-26) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 142.77745
Clp0000I Optimal - objective value 142.77745
Coin0511I After Postsolve, objective 142.77745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 142.77745
Clp0000I Optimal - objective value 142.77745
Clp0000I Optimal - objective value 142.77745
Coin0511I After Postsolve, objective 142.77745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.7774472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 26 columns (25 integer (25 of which binary)) and 132 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.33488
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -74.8392 iterations 12
Cbc0038I Solution found of -74.8392
Cbc0038I Relaxing continuous gives -74.8392
Cbc0038I Rounding solution of -84.3031 is better than previous of -74.8392

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -84.3031 to -85.4153 (0.01 seconds)
Cbc0038I Round again with cutoff of -90.8757
Cbc0038I Pass   2: suminf.    0.39419 (2) obj. -90.8757 iterations 1
Cbc0038I Pass   3: suminf.    0.45612 (2) obj. -90.8757 iterations 3
Cbc0038I Pass   4: suminf.    0.33534 (4) obj. -90.8757 iterations 3
Cbc0038I Pass   5: suminf.    1.82785 (4) obj. -90.8757 iterations 4
Cbc0038I Pass   6: suminf.    0.90764 (5) obj. -90.8757 iterations 3
Cbc0038I Pass   7: suminf.    0.35472 (2) obj. -90.8757 iterations 3
Cbc0038I Pass   8: suminf.    1.85185 (7) obj. -90.8757 iterations 5
Cbc0038I Pass   9: suminf.    0.40161 (2) obj. -90.8757 iterations 3
Cbc0038I Pass  10: suminf.    1.11652 (5) obj. -90.8757 iterations 3
Cbc0038I Pass  11: suminf.    1.46327 (8) obj. -90.8757 iterations 10
Cbc0038I Pass  12: suminf.    1.46327 (8) obj. -90.8757 iterations 0
Cbc0038I Pass  13: suminf.    1.50642 (7) obj. -90.8757 iterations 11
Cbc0038I Pass  14: suminf.    1.11413 (4) obj. -90.8757 iterations 4
Cbc0038I Pass  15: suminf.    1.81092 (7) obj. -90.8757 iterations 6
Cbc0038I Pass  16: suminf.    1.46307 (6) obj. -90.8757 iterations 2
Cbc0038I Pass  17: suminf.    1.43160 (5) obj. -90.8757 iterations 5
Cbc0038I Pass  18: suminf.    1.42510 (5) obj. -90.8757 iterations 1
Cbc0038I Pass  19: suminf.    1.28449 (5) obj. -90.8757 iterations 4
Cbc0038I Pass  20: suminf.    0.64349 (5) obj. -90.8757 iterations 2
Cbc0038I Pass  21: suminf.    0.64349 (5) obj. -90.8757 iterations 0
Cbc0038I Pass  22: suminf.    1.14384 (5) obj. -90.8757 iterations 6
Cbc0038I Pass  23: suminf.    1.14384 (5) obj. -90.8757 iterations 0
Cbc0038I Pass  24: suminf.    1.40771 (5) obj. -90.8757 iterations 6
Cbc0038I Pass  25: suminf.    0.88069 (6) obj. -90.8757 iterations 5
Cbc0038I Pass  26: suminf.    0.84806 (6) obj. -90.8757 iterations 3
Cbc0038I Pass  27: suminf.    0.85848 (5) obj. -90.8757 iterations 8
Cbc0038I Pass  28: suminf.    0.82344 (5) obj. -90.8757 iterations 2
Cbc0038I Pass  29: suminf.    0.89059 (5) obj. -90.8757 iterations 7
Cbc0038I Pass  30: suminf.    0.86603 (4) obj. -90.8757 iterations 5
Cbc0038I Pass  31: suminf.    0.83877 (4) obj. -90.8757 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -85.4153 to -87.5889 (0.02 seconds)
Cbc0038I Round again with cutoff of -100.704
Cbc0038I Pass  31: suminf.    0.64413 (3) obj. -100.704 iterations 1
Cbc0038I Pass  32: suminf.    0.61383 (5) obj. -100.704 iterations 4
Cbc0038I Pass  33: suminf.    0.61383 (5) obj. -100.704 iterations 0
Cbc0038I Pass  34: suminf.    1.86367 (5) obj. -100.704 iterations 4
Cbc0038I Pass  35: suminf.    0.59174 (5) obj. -100.704 iterations 1
Cbc0038I Pass  36: suminf.    0.81696 (3) obj. -100.704 iterations 6
Cbc0038I Pass  37: suminf.    0.81696 (3) obj. -100.704 iterations 1
Cbc0038I Pass  38: suminf.    0.86235 (5) obj. -100.704 iterations 5
Cbc0038I Pass  39: suminf.    0.54897 (2) obj. -100.704 iterations 3
Cbc0038I Pass  40: suminf.    0.90814 (7) obj. -100.704 iterations 5
Cbc0038I Pass  41: suminf.    0.88637 (6) obj. -100.704 iterations 2
Cbc0038I Pass  42: suminf.    0.76295 (4) obj. -100.704 iterations 8
Cbc0038I Pass  43: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  44: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  45: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I Pass  46: suminf.    0.63053 (5) obj. -100.704 iterations 0
Cbc0038I Pass  47: suminf.    0.76295 (4) obj. -100.704 iterations 7
Cbc0038I Pass  48: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  49: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  50: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I Pass  51: suminf.    0.63053 (5) obj. -100.704 iterations 0
Cbc0038I Pass  52: suminf.    0.76295 (4) obj. -100.704 iterations 7
Cbc0038I Pass  53: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  54: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  55: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I Pass  56: suminf.    0.63053 (5) obj. -100.704 iterations 0
Cbc0038I Pass  57: suminf.    0.76295 (4) obj. -100.704 iterations 7
Cbc0038I Pass  58: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  59: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  60: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -87.5889 - took 0.06 seconds
Cbc0012I Integer solution of -87.58887 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 26 columns, reduced to 30 rows 19 columns
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -140.01865 to -97.35143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 445 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 352 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -87.58887 best solution, best possible -97.351426 (1.30 seconds)
Cbc0004I Integer solution of -89.28673 found after 1559 iterations and 2 nodes (1.32 seconds)
Cbc0001I Search completed - best objective -89.28673000000001, took 1597 iterations and 4 nodes (1.32 seconds)
Cbc0032I Strong branching done 40 times (331 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-24) rows, 45 (-15) columns and 385 (-227) elements
Clp1000I sum of infeasibilities 9.6871e-08 - average 2.54924e-09, 28 fixed columns
Coin0506I Presolve 12 (-26) rows, 17 (-28) columns and 53 (-332) elements
Clp0006I 0  Obj 53.416232 Dual inf 2.0369343 (17)
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 2.058103 - largest nonzero change 2.3425158e-05 ( 0.0015420975%) - largest zero change 2.9871446e-05
Clp0000I Optimal - objective value 57.305812
Clp0000I Optimal - objective value 57.305812
Coin0511I After Postsolve, objective 57.305812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.305812 Dual inf 254.59136 (21)
Clp0014I Perturbing problem by 0.001% of 1.4193975 - largest nonzero change 2.1029396e-05 ( 0.0018056464%) - largest zero change 2.3064594e-05
Clp0000I Optimal - objective value 166.91358
Clp0000I Optimal - objective value 166.91358
Clp0000I Optimal - objective value 166.91358
Coin0511I After Postsolve, objective 166.91358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 166.913576 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 47 columns (47 integer (47 of which binary)) and 398 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.996%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 3.80919
Cbc0038I Pass   1: suminf.    2.00641 (11) obj. -128.243 iterations 12
Cbc0038I Pass   2: suminf.    2.00641 (11) obj. -128.243 iterations 1
Cbc0038I Solution found of -6.89817
Cbc0038I Rounding solution of -89.2867 is better than previous of -6.89817

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -93.4082
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.00641 (11) obj. -128.243 iterations 0
Cbc0038I Pass   4: suminf.    2.00641 (11) obj. -128.243 iterations 1
Cbc0038I Pass   5: suminf.    0.35348 (5) obj. -93.4082 iterations 24
Cbc0038I Pass   6: suminf.    0.35348 (5) obj. -93.4082 iterations 0
Cbc0038I Pass   7: suminf.    1.26594 (4) obj. -93.4082 iterations 8
Cbc0038I Pass   8: suminf.    0.41053 (2) obj. -100.861 iterations 2
Cbc0038I Pass   9: suminf.    0.31294 (3) obj. -93.4082 iterations 3
Cbc0038I Pass  10: suminf.    0.95777 (4) obj. -93.4082 iterations 3
Cbc0038I Pass  11: suminf.    0.65794 (3) obj. -93.4082 iterations 1
Cbc0038I Pass  12: suminf.    0.21053 (1) obj. -95.4679 iterations 2
Cbc0038I Pass  13: suminf.    1.99063 (7) obj. -93.4082 iterations 11
Cbc0038I Pass  14: suminf.    1.99063 (7) obj. -93.4082 iterations 1
Cbc0038I Pass  15: suminf.    0.77151 (3) obj. -93.4082 iterations 5
Cbc0038I Pass  16: suminf.    0.44779 (2) obj. -96.7979 iterations 1
Cbc0038I Pass  17: suminf.    0.48750 (2) obj. -93.4082 iterations 2
Cbc0038I Pass  18: suminf.    0.48750 (2) obj. -93.4082 iterations 0
Cbc0038I Pass  19: suminf.    0.48608 (2) obj. -93.4082 iterations 1
Cbc0038I Pass  20: suminf.    1.97096 (7) obj. -93.4082 iterations 10
Cbc0038I Pass  21: suminf.    1.84607 (6) obj. -93.4082 iterations 3
Cbc0038I Pass  22: suminf.    1.32514 (5) obj. -96.7354 iterations 1
Cbc0038I Pass  23: suminf.    1.41600 (6) obj. -93.4082 iterations 6
Cbc0038I Pass  24: suminf.    1.08155 (4) obj. -93.4082 iterations 3
Cbc0038I Pass  25: suminf.    1.08155 (4) obj. -93.4082 iterations 0
Cbc0038I Pass  26: suminf.    1.05229 (4) obj. -93.4082 iterations 1
Cbc0038I Pass  27: suminf.    1.05229 (4) obj. -93.4082 iterations 0
Cbc0038I Pass  28: suminf.    1.08155 (4) obj. -93.4082 iterations 3
Cbc0038I Pass  29: suminf.    1.87697 (6) obj. -93.4082 iterations 9
Cbc0038I Pass  30: suminf.    1.11375 (6) obj. -93.4082 iterations 6
Cbc0038I Pass  31: suminf.    1.15452 (4) obj. -93.4082 iterations 7
Cbc0038I Pass  32: suminf.    0.93944 (4) obj. -93.4082 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -89.2867 - took 0.01 seconds
Cbc0012I Integer solution of -89.28673 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 11.888889
Cbc0013I At root node, 32 cuts changed objective from -130.50032 to -88.002548 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 175 row cuts average 4.3 elements, 17 column cuts (17 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0001I Search completed - best objective -89.28673000000001, took 102 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-20) rows, 26 (-6) columns and 131 (-46) elements
Clp1000I sum of infeasibilities 4.12337e-05 - average 9.58923e-07, 5 fixed columns
Coin0506I Presolve 35 (-8) rows, 21 (-5) columns and 105 (-26) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 142.77745
Clp0000I Optimal - objective value 142.77745
Coin0511I After Postsolve, objective 142.77745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 142.77745
Clp0000I Optimal - objective value 142.77745
Clp0000I Optimal - objective value 142.77745
Coin0511I After Postsolve, objective 142.77745, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.7774472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 26 columns (25 integer (25 of which binary)) and 132 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.33488
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -74.8392 iterations 12
Cbc0038I Solution found of -74.8392
Cbc0038I Relaxing continuous gives -74.8392
Cbc0038I Rounding solution of -84.3031 is better than previous of -74.8392

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -84.3031 to -85.4153 (0.02 seconds)
Cbc0038I Round again with cutoff of -90.8757
Cbc0038I Pass   2: suminf.    0.39419 (2) obj. -90.8757 iterations 1
Cbc0038I Pass   3: suminf.    0.45612 (2) obj. -90.8757 iterations 3
Cbc0038I Pass   4: suminf.    0.33534 (4) obj. -90.8757 iterations 3
Cbc0038I Pass   5: suminf.    1.82785 (4) obj. -90.8757 iterations 4
Cbc0038I Pass   6: suminf.    0.90764 (5) obj. -90.8757 iterations 3
Cbc0038I Pass   7: suminf.    0.35472 (2) obj. -90.8757 iterations 3
Cbc0038I Pass   8: suminf.    1.85185 (7) obj. -90.8757 iterations 5
Cbc0038I Pass   9: suminf.    0.40161 (2) obj. -90.8757 iterations 3
Cbc0038I Pass  10: suminf.    1.11652 (5) obj. -90.8757 iterations 3
Cbc0038I Pass  11: suminf.    1.46327 (8) obj. -90.8757 iterations 10
Cbc0038I Pass  12: suminf.    1.46327 (8) obj. -90.8757 iterations 0
Cbc0038I Pass  13: suminf.    1.50642 (7) obj. -90.8757 iterations 11
Cbc0038I Pass  14: suminf.    1.11413 (4) obj. -90.8757 iterations 4
Cbc0038I Pass  15: suminf.    1.81092 (7) obj. -90.8757 iterations 6
Cbc0038I Pass  16: suminf.    1.46307 (6) obj. -90.8757 iterations 2
Cbc0038I Pass  17: suminf.    1.43160 (5) obj. -90.8757 iterations 5
Cbc0038I Pass  18: suminf.    1.42510 (5) obj. -90.8757 iterations 1
Cbc0038I Pass  19: suminf.    1.28449 (5) obj. -90.8757 iterations 4
Cbc0038I Pass  20: suminf.    0.64349 (5) obj. -90.8757 iterations 2
Cbc0038I Pass  21: suminf.    0.64349 (5) obj. -90.8757 iterations 0
Cbc0038I Pass  22: suminf.    1.14384 (5) obj. -90.8757 iterations 6
Cbc0038I Pass  23: suminf.    1.14384 (5) obj. -90.8757 iterations 0
Cbc0038I Pass  24: suminf.    1.40771 (5) obj. -90.8757 iterations 6
Cbc0038I Pass  25: suminf.    0.88069 (6) obj. -90.8757 iterations 5
Cbc0038I Pass  26: suminf.    0.84806 (6) obj. -90.8757 iterations 3
Cbc0038I Pass  27: suminf.    0.85848 (5) obj. -90.8757 iterations 8
Cbc0038I Pass  28: suminf.    0.82344 (5) obj. -90.8757 iterations 2
Cbc0038I Pass  29: suminf.    0.89059 (5) obj. -90.8757 iterations 7
Cbc0038I Pass  30: suminf.    0.86603 (4) obj. -90.8757 iterations 5
Cbc0038I Pass  31: suminf.    0.83877 (4) obj. -90.8757 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -85.4153 to -87.5889 (0.03 seconds)
Cbc0038I Round again with cutoff of -100.704
Cbc0038I Pass  31: suminf.    0.64413 (3) obj. -100.704 iterations 1
Cbc0038I Pass  32: suminf.    0.61383 (5) obj. -100.704 iterations 4
Cbc0038I Pass  33: suminf.    0.61383 (5) obj. -100.704 iterations 0
Cbc0038I Pass  34: suminf.    1.86367 (5) obj. -100.704 iterations 4
Cbc0038I Pass  35: suminf.    0.59174 (5) obj. -100.704 iterations 1
Cbc0038I Pass  36: suminf.    0.81696 (3) obj. -100.704 iterations 6
Cbc0038I Pass  37: suminf.    0.81696 (3) obj. -100.704 iterations 1
Cbc0038I Pass  38: suminf.    0.86235 (5) obj. -100.704 iterations 5
Cbc0038I Pass  39: suminf.    0.54897 (2) obj. -100.704 iterations 3
Cbc0038I Pass  40: suminf.    0.90814 (7) obj. -100.704 iterations 5
Cbc0038I Pass  41: suminf.    0.88637 (6) obj. -100.704 iterations 2
Cbc0038I Pass  42: suminf.    0.76295 (4) obj. -100.704 iterations 8
Cbc0038I Pass  43: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  44: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  45: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I Pass  46: suminf.    0.63053 (5) obj. -100.704 iterations 0
Cbc0038I Pass  47: suminf.    0.76295 (4) obj. -100.704 iterations 7
Cbc0038I Pass  48: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  49: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  50: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I Pass  51: suminf.    0.63053 (5) obj. -100.704 iterations 0
Cbc0038I Pass  52: suminf.    0.76295 (4) obj. -100.704 iterations 7
Cbc0038I Pass  53: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  54: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  55: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I Pass  56: suminf.    0.63053 (5) obj. -100.704 iterations 0
Cbc0038I Pass  57: suminf.    0.76295 (4) obj. -100.704 iterations 7
Cbc0038I Pass  58: suminf.    0.75442 (4) obj. -100.704 iterations 1
Cbc0038I Pass  59: suminf.    1.62903 (4) obj. -100.704 iterations 4
Cbc0038I Pass  60: suminf.    0.63053 (5) obj. -100.704 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -87.5889 - took 0.03 seconds
Cbc0012I Integer solution of -87.58887 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 43 rows 26 columns, reduced to 30 rows 19 columns
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -140.01865 to -97.35143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 445 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 352 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.781 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -87.58887 best solution, best possible -97.351426 (1.53 seconds)
Cbc0004I Integer solution of -89.28673 found after 1559 iterations and 2 nodes (1.54 seconds)
Cbc0001I Search completed - best objective -89.28673000000001, took 1597 iterations and 4 nodes (1.54 seconds)
Cbc0032I Strong branching done 40 times (331 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-25) rows, 45 (-16) columns and 385 (-228) elements
Clp1000I sum of infeasibilities 9.6871e-08 - average 2.54924e-09, 28 fixed columns
Coin0506I Presolve 12 (-26) rows, 17 (-28) columns and 53 (-332) elements
Clp0006I 0  Obj 53.416232 Dual inf 2.0369343 (17)
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 2.058103 - largest nonzero change 2.3425158e-05 ( 0.0015420975%) - largest zero change 2.9871446e-05
Clp0000I Optimal - objective value 57.305812
Clp0000I Optimal - objective value 57.305812
Coin0511I After Postsolve, objective 57.305812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.305812 Dual inf 254.59136 (21)
Clp0014I Perturbing problem by 0.001% of 1.4193975 - largest nonzero change 2.1029396e-05 ( 0.0018056464%) - largest zero change 2.3064594e-05
Clp0000I Optimal - objective value 166.91358
Clp0000I Optimal - objective value 166.91358
Clp0000I Optimal - objective value 166.91358
Coin0511I After Postsolve, objective 166.91358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 166.913576 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 47 columns (47 integer (47 of which binary)) and 398 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.996%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 3.80919
Cbc0038I Pass   1: suminf.    2.00641 (11) obj. -128.243 iterations 12
Cbc0038I Pass   2: suminf.    2.00641 (11) obj. -128.243 iterations 1
Cbc0038I Solution found of -6.89817
Cbc0038I Rounding solution of -89.2867 is better than previous of -6.89817

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -93.4082
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.00641 (11) obj. -128.243 iterations 0
Cbc0038I Pass   4: suminf.    2.00641 (11) obj. -128.243 iterations 1
Cbc0038I Pass   5: suminf.    0.35348 (5) obj. -93.4082 iterations 24
Cbc0038I Pass   6: suminf.    0.35348 (5) obj. -93.4082 iterations 0
Cbc0038I Pass   7: suminf.    1.26594 (4) obj. -93.4082 iterations 8
Cbc0038I Pass   8: suminf.    0.41053 (2) obj. -100.861 iterations 2
Cbc0038I Pass   9: suminf.    0.31294 (3) obj. -93.4082 iterations 3
Cbc0038I Pass  10: suminf.    0.95777 (4) obj. -93.4082 iterations 3
Cbc0038I Pass  11: suminf.    0.65794 (3) obj. -93.4082 iterations 1
Cbc0038I Pass  12: suminf.    0.21053 (1) obj. -95.4679 iterations 2
Cbc0038I Pass  13: suminf.    1.99063 (7) obj. -93.4082 iterations 11
Cbc0038I Pass  14: suminf.    1.99063 (7) obj. -93.4082 iterations 1
Cbc0038I Pass  15: suminf.    0.77151 (3) obj. -93.4082 iterations 5
Cbc0038I Pass  16: suminf.    0.44779 (2) obj. -96.7979 iterations 1
Cbc0038I Pass  17: suminf.    0.48750 (2) obj. -93.4082 iterations 2
Cbc0038I Pass  18: suminf.    0.48750 (2) obj. -93.4082 iterations 0
Cbc0038I Pass  19: suminf.    0.48608 (2) obj. -93.4082 iterations 1
Cbc0038I Pass  20: suminf.    1.97096 (7) obj. -93.4082 iterations 10
Cbc0038I Pass  21: suminf.    1.84607 (6) obj. -93.4082 iterations 3
Cbc0038I Pass  22: suminf.    1.32514 (5) obj. -96.7354 iterations 1
Cbc0038I Pass  23: suminf.    1.41600 (6) obj. -93.4082 iterations 6
Cbc0038I Pass  24: suminf.    1.08155 (4) obj. -93.4082 iterations 3
Cbc0038I Pass  25: suminf.    1.08155 (4) obj. -93.4082 iterations 0
Cbc0038I Pass  26: suminf.    1.05229 (4) obj. -93.4082 iterations 1
Cbc0038I Pass  27: suminf.    1.05229 (4) obj. -93.4082 iterations 0
Cbc0038I Pass  28: suminf.    1.08155 (4) obj. -93.4082 iterations 3
Cbc0038I Pass  29: suminf.    1.87697 (6) obj. -93.4082 iterations 9
Cbc0038I Pass  30: suminf.    1.11375 (6) obj. -93.4082 iterations 6
Cbc0038I Pass  31: suminf.    1.15452 (4) obj. -93.4082 iterations 7
Cbc0038I Pass  32: suminf.    0.93944 (4) obj. -93.4082 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 47 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -89.2867 - took 0.02 seconds
Cbc0012I Integer solution of -89.28673 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 11.888889
Cbc0013I At root node, 32 cuts changed objective from -130.50032 to -88.002548 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 175 row cuts average 4.3 elements, 17 column cuts (17 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0001I Search completed - best objective -89.28673000000001, took 102 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

