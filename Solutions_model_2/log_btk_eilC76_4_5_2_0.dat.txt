Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 1.14334e-08 - average 8.86308e-11, 11 fixed columns
Coin0506I Presolve 107 (-22) rows, 64 (-11) columns and 335 (-65) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 41.855432
Clp0000I Optimal - objective value 41.855432
Coin0511I After Postsolve, objective 41.855432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.855432
Clp0000I Optimal - objective value 41.855432
Clp0000I Optimal - objective value 41.855432
Coin0511I After Postsolve, objective 41.855432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.85543183 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 8.79816
Cbc0038I Solution found of 1.30563
Cbc0038I Relaxing continuous gives -6.56964
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 86 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -6.56964 to -14.5158 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.2499
Cbc0038I Pass   1: suminf.    2.50431 (41) obj. -17.2499 iterations 25
Cbc0038I Pass   2: suminf.    1.59355 (8) obj. -17.2499 iterations 46
Cbc0038I Pass   3: suminf.    1.51875 (7) obj. -17.2499 iterations 3
Cbc0038I Pass   4: suminf.    2.71549 (7) obj. -17.2499 iterations 14
Cbc0038I Pass   5: suminf.    0.79107 (6) obj. -17.2499 iterations 17
Cbc0038I Pass   6: suminf.    1.57040 (5) obj. -17.2499 iterations 12
Cbc0038I Pass   7: suminf.    1.45635 (5) obj. -17.2499 iterations 1
Cbc0038I Pass   8: suminf.    1.74624 (5) obj. -17.2499 iterations 9
Cbc0038I Pass   9: suminf.    1.45856 (5) obj. -17.2499 iterations 2
Cbc0038I Pass  10: suminf.    1.44361 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  11: suminf.    1.63193 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  12: suminf.    0.92339 (4) obj. -17.2499 iterations 1
Cbc0038I Pass  13: suminf.    0.83016 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  14: suminf.    1.27870 (5) obj. -17.2499 iterations 6
Cbc0038I Pass  15: suminf.    1.25179 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  16: suminf.    1.74624 (5) obj. -17.2499 iterations 9
Cbc0038I Pass  17: suminf.    1.45856 (5) obj. -17.2499 iterations 2
Cbc0038I Pass  18: suminf.    1.44361 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  19: suminf.    1.63193 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  20: suminf.    0.92339 (4) obj. -17.2499 iterations 1
Cbc0038I Pass  21: suminf.    0.83016 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  22: suminf.    1.27870 (5) obj. -17.2499 iterations 6
Cbc0038I Pass  23: suminf.    1.25179 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  24: suminf.    1.74624 (5) obj. -17.2499 iterations 9
Cbc0038I Pass  25: suminf.    1.45856 (5) obj. -17.2499 iterations 2
Cbc0038I Pass  26: suminf.    1.44361 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  27: suminf.    1.63193 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  28: suminf.    0.92339 (4) obj. -17.2499 iterations 1
Cbc0038I Pass  29: suminf.    0.83016 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  30: suminf.    1.27870 (5) obj. -17.2499 iterations 6
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -22.171
Cbc0038I Pass  30: suminf.    3.65821 (41) obj. -22.171 iterations 0
Cbc0038I Pass  31: suminf.    2.91888 (10) obj. -22.171 iterations 40
Cbc0038I Pass  32: suminf.    2.46719 (10) obj. -22.171 iterations 9
Cbc0038I Pass  33: suminf.    2.46719 (10) obj. -22.171 iterations 0
Cbc0038I Pass  34: suminf.    2.23990 (8) obj. -22.171 iterations 18
Cbc0038I Pass  35: suminf.    1.90359 (8) obj. -22.171 iterations 5
Cbc0038I Pass  36: suminf.    1.90359 (8) obj. -22.171 iterations 1
Cbc0038I Pass  37: suminf.    1.72683 (8) obj. -22.171 iterations 15
Cbc0038I Pass  38: suminf.    1.68595 (8) obj. -22.171 iterations 6
Cbc0038I Pass  39: suminf.    2.66364 (8) obj. -22.171 iterations 8
Cbc0038I Pass  40: suminf.    1.62769 (7) obj. -22.171 iterations 4
Cbc0038I Pass  41: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I Pass  42: suminf.    1.27013 (8) obj. -22.171 iterations 0
Cbc0038I Pass  43: suminf.    1.72683 (8) obj. -22.171 iterations 15
Cbc0038I Pass  44: suminf.    1.68595 (8) obj. -22.171 iterations 5
Cbc0038I Pass  45: suminf.    2.66364 (8) obj. -22.171 iterations 7
Cbc0038I Pass  46: suminf.    1.62769 (7) obj. -22.171 iterations 3
Cbc0038I Pass  47: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I Pass  48: suminf.    1.27013 (8) obj. -22.171 iterations 0
Cbc0038I Pass  49: suminf.    1.72683 (8) obj. -22.171 iterations 14
Cbc0038I Pass  50: suminf.    1.68595 (8) obj. -22.171 iterations 6
Cbc0038I Pass  51: suminf.    2.66364 (8) obj. -22.171 iterations 8
Cbc0038I Pass  52: suminf.    1.62769 (7) obj. -22.171 iterations 4
Cbc0038I Pass  53: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I Pass  54: suminf.    1.27013 (8) obj. -22.171 iterations 0
Cbc0038I Pass  55: suminf.    1.72683 (8) obj. -22.171 iterations 15
Cbc0038I Pass  56: suminf.    1.68595 (8) obj. -22.171 iterations 5
Cbc0038I Pass  57: suminf.    2.66364 (8) obj. -22.171 iterations 7
Cbc0038I Pass  58: suminf.    1.62769 (7) obj. -22.171 iterations 3
Cbc0038I Pass  59: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -14.5158 - took 0.11 seconds
Cbc0012I Integer solution of -14.51581 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 86 rows 52 columns
Cbc0031I 27 added rows had average density of 60.925926
Cbc0013I At root node, 27 cuts changed objective from -41.855432 to -33.181091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13893 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2241 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 195 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.51581 best solution, best possible -33.181091 (1.00 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 58 rows 36 columns
Cbc0001I Search completed - best objective -14.51581, took 11533 iterations and 70 nodes (1.34 seconds)
Cbc0032I Strong branching done 846 times (19669 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 32, 100 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 118 (-34) columns and 1922 (-1381) elements
Clp1000I sum of infeasibilities 4.69759e-08 - average 4.74504e-10, 20 fixed columns
Coin0506I Presolve 81 (-18) rows, 98 (-20) columns and 1359 (-563) elements
Clp0006I 0  Obj 42.630499 Dual inf 5.4968217 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.8533397 - largest nonzero change 2.7876633e-05 ( 0.0016580886%) - largest zero change 2.6218914e-05
Clp0000I Optimal - objective value 54.455907
Clp0000I Optimal - objective value 54.455907
Coin0511I After Postsolve, objective 54.455907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.455907
Clp0000I Optimal - objective value 54.455907
Clp0000I Optimal - objective value 54.455907
Clp0000I Optimal - objective value 54.455907
Coin0511I After Postsolve, objective 54.455907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.45590717 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 118 columns (118 integer (118 of which binary)) and 1924 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.426%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.76976
Cbc0038I Pass   1: suminf.    2.81525 (28) obj. -37.5466 iterations 18
Cbc0038I Pass   2: suminf.    1.29137 (15) obj. -23.406 iterations 13
Cbc0038I Pass   3: suminf.    0.28873 (5) obj. -12.624 iterations 10
Cbc0038I Solution found of -6.98414
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -10.2423
Cbc0038I Pass   4: suminf.    2.81525 (28) obj. -37.5466 iterations 0
Cbc0038I Pass   5: suminf.    1.40248 (16) obj. -25.1837 iterations 12
Cbc0038I Pass   6: suminf.    0.77386 (3) obj. -10.2423 iterations 28
Cbc0038I Pass   7: suminf.    0.84098 (5) obj. -10.788 iterations 8
Cbc0038I Pass   8: suminf.    0.69032 (4) obj. -10.8463 iterations 2
Cbc0038I Pass   9: suminf.    0.89163 (4) obj. -10.2423 iterations 10
Cbc0038I Pass  10: suminf.    1.07523 (12) obj. -10.2423 iterations 46
Cbc0038I Pass  11: suminf.    0.69492 (8) obj. -10.2423 iterations 17
Cbc0038I Pass  12: suminf.    1.06856 (6) obj. -10.2423 iterations 22
Cbc0038I Pass  13: suminf.    1.08385 (6) obj. -10.2423 iterations 3
Cbc0038I Pass  14: suminf.    1.19312 (5) obj. -10.2423 iterations 10
Cbc0038I Pass  15: suminf.    0.88183 (4) obj. -10.2423 iterations 8
Cbc0038I Pass  16: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  17: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  18: suminf.    0.84091 (4) obj. -10.2423 iterations 16
Cbc0038I Pass  19: suminf.    1.19312 (5) obj. -10.2423 iterations 6
Cbc0038I Pass  20: suminf.    0.88183 (4) obj. -10.2423 iterations 12
Cbc0038I Pass  21: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  22: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  23: suminf.    0.84091 (4) obj. -10.2423 iterations 11
Cbc0038I Pass  24: suminf.    1.19312 (5) obj. -10.2423 iterations 6
Cbc0038I Pass  25: suminf.    0.88183 (4) obj. -10.2423 iterations 13
Cbc0038I Pass  26: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  27: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  28: suminf.    0.84091 (4) obj. -10.2423 iterations 14
Cbc0038I Pass  29: suminf.    1.19312 (5) obj. -10.2423 iterations 6
Cbc0038I Pass  30: suminf.    0.88183 (4) obj. -10.2423 iterations 15
Cbc0038I Pass  31: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  32: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  33: suminf.    0.84091 (4) obj. -10.2423 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -6.98414 to -8.66429 (0.04 seconds)
Cbc0038I Round again with cutoff of -16.1069
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.81525 (28) obj. -37.5466 iterations 0
Cbc0038I Pass  34: suminf.    1.29137 (15) obj. -23.406 iterations 13
Cbc0038I Pass  35: suminf.    1.08631 (11) obj. -16.1069 iterations 31
Cbc0038I Pass  36: suminf.    1.08631 (11) obj. -16.1069 iterations 3
Cbc0038I Pass  37: suminf.    2.02588 (10) obj. -16.1069 iterations 15
Cbc0038I Pass  38: suminf.    1.44102 (10) obj. -16.1914 iterations 11
Cbc0038I Pass  39: suminf.    2.72444 (15) obj. -16.1069 iterations 12
Cbc0038I Pass  40: suminf.    1.70097 (15) obj. -16.1069 iterations 1
Cbc0038I Pass  41: suminf.    1.22652 (9) obj. -16.1069 iterations 10
Cbc0038I Pass  42: suminf.    2.01399 (14) obj. -16.1069 iterations 11
Cbc0038I Pass  43: suminf.    1.45144 (10) obj. -16.1069 iterations 5
Cbc0038I Pass  44: suminf.    3.05152 (16) obj. -16.1069 iterations 17
Cbc0038I Pass  45: suminf.    2.47775 (13) obj. -16.3343 iterations 5
Cbc0038I Pass  46: suminf.    2.14959 (12) obj. -16.1069 iterations 13
Cbc0038I Pass  47: suminf.    1.43307 (11) obj. -16.1069 iterations 7
Cbc0038I Pass  48: suminf.    1.14761 (9) obj. -16.1069 iterations 10
Cbc0038I Pass  49: suminf.    1.70859 (11) obj. -16.1069 iterations 8
Cbc0038I Pass  50: suminf.    2.09998 (15) obj. -16.1069 iterations 19
Cbc0038I Pass  51: suminf.    2.09998 (15) obj. -16.1069 iterations 2
Cbc0038I Pass  52: suminf.    1.81254 (13) obj. -16.1069 iterations 22
Cbc0038I Pass  53: suminf.    1.47933 (13) obj. -16.1069 iterations 4
Cbc0038I Pass  54: suminf.    1.80255 (16) obj. -16.1069 iterations 10
Cbc0038I Pass  55: suminf.    1.70074 (17) obj. -16.1069 iterations 2
Cbc0038I Pass  56: suminf.    1.80255 (16) obj. -16.1069 iterations 1
Cbc0038I Pass  57: suminf.    1.20505 (14) obj. -16.1069 iterations 15
Cbc0038I Pass  58: suminf.    0.72819 (12) obj. -16.1069 iterations 5
Cbc0038I Pass  59: suminf.    2.02454 (14) obj. -16.1069 iterations 14
Cbc0038I Pass  60: suminf.    2.02454 (14) obj. -16.1069 iterations 0
Cbc0038I Pass  61: suminf.    2.31069 (15) obj. -16.1069 iterations 9
Cbc0038I Pass  62: suminf.    2.31069 (15) obj. -16.1069 iterations 1
Cbc0038I Rounding solution of -11.6405 is better than previous of -8.66429

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 27 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -11.6405 to -12.6868 (0.09 seconds)
Cbc0038I Round again with cutoff of -23.1444
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.81525 (28) obj. -37.5466 iterations 0
Cbc0038I Pass  63: suminf.    1.54183 (14) obj. -23.1444 iterations 26
Cbc0038I Pass  64: suminf.    1.54183 (14) obj. -23.1444 iterations 0
Cbc0038I Pass  65: suminf.    1.50750 (12) obj. -23.1444 iterations 22
Cbc0038I Pass  66: suminf.    1.45812 (12) obj. -23.1444 iterations 8
Cbc0038I Pass  67: suminf.    1.50750 (12) obj. -23.1444 iterations 10
Cbc0038I Pass  68: suminf.    2.35356 (19) obj. -23.1444 iterations 38
Cbc0038I Pass  69: suminf.    2.35356 (19) obj. -23.1444 iterations 1
Cbc0038I Pass  70: suminf.    2.39098 (23) obj. -23.1444 iterations 22
Cbc0038I Pass  71: suminf.    2.13178 (20) obj. -23.1444 iterations 3
Cbc0038I Pass  72: suminf.    2.81708 (20) obj. -23.1444 iterations 22
Cbc0038I Pass  73: suminf.    2.66025 (20) obj. -23.1444 iterations 7
Cbc0038I Pass  74: suminf.    2.13310 (24) obj. -23.1444 iterations 9
Cbc0038I Pass  75: suminf.    2.13216 (20) obj. -23.1444 iterations 2
Cbc0038I Pass  76: suminf.    2.98838 (20) obj. -23.1444 iterations 9
Cbc0038I Pass  77: suminf.    3.26045 (21) obj. -23.1444 iterations 24
Cbc0038I Pass  78: suminf.    2.64265 (20) obj. -23.9494 iterations 10
Cbc0038I Pass  79: suminf.    2.44761 (19) obj. -23.1444 iterations 18
Cbc0038I Pass  80: suminf.    2.43274 (19) obj. -23.1593 iterations 6
Cbc0038I Pass  81: suminf.    2.48927 (24) obj. -23.1444 iterations 9
Cbc0038I Pass  82: suminf.    2.48927 (24) obj. -23.1444 iterations 0
Cbc0038I Pass  83: suminf.    2.81708 (20) obj. -23.1444 iterations 6
Cbc0038I Pass  84: suminf.    2.49028 (20) obj. -23.1444 iterations 9
Cbc0038I Pass  85: suminf.    2.30148 (24) obj. -23.1444 iterations 11
Cbc0038I Pass  86: suminf.    2.30148 (24) obj. -23.1444 iterations 0
Cbc0038I Pass  87: suminf.    4.48888 (26) obj. -23.1444 iterations 7
Cbc0038I Pass  88: suminf.    2.91695 (26) obj. -23.1444 iterations 6
Cbc0038I Pass  89: suminf.    2.77241 (20) obj. -23.1444 iterations 11
Cbc0038I Pass  90: suminf.    2.75500 (26) obj. -23.1444 iterations 11
Cbc0038I Pass  91: suminf.    2.61164 (20) obj. -23.1444 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -12.6868 - took 0.09 seconds
Cbc0012I Integer solution of -12.68683 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 99 rows 118 columns, reduced to 16 rows 22 columns
Cbc0031I 67 added rows had average density of 23.61194
Cbc0013I At root node, 67 cuts changed objective from -39.56529 to -19.595695 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14131 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1460 row cuts average 111.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 613 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1081 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.68683 best solution, best possible -19.595695 (2.39 seconds)
Cbc0012I Integer solution of -14.51581 found by rounding after 4601 iterations and 1 nodes (2.40 seconds)
Cbc0010I After 7 nodes, 6 on tree, -14.51581 best solution, best possible -18.620527 (3.11 seconds)
Cbc0001I Search completed - best objective -14.51581, took 5777 iterations and 18 nodes (3.24 seconds)
Cbc0032I Strong branching done 370 times (8372 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 8, 31 variables fixed on reduced cost
Total time (CPU seconds):       2.36   (Wallclock seconds):       3.26

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 75 (-3) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 1.14334e-08 - average 8.86308e-11, 11 fixed columns
Coin0506I Presolve 107 (-22) rows, 64 (-11) columns and 335 (-65) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 41.855432
Clp0000I Optimal - objective value 41.855432
Coin0511I After Postsolve, objective 41.855432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.855432
Clp0000I Optimal - objective value 41.855432
Clp0000I Optimal - objective value 41.855432
Coin0511I After Postsolve, objective 41.855432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.85543183 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 75 columns (74 integer (74 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.121%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 8.79816
Cbc0038I Solution found of 1.30563
Cbc0038I Relaxing continuous gives -6.56964
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 86 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -6.56964 to -14.5158 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.2499
Cbc0038I Pass   1: suminf.    2.50431 (41) obj. -17.2499 iterations 25
Cbc0038I Pass   2: suminf.    1.59355 (8) obj. -17.2499 iterations 46
Cbc0038I Pass   3: suminf.    1.51875 (7) obj. -17.2499 iterations 3
Cbc0038I Pass   4: suminf.    2.71549 (7) obj. -17.2499 iterations 14
Cbc0038I Pass   5: suminf.    0.79107 (6) obj. -17.2499 iterations 17
Cbc0038I Pass   6: suminf.    1.57040 (5) obj. -17.2499 iterations 12
Cbc0038I Pass   7: suminf.    1.45635 (5) obj. -17.2499 iterations 1
Cbc0038I Pass   8: suminf.    1.74624 (5) obj. -17.2499 iterations 9
Cbc0038I Pass   9: suminf.    1.45856 (5) obj. -17.2499 iterations 2
Cbc0038I Pass  10: suminf.    1.44361 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  11: suminf.    1.63193 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  12: suminf.    0.92339 (4) obj. -17.2499 iterations 1
Cbc0038I Pass  13: suminf.    0.83016 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  14: suminf.    1.27870 (5) obj. -17.2499 iterations 6
Cbc0038I Pass  15: suminf.    1.25179 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  16: suminf.    1.74624 (5) obj. -17.2499 iterations 9
Cbc0038I Pass  17: suminf.    1.45856 (5) obj. -17.2499 iterations 2
Cbc0038I Pass  18: suminf.    1.44361 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  19: suminf.    1.63193 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  20: suminf.    0.92339 (4) obj. -17.2499 iterations 1
Cbc0038I Pass  21: suminf.    0.83016 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  22: suminf.    1.27870 (5) obj. -17.2499 iterations 6
Cbc0038I Pass  23: suminf.    1.25179 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  24: suminf.    1.74624 (5) obj. -17.2499 iterations 9
Cbc0038I Pass  25: suminf.    1.45856 (5) obj. -17.2499 iterations 2
Cbc0038I Pass  26: suminf.    1.44361 (5) obj. -17.2499 iterations 1
Cbc0038I Pass  27: suminf.    1.63193 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  28: suminf.    0.92339 (4) obj. -17.2499 iterations 1
Cbc0038I Pass  29: suminf.    0.83016 (5) obj. -17.2499 iterations 10
Cbc0038I Pass  30: suminf.    1.27870 (5) obj. -17.2499 iterations 6
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -22.171
Cbc0038I Pass  30: suminf.    3.65821 (41) obj. -22.171 iterations 0
Cbc0038I Pass  31: suminf.    2.91888 (10) obj. -22.171 iterations 40
Cbc0038I Pass  32: suminf.    2.46719 (10) obj. -22.171 iterations 9
Cbc0038I Pass  33: suminf.    2.46719 (10) obj. -22.171 iterations 0
Cbc0038I Pass  34: suminf.    2.23990 (8) obj. -22.171 iterations 18
Cbc0038I Pass  35: suminf.    1.90359 (8) obj. -22.171 iterations 5
Cbc0038I Pass  36: suminf.    1.90359 (8) obj. -22.171 iterations 1
Cbc0038I Pass  37: suminf.    1.72683 (8) obj. -22.171 iterations 15
Cbc0038I Pass  38: suminf.    1.68595 (8) obj. -22.171 iterations 6
Cbc0038I Pass  39: suminf.    2.66364 (8) obj. -22.171 iterations 8
Cbc0038I Pass  40: suminf.    1.62769 (7) obj. -22.171 iterations 4
Cbc0038I Pass  41: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I Pass  42: suminf.    1.27013 (8) obj. -22.171 iterations 0
Cbc0038I Pass  43: suminf.    1.72683 (8) obj. -22.171 iterations 15
Cbc0038I Pass  44: suminf.    1.68595 (8) obj. -22.171 iterations 5
Cbc0038I Pass  45: suminf.    2.66364 (8) obj. -22.171 iterations 7
Cbc0038I Pass  46: suminf.    1.62769 (7) obj. -22.171 iterations 3
Cbc0038I Pass  47: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I Pass  48: suminf.    1.27013 (8) obj. -22.171 iterations 0
Cbc0038I Pass  49: suminf.    1.72683 (8) obj. -22.171 iterations 14
Cbc0038I Pass  50: suminf.    1.68595 (8) obj. -22.171 iterations 6
Cbc0038I Pass  51: suminf.    2.66364 (8) obj. -22.171 iterations 8
Cbc0038I Pass  52: suminf.    1.62769 (7) obj. -22.171 iterations 4
Cbc0038I Pass  53: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I Pass  54: suminf.    1.27013 (8) obj. -22.171 iterations 0
Cbc0038I Pass  55: suminf.    1.72683 (8) obj. -22.171 iterations 15
Cbc0038I Pass  56: suminf.    1.68595 (8) obj. -22.171 iterations 5
Cbc0038I Pass  57: suminf.    2.66364 (8) obj. -22.171 iterations 7
Cbc0038I Pass  58: suminf.    1.62769 (7) obj. -22.171 iterations 3
Cbc0038I Pass  59: suminf.    1.27013 (8) obj. -22.171 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 75 columns, reduced to 89 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -14.5158 - took 0.13 seconds
Cbc0012I Integer solution of -14.51581 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 86 rows 52 columns
Cbc0031I 27 added rows had average density of 60.925926
Cbc0013I At root node, 27 cuts changed objective from -41.855432 to -33.181091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13893 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2241 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 195 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.51581 best solution, best possible -33.181091 (1.26 seconds)
Cbc0038I Full problem 129 rows 75 columns, reduced to 58 rows 36 columns
Cbc0001I Search completed - best objective -14.51581, took 11533 iterations and 70 nodes (1.69 seconds)
Cbc0032I Strong branching done 846 times (19669 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 32, 100 variables fixed on reduced cost
Total time (CPU seconds):       1.61   (Wallclock seconds):       1.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 118 (-35) columns and 1922 (-1382) elements
Clp1000I sum of infeasibilities 4.69759e-08 - average 4.74504e-10, 20 fixed columns
Coin0506I Presolve 81 (-18) rows, 98 (-20) columns and 1359 (-563) elements
Clp0006I 0  Obj 42.630499 Dual inf 5.4968217 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.8533397 - largest nonzero change 2.7876633e-05 ( 0.0016580886%) - largest zero change 2.6218914e-05
Clp0000I Optimal - objective value 54.455907
Clp0000I Optimal - objective value 54.455907
Coin0511I After Postsolve, objective 54.455907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.455907
Clp0000I Optimal - objective value 54.455907
Clp0000I Optimal - objective value 54.455907
Clp0000I Optimal - objective value 54.455907
Coin0511I After Postsolve, objective 54.455907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.45590717 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 118 columns (118 integer (118 of which binary)) and 1924 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.426%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.76976
Cbc0038I Pass   1: suminf.    2.81525 (28) obj. -37.5466 iterations 18
Cbc0038I Pass   2: suminf.    1.29137 (15) obj. -23.406 iterations 13
Cbc0038I Pass   3: suminf.    0.28873 (5) obj. -12.624 iterations 10
Cbc0038I Solution found of -6.98414
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -10.2423
Cbc0038I Pass   4: suminf.    2.81525 (28) obj. -37.5466 iterations 0
Cbc0038I Pass   5: suminf.    1.40248 (16) obj. -25.1837 iterations 12
Cbc0038I Pass   6: suminf.    0.77386 (3) obj. -10.2423 iterations 28
Cbc0038I Pass   7: suminf.    0.84098 (5) obj. -10.788 iterations 8
Cbc0038I Pass   8: suminf.    0.69032 (4) obj. -10.8463 iterations 2
Cbc0038I Pass   9: suminf.    0.89163 (4) obj. -10.2423 iterations 10
Cbc0038I Pass  10: suminf.    1.07523 (12) obj. -10.2423 iterations 46
Cbc0038I Pass  11: suminf.    0.69492 (8) obj. -10.2423 iterations 17
Cbc0038I Pass  12: suminf.    1.06856 (6) obj. -10.2423 iterations 22
Cbc0038I Pass  13: suminf.    1.08385 (6) obj. -10.2423 iterations 3
Cbc0038I Pass  14: suminf.    1.19312 (5) obj. -10.2423 iterations 10
Cbc0038I Pass  15: suminf.    0.88183 (4) obj. -10.2423 iterations 8
Cbc0038I Pass  16: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  17: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  18: suminf.    0.84091 (4) obj. -10.2423 iterations 16
Cbc0038I Pass  19: suminf.    1.19312 (5) obj. -10.2423 iterations 6
Cbc0038I Pass  20: suminf.    0.88183 (4) obj. -10.2423 iterations 12
Cbc0038I Pass  21: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  22: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  23: suminf.    0.84091 (4) obj. -10.2423 iterations 11
Cbc0038I Pass  24: suminf.    1.19312 (5) obj. -10.2423 iterations 6
Cbc0038I Pass  25: suminf.    0.88183 (4) obj. -10.2423 iterations 13
Cbc0038I Pass  26: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  27: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  28: suminf.    0.84091 (4) obj. -10.2423 iterations 14
Cbc0038I Pass  29: suminf.    1.19312 (5) obj. -10.2423 iterations 6
Cbc0038I Pass  30: suminf.    0.88183 (4) obj. -10.2423 iterations 15
Cbc0038I Pass  31: suminf.    0.48591 (4) obj. -11.0342 iterations 1
Cbc0038I Pass  32: suminf.    1.08753 (5) obj. -10.2423 iterations 9
Cbc0038I Pass  33: suminf.    0.84091 (4) obj. -10.2423 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -6.98414 to -8.66429 (0.05 seconds)
Cbc0038I Round again with cutoff of -16.1069
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.81525 (28) obj. -37.5466 iterations 0
Cbc0038I Pass  34: suminf.    1.29137 (15) obj. -23.406 iterations 13
Cbc0038I Pass  35: suminf.    1.08631 (11) obj. -16.1069 iterations 31
Cbc0038I Pass  36: suminf.    1.08631 (11) obj. -16.1069 iterations 3
Cbc0038I Pass  37: suminf.    2.02588 (10) obj. -16.1069 iterations 15
Cbc0038I Pass  38: suminf.    1.44102 (10) obj. -16.1914 iterations 11
Cbc0038I Pass  39: suminf.    2.72444 (15) obj. -16.1069 iterations 12
Cbc0038I Pass  40: suminf.    1.70097 (15) obj. -16.1069 iterations 1
Cbc0038I Pass  41: suminf.    1.22652 (9) obj. -16.1069 iterations 10
Cbc0038I Pass  42: suminf.    2.01399 (14) obj. -16.1069 iterations 11
Cbc0038I Pass  43: suminf.    1.45144 (10) obj. -16.1069 iterations 5
Cbc0038I Pass  44: suminf.    3.05152 (16) obj. -16.1069 iterations 17
Cbc0038I Pass  45: suminf.    2.47775 (13) obj. -16.3343 iterations 5
Cbc0038I Pass  46: suminf.    2.14959 (12) obj. -16.1069 iterations 13
Cbc0038I Pass  47: suminf.    1.43307 (11) obj. -16.1069 iterations 7
Cbc0038I Pass  48: suminf.    1.14761 (9) obj. -16.1069 iterations 10
Cbc0038I Pass  49: suminf.    1.70859 (11) obj. -16.1069 iterations 8
Cbc0038I Pass  50: suminf.    2.09998 (15) obj. -16.1069 iterations 19
Cbc0038I Pass  51: suminf.    2.09998 (15) obj. -16.1069 iterations 2
Cbc0038I Pass  52: suminf.    1.81254 (13) obj. -16.1069 iterations 22
Cbc0038I Pass  53: suminf.    1.47933 (13) obj. -16.1069 iterations 4
Cbc0038I Pass  54: suminf.    1.80255 (16) obj. -16.1069 iterations 10
Cbc0038I Pass  55: suminf.    1.70074 (17) obj. -16.1069 iterations 2
Cbc0038I Pass  56: suminf.    1.80255 (16) obj. -16.1069 iterations 1
Cbc0038I Pass  57: suminf.    1.20505 (14) obj. -16.1069 iterations 15
Cbc0038I Pass  58: suminf.    0.72819 (12) obj. -16.1069 iterations 5
Cbc0038I Pass  59: suminf.    2.02454 (14) obj. -16.1069 iterations 14
Cbc0038I Pass  60: suminf.    2.02454 (14) obj. -16.1069 iterations 0
Cbc0038I Pass  61: suminf.    2.31069 (15) obj. -16.1069 iterations 9
Cbc0038I Pass  62: suminf.    2.31069 (15) obj. -16.1069 iterations 1
Cbc0038I Rounding solution of -11.6405 is better than previous of -8.66429

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 27 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -11.6405 to -12.6868 (0.11 seconds)
Cbc0038I Round again with cutoff of -23.1444
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.81525 (28) obj. -37.5466 iterations 0
Cbc0038I Pass  63: suminf.    1.54183 (14) obj. -23.1444 iterations 26
Cbc0038I Pass  64: suminf.    1.54183 (14) obj. -23.1444 iterations 0
Cbc0038I Pass  65: suminf.    1.50750 (12) obj. -23.1444 iterations 22
Cbc0038I Pass  66: suminf.    1.45812 (12) obj. -23.1444 iterations 8
Cbc0038I Pass  67: suminf.    1.50750 (12) obj. -23.1444 iterations 10
Cbc0038I Pass  68: suminf.    2.35356 (19) obj. -23.1444 iterations 38
Cbc0038I Pass  69: suminf.    2.35356 (19) obj. -23.1444 iterations 1
Cbc0038I Pass  70: suminf.    2.39098 (23) obj. -23.1444 iterations 22
Cbc0038I Pass  71: suminf.    2.13178 (20) obj. -23.1444 iterations 3
Cbc0038I Pass  72: suminf.    2.81708 (20) obj. -23.1444 iterations 22
Cbc0038I Pass  73: suminf.    2.66025 (20) obj. -23.1444 iterations 7
Cbc0038I Pass  74: suminf.    2.13310 (24) obj. -23.1444 iterations 9
Cbc0038I Pass  75: suminf.    2.13216 (20) obj. -23.1444 iterations 2
Cbc0038I Pass  76: suminf.    2.98838 (20) obj. -23.1444 iterations 9
Cbc0038I Pass  77: suminf.    3.26045 (21) obj. -23.1444 iterations 24
Cbc0038I Pass  78: suminf.    2.64265 (20) obj. -23.9494 iterations 10
Cbc0038I Pass  79: suminf.    2.44761 (19) obj. -23.1444 iterations 18
Cbc0038I Pass  80: suminf.    2.43274 (19) obj. -23.1593 iterations 6
Cbc0038I Pass  81: suminf.    2.48927 (24) obj. -23.1444 iterations 9
Cbc0038I Pass  82: suminf.    2.48927 (24) obj. -23.1444 iterations 0
Cbc0038I Pass  83: suminf.    2.81708 (20) obj. -23.1444 iterations 6
Cbc0038I Pass  84: suminf.    2.49028 (20) obj. -23.1444 iterations 9
Cbc0038I Pass  85: suminf.    2.30148 (24) obj. -23.1444 iterations 11
Cbc0038I Pass  86: suminf.    2.30148 (24) obj. -23.1444 iterations 0
Cbc0038I Pass  87: suminf.    4.48888 (26) obj. -23.1444 iterations 7
Cbc0038I Pass  88: suminf.    2.91695 (26) obj. -23.1444 iterations 6
Cbc0038I Pass  89: suminf.    2.77241 (20) obj. -23.1444 iterations 11
Cbc0038I Pass  90: suminf.    2.75500 (26) obj. -23.1444 iterations 11
Cbc0038I Pass  91: suminf.    2.61164 (20) obj. -23.1444 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -12.6868 - took 0.11 seconds
Cbc0012I Integer solution of -12.68683 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 99 rows 118 columns, reduced to 16 rows 22 columns
Cbc0031I 67 added rows had average density of 23.61194
Cbc0013I At root node, 67 cuts changed objective from -39.56529 to -19.595695 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14131 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1460 row cuts average 111.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 613 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1081 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.683 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.68683 best solution, best possible -19.595695 (2.72 seconds)
Cbc0012I Integer solution of -14.51581 found by rounding after 4601 iterations and 1 nodes (2.72 seconds)
Cbc0010I After 5 nodes, 4 on tree, -14.51581 best solution, best possible -18.620527 (3.43 seconds)
Cbc0001I Search completed - best objective -14.51581, took 5777 iterations and 18 nodes (3.88 seconds)
Cbc0032I Strong branching done 370 times (8372 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 8, 31 variables fixed on reduced cost
Total time (CPU seconds):       2.78   (Wallclock seconds):       3.91

