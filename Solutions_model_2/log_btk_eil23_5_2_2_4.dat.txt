Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 25 (-24) rows, 16 (-9) columns and 75 (-60) elements
Clp0000I Optimal - objective value 7486.8121
Coin0511I After Postsolve, objective 7486.8121, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7486.812069 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 25 rows, 16 columns (15 integer (15 of which binary)) and 75 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.356%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.986878
Cbc0038I Pass   1: suminf.    0.17368 (3) obj. -7345.46 iterations 8
Cbc0038I Solution found of -5283
Cbc0038I Relaxing continuous gives -5283
Cbc0038I Rounding solution of -6370.6 is better than previous of -5283

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -6481.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17368 (3) obj. -7345.46 iterations 0
Cbc0038I Pass   3: suminf.    0.20061 (2) obj. -6481.1 iterations 2
Cbc0038I Pass   4: suminf.    0.20061 (2) obj. -6481.1 iterations 0
Cbc0038I Pass   5: suminf.    0.16975 (2) obj. -6481.1 iterations 1
Cbc0038I Pass   6: suminf.    0.47927 (4) obj. -7028.15 iterations 4
Cbc0038I Pass   7: suminf.    0.16975 (2) obj. -6481.1 iterations 3
Cbc0038I Pass   8: suminf.    0.16975 (2) obj. -6481.1 iterations 0
Cbc0038I Pass   9: suminf.    0.29502 (2) obj. -6481.1 iterations 4
Cbc0038I Pass  10: suminf.    0.29502 (2) obj. -6481.1 iterations 2
Cbc0038I Solution found of -7420.2
Cbc0038I Relaxing continuous gives -7420.2
Cbc0038I Rounding solution of -7437.2 is better than previous of -7420.2

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7444.68
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.42308 (1) obj. -7471.93 iterations 5
Cbc0038I Pass  12: suminf.    0.07642 (2) obj. -7444.68 iterations 4
Cbc0038I Pass  13: suminf.    0.29964 (2) obj. -7444.68 iterations 1
Cbc0038I Pass  14: suminf.    0.45810 (3) obj. -7444.68 iterations 1
Cbc0038I Pass  15: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  16: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  17: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  18: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  19: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  20: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  21: suminf.    0.29964 (2) obj. -7444.68 iterations 2
Cbc0038I Pass  22: suminf.    0.42308 (1) obj. -7444.68 iterations 4
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -7444.68 iterations 1
Cbc0038I Solution found of -7444.68
Cbc0038I Relaxing continuous gives -7457.2
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7462.31
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 4
Cbc0038I Pass  24: suminf.    0.42308 (1) obj. -7471.93 iterations 0
Cbc0038I Pass  25: suminf.    0.39710 (2) obj. -7462.31 iterations 4
Cbc0038I Pass  26: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  27: suminf.    0.63882 (2) obj. -7462.31 iterations 0
Cbc0038I Pass  28: suminf.    0.63882 (2) obj. -7462.31 iterations 2
Cbc0038I Pass  29: suminf.    0.63882 (2) obj. -7462.31 iterations 2
Cbc0038I Pass  30: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  31: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  32: suminf.    1.63411 (4) obj. -7462.31 iterations 0
Cbc0038I Pass  33: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  34: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  35: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  36: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  37: suminf.    0.39710 (2) obj. -7462.31 iterations 3
Cbc0038I Pass  38: suminf.    1.63411 (4) obj. -7462.31 iterations 3
Cbc0038I Pass  39: suminf.    0.39710 (2) obj. -7462.31 iterations 4
Cbc0038I Pass  40: suminf.    0.39710 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  41: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  42: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  43: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  44: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  45: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  46: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  47: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  48: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  49: suminf.    1.63411 (4) obj. -7462.31 iterations 0
Cbc0038I Pass  50: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  51: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  52: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  53: suminf.    1.63411 (4) obj. -7462.31 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7457.2 - took 0.01 seconds
Cbc0012I Integer solution of -7457.2 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7473.7765 to -7406.2 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7457.200000000001, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-15) rows, 38 (-8) columns and 275 (-113) elements
Clp1000I sum of infeasibilities 1.26346e-05 - average 3.82867e-07, 32 fixed columns
Coin0506I Presolve 4 (-29) rows, 6 (-32) columns and 15 (-260) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 7462.9617
Clp0000I Optimal - objective value 7462.9617
Coin0511I After Postsolve, objective 7462.9617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.203503 - largest nonzero change 1.8902839e-05 ( 0.0018240846%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 7524.5892
Clp0000I Optimal - objective value 7524.5892
Clp0000I Optimal - objective value 7524.5892
Coin0511I After Postsolve, objective 7524.5892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7524.589158 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 37 columns (37 integer (37 of which binary)) and 277 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.74126
Cbc0038I Pass   1: suminf.    0.17368 (3) obj. -7345.46 iterations 25
Cbc0038I Solution found of -5283
Cbc0038I Rounding solution of -6370.6 is better than previous of -5283

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -6370.6 to -7440.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -7444.76
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18333 (1) obj. -7462.12 iterations 2
Cbc0038I Pass   3: suminf.    0.49895 (1) obj. -7444.76 iterations 2
Cbc0038I Pass   4: suminf.    1.24073 (5) obj. -7444.76 iterations 6
Cbc0038I Pass   5: suminf.    0.39645 (2) obj. -7444.76 iterations 4
Cbc0038I Pass   6: suminf.    0.58333 (2) obj. -7449.62 iterations 1
Cbc0038I Pass   7: suminf.    1.47297 (7) obj. -7444.76 iterations 6
Cbc0038I Pass   8: suminf.    0.87722 (3) obj. -7444.76 iterations 6
Cbc0038I Pass   9: suminf.    2.14211 (7) obj. -7444.76 iterations 8
Cbc0038I Pass  10: suminf.    0.87722 (3) obj. -7444.76 iterations 9
Cbc0038I Pass  11: suminf.    1.30185 (4) obj. -7444.76 iterations 3
Cbc0038I Pass  12: suminf.    2.03873 (9) obj. -7444.76 iterations 10
Cbc0038I Pass  13: suminf.    0.49895 (1) obj. -7444.76 iterations 10
Cbc0038I Pass  14: suminf.    0.18333 (1) obj. -7462.12 iterations 1
Cbc0038I Pass  15: suminf.    1.66903 (7) obj. -7444.76 iterations 6
Cbc0038I Pass  16: suminf.    3.11768 (10) obj. -7444.76 iterations 16
Cbc0038I Pass  17: suminf.    2.58290 (7) obj. -7444.76 iterations 6
Cbc0038I Pass  18: suminf.    0.11687 (1) obj. -7444.76 iterations 8
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -7449.95 iterations 1
Cbc0038I Pass  20: suminf.    0.61055 (4) obj. -7444.76 iterations 4
Cbc0038I Pass  21: suminf.    1.10340 (4) obj. -7444.76 iterations 7
Cbc0038I Pass  22: suminf.    0.99747 (3) obj. -7444.76 iterations 1
Cbc0038I Pass  23: suminf.    0.06250 (1) obj. -7459.64 iterations 2
Cbc0038I Solution found of -7457.2
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7462.72
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  24: suminf.    0.21662 (2) obj. -7462.72 iterations 2
Cbc0038I Pass  25: suminf.    0.44261 (2) obj. -7462.72 iterations 5
Cbc0038I Pass  26: suminf.    1.80682 (8) obj. -7462.72 iterations 8
Cbc0038I Pass  27: suminf.    0.22816 (2) obj. -7462.72 iterations 8
Cbc0038I Pass  28: suminf.    0.32380 (4) obj. -7462.72 iterations 6
Cbc0038I Pass  29: suminf.    0.80309 (4) obj. -7462.72 iterations 8
Cbc0038I Pass  30: suminf.    2.05233 (8) obj. -7462.72 iterations 4
Cbc0038I Pass  31: suminf.    2.03650 (8) obj. -7462.72 iterations 4
Cbc0038I Pass  32: suminf.    0.22816 (2) obj. -7462.72 iterations 8
Cbc0038I Pass  33: suminf.    0.38202 (3) obj. -7462.72 iterations 5
Cbc0038I Pass  34: suminf.    1.18928 (4) obj. -7462.72 iterations 10
Cbc0038I Pass  35: suminf.    0.52487 (4) obj. -7462.72 iterations 9
Cbc0038I Pass  36: suminf.    2.26571 (9) obj. -7462.72 iterations 15
Cbc0038I Pass  37: suminf.    2.30297 (7) obj. -7462.72 iterations 6
Cbc0038I Pass  38: suminf.    1.34071 (4) obj. -7462.72 iterations 6
Cbc0038I Pass  39: suminf.    0.21662 (2) obj. -7462.72 iterations 7
Cbc0038I Pass  40: suminf.    0.44261 (2) obj. -7462.72 iterations 7
Cbc0038I Pass  41: suminf.    1.92069 (9) obj. -7462.72 iterations 9
Cbc0038I Pass  42: suminf.    2.32366 (8) obj. -7462.72 iterations 15
Cbc0038I Pass  43: suminf.    1.63676 (6) obj. -7462.72 iterations 4
Cbc0038I Pass  44: suminf.    1.28621 (4) obj. -7462.72 iterations 2
Cbc0038I Pass  45: suminf.    0.72137 (3) obj. -7462.72 iterations 2
Cbc0038I Pass  46: suminf.    0.21662 (2) obj. -7462.72 iterations 4
Cbc0038I Pass  47: suminf.    0.44261 (2) obj. -7462.72 iterations 4
Cbc0038I Pass  48: suminf.    1.24401 (7) obj. -7462.72 iterations 7
Cbc0038I Pass  49: suminf.    2.34800 (10) obj. -7462.72 iterations 6
Cbc0038I Pass  50: suminf.    1.34071 (4) obj. -7462.72 iterations 7
Cbc0038I Pass  51: suminf.    1.80167 (6) obj. -7462.72 iterations 4
Cbc0038I Pass  52: suminf.    0.81106 (3) obj. -7462.72 iterations 3
Cbc0038I Pass  53: suminf.    0.85606 (3) obj. -7463.53 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -7457.2 - took 0.02 seconds
Cbc0012I Integer solution of -7457.2 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7468.6733 to -7468.6733 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7457.200000000001, took 15 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 25 (-24) rows, 16 (-9) columns and 75 (-60) elements
Clp0000I Optimal - objective value 7486.8121
Coin0511I After Postsolve, objective 7486.8121, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7486.812069 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 25 rows, 16 columns (15 integer (15 of which binary)) and 75 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.356%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.986878
Cbc0038I Pass   1: suminf.    0.17368 (3) obj. -7345.46 iterations 8
Cbc0038I Solution found of -5283
Cbc0038I Relaxing continuous gives -5283
Cbc0038I Rounding solution of -6370.6 is better than previous of -5283

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6481.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17368 (3) obj. -7345.46 iterations 0
Cbc0038I Pass   3: suminf.    0.20061 (2) obj. -6481.1 iterations 2
Cbc0038I Pass   4: suminf.    0.20061 (2) obj. -6481.1 iterations 0
Cbc0038I Pass   5: suminf.    0.16975 (2) obj. -6481.1 iterations 1
Cbc0038I Pass   6: suminf.    0.47927 (4) obj. -7028.15 iterations 4
Cbc0038I Pass   7: suminf.    0.16975 (2) obj. -6481.1 iterations 3
Cbc0038I Pass   8: suminf.    0.16975 (2) obj. -6481.1 iterations 0
Cbc0038I Pass   9: suminf.    0.29502 (2) obj. -6481.1 iterations 4
Cbc0038I Pass  10: suminf.    0.29502 (2) obj. -6481.1 iterations 2
Cbc0038I Solution found of -7420.2
Cbc0038I Relaxing continuous gives -7420.2
Cbc0038I Rounding solution of -7437.2 is better than previous of -7420.2

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7444.68
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.42308 (1) obj. -7471.93 iterations 5
Cbc0038I Pass  12: suminf.    0.07642 (2) obj. -7444.68 iterations 4
Cbc0038I Pass  13: suminf.    0.29964 (2) obj. -7444.68 iterations 1
Cbc0038I Pass  14: suminf.    0.45810 (3) obj. -7444.68 iterations 1
Cbc0038I Pass  15: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  16: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  17: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  18: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  19: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  20: suminf.    0.61656 (4) obj. -7444.68 iterations 1
Cbc0038I Pass  21: suminf.    0.29964 (2) obj. -7444.68 iterations 2
Cbc0038I Pass  22: suminf.    0.42308 (1) obj. -7444.68 iterations 4
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -7444.68 iterations 1
Cbc0038I Solution found of -7444.68
Cbc0038I Relaxing continuous gives -7457.2
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7462.31
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 4
Cbc0038I Pass  24: suminf.    0.42308 (1) obj. -7471.93 iterations 0
Cbc0038I Pass  25: suminf.    0.39710 (2) obj. -7462.31 iterations 4
Cbc0038I Pass  26: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  27: suminf.    0.63882 (2) obj. -7462.31 iterations 0
Cbc0038I Pass  28: suminf.    0.63882 (2) obj. -7462.31 iterations 2
Cbc0038I Pass  29: suminf.    0.63882 (2) obj. -7462.31 iterations 2
Cbc0038I Pass  30: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  31: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  32: suminf.    1.63411 (4) obj. -7462.31 iterations 0
Cbc0038I Pass  33: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  34: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  35: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  36: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  37: suminf.    0.39710 (2) obj. -7462.31 iterations 3
Cbc0038I Pass  38: suminf.    1.63411 (4) obj. -7462.31 iterations 3
Cbc0038I Pass  39: suminf.    0.39710 (2) obj. -7462.31 iterations 4
Cbc0038I Pass  40: suminf.    0.39710 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  41: suminf.    0.63882 (2) obj. -7462.31 iterations 1
Cbc0038I Pass  42: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  43: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  44: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  45: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  46: suminf.    1.13647 (3) obj. -7462.31 iterations 1
Cbc0038I Pass  47: suminf.    1.13647 (3) obj. -7462.31 iterations 0
Cbc0038I Pass  48: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  49: suminf.    1.63411 (4) obj. -7462.31 iterations 0
Cbc0038I Pass  50: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  51: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  52: suminf.    1.63411 (4) obj. -7462.31 iterations 1
Cbc0038I Pass  53: suminf.    1.63411 (4) obj. -7462.31 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7457.2 - took 0.01 seconds
Cbc0012I Integer solution of -7457.2 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 16 columns, reduced to 6 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7473.7765 to -7406.2 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7457.200000000001, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-19) rows, 35 (-12) columns and 237 (-152) elements
Clp1000I sum of infeasibilities 2.66837e-05 - average 8.89457e-07, 30 fixed columns
Coin0506I Presolve 4 (-26) rows, 5 (-30) columns and 13 (-224) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 7471.7
Clp0000I Optimal - objective value 7471.7
Coin0511I After Postsolve, objective 7471.7, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.1214543 - largest nonzero change 1.7799242e-05 ( 0.0017799242%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 7524.5892
Clp0000I Optimal - objective value 7524.5892
Clp0000I Optimal - objective value 7524.5892
Coin0511I After Postsolve, objective 7524.5892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7524.589158 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 36 columns (36 integer (36 of which binary)) and 257 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.257%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 1.876
Cbc0038I Pass   1: suminf.    0.17368 (3) obj. -7345.46 iterations 18
Cbc0038I Solution found of -5283
Cbc0038I Rounding solution of -6370.6 is better than previous of -5283

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 36 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -6370.6 to -7457.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -7459.28
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18333 (1) obj. -7462.12 iterations 2
Cbc0038I Pass   3: suminf.    0.23492 (1) obj. -7459.28 iterations 2
Cbc0038I Pass   4: suminf.    0.84668 (5) obj. -7459.28 iterations 8
Cbc0038I Pass   5: suminf.    0.67281 (4) obj. -7459.28 iterations 4
Cbc0038I Pass   6: suminf.    1.00875 (4) obj. -7459.28 iterations 4
Cbc0038I Pass   7: suminf.    0.83004 (4) obj. -7459.28 iterations 1
Cbc0038I Pass   8: suminf.    0.49751 (4) obj. -7459.28 iterations 3
Cbc0038I Pass   9: suminf.    0.40848 (3) obj. -7459.28 iterations 2
Cbc0038I Pass  10: suminf.    0.44976 (3) obj. -7460.02 iterations 1
Cbc0038I Pass  11: suminf.    0.96030 (7) obj. -7459.28 iterations 7
Cbc0038I Pass  12: suminf.    1.15850 (9) obj. -7459.28 iterations 2
Cbc0038I Pass  13: suminf.    0.94229 (3) obj. -7459.28 iterations 16
Cbc0038I Pass  14: suminf.    0.88661 (2) obj. -7459.28 iterations 1
Cbc0038I Pass  15: suminf.    0.23492 (1) obj. -7459.28 iterations 2
Cbc0038I Pass  16: suminf.    0.18333 (1) obj. -7462.12 iterations 1
Cbc0038I Pass  17: suminf.    1.08838 (8) obj. -7459.28 iterations 9
Cbc0038I Pass  18: suminf.    0.18333 (1) obj. -7462.12 iterations 9
Cbc0038I Pass  19: suminf.    0.94434 (7) obj. -7459.28 iterations 8
Cbc0038I Pass  20: suminf.    3.26867 (12) obj. -7459.28 iterations 18
Cbc0038I Pass  21: suminf.    0.05332 (1) obj. -7459.28 iterations 17
Cbc0038I Pass  22: suminf.    0.07143 (1) obj. -7459.99 iterations 1
Cbc0038I Pass  23: suminf.    3.06268 (10) obj. -7459.28 iterations 11
Cbc0038I Pass  24: suminf.    0.44130 (5) obj. -7459.28 iterations 9
Cbc0038I Pass  25: suminf.    1.20136 (5) obj. -7459.28 iterations 6
Cbc0038I Pass  26: suminf.    1.35214 (6) obj. -7459.28 iterations 4
Cbc0038I Pass  27: suminf.    2.27188 (11) obj. -7459.28 iterations 6
Cbc0038I Pass  28: suminf.    0.88495 (5) obj. -7461.96 iterations 14
Cbc0038I Pass  29: suminf.    0.75092 (7) obj. -7459.28 iterations 12
Cbc0038I Pass  30: suminf.    0.40848 (3) obj. -7459.28 iterations 5
Cbc0038I Pass  31: suminf.    0.44976 (3) obj. -7460.02 iterations 1
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 36 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7462.66
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.21543 (2) obj. -7462.66 iterations 3
Cbc0038I Pass  32: suminf.    0.46896 (3) obj. -7462.66 iterations 7
Cbc0038I Pass  33: suminf.    0.70545 (6) obj. -7462.66 iterations 4
Cbc0038I Pass  34: suminf.    0.89945 (6) obj. -7462.66 iterations 11
Cbc0038I Pass  35: suminf.    0.64957 (5) obj. -7462.66 iterations 6
Cbc0038I Pass  36: suminf.    0.97517 (4) obj. -7462.66 iterations 3
Cbc0038I Pass  37: suminf.    0.82343 (5) obj. -7462.66 iterations 2
Cbc0038I Pass  38: suminf.    0.87572 (9) obj. -7462.66 iterations 9
Cbc0038I Pass  39: suminf.    0.86592 (4) obj. -7462.66 iterations 8
Cbc0038I Pass  40: suminf.    0.79638 (5) obj. -7462.66 iterations 6
Cbc0038I Pass  41: suminf.    0.92923 (4) obj. -7462.66 iterations 5
Cbc0038I Pass  42: suminf.    1.08832 (6) obj. -7462.66 iterations 8
Cbc0038I Pass  43: suminf.    0.90596 (5) obj. -7462.66 iterations 4
Cbc0038I Pass  44: suminf.    0.66739 (4) obj. -7462.66 iterations 4
Cbc0038I Pass  45: suminf.    0.59765 (3) obj. -7462.66 iterations 6
Cbc0038I Pass  46: suminf.    0.21543 (2) obj. -7462.66 iterations 4
Cbc0038I Pass  47: suminf.    0.46896 (3) obj. -7462.66 iterations 5
Cbc0038I Pass  48: suminf.    0.41939 (3) obj. -7462.66 iterations 2
Cbc0038I Pass  49: suminf.    0.51749 (5) obj. -7462.66 iterations 5
Cbc0038I Pass  50: suminf.    0.44916 (5) obj. -7462.66 iterations 7
Cbc0038I Pass  51: suminf.    2.49457 (10) obj. -7462.66 iterations 14
Cbc0038I Pass  52: suminf.    2.16737 (7) obj. -7462.66 iterations 10
Cbc0038I Pass  53: suminf.    0.55595 (5) obj. -7467.96 iterations 5
Cbc0038I Pass  54: suminf.    1.15106 (7) obj. -7462.66 iterations 6
Cbc0038I Pass  55: suminf.    0.98055 (6) obj. -7462.66 iterations 5
Cbc0038I Pass  56: suminf.    0.64957 (5) obj. -7462.66 iterations 5
Cbc0038I Pass  57: suminf.    0.97517 (4) obj. -7462.66 iterations 3
Cbc0038I Pass  58: suminf.    0.21543 (2) obj. -7462.66 iterations 5
Cbc0038I Pass  59: suminf.    0.46896 (3) obj. -7462.66 iterations 5
Cbc0038I Pass  60: suminf.    2.43981 (11) obj. -7462.66 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 36 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -7457.2 - took 0.02 seconds
Cbc0012I Integer solution of -7457.2 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7468.6733 to -7468.6733 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7457.200000000001, took 13 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

