Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 8.39505e-05 - average 6.93806e-07, 19 fixed columns
Coin0506I Presolve 82 (-39) rows, 47 (-20) columns and 252 (-116) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 81.050023
Clp0000I Optimal - objective value 81.050023
Coin0511I After Postsolve, objective 81.050023, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22832513 - largest nonzero change 0 ( 0%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 81.050023
Clp0000I Optimal - objective value 81.050023
Clp0000I Optimal - objective value 81.050023
Coin0511I After Postsolve, objective 81.050023, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.05002296 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 67 columns (66 integer (66 of which binary)) and 439 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.786%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 3.9282
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.1402 iterations 34
Cbc0038I Solution found of -19.1402
Cbc0038I Relaxing continuous gives -19.1402
Cbc0038I Rounding solution of -32.2226 is better than previous of -19.1402

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 67 columns, reduced to 49 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -32.2226 to -57.4741 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.78
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.02895 (12) obj. -59.78 iterations 17
Cbc0038I Pass   3: suminf.    2.07038 (5) obj. -59.78 iterations 21
Cbc0038I Pass   4: suminf.    1.47936 (5) obj. -59.78 iterations 7
Cbc0038I Pass   5: suminf.    1.82857 (6) obj. -59.78 iterations 7
Cbc0038I Pass   6: suminf.    1.26863 (8) obj. -59.78 iterations 10
Cbc0038I Pass   7: suminf.    2.06199 (5) obj. -59.78 iterations 10
Cbc0038I Pass   8: suminf.    1.61464 (4) obj. -59.78 iterations 5
Cbc0038I Pass   9: suminf.    1.47188 (6) obj. -59.78 iterations 2
Cbc0038I Pass  10: suminf.    1.90602 (5) obj. -59.78 iterations 7
Cbc0038I Pass  11: suminf.    1.72887 (5) obj. -59.78 iterations 3
Cbc0038I Pass  12: suminf.    1.47902 (6) obj. -59.78 iterations 5
Cbc0038I Pass  13: suminf.    1.93334 (6) obj. -59.78 iterations 17
Cbc0038I Pass  14: suminf.    1.43701 (5) obj. -59.78 iterations 14
Cbc0038I Pass  15: suminf.    2.07274 (10) obj. -59.78 iterations 12
Cbc0038I Pass  16: suminf.    2.02895 (12) obj. -59.78 iterations 2
Cbc0038I Pass  17: suminf.    1.48120 (5) obj. -59.78 iterations 20
Cbc0038I Pass  18: suminf.    1.47936 (5) obj. -59.78 iterations 1
Cbc0038I Pass  19: suminf.    1.82857 (6) obj. -59.78 iterations 7
Cbc0038I Pass  20: suminf.    1.26863 (8) obj. -59.78 iterations 10
Cbc0038I Pass  21: suminf.    2.06199 (5) obj. -59.78 iterations 10
Cbc0038I Pass  22: suminf.    1.61464 (4) obj. -59.78 iterations 5
Cbc0038I Pass  23: suminf.    1.47188 (6) obj. -59.78 iterations 2
Cbc0038I Pass  24: suminf.    1.90602 (5) obj. -59.78 iterations 7
Cbc0038I Pass  25: suminf.    1.72887 (5) obj. -59.78 iterations 3
Cbc0038I Pass  26: suminf.    1.47902 (6) obj. -59.78 iterations 5
Cbc0038I Pass  27: suminf.    3.06056 (11) obj. -59.78 iterations 21
Cbc0038I Pass  28: suminf.    1.69357 (7) obj. -59.78 iterations 14
Cbc0038I Pass  29: suminf.    1.07300 (6) obj. -59.78 iterations 1
Cbc0038I Pass  30: suminf.    1.57008 (5) obj. -59.78 iterations 10
Cbc0038I Pass  31: suminf.    1.16778 (6) obj. -59.78 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 67 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -57.4741 - took 0.03 seconds
Cbc0012I Integer solution of -57.47414 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 116 rows 67 columns, reduced to 49 rows 28 columns
Cbc0031I 17 added rows had average density of 33.294118
Cbc0013I At root node, 17 cuts changed objective from -80.531402 to -70.956193 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3957 row cuts average 4.0 elements, 4 column cuts (4 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1413 row cuts average 58.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 158 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -57.47414000000001, took 4117 iterations and 14 nodes (0.47 seconds)
Cbc0032I Strong branching done 228 times (4089 iterations), fathomed 0 nodes and fixed 14 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 115 (-37) columns and 1930 (-1373) elements
Clp1000I sum of infeasibilities 1.63745e-07 - average 1.57447e-09, 49 fixed columns
Coin0506I Presolve 61 (-43) rows, 65 (-50) columns and 567 (-1363) elements
Clp0029I End of values pass after 63 iterations
Clp0000I Optimal - objective value 141.11086
Clp0000I Optimal - objective value 141.11086
Coin0511I After Postsolve, objective 141.11086, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 141.11086
Clp0000I Optimal - objective value 141.11086
Clp0000I Optimal - objective value 141.11086
Coin0511I After Postsolve, objective 141.11086, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 141.1108594 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 115 columns (115 integer (115 of which binary)) and 1987 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.212%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 5.6348
Cbc0038I Pass   1: suminf.    1.48928 (33) obj. -53.8145 iterations 21
Cbc0038I Pass   2: suminf.    1.48928 (33) obj. -53.8145 iterations 0
Cbc0038I Pass   3: suminf.    0.41489 (11) obj. -20.5693 iterations 24
Cbc0038I Solution found of -9.01644
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 115 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -9.01644 to -34.5665 (0.05 seconds)
Cbc0038I Round again with cutoff of -41.0223
Cbc0038I Pass   4: suminf.    1.48928 (33) obj. -53.8145 iterations 0
Cbc0038I Pass   5: suminf.    1.48928 (33) obj. -53.8145 iterations 0
Cbc0038I Pass   6: suminf.    1.70349 (11) obj. -41.0223 iterations 42
Cbc0038I Pass   7: suminf.    0.81450 (4) obj. -41.0223 iterations 11
Cbc0038I Pass   8: suminf.    0.78049 (2) obj. -52.5238 iterations 2
Cbc0038I Pass   9: suminf.    0.35058 (2) obj. -41.0223 iterations 12
Cbc0038I Pass  10: suminf.    0.07407 (1) obj. -47.7177 iterations 11
Cbc0038I Pass  11: suminf.    0.07407 (1) obj. -47.7177 iterations 0
Cbc0038I Pass  12: suminf.    2.40799 (14) obj. -41.0223 iterations 24
Cbc0038I Pass  13: suminf.    1.55220 (12) obj. -41.0223 iterations 9
Cbc0038I Pass  14: suminf.    1.32402 (13) obj. -41.0223 iterations 1
Cbc0038I Pass  15: suminf.    0.32721 (4) obj. -41.0223 iterations 15
Cbc0038I Pass  16: suminf.    0.24844 (2) obj. -41.0223 iterations 12
Cbc0038I Pass  17: suminf.    0.24844 (2) obj. -41.0223 iterations 3
Cbc0038I Pass  18: suminf.    0.44444 (1) obj. -44.3381 iterations 10
Cbc0038I Pass  19: suminf.    0.44444 (1) obj. -44.3381 iterations 0
Cbc0038I Pass  20: suminf.    1.64211 (14) obj. -41.0223 iterations 30
Cbc0038I Pass  21: suminf.    1.23392 (15) obj. -41.0223 iterations 7
Cbc0038I Pass  22: suminf.    1.18089 (5) obj. -41.0223 iterations 20
Cbc0038I Pass  23: suminf.    0.24844 (2) obj. -41.0223 iterations 14
Cbc0038I Pass  24: suminf.    0.24844 (2) obj. -41.0223 iterations 3
Cbc0038I Pass  25: suminf.    0.44444 (1) obj. -44.3381 iterations 9
Cbc0038I Pass  26: suminf.    0.44444 (1) obj. -44.3381 iterations 0
Cbc0038I Pass  27: suminf.    2.06327 (13) obj. -41.0223 iterations 15
Cbc0038I Pass  28: suminf.    0.82427 (9) obj. -41.0223 iterations 13
Cbc0038I Pass  29: suminf.    0.30291 (4) obj. -41.0223 iterations 15
Cbc0038I Pass  30: suminf.    0.30291 (4) obj. -41.0223 iterations 0
Cbc0038I Pass  31: suminf.    0.41136 (2) obj. -41.0223 iterations 11
Cbc0038I Pass  32: suminf.    0.41136 (2) obj. -41.0223 iterations 1
Cbc0038I Pass  33: suminf.    0.44444 (1) obj. -41.3381 iterations 9
Cbc0038I Rounding solution of -37.4473 is better than previous of -34.5665

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 115 columns, reduced to 52 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -37.4473 to -47.2195 (0.11 seconds)
Cbc0038I Round again with cutoff of -57.6003
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.81811 (38) obj. -57.6003 iterations 5
Cbc0038I Pass  34: suminf.    1.68892 (34) obj. -57.6003 iterations 1
Cbc0038I Pass  35: suminf.    1.61027 (26) obj. -57.6003 iterations 13
Cbc0038I Pass  36: suminf.    1.23528 (24) obj. -59.3096 iterations 3
Cbc0038I Pass  37: suminf.    3.38141 (21) obj. -57.6003 iterations 26
Cbc0038I Pass  38: suminf.    3.38141 (21) obj. -57.6003 iterations 0
Cbc0038I Pass  39: suminf.    1.42856 (7) obj. -57.6003 iterations 29
Cbc0038I Pass  40: suminf.    1.42856 (7) obj. -57.6003 iterations 5
Cbc0038I Pass  41: suminf.    1.34311 (5) obj. -57.6003 iterations 14
Cbc0038I Pass  42: suminf.    1.34311 (5) obj. -57.6003 iterations 0
Cbc0038I Pass  43: suminf.    1.26649 (5) obj. -57.6003 iterations 9
Cbc0038I Pass  44: suminf.    1.26649 (5) obj. -57.6003 iterations 0
Cbc0038I Pass  45: suminf.    1.29817 (14) obj. -57.6003 iterations 19
Cbc0038I Pass  46: suminf.    0.65176 (10) obj. -57.6003 iterations 6
Cbc0038I Pass  47: suminf.    1.07929 (5) obj. -57.6003 iterations 22
Cbc0038I Pass  48: suminf.    1.07929 (5) obj. -57.6003 iterations 4
Cbc0038I Pass  49: suminf.    1.69320 (5) obj. -57.6003 iterations 13
Cbc0038I Pass  50: suminf.    1.69320 (5) obj. -57.6003 iterations 2
Cbc0038I Pass  51: suminf.    1.34311 (5) obj. -57.6003 iterations 6
Cbc0038I Pass  52: suminf.    1.34311 (5) obj. -57.6003 iterations 5
Cbc0038I Pass  53: suminf.    1.26649 (5) obj. -57.6003 iterations 8
Cbc0038I Pass  54: suminf.    1.26649 (5) obj. -57.6003 iterations 0
Cbc0038I Pass  55: suminf.    1.34311 (5) obj. -57.6003 iterations 9
Cbc0038I Pass  56: suminf.    1.06110 (12) obj. -57.6003 iterations 17
Cbc0038I Pass  57: suminf.    0.74491 (9) obj. -57.6003 iterations 6
Cbc0038I Pass  58: suminf.    1.67644 (5) obj. -57.6003 iterations 19
Cbc0038I Pass  59: suminf.    1.67644 (5) obj. -57.6003 iterations 0
Cbc0038I Pass  60: suminf.    1.22348 (5) obj. -57.6003 iterations 8
Cbc0038I Pass  61: suminf.    0.89164 (4) obj. -59.0625 iterations 8
Cbc0038I Pass  62: suminf.    1.45376 (5) obj. -57.6003 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 115 columns, reduced to 45 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -47.2195 - took 0.09 seconds
Cbc0012I Integer solution of -47.21954 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 98 rows 115 columns, reduced to 40 rows 43 columns
Cbc0031I 62 added rows had average density of 15.467742
Cbc0013I At root node, 62 cuts changed objective from -99.123015 to -66.317028 in 28 passes
Cbc0014I Cut generator 0 (Probing) - 2089 row cuts average 2.4 elements, 7 column cuts (7 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 61.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 184 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 273 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 208 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 328 row cuts average 64.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -47.21954 best solution, best possible -66.317028 (0.71 seconds)
Cbc0012I Integer solution of -57.47414 found by DiveCoefficient after 1122 iterations and 4 nodes (1.05 seconds)
Cbc0010I After 7 nodes, 4 on tree, -57.47414 best solution, best possible -64.338808 (1.46 seconds)
Cbc0001I Search completed - best objective -57.47414000000001, took 1937 iterations and 14 nodes (1.66 seconds)
Cbc0032I Strong branching done 376 times (9081 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 39 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 8.39505e-05 - average 6.93806e-07, 19 fixed columns
Coin0506I Presolve 82 (-39) rows, 47 (-20) columns and 252 (-116) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 81.050023
Clp0000I Optimal - objective value 81.050023
Coin0511I After Postsolve, objective 81.050023, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22832513 - largest nonzero change 0 ( 0%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 81.050023
Clp0000I Optimal - objective value 81.050023
Clp0000I Optimal - objective value 81.050023
Coin0511I After Postsolve, objective 81.050023, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.05002296 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 67 columns (66 integer (66 of which binary)) and 439 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.786%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 3.9282
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.1402 iterations 34
Cbc0038I Solution found of -19.1402
Cbc0038I Relaxing continuous gives -19.1402
Cbc0038I Rounding solution of -32.2226 is better than previous of -19.1402

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 67 columns, reduced to 49 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -32.2226 to -57.4741 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.78
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.02895 (12) obj. -59.78 iterations 17
Cbc0038I Pass   3: suminf.    2.07038 (5) obj. -59.78 iterations 21
Cbc0038I Pass   4: suminf.    1.47936 (5) obj. -59.78 iterations 7
Cbc0038I Pass   5: suminf.    1.82857 (6) obj. -59.78 iterations 7
Cbc0038I Pass   6: suminf.    1.26863 (8) obj. -59.78 iterations 10
Cbc0038I Pass   7: suminf.    2.06199 (5) obj. -59.78 iterations 10
Cbc0038I Pass   8: suminf.    1.61464 (4) obj. -59.78 iterations 5
Cbc0038I Pass   9: suminf.    1.47188 (6) obj. -59.78 iterations 2
Cbc0038I Pass  10: suminf.    1.90602 (5) obj. -59.78 iterations 7
Cbc0038I Pass  11: suminf.    1.72887 (5) obj. -59.78 iterations 3
Cbc0038I Pass  12: suminf.    1.47902 (6) obj. -59.78 iterations 5
Cbc0038I Pass  13: suminf.    1.93334 (6) obj. -59.78 iterations 17
Cbc0038I Pass  14: suminf.    1.43701 (5) obj. -59.78 iterations 14
Cbc0038I Pass  15: suminf.    2.07274 (10) obj. -59.78 iterations 12
Cbc0038I Pass  16: suminf.    2.02895 (12) obj. -59.78 iterations 2
Cbc0038I Pass  17: suminf.    1.48120 (5) obj. -59.78 iterations 20
Cbc0038I Pass  18: suminf.    1.47936 (5) obj. -59.78 iterations 1
Cbc0038I Pass  19: suminf.    1.82857 (6) obj. -59.78 iterations 7
Cbc0038I Pass  20: suminf.    1.26863 (8) obj. -59.78 iterations 10
Cbc0038I Pass  21: suminf.    2.06199 (5) obj. -59.78 iterations 10
Cbc0038I Pass  22: suminf.    1.61464 (4) obj. -59.78 iterations 5
Cbc0038I Pass  23: suminf.    1.47188 (6) obj. -59.78 iterations 2
Cbc0038I Pass  24: suminf.    1.90602 (5) obj. -59.78 iterations 7
Cbc0038I Pass  25: suminf.    1.72887 (5) obj. -59.78 iterations 3
Cbc0038I Pass  26: suminf.    1.47902 (6) obj. -59.78 iterations 5
Cbc0038I Pass  27: suminf.    3.06056 (11) obj. -59.78 iterations 21
Cbc0038I Pass  28: suminf.    1.69357 (7) obj. -59.78 iterations 14
Cbc0038I Pass  29: suminf.    1.07300 (6) obj. -59.78 iterations 1
Cbc0038I Pass  30: suminf.    1.57008 (5) obj. -59.78 iterations 10
Cbc0038I Pass  31: suminf.    1.16778 (6) obj. -59.78 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 67 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -57.4741 - took 0.03 seconds
Cbc0012I Integer solution of -57.47414 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 116 rows 67 columns, reduced to 49 rows 28 columns
Cbc0031I 17 added rows had average density of 33.294118
Cbc0013I At root node, 17 cuts changed objective from -80.531402 to -70.956193 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3957 row cuts average 4.0 elements, 4 column cuts (4 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1413 row cuts average 58.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 158 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -57.47414000000001, took 4117 iterations and 14 nodes (0.47 seconds)
Cbc0032I Strong branching done 228 times (4089 iterations), fathomed 0 nodes and fixed 14 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 113 (-40) columns and 1836 (-1468) elements
Clp1000I sum of infeasibilities 2.47608e-07 - average 2.42753e-09, 69 fixed columns
Coin0506I Presolve 28 (-74) rows, 43 (-70) columns and 137 (-1699) elements
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 0.23816319 - largest nonzero change 2.5464251e-05 ( 0.0021869008%) - largest zero change 2.9738336e-05
Clp0000I Optimal - objective value 28.841819
Clp0000I Optimal - objective value 28.841819
Coin0511I After Postsolve, objective 28.841819, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6208563 - largest nonzero change 2.8495933e-05 ( 0.0016580886%) - largest zero change 2.998494e-05
Clp0000I Optimal - objective value 96.196914
Clp0000I Optimal - objective value 96.196914
Clp0000I Optimal - objective value 96.196914
Coin0511I After Postsolve, objective 96.196914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.19691412 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 113 columns (113 integer (113 of which binary)) and 1891 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.095%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.83717
Cbc0038I Pass   1: suminf.    1.77039 (33) obj. -60.3859 iterations 22
Cbc0038I Pass   2: suminf.    1.77039 (33) obj. -60.3859 iterations 0
Cbc0038I Pass   3: suminf.    0.94631 (20) obj. -41.6504 iterations 13
Cbc0038I Pass   4: suminf.    0.37532 (9) obj. -27.4353 iterations 11
Cbc0038I Solution found of -15.9403
Cbc0038I Rounding solution of -22.9403 is better than previous of -15.9403

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -28.875
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.77039 (33) obj. -60.3859 iterations 0
Cbc0038I Pass   6: suminf.    1.77039 (33) obj. -60.3859 iterations 0
Cbc0038I Pass   7: suminf.    1.11888 (23) obj. -45.4207 iterations 10
Cbc0038I Pass   8: suminf.    0.78888 (3) obj. -28.875 iterations 44
Cbc0038I Pass   9: suminf.    0.60556 (3) obj. -31.5232 iterations 3
Cbc0038I Pass  10: suminf.    0.38129 (3) obj. -28.875 iterations 1
Cbc0038I Pass  11: suminf.    0.78888 (3) obj. -28.875 iterations 1
Cbc0038I Pass  12: suminf.    0.91425 (9) obj. -28.875 iterations 19
Cbc0038I Pass  13: suminf.    0.75949 (10) obj. -28.875 iterations 10
Cbc0038I Pass  14: suminf.    0.80499 (5) obj. -28.875 iterations 11
Cbc0038I Pass  15: suminf.    0.78362 (4) obj. -28.875 iterations 2
Cbc0038I Pass  16: suminf.    1.70609 (4) obj. -28.875 iterations 4
Cbc0038I Pass  17: suminf.    0.79946 (4) obj. -28.875 iterations 2
Cbc0038I Pass  18: suminf.    0.49924 (7) obj. -28.875 iterations 10
Cbc0038I Pass  19: suminf.    1.65639 (4) obj. -28.875 iterations 10
Cbc0038I Pass  20: suminf.    1.54554 (5) obj. -28.875 iterations 6
Cbc0038I Pass  21: suminf.    0.82778 (4) obj. -28.875 iterations 6
Cbc0038I Pass  22: suminf.    0.81367 (4) obj. -28.875 iterations 2
Cbc0038I Pass  23: suminf.    2.10513 (5) obj. -28.875 iterations 7
Cbc0038I Pass  24: suminf.    0.84279 (4) obj. -28.875 iterations 3
Cbc0038I Pass  25: suminf.    0.84279 (4) obj. -28.875 iterations 0
Cbc0038I Pass  26: suminf.    2.49578 (18) obj. -34.2044 iterations 29
Cbc0038I Pass  27: suminf.    0.80671 (7) obj. -28.875 iterations 23
Cbc0038I Pass  28: suminf.    1.12993 (3) obj. -28.875 iterations 9
Cbc0038I Pass  29: suminf.    0.40741 (1) obj. -29.227 iterations 3
Cbc0038I Pass  30: suminf.    0.42051 (1) obj. -28.875 iterations 1
Cbc0038I Pass  31: suminf.    0.82558 (6) obj. -38.8617 iterations 21
Cbc0038I Pass  32: suminf.    0.38187 (5) obj. -34.1112 iterations 1
Cbc0038I Pass  33: suminf.    0.48782 (1) obj. -28.875 iterations 6
Cbc0038I Pass  34: suminf.    0.33333 (1) obj. -33.0252 iterations 1
Cbc0038I Rounding solution of -40.6147 is better than previous of -22.9403

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 57 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -40.6147 to -46.8815 (0.11 seconds)
Cbc0038I Round again with cutoff of -53.9624
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.77039 (33) obj. -60.3859 iterations 0
Cbc0038I Pass  35: suminf.    1.77039 (33) obj. -60.3859 iterations 0
Cbc0038I Pass  36: suminf.    1.88746 (21) obj. -53.9624 iterations 27
Cbc0038I Pass  37: suminf.    1.12903 (20) obj. -55.0437 iterations 8
Cbc0038I Pass  38: suminf.    3.48150 (20) obj. -53.9624 iterations 28
Cbc0038I Pass  39: suminf.    3.38290 (18) obj. -53.9624 iterations 4
Cbc0038I Pass  40: suminf.    2.19600 (14) obj. -53.9624 iterations 25
Cbc0038I Pass  41: suminf.    1.90297 (14) obj. -53.9624 iterations 6
Cbc0038I Pass  42: suminf.    2.19600 (14) obj. -53.9624 iterations 6
Cbc0038I Pass  43: suminf.    2.72681 (18) obj. -53.9624 iterations 25
Cbc0038I Pass  44: suminf.    2.25558 (17) obj. -53.9624 iterations 3
Cbc0038I Pass  45: suminf.    1.66634 (16) obj. -53.9624 iterations 6
Cbc0038I Pass  46: suminf.    2.13923 (14) obj. -53.9624 iterations 22
Cbc0038I Pass  47: suminf.    2.13923 (14) obj. -53.9624 iterations 0
Cbc0038I Pass  48: suminf.    2.19600 (14) obj. -53.9624 iterations 8
Cbc0038I Pass  49: suminf.    1.90297 (14) obj. -53.9624 iterations 6
Cbc0038I Pass  50: suminf.    2.19600 (14) obj. -53.9624 iterations 6
Cbc0038I Pass  51: suminf.    2.87042 (19) obj. -53.9624 iterations 28
Cbc0038I Pass  52: suminf.    1.95622 (15) obj. -53.9624 iterations 11
Cbc0038I Pass  53: suminf.    2.19600 (14) obj. -53.9624 iterations 12
Cbc0038I Pass  54: suminf.    4.71704 (25) obj. -53.9624 iterations 16
Cbc0038I Pass  55: suminf.    2.49743 (19) obj. -53.9624 iterations 10
Cbc0038I Pass  56: suminf.    2.35484 (18) obj. -53.9624 iterations 1
Cbc0038I Pass  57: suminf.    2.19600 (14) obj. -53.9624 iterations 28
Cbc0038I Pass  58: suminf.    1.90297 (14) obj. -53.9624 iterations 8
Cbc0038I Pass  59: suminf.    2.19600 (14) obj. -53.9624 iterations 7
Cbc0038I Pass  60: suminf.    2.43866 (16) obj. -53.9624 iterations 16
Cbc0038I Pass  61: suminf.    1.72609 (15) obj. -53.9624 iterations 4
Cbc0038I Pass  62: suminf.    2.75505 (23) obj. -53.9624 iterations 13
Cbc0038I Pass  63: suminf.    1.73750 (19) obj. -53.9624 iterations 6
Cbc0038I Rounding solution of -57.3174 is better than previous of -46.8815

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 113 columns, reduced to 54 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of -64.808
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.00648 (34) obj. -64.808 iterations 5
Cbc0038I Pass  64: suminf.    2.00648 (34) obj. -64.808 iterations 1
Cbc0038I Pass  65: suminf.    4.51488 (26) obj. -64.808 iterations 44
Cbc0038I Pass  66: suminf.    4.34877 (26) obj. -64.808 iterations 5
Cbc0038I Pass  67: suminf.    3.92034 (26) obj. -64.808 iterations 14
Cbc0038I Pass  68: suminf.    3.92034 (26) obj. -64.808 iterations 3
Cbc0038I Pass  69: suminf.    4.24243 (26) obj. -64.808 iterations 7
Cbc0038I Pass  70: suminf.    4.24243 (26) obj. -64.808 iterations 3
Cbc0038I Pass  71: suminf.    3.89974 (26) obj. -64.808 iterations 6
Cbc0038I Pass  72: suminf.    3.89974 (26) obj. -64.808 iterations 4
Cbc0038I Pass  73: suminf.    5.33456 (30) obj. -64.808 iterations 14
Cbc0038I Pass  74: suminf.    4.32623 (29) obj. -64.808 iterations 9
Cbc0038I Pass  75: suminf.    4.57711 (26) obj. -64.808 iterations 22
Cbc0038I Pass  76: suminf.    3.99507 (26) obj. -64.808 iterations 5
Cbc0038I Pass  77: suminf.    4.33952 (26) obj. -64.808 iterations 6
Cbc0038I Pass  78: suminf.    4.33952 (26) obj. -64.808 iterations 2
Cbc0038I Pass  79: suminf.    4.42230 (26) obj. -64.808 iterations 4
Cbc0038I Pass  80: suminf.    4.42230 (26) obj. -64.808 iterations 1
Cbc0038I Pass  81: suminf.    4.33952 (26) obj. -64.808 iterations 4
Cbc0038I Pass  82: suminf.    4.31488 (27) obj. -64.808 iterations 18
Cbc0038I Pass  83: suminf.    3.75912 (27) obj. -64.808 iterations 5
Cbc0038I Pass  84: suminf.    4.06722 (27) obj. -64.808 iterations 14
Cbc0038I Pass  85: suminf.    4.06722 (27) obj. -64.808 iterations 4
Cbc0038I Pass  86: suminf.    4.36128 (27) obj. -64.808 iterations 7
Cbc0038I Pass  87: suminf.    4.36128 (27) obj. -64.808 iterations 3
Cbc0038I Pass  88: suminf.    4.02256 (27) obj. -64.808 iterations 6
Cbc0038I Pass  89: suminf.    4.02256 (27) obj. -64.808 iterations 4
Cbc0038I Pass  90: suminf.    4.09124 (27) obj. -64.808 iterations 6
Cbc0038I Pass  91: suminf.    4.09124 (27) obj. -64.808 iterations 4
Cbc0038I Pass  92: suminf.    4.02256 (27) obj. -64.808 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -57.3174 - took 0.14 seconds
Cbc0012I Integer solution of -57.31744 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 97 rows 113 columns, reduced to 46 rows 50 columns
Cbc0031I 60 added rows had average density of 13.2
Cbc0013I At root node, 60 cuts changed objective from -82.285693 to -59.850585 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 4098 row cuts average 6.7 elements, 14 column cuts (16 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 53 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 124 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 105 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 206 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 398 row cuts average 41.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.226 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -57.31744 best solution, best possible -59.850585 (0.89 seconds)
Cbc0004I Integer solution of -57.47414 found after 881 iterations and 1 nodes (0.90 seconds)
Cbc0001I Search completed - best objective -57.47414000000001, took 982 iterations and 2 nodes (0.92 seconds)
Cbc0032I Strong branching done 120 times (3055 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.93

