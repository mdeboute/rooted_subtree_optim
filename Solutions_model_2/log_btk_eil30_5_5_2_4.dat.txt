Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 6.53555e-05 - average 1.28148e-06, 4 fixed columns
Coin0506I Presolve 40 (-11) rows, 25 (-4) columns and 122 (-30) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.1370666 - largest nonzero change 0 ( 0%) - largest zero change 2.8693142e-05
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Coin0511I After Postsolve, objective 101.74695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Coin0511I After Postsolve, objective 101.74695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.7469525 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.3074
Cbc0038I Pass   1: suminf.    0.16667 (1) obj. -44.3313 iterations 21
Cbc0038I Solution found of -24.7678
Cbc0038I Relaxing continuous gives -24.7678
Cbc0038I Rounding solution of -45.1414 is better than previous of -24.7678

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -45.1414 to -51.4261 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.4583
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.71960 (5) obj. -56.4583 iterations 5
Cbc0038I Pass   3: suminf.    0.78573 (2) obj. -56.4583 iterations 6
Cbc0038I Pass   4: suminf.    0.72339 (2) obj. -56.4583 iterations 2
Cbc0038I Pass   5: suminf.    0.71254 (3) obj. -56.4583 iterations 1
Cbc0038I Pass   6: suminf.    0.61651 (2) obj. -56.4583 iterations 3
Cbc0038I Pass   7: suminf.    0.61651 (2) obj. -56.4583 iterations 0
Cbc0038I Pass   8: suminf.    0.69611 (2) obj. -56.4583 iterations 2
Cbc0038I Pass   9: suminf.    0.69611 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  10: suminf.    1.46169 (5) obj. -56.4583 iterations 9
Cbc0038I Pass  11: suminf.    1.37693 (6) obj. -56.4583 iterations 2
Cbc0038I Pass  12: suminf.    1.71811 (4) obj. -56.4583 iterations 8
Cbc0038I Pass  13: suminf.    0.28135 (2) obj. -56.4583 iterations 5
Cbc0038I Pass  14: suminf.    0.37966 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  15: suminf.    0.37966 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  16: suminf.    0.82166 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  17: suminf.    1.01147 (4) obj. -56.4583 iterations 5
Cbc0038I Pass  18: suminf.    1.01147 (4) obj. -56.4583 iterations 0
Cbc0038I Pass  19: suminf.    1.52405 (5) obj. -56.4583 iterations 8
Cbc0038I Pass  20: suminf.    1.19595 (5) obj. -56.4583 iterations 1
Cbc0038I Pass  21: suminf.    0.80679 (3) obj. -56.4583 iterations 3
Cbc0038I Pass  22: suminf.    0.61651 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  23: suminf.    0.69611 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  24: suminf.    0.69611 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  25: suminf.    0.61651 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  26: suminf.    1.48797 (5) obj. -56.4583 iterations 9
Cbc0038I Pass  27: suminf.    0.73008 (4) obj. -56.4583 iterations 5
Cbc0038I Pass  28: suminf.    1.33702 (5) obj. -56.4583 iterations 5
Cbc0038I Pass  29: suminf.    0.87472 (3) obj. -56.4583 iterations 3
Cbc0038I Pass  30: suminf.    0.77905 (3) obj. -56.4583 iterations 1
Cbc0038I Pass  31: suminf.    1.33702 (5) obj. -56.4583 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -51.4261 - took 0.06 seconds
Cbc0012I Integer solution of -51.426093 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 18 columns
Cbc0031I 10 added rows had average density of 13.9
Cbc0013I At root node, 10 cuts changed objective from -101.74695 to -67.991847 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1498 row cuts average 4.9 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 783 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -53.243853 found by rounding after 1933 iterations and 2 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -53.24385300000023, took 2436 iterations and 10 nodes (0.20 seconds)
Cbc0032I Strong branching done 76 times (628 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 55 (-5) columns and 511 (-101) elements
Clp1000I sum of infeasibilities 2.64188e-06 - average 5.28375e-08, 17 fixed columns
Coin0506I Presolve 35 (-15) rows, 37 (-18) columns and 253 (-258) elements
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 127.16779
Clp0000I Optimal - objective value 127.16779
Coin0511I After Postsolve, objective 127.16779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 127.16779
Clp0000I Optimal - objective value 127.16779
Clp0000I Optimal - objective value 127.16779
Coin0511I After Postsolve, objective 127.16779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 127.16779 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 54 columns (54 integer (54 of which binary)) and 498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.662%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 5.5638
Cbc0038I Pass   1: suminf.    1.64758 (15) obj. -95.3143 iterations 10
Cbc0038I Solution found of -28.5519
Cbc0038I Rounding solution of -37.2994 is better than previous of -28.5519

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -37.2994 to -51.2558 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.0051
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.64758 (15) obj. -95.3143 iterations 0
Cbc0038I Pass   3: suminf.    1.21845 (9) obj. -58.0051 iterations 17
Cbc0038I Pass   4: suminf.    1.21845 (9) obj. -58.0051 iterations 1
Cbc0038I Pass   5: suminf.    0.89501 (3) obj. -58.0051 iterations 13
Cbc0038I Pass   6: suminf.    0.86456 (3) obj. -58.4313 iterations 1
Cbc0038I Pass   7: suminf.    0.89501 (3) obj. -58.0051 iterations 1
Cbc0038I Pass   8: suminf.    2.09236 (9) obj. -58.0051 iterations 13
Cbc0038I Pass   9: suminf.    1.22212 (6) obj. -58.0051 iterations 5
Cbc0038I Pass  10: suminf.    1.40999 (5) obj. -58.0051 iterations 9
Cbc0038I Pass  11: suminf.    1.41115 (6) obj. -58.0051 iterations 1
Cbc0038I Pass  12: suminf.    1.54815 (6) obj. -58.0051 iterations 2
Cbc0038I Pass  13: suminf.    1.23620 (4) obj. -58.0051 iterations 3
Cbc0038I Pass  14: suminf.    2.15472 (7) obj. -58.0051 iterations 14
Cbc0038I Pass  15: suminf.    2.15472 (7) obj. -58.0051 iterations 4
Cbc0038I Pass  16: suminf.    2.08334 (6) obj. -58.0051 iterations 6
Cbc0038I Pass  17: suminf.    2.08334 (6) obj. -58.0051 iterations 1
Cbc0038I Pass  18: suminf.    2.43477 (8) obj. -58.0051 iterations 4
Cbc0038I Pass  19: suminf.    2.43477 (8) obj. -58.0051 iterations 0
Cbc0038I Pass  20: suminf.    2.08334 (6) obj. -58.0051 iterations 3
Cbc0038I Pass  21: suminf.    3.82265 (13) obj. -58.0051 iterations 15
Cbc0038I Pass  22: suminf.    3.27612 (12) obj. -58.0051 iterations 4
Cbc0038I Pass  23: suminf.    3.27612 (12) obj. -58.0051 iterations 0
Cbc0038I Pass  24: suminf.    2.57679 (8) obj. -58.0051 iterations 13
Cbc0038I Pass  25: suminf.    2.57679 (8) obj. -58.0051 iterations 1
Cbc0038I Pass  26: suminf.    2.26380 (7) obj. -58.0051 iterations 5
Cbc0038I Pass  27: suminf.    2.25978 (7) obj. -58.0051 iterations 3
Cbc0038I Pass  28: suminf.    2.57679 (8) obj. -58.0051 iterations 5
Cbc0038I Pass  29: suminf.    4.90759 (16) obj. -58.0051 iterations 22
Cbc0038I Pass  30: suminf.    3.54333 (13) obj. -58.0051 iterations 5
Cbc0038I Pass  31: suminf.    3.54333 (13) obj. -58.0051 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 32 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -51.2558 to -52.948 (0.03 seconds)
Cbc0038I Round again with cutoff of -70.1537
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.64758 (15) obj. -95.3143 iterations 0
Cbc0038I Pass  32: suminf.    1.98288 (10) obj. -70.1537 iterations 20
Cbc0038I Pass  33: suminf.    1.98288 (10) obj. -70.1537 iterations 1
Cbc0038I Pass  34: suminf.    1.54805 (5) obj. -70.1537 iterations 11
Cbc0038I Pass  35: suminf.    1.54805 (5) obj. -70.1537 iterations 0
Cbc0038I Pass  36: suminf.    1.54677 (5) obj. -70.1537 iterations 6
Cbc0038I Pass  37: suminf.    1.54677 (5) obj. -70.1537 iterations 0
Cbc0038I Pass  38: suminf.    1.54805 (5) obj. -70.1537 iterations 7
Cbc0038I Pass  39: suminf.    4.24962 (15) obj. -70.1537 iterations 13
Cbc0038I Pass  40: suminf.    2.43216 (10) obj. -70.1537 iterations 7
Cbc0038I Pass  41: suminf.    1.74189 (9) obj. -70.1537 iterations 1
Cbc0038I Pass  42: suminf.    1.74189 (9) obj. -70.1537 iterations 0
Cbc0038I Pass  43: suminf.    1.62699 (6) obj. -70.1537 iterations 8
Cbc0038I Pass  44: suminf.    1.62699 (6) obj. -70.1537 iterations 1
Cbc0038I Pass  45: suminf.    1.62793 (6) obj. -70.1537 iterations 1
Cbc0038I Pass  46: suminf.    1.62793 (6) obj. -70.1537 iterations 0
Cbc0038I Pass  47: suminf.    1.62699 (6) obj. -70.1537 iterations 2
Cbc0038I Pass  48: suminf.    2.07812 (11) obj. -70.1537 iterations 9
Cbc0038I Pass  49: suminf.    1.16589 (6) obj. -70.1537 iterations 5
Cbc0038I Pass  50: suminf.    1.17791 (6) obj. -70.1537 iterations 7
Cbc0038I Pass  51: suminf.    2.27856 (9) obj. -70.1537 iterations 15
Cbc0038I Pass  52: suminf.    1.86304 (8) obj. -70.1537 iterations 3
Cbc0038I Pass  53: suminf.    1.76942 (6) obj. -70.1537 iterations 11
Cbc0038I Pass  54: suminf.    1.76942 (6) obj. -70.1537 iterations 0
Cbc0038I Pass  55: suminf.    1.66283 (6) obj. -70.1537 iterations 5
Cbc0038I Pass  56: suminf.    1.66283 (6) obj. -70.1537 iterations 0
Cbc0038I Pass  57: suminf.    1.76942 (6) obj. -70.1537 iterations 7
Cbc0038I Pass  58: suminf.    2.46234 (10) obj. -70.1537 iterations 9
Cbc0038I Pass  59: suminf.    1.69846 (8) obj. -70.1537 iterations 4
Cbc0038I Pass  60: suminf.    1.69846 (8) obj. -70.1537 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -52.948 - took 0.03 seconds
Cbc0012I Integer solution of -52.948023 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 49 rows 54 columns, reduced to 12 rows 12 columns
Cbc0031I 23 added rows had average density of 16.347826
Cbc0013I At root node, 23 cuts changed objective from -97.946379 to -58.005091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 656 row cuts average 3.6 elements, 11 column cuts (11 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 714 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 138 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -52.948023 best solution, best possible -58.005091 (1.50 seconds)
Cbc0012I Integer solution of -53.243853 found by rounding after 1643 iterations and 1 nodes (1.52 seconds)
Cbc0001I Search completed - best objective -53.24385300000023, took 2031 iterations and 6 nodes (1.91 seconds)
Cbc0032I Strong branching done 72 times (623 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.21   (Wallclock seconds):       1.91

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 6.53555e-05 - average 1.28148e-06, 4 fixed columns
Coin0506I Presolve 40 (-11) rows, 25 (-4) columns and 122 (-30) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.1370666 - largest nonzero change 0 ( 0%) - largest zero change 2.8693142e-05
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Coin0511I After Postsolve, objective 101.74695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Clp0000I Optimal - objective value 101.74695
Coin0511I After Postsolve, objective 101.74695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.7469525 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.3074
Cbc0038I Pass   1: suminf.    0.16667 (1) obj. -44.3313 iterations 21
Cbc0038I Solution found of -24.7678
Cbc0038I Relaxing continuous gives -24.7678
Cbc0038I Rounding solution of -45.1414 is better than previous of -24.7678

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -45.1414 to -51.4261 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.4583
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.71960 (5) obj. -56.4583 iterations 5
Cbc0038I Pass   3: suminf.    0.78573 (2) obj. -56.4583 iterations 6
Cbc0038I Pass   4: suminf.    0.72339 (2) obj. -56.4583 iterations 2
Cbc0038I Pass   5: suminf.    0.71254 (3) obj. -56.4583 iterations 1
Cbc0038I Pass   6: suminf.    0.61651 (2) obj. -56.4583 iterations 3
Cbc0038I Pass   7: suminf.    0.61651 (2) obj. -56.4583 iterations 0
Cbc0038I Pass   8: suminf.    0.69611 (2) obj. -56.4583 iterations 2
Cbc0038I Pass   9: suminf.    0.69611 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  10: suminf.    1.46169 (5) obj. -56.4583 iterations 9
Cbc0038I Pass  11: suminf.    1.37693 (6) obj. -56.4583 iterations 2
Cbc0038I Pass  12: suminf.    1.71811 (4) obj. -56.4583 iterations 8
Cbc0038I Pass  13: suminf.    0.28135 (2) obj. -56.4583 iterations 5
Cbc0038I Pass  14: suminf.    0.37966 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  15: suminf.    0.37966 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  16: suminf.    0.82166 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  17: suminf.    1.01147 (4) obj. -56.4583 iterations 5
Cbc0038I Pass  18: suminf.    1.01147 (4) obj. -56.4583 iterations 0
Cbc0038I Pass  19: suminf.    1.52405 (5) obj. -56.4583 iterations 8
Cbc0038I Pass  20: suminf.    1.19595 (5) obj. -56.4583 iterations 1
Cbc0038I Pass  21: suminf.    0.80679 (3) obj. -56.4583 iterations 3
Cbc0038I Pass  22: suminf.    0.61651 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  23: suminf.    0.69611 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  24: suminf.    0.69611 (2) obj. -56.4583 iterations 0
Cbc0038I Pass  25: suminf.    0.61651 (2) obj. -56.4583 iterations 2
Cbc0038I Pass  26: suminf.    1.48797 (5) obj. -56.4583 iterations 9
Cbc0038I Pass  27: suminf.    0.73008 (4) obj. -56.4583 iterations 5
Cbc0038I Pass  28: suminf.    1.33702 (5) obj. -56.4583 iterations 5
Cbc0038I Pass  29: suminf.    0.87472 (3) obj. -56.4583 iterations 3
Cbc0038I Pass  30: suminf.    0.77905 (3) obj. -56.4583 iterations 1
Cbc0038I Pass  31: suminf.    1.33702 (5) obj. -56.4583 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -51.4261 - took 0.02 seconds
Cbc0012I Integer solution of -51.426093 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 18 columns
Cbc0031I 10 added rows had average density of 13.9
Cbc0013I At root node, 10 cuts changed objective from -101.74695 to -67.991847 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1498 row cuts average 4.9 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 783 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -53.243853 found by rounding after 1933 iterations and 2 nodes (0.17 seconds)
Cbc0001I Search completed - best objective -53.24385300000023, took 2436 iterations and 10 nodes (0.20 seconds)
Cbc0032I Strong branching done 76 times (628 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 54 (-7) columns and 495 (-118) elements
Clp1000I sum of infeasibilities 3.09648e-08 - average 6.31934e-10, 18 fixed columns
Coin0506I Presolve 23 (-26) rows, 28 (-26) columns and 181 (-314) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 1.4878826 - largest nonzero change 0 ( 0%) - largest zero change 2.6394368e-05
Clp0000I Optimal - objective value 127.16779
Clp0000I Optimal - objective value 127.16779
Coin0511I After Postsolve, objective 127.16779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 127.16779
Clp0000I Optimal - objective value 127.16779
Clp0000I Optimal - objective value 127.16779
Coin0511I After Postsolve, objective 127.16779, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 127.16779 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 54 columns (54 integer (54 of which binary)) and 498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.662%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 5.5638
Cbc0038I Pass   1: suminf.    1.64758 (15) obj. -95.3143 iterations 18
Cbc0038I Solution found of -28.5519
Cbc0038I Rounding solution of -37.2994 is better than previous of -28.5519

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -37.2994 to -51.2558 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.0051
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.64758 (15) obj. -95.3143 iterations 0
Cbc0038I Pass   3: suminf.    1.21845 (9) obj. -58.0051 iterations 28
Cbc0038I Pass   4: suminf.    1.21845 (9) obj. -58.0051 iterations 1
Cbc0038I Pass   5: suminf.    0.89501 (3) obj. -58.0051 iterations 12
Cbc0038I Pass   6: suminf.    0.86456 (3) obj. -58.4313 iterations 1
Cbc0038I Pass   7: suminf.    0.89501 (3) obj. -58.0051 iterations 3
Cbc0038I Pass   8: suminf.    2.09236 (9) obj. -58.0051 iterations 16
Cbc0038I Pass   9: suminf.    1.22212 (6) obj. -58.0051 iterations 5
Cbc0038I Pass  10: suminf.    1.40999 (5) obj. -58.0051 iterations 10
Cbc0038I Pass  11: suminf.    1.41115 (6) obj. -58.0051 iterations 1
Cbc0038I Pass  12: suminf.    1.54815 (6) obj. -58.0051 iterations 2
Cbc0038I Pass  13: suminf.    1.23620 (4) obj. -58.0051 iterations 3
Cbc0038I Pass  14: suminf.    2.15472 (7) obj. -58.0051 iterations 14
Cbc0038I Pass  15: suminf.    2.15472 (7) obj. -58.0051 iterations 6
Cbc0038I Pass  16: suminf.    2.08334 (6) obj. -58.0051 iterations 6
Cbc0038I Pass  17: suminf.    2.08334 (6) obj. -58.0051 iterations 1
Cbc0038I Pass  18: suminf.    2.43477 (8) obj. -58.0051 iterations 4
Cbc0038I Pass  19: suminf.    2.43477 (8) obj. -58.0051 iterations 0
Cbc0038I Pass  20: suminf.    2.08334 (6) obj. -58.0051 iterations 3
Cbc0038I Pass  21: suminf.    3.82265 (13) obj. -58.0051 iterations 14
Cbc0038I Pass  22: suminf.    3.27612 (12) obj. -58.0051 iterations 4
Cbc0038I Pass  23: suminf.    3.27612 (12) obj. -58.0051 iterations 0
Cbc0038I Pass  24: suminf.    2.57679 (8) obj. -58.0051 iterations 12
Cbc0038I Pass  25: suminf.    2.57679 (8) obj. -58.0051 iterations 1
Cbc0038I Pass  26: suminf.    2.26380 (7) obj. -58.0051 iterations 6
Cbc0038I Pass  27: suminf.    2.25978 (7) obj. -58.0051 iterations 2
Cbc0038I Pass  28: suminf.    2.57679 (8) obj. -58.0051 iterations 2
Cbc0038I Pass  29: suminf.    4.90759 (16) obj. -58.0051 iterations 18
Cbc0038I Pass  30: suminf.    3.54333 (13) obj. -58.0051 iterations 5
Cbc0038I Pass  31: suminf.    3.54333 (13) obj. -58.0051 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 32 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -51.2558 to -52.948 (0.03 seconds)
Cbc0038I Round again with cutoff of -70.1537
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.64758 (15) obj. -95.3143 iterations 0
Cbc0038I Pass  32: suminf.    1.98288 (10) obj. -70.1537 iterations 29
Cbc0038I Pass  33: suminf.    1.98288 (10) obj. -70.1537 iterations 1
Cbc0038I Pass  34: suminf.    1.54805 (5) obj. -70.1537 iterations 11
Cbc0038I Pass  35: suminf.    1.54805 (5) obj. -70.1537 iterations 0
Cbc0038I Pass  36: suminf.    1.54677 (5) obj. -70.1537 iterations 6
Cbc0038I Pass  37: suminf.    1.54677 (5) obj. -70.1537 iterations 1
Cbc0038I Pass  38: suminf.    1.54805 (5) obj. -70.1537 iterations 5
Cbc0038I Pass  39: suminf.    4.24962 (15) obj. -70.1537 iterations 13
Cbc0038I Pass  40: suminf.    2.43216 (10) obj. -70.1537 iterations 5
Cbc0038I Pass  41: suminf.    1.74189 (9) obj. -70.1537 iterations 1
Cbc0038I Pass  42: suminf.    1.74189 (9) obj. -70.1537 iterations 0
Cbc0038I Pass  43: suminf.    1.62699 (6) obj. -70.1537 iterations 8
Cbc0038I Pass  44: suminf.    1.62699 (6) obj. -70.1537 iterations 0
Cbc0038I Pass  45: suminf.    1.62793 (6) obj. -70.1537 iterations 5
Cbc0038I Pass  46: suminf.    1.62793 (6) obj. -70.1537 iterations 0
Cbc0038I Pass  47: suminf.    1.62699 (6) obj. -70.1537 iterations 1
Cbc0038I Pass  48: suminf.    2.07812 (11) obj. -70.1537 iterations 10
Cbc0038I Pass  49: suminf.    1.16589 (6) obj. -70.1537 iterations 6
Cbc0038I Pass  50: suminf.    1.17791 (6) obj. -70.1537 iterations 5
Cbc0038I Pass  51: suminf.    2.27856 (9) obj. -70.1537 iterations 17
Cbc0038I Pass  52: suminf.    1.86304 (8) obj. -70.1537 iterations 4
Cbc0038I Pass  53: suminf.    1.76942 (6) obj. -70.1537 iterations 8
Cbc0038I Pass  54: suminf.    1.76942 (6) obj. -70.1537 iterations 0
Cbc0038I Pass  55: suminf.    1.66283 (6) obj. -70.1537 iterations 5
Cbc0038I Pass  56: suminf.    1.66283 (6) obj. -70.1537 iterations 0
Cbc0038I Pass  57: suminf.    1.76942 (6) obj. -70.1537 iterations 1
Cbc0038I Pass  58: suminf.    2.46234 (10) obj. -70.1537 iterations 9
Cbc0038I Pass  59: suminf.    1.69846 (8) obj. -70.1537 iterations 5
Cbc0038I Pass  60: suminf.    1.69846 (8) obj. -70.1537 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 54 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -52.948 - took 0.03 seconds
Cbc0012I Integer solution of -52.948023 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 49 rows 54 columns, reduced to 12 rows 12 columns
Cbc0031I 20 added rows had average density of 15.6
Cbc0013I At root node, 20 cuts changed objective from -97.946379 to -57.527927 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 791 row cuts average 4.1 elements, 14 column cuts (14 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 592 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 99 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 152 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -52.948023 best solution, best possible -57.527927 (1.47 seconds)
Cbc0004I Integer solution of -53.243853 found after 1666 iterations and 5 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -53.24385300000023, took 1903 iterations and 8 nodes (1.90 seconds)
Cbc0032I Strong branching done 110 times (1062 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 7 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.91

