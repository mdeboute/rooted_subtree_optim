Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-10) rows, 30 (-2) columns and 159 (-18) elements
Clp1000I sum of infeasibilities 0.000562818 - average 1.06192e-05, 3 fixed columns
Coin0506I Presolve 44 (-9) rows, 26 (-4) columns and 133 (-26) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Coin0511I After Postsolve, objective 68.651143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Coin0511I After Postsolve, objective 68.651143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.6511432 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 30 columns (29 integer (29 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.62107
Cbc0038I Solution found of -5.43272
Cbc0038I Relaxing continuous gives -5.43272
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -5.43272 to -20.1463 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.9969
Cbc0038I Pass   1: suminf.    1.28618 (5) obj. -24.9969 iterations 25
Cbc0038I Pass   2: suminf.    0.91603 (4) obj. -24.9969 iterations 7
Cbc0038I Pass   3: suminf.    0.68748 (4) obj. -24.9969 iterations 3
Cbc0038I Pass   4: suminf.    1.62946 (5) obj. -24.9969 iterations 4
Cbc0038I Pass   5: suminf.    0.91603 (4) obj. -24.9969 iterations 1
Cbc0038I Pass   6: suminf.    2.88668 (10) obj. -24.9969 iterations 12
Cbc0038I Pass   7: suminf.    2.00401 (9) obj. -24.9969 iterations 5
Cbc0038I Pass   8: suminf.    1.19717 (6) obj. -24.9969 iterations 3
Cbc0038I Pass   9: suminf.    0.86598 (6) obj. -24.9969 iterations 2
Cbc0038I Pass  10: suminf.    1.18244 (5) obj. -24.9969 iterations 12
Cbc0038I Pass  11: suminf.    1.16905 (5) obj. -24.9969 iterations 1
Cbc0038I Pass  12: suminf.    1.22230 (3) obj. -24.9969 iterations 7
Cbc0038I Pass  13: suminf.    0.94962 (4) obj. -24.9969 iterations 2
Cbc0038I Pass  14: suminf.    0.94962 (4) obj. -24.9969 iterations 0
Cbc0038I Pass  15: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  16: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  17: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  18: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  19: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  20: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  21: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  22: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  23: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  24: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  25: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  26: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  27: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  28: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  29: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  30: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.1463 - took 0.06 seconds
Cbc0012I Integer solution of -20.14628 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 20 columns
Cbc0031I 13 added rows had average density of 16.076923
Cbc0013I At root node, 13 cuts changed objective from -68.651143 to -39.206679 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2371 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 919 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0012I Integer solution of -20.52107 found by rounding after 3452 iterations and 10 nodes (0.33 seconds)
Cbc0001I Search completed - best objective -20.52106999999999, took 3642 iterations and 20 nodes (0.34 seconds)
Cbc0032I Strong branching done 274 times (4036 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 55 (-5) columns and 507 (-105) elements
Clp1000I sum of infeasibilities 6.22351e-09 - average 1.2447e-10, 12 fixed columns
Coin0506I Presolve 39 (-11) rows, 43 (-12) columns and 279 (-228) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.3010597 - largest nonzero change 1.4290223e-05 ( 0.0012247315%) - largest zero change 2.5106883e-05
Clp0000I Optimal - objective value 87.991108
Clp0000I Optimal - objective value 87.991108
Coin0511I After Postsolve, objective 87.991108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.991108
Clp0000I Optimal - objective value 87.991108
Clp0000I Optimal - objective value 87.991108
Coin0511I After Postsolve, objective 87.991108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.99110841 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 55 columns (55 integer (55 of which binary)) and 510 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.551%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.6504
Cbc0038I Pass   1: suminf.    1.80266 (14) obj. -50.0221 iterations 7
Cbc0038I Pass   2: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Solution found of -2.98669
Cbc0038I Rounding solution of -15.9371 is better than previous of -2.98669

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -15.9371 to -16.6763 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.2557
Cbc0038I Pass   3: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass   4: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass   5: suminf.    0.69280 (3) obj. -22.2557 iterations 16
Cbc0038I Pass   6: suminf.    0.58325 (3) obj. -23.5703 iterations 1
Cbc0038I Pass   7: suminf.    0.60776 (5) obj. -22.2557 iterations 3
Cbc0038I Pass   8: suminf.    0.56449 (3) obj. -22.2557 iterations 1
Cbc0038I Pass   9: suminf.    0.47423 (2) obj. -22.2557 iterations 3
Cbc0038I Pass  10: suminf.    0.16000 (1) obj. -24.3122 iterations 2
Cbc0038I Pass  11: suminf.    0.47423 (2) obj. -22.2557 iterations 2
Cbc0038I Pass  12: suminf.    1.22035 (6) obj. -22.2557 iterations 7
Cbc0038I Pass  13: suminf.    1.22035 (6) obj. -22.2557 iterations 0
Cbc0038I Pass  14: suminf.    0.53269 (3) obj. -22.2557 iterations 10
Cbc0038I Pass  15: suminf.    0.53269 (3) obj. -22.2557 iterations 0
Cbc0038I Pass  16: suminf.    0.75791 (3) obj. -22.2557 iterations 2
Cbc0038I Pass  17: suminf.    0.75791 (3) obj. -22.2557 iterations 0
Cbc0038I Pass  18: suminf.    0.53269 (3) obj. -22.2557 iterations 1
Cbc0038I Pass  19: suminf.    1.95491 (11) obj. -22.2557 iterations 17
Cbc0038I Pass  20: suminf.    1.95491 (11) obj. -22.2557 iterations 1
Cbc0038I Pass  21: suminf.    1.28527 (4) obj. -22.2557 iterations 16
Cbc0038I Pass  22: suminf.    1.19049 (4) obj. -22.2557 iterations 1
Cbc0038I Pass  23: suminf.    1.03375 (4) obj. -22.2557 iterations 5
Cbc0038I Pass  24: suminf.    1.03375 (4) obj. -22.2557 iterations 0
Cbc0038I Pass  25: suminf.    1.27187 (4) obj. -22.2557 iterations 4
Cbc0038I Pass  26: suminf.    2.84303 (12) obj. -22.2557 iterations 11
Cbc0038I Pass  27: suminf.    2.33831 (12) obj. -22.2557 iterations 3
Cbc0038I Pass  28: suminf.    2.00159 (7) obj. -22.2557 iterations 9
Cbc0038I Pass  29: suminf.    1.91510 (7) obj. -22.2557 iterations 1
Cbc0038I Pass  30: suminf.    1.28527 (4) obj. -22.2557 iterations 8
Cbc0038I Pass  31: suminf.    1.19049 (4) obj. -22.2557 iterations 1
Cbc0038I Pass  32: suminf.    1.03375 (4) obj. -22.2557 iterations 5
Cbc0038I Rounding solution of -20.5211 is better than previous of -16.6763

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -32.2985
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass  33: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass  34: suminf.    1.02860 (5) obj. -32.2985 iterations 14
Cbc0038I Pass  35: suminf.    0.94691 (5) obj. -32.2985 iterations 1
Cbc0038I Pass  36: suminf.    0.66588 (7) obj. -32.2985 iterations 5
Cbc0038I Pass  37: suminf.    0.47593 (3) obj. -32.2985 iterations 2
Cbc0038I Pass  38: suminf.    0.29736 (3) obj. -32.2985 iterations 4
Cbc0038I Pass  39: suminf.    0.29736 (3) obj. -32.2985 iterations 1
Cbc0038I Pass  40: suminf.    0.48646 (7) obj. -32.2985 iterations 3
Cbc0038I Pass  41: suminf.    3.44927 (14) obj. -32.2985 iterations 21
Cbc0038I Pass  42: suminf.    2.74705 (12) obj. -32.2985 iterations 5
Cbc0038I Pass  43: suminf.    2.58927 (11) obj. -32.2985 iterations 1
Cbc0038I Pass  44: suminf.    1.52076 (5) obj. -32.2985 iterations 18
Cbc0038I Pass  45: suminf.    1.51278 (7) obj. -32.2985 iterations 1
Cbc0038I Pass  46: suminf.    1.77352 (7) obj. -32.2985 iterations 3
Cbc0038I Pass  47: suminf.    1.76051 (5) obj. -32.2985 iterations 2
Cbc0038I Pass  48: suminf.    1.52076 (5) obj. -32.2985 iterations 3
Cbc0038I Pass  49: suminf.    1.71578 (8) obj. -32.2985 iterations 10
Cbc0038I Pass  50: suminf.    1.64334 (8) obj. -32.7331 iterations 4
Cbc0038I Pass  51: suminf.    1.93914 (10) obj. -32.2985 iterations 6
Cbc0038I Pass  52: suminf.    1.58645 (6) obj. -32.2985 iterations 2
Cbc0038I Pass  53: suminf.    1.41774 (5) obj. -32.2985 iterations 7
Cbc0038I Pass  54: suminf.    1.30272 (5) obj. -32.2985 iterations 2
Cbc0038I Pass  55: suminf.    1.59145 (5) obj. -32.2985 iterations 5
Cbc0038I Pass  56: suminf.    1.38432 (5) obj. -32.2985 iterations 2
Cbc0038I Pass  57: suminf.    1.69119 (7) obj. -35.5194 iterations 9
Cbc0038I Pass  58: suminf.    1.69119 (7) obj. -35.5194 iterations 3
Cbc0038I Pass  59: suminf.    1.82125 (8) obj. -32.2985 iterations 7
Cbc0038I Pass  60: suminf.    1.59145 (5) obj. -32.2985 iterations 1
Cbc0038I Pass  61: suminf.    2.11058 (10) obj. -32.2985 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.5211 - took 0.04 seconds
Cbc0012I Integer solution of -20.52107 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 55 columns, reduced to 7 rows 10 columns
Cbc0031I 20 added rows had average density of 12.35
Cbc0013I At root node, 20 cuts changed objective from -72.469508 to -21.796237 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 426 row cuts average 3.2 elements, 14 column cuts (14 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 453 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.765 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.52107 best solution, best possible -21.796237 (1.54 seconds)
Cbc0001I Search completed - best objective -20.52106999999999, took 1445 iterations and 6 nodes (1.58 seconds)
Cbc0032I Strong branching done 56 times (306 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-10) rows, 30 (-2) columns and 159 (-18) elements
Clp1000I sum of infeasibilities 0.000562818 - average 1.06192e-05, 3 fixed columns
Coin0506I Presolve 44 (-9) rows, 26 (-4) columns and 133 (-26) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Coin0511I After Postsolve, objective 68.651143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Clp0000I Optimal - objective value 68.651143
Coin0511I After Postsolve, objective 68.651143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.6511432 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 30 columns (29 integer (29 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.62107
Cbc0038I Solution found of -5.43272
Cbc0038I Relaxing continuous gives -5.43272
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -5.43272 to -20.1463 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.9969
Cbc0038I Pass   1: suminf.    1.28618 (5) obj. -24.9969 iterations 25
Cbc0038I Pass   2: suminf.    0.91603 (4) obj. -24.9969 iterations 7
Cbc0038I Pass   3: suminf.    0.68748 (4) obj. -24.9969 iterations 3
Cbc0038I Pass   4: suminf.    1.62946 (5) obj. -24.9969 iterations 4
Cbc0038I Pass   5: suminf.    0.91603 (4) obj. -24.9969 iterations 1
Cbc0038I Pass   6: suminf.    2.88668 (10) obj. -24.9969 iterations 12
Cbc0038I Pass   7: suminf.    2.00401 (9) obj. -24.9969 iterations 5
Cbc0038I Pass   8: suminf.    1.19717 (6) obj. -24.9969 iterations 3
Cbc0038I Pass   9: suminf.    0.86598 (6) obj. -24.9969 iterations 2
Cbc0038I Pass  10: suminf.    1.18244 (5) obj. -24.9969 iterations 12
Cbc0038I Pass  11: suminf.    1.16905 (5) obj. -24.9969 iterations 1
Cbc0038I Pass  12: suminf.    1.22230 (3) obj. -24.9969 iterations 7
Cbc0038I Pass  13: suminf.    0.94962 (4) obj. -24.9969 iterations 2
Cbc0038I Pass  14: suminf.    0.94962 (4) obj. -24.9969 iterations 0
Cbc0038I Pass  15: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  16: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  17: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  18: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  19: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  20: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  21: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  22: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  23: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  24: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  25: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I Pass  26: suminf.    0.32137 (2) obj. -24.9969 iterations 4
Cbc0038I Pass  27: suminf.    1.05981 (3) obj. -24.9969 iterations 4
Cbc0038I Pass  28: suminf.    0.97274 (4) obj. -24.9969 iterations 4
Cbc0038I Pass  29: suminf.    0.94962 (4) obj. -24.9969 iterations 1
Cbc0038I Pass  30: suminf.    0.82554 (3) obj. -24.9969 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.1463 - took 0.04 seconds
Cbc0012I Integer solution of -20.14628 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 20 columns
Cbc0031I 13 added rows had average density of 16.076923
Cbc0013I At root node, 13 cuts changed objective from -68.651143 to -39.206679 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2371 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 919 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0012I Integer solution of -20.52107 found by rounding after 3452 iterations and 10 nodes (0.33 seconds)
Cbc0001I Search completed - best objective -20.52106999999999, took 3642 iterations and 20 nodes (0.34 seconds)
Cbc0032I Strong branching done 274 times (4036 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 55 (-6) columns and 507 (-106) elements
Clp1000I sum of infeasibilities 6.22351e-09 - average 1.2447e-10, 12 fixed columns
Coin0506I Presolve 39 (-11) rows, 43 (-12) columns and 279 (-228) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.3010597 - largest nonzero change 1.4290223e-05 ( 0.0012247315%) - largest zero change 2.5106883e-05
Clp0000I Optimal - objective value 87.991108
Clp0000I Optimal - objective value 87.991108
Coin0511I After Postsolve, objective 87.991108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.991108
Clp0000I Optimal - objective value 87.991108
Clp0000I Optimal - objective value 87.991108
Coin0511I After Postsolve, objective 87.991108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.99110841 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 55 columns (55 integer (55 of which binary)) and 510 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.551%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.6504
Cbc0038I Pass   1: suminf.    1.80266 (14) obj. -50.0221 iterations 7
Cbc0038I Pass   2: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Solution found of -2.98669
Cbc0038I Rounding solution of -15.9371 is better than previous of -2.98669

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -15.9371 to -16.6763 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.2557
Cbc0038I Pass   3: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass   4: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass   5: suminf.    0.69280 (3) obj. -22.2557 iterations 16
Cbc0038I Pass   6: suminf.    0.58325 (3) obj. -23.5703 iterations 1
Cbc0038I Pass   7: suminf.    0.60776 (5) obj. -22.2557 iterations 3
Cbc0038I Pass   8: suminf.    0.56449 (3) obj. -22.2557 iterations 1
Cbc0038I Pass   9: suminf.    0.47423 (2) obj. -22.2557 iterations 3
Cbc0038I Pass  10: suminf.    0.16000 (1) obj. -24.3122 iterations 2
Cbc0038I Pass  11: suminf.    0.47423 (2) obj. -22.2557 iterations 2
Cbc0038I Pass  12: suminf.    1.22035 (6) obj. -22.2557 iterations 7
Cbc0038I Pass  13: suminf.    1.22035 (6) obj. -22.2557 iterations 0
Cbc0038I Pass  14: suminf.    0.53269 (3) obj. -22.2557 iterations 10
Cbc0038I Pass  15: suminf.    0.53269 (3) obj. -22.2557 iterations 0
Cbc0038I Pass  16: suminf.    0.75791 (3) obj. -22.2557 iterations 2
Cbc0038I Pass  17: suminf.    0.75791 (3) obj. -22.2557 iterations 0
Cbc0038I Pass  18: suminf.    0.53269 (3) obj. -22.2557 iterations 1
Cbc0038I Pass  19: suminf.    1.95491 (11) obj. -22.2557 iterations 17
Cbc0038I Pass  20: suminf.    1.95491 (11) obj. -22.2557 iterations 1
Cbc0038I Pass  21: suminf.    1.28527 (4) obj. -22.2557 iterations 16
Cbc0038I Pass  22: suminf.    1.19049 (4) obj. -22.2557 iterations 1
Cbc0038I Pass  23: suminf.    1.03375 (4) obj. -22.2557 iterations 5
Cbc0038I Pass  24: suminf.    1.03375 (4) obj. -22.2557 iterations 0
Cbc0038I Pass  25: suminf.    1.27187 (4) obj. -22.2557 iterations 4
Cbc0038I Pass  26: suminf.    2.84303 (12) obj. -22.2557 iterations 11
Cbc0038I Pass  27: suminf.    2.33831 (12) obj. -22.2557 iterations 3
Cbc0038I Pass  28: suminf.    2.00159 (7) obj. -22.2557 iterations 9
Cbc0038I Pass  29: suminf.    1.91510 (7) obj. -22.2557 iterations 1
Cbc0038I Pass  30: suminf.    1.28527 (4) obj. -22.2557 iterations 8
Cbc0038I Pass  31: suminf.    1.19049 (4) obj. -22.2557 iterations 1
Cbc0038I Pass  32: suminf.    1.03375 (4) obj. -22.2557 iterations 5
Cbc0038I Rounding solution of -20.5211 is better than previous of -16.6763

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -32.2985
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass  33: suminf.    1.80266 (14) obj. -50.0221 iterations 0
Cbc0038I Pass  34: suminf.    1.02860 (5) obj. -32.2985 iterations 14
Cbc0038I Pass  35: suminf.    0.94691 (5) obj. -32.2985 iterations 1
Cbc0038I Pass  36: suminf.    0.66588 (7) obj. -32.2985 iterations 5
Cbc0038I Pass  37: suminf.    0.47593 (3) obj. -32.2985 iterations 2
Cbc0038I Pass  38: suminf.    0.29736 (3) obj. -32.2985 iterations 4
Cbc0038I Pass  39: suminf.    0.29736 (3) obj. -32.2985 iterations 1
Cbc0038I Pass  40: suminf.    0.48646 (7) obj. -32.2985 iterations 3
Cbc0038I Pass  41: suminf.    3.44927 (14) obj. -32.2985 iterations 21
Cbc0038I Pass  42: suminf.    2.74705 (12) obj. -32.2985 iterations 5
Cbc0038I Pass  43: suminf.    2.58927 (11) obj. -32.2985 iterations 1
Cbc0038I Pass  44: suminf.    1.52076 (5) obj. -32.2985 iterations 18
Cbc0038I Pass  45: suminf.    1.51278 (7) obj. -32.2985 iterations 1
Cbc0038I Pass  46: suminf.    1.77352 (7) obj. -32.2985 iterations 3
Cbc0038I Pass  47: suminf.    1.76051 (5) obj. -32.2985 iterations 2
Cbc0038I Pass  48: suminf.    1.52076 (5) obj. -32.2985 iterations 3
Cbc0038I Pass  49: suminf.    1.71578 (8) obj. -32.2985 iterations 10
Cbc0038I Pass  50: suminf.    1.64334 (8) obj. -32.7331 iterations 4
Cbc0038I Pass  51: suminf.    1.93914 (10) obj. -32.2985 iterations 6
Cbc0038I Pass  52: suminf.    1.58645 (6) obj. -32.2985 iterations 2
Cbc0038I Pass  53: suminf.    1.41774 (5) obj. -32.2985 iterations 7
Cbc0038I Pass  54: suminf.    1.30272 (5) obj. -32.2985 iterations 2
Cbc0038I Pass  55: suminf.    1.59145 (5) obj. -32.2985 iterations 5
Cbc0038I Pass  56: suminf.    1.38432 (5) obj. -32.2985 iterations 2
Cbc0038I Pass  57: suminf.    1.69119 (7) obj. -35.5194 iterations 9
Cbc0038I Pass  58: suminf.    1.69119 (7) obj. -35.5194 iterations 3
Cbc0038I Pass  59: suminf.    1.82125 (8) obj. -32.2985 iterations 7
Cbc0038I Pass  60: suminf.    1.59145 (5) obj. -32.2985 iterations 1
Cbc0038I Pass  61: suminf.    2.11058 (10) obj. -32.2985 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.5211 - took 0.04 seconds
Cbc0012I Integer solution of -20.52107 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 55 columns, reduced to 7 rows 10 columns
Cbc0031I 20 added rows had average density of 12.35
Cbc0013I At root node, 20 cuts changed objective from -72.469508 to -21.796237 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 426 row cuts average 3.2 elements, 14 column cuts (14 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 453 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.52107 best solution, best possible -21.796237 (1.48 seconds)
Cbc0001I Search completed - best objective -20.52106999999999, took 1445 iterations and 6 nodes (1.53 seconds)
Cbc0032I Strong branching done 56 times (306 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.53

