Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 2.04604e-05 - average 2.32505e-07, 2 fixed columns
Coin0506I Presolve 84 (-4) rows, 46 (-2) columns and 252 (-12) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 5091.9748
Clp0000I Optimal - objective value 5091.9748
Coin0511I After Postsolve, objective 5091.9748, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306143 - largest nonzero change 0 ( 0%) - largest zero change 1.0354403e-05
Clp0000I Optimal - objective value 5091.9748
Clp0000I Optimal - objective value 5091.9748
Clp0000I Optimal - objective value 5091.9748
Coin0511I After Postsolve, objective 5091.9748, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5091.97478 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.1497
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1349.12 iterations 37
Cbc0038I Solution found of 1349.12
Cbc0038I Relaxing continuous gives 1349.12
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 1349.12 to -3119.17 (0.06 seconds)
Cbc0038I Round again with cutoff of -3316.45
Cbc0038I Pass   2: suminf.    9.25999 (45) obj. -3316.45 iterations 41
Cbc0038I Pass   3: suminf.    9.23478 (45) obj. -3316.45 iterations 7
Cbc0038I Pass   4: suminf.    3.36111 (16) obj. -3316.45 iterations 45
Cbc0038I Pass   5: suminf.    2.00000 (11) obj. -3316.45 iterations 9
Cbc0038I Pass   6: suminf.    5.00109 (18) obj. -3316.45 iterations 21
Cbc0038I Pass   7: suminf.    1.83187 (9) obj. -3316.45 iterations 11
Cbc0038I Pass   8: suminf.    1.29084 (8) obj. -3316.45 iterations 1
Cbc0038I Pass   9: suminf.    3.69090 (10) obj. -3316.45 iterations 7
Cbc0038I Pass  10: suminf.    1.67138 (9) obj. -3316.45 iterations 7
Cbc0038I Pass  11: suminf.    1.66528 (8) obj. -3316.45 iterations 1
Cbc0038I Pass  12: suminf.    2.46206 (8) obj. -3316.45 iterations 8
Cbc0038I Pass  13: suminf.    2.10122 (7) obj. -3316.45 iterations 2
Cbc0038I Pass  14: suminf.    1.61209 (6) obj. -3316.45 iterations 2
Cbc0038I Pass  15: suminf.    1.91562 (7) obj. -3316.45 iterations 5
Cbc0038I Pass  16: suminf.    1.36077 (6) obj. -3316.45 iterations 2
Cbc0038I Pass  17: suminf.    4.46300 (13) obj. -3316.45 iterations 10
Cbc0038I Pass  18: suminf.    1.89316 (8) obj. -3316.45 iterations 9
Cbc0038I Pass  19: suminf.    1.25731 (6) obj. -3316.45 iterations 3
Cbc0038I Pass  20: suminf.    2.77269 (8) obj. -3316.45 iterations 11
Cbc0038I Pass  21: suminf.    2.00000 (7) obj. -3316.45 iterations 8
Cbc0038I Pass  22: suminf.    2.85582 (9) obj. -3316.45 iterations 6
Cbc0038I Pass  23: suminf.    2.00000 (9) obj. -3316.45 iterations 8
Cbc0038I Pass  24: suminf.    4.04683 (16) obj. -3316.45 iterations 11
Cbc0038I Pass  25: suminf.    1.59146 (9) obj. -3316.45 iterations 11
Cbc0038I Pass  26: suminf.    1.57214 (8) obj. -3316.45 iterations 1
Cbc0038I Pass  27: suminf.    2.25370 (8) obj. -3316.45 iterations 8
Cbc0038I Pass  28: suminf.    1.56643 (6) obj. -3316.45 iterations 3
Cbc0038I Pass  29: suminf.    1.55550 (6) obj. -3316.45 iterations 1
Cbc0038I Pass  30: suminf.    1.86551 (7) obj. -3316.45 iterations 5
Cbc0038I Pass  31: suminf.    1.30393 (6) obj. -3316.45 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -3119.17 - took 0.08 seconds
Cbc0012I Integer solution of -3119.167 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 23 added rows had average density of 36.347826
Cbc0013I At root node, 23 cuts changed objective from -5091.9748 to -4037.6016 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7373 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1179 row cuts average 44.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 12 nodes, 9 on tree, -3119.167 best solution, best possible -4037.6016 (0.67 seconds)
Cbc0001I Search completed - best objective -3119.166999999999, took 6368 iterations and 24 nodes (0.68 seconds)
Cbc0032I Strong branching done 386 times (8740 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-10) rows, 94 (-2) columns and 1345 (-68) elements
Clp1000I sum of infeasibilities 7.45024e-09 - average 8.46618e-11, 84 fixed columns
Coin0506I Presolve 5 (-83) rows, 10 (-84) columns and 18 (-1327) elements
Clp0006I 0  Obj 1628.9503 Dual inf 45.22087 (10)
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 1.3636455 - largest nonzero change 0 ( 0%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value 1662.8378
Clp0000I Optimal - objective value 1662.8378
Coin0511I After Postsolve, objective 1662.8378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1662.8378 Dual inf 7299.4621 (59)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 3.8015893e-05 ( 0.00085132148%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 5559.3508
Clp0000I Optimal - objective value 5559.3508
Clp0000I Optimal - objective value 5559.3508
Coin0511I After Postsolve, objective 5559.3508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5559.350818 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 94 columns (94 integer (94 of which binary)) and 1347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.9061
Cbc0038I Pass   1: suminf.    2.32100 (24) obj. -2442.87 iterations 31
Cbc0038I Pass   2: suminf.    2.32100 (24) obj. -2442.87 iterations 6
Cbc0038I Pass   3: suminf.    0.95248 (13) obj. -1380.35 iterations 11
Cbc0038I Pass   4: suminf.    0.08514 (2) obj. -870.518 iterations 11
Cbc0038I Solution found of -806.402
Cbc0038I Rounding solution of -2864.79 is better than previous of -806.402

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -3063.17
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    4.77663 (38) obj. -3063.17 iterations 9
Cbc0038I Pass   6: suminf.    4.77663 (38) obj. -3063.17 iterations 0
Cbc0038I Pass   7: suminf.    0.56601 (2) obj. -3063.17 iterations 44
Cbc0038I Pass   8: suminf.    0.28261 (1) obj. -3173.64 iterations 6
Cbc0038I Pass   9: suminf.    0.44341 (1) obj. -3063.17 iterations 2
Cbc0038I Pass  10: suminf.    2.79348 (16) obj. -3063.17 iterations 28
Cbc0038I Pass  11: suminf.    1.77372 (14) obj. -3063.17 iterations 6
Cbc0038I Pass  12: suminf.    1.55416 (13) obj. -3160.44 iterations 4
Cbc0038I Pass  13: suminf.    0.80882 (6) obj. -3063.17 iterations 17
Cbc0038I Pass  14: suminf.    0.76556 (6) obj. -3069.79 iterations 5
Cbc0038I Pass  15: suminf.    1.08473 (5) obj. -3063.17 iterations 9
Cbc0038I Pass  16: suminf.    1.08473 (5) obj. -3063.17 iterations 1
Cbc0038I Pass  17: suminf.    1.12396 (5) obj. -3063.17 iterations 7
Cbc0038I Pass  18: suminf.    1.12396 (5) obj. -3063.17 iterations 1
Cbc0038I Pass  19: suminf.    1.08473 (5) obj. -3063.17 iterations 6
Cbc0038I Pass  20: suminf.    3.04408 (20) obj. -3063.17 iterations 28
Cbc0038I Pass  21: suminf.    1.87619 (16) obj. -3063.17 iterations 5
Cbc0038I Pass  22: suminf.    1.78770 (15) obj. -3076.09 iterations 4
Cbc0038I Pass  23: suminf.    2.93941 (10) obj. -3063.17 iterations 20
Cbc0038I Pass  24: suminf.    1.92980 (9) obj. -3063.17 iterations 3
Cbc0038I Pass  25: suminf.    1.62676 (9) obj. -3101.05 iterations 6
Cbc0038I Pass  26: suminf.    1.58389 (6) obj. -3063.17 iterations 12
Cbc0038I Pass  27: suminf.    1.50341 (6) obj. -3075.48 iterations 7
Cbc0038I Pass  28: suminf.    1.58389 (6) obj. -3063.17 iterations 7
Cbc0038I Pass  29: suminf.    4.21227 (17) obj. -3063.17 iterations 20
Cbc0038I Pass  30: suminf.    3.94878 (16) obj. -3063.17 iterations 5
Cbc0038I Pass  31: suminf.    2.72717 (8) obj. -3063.17 iterations 16
Cbc0038I Pass  32: suminf.    2.45353 (7) obj. -3063.17 iterations 9
Cbc0038I Pass  33: suminf.    2.45353 (7) obj. -3063.17 iterations 0
Cbc0038I Pass  34: suminf.    0.81525 (3) obj. -3063.17 iterations 13
Cbc0038I Rounding solution of -2894.79 is better than previous of -2864.79

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 52 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -2894.79 to -3039.7 (0.04 seconds)
Cbc0038I Round again with cutoff of -3420.24
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    5.54420 (42) obj. -3420.24 iterations 5
Cbc0038I Pass  35: suminf.    5.24156 (37) obj. -3420.24 iterations 2
Cbc0038I Pass  36: suminf.    2.74725 (21) obj. -3420.24 iterations 22
Cbc0038I Pass  37: suminf.    2.74725 (21) obj. -3420.24 iterations 0
Cbc0038I Pass  38: suminf.    1.09820 (6) obj. -3420.24 iterations 25
Cbc0038I Pass  39: suminf.    1.09820 (6) obj. -3420.24 iterations 1
Cbc0038I Pass  40: suminf.    1.24086 (6) obj. -3420.24 iterations 5
Cbc0038I Pass  41: suminf.    1.24086 (6) obj. -3420.24 iterations 1
Cbc0038I Pass  42: suminf.    1.09820 (6) obj. -3420.24 iterations 4
Cbc0038I Pass  43: suminf.    2.51334 (13) obj. -3420.24 iterations 23
Cbc0038I Pass  44: suminf.    1.49127 (11) obj. -3420.24 iterations 13
Cbc0038I Pass  45: suminf.    1.44256 (10) obj. -3441.95 iterations 4
Cbc0038I Pass  46: suminf.    1.28045 (6) obj. -3420.24 iterations 12
Cbc0038I Pass  47: suminf.    0.96146 (6) obj. -3460.12 iterations 6
Cbc0038I Pass  48: suminf.    3.28699 (18) obj. -3420.24 iterations 16
Cbc0038I Pass  49: suminf.    2.99627 (16) obj. -3420.24 iterations 7
Cbc0038I Pass  50: suminf.    1.22932 (7) obj. -3420.24 iterations 11
Cbc0038I Pass  51: suminf.    1.22932 (7) obj. -3420.24 iterations 0
Cbc0038I Pass  52: suminf.    1.26584 (6) obj. -3420.24 iterations 5
Cbc0038I Pass  53: suminf.    0.96146 (6) obj. -3460.12 iterations 4
Cbc0038I Pass  54: suminf.    1.28045 (6) obj. -3420.24 iterations 8
Cbc0038I Pass  55: suminf.    1.86765 (10) obj. -3420.24 iterations 12
Cbc0038I Pass  56: suminf.    1.86765 (10) obj. -3420.24 iterations 3
Cbc0038I Pass  57: suminf.    1.00045 (6) obj. -3420.24 iterations 8
Cbc0038I Pass  58: suminf.    0.96146 (6) obj. -3425.12 iterations 4
Cbc0038I Pass  59: suminf.    1.00045 (6) obj. -3420.24 iterations 8
Cbc0038I Pass  60: suminf.    3.64911 (23) obj. -3420.24 iterations 20
Cbc0038I Pass  61: suminf.    2.38292 (16) obj. -3420.24 iterations 6
Cbc0038I Pass  62: suminf.    2.38292 (16) obj. -3420.24 iterations 0
Cbc0038I Pass  63: suminf.    1.19419 (13) obj. -3420.24 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -3039.7 - took 0.04 seconds
Cbc0012I Integer solution of -3039.704 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 94 columns, reduced to 25 rows 32 columns
Cbc0012I Integer solution of -3119.167 found by DiveCoefficient after 307 iterations and 0 nodes (0.17 seconds)
Cbc0031I 43 added rows had average density of 13.116279
Cbc0013I At root node, 43 cuts changed objective from -4848.5423 to -3119.167 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 1309 row cuts average 6.1 elements, 14 column cuts (21 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 115 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3119.166999999999, took 307 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 2.04604e-05 - average 2.32505e-07, 2 fixed columns
Coin0506I Presolve 84 (-4) rows, 46 (-2) columns and 252 (-12) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 5091.9748
Clp0000I Optimal - objective value 5091.9748
Coin0511I After Postsolve, objective 5091.9748, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306143 - largest nonzero change 0 ( 0%) - largest zero change 1.0354403e-05
Clp0000I Optimal - objective value 5091.9748
Clp0000I Optimal - objective value 5091.9748
Clp0000I Optimal - objective value 5091.9748
Coin0511I After Postsolve, objective 5091.9748, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5091.97478 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.1497
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1349.12 iterations 37
Cbc0038I Solution found of 1349.12
Cbc0038I Relaxing continuous gives 1349.12
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 1349.12 to -3119.17 (0.06 seconds)
Cbc0038I Round again with cutoff of -3316.45
Cbc0038I Pass   2: suminf.    9.25999 (45) obj. -3316.45 iterations 41
Cbc0038I Pass   3: suminf.    9.23478 (45) obj. -3316.45 iterations 7
Cbc0038I Pass   4: suminf.    3.36111 (16) obj. -3316.45 iterations 45
Cbc0038I Pass   5: suminf.    2.00000 (11) obj. -3316.45 iterations 9
Cbc0038I Pass   6: suminf.    5.00109 (18) obj. -3316.45 iterations 21
Cbc0038I Pass   7: suminf.    1.83187 (9) obj. -3316.45 iterations 11
Cbc0038I Pass   8: suminf.    1.29084 (8) obj. -3316.45 iterations 1
Cbc0038I Pass   9: suminf.    3.69090 (10) obj. -3316.45 iterations 7
Cbc0038I Pass  10: suminf.    1.67138 (9) obj. -3316.45 iterations 7
Cbc0038I Pass  11: suminf.    1.66528 (8) obj. -3316.45 iterations 1
Cbc0038I Pass  12: suminf.    2.46206 (8) obj. -3316.45 iterations 8
Cbc0038I Pass  13: suminf.    2.10122 (7) obj. -3316.45 iterations 2
Cbc0038I Pass  14: suminf.    1.61209 (6) obj. -3316.45 iterations 2
Cbc0038I Pass  15: suminf.    1.91562 (7) obj. -3316.45 iterations 5
Cbc0038I Pass  16: suminf.    1.36077 (6) obj. -3316.45 iterations 2
Cbc0038I Pass  17: suminf.    4.46300 (13) obj. -3316.45 iterations 10
Cbc0038I Pass  18: suminf.    1.89316 (8) obj. -3316.45 iterations 9
Cbc0038I Pass  19: suminf.    1.25731 (6) obj. -3316.45 iterations 3
Cbc0038I Pass  20: suminf.    2.77269 (8) obj. -3316.45 iterations 11
Cbc0038I Pass  21: suminf.    2.00000 (7) obj. -3316.45 iterations 8
Cbc0038I Pass  22: suminf.    2.85582 (9) obj. -3316.45 iterations 6
Cbc0038I Pass  23: suminf.    2.00000 (9) obj. -3316.45 iterations 8
Cbc0038I Pass  24: suminf.    4.04683 (16) obj. -3316.45 iterations 11
Cbc0038I Pass  25: suminf.    1.59146 (9) obj. -3316.45 iterations 11
Cbc0038I Pass  26: suminf.    1.57214 (8) obj. -3316.45 iterations 1
Cbc0038I Pass  27: suminf.    2.25370 (8) obj. -3316.45 iterations 8
Cbc0038I Pass  28: suminf.    1.56643 (6) obj. -3316.45 iterations 3
Cbc0038I Pass  29: suminf.    1.55550 (6) obj. -3316.45 iterations 1
Cbc0038I Pass  30: suminf.    1.86551 (7) obj. -3316.45 iterations 5
Cbc0038I Pass  31: suminf.    1.30393 (6) obj. -3316.45 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -3119.17 - took 0.09 seconds
Cbc0012I Integer solution of -3119.167 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 23 added rows had average density of 36.347826
Cbc0013I At root node, 23 cuts changed objective from -5091.9748 to -4037.6016 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7373 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1179 row cuts average 44.6 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 8 nodes, 7 on tree, -3119.167 best solution, best possible -4037.6016 (0.69 seconds)
Cbc0001I Search completed - best objective -3119.166999999999, took 6368 iterations and 24 nodes (0.72 seconds)
Cbc0032I Strong branching done 386 times (8740 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 94 (-3) columns and 1345 (-69) elements
Clp1000I sum of infeasibilities 7.45024e-09 - average 8.46618e-11, 84 fixed columns
Coin0506I Presolve 5 (-83) rows, 10 (-84) columns and 18 (-1327) elements
Clp0006I 0  Obj 1628.9503 Dual inf 45.22087 (10)
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 1.3636455 - largest nonzero change 0 ( 0%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value 1662.8378
Clp0000I Optimal - objective value 1662.8378
Coin0511I After Postsolve, objective 1662.8378, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1662.8378 Dual inf 7299.4621 (59)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 3.8015893e-05 ( 0.00085132148%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 5559.3508
Clp0000I Optimal - objective value 5559.3508
Clp0000I Optimal - objective value 5559.3508
Coin0511I After Postsolve, objective 5559.3508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5559.350818 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 94 columns (94 integer (94 of which binary)) and 1347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.9061
Cbc0038I Pass   1: suminf.    2.32100 (24) obj. -2442.87 iterations 31
Cbc0038I Pass   2: suminf.    2.32100 (24) obj. -2442.87 iterations 6
Cbc0038I Pass   3: suminf.    0.95248 (13) obj. -1380.35 iterations 11
Cbc0038I Pass   4: suminf.    0.08514 (2) obj. -870.518 iterations 11
Cbc0038I Solution found of -806.402
Cbc0038I Rounding solution of -2864.79 is better than previous of -806.402

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -3063.17
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    4.77663 (38) obj. -3063.17 iterations 9
Cbc0038I Pass   6: suminf.    4.77663 (38) obj. -3063.17 iterations 0
Cbc0038I Pass   7: suminf.    0.56601 (2) obj. -3063.17 iterations 44
Cbc0038I Pass   8: suminf.    0.28261 (1) obj. -3173.64 iterations 6
Cbc0038I Pass   9: suminf.    0.44341 (1) obj. -3063.17 iterations 2
Cbc0038I Pass  10: suminf.    2.79348 (16) obj. -3063.17 iterations 28
Cbc0038I Pass  11: suminf.    1.77372 (14) obj. -3063.17 iterations 6
Cbc0038I Pass  12: suminf.    1.55416 (13) obj. -3160.44 iterations 4
Cbc0038I Pass  13: suminf.    0.80882 (6) obj. -3063.17 iterations 17
Cbc0038I Pass  14: suminf.    0.76556 (6) obj. -3069.79 iterations 5
Cbc0038I Pass  15: suminf.    1.08473 (5) obj. -3063.17 iterations 9
Cbc0038I Pass  16: suminf.    1.08473 (5) obj. -3063.17 iterations 1
Cbc0038I Pass  17: suminf.    1.12396 (5) obj. -3063.17 iterations 7
Cbc0038I Pass  18: suminf.    1.12396 (5) obj. -3063.17 iterations 1
Cbc0038I Pass  19: suminf.    1.08473 (5) obj. -3063.17 iterations 6
Cbc0038I Pass  20: suminf.    3.04408 (20) obj. -3063.17 iterations 28
Cbc0038I Pass  21: suminf.    1.87619 (16) obj. -3063.17 iterations 5
Cbc0038I Pass  22: suminf.    1.78770 (15) obj. -3076.09 iterations 4
Cbc0038I Pass  23: suminf.    2.93941 (10) obj. -3063.17 iterations 20
Cbc0038I Pass  24: suminf.    1.92980 (9) obj. -3063.17 iterations 3
Cbc0038I Pass  25: suminf.    1.62676 (9) obj. -3101.05 iterations 6
Cbc0038I Pass  26: suminf.    1.58389 (6) obj. -3063.17 iterations 12
Cbc0038I Pass  27: suminf.    1.50341 (6) obj. -3075.48 iterations 7
Cbc0038I Pass  28: suminf.    1.58389 (6) obj. -3063.17 iterations 7
Cbc0038I Pass  29: suminf.    4.21227 (17) obj. -3063.17 iterations 20
Cbc0038I Pass  30: suminf.    3.94878 (16) obj. -3063.17 iterations 5
Cbc0038I Pass  31: suminf.    2.72717 (8) obj. -3063.17 iterations 16
Cbc0038I Pass  32: suminf.    2.45353 (7) obj. -3063.17 iterations 9
Cbc0038I Pass  33: suminf.    2.45353 (7) obj. -3063.17 iterations 0
Cbc0038I Pass  34: suminf.    0.81525 (3) obj. -3063.17 iterations 13
Cbc0038I Rounding solution of -2894.79 is better than previous of -2864.79

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 52 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -2894.79 to -3039.7 (0.05 seconds)
Cbc0038I Round again with cutoff of -3420.24
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    5.54420 (42) obj. -3420.24 iterations 5
Cbc0038I Pass  35: suminf.    5.24156 (37) obj. -3420.24 iterations 2
Cbc0038I Pass  36: suminf.    2.74725 (21) obj. -3420.24 iterations 22
Cbc0038I Pass  37: suminf.    2.74725 (21) obj. -3420.24 iterations 0
Cbc0038I Pass  38: suminf.    1.09820 (6) obj. -3420.24 iterations 25
Cbc0038I Pass  39: suminf.    1.09820 (6) obj. -3420.24 iterations 1
Cbc0038I Pass  40: suminf.    1.24086 (6) obj. -3420.24 iterations 5
Cbc0038I Pass  41: suminf.    1.24086 (6) obj. -3420.24 iterations 1
Cbc0038I Pass  42: suminf.    1.09820 (6) obj. -3420.24 iterations 4
Cbc0038I Pass  43: suminf.    2.51334 (13) obj. -3420.24 iterations 23
Cbc0038I Pass  44: suminf.    1.49127 (11) obj. -3420.24 iterations 13
Cbc0038I Pass  45: suminf.    1.44256 (10) obj. -3441.95 iterations 4
Cbc0038I Pass  46: suminf.    1.28045 (6) obj. -3420.24 iterations 12
Cbc0038I Pass  47: suminf.    0.96146 (6) obj. -3460.12 iterations 6
Cbc0038I Pass  48: suminf.    3.28699 (18) obj. -3420.24 iterations 16
Cbc0038I Pass  49: suminf.    2.99627 (16) obj. -3420.24 iterations 7
Cbc0038I Pass  50: suminf.    1.22932 (7) obj. -3420.24 iterations 11
Cbc0038I Pass  51: suminf.    1.22932 (7) obj. -3420.24 iterations 0
Cbc0038I Pass  52: suminf.    1.26584 (6) obj. -3420.24 iterations 5
Cbc0038I Pass  53: suminf.    0.96146 (6) obj. -3460.12 iterations 4
Cbc0038I Pass  54: suminf.    1.28045 (6) obj. -3420.24 iterations 8
Cbc0038I Pass  55: suminf.    1.86765 (10) obj. -3420.24 iterations 12
Cbc0038I Pass  56: suminf.    1.86765 (10) obj. -3420.24 iterations 3
Cbc0038I Pass  57: suminf.    1.00045 (6) obj. -3420.24 iterations 8
Cbc0038I Pass  58: suminf.    0.96146 (6) obj. -3425.12 iterations 4
Cbc0038I Pass  59: suminf.    1.00045 (6) obj. -3420.24 iterations 8
Cbc0038I Pass  60: suminf.    3.64911 (23) obj. -3420.24 iterations 20
Cbc0038I Pass  61: suminf.    2.38292 (16) obj. -3420.24 iterations 6
Cbc0038I Pass  62: suminf.    2.38292 (16) obj. -3420.24 iterations 0
Cbc0038I Pass  63: suminf.    1.19419 (13) obj. -3420.24 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -3039.7 - took 0.04 seconds
Cbc0012I Integer solution of -3039.704 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 94 columns, reduced to 25 rows 32 columns
Cbc0012I Integer solution of -3119.167 found by DiveCoefficient after 307 iterations and 0 nodes (0.19 seconds)
Cbc0031I 43 added rows had average density of 13.116279
Cbc0013I At root node, 43 cuts changed objective from -4848.5423 to -3119.167 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 1309 row cuts average 6.1 elements, 14 column cuts (21 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 115 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3119.166999999999, took 307 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.19

