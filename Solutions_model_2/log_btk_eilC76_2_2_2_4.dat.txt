Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 57 (-21) columns and 306 (-147) elements
Clp1000I sum of infeasibilities 2.23487e-05 - average 2.23487e-07, 12 fixed columns
Coin0506I Presolve 73 (-27) rows, 42 (-15) columns and 222 (-84) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 5.595005 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 141.62335
Clp0000I Optimal - objective value 141.62335
Coin0511I After Postsolve, objective 141.62335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 141.62335
Clp0000I Optimal - objective value 141.62335
Clp0000I Optimal - objective value 141.62335
Coin0511I After Postsolve, objective 141.62335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 141.6233541 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 100 rows, 57 columns (56 integer (56 of which binary)) and 306 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.495%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.17404
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -47.4633 iterations 23
Cbc0038I Solution found of -47.4633
Cbc0038I Relaxing continuous gives -47.4633
Cbc0038I Rounding solution of -71.6148 is better than previous of -47.4633

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 57 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -71.6148 to -105.149 (0.03 seconds)
Cbc0038I Round again with cutoff of -108.797
Cbc0038I Pass   2: suminf.    2.35316 (7) obj. -108.797 iterations 9
Cbc0038I Pass   3: suminf.    2.35316 (7) obj. -108.797 iterations 0
Cbc0038I Pass   4: suminf.    1.39318 (7) obj. -108.797 iterations 10
Cbc0038I Pass   5: suminf.    0.81239 (4) obj. -108.797 iterations 4
Cbc0038I Pass   6: suminf.    0.33657 (2) obj. -108.797 iterations 6
Cbc0038I Pass   7: suminf.    0.40798 (2) obj. -108.797 iterations 2
Cbc0038I Pass   8: suminf.    0.56804 (3) obj. -108.797 iterations 12
Cbc0038I Pass   9: suminf.    0.56804 (3) obj. -108.797 iterations 3
Cbc0038I Pass  10: suminf.    0.87483 (3) obj. -108.797 iterations 7
Cbc0038I Pass  11: suminf.    0.39705 (3) obj. -108.797 iterations 2
Cbc0038I Pass  12: suminf.    1.23212 (3) obj. -108.797 iterations 3
Cbc0038I Pass  13: suminf.    0.55922 (2) obj. -108.797 iterations 2
Cbc0038I Pass  14: suminf.    0.39705 (3) obj. -108.797 iterations 3
Cbc0038I Pass  15: suminf.    2.70204 (11) obj. -108.797 iterations 15
Cbc0038I Pass  16: suminf.    0.69189 (4) obj. -108.797 iterations 12
Cbc0038I Pass  17: suminf.    0.69212 (7) obj. -108.797 iterations 2
Cbc0038I Pass  18: suminf.    1.33151 (7) obj. -108.797 iterations 10
Cbc0038I Pass  19: suminf.    1.23871 (8) obj. -108.797 iterations 7
Cbc0038I Pass  20: suminf.    3.33854 (7) obj. -108.797 iterations 15
Cbc0038I Pass  21: suminf.    3.33854 (7) obj. -108.797 iterations 0
Cbc0038I Pass  22: suminf.    1.47574 (4) obj. -108.797 iterations 11
Cbc0038I Pass  23: suminf.    0.85032 (6) obj. -108.797 iterations 5
Cbc0038I Pass  24: suminf.    1.74704 (6) obj. -108.797 iterations 6
Cbc0038I Pass  25: suminf.    1.28029 (6) obj. -108.797 iterations 3
Cbc0038I Pass  26: suminf.    2.42827 (6) obj. -108.797 iterations 5
Cbc0038I Pass  27: suminf.    0.56121 (2) obj. -108.797 iterations 4
Cbc0038I Pass  28: suminf.    0.54406 (2) obj. -108.797 iterations 1
Cbc0038I Pass  29: suminf.    0.31865 (2) obj. -108.797 iterations 2
Cbc0038I Pass  30: suminf.    0.57537 (3) obj. -108.797 iterations 2
Cbc0038I Pass  31: suminf.    1.87648 (10) obj. -108.797 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 57 columns, reduced to 44 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -105.149 to -106.654 (0.05 seconds)
Cbc0038I Round again with cutoff of -115.362
Cbc0038I Pass  31: suminf.    2.71448 (7) obj. -115.362 iterations 0
Cbc0038I Pass  32: suminf.    2.71448 (7) obj. -115.362 iterations 0
Cbc0038I Pass  33: suminf.    1.88978 (7) obj. -115.362 iterations 10
Cbc0038I Pass  34: suminf.    1.58280 (6) obj. -115.362 iterations 3
Cbc0038I Pass  35: suminf.    2.87875 (6) obj. -115.362 iterations 5
Cbc0038I Pass  36: suminf.    1.21283 (5) obj. -115.362 iterations 24
Cbc0038I Pass  37: suminf.    1.21283 (5) obj. -115.362 iterations 3
Cbc0038I Pass  38: suminf.    1.52156 (5) obj. -115.362 iterations 7
Cbc0038I Pass  39: suminf.    1.23723 (5) obj. -115.362 iterations 3
Cbc0038I Pass  40: suminf.    1.22747 (4) obj. -115.362 iterations 5
Cbc0038I Pass  41: suminf.    1.20471 (4) obj. -115.362 iterations 4
Cbc0038I Pass  42: suminf.    0.68608 (3) obj. -115.362 iterations 5
Cbc0038I Pass  43: suminf.    0.56831 (3) obj. -115.362 iterations 2
Cbc0038I Pass  44: suminf.    1.06719 (3) obj. -115.362 iterations 3
Cbc0038I Pass  45: suminf.    0.97725 (3) obj. -115.362 iterations 1
Cbc0038I Pass  46: suminf.    0.56831 (3) obj. -115.362 iterations 1
Cbc0038I Pass  47: suminf.    2.39701 (14) obj. -115.362 iterations 21
Cbc0038I Pass  48: suminf.    2.30291 (9) obj. -115.362 iterations 6
Cbc0038I Pass  49: suminf.    1.91389 (5) obj. -115.362 iterations 16
Cbc0038I Pass  50: suminf.    1.56821 (5) obj. -115.362 iterations 3
Cbc0038I Pass  51: suminf.    1.56821 (5) obj. -115.362 iterations 0
Cbc0038I Pass  52: suminf.    0.93493 (3) obj. -115.362 iterations 8
Cbc0038I Pass  53: suminf.    0.66177 (3) obj. -115.362 iterations 1
Cbc0038I Pass  54: suminf.    0.66177 (3) obj. -115.362 iterations 2
Cbc0038I Pass  55: suminf.    1.00271 (3) obj. -115.362 iterations 4
Cbc0038I Pass  56: suminf.    1.36072 (8) obj. -115.362 iterations 11
Cbc0038I Pass  57: suminf.    1.15842 (4) obj. -115.362 iterations 8
Cbc0038I Pass  58: suminf.    1.00311 (4) obj. -115.362 iterations 7
Cbc0038I Pass  59: suminf.    0.90735 (4) obj. -115.362 iterations 6
Cbc0038I Pass  60: suminf.    0.93493 (3) obj. -115.362 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 57 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -106.654 - took 0.06 seconds
Cbc0012I Integer solution of -106.65369 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 100 rows 57 columns, reduced to 34 rows 21 columns
Cbc0031I 10 added rows had average density of 33.3
Cbc0013I At root node, 10 cuts changed objective from -141.62335 to -121.51359 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1473 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 674 row cuts average 52.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 52.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -106.65369, took 2091 iterations and 16 nodes (0.30 seconds)
Cbc0032I Strong branching done 152 times (1248 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 100 (-52) columns and 1400 (-1903) elements
Clp1000I sum of infeasibilities 4.37458e-08 - average 4.97111e-10, 56 fixed columns
Coin0506I Presolve 34 (-54) rows, 44 (-56) columns and 150 (-1250) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 103.42328
Clp0000I Optimal - objective value 103.42328
Coin0511I After Postsolve, objective 103.42328, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.7982667 - largest nonzero change 2.6331912e-05 ( 0.0026331912%) - largest zero change 2.8722504e-05
Clp0000I Optimal - objective value 170.50363
Clp0000I Optimal - objective value 170.50363
Clp0000I Optimal - objective value 170.50363
Coin0511I After Postsolve, objective 170.50363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.5036346 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 100 columns (100 integer (100 of which binary)) and 1402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.96905
Cbc0038I Pass   1: suminf.    3.42368 (30) obj. -145.809 iterations 27
Cbc0038I Pass   2: suminf.    3.42368 (30) obj. -145.809 iterations 1
Cbc0038I Pass   3: suminf.    1.12829 (18) obj. -106.021 iterations 12
Cbc0038I Solution found of -81.1018
Cbc0038I Rounding solution of -95.5239 is better than previous of -81.1018

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 100 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -95.5239 to -104.71 (0.03 seconds)
Cbc0038I Round again with cutoff of -110.596
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.42368 (30) obj. -145.809 iterations 0
Cbc0038I Pass   5: suminf.    3.42368 (30) obj. -145.809 iterations 1
Cbc0038I Pass   6: suminf.    1.31829 (18) obj. -110.596 iterations 24
Cbc0038I Pass   7: suminf.    0.37767 (4) obj. -111.079 iterations 17
Cbc0038I Pass   8: suminf.    1.14782 (3) obj. -110.596 iterations 27
Cbc0038I Pass   9: suminf.    0.87778 (3) obj. -112.067 iterations 11
Cbc0038I Pass  10: suminf.    0.33560 (3) obj. -110.596 iterations 7
Cbc0038I Pass  11: suminf.    1.01482 (3) obj. -110.596 iterations 10
Cbc0038I Pass  12: suminf.    0.78114 (3) obj. -110.596 iterations 7
Cbc0038I Pass  13: suminf.    0.73099 (3) obj. -110.596 iterations 11
Cbc0038I Pass  14: suminf.    0.89513 (3) obj. -110.596 iterations 9
Cbc0038I Pass  15: suminf.    1.14782 (3) obj. -110.596 iterations 13
Cbc0038I Pass  16: suminf.    1.14782 (3) obj. -110.596 iterations 11
Cbc0038I Pass  17: suminf.    0.87778 (3) obj. -112.067 iterations 12
Cbc0038I Pass  18: suminf.    0.33560 (3) obj. -110.596 iterations 8
Cbc0038I Pass  19: suminf.    1.01482 (3) obj. -110.596 iterations 11
Cbc0038I Pass  20: suminf.    0.78114 (3) obj. -110.596 iterations 7
Cbc0038I Pass  21: suminf.    0.73099 (3) obj. -110.596 iterations 11
Cbc0038I Pass  22: suminf.    0.89513 (3) obj. -110.596 iterations 9
Cbc0038I Pass  23: suminf.    1.14782 (3) obj. -110.596 iterations 13
Cbc0038I Pass  24: suminf.    1.14782 (3) obj. -110.596 iterations 11
Cbc0038I Pass  25: suminf.    0.87778 (3) obj. -112.067 iterations 12
Cbc0038I Pass  26: suminf.    0.33560 (3) obj. -110.596 iterations 8
Cbc0038I Pass  27: suminf.    1.01482 (3) obj. -110.596 iterations 11
Cbc0038I Pass  28: suminf.    0.78114 (3) obj. -110.596 iterations 7
Cbc0038I Pass  29: suminf.    0.73099 (3) obj. -110.596 iterations 11
Cbc0038I Pass  30: suminf.    0.89513 (3) obj. -110.596 iterations 9
Cbc0038I Pass  31: suminf.    1.14782 (3) obj. -110.596 iterations 12
Cbc0038I Pass  32: suminf.    1.14782 (3) obj. -110.596 iterations 11
Cbc0038I Pass  33: suminf.    0.87778 (3) obj. -112.067 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 100 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -104.71 - took 0.02 seconds
Cbc0012I Integer solution of -104.71009 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 100 columns, reduced to 2 rows 2 columns
Cbc0031I 39 added rows had average density of 13.025641
Cbc0013I At root node, 39 cuts changed objective from -163.56719 to -116.01486 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 902 row cuts average 3.5 elements, 15 column cuts (15 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 74 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -104.71009 best solution, best possible -116.01486 (0.37 seconds)
Cbc0012I Integer solution of -106.52609 found by DiveCoefficient after 379 iterations and 3 nodes (0.42 seconds)
Cbc0012I Integer solution of -106.65369 found by rounding after 471 iterations and 6 nodes (0.59 seconds)
Cbc0010I After 22 nodes, 7 on tree, -106.65369 best solution, best possible -116.01486 (1.08 seconds)
Cbc0001I Search completed - best objective -106.65369, took 992 iterations and 40 nodes (1.40 seconds)
Cbc0032I Strong branching done 428 times (3459 iterations), fathomed 7 nodes and fixed 5 variables
Cbc0035I Maximum depth 8, 102 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       1.40

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 57 (-21) columns and 306 (-147) elements
Clp1000I sum of infeasibilities 2.23487e-05 - average 2.23487e-07, 12 fixed columns
Coin0506I Presolve 73 (-27) rows, 42 (-15) columns and 222 (-84) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 5.595005 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 141.62335
Clp0000I Optimal - objective value 141.62335
Coin0511I After Postsolve, objective 141.62335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 141.62335
Clp0000I Optimal - objective value 141.62335
Clp0000I Optimal - objective value 141.62335
Coin0511I After Postsolve, objective 141.62335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 141.6233541 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 100 rows, 57 columns (56 integer (56 of which binary)) and 306 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.495%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.17404
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -47.4633 iterations 23
Cbc0038I Solution found of -47.4633
Cbc0038I Relaxing continuous gives -47.4633
Cbc0038I Rounding solution of -71.6148 is better than previous of -47.4633

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 57 columns, reduced to 30 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -71.6148 to -105.149 (0.03 seconds)
Cbc0038I Round again with cutoff of -108.797
Cbc0038I Pass   2: suminf.    2.35316 (7) obj. -108.797 iterations 9
Cbc0038I Pass   3: suminf.    2.35316 (7) obj. -108.797 iterations 0
Cbc0038I Pass   4: suminf.    1.39318 (7) obj. -108.797 iterations 10
Cbc0038I Pass   5: suminf.    0.81239 (4) obj. -108.797 iterations 4
Cbc0038I Pass   6: suminf.    0.33657 (2) obj. -108.797 iterations 6
Cbc0038I Pass   7: suminf.    0.40798 (2) obj. -108.797 iterations 2
Cbc0038I Pass   8: suminf.    0.56804 (3) obj. -108.797 iterations 12
Cbc0038I Pass   9: suminf.    0.56804 (3) obj. -108.797 iterations 3
Cbc0038I Pass  10: suminf.    0.87483 (3) obj. -108.797 iterations 7
Cbc0038I Pass  11: suminf.    0.39705 (3) obj. -108.797 iterations 2
Cbc0038I Pass  12: suminf.    1.23212 (3) obj. -108.797 iterations 3
Cbc0038I Pass  13: suminf.    0.55922 (2) obj. -108.797 iterations 2
Cbc0038I Pass  14: suminf.    0.39705 (3) obj. -108.797 iterations 3
Cbc0038I Pass  15: suminf.    2.70204 (11) obj. -108.797 iterations 15
Cbc0038I Pass  16: suminf.    0.69189 (4) obj. -108.797 iterations 12
Cbc0038I Pass  17: suminf.    0.69212 (7) obj. -108.797 iterations 2
Cbc0038I Pass  18: suminf.    1.33151 (7) obj. -108.797 iterations 10
Cbc0038I Pass  19: suminf.    1.23871 (8) obj. -108.797 iterations 7
Cbc0038I Pass  20: suminf.    3.33854 (7) obj. -108.797 iterations 15
Cbc0038I Pass  21: suminf.    3.33854 (7) obj. -108.797 iterations 0
Cbc0038I Pass  22: suminf.    1.47574 (4) obj. -108.797 iterations 11
Cbc0038I Pass  23: suminf.    0.85032 (6) obj. -108.797 iterations 5
Cbc0038I Pass  24: suminf.    1.74704 (6) obj. -108.797 iterations 6
Cbc0038I Pass  25: suminf.    1.28029 (6) obj. -108.797 iterations 3
Cbc0038I Pass  26: suminf.    2.42827 (6) obj. -108.797 iterations 5
Cbc0038I Pass  27: suminf.    0.56121 (2) obj. -108.797 iterations 4
Cbc0038I Pass  28: suminf.    0.54406 (2) obj. -108.797 iterations 1
Cbc0038I Pass  29: suminf.    0.31865 (2) obj. -108.797 iterations 2
Cbc0038I Pass  30: suminf.    0.57537 (3) obj. -108.797 iterations 2
Cbc0038I Pass  31: suminf.    1.87648 (10) obj. -108.797 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 57 columns, reduced to 44 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -105.149 to -106.654 (0.05 seconds)
Cbc0038I Round again with cutoff of -115.362
Cbc0038I Pass  31: suminf.    2.71448 (7) obj. -115.362 iterations 0
Cbc0038I Pass  32: suminf.    2.71448 (7) obj. -115.362 iterations 0
Cbc0038I Pass  33: suminf.    1.88978 (7) obj. -115.362 iterations 10
Cbc0038I Pass  34: suminf.    1.58280 (6) obj. -115.362 iterations 3
Cbc0038I Pass  35: suminf.    2.87875 (6) obj. -115.362 iterations 5
Cbc0038I Pass  36: suminf.    1.21283 (5) obj. -115.362 iterations 24
Cbc0038I Pass  37: suminf.    1.21283 (5) obj. -115.362 iterations 3
Cbc0038I Pass  38: suminf.    1.52156 (5) obj. -115.362 iterations 7
Cbc0038I Pass  39: suminf.    1.23723 (5) obj. -115.362 iterations 3
Cbc0038I Pass  40: suminf.    1.22747 (4) obj. -115.362 iterations 5
Cbc0038I Pass  41: suminf.    1.20471 (4) obj. -115.362 iterations 4
Cbc0038I Pass  42: suminf.    0.68608 (3) obj. -115.362 iterations 5
Cbc0038I Pass  43: suminf.    0.56831 (3) obj. -115.362 iterations 2
Cbc0038I Pass  44: suminf.    1.06719 (3) obj. -115.362 iterations 3
Cbc0038I Pass  45: suminf.    0.97725 (3) obj. -115.362 iterations 1
Cbc0038I Pass  46: suminf.    0.56831 (3) obj. -115.362 iterations 1
Cbc0038I Pass  47: suminf.    2.39701 (14) obj. -115.362 iterations 21
Cbc0038I Pass  48: suminf.    2.30291 (9) obj. -115.362 iterations 6
Cbc0038I Pass  49: suminf.    1.91389 (5) obj. -115.362 iterations 16
Cbc0038I Pass  50: suminf.    1.56821 (5) obj. -115.362 iterations 3
Cbc0038I Pass  51: suminf.    1.56821 (5) obj. -115.362 iterations 0
Cbc0038I Pass  52: suminf.    0.93493 (3) obj. -115.362 iterations 8
Cbc0038I Pass  53: suminf.    0.66177 (3) obj. -115.362 iterations 1
Cbc0038I Pass  54: suminf.    0.66177 (3) obj. -115.362 iterations 2
Cbc0038I Pass  55: suminf.    1.00271 (3) obj. -115.362 iterations 4
Cbc0038I Pass  56: suminf.    1.36072 (8) obj. -115.362 iterations 11
Cbc0038I Pass  57: suminf.    1.15842 (4) obj. -115.362 iterations 8
Cbc0038I Pass  58: suminf.    1.00311 (4) obj. -115.362 iterations 7
Cbc0038I Pass  59: suminf.    0.90735 (4) obj. -115.362 iterations 6
Cbc0038I Pass  60: suminf.    0.93493 (3) obj. -115.362 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 57 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -106.654 - took 0.06 seconds
Cbc0012I Integer solution of -106.65369 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 100 rows 57 columns, reduced to 34 rows 21 columns
Cbc0031I 10 added rows had average density of 33.3
Cbc0013I At root node, 10 cuts changed objective from -141.62335 to -121.51359 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1473 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 674 row cuts average 52.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 52.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -106.65369, took 2091 iterations and 16 nodes (0.31 seconds)
Cbc0032I Strong branching done 152 times (1248 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 100 (-53) columns and 1400 (-1904) elements
Clp1000I sum of infeasibilities 4.37458e-08 - average 4.97111e-10, 56 fixed columns
Coin0506I Presolve 34 (-54) rows, 44 (-56) columns and 150 (-1250) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 103.42328
Clp0000I Optimal - objective value 103.42328
Coin0511I After Postsolve, objective 103.42328, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.7982667 - largest nonzero change 2.6331912e-05 ( 0.0026331912%) - largest zero change 2.8722504e-05
Clp0000I Optimal - objective value 170.50363
Clp0000I Optimal - objective value 170.50363
Clp0000I Optimal - objective value 170.50363
Coin0511I After Postsolve, objective 170.50363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.5036346 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 100 columns (100 integer (100 of which binary)) and 1402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.96905
Cbc0038I Pass   1: suminf.    3.42368 (30) obj. -145.809 iterations 27
Cbc0038I Pass   2: suminf.    3.42368 (30) obj. -145.809 iterations 1
Cbc0038I Pass   3: suminf.    1.12829 (18) obj. -106.021 iterations 12
Cbc0038I Solution found of -81.1018
Cbc0038I Rounding solution of -95.5239 is better than previous of -81.1018

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 100 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -95.5239 to -104.71 (0.02 seconds)
Cbc0038I Round again with cutoff of -110.596
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.42368 (30) obj. -145.809 iterations 0
Cbc0038I Pass   5: suminf.    3.42368 (30) obj. -145.809 iterations 1
Cbc0038I Pass   6: suminf.    1.31829 (18) obj. -110.596 iterations 24
Cbc0038I Pass   7: suminf.    0.37767 (4) obj. -111.079 iterations 17
Cbc0038I Pass   8: suminf.    1.14782 (3) obj. -110.596 iterations 27
Cbc0038I Pass   9: suminf.    0.87778 (3) obj. -112.067 iterations 11
Cbc0038I Pass  10: suminf.    0.33560 (3) obj. -110.596 iterations 7
Cbc0038I Pass  11: suminf.    1.01482 (3) obj. -110.596 iterations 10
Cbc0038I Pass  12: suminf.    0.78114 (3) obj. -110.596 iterations 7
Cbc0038I Pass  13: suminf.    0.73099 (3) obj. -110.596 iterations 11
Cbc0038I Pass  14: suminf.    0.89513 (3) obj. -110.596 iterations 9
Cbc0038I Pass  15: suminf.    1.14782 (3) obj. -110.596 iterations 13
Cbc0038I Pass  16: suminf.    1.14782 (3) obj. -110.596 iterations 11
Cbc0038I Pass  17: suminf.    0.87778 (3) obj. -112.067 iterations 12
Cbc0038I Pass  18: suminf.    0.33560 (3) obj. -110.596 iterations 8
Cbc0038I Pass  19: suminf.    1.01482 (3) obj. -110.596 iterations 11
Cbc0038I Pass  20: suminf.    0.78114 (3) obj. -110.596 iterations 7
Cbc0038I Pass  21: suminf.    0.73099 (3) obj. -110.596 iterations 11
Cbc0038I Pass  22: suminf.    0.89513 (3) obj. -110.596 iterations 9
Cbc0038I Pass  23: suminf.    1.14782 (3) obj. -110.596 iterations 13
Cbc0038I Pass  24: suminf.    1.14782 (3) obj. -110.596 iterations 11
Cbc0038I Pass  25: suminf.    0.87778 (3) obj. -112.067 iterations 12
Cbc0038I Pass  26: suminf.    0.33560 (3) obj. -110.596 iterations 8
Cbc0038I Pass  27: suminf.    1.01482 (3) obj. -110.596 iterations 11
Cbc0038I Pass  28: suminf.    0.78114 (3) obj. -110.596 iterations 7
Cbc0038I Pass  29: suminf.    0.73099 (3) obj. -110.596 iterations 11
Cbc0038I Pass  30: suminf.    0.89513 (3) obj. -110.596 iterations 9
Cbc0038I Pass  31: suminf.    1.14782 (3) obj. -110.596 iterations 12
Cbc0038I Pass  32: suminf.    1.14782 (3) obj. -110.596 iterations 11
Cbc0038I Pass  33: suminf.    0.87778 (3) obj. -112.067 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 100 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -104.71 - took 0.02 seconds
Cbc0012I Integer solution of -104.71009 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 100 columns, reduced to 2 rows 2 columns
Cbc0031I 39 added rows had average density of 13.025641
Cbc0013I At root node, 39 cuts changed objective from -163.56719 to -116.01486 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 902 row cuts average 3.5 elements, 15 column cuts (15 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 74 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -104.71009 best solution, best possible -116.01486 (0.44 seconds)
Cbc0012I Integer solution of -106.52609 found by DiveCoefficient after 379 iterations and 3 nodes (0.50 seconds)
Cbc0012I Integer solution of -106.65369 found by rounding after 471 iterations and 6 nodes (0.70 seconds)
Cbc0010I After 19 nodes, 4 on tree, -106.65369 best solution, best possible -116.01486 (1.14 seconds)
Cbc0001I Search completed - best objective -106.65369, took 992 iterations and 40 nodes (1.62 seconds)
Cbc0032I Strong branching done 428 times (3459 iterations), fathomed 7 nodes and fixed 5 variables
Cbc0035I Maximum depth 8, 102 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.63

