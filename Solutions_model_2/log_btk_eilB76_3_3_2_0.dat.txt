Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 1.74339e-05 - average 1.44082e-07, 24 fixed columns
Coin0506I Presolve 73 (-48) rows, 41 (-26) columns and 220 (-148) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 78.422921
Clp0000I Optimal - objective value 78.422921
Coin0511I After Postsolve, objective 78.422921, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.34433897 - largest nonzero change 0 ( 0%) - largest zero change 2.9993936e-05
Clp0000I Optimal - objective value 78.422921
Clp0000I Optimal - objective value 78.422921
Clp0000I Optimal - objective value 78.422921
Coin0511I After Postsolve, objective 78.422921, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.42292129 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 67 columns (66 integer (66 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.200%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.11803
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.6247 iterations 35
Cbc0038I Solution found of -18.6247
Cbc0038I Relaxing continuous gives -18.6247
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 51 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -18.6247 to -47.5697 (0.03 seconds)
Cbc0038I Round again with cutoff of -50.5022
Cbc0038I Pass   2: suminf.    1.42933 (6) obj. -50.5022 iterations 15
Cbc0038I Pass   3: suminf.    0.67810 (4) obj. -50.5022 iterations 21
Cbc0038I Pass   4: suminf.    0.67810 (4) obj. -50.5022 iterations 2
Cbc0038I Pass   5: suminf.    0.34226 (2) obj. -50.5022 iterations 5
Cbc0038I Pass   6: suminf.    1.11947 (3) obj. -50.5022 iterations 12
Cbc0038I Pass   7: suminf.    0.33552 (3) obj. -50.5022 iterations 4
Cbc0038I Pass   8: suminf.    0.24013 (2) obj. -50.5022 iterations 1
Cbc0038I Pass   9: suminf.    2.28022 (6) obj. -50.5022 iterations 9
Cbc0038I Pass  10: suminf.    0.86685 (4) obj. -50.5022 iterations 13
Cbc0038I Pass  11: suminf.    0.86685 (4) obj. -50.5022 iterations 1
Cbc0038I Pass  12: suminf.    1.19047 (4) obj. -50.5022 iterations 10
Cbc0038I Pass  13: suminf.    0.71327 (2) obj. -50.5022 iterations 4
Cbc0038I Pass  14: suminf.    0.70732 (2) obj. -50.5022 iterations 3
Cbc0038I Pass  15: suminf.    0.71691 (3) obj. -50.5022 iterations 2
Cbc0038I Pass  16: suminf.    0.61096 (3) obj. -50.5022 iterations 4
Cbc0038I Pass  17: suminf.    0.61096 (3) obj. -50.5022 iterations 0
Cbc0038I Pass  18: suminf.    1.19047 (4) obj. -50.5022 iterations 11
Cbc0038I Pass  19: suminf.    0.71327 (2) obj. -50.5022 iterations 4
Cbc0038I Pass  20: suminf.    0.70732 (2) obj. -50.5022 iterations 3
Cbc0038I Pass  21: suminf.    0.71691 (3) obj. -50.5022 iterations 2
Cbc0038I Pass  22: suminf.    0.61096 (3) obj. -50.5022 iterations 4
Cbc0038I Pass  23: suminf.    0.61096 (3) obj. -50.5022 iterations 0
Cbc0038I Pass  24: suminf.    1.19047 (4) obj. -50.5022 iterations 9
Cbc0038I Pass  25: suminf.    0.71327 (2) obj. -50.5022 iterations 4
Cbc0038I Pass  26: suminf.    0.70732 (2) obj. -50.5022 iterations 3
Cbc0038I Pass  27: suminf.    0.71691 (3) obj. -50.5022 iterations 2
Cbc0038I Pass  28: suminf.    0.61096 (3) obj. -50.5022 iterations 4
Cbc0038I Pass  29: suminf.    0.61096 (3) obj. -50.5022 iterations 0
Cbc0038I Pass  30: suminf.    1.19047 (4) obj. -50.5022 iterations 10
Cbc0038I Pass  31: suminf.    0.71327 (2) obj. -50.5022 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 53 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.5697 - took 0.03 seconds
Cbc0012I Integer solution of -47.56966 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 117 rows 67 columns, reduced to 51 rows 27 columns
Cbc0031I 12 added rows had average density of 38.833333
Cbc0013I At root node, 12 cuts changed objective from -76.89412 to -64.481023 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2542 row cuts average 5.4 elements, 6 column cuts (6 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 969 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 62.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0001I Search completed - best objective -47.56966, took 3352 iterations and 14 nodes (0.35 seconds)
Cbc0032I Strong branching done 162 times (2113 iterations), fathomed 1 nodes and fixed 19 variables
Cbc0035I Maximum depth 5, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 114 (-38) columns and 1855 (-1448) elements
Clp1000I sum of infeasibilities 7.81308e-07 - average 7.58551e-09, 89 fixed columns
Coin0506I Presolve 18 (-85) rows, 24 (-90) columns and 79 (-1776) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 2.0395267 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 64.095366
Clp0000I Optimal - objective value 64.095366
Coin0511I After Postsolve, objective 64.095366, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.329927 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 146.19428
Clp0000I Optimal - objective value 146.19428
Clp0000I Optimal - objective value 146.19428
Coin0511I After Postsolve, objective 146.19428, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 146.1942783 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 111 columns (111 integer (111 of which binary)) and 1750 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.739%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 2.37302
Cbc0038I Pass   1: suminf.    0.71532 (24) obj. -63.9389 iterations 22
Cbc0038I Solution found of -25.1764
Cbc0038I Rounding solution of -25.2281 is better than previous of -25.1764

Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 111 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -25.2281 to -35.5324 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.5482
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.71532 (24) obj. -63.9389 iterations 0
Cbc0038I Pass   3: suminf.    0.49088 (4) obj. -40.5482 iterations 27
Cbc0038I Pass   4: suminf.    0.30249 (4) obj. -43.6222 iterations 7
Cbc0038I Pass   5: suminf.    0.35275 (3) obj. -40.5482 iterations 11
Cbc0038I Pass   6: suminf.    0.32078 (2) obj. -40.5482 iterations 6
Cbc0038I Pass   7: suminf.    0.92945 (2) obj. -40.5482 iterations 4
Cbc0038I Pass   8: suminf.    0.82323 (4) obj. -40.5482 iterations 5
Cbc0038I Pass   9: suminf.    0.82434 (3) obj. -40.5482 iterations 8
Cbc0038I Pass  10: suminf.    0.82434 (3) obj. -40.5482 iterations 1
Cbc0038I Pass  11: suminf.    0.50899 (2) obj. -45.038 iterations 10
Cbc0038I Pass  12: suminf.    0.31417 (1) obj. -40.5482 iterations 3
Cbc0038I Pass  13: suminf.    0.40541 (1) obj. -42.8288 iterations 2
Cbc0038I Pass  14: suminf.    0.70651 (10) obj. -40.5482 iterations 29
Cbc0038I Pass  15: suminf.    0.67163 (6) obj. -40.5482 iterations 13
Cbc0038I Pass  16: suminf.    0.81360 (3) obj. -40.5482 iterations 8
Cbc0038I Pass  17: suminf.    0.62005 (3) obj. -41.7095 iterations 2
Cbc0038I Pass  18: suminf.    0.81360 (3) obj. -40.5482 iterations 4
Cbc0038I Pass  19: suminf.    1.05054 (10) obj. -40.5482 iterations 35
Cbc0038I Pass  20: suminf.    0.91682 (9) obj. -40.5482 iterations 4
Cbc0038I Pass  21: suminf.    0.85092 (5) obj. -40.5482 iterations 17
Cbc0038I Pass  22: suminf.    0.67915 (4) obj. -40.5482 iterations 2
Cbc0038I Pass  23: suminf.    0.54897 (4) obj. -40.5482 iterations 5
Cbc0038I Pass  24: suminf.    0.53507 (4) obj. -40.5482 iterations 1
Cbc0038I Pass  25: suminf.    1.43007 (5) obj. -40.5482 iterations 7
Cbc0038I Pass  26: suminf.    0.65801 (4) obj. -40.5482 iterations 3
Cbc0038I Pass  27: suminf.    0.22222 (1) obj. -41.4007 iterations 4
Cbc0038I Pass  28: suminf.    0.25885 (1) obj. -40.5482 iterations 4
Cbc0038I Pass  29: suminf.    1.15124 (11) obj. -40.5482 iterations 29
Cbc0038I Pass  30: suminf.    0.66943 (7) obj. -40.5482 iterations 6
Cbc0038I Pass  31: suminf.    0.38879 (6) obj. -40.5482 iterations 11
Cbc0038I Rounding solution of -44.8834 is better than previous of -35.5324

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 111 columns, reduced to 41 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -44.8834 to -46.1464 (0.07 seconds)
Cbc0038I Round again with cutoff of -54.0551
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.71532 (24) obj. -63.9389 iterations 0
Cbc0038I Pass  32: suminf.    1.00763 (5) obj. -54.0551 iterations 39
Cbc0038I Pass  33: suminf.    0.95646 (4) obj. -54.0551 iterations 3
Cbc0038I Pass  34: suminf.    1.08035 (4) obj. -54.0551 iterations 7
Cbc0038I Pass  35: suminf.    0.67375 (4) obj. -56.4947 iterations 6
Cbc0038I Pass  36: suminf.    0.95646 (4) obj. -54.0551 iterations 8
Cbc0038I Pass  37: suminf.    1.03235 (9) obj. -54.0551 iterations 14
Cbc0038I Pass  38: suminf.    1.03235 (9) obj. -54.0551 iterations 2
Cbc0038I Pass  39: suminf.    0.82028 (5) obj. -54.0551 iterations 12
Cbc0038I Pass  40: suminf.    0.74096 (5) obj. -54.2931 iterations 6
Cbc0038I Pass  41: suminf.    0.85537 (8) obj. -56.1787 iterations 20
Cbc0038I Pass  42: suminf.    0.85537 (8) obj. -56.1787 iterations 7
Cbc0038I Pass  43: suminf.    0.99498 (6) obj. -54.0551 iterations 11
Cbc0038I Pass  44: suminf.    0.99498 (6) obj. -54.0551 iterations 3
Cbc0038I Pass  45: suminf.    0.96628 (6) obj. -54.0551 iterations 5
Cbc0038I Pass  46: suminf.    0.96628 (6) obj. -54.0551 iterations 3
Cbc0038I Pass  47: suminf.    0.99498 (6) obj. -54.0551 iterations 4
Cbc0038I Pass  48: suminf.    2.58334 (15) obj. -54.0551 iterations 23
Cbc0038I Pass  49: suminf.    1.37611 (11) obj. -54.0551 iterations 7
Cbc0038I Pass  50: suminf.    1.36264 (13) obj. -54.0551 iterations 3
Cbc0038I Pass  51: suminf.    1.30745 (7) obj. -54.0551 iterations 29
Cbc0038I Pass  52: suminf.    1.15361 (6) obj. -54.0551 iterations 5
Cbc0038I Pass  53: suminf.    0.79383 (6) obj. -55.1345 iterations 2
Cbc0038I Pass  54: suminf.    1.15361 (6) obj. -54.0551 iterations 7
Cbc0038I Pass  55: suminf.    1.11858 (10) obj. -54.0551 iterations 16
Cbc0038I Pass  56: suminf.    0.90176 (9) obj. -55.1506 iterations 6
Cbc0038I Pass  57: suminf.    0.82028 (6) obj. -54.0551 iterations 15
Cbc0038I Pass  58: suminf.    0.79383 (6) obj. -54.1345 iterations 5
Cbc0038I Pass  59: suminf.    1.57043 (11) obj. -54.0551 iterations 13
Cbc0038I Pass  60: suminf.    1.27883 (12) obj. -54.0551 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 111 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -46.1464 - took 0.05 seconds
Cbc0012I Integer solution of -46.14636 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 96 rows 111 columns, reduced to 19 rows 21 columns
Cbc0031I 44 added rows had average density of 21.840909
Cbc0013I At root node, 44 cuts changed objective from -85.689747 to -60.825901 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1423 row cuts average 4.7 elements, 5 column cuts (5 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 199 row cuts average 70.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 150 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 66 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 189 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 266 row cuts average 61.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -46.14636 best solution, best possible -60.825901 (0.41 seconds)
Cbc0016I Integer solution of -47.56966 found by strong branching after 1078 iterations and 9 nodes (1.03 seconds)
Cbc0010I After 13 nodes, 5 on tree, -47.56966 best solution, best possible -58.724617 (1.15 seconds)
Cbc0001I Search completed - best objective -47.56966, took 1388 iterations and 18 nodes (1.15 seconds)
Cbc0032I Strong branching done 362 times (6970 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       1.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 67 (-11) columns and 368 (-85) elements
Clp1000I sum of infeasibilities 1.74339e-05 - average 1.44082e-07, 24 fixed columns
Coin0506I Presolve 73 (-48) rows, 41 (-26) columns and 220 (-148) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 78.422921
Clp0000I Optimal - objective value 78.422921
Coin0511I After Postsolve, objective 78.422921, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.34433897 - largest nonzero change 0 ( 0%) - largest zero change 2.9993936e-05
Clp0000I Optimal - objective value 78.422921
Clp0000I Optimal - objective value 78.422921
Clp0000I Optimal - objective value 78.422921
Coin0511I After Postsolve, objective 78.422921, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.42292129 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 67 columns (66 integer (66 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.200%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.11803
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.6247 iterations 35
Cbc0038I Solution found of -18.6247
Cbc0038I Relaxing continuous gives -18.6247
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 51 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -18.6247 to -47.5697 (0.03 seconds)
Cbc0038I Round again with cutoff of -50.5022
Cbc0038I Pass   2: suminf.    1.42933 (6) obj. -50.5022 iterations 15
Cbc0038I Pass   3: suminf.    0.67810 (4) obj. -50.5022 iterations 21
Cbc0038I Pass   4: suminf.    0.67810 (4) obj. -50.5022 iterations 2
Cbc0038I Pass   5: suminf.    0.34226 (2) obj. -50.5022 iterations 5
Cbc0038I Pass   6: suminf.    1.11947 (3) obj. -50.5022 iterations 12
Cbc0038I Pass   7: suminf.    0.33552 (3) obj. -50.5022 iterations 4
Cbc0038I Pass   8: suminf.    0.24013 (2) obj. -50.5022 iterations 1
Cbc0038I Pass   9: suminf.    2.28022 (6) obj. -50.5022 iterations 9
Cbc0038I Pass  10: suminf.    0.86685 (4) obj. -50.5022 iterations 13
Cbc0038I Pass  11: suminf.    0.86685 (4) obj. -50.5022 iterations 1
Cbc0038I Pass  12: suminf.    1.19047 (4) obj. -50.5022 iterations 10
Cbc0038I Pass  13: suminf.    0.71327 (2) obj. -50.5022 iterations 4
Cbc0038I Pass  14: suminf.    0.70732 (2) obj. -50.5022 iterations 3
Cbc0038I Pass  15: suminf.    0.71691 (3) obj. -50.5022 iterations 2
Cbc0038I Pass  16: suminf.    0.61096 (3) obj. -50.5022 iterations 4
Cbc0038I Pass  17: suminf.    0.61096 (3) obj. -50.5022 iterations 0
Cbc0038I Pass  18: suminf.    1.19047 (4) obj. -50.5022 iterations 11
Cbc0038I Pass  19: suminf.    0.71327 (2) obj. -50.5022 iterations 4
Cbc0038I Pass  20: suminf.    0.70732 (2) obj. -50.5022 iterations 3
Cbc0038I Pass  21: suminf.    0.71691 (3) obj. -50.5022 iterations 2
Cbc0038I Pass  22: suminf.    0.61096 (3) obj. -50.5022 iterations 4
Cbc0038I Pass  23: suminf.    0.61096 (3) obj. -50.5022 iterations 0
Cbc0038I Pass  24: suminf.    1.19047 (4) obj. -50.5022 iterations 9
Cbc0038I Pass  25: suminf.    0.71327 (2) obj. -50.5022 iterations 4
Cbc0038I Pass  26: suminf.    0.70732 (2) obj. -50.5022 iterations 3
Cbc0038I Pass  27: suminf.    0.71691 (3) obj. -50.5022 iterations 2
Cbc0038I Pass  28: suminf.    0.61096 (3) obj. -50.5022 iterations 4
Cbc0038I Pass  29: suminf.    0.61096 (3) obj. -50.5022 iterations 0
Cbc0038I Pass  30: suminf.    1.19047 (4) obj. -50.5022 iterations 10
Cbc0038I Pass  31: suminf.    0.71327 (2) obj. -50.5022 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 53 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -47.5697 - took 0.03 seconds
Cbc0012I Integer solution of -47.56966 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 117 rows 67 columns, reduced to 51 rows 27 columns
Cbc0031I 12 added rows had average density of 38.833333
Cbc0013I At root node, 12 cuts changed objective from -76.89412 to -64.481023 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2542 row cuts average 5.4 elements, 6 column cuts (6 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 969 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 62.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0001I Search completed - best objective -47.56966, took 3352 iterations and 14 nodes (0.39 seconds)
Cbc0032I Strong branching done 162 times (2113 iterations), fathomed 1 nodes and fixed 19 variables
Cbc0035I Maximum depth 5, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 110 (-43) columns and 1709 (-1595) elements
Clp1000I sum of infeasibilities 4.57994e-07 - average 4.6262e-09, 20 fixed columns
Coin0506I Presolve 82 (-17) rows, 90 (-20) columns and 1217 (-492) elements
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 6.3833808 - largest nonzero change 1.9393322e-05 ( 0.00080919949%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 96.649108
Clp0000I Optimal - objective value 96.649108
Coin0511I After Postsolve, objective 96.649108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.649108
Clp0000I Optimal - objective value 96.649108
Clp0000I Optimal - objective value 96.649108
Coin0511I After Postsolve, objective 96.649108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.64910769 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 49 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 111 columns (111 integer (111 of which binary)) and 1752 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.739%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 2.30257
Cbc0038I Pass   1: suminf.    0.65597 (23) obj. -61.0832 iterations 13
Cbc0038I Solution found of -25.1764
Cbc0038I Rounding solution of -25.2281 is better than previous of -25.1764

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 111 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -25.2281 to -35.5324 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.2663
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.65597 (23) obj. -61.0832 iterations 0
Cbc0038I Pass   3: suminf.    0.50570 (5) obj. -40.2663 iterations 28
Cbc0038I Pass   4: suminf.    0.28285 (3) obj. -42.6415 iterations 7
Cbc0038I Pass   5: suminf.    0.31632 (3) obj. -40.2663 iterations 9
Cbc0038I Pass   6: suminf.    0.29498 (2) obj. -40.2663 iterations 4
Cbc0038I Pass   7: suminf.    0.93539 (2) obj. -40.2663 iterations 3
Cbc0038I Pass   8: suminf.    0.82323 (4) obj. -40.2663 iterations 3
Cbc0038I Pass   9: suminf.    0.80537 (3) obj. -40.2663 iterations 7
Cbc0038I Pass  10: suminf.    0.80537 (3) obj. -40.2663 iterations 1
Cbc0038I Pass  11: suminf.    0.50899 (2) obj. -45.038 iterations 9
Cbc0038I Pass  12: suminf.    0.30289 (1) obj. -40.2663 iterations 2
Cbc0038I Pass  13: suminf.    0.40541 (1) obj. -42.8288 iterations 1
Cbc0038I Pass  14: suminf.    0.74802 (10) obj. -40.2663 iterations 19
Cbc0038I Pass  15: suminf.    0.66078 (6) obj. -40.2663 iterations 11
Cbc0038I Pass  16: suminf.    0.86058 (3) obj. -40.2663 iterations 8
Cbc0038I Pass  17: suminf.    0.62099 (3) obj. -41.7039 iterations 2
Cbc0038I Pass  18: suminf.    0.86058 (3) obj. -40.2663 iterations 4
Cbc0038I Pass  19: suminf.    0.90587 (10) obj. -40.2663 iterations 20
Cbc0038I Pass  20: suminf.    0.72887 (7) obj. -40.2663 iterations 9
Cbc0038I Pass  21: suminf.    0.72520 (7) obj. -40.2663 iterations 8
Cbc0038I Pass  22: suminf.    0.98435 (6) obj. -40.2663 iterations 15
Cbc0038I Pass  23: suminf.    0.79161 (4) obj. -40.2663 iterations 5
Cbc0038I Pass  24: suminf.    0.45184 (2) obj. -40.2663 iterations 8
Cbc0038I Pass  25: suminf.    0.35185 (2) obj. -42.6229 iterations 3
Cbc0038I Pass  26: suminf.    0.70144 (3) obj. -40.2663 iterations 4
Cbc0038I Pass  27: suminf.    0.69983 (2) obj. -40.2663 iterations 4
Cbc0038I Pass  28: suminf.    0.58757 (11) obj. -40.2663 iterations 23
Cbc0038I Pass  29: suminf.    0.58757 (11) obj. -40.2663 iterations 0
Cbc0038I Pass  30: suminf.    0.55330 (3) obj. -40.2663 iterations 18
Cbc0038I Pass  31: suminf.    0.55330 (3) obj. -40.2663 iterations 1
Cbc0038I Rounding solution of -44.8834 is better than previous of -35.5324

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 111 columns, reduced to 39 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -44.8834 to -46.1464 (0.09 seconds)
Cbc0038I Round again with cutoff of -53.4914
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.65597 (23) obj. -61.0832 iterations 0
Cbc0038I Pass  32: suminf.    0.86894 (5) obj. -53.4914 iterations 37
Cbc0038I Pass  33: suminf.    0.81789 (4) obj. -53.4914 iterations 4
Cbc0038I Pass  34: suminf.    1.06195 (4) obj. -53.4914 iterations 3
Cbc0038I Pass  35: suminf.    1.06195 (4) obj. -53.4914 iterations 2
Cbc0038I Pass  36: suminf.    0.81789 (4) obj. -53.4914 iterations 4
Cbc0038I Pass  37: suminf.    1.15556 (8) obj. -53.4914 iterations 12
Cbc0038I Pass  38: suminf.    0.78626 (7) obj. -55.3379 iterations 2
Cbc0038I Pass  39: suminf.    1.00696 (5) obj. -53.4914 iterations 8
Cbc0038I Pass  40: suminf.    0.72923 (5) obj. -54.3246 iterations 4
Cbc0038I Pass  41: suminf.    0.84528 (8) obj. -56.2086 iterations 17
Cbc0038I Pass  42: suminf.    0.84528 (8) obj. -56.2086 iterations 6
Cbc0038I Pass  43: suminf.    0.81264 (6) obj. -53.4914 iterations 9
Cbc0038I Pass  44: suminf.    0.78788 (6) obj. -53.4914 iterations 3
Cbc0038I Pass  45: suminf.    0.95697 (6) obj. -53.4914 iterations 8
Cbc0038I Pass  46: suminf.    0.72618 (8) obj. -53.4914 iterations 29
Cbc0038I Pass  47: suminf.    0.29825 (9) obj. -55.1967 iterations 7
Cbc0038I Pass  48: suminf.    1.04176 (13) obj. -53.4914 iterations 18
Cbc0038I Pass  49: suminf.    1.04176 (13) obj. -53.4914 iterations 1
Cbc0038I Pass  50: suminf.    1.03861 (6) obj. -53.4914 iterations 13
Cbc0038I Pass  51: suminf.    1.03861 (6) obj. -53.4914 iterations 0
Cbc0038I Pass  52: suminf.    1.09447 (6) obj. -53.4914 iterations 8
Cbc0038I Pass  53: suminf.    0.81352 (5) obj. -54.2838 iterations 8
Cbc0038I Pass  54: suminf.    1.03861 (6) obj. -53.4914 iterations 6
Cbc0038I Pass  55: suminf.    1.57390 (10) obj. -53.4914 iterations 16
Cbc0038I Pass  56: suminf.    1.30283 (9) obj. -53.4914 iterations 6
Cbc0038I Pass  57: suminf.    1.03861 (6) obj. -53.4914 iterations 9
Cbc0038I Pass  58: suminf.    1.03861 (6) obj. -53.4914 iterations 2
Cbc0038I Pass  59: suminf.    1.09447 (6) obj. -53.4914 iterations 6
Cbc0038I Pass  60: suminf.    0.81352 (5) obj. -54.2838 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 111 columns, reduced to 34 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -46.1464 - took 0.07 seconds
Cbc0012I Integer solution of -46.14636 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 96 rows 111 columns, reduced to 19 rows 21 columns
Cbc0031I 40 added rows had average density of 31.9
Cbc0013I At root node, 40 cuts changed objective from -82.871276 to -58.358589 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9355 row cuts average 7.1 elements, 5 column cuts (21 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1104 row cuts average 91.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 814 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 693 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 539 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 326 row cuts average 51.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 91 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.641 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -46.14636 best solution, best possible -58.358589 (2.22 seconds)
Cbc0012I Integer solution of -47.56966 found by rounding after 3924 iterations and 4 nodes (2.37 seconds)
Cbc0001I Search completed - best objective -47.56966, took 4783 iterations and 16 nodes (2.62 seconds)
Cbc0032I Strong branching done 354 times (8004 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 6, 35 variables fixed on reduced cost
Total time (CPU seconds):       1.90   (Wallclock seconds):       2.63

