Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 4.5206e-07 - average 3.34859e-09, 23 fixed columns
Coin0506I Presolve 91 (-44) rows, 53 (-23) columns and 280 (-134) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 39.763559
Clp0000I Optimal - objective value 39.763559
Coin0511I After Postsolve, objective 39.763559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.763559
Clp0000I Optimal - objective value 39.763559
Clp0000I Optimal - objective value 39.763559
Coin0511I After Postsolve, objective 39.763559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.76355874 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 7.02457
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.08484 iterations 40
Cbc0038I Solution found of 6.08484
Cbc0038I Relaxing continuous gives 6.08484
Cbc0038I Rounding solution of -4.81089 is better than previous of 6.08484

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 52 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -4.81089 to -6.42263 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.75681
Cbc0038I Pass   2: suminf.    1.64973 (10) obj. -9.75681 iterations 11
Cbc0038I Pass   3: suminf.    0.56205 (3) obj. -9.75681 iterations 12
Cbc0038I Pass   4: suminf.    0.56205 (3) obj. -9.75681 iterations 0
Cbc0038I Pass   5: suminf.    0.89222 (4) obj. -9.75681 iterations 8
Cbc0038I Pass   6: suminf.    0.89222 (4) obj. -9.75681 iterations 0
Cbc0038I Pass   7: suminf.    0.96649 (3) obj. -9.75681 iterations 6
Cbc0038I Pass   8: suminf.    0.96649 (3) obj. -9.75681 iterations 0
Cbc0038I Pass   9: suminf.    1.24850 (3) obj. -9.75681 iterations 3
Cbc0038I Pass  10: suminf.    0.96352 (3) obj. -9.75681 iterations 2
Cbc0038I Pass  11: suminf.    0.95647 (5) obj. -9.75681 iterations 4
Cbc0038I Pass  12: suminf.    1.57935 (4) obj. -9.75681 iterations 5
Cbc0038I Pass  13: suminf.    1.55620 (8) obj. -9.75681 iterations 20
Cbc0038I Pass  14: suminf.    1.49533 (6) obj. -9.75681 iterations 9
Cbc0038I Pass  15: suminf.    1.24882 (5) obj. -9.75681 iterations 11
Cbc0038I Pass  16: suminf.    1.09786 (6) obj. -9.75681 iterations 1
Cbc0038I Pass  17: suminf.    1.48446 (6) obj. -9.75681 iterations 5
Cbc0038I Pass  18: suminf.    1.43617 (7) obj. -9.75681 iterations 3
Cbc0038I Pass  19: suminf.    1.97011 (5) obj. -9.75681 iterations 13
Cbc0038I Pass  20: suminf.    1.50613 (6) obj. -9.75681 iterations 5
Cbc0038I Pass  21: suminf.    0.99487 (4) obj. -9.75681 iterations 3
Cbc0038I Pass  22: suminf.    0.99487 (4) obj. -9.75681 iterations 0
Cbc0038I Pass  23: suminf.    1.26065 (6) obj. -9.75681 iterations 6
Cbc0038I Pass  24: suminf.    1.26065 (6) obj. -9.75681 iterations 0
Cbc0038I Pass  25: suminf.    1.86080 (7) obj. -9.75681 iterations 5
Cbc0038I Pass  26: suminf.    0.90408 (6) obj. -9.75681 iterations 3
Cbc0038I Pass  27: suminf.    0.90408 (6) obj. -9.75681 iterations 1
Cbc0038I Pass  28: suminf.    1.26065 (6) obj. -9.75681 iterations 7
Cbc0038I Pass  29: suminf.    1.26065 (6) obj. -9.75681 iterations 0
Cbc0038I Pass  30: suminf.    1.86080 (7) obj. -9.75681 iterations 5
Cbc0038I Pass  31: suminf.    0.90408 (6) obj. -9.75681 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 54 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.42263 to -6.98035 (0.10 seconds)
Cbc0038I Round again with cutoff of -15.7582
Cbc0038I Pass  31: suminf.    2.43313 (11) obj. -15.7582 iterations 1
Cbc0038I Pass  32: suminf.    0.89775 (4) obj. -15.7582 iterations 15
Cbc0038I Pass  33: suminf.    0.88705 (4) obj. -15.7582 iterations 3
Cbc0038I Pass  34: suminf.    1.02890 (6) obj. -15.7582 iterations 6
Cbc0038I Pass  35: suminf.    1.02890 (6) obj. -15.7582 iterations 1
Cbc0038I Pass  36: suminf.    2.27359 (8) obj. -15.7582 iterations 10
Cbc0038I Pass  37: suminf.    2.13110 (10) obj. -15.7582 iterations 2
Cbc0038I Pass  38: suminf.    1.30219 (7) obj. -15.7582 iterations 13
Cbc0038I Pass  39: suminf.    1.28017 (7) obj. -15.7582 iterations 3
Cbc0038I Pass  40: suminf.    2.06192 (11) obj. -15.7582 iterations 9
Cbc0038I Pass  41: suminf.    2.06192 (11) obj. -15.7582 iterations 0
Cbc0038I Pass  42: suminf.    1.85904 (8) obj. -15.7582 iterations 14
Cbc0038I Pass  43: suminf.    1.75310 (7) obj. -15.7582 iterations 3
Cbc0038I Pass  44: suminf.    2.06192 (11) obj. -15.7582 iterations 12
Cbc0038I Pass  45: suminf.    1.93347 (8) obj. -15.7582 iterations 29
Cbc0038I Pass  46: suminf.    1.23313 (8) obj. -15.7582 iterations 9
Cbc0038I Pass  47: suminf.    1.23313 (8) obj. -15.7582 iterations 0
Cbc0038I Pass  48: suminf.    2.56258 (9) obj. -15.7582 iterations 16
Cbc0038I Pass  49: suminf.    2.27377 (14) obj. -15.7582 iterations 4
Cbc0038I Pass  50: suminf.    1.90091 (8) obj. -15.7582 iterations 13
Cbc0038I Pass  51: suminf.    1.54989 (8) obj. -15.7582 iterations 5
Cbc0038I Pass  52: suminf.    2.03407 (8) obj. -15.7582 iterations 10
Cbc0038I Pass  53: suminf.    1.83065 (10) obj. -15.7582 iterations 3
Cbc0038I Pass  54: suminf.    1.54170 (8) obj. -15.7582 iterations 13
Cbc0038I Pass  55: suminf.    1.49265 (7) obj. -15.7582 iterations 3
Cbc0038I Pass  56: suminf.    1.49265 (7) obj. -15.7582 iterations 0
Cbc0038I Pass  57: suminf.    1.76546 (9) obj. -15.7582 iterations 8
Cbc0038I Pass  58: suminf.    1.76546 (9) obj. -15.7582 iterations 0
Cbc0038I Pass  59: suminf.    1.54170 (8) obj. -15.7582 iterations 9
Cbc0038I Pass  60: suminf.    1.49265 (7) obj. -15.7582 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 59 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -6.98035 to -9.97156 (0.14 seconds)
Cbc0038I Round again with cutoff of -22.9598
Cbc0038I Pass  60: suminf.    3.36888 (14) obj. -22.9598 iterations 1
Cbc0038I Pass  61: suminf.    2.86102 (10) obj. -22.9598 iterations 18
Cbc0038I Pass  62: suminf.    2.70369 (9) obj. -22.9598 iterations 4
Cbc0038I Pass  63: suminf.    3.21064 (12) obj. -22.9598 iterations 10
Cbc0038I Pass  64: suminf.    3.06853 (15) obj. -22.9598 iterations 2
Cbc0038I Pass  65: suminf.    4.14032 (11) obj. -22.9598 iterations 12
Cbc0038I Pass  66: suminf.    3.23461 (11) obj. -22.9598 iterations 8
Cbc0038I Pass  67: suminf.    2.90546 (8) obj. -22.9598 iterations 7
Cbc0038I Pass  68: suminf.    2.33669 (8) obj. -22.9598 iterations 4
Cbc0038I Pass  69: suminf.    3.21064 (12) obj. -22.9598 iterations 9
Cbc0038I Pass  70: suminf.    3.06853 (15) obj. -22.9598 iterations 2
Cbc0038I Pass  71: suminf.    3.16608 (9) obj. -22.9598 iterations 17
Cbc0038I Pass  72: suminf.    2.75656 (8) obj. -22.9598 iterations 5
Cbc0038I Pass  73: suminf.    3.22942 (9) obj. -22.9598 iterations 10
Cbc0038I Pass  74: suminf.    3.22942 (9) obj. -22.9598 iterations 0
Cbc0038I Pass  75: suminf.    3.13604 (9) obj. -22.9598 iterations 13
Cbc0038I Pass  76: suminf.    2.78076 (9) obj. -22.9598 iterations 3
Cbc0038I Pass  77: suminf.    3.52095 (8) obj. -22.9598 iterations 8
Cbc0038I Pass  78: suminf.    2.75719 (9) obj. -22.9598 iterations 7
Cbc0038I Pass  79: suminf.    2.75719 (9) obj. -22.9598 iterations 0
Cbc0038I Pass  80: suminf.    2.79803 (9) obj. -22.9598 iterations 10
Cbc0038I Pass  81: suminf.    2.44156 (8) obj. -22.9598 iterations 4
Cbc0038I Pass  82: suminf.    3.52095 (8) obj. -22.9598 iterations 7
Cbc0038I Pass  83: suminf.    2.75719 (9) obj. -22.9598 iterations 6
Cbc0038I Pass  84: suminf.    2.75719 (9) obj. -22.9598 iterations 0
Cbc0038I Pass  85: suminf.    2.79803 (9) obj. -22.9598 iterations 10
Cbc0038I Pass  86: suminf.    2.44156 (8) obj. -22.9598 iterations 4
Cbc0038I Pass  87: suminf.    3.52095 (8) obj. -22.9598 iterations 8
Cbc0038I Pass  88: suminf.    2.75719 (9) obj. -22.9598 iterations 7
Cbc0038I Pass  89: suminf.    2.75719 (9) obj. -22.9598 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 53 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -9.97156 - took 0.16 seconds
Cbc0012I Integer solution of -9.97156 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 33 columns
Cbc0031I 13 added rows had average density of 76
Cbc0013I At root node, 13 cuts changed objective from -39.763559 to -31.178045 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7821 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1277 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.97156 best solution, best possible -31.178045 (0.99 seconds)
Cbc0004I Integer solution of -10.02316 found after 7105 iterations and 42 nodes (1.20 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 22 rows 15 columns
Cbc0012I Integer solution of -10.3676 found by rounding after 8031 iterations and 70 nodes (1.26 seconds)
Cbc0001I Search completed - best objective -10.3676, took 8626 iterations and 96 nodes (1.29 seconds)
Cbc0032I Strong branching done 892 times (14359 iterations), fathomed 7 nodes and fixed 32 variables
Cbc0035I Maximum depth 27, 421 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 113 (-39) columns and 1758 (-1545) elements
Clp1000I sum of infeasibilities 1.42419e-07 - average 1.45326e-09, 75 fixed columns
Coin0506I Presolve 27 (-71) rows, 38 (-75) columns and 124 (-1634) elements
Clp0006I 0  Obj -14.097995 Dual inf 2.2402006 (38)
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 1.8884756 - largest nonzero change 2.9053584e-05 ( 0.001262127%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value -12.690976
Clp0000I Optimal - objective value -12.690976
Coin0511I After Postsolve, objective -12.690976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -12.690976 Dual inf 94.652612 (38)
Clp0014I Perturbing problem by 0.001% of 1.5670554 - largest nonzero change 1.3902533e-05 ( 0.00091204228%) - largest zero change 2.9486615e-05
Clp0000I Optimal - objective value 54.521451
Clp0000I Optimal - objective value 54.521451
Clp0000I Optimal - objective value 54.521451
Coin0511I After Postsolve, objective 54.521451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.52145103 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 113 columns (113 integer (113 of which binary)) and 1764 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.80932
Cbc0038I Pass   1: suminf.    1.86267 (26) obj. -35.4839 iterations 13
Cbc0038I Pass   2: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass   3: suminf.    0.77467 (13) obj. -9.78616 iterations 13
Cbc0038I Pass   4: suminf.    0.08013 (2) obj. 5.17031 iterations 11
Cbc0038I Solution found of 7.09018
Cbc0038I Rounding solution of 2.52902 is better than previous of 7.09018

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2.68272
Cbc0038I Pass   5: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass   6: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass   7: suminf.    1.00971 (16) obj. -20.8311 iterations 10
Cbc0038I Pass   8: suminf.    0.14451 (2) obj. -2.68272 iterations 17
Cbc0038I Pass   9: suminf.    0.14451 (2) obj. -2.68272 iterations 0
Cbc0038I Pass  10: suminf.    0.25707 (2) obj. -2.68272 iterations 7
Cbc0038I Pass  11: suminf.    0.08219 (1) obj. -3.62782 iterations 12
Cbc0038I Pass  12: suminf.    0.62696 (2) obj. -2.68272 iterations 2
Cbc0038I Pass  13: suminf.    0.39675 (3) obj. -10.6782 iterations 2
Cbc0038I Pass  14: suminf.    0.55772 (2) obj. -2.68272 iterations 4
Cbc0038I Pass  15: suminf.    0.55772 (2) obj. -2.68272 iterations 0
Cbc0038I Pass  16: suminf.    0.79662 (6) obj. -6.00517 iterations 23
Cbc0038I Pass  17: suminf.    0.79662 (6) obj. -6.00517 iterations 5
Cbc0038I Pass  18: suminf.    0.71998 (5) obj. -2.68272 iterations 8
Cbc0038I Pass  19: suminf.    0.71998 (5) obj. -2.68272 iterations 0
Cbc0038I Pass  20: suminf.    0.34828 (3) obj. -2.68272 iterations 8
Cbc0038I Pass  21: suminf.    0.33076 (2) obj. -2.68272 iterations 2
Cbc0038I Pass  22: suminf.    0.23131 (3) obj. -2.78821 iterations 4
Cbc0038I Pass  23: suminf.    0.27240 (2) obj. -2.68272 iterations 4
Cbc0038I Pass  24: suminf.    0.27240 (2) obj. -2.68272 iterations 0
Cbc0038I Pass  25: suminf.    0.36736 (3) obj. -2.68272 iterations 5
Cbc0038I Pass  26: suminf.    0.36736 (3) obj. -2.68272 iterations 0
Cbc0038I Pass  27: suminf.    0.40549 (2) obj. -2.68272 iterations 3
Cbc0038I Pass  28: suminf.    0.79371 (8) obj. -6.75557 iterations 34
Cbc0038I Pass  29: suminf.    0.79371 (8) obj. -6.75557 iterations 2
Cbc0038I Pass  30: suminf.    0.91529 (4) obj. -2.68272 iterations 12
Cbc0038I Pass  31: suminf.    0.91529 (4) obj. -2.68272 iterations 0
Cbc0038I Pass  32: suminf.    0.70272 (4) obj. -2.68272 iterations 5
Cbc0038I Pass  33: suminf.    0.42880 (3) obj. -2.68272 iterations 10
Cbc0038I Pass  34: suminf.    0.42880 (3) obj. -2.68272 iterations 0
Cbc0038I Rounding solution of -6.20758 is better than previous of 2.52902

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.20758 to -8.04471 (0.05 seconds)
Cbc0038I Round again with cutoff of -16.3533
Cbc0038I Pass  34: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass  35: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass  36: suminf.    1.50556 (12) obj. -16.3533 iterations 27
Cbc0038I Pass  37: suminf.    1.50556 (12) obj. -16.3533 iterations 0
Cbc0038I Pass  38: suminf.    1.51789 (7) obj. -16.3533 iterations 14
Cbc0038I Pass  39: suminf.    0.67757 (7) obj. -16.3533 iterations 6
Cbc0038I Pass  40: suminf.    1.37581 (8) obj. -16.3533 iterations 6
Cbc0038I Pass  41: suminf.    2.52776 (17) obj. -16.3533 iterations 17
Cbc0038I Pass  42: suminf.    0.90050 (12) obj. -16.3533 iterations 10
Cbc0038I Pass  43: suminf.    0.85632 (13) obj. -16.3533 iterations 3
Cbc0038I Pass  44: suminf.    1.43076 (8) obj. -16.3533 iterations 16
Cbc0038I Pass  45: suminf.    1.23762 (8) obj. -16.3533 iterations 2
Cbc0038I Pass  46: suminf.    2.05150 (12) obj. -16.3533 iterations 7
Cbc0038I Pass  47: suminf.    1.93948 (13) obj. -16.3533 iterations 3
Cbc0038I Pass  48: suminf.    1.37581 (8) obj. -16.3533 iterations 11
Cbc0038I Pass  49: suminf.    0.67757 (7) obj. -16.3533 iterations 5
Cbc0038I Pass  50: suminf.    1.37581 (8) obj. -16.3533 iterations 6
Cbc0038I Pass  51: suminf.    1.27297 (13) obj. -16.3533 iterations 10
Cbc0038I Pass  52: suminf.    1.11593 (11) obj. -16.3533 iterations 7
Cbc0038I Pass  53: suminf.    1.29923 (7) obj. -16.3533 iterations 15
Cbc0038I Pass  54: suminf.    1.86693 (11) obj. -16.3533 iterations 12
Cbc0038I Pass  55: suminf.    1.08233 (10) obj. -16.3533 iterations 7
Cbc0038I Pass  56: suminf.    0.96108 (8) obj. -16.3533 iterations 10
Cbc0038I Pass  57: suminf.    0.96108 (8) obj. -16.3533 iterations 0
Cbc0038I Pass  58: suminf.    1.63634 (8) obj. -16.3533 iterations 10
Cbc0038I Pass  59: suminf.    1.62699 (8) obj. -16.3533 iterations 1
Cbc0038I Pass  60: suminf.    1.90301 (8) obj. -16.3533 iterations 5
Cbc0038I Pass  61: suminf.    1.22156 (8) obj. -16.3533 iterations 5
Cbc0038I Pass  62: suminf.    1.46947 (7) obj. -16.3533 iterations 6
Cbc0038I Pass  63: suminf.    1.04860 (9) obj. -16.3533 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -8.04471 - took 0.05 seconds
Cbc0012I Integer solution of -8.04471 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 98 rows 113 columns, reduced to 14 rows 14 columns
Cbc0031I 57 added rows had average density of 44.315789
Cbc0013I At root node, 57 cuts changed objective from -49.58743 to -15.931581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9657 row cuts average 5.8 elements, 1 column cuts (2 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1742 row cuts average 105.8 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 239 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1076 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 154 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.664 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.04471 best solution, best possible -15.931581 (2.34 seconds)
Cbc0012I Integer solution of -9.55328 found by rounding after 3680 iterations and 1 nodes (2.45 seconds)
Cbc0012I Integer solution of -10.3676 found by rounding after 3748 iterations and 6 nodes (2.65 seconds)
Cbc0010I After 17 nodes, 2 on tree, -10.3676 best solution, best possible -14.722145 (3.11 seconds)
Cbc0001I Search completed - best objective -10.3676, took 5054 iterations and 34 nodes (3.61 seconds)
Cbc0032I Strong branching done 512 times (9467 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 9, 83 variables fixed on reduced cost
Total time (CPU seconds):       2.50   (Wallclock seconds):       3.62

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 76 (-2) columns and 414 (-39) elements
Clp1000I sum of infeasibilities 4.5206e-07 - average 3.34859e-09, 23 fixed columns
Coin0506I Presolve 91 (-44) rows, 53 (-23) columns and 280 (-134) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 39.763559
Clp0000I Optimal - objective value 39.763559
Coin0511I After Postsolve, objective 39.763559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.763559
Clp0000I Optimal - objective value 39.763559
Clp0000I Optimal - objective value 39.763559
Coin0511I After Postsolve, objective 39.763559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.76355874 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.144%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 7.02457
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.08484 iterations 40
Cbc0038I Solution found of 6.08484
Cbc0038I Relaxing continuous gives 6.08484
Cbc0038I Rounding solution of -4.81089 is better than previous of 6.08484

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 52 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -4.81089 to -6.42263 (0.04 seconds)
Cbc0038I Round again with cutoff of -9.75681
Cbc0038I Pass   2: suminf.    1.64973 (10) obj. -9.75681 iterations 11
Cbc0038I Pass   3: suminf.    0.56205 (3) obj. -9.75681 iterations 12
Cbc0038I Pass   4: suminf.    0.56205 (3) obj. -9.75681 iterations 0
Cbc0038I Pass   5: suminf.    0.89222 (4) obj. -9.75681 iterations 8
Cbc0038I Pass   6: suminf.    0.89222 (4) obj. -9.75681 iterations 0
Cbc0038I Pass   7: suminf.    0.96649 (3) obj. -9.75681 iterations 6
Cbc0038I Pass   8: suminf.    0.96649 (3) obj. -9.75681 iterations 0
Cbc0038I Pass   9: suminf.    1.24850 (3) obj. -9.75681 iterations 3
Cbc0038I Pass  10: suminf.    0.96352 (3) obj. -9.75681 iterations 2
Cbc0038I Pass  11: suminf.    0.95647 (5) obj. -9.75681 iterations 4
Cbc0038I Pass  12: suminf.    1.57935 (4) obj. -9.75681 iterations 5
Cbc0038I Pass  13: suminf.    1.55620 (8) obj. -9.75681 iterations 20
Cbc0038I Pass  14: suminf.    1.49533 (6) obj. -9.75681 iterations 9
Cbc0038I Pass  15: suminf.    1.24882 (5) obj. -9.75681 iterations 11
Cbc0038I Pass  16: suminf.    1.09786 (6) obj. -9.75681 iterations 1
Cbc0038I Pass  17: suminf.    1.48446 (6) obj. -9.75681 iterations 5
Cbc0038I Pass  18: suminf.    1.43617 (7) obj. -9.75681 iterations 3
Cbc0038I Pass  19: suminf.    1.97011 (5) obj. -9.75681 iterations 13
Cbc0038I Pass  20: suminf.    1.50613 (6) obj. -9.75681 iterations 5
Cbc0038I Pass  21: suminf.    0.99487 (4) obj. -9.75681 iterations 3
Cbc0038I Pass  22: suminf.    0.99487 (4) obj. -9.75681 iterations 0
Cbc0038I Pass  23: suminf.    1.26065 (6) obj. -9.75681 iterations 6
Cbc0038I Pass  24: suminf.    1.26065 (6) obj. -9.75681 iterations 0
Cbc0038I Pass  25: suminf.    1.86080 (7) obj. -9.75681 iterations 5
Cbc0038I Pass  26: suminf.    0.90408 (6) obj. -9.75681 iterations 3
Cbc0038I Pass  27: suminf.    0.90408 (6) obj. -9.75681 iterations 1
Cbc0038I Pass  28: suminf.    1.26065 (6) obj. -9.75681 iterations 7
Cbc0038I Pass  29: suminf.    1.26065 (6) obj. -9.75681 iterations 0
Cbc0038I Pass  30: suminf.    1.86080 (7) obj. -9.75681 iterations 5
Cbc0038I Pass  31: suminf.    0.90408 (6) obj. -9.75681 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 54 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.42263 to -6.98035 (0.08 seconds)
Cbc0038I Round again with cutoff of -15.7582
Cbc0038I Pass  31: suminf.    2.43313 (11) obj. -15.7582 iterations 1
Cbc0038I Pass  32: suminf.    0.89775 (4) obj. -15.7582 iterations 15
Cbc0038I Pass  33: suminf.    0.88705 (4) obj. -15.7582 iterations 3
Cbc0038I Pass  34: suminf.    1.02890 (6) obj. -15.7582 iterations 6
Cbc0038I Pass  35: suminf.    1.02890 (6) obj. -15.7582 iterations 1
Cbc0038I Pass  36: suminf.    2.27359 (8) obj. -15.7582 iterations 10
Cbc0038I Pass  37: suminf.    2.13110 (10) obj. -15.7582 iterations 2
Cbc0038I Pass  38: suminf.    1.30219 (7) obj. -15.7582 iterations 13
Cbc0038I Pass  39: suminf.    1.28017 (7) obj. -15.7582 iterations 3
Cbc0038I Pass  40: suminf.    2.06192 (11) obj. -15.7582 iterations 9
Cbc0038I Pass  41: suminf.    2.06192 (11) obj. -15.7582 iterations 0
Cbc0038I Pass  42: suminf.    1.85904 (8) obj. -15.7582 iterations 14
Cbc0038I Pass  43: suminf.    1.75310 (7) obj. -15.7582 iterations 3
Cbc0038I Pass  44: suminf.    2.06192 (11) obj. -15.7582 iterations 12
Cbc0038I Pass  45: suminf.    1.93347 (8) obj. -15.7582 iterations 29
Cbc0038I Pass  46: suminf.    1.23313 (8) obj. -15.7582 iterations 9
Cbc0038I Pass  47: suminf.    1.23313 (8) obj. -15.7582 iterations 0
Cbc0038I Pass  48: suminf.    2.56258 (9) obj. -15.7582 iterations 16
Cbc0038I Pass  49: suminf.    2.27377 (14) obj. -15.7582 iterations 4
Cbc0038I Pass  50: suminf.    1.90091 (8) obj. -15.7582 iterations 13
Cbc0038I Pass  51: suminf.    1.54989 (8) obj. -15.7582 iterations 5
Cbc0038I Pass  52: suminf.    2.03407 (8) obj. -15.7582 iterations 10
Cbc0038I Pass  53: suminf.    1.83065 (10) obj. -15.7582 iterations 3
Cbc0038I Pass  54: suminf.    1.54170 (8) obj. -15.7582 iterations 13
Cbc0038I Pass  55: suminf.    1.49265 (7) obj. -15.7582 iterations 3
Cbc0038I Pass  56: suminf.    1.49265 (7) obj. -15.7582 iterations 0
Cbc0038I Pass  57: suminf.    1.76546 (9) obj. -15.7582 iterations 8
Cbc0038I Pass  58: suminf.    1.76546 (9) obj. -15.7582 iterations 0
Cbc0038I Pass  59: suminf.    1.54170 (8) obj. -15.7582 iterations 9
Cbc0038I Pass  60: suminf.    1.49265 (7) obj. -15.7582 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 59 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -6.98035 to -9.97156 (0.13 seconds)
Cbc0038I Round again with cutoff of -22.9598
Cbc0038I Pass  60: suminf.    3.36888 (14) obj. -22.9598 iterations 1
Cbc0038I Pass  61: suminf.    2.86102 (10) obj. -22.9598 iterations 18
Cbc0038I Pass  62: suminf.    2.70369 (9) obj. -22.9598 iterations 4
Cbc0038I Pass  63: suminf.    3.21064 (12) obj. -22.9598 iterations 10
Cbc0038I Pass  64: suminf.    3.06853 (15) obj. -22.9598 iterations 2
Cbc0038I Pass  65: suminf.    4.14032 (11) obj. -22.9598 iterations 12
Cbc0038I Pass  66: suminf.    3.23461 (11) obj. -22.9598 iterations 8
Cbc0038I Pass  67: suminf.    2.90546 (8) obj. -22.9598 iterations 7
Cbc0038I Pass  68: suminf.    2.33669 (8) obj. -22.9598 iterations 4
Cbc0038I Pass  69: suminf.    3.21064 (12) obj. -22.9598 iterations 9
Cbc0038I Pass  70: suminf.    3.06853 (15) obj. -22.9598 iterations 2
Cbc0038I Pass  71: suminf.    3.16608 (9) obj. -22.9598 iterations 17
Cbc0038I Pass  72: suminf.    2.75656 (8) obj. -22.9598 iterations 5
Cbc0038I Pass  73: suminf.    3.22942 (9) obj. -22.9598 iterations 10
Cbc0038I Pass  74: suminf.    3.22942 (9) obj. -22.9598 iterations 0
Cbc0038I Pass  75: suminf.    3.13604 (9) obj. -22.9598 iterations 13
Cbc0038I Pass  76: suminf.    2.78076 (9) obj. -22.9598 iterations 3
Cbc0038I Pass  77: suminf.    3.52095 (8) obj. -22.9598 iterations 8
Cbc0038I Pass  78: suminf.    2.75719 (9) obj. -22.9598 iterations 7
Cbc0038I Pass  79: suminf.    2.75719 (9) obj. -22.9598 iterations 0
Cbc0038I Pass  80: suminf.    2.79803 (9) obj. -22.9598 iterations 10
Cbc0038I Pass  81: suminf.    2.44156 (8) obj. -22.9598 iterations 4
Cbc0038I Pass  82: suminf.    3.52095 (8) obj. -22.9598 iterations 7
Cbc0038I Pass  83: suminf.    2.75719 (9) obj. -22.9598 iterations 6
Cbc0038I Pass  84: suminf.    2.75719 (9) obj. -22.9598 iterations 0
Cbc0038I Pass  85: suminf.    2.79803 (9) obj. -22.9598 iterations 10
Cbc0038I Pass  86: suminf.    2.44156 (8) obj. -22.9598 iterations 4
Cbc0038I Pass  87: suminf.    3.52095 (8) obj. -22.9598 iterations 8
Cbc0038I Pass  88: suminf.    2.75719 (9) obj. -22.9598 iterations 7
Cbc0038I Pass  89: suminf.    2.75719 (9) obj. -22.9598 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 53 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -9.97156 - took 0.14 seconds
Cbc0012I Integer solution of -9.97156 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 33 columns
Cbc0031I 13 added rows had average density of 76
Cbc0013I At root node, 13 cuts changed objective from -39.763559 to -31.178045 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7821 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1277 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.97156 best solution, best possible -31.178045 (0.76 seconds)
Cbc0004I Integer solution of -10.02316 found after 7105 iterations and 42 nodes (1.00 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 22 rows 15 columns
Cbc0012I Integer solution of -10.3676 found by rounding after 8031 iterations and 70 nodes (1.06 seconds)
Cbc0001I Search completed - best objective -10.3676, took 8626 iterations and 96 nodes (1.08 seconds)
Cbc0032I Strong branching done 892 times (14359 iterations), fathomed 7 nodes and fixed 32 variables
Cbc0035I Maximum depth 27, 421 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 113 (-40) columns and 1758 (-1546) elements
Clp1000I sum of infeasibilities 1.42419e-07 - average 1.45326e-09, 75 fixed columns
Coin0506I Presolve 27 (-71) rows, 38 (-75) columns and 124 (-1634) elements
Clp0006I 0  Obj -14.097995 Dual inf 2.2402006 (38)
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 1.8884756 - largest nonzero change 2.9053584e-05 ( 0.001262127%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value -12.690976
Clp0000I Optimal - objective value -12.690976
Coin0511I After Postsolve, objective -12.690976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -12.690976 Dual inf 94.652612 (38)
Clp0014I Perturbing problem by 0.001% of 1.5670554 - largest nonzero change 1.3902533e-05 ( 0.00091204228%) - largest zero change 2.9486615e-05
Clp0000I Optimal - objective value 54.521451
Clp0000I Optimal - objective value 54.521451
Clp0000I Optimal - objective value 54.521451
Coin0511I After Postsolve, objective 54.521451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.52145103 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 113 columns (113 integer (113 of which binary)) and 1764 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.80932
Cbc0038I Pass   1: suminf.    1.86267 (26) obj. -35.4839 iterations 13
Cbc0038I Pass   2: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass   3: suminf.    0.77467 (13) obj. -9.78616 iterations 13
Cbc0038I Pass   4: suminf.    0.08013 (2) obj. 5.17031 iterations 11
Cbc0038I Solution found of 7.09018
Cbc0038I Rounding solution of 2.52902 is better than previous of 7.09018

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -2.68272
Cbc0038I Pass   5: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass   6: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass   7: suminf.    1.00971 (16) obj. -20.8311 iterations 10
Cbc0038I Pass   8: suminf.    0.14451 (2) obj. -2.68272 iterations 17
Cbc0038I Pass   9: suminf.    0.14451 (2) obj. -2.68272 iterations 0
Cbc0038I Pass  10: suminf.    0.25707 (2) obj. -2.68272 iterations 7
Cbc0038I Pass  11: suminf.    0.08219 (1) obj. -3.62782 iterations 12
Cbc0038I Pass  12: suminf.    0.62696 (2) obj. -2.68272 iterations 2
Cbc0038I Pass  13: suminf.    0.39675 (3) obj. -10.6782 iterations 2
Cbc0038I Pass  14: suminf.    0.55772 (2) obj. -2.68272 iterations 4
Cbc0038I Pass  15: suminf.    0.55772 (2) obj. -2.68272 iterations 0
Cbc0038I Pass  16: suminf.    0.79662 (6) obj. -6.00517 iterations 23
Cbc0038I Pass  17: suminf.    0.79662 (6) obj. -6.00517 iterations 5
Cbc0038I Pass  18: suminf.    0.71998 (5) obj. -2.68272 iterations 8
Cbc0038I Pass  19: suminf.    0.71998 (5) obj. -2.68272 iterations 0
Cbc0038I Pass  20: suminf.    0.34828 (3) obj. -2.68272 iterations 8
Cbc0038I Pass  21: suminf.    0.33076 (2) obj. -2.68272 iterations 2
Cbc0038I Pass  22: suminf.    0.23131 (3) obj. -2.78821 iterations 4
Cbc0038I Pass  23: suminf.    0.27240 (2) obj. -2.68272 iterations 4
Cbc0038I Pass  24: suminf.    0.27240 (2) obj. -2.68272 iterations 0
Cbc0038I Pass  25: suminf.    0.36736 (3) obj. -2.68272 iterations 5
Cbc0038I Pass  26: suminf.    0.36736 (3) obj. -2.68272 iterations 0
Cbc0038I Pass  27: suminf.    0.40549 (2) obj. -2.68272 iterations 3
Cbc0038I Pass  28: suminf.    0.79371 (8) obj. -6.75557 iterations 34
Cbc0038I Pass  29: suminf.    0.79371 (8) obj. -6.75557 iterations 2
Cbc0038I Pass  30: suminf.    0.91529 (4) obj. -2.68272 iterations 12
Cbc0038I Pass  31: suminf.    0.91529 (4) obj. -2.68272 iterations 0
Cbc0038I Pass  32: suminf.    0.70272 (4) obj. -2.68272 iterations 5
Cbc0038I Pass  33: suminf.    0.42880 (3) obj. -2.68272 iterations 10
Cbc0038I Pass  34: suminf.    0.42880 (3) obj. -2.68272 iterations 0
Cbc0038I Rounding solution of -6.20758 is better than previous of 2.52902

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.20758 to -8.04471 (0.05 seconds)
Cbc0038I Round again with cutoff of -16.3533
Cbc0038I Pass  34: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass  35: suminf.    1.86267 (26) obj. -35.4839 iterations 0
Cbc0038I Pass  36: suminf.    1.50556 (12) obj. -16.3533 iterations 27
Cbc0038I Pass  37: suminf.    1.50556 (12) obj. -16.3533 iterations 0
Cbc0038I Pass  38: suminf.    1.51789 (7) obj. -16.3533 iterations 14
Cbc0038I Pass  39: suminf.    0.67757 (7) obj. -16.3533 iterations 6
Cbc0038I Pass  40: suminf.    1.37581 (8) obj. -16.3533 iterations 6
Cbc0038I Pass  41: suminf.    2.52776 (17) obj. -16.3533 iterations 17
Cbc0038I Pass  42: suminf.    0.90050 (12) obj. -16.3533 iterations 10
Cbc0038I Pass  43: suminf.    0.85632 (13) obj. -16.3533 iterations 3
Cbc0038I Pass  44: suminf.    1.43076 (8) obj. -16.3533 iterations 16
Cbc0038I Pass  45: suminf.    1.23762 (8) obj. -16.3533 iterations 2
Cbc0038I Pass  46: suminf.    2.05150 (12) obj. -16.3533 iterations 7
Cbc0038I Pass  47: suminf.    1.93948 (13) obj. -16.3533 iterations 3
Cbc0038I Pass  48: suminf.    1.37581 (8) obj. -16.3533 iterations 11
Cbc0038I Pass  49: suminf.    0.67757 (7) obj. -16.3533 iterations 5
Cbc0038I Pass  50: suminf.    1.37581 (8) obj. -16.3533 iterations 6
Cbc0038I Pass  51: suminf.    1.27297 (13) obj. -16.3533 iterations 10
Cbc0038I Pass  52: suminf.    1.11593 (11) obj. -16.3533 iterations 7
Cbc0038I Pass  53: suminf.    1.29923 (7) obj. -16.3533 iterations 15
Cbc0038I Pass  54: suminf.    1.86693 (11) obj. -16.3533 iterations 12
Cbc0038I Pass  55: suminf.    1.08233 (10) obj. -16.3533 iterations 7
Cbc0038I Pass  56: suminf.    0.96108 (8) obj. -16.3533 iterations 10
Cbc0038I Pass  57: suminf.    0.96108 (8) obj. -16.3533 iterations 0
Cbc0038I Pass  58: suminf.    1.63634 (8) obj. -16.3533 iterations 10
Cbc0038I Pass  59: suminf.    1.62699 (8) obj. -16.3533 iterations 1
Cbc0038I Pass  60: suminf.    1.90301 (8) obj. -16.3533 iterations 5
Cbc0038I Pass  61: suminf.    1.22156 (8) obj. -16.3533 iterations 5
Cbc0038I Pass  62: suminf.    1.46947 (7) obj. -16.3533 iterations 6
Cbc0038I Pass  63: suminf.    1.04860 (9) obj. -16.3533 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 113 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -8.04471 - took 0.05 seconds
Cbc0012I Integer solution of -8.04471 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 98 rows 113 columns, reduced to 14 rows 14 columns
Cbc0031I 57 added rows had average density of 44.315789
Cbc0013I At root node, 57 cuts changed objective from -49.58743 to -15.931581 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9657 row cuts average 5.8 elements, 1 column cuts (2 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1742 row cuts average 105.8 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 239 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1076 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 154 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.713 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.04471 best solution, best possible -15.931581 (2.57 seconds)
Cbc0012I Integer solution of -9.55328 found by rounding after 3680 iterations and 1 nodes (2.69 seconds)
Cbc0012I Integer solution of -10.3676 found by rounding after 3748 iterations and 6 nodes (2.91 seconds)
Cbc0010I After 16 nodes, 1 on tree, -10.3676 best solution, best possible -14.722145 (3.32 seconds)
Cbc0001I Search completed - best objective -10.3676, took 5054 iterations and 34 nodes (3.99 seconds)
Cbc0032I Strong branching done 512 times (9467 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 9, 83 variables fixed on reduced cost
Total time (CPU seconds):       2.72   (Wallclock seconds):       4.01

