Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 24 (-39) rows, 14 (-18) columns and 70 (-107) elements
Clp0000I Optimal - objective value 81.996318
Coin0511I After Postsolve, objective 81.996318, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.99631809 - 18 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 24 rows, 14 columns (13 integer (13 of which binary)) and 70 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.665%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.06054
Cbc0038I Pass   1: suminf.    0.30645 (1) obj. -67.8119 iterations 7
Cbc0038I Solution found of -29.6667
Cbc0038I Relaxing continuous gives -29.6667
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 14 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -34.8998
Cbc0038I Pass   2: suminf.    0.30645 (1) obj. -67.8119 iterations 0
Cbc0038I Pass   3: suminf.    0.07390 (2) obj. -34.8998 iterations 2
Cbc0038I Pass   4: suminf.    0.20968 (1) obj. -69.4678 iterations 2
Cbc0038I Pass   5: suminf.    0.16181 (1) obj. -34.8998 iterations 1
Cbc0038I Pass   6: suminf.    0.16181 (1) obj. -34.8998 iterations 1
Cbc0038I Pass   7: suminf.    0.16181 (1) obj. -34.8998 iterations 1
Cbc0038I Pass   8: suminf.    0.89944 (4) obj. -34.8998 iterations 4
Cbc0038I Pass   9: suminf.    0.67233 (3) obj. -34.8998 iterations 1
Cbc0038I Pass  10: suminf.    0.93854 (3) obj. -34.8998 iterations 4
Cbc0038I Pass  11: suminf.    0.29327 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  12: suminf.    0.19355 (1) obj. -40.0216 iterations 2
Cbc0038I Pass  13: suminf.    0.28667 (1) obj. -34.8998 iterations 1
Cbc0038I Pass  14: suminf.    0.19355 (1) obj. -40.0216 iterations 1
Cbc0038I Pass  15: suminf.    0.01613 (1) obj. -39.4893 iterations 3
Cbc0038I Pass  16: suminf.    0.01613 (1) obj. -39.4893 iterations 0
Cbc0038I Pass  17: suminf.    0.21395 (1) obj. -34.8998 iterations 2
Cbc0038I Pass  18: suminf.    0.01613 (1) obj. -39.4893 iterations 2
Cbc0038I Pass  19: suminf.    0.21395 (1) obj. -34.8998 iterations 2
Cbc0038I Pass  20: suminf.    0.75808 (3) obj. -34.8998 iterations 3
Cbc0038I Pass  21: suminf.    0.24171 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  22: suminf.    0.25813 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  23: suminf.    0.25813 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  24: suminf.    0.28667 (1) obj. -34.8998 iterations 2
Cbc0038I Pass  25: suminf.    0.04839 (1) obj. -45.1345 iterations 2
Cbc0038I Pass  26: suminf.    0.70535 (4) obj. -34.8998 iterations 5
Cbc0038I Pass  27: suminf.    0.30835 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  28: suminf.    0.23454 (1) obj. -34.8998 iterations 4
Cbc0038I Pass  29: suminf.    0.20968 (1) obj. -65.4678 iterations 1
Cbc0038I Pass  30: suminf.    0.30645 (1) obj. -36.4785 iterations 2
Cbc0038I Pass  31: suminf.    0.30645 (1) obj. -36.4785 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 14 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -29.6667 - took 0.02 seconds
Cbc0012I Integer solution of -29.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 14 columns, reduced to 7 rows 7 columns
Cbc0012I Integer solution of -39.00007 found by DiveCoefficient after 876 iterations and 0 nodes (0.06 seconds)
Cbc0031I 9 added rows had average density of 10.222222
Cbc0013I At root node, 9 cuts changed objective from -81.996318 to -42.251784 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 430 row cuts average 5.0 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 411 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -39.6667 found by rounding after 888 iterations and 1 nodes (0.06 seconds)
Cbc0001I Search completed - best objective -39.66670000000002, took 897 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 18 times (138 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-30) rows, 34 (-26) columns and 222 (-390) elements
Clp1000I sum of infeasibilities 6.73026e-11 - average 2.10321e-12, 31 fixed columns
Coin0506I Presolve 3 (-29) rows, 3 (-31) columns and 8 (-214) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 209.75937
Clp0000I Optimal - objective value 209.75937
Coin0511I After Postsolve, objective 209.75937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2491551 - largest nonzero change 0 ( 0%) - largest zero change 2.7805294e-05
Clp0000I Optimal - objective value 287.21666
Clp0000I Optimal - objective value 287.21666
Clp0000I Optimal - objective value 287.21666
Coin0511I After Postsolve, objective 287.21666, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 287.2166556 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 40 columns (40 integer (40 of which binary)) and 279 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.03389
Cbc0038I Pass   1: suminf.    0.65323 (2) obj. -203.132 iterations 30
Cbc0038I Solution found of -164.333
Cbc0038I Rounding solution of -172 is better than previous of -164.333

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -178.1
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.65323 (2) obj. -203.132 iterations 0
Cbc0038I Pass   3: suminf.    0.25030 (1) obj. -178.1 iterations 2
Cbc0038I Pass   4: suminf.    0.30645 (1) obj. -202.479 iterations 1
Cbc0038I Pass   5: suminf.    1.84720 (8) obj. -178.1 iterations 9
Cbc0038I Pass   6: suminf.    0.54508 (2) obj. -192.911 iterations 7
Cbc0038I Pass   7: suminf.    0.39322 (2) obj. -178.1 iterations 2
Cbc0038I Pass   8: suminf.    0.39322 (2) obj. -178.1 iterations 0
Cbc0038I Pass   9: suminf.    0.72273 (2) obj. -178.1 iterations 1
Cbc0038I Pass  10: suminf.    1.10750 (7) obj. -184.464 iterations 9
Cbc0038I Pass  11: suminf.    0.54508 (2) obj. -182.911 iterations 6
Cbc0038I Pass  12: suminf.    0.59038 (2) obj. -178.1 iterations 2
Cbc0038I Pass  13: suminf.    0.59038 (2) obj. -178.1 iterations 0
Cbc0038I Pass  14: suminf.    0.60279 (2) obj. -178.1 iterations 1
Cbc0038I Pass  15: suminf.    1.54008 (5) obj. -178.1 iterations 5
Cbc0038I Pass  16: suminf.    1.20915 (3) obj. -178.1 iterations 2
Cbc0038I Pass  17: suminf.    0.37936 (2) obj. -178.1 iterations 1
Cbc0038I Pass  18: suminf.    0.55388 (2) obj. -178.1 iterations 1
Cbc0038I Pass  19: suminf.    1.50986 (6) obj. -178.1 iterations 9
Cbc0038I Pass  20: suminf.    0.70278 (3) obj. -178.1 iterations 5
Cbc0038I Pass  21: suminf.    0.52831 (2) obj. -178.1 iterations 1
Cbc0038I Pass  22: suminf.    0.45161 (1) obj. -184.495 iterations 1
Cbc0038I Pass  23: suminf.    0.43212 (1) obj. -178.1 iterations 1
Cbc0038I Pass  24: suminf.    2.20258 (7) obj. -178.1 iterations 9
Cbc0038I Pass  25: suminf.    3.58455 (11) obj. -178.1 iterations 13
Cbc0038I Pass  26: suminf.    0.65412 (2) obj. -178.1 iterations 11
Cbc0038I Pass  27: suminf.    0.45161 (1) obj. -178.172 iterations 2
Cbc0038I Pass  28: suminf.    0.45030 (1) obj. -178.1 iterations 1
Cbc0038I Pass  29: suminf.    2.89422 (10) obj. -178.1 iterations 11
Cbc0038I Pass  30: suminf.    0.45442 (2) obj. -178.1 iterations 12
Cbc0038I Pass  31: suminf.    0.47615 (2) obj. -178.1 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -172 - took 0.01 seconds
Cbc0012I Integer solution of -172.00007 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -175.3334 found by DiveCoefficient after 24 iterations and 0 nodes (0.02 seconds)
Cbc0013I At root node, 0 cuts changed objective from -209.5702 to -175.3334 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 7.2 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175.3334, took 24 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 24 (-39) rows, 14 (-18) columns and 70 (-107) elements
Clp0000I Optimal - objective value 81.996318
Coin0511I After Postsolve, objective 81.996318, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.99631809 - 18 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 24 rows, 14 columns (13 integer (13 of which binary)) and 70 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.665%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.06054
Cbc0038I Pass   1: suminf.    0.30645 (1) obj. -67.8119 iterations 7
Cbc0038I Solution found of -29.6667
Cbc0038I Relaxing continuous gives -29.6667
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 14 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -34.8998
Cbc0038I Pass   2: suminf.    0.30645 (1) obj. -67.8119 iterations 0
Cbc0038I Pass   3: suminf.    0.07390 (2) obj. -34.8998 iterations 2
Cbc0038I Pass   4: suminf.    0.20968 (1) obj. -69.4678 iterations 2
Cbc0038I Pass   5: suminf.    0.16181 (1) obj. -34.8998 iterations 1
Cbc0038I Pass   6: suminf.    0.16181 (1) obj. -34.8998 iterations 1
Cbc0038I Pass   7: suminf.    0.16181 (1) obj. -34.8998 iterations 1
Cbc0038I Pass   8: suminf.    0.89944 (4) obj. -34.8998 iterations 4
Cbc0038I Pass   9: suminf.    0.67233 (3) obj. -34.8998 iterations 1
Cbc0038I Pass  10: suminf.    0.93854 (3) obj. -34.8998 iterations 4
Cbc0038I Pass  11: suminf.    0.29327 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  12: suminf.    0.19355 (1) obj. -40.0216 iterations 2
Cbc0038I Pass  13: suminf.    0.28667 (1) obj. -34.8998 iterations 1
Cbc0038I Pass  14: suminf.    0.19355 (1) obj. -40.0216 iterations 1
Cbc0038I Pass  15: suminf.    0.01613 (1) obj. -39.4893 iterations 3
Cbc0038I Pass  16: suminf.    0.01613 (1) obj. -39.4893 iterations 0
Cbc0038I Pass  17: suminf.    0.21395 (1) obj. -34.8998 iterations 2
Cbc0038I Pass  18: suminf.    0.01613 (1) obj. -39.4893 iterations 2
Cbc0038I Pass  19: suminf.    0.21395 (1) obj. -34.8998 iterations 2
Cbc0038I Pass  20: suminf.    0.75808 (3) obj. -34.8998 iterations 3
Cbc0038I Pass  21: suminf.    0.24171 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  22: suminf.    0.25813 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  23: suminf.    0.25813 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  24: suminf.    0.28667 (1) obj. -34.8998 iterations 2
Cbc0038I Pass  25: suminf.    0.04839 (1) obj. -45.1345 iterations 2
Cbc0038I Pass  26: suminf.    0.70535 (4) obj. -34.8998 iterations 5
Cbc0038I Pass  27: suminf.    0.30835 (2) obj. -34.8998 iterations 4
Cbc0038I Pass  28: suminf.    0.23454 (1) obj. -34.8998 iterations 4
Cbc0038I Pass  29: suminf.    0.20968 (1) obj. -65.4678 iterations 1
Cbc0038I Pass  30: suminf.    0.30645 (1) obj. -36.4785 iterations 2
Cbc0038I Pass  31: suminf.    0.30645 (1) obj. -36.4785 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 14 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -29.6667 - took 0.01 seconds
Cbc0012I Integer solution of -29.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 14 columns, reduced to 7 rows 7 columns
Cbc0012I Integer solution of -39.00007 found by DiveCoefficient after 876 iterations and 0 nodes (0.07 seconds)
Cbc0031I 9 added rows had average density of 10.222222
Cbc0013I At root node, 9 cuts changed objective from -81.996318 to -42.251784 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 430 row cuts average 5.0 elements, 2 column cuts (2 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 411 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -39.6667 found by rounding after 888 iterations and 1 nodes (0.07 seconds)
Cbc0001I Search completed - best objective -39.66670000000002, took 897 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 18 times (138 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 27 (-36) rows, 30 (-31) columns and 150 (-463) elements
Clp1000I sum of infeasibilities 1.65423e-08 - average 6.12678e-10, 3 fixed columns
Coin0506I Presolve 18 (-9) rows, 20 (-10) columns and 94 (-56) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 6.5296782 - largest nonzero change 1.7716443e-05 ( 0.0012247315%) - largest zero change 1.1170802e-05
Clp0000I Optimal - objective value 144.08704
Clp0000I Optimal - objective value 144.08704
Coin0511I After Postsolve, objective 144.08704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 144.08704
Clp0000I Optimal - objective value 144.08704
Clp0000I Optimal - objective value 144.08704
Coin0511I After Postsolve, objective 144.08704, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.0870431 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 37 columns (37 integer (37 of which binary)) and 222 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.027%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.98197
Cbc0038I Pass   1: suminf.    0.33333 (2) obj. 9.66667 iterations 12
Cbc0038I Pass   2: suminf.    0.33333 (2) obj. 9.66667 iterations 0
Cbc0038I Solution found of 13
Cbc0038I Rounding solution of 2.66667 is better than previous of 13

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 37 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 2.66667 to -15.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -24.6021
Cbc0038I Pass   3: suminf.    1.82436 (9) obj. -24.6021 iterations 1
Cbc0038I Pass   4: suminf.    1.82436 (9) obj. -24.6021 iterations 0
Cbc0038I Pass   5: suminf.    0.28824 (1) obj. -24.6021 iterations 14
Cbc0038I Pass   6: suminf.    0.28824 (1) obj. -24.6021 iterations 0
Cbc0038I Pass   7: suminf.    0.38462 (1) obj. -34.7436 iterations 1
Cbc0038I Pass   8: suminf.    2.38059 (6) obj. -38.2839 iterations 9
Cbc0038I Pass   9: suminf.    1.08394 (3) obj. -24.6021 iterations 6
Cbc0038I Pass  10: suminf.    0.46154 (1) obj. -28.6411 iterations 3
Cbc0038I Pass  11: suminf.    0.33125 (1) obj. -24.6021 iterations 1
Cbc0038I Pass  12: suminf.    2.35252 (7) obj. -24.6021 iterations 6
Cbc0038I Pass  13: suminf.    1.00329 (3) obj. -24.6021 iterations 4
Cbc0038I Pass  14: suminf.    2.76171 (10) obj. -24.6021 iterations 7
Cbc0038I Pass  15: suminf.    1.61154 (4) obj. -29.459 iterations 4
Cbc0038I Pass  16: suminf.    0.58092 (5) obj. -24.6021 iterations 5
Cbc0038I Pass  17: suminf.    0.58092 (5) obj. -24.6021 iterations 0
Cbc0038I Pass  18: suminf.    0.11290 (1) obj. -46.457 iterations 6
Cbc0038I Pass  19: suminf.    0.48973 (1) obj. -24.6021 iterations 1
Cbc0038I Pass  20: suminf.    1.07080 (3) obj. -24.6021 iterations 4
Cbc0038I Pass  21: suminf.    0.39883 (1) obj. -24.6021 iterations 3
Cbc0038I Pass  22: suminf.    0.11290 (1) obj. -51.457 iterations 1
Cbc0038I Pass  23: suminf.    2.07238 (5) obj. -24.6021 iterations 12
Cbc0038I Pass  24: suminf.    1.50215 (4) obj. -29.8345 iterations 3
Cbc0038I Pass  25: suminf.    0.14944 (2) obj. -24.6021 iterations 5
Cbc0038I Pass  26: suminf.    0.14944 (2) obj. -24.6021 iterations 0
Cbc0038I Pass  27: suminf.    0.74574 (2) obj. -24.6021 iterations 2
Cbc0038I Pass  28: suminf.    3.53203 (11) obj. -24.6021 iterations 12
Cbc0038I Pass  29: suminf.    3.06499 (8) obj. -24.6021 iterations 3
Cbc0038I Pass  30: suminf.    2.76397 (7) obj. -24.6021 iterations 1
Cbc0038I Pass  31: suminf.    0.50000 (2) obj. -39.5667 iterations 7
Cbc0038I Pass  32: suminf.    0.04839 (1) obj. -30.0054 iterations 1
Cbc0038I Rounding solution of -29.6667 is better than previous of -15.6667

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 37 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -29.6667 to -39.0001 (0.02 seconds)
Cbc0038I Round again with cutoff of -52.2041
Cbc0038I Pass  32: suminf.    2.39664 (9) obj. -52.2041 iterations 1
Cbc0038I Pass  33: suminf.    2.32740 (10) obj. -52.2041 iterations 2
Cbc0038I Pass  34: suminf.    1.31392 (5) obj. -52.2041 iterations 15
Cbc0038I Pass  35: suminf.    1.31392 (5) obj. -52.2041 iterations 0
Cbc0038I Pass  36: suminf.    0.08065 (1) obj. -58.2312 iterations 6
Cbc0038I Pass  37: suminf.    0.19023 (1) obj. -52.2041 iterations 1
Cbc0038I Pass  38: suminf.    3.04561 (12) obj. -52.2041 iterations 16
Cbc0038I Pass  39: suminf.    0.89105 (6) obj. -52.2041 iterations 7
Cbc0038I Pass  40: suminf.    1.18636 (4) obj. -52.2041 iterations 6
Cbc0038I Pass  41: suminf.    1.16759 (5) obj. -52.2041 iterations 1
Cbc0038I Pass  42: suminf.    1.09745 (4) obj. -65.6517 iterations 2
Cbc0038I Pass  43: suminf.    0.33871 (1) obj. -54.371 iterations 3
Cbc0038I Pass  44: suminf.    0.37811 (1) obj. -52.2041 iterations 1
Cbc0038I Pass  45: suminf.    1.80076 (9) obj. -52.2041 iterations 12
Cbc0038I Pass  46: suminf.    1.33755 (7) obj. -52.2041 iterations 4
Cbc0038I Pass  47: suminf.    1.19853 (4) obj. -65.3136 iterations 4
Cbc0038I Pass  48: suminf.    0.40323 (1) obj. -53.4893 iterations 3
Cbc0038I Pass  49: suminf.    0.42659 (1) obj. -52.2041 iterations 1
Cbc0038I Pass  50: suminf.    0.97725 (3) obj. -52.2041 iterations 5
Cbc0038I Pass  51: suminf.    0.65323 (2) obj. -61.4248 iterations 2
Cbc0038I Pass  52: suminf.    0.42659 (1) obj. -52.2041 iterations 2
Cbc0038I Pass  53: suminf.    0.30645 (1) obj. -58.8119 iterations 1
Cbc0038I Pass  54: suminf.    1.40643 (5) obj. -52.2041 iterations 7
Cbc0038I Pass  55: suminf.    0.52965 (2) obj. -52.2041 iterations 3
Cbc0038I Pass  56: suminf.    0.67372 (2) obj. -52.2041 iterations 1
Cbc0038I Pass  57: suminf.    2.00785 (6) obj. -52.2041 iterations 5
Cbc0038I Pass  58: suminf.    0.60484 (2) obj. -55.2205 iterations 4
Cbc0038I Pass  59: suminf.    0.22053 (1) obj. -52.2041 iterations 2
Cbc0038I Pass  60: suminf.    0.20968 (1) obj. -52.8011 iterations 1
Cbc0038I Pass  61: suminf.    1.68942 (5) obj. -52.2041 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 37 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -39.0001 to -39.6667 (0.03 seconds)
Cbc0038I Round again with cutoff of -68.0487
Cbc0038I Pass  61: suminf.    3.79306 (13) obj. -68.0487 iterations 1
Cbc0038I Pass  62: suminf.    3.14808 (11) obj. -68.0487 iterations 2
Cbc0038I Pass  63: suminf.    3.10585 (12) obj. -68.0487 iterations 2
Cbc0038I Pass  64: suminf.    1.73183 (5) obj. -68.0487 iterations 15
Cbc0038I Pass  65: suminf.    1.73183 (5) obj. -68.0487 iterations 0
Cbc0038I Pass  66: suminf.    0.54436 (2) obj. -68.0487 iterations 4
Cbc0038I Pass  67: suminf.    0.54436 (2) obj. -68.0487 iterations 0
Cbc0038I Pass  68: suminf.    0.66657 (2) obj. -68.0487 iterations 1
Cbc0038I Pass  69: suminf.    2.57722 (7) obj. -68.0487 iterations 7
Cbc0038I Pass  70: suminf.    0.94025 (3) obj. -68.0487 iterations 5
Cbc0038I Pass  71: suminf.    0.70179 (2) obj. -68.0487 iterations 2
Cbc0038I Pass  72: suminf.    0.62668 (2) obj. -68.0487 iterations 1
Cbc0038I Pass  73: suminf.    2.28911 (7) obj. -68.0487 iterations 8
Cbc0038I Pass  74: suminf.    1.09312 (4) obj. -68.0487 iterations 7
Cbc0038I Pass  75: suminf.    1.24108 (4) obj. -68.0487 iterations 1
Cbc0038I Pass  76: suminf.    1.09312 (4) obj. -68.0487 iterations 1
Cbc0038I Pass  77: suminf.    1.87290 (6) obj. -68.0487 iterations 9
Cbc0038I Pass  78: suminf.    1.02090 (3) obj. -68.0487 iterations 4
Cbc0038I Pass  79: suminf.    1.06991 (3) obj. -68.0487 iterations 1
Cbc0038I Pass  80: suminf.    1.88517 (6) obj. -68.0487 iterations 7
Cbc0038I Pass  81: suminf.    1.00473 (3) obj. -68.0487 iterations 3
Cbc0038I Pass  82: suminf.    1.00932 (3) obj. -68.0487 iterations 1
Cbc0038I Pass  83: suminf.    4.27282 (12) obj. -68.0487 iterations 13
Cbc0038I Pass  84: suminf.    2.00123 (6) obj. -68.0487 iterations 7
Cbc0038I Pass  85: suminf.    0.87547 (3) obj. -68.0487 iterations 5
Cbc0038I Pass  86: suminf.    0.87547 (3) obj. -68.0487 iterations 0
Cbc0038I Pass  87: suminf.    0.93519 (3) obj. -68.0487 iterations 1
Cbc0038I Pass  88: suminf.    2.29196 (7) obj. -68.0487 iterations 7
Cbc0038I Pass  89: suminf.    1.74387 (6) obj. -68.0487 iterations 2
Cbc0038I Pass  90: suminf.    0.96534 (3) obj. -68.0487 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 37 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.6667 - took 0.03 seconds
Cbc0012I Integer solution of -39.6667 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 35 rows 37 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 3.625
Cbc0013I At root node, 8 cuts changed objective from -105.0196 to -54.595851 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 74 row cuts average 2.2 elements, 17 column cuts (17 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.66670000000002, took 30 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.07

