Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 72 (-6) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 1.24045e-05 - average 9.61587e-08, 16 fixed columns
Coin0506I Presolve 98 (-31) rows, 55 (-17) columns and 298 (-96) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.9253512 - largest nonzero change 0 ( 0%) - largest zero change 2.9753801e-05
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Coin0511I After Postsolve, objective 57.761799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Coin0511I After Postsolve, objective 57.761799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.76179912 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 72 columns (71 integer (71 of which binary)) and 440 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.155%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.75574
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.11422 iterations 37
Cbc0038I Solution found of -7.11422
Cbc0038I Relaxing continuous gives -7.11422
Cbc0038I Rounding solution of -18.6055 is better than previous of -7.11422

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -18.6055 to -32.2205 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.7231
Cbc0038I Pass   2: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass   3: suminf.    0.45942 (3) obj. -34.7231 iterations 4
Cbc0038I Pass   4: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass   5: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass   6: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass   7: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass   8: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass   9: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  10: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  11: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  12: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  13: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  14: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  15: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  16: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  17: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  18: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  19: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  20: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  21: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  22: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  23: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  24: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  25: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  26: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  27: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  28: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  29: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  30: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  31: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 51 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -32.2205 to -33.242 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.2276
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.43427 (4) obj. -39.2276 iterations 0
Cbc0038I Pass  32: suminf.    1.06821 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  33: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  34: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  35: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  36: suminf.    2.48375 (10) obj. -39.2276 iterations 16
Cbc0038I Pass  37: suminf.    1.50303 (6) obj. -39.2276 iterations 12
Cbc0038I Pass  38: suminf.    1.46780 (6) obj. -39.2276 iterations 3
Cbc0038I Pass  39: suminf.    1.56773 (5) obj. -39.2276 iterations 11
Cbc0038I Pass  40: suminf.    1.06821 (4) obj. -39.2276 iterations 4
Cbc0038I Pass  41: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  42: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  43: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  44: suminf.    2.22308 (7) obj. -39.2276 iterations 15
Cbc0038I Pass  45: suminf.    1.76736 (6) obj. -39.2276 iterations 10
Cbc0038I Pass  46: suminf.    2.23432 (7) obj. -39.2276 iterations 10
Cbc0038I Pass  47: suminf.    1.43427 (4) obj. -39.2276 iterations 4
Cbc0038I Pass  48: suminf.    1.06821 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  49: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  50: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  51: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  52: suminf.    1.92703 (9) obj. -39.2276 iterations 21
Cbc0038I Pass  53: suminf.    0.77875 (3) obj. -39.2276 iterations 15
Cbc0038I Pass  54: suminf.    0.75116 (3) obj. -39.2276 iterations 1
Cbc0038I Pass  55: suminf.    0.51007 (2) obj. -39.2276 iterations 1
Cbc0038I Pass  56: suminf.    0.43668 (2) obj. -39.2276 iterations 2
Cbc0038I Pass  57: suminf.    1.18254 (4) obj. -39.2276 iterations 13
Cbc0038I Pass  58: suminf.    0.95797 (3) obj. -39.2276 iterations 5
Cbc0038I Pass  59: suminf.    0.88068 (2) obj. -39.2276 iterations 5
Cbc0038I Pass  60: suminf.    0.74787 (3) obj. -39.2276 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -33.242 - took 0.05 seconds
Cbc0012I Integer solution of -33.24196 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 72 columns, reduced to 51 rows 29 columns
Cbc0031I 24 added rows had average density of 31.666667
Cbc0013I At root node, 24 cuts changed objective from -57.245755 to -48.210969 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5280 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1105 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 53.6 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.24196, took 5832 iterations and 28 nodes (0.62 seconds)
Cbc0032I Strong branching done 420 times (7295 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 13, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 121 (-31) columns and 2190 (-1113) elements
Clp1000I sum of infeasibilities 2.13389e-07 - average 1.97583e-09, 44 fixed columns
Coin0506I Presolve 67 (-41) rows, 77 (-44) columns and 852 (-1338) elements
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 1.8640033 - largest nonzero change 0 ( 0%) - largest zero change 2.5736794e-05
Clp0000I Optimal - objective value 192.93112
Clp0000I Optimal - objective value 192.93112
Coin0511I After Postsolve, objective 192.93112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8698001 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 192.93112
Clp0000I Optimal - objective value 192.93112
Clp0000I Optimal - objective value 192.93112
Coin0511I After Postsolve, objective 192.93112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 192.9311182 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 121 columns (121 integer (121 of which binary)) and 2224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.251%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.45811
Cbc0038I Pass   1: suminf.    1.58399 (34) obj. -108.773 iterations 12
Cbc0038I Pass   2: suminf.    1.58399 (34) obj. -108.773 iterations 0
Cbc0038I Pass   3: suminf.    0.89492 (22) obj. -90.8814 iterations 12
Cbc0038I Solution found of -66.9024
Cbc0038I Rounding solution of -78.3937 is better than previous of -66.9024

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 121 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -78.3937 to -130.902 (0.04 seconds)
Cbc0038I Round again with cutoff of -134.486
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.51143 (38) obj. -134.486 iterations 3
Cbc0038I Pass   5: suminf.    2.51143 (38) obj. -134.486 iterations 0
Cbc0038I Pass   6: suminf.    3.79236 (21) obj. -134.486 iterations 20
Cbc0038I Pass   7: suminf.    3.79236 (21) obj. -134.486 iterations 0
Cbc0038I Pass   8: suminf.    0.56466 (3) obj. -134.486 iterations 31
Cbc0038I Pass   9: suminf.    0.31975 (2) obj. -134.486 iterations 3
Cbc0038I Pass  10: suminf.    0.48427 (2) obj. -134.486 iterations 2
Cbc0038I Pass  11: suminf.    1.79082 (9) obj. -134.486 iterations 13
Cbc0038I Pass  12: suminf.    1.78308 (8) obj. -134.486 iterations 3
Cbc0038I Pass  13: suminf.    0.51721 (3) obj. -134.486 iterations 11
Cbc0038I Pass  14: suminf.    2.83490 (11) obj. -134.486 iterations 25
Cbc0038I Pass  15: suminf.    2.39853 (10) obj. -134.486 iterations 7
Cbc0038I Pass  16: suminf.    0.43641 (4) obj. -134.486 iterations 16
Cbc0038I Pass  17: suminf.    0.43641 (4) obj. -134.486 iterations 0
Cbc0038I Pass  18: suminf.    0.70591 (3) obj. -134.486 iterations 5
Cbc0038I Pass  19: suminf.    0.58361 (3) obj. -134.486 iterations 2
Cbc0038I Pass  20: suminf.    0.83078 (3) obj. -134.486 iterations 7
Cbc0038I Pass  21: suminf.    1.85878 (10) obj. -134.486 iterations 20
Cbc0038I Pass  22: suminf.    1.70064 (8) obj. -134.486 iterations 11
Cbc0038I Pass  23: suminf.    0.43641 (4) obj. -134.486 iterations 14
Cbc0038I Pass  24: suminf.    0.43641 (4) obj. -134.486 iterations 0
Cbc0038I Pass  25: suminf.    0.70591 (3) obj. -134.486 iterations 5
Cbc0038I Pass  26: suminf.    0.58361 (3) obj. -134.486 iterations 2
Cbc0038I Pass  27: suminf.    0.83078 (3) obj. -134.486 iterations 7
Cbc0038I Pass  28: suminf.    2.30525 (16) obj. -134.486 iterations 23
Cbc0038I Pass  29: suminf.    2.24742 (10) obj. -134.486 iterations 15
Cbc0038I Pass  30: suminf.    0.76144 (4) obj. -134.486 iterations 19
Cbc0038I Pass  31: suminf.    0.71924 (5) obj. -134.486 iterations 6
Cbc0038I Pass  32: suminf.    0.72650 (3) obj. -134.486 iterations 9
Cbc0038I Pass  33: suminf.    0.62304 (3) obj. -134.486 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 121 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -130.902 - took 0.02 seconds
Cbc0012I Integer solution of -130.90244 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 35 added rows had average density of 10.6
Cbc0013I At root node, 339 cuts changed objective from -161.94753 to -130.90244 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 184 row cuts average 8.5 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 15 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -130.90244, took 5 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 72 (-6) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 1.24045e-05 - average 9.61587e-08, 16 fixed columns
Coin0506I Presolve 98 (-31) rows, 55 (-17) columns and 298 (-96) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.9253512 - largest nonzero change 0 ( 0%) - largest zero change 2.9753801e-05
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Coin0511I After Postsolve, objective 57.761799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Clp0000I Optimal - objective value 57.761799
Coin0511I After Postsolve, objective 57.761799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.76179912 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 72 columns (71 integer (71 of which binary)) and 440 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.155%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.75574
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.11422 iterations 37
Cbc0038I Solution found of -7.11422
Cbc0038I Relaxing continuous gives -7.11422
Cbc0038I Rounding solution of -18.6055 is better than previous of -7.11422

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -18.6055 to -32.2205 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.7231
Cbc0038I Pass   2: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass   3: suminf.    0.45942 (3) obj. -34.7231 iterations 4
Cbc0038I Pass   4: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass   5: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass   6: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass   7: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass   8: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass   9: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  10: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  11: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  12: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  13: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  14: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  15: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  16: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  17: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  18: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  19: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  20: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  21: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  22: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  23: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  24: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  25: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I Pass  26: suminf.    0.46577 (3) obj. -34.7231 iterations 3
Cbc0038I Pass  27: suminf.    0.45942 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  28: suminf.    1.11706 (3) obj. -34.7231 iterations 4
Cbc0038I Pass  29: suminf.    0.80793 (2) obj. -34.7231 iterations 2
Cbc0038I Pass  30: suminf.    0.59038 (3) obj. -34.7231 iterations 2
Cbc0038I Pass  31: suminf.    1.17547 (4) obj. -34.7231 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 51 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -32.2205 to -33.242 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.2276
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.43427 (4) obj. -39.2276 iterations 0
Cbc0038I Pass  32: suminf.    1.06821 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  33: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  34: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  35: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  36: suminf.    2.48375 (10) obj. -39.2276 iterations 16
Cbc0038I Pass  37: suminf.    1.50303 (6) obj. -39.2276 iterations 12
Cbc0038I Pass  38: suminf.    1.46780 (6) obj. -39.2276 iterations 3
Cbc0038I Pass  39: suminf.    1.56773 (5) obj. -39.2276 iterations 11
Cbc0038I Pass  40: suminf.    1.06821 (4) obj. -39.2276 iterations 4
Cbc0038I Pass  41: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  42: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  43: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  44: suminf.    2.22308 (7) obj. -39.2276 iterations 15
Cbc0038I Pass  45: suminf.    1.76736 (6) obj. -39.2276 iterations 10
Cbc0038I Pass  46: suminf.    2.23432 (7) obj. -39.2276 iterations 10
Cbc0038I Pass  47: suminf.    1.43427 (4) obj. -39.2276 iterations 4
Cbc0038I Pass  48: suminf.    1.06821 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  49: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  50: suminf.    0.93991 (4) obj. -39.2276 iterations 3
Cbc0038I Pass  51: suminf.    1.43427 (4) obj. -39.2276 iterations 8
Cbc0038I Pass  52: suminf.    1.92703 (9) obj. -39.2276 iterations 21
Cbc0038I Pass  53: suminf.    0.77875 (3) obj. -39.2276 iterations 15
Cbc0038I Pass  54: suminf.    0.75116 (3) obj. -39.2276 iterations 1
Cbc0038I Pass  55: suminf.    0.51007 (2) obj. -39.2276 iterations 1
Cbc0038I Pass  56: suminf.    0.43668 (2) obj. -39.2276 iterations 2
Cbc0038I Pass  57: suminf.    1.18254 (4) obj. -39.2276 iterations 13
Cbc0038I Pass  58: suminf.    0.95797 (3) obj. -39.2276 iterations 5
Cbc0038I Pass  59: suminf.    0.88068 (2) obj. -39.2276 iterations 5
Cbc0038I Pass  60: suminf.    0.74787 (3) obj. -39.2276 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 72 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -33.242 - took 0.04 seconds
Cbc0012I Integer solution of -33.24196 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 72 columns, reduced to 51 rows 29 columns
Cbc0031I 24 added rows had average density of 31.666667
Cbc0013I At root node, 24 cuts changed objective from -57.245755 to -48.210969 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5280 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1105 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 53.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.24196, took 5832 iterations and 28 nodes (0.63 seconds)
Cbc0032I Strong branching done 420 times (7295 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 13, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 118 (-35) columns and 2070 (-1234) elements
Clp1000I sum of infeasibilities 2.20297e-07 - average 2.09806e-09, 23 fixed columns
Coin0506I Presolve 84 (-21) rows, 95 (-23) columns and 1425 (-645) elements
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 2.2073602 - largest nonzero change 1.1481537e-05 ( 0.00076683715%) - largest zero change 2.9946613e-05
Clp0000I Optimal - objective value 71.571967
Clp0000I Optimal - objective value 71.571967
Coin0511I After Postsolve, objective 71.571967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.571967
Clp0000I Optimal - objective value 71.571967
Clp0000I Optimal - objective value 71.571967
Coin0511I After Postsolve, objective 71.571967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.57196697 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 118 columns (118 integer (118 of which binary)) and 2101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 1.00325
Cbc0038I Pass   1: suminf.    1.00325 (24) obj. -55.609 iterations 12
Cbc0038I Pass   2: suminf.    0.25267 (11) obj. -24.4474 iterations 13
Cbc0038I Pass   3: suminf.    0.01852 (1) obj. -12.7306 iterations 10
Cbc0038I Solution found of -11.7492
Cbc0038I Rounding solution of -17.488 is better than previous of -11.7492

Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -21.3002
Cbc0038I Pass   4: suminf.    1.00325 (24) obj. -55.609 iterations 0
Cbc0038I Pass   5: suminf.    0.27190 (12) obj. -25.4282 iterations 12
Cbc0038I Pass   6: suminf.    0.47484 (1) obj. -21.3002 iterations 16
Cbc0038I Pass   7: suminf.    0.16000 (1) obj. -28.6452 iterations 1
Cbc0038I Pass   8: suminf.    1.03461 (7) obj. -21.3002 iterations 13
Cbc0038I Pass   9: suminf.    0.32835 (6) obj. -24.4555 iterations 2
Cbc0038I Pass  10: suminf.    0.62899 (2) obj. -21.3002 iterations 13
Cbc0038I Pass  11: suminf.    0.16000 (1) obj. -23.6452 iterations 2
Cbc0038I Pass  12: suminf.    0.27658 (1) obj. -21.3002 iterations 3
Cbc0038I Pass  13: suminf.    1.69998 (8) obj. -21.3002 iterations 34
Cbc0038I Pass  14: suminf.    0.96043 (7) obj. -21.3002 iterations 11
Cbc0038I Pass  15: suminf.    0.49092 (8) obj. -21.3002 iterations 1
Cbc0038I Pass  16: suminf.    0.17715 (1) obj. -21.3002 iterations 11
Cbc0038I Pass  17: suminf.    0.16000 (1) obj. -21.6452 iterations 1
Cbc0038I Pass  18: suminf.    0.69515 (6) obj. -21.3002 iterations 14
Cbc0038I Pass  19: suminf.    0.69515 (6) obj. -21.3002 iterations 3
Cbc0038I Pass  20: suminf.    0.16000 (1) obj. -22.6452 iterations 7
Cbc0038I Pass  21: suminf.    0.22687 (1) obj. -21.3002 iterations 5
Cbc0038I Pass  22: suminf.    1.44992 (18) obj. -21.3002 iterations 23
Cbc0038I Pass  23: suminf.    1.44992 (18) obj. -21.3002 iterations 3
Cbc0038I Pass  24: suminf.    0.33248 (4) obj. -21.3002 iterations 29
Cbc0038I Pass  25: suminf.    0.26868 (4) obj. -21.4278 iterations 6
Cbc0038I Pass  26: suminf.    0.33248 (4) obj. -21.3002 iterations 10
Cbc0038I Pass  27: suminf.    1.45824 (7) obj. -21.3002 iterations 14
Cbc0038I Pass  28: suminf.    0.30681 (5) obj. -23.4327 iterations 6
Cbc0038I Pass  29: suminf.    0.33248 (3) obj. -21.3002 iterations 19
Cbc0038I Pass  30: suminf.    0.24741 (3) obj. -21.4704 iterations 7
Cbc0038I Pass  31: suminf.    0.64511 (10) obj. -22.1583 iterations 17
Cbc0038I Pass  32: suminf.    0.29299 (8) obj. -21.3002 iterations 11
Cbc0038I Pass  33: suminf.    0.57358 (3) obj. -21.3002 iterations 11
Cbc0038I Rounding solution of -26.984 is better than previous of -17.488

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 45 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -26.984 to -31.6071 (0.06 seconds)
Cbc0038I Round again with cutoff of -36.4075
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.00325 (24) obj. -55.609 iterations 0
Cbc0038I Pass  34: suminf.    0.82854 (14) obj. -36.4075 iterations 13
Cbc0038I Pass  35: suminf.    0.31410 (6) obj. -36.4075 iterations 20
Cbc0038I Pass  36: suminf.    0.31410 (6) obj. -36.4075 iterations 1
Cbc0038I Pass  37: suminf.    0.37148 (6) obj. -36.4075 iterations 3
Cbc0038I Pass  38: suminf.    0.37148 (6) obj. -36.4075 iterations 3
Cbc0038I Pass  39: suminf.    0.31410 (6) obj. -36.4075 iterations 5
Cbc0038I Pass  40: suminf.    0.45911 (9) obj. -36.4075 iterations 15
Cbc0038I Pass  41: suminf.    0.45911 (9) obj. -36.4075 iterations 4
Cbc0038I Pass  42: suminf.    0.50114 (7) obj. -36.4075 iterations 19
Cbc0038I Pass  43: suminf.    0.50114 (7) obj. -36.4075 iterations 3
Cbc0038I Pass  44: suminf.    0.80748 (7) obj. -36.4075 iterations 4
Cbc0038I Pass  45: suminf.    0.41024 (7) obj. -37.202 iterations 3
Cbc0038I Pass  46: suminf.    0.50114 (7) obj. -36.4075 iterations 12
Cbc0038I Pass  47: suminf.    2.67454 (30) obj. -36.4075 iterations 16
Cbc0038I Pass  48: suminf.    0.64510 (10) obj. -36.4075 iterations 3
Cbc0038I Pass  49: suminf.    0.64510 (10) obj. -36.4075 iterations 3
Cbc0038I Pass  50: suminf.    0.66983 (9) obj. -36.4075 iterations 10
Cbc0038I Pass  51: suminf.    0.66983 (9) obj. -36.4075 iterations 4
Cbc0038I Pass  52: suminf.    0.61577 (8) obj. -36.4075 iterations 11
Cbc0038I Pass  53: suminf.    0.61577 (8) obj. -36.4075 iterations 5
Cbc0038I Pass  54: suminf.    0.55520 (8) obj. -36.4075 iterations 11
Cbc0038I Pass  55: suminf.    0.55520 (8) obj. -36.4075 iterations 4
Cbc0038I Pass  56: suminf.    0.61577 (8) obj. -36.4075 iterations 7
Cbc0038I Pass  57: suminf.    0.66594 (11) obj. -36.4075 iterations 20
Cbc0038I Pass  58: suminf.    0.66594 (11) obj. -36.4075 iterations 6
Cbc0038I Pass  59: suminf.    0.66983 (9) obj. -36.4075 iterations 21
Cbc0038I Pass  60: suminf.    0.66983 (9) obj. -36.4075 iterations 5
Cbc0038I Pass  61: suminf.    0.66022 (9) obj. -36.4075 iterations 10
Cbc0038I Pass  62: suminf.    0.66022 (9) obj. -36.4075 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -31.6071 - took 0.04 seconds
Cbc0012I Integer solution of -31.60706 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 0 rows 0 columns
Cbc0031I 56 added rows had average density of 13.660714
Cbc0013I At root node, 56 cuts changed objective from -55.608987 to -36.553564 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 3168 row cuts average 8.8 elements, 7 column cuts (7 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 43.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 132 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 80 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 58.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 107 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.60706 best solution, best possible -36.553564 (0.73 seconds)
Cbc0012I Integer solution of -32.22047 found by rounding after 745 iterations and 1 nodes (0.73 seconds)
Cbc0012I Integer solution of -32.24196 found by DiveCoefficient after 1409 iterations and 8 nodes (1.34 seconds)
Cbc0004I Integer solution of -33.24196 found after 1500 iterations and 9 nodes (1.37 seconds)
Cbc0001I Search completed - best objective -33.24196, took 1538 iterations and 10 nodes (1.37 seconds)
Cbc0032I Strong branching done 296 times (7395 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.39

