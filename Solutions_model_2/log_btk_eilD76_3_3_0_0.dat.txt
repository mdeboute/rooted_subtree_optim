Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 73 (-5) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 5.24373e-06 - average 3.97252e-08, 7 fixed columns
Coin0506I Presolve 119 (-13) rows, 66 (-7) columns and 362 (-40) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Coin0511I After Postsolve, objective 64.939546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Coin0511I After Postsolve, objective 64.939546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.93954639 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 73 columns (72 integer (72 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.211%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.0018
Cbc0038I Solution found of 1.9976
Cbc0038I Relaxing continuous gives -9.10079
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 85 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -9.10079 to -32.3028 (0.06 seconds)
Cbc0038I Round again with cutoff of -35.5666
Cbc0038I Pass   1: suminf.    4.03245 (23) obj. -35.5666 iterations 51
Cbc0038I Pass   2: suminf.    3.42421 (14) obj. -35.5666 iterations 18
Cbc0038I Pass   3: suminf.    2.28431 (7) obj. -35.5666 iterations 15
Cbc0038I Pass   4: suminf.    1.54482 (6) obj. -35.5666 iterations 2
Cbc0038I Pass   5: suminf.    2.59985 (10) obj. -35.5666 iterations 11
Cbc0038I Pass   6: suminf.    1.83482 (7) obj. -35.5666 iterations 10
Cbc0038I Pass   7: suminf.    1.37564 (6) obj. -35.5666 iterations 2
Cbc0038I Pass   8: suminf.    1.07792 (5) obj. -35.5666 iterations 2
Cbc0038I Pass   9: suminf.    2.01800 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  10: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  11: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  12: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  13: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  14: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  15: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  16: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  17: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  18: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  19: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  20: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  21: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  22: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  23: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  24: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  25: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  26: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  27: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  28: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  29: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  30: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -32.3028 to -32.414 (0.13 seconds)
Cbc0038I Round again with cutoff of -41.4412
Cbc0038I Pass  30: suminf.    4.70556 (23) obj. -41.4412 iterations 0
Cbc0038I Pass  31: suminf.    4.21363 (15) obj. -41.4412 iterations 18
Cbc0038I Pass  32: suminf.    3.25076 (8) obj. -41.4412 iterations 20
Cbc0038I Pass  33: suminf.    2.46498 (8) obj. -41.4412 iterations 6
Cbc0038I Pass  34: suminf.    1.78307 (6) obj. -41.4412 iterations 7
Cbc0038I Pass  35: suminf.    1.78507 (6) obj. -41.4412 iterations 1
Cbc0038I Pass  36: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  37: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  38: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  39: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  40: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  41: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  42: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  43: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  44: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  45: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  46: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  47: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  48: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  49: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  50: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  51: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  52: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  53: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  54: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  55: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  56: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  57: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  58: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  59: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -32.414 - took 0.16 seconds
Cbc0012I Integer solution of -32.414 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 132 rows 73 columns, reduced to 85 rows 49 columns
Cbc0012I Integer solution of -33.67226 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 30 added rows had average density of 47.7
Cbc0013I At root node, 30 cuts changed objective from -64.939546 to -56.207527 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16148 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2601 row cuts average 63.7 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 55.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.67226 best solution, best possible -56.207527 (1.26 seconds)
Cbc0012I Integer solution of -35.36622 found by rounding after 10439 iterations and 15 nodes (1.48 seconds)
Cbc0038I Full problem 132 rows 73 columns, reduced to 57 rows 33 columns
Cbc0012I Integer solution of -35.55401 found by RINS after 11246 iterations and 41 nodes (1.67 seconds)
Cbc0001I Search completed - best objective -35.55401000000001, took 12672 iterations and 86 nodes (1.75 seconds)
Cbc0032I Strong branching done 942 times (18368 iterations), fathomed 3 nodes and fixed 29 variables
Cbc0035I Maximum depth 26, 139 variables fixed on reduced cost
Total time (CPU seconds):       1.70   (Wallclock seconds):       1.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 114 (-38) columns and 1764 (-1539) elements
Clp1000I sum of infeasibilities 6.94356e-08 - average 6.80741e-10, 60 fixed columns
Coin0506I Presolve 44 (-58) rows, 54 (-60) columns and 190 (-1574) elements
Clp0006I 0  Obj 1.2613039 Dual inf 1.2539058 (54)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 3.279493 - largest nonzero change 1.1051294e-05 ( 0.00032330279%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2.3992525
Clp0000I Optimal - objective value 2.3992525
Coin0511I After Postsolve, objective 2.3992525, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2.3992525 Dual inf 40.335378 (42)
Clp0014I Perturbing problem by 0.001% of 2.0540536 - largest nonzero change 2.151379e-05 ( 0.0012247315%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 74.364139
Clp0000I Optimal - objective value 74.364139
Clp0000I Optimal - objective value 74.364139
Coin0511I After Postsolve, objective 74.364139, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.36413896 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 114 columns (114 integer (114 of which binary)) and 1766 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.267%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 6.90867
Cbc0038I Pass   1: suminf.    2.31890 (22) obj. -66.0028 iterations 34
Cbc0038I Pass   2: suminf.    1.71297 (20) obj. -62.1909 iterations 4
Cbc0038I Pass   3: suminf.    0.38891 (9) obj. -35.973 iterations 11
Cbc0038I Solution found of -24.521
Cbc0038I Rounding solution of -24.8047 is better than previous of -24.521

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -24.8047 to -30.4957 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.2566
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.31890 (22) obj. -66.0028 iterations 0
Cbc0038I Pass   5: suminf.    1.71297 (20) obj. -62.1909 iterations 3
Cbc0038I Pass   6: suminf.    0.47982 (10) obj. -36.8821 iterations 10
Cbc0038I Pass   7: suminf.    0.71288 (4) obj. -34.2566 iterations 20
Cbc0038I Pass   8: suminf.    0.71288 (4) obj. -34.2566 iterations 0
Cbc0038I Pass   9: suminf.    0.96415 (5) obj. -34.2566 iterations 3
Cbc0038I Pass  10: suminf.    0.96415 (5) obj. -34.2566 iterations 0
Cbc0038I Pass  11: suminf.    0.45258 (3) obj. -34.2566 iterations 9
Cbc0038I Pass  12: suminf.    0.44098 (3) obj. -34.2566 iterations 2
Cbc0038I Pass  13: suminf.    0.53225 (3) obj. -34.2566 iterations 2
Cbc0038I Pass  14: suminf.    0.53225 (3) obj. -34.2566 iterations 0
Cbc0038I Pass  15: suminf.    0.44098 (3) obj. -34.2566 iterations 3
Cbc0038I Pass  16: suminf.    1.58976 (10) obj. -34.2566 iterations 28
Cbc0038I Pass  17: suminf.    1.28344 (9) obj. -34.2566 iterations 6
Cbc0038I Pass  18: suminf.    1.28344 (9) obj. -34.2566 iterations 1
Cbc0038I Pass  19: suminf.    1.13660 (6) obj. -34.2566 iterations 12
Cbc0038I Pass  20: suminf.    1.13660 (6) obj. -34.2566 iterations 4
Cbc0038I Pass  21: suminf.    0.87988 (5) obj. -34.2566 iterations 6
Cbc0038I Pass  22: suminf.    0.87988 (5) obj. -34.2566 iterations 3
Cbc0038I Pass  23: suminf.    1.21304 (5) obj. -34.2566 iterations 2
Cbc0038I Pass  24: suminf.    1.21304 (5) obj. -34.2566 iterations 1
Cbc0038I Pass  25: suminf.    0.87988 (5) obj. -34.2566 iterations 5
Cbc0038I Pass  26: suminf.    1.74796 (12) obj. -35.2221 iterations 36
Cbc0038I Pass  27: suminf.    1.52200 (11) obj. -34.2691 iterations 7
Cbc0038I Pass  28: suminf.    1.57624 (9) obj. -34.2566 iterations 18
Cbc0038I Pass  29: suminf.    1.33985 (8) obj. -34.2566 iterations 7
Cbc0038I Pass  30: suminf.    1.25689 (18) obj. -34.2566 iterations 16
Cbc0038I Pass  31: suminf.    0.79017 (7) obj. -34.2566 iterations 17
Cbc0038I Pass  32: suminf.    1.06243 (7) obj. -34.2566 iterations 6
Cbc0038I Pass  33: suminf.    1.87159 (14) obj. -34.2566 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 55 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -30.4957 to -35.554 (0.05 seconds)
Cbc0038I Round again with cutoff of -42.064
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.31890 (22) obj. -66.0028 iterations 0
Cbc0038I Pass  34: suminf.    1.71297 (20) obj. -62.1909 iterations 3
Cbc0038I Pass  35: suminf.    0.81018 (5) obj. -42.064 iterations 26
Cbc0038I Pass  36: suminf.    0.79953 (6) obj. -42.064 iterations 2
Cbc0038I Pass  37: suminf.    1.07390 (6) obj. -42.064 iterations 4
Cbc0038I Pass  38: suminf.    1.00485 (6) obj. -42.4093 iterations 2
Cbc0038I Pass  39: suminf.    0.59186 (5) obj. -42.064 iterations 19
Cbc0038I Pass  40: suminf.    0.59186 (5) obj. -42.064 iterations 3
Cbc0038I Pass  41: suminf.    0.89734 (5) obj. -42.064 iterations 2
Cbc0038I Pass  42: suminf.    0.89734 (5) obj. -42.064 iterations 1
Cbc0038I Pass  43: suminf.    0.59186 (5) obj. -42.064 iterations 5
Cbc0038I Pass  44: suminf.    1.59648 (13) obj. -42.064 iterations 37
Cbc0038I Pass  45: suminf.    1.36191 (13) obj. -42.064 iterations 8
Cbc0038I Pass  46: suminf.    1.41098 (11) obj. -42.064 iterations 15
Cbc0038I Pass  47: suminf.    1.09706 (10) obj. -42.064 iterations 1
Cbc0038I Pass  48: suminf.    1.41098 (10) obj. -42.064 iterations 2
Cbc0038I Pass  49: suminf.    2.36164 (13) obj. -42.064 iterations 16
Cbc0038I Pass  50: suminf.    1.43495 (12) obj. -42.064 iterations 4
Cbc0038I Pass  51: suminf.    1.28314 (11) obj. -42.2791 iterations 6
Cbc0038I Pass  52: suminf.    1.39066 (11) obj. -42.064 iterations 8
Cbc0038I Pass  53: suminf.    3.20472 (21) obj. -42.064 iterations 29
Cbc0038I Pass  54: suminf.    3.20472 (21) obj. -42.064 iterations 0
Cbc0038I Pass  55: suminf.    1.68569 (14) obj. -42.064 iterations 18
Cbc0038I Pass  56: suminf.    1.68569 (14) obj. -42.064 iterations 1
Cbc0038I Pass  57: suminf.    2.01861 (13) obj. -42.064 iterations 9
Cbc0038I Pass  58: suminf.    1.99935 (14) obj. -42.064 iterations 7
Cbc0038I Pass  59: suminf.    1.59549 (13) obj. -42.064 iterations 13
Cbc0038I Pass  60: suminf.    1.59071 (13) obj. -42.0736 iterations 3
Cbc0038I Pass  61: suminf.    1.79686 (16) obj. -42.064 iterations 9
Cbc0038I Pass  62: suminf.    1.75679 (16) obj. -42.064 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -35.554 - took 0.06 seconds
Cbc0012I Integer solution of -35.55401 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 28 rows 31 columns
Cbc0031I 72 added rows had average density of 29.208333
Cbc0013I At root node, 72 cuts changed objective from -68.103584 to -40.736221 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15664 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2053 row cuts average 104.9 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 294 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1296 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 56.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 261 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.644 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.55401 best solution, best possible -40.736221 (2.59 seconds)
Cbc0010I After 5 nodes, 3 on tree, -35.55401 best solution, best possible -40.736221 (3.38 seconds)
Cbc0010I After 19 nodes, 2 on tree, -35.55401 best solution, best possible -40.728358 (4.31 seconds)
Cbc0010I After 31 nodes, 6 on tree, -35.55401 best solution, best possible -40.624129 (5.07 seconds)
Cbc0001I Search completed - best objective -35.55401000000001, took 8067 iterations and 38 nodes (5.21 seconds)
Cbc0032I Strong branching done 730 times (10056 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 9, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.88   (Wallclock seconds):       5.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 73 (-5) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 5.24373e-06 - average 3.97252e-08, 7 fixed columns
Coin0506I Presolve 119 (-13) rows, 66 (-7) columns and 362 (-40) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Coin0511I After Postsolve, objective 64.939546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Clp0000I Optimal - objective value 64.939546
Coin0511I After Postsolve, objective 64.939546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.93954639 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 73 columns (72 integer (72 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.211%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.0018
Cbc0038I Solution found of 1.9976
Cbc0038I Relaxing continuous gives -9.10079
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 85 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -9.10079 to -32.3028 (0.07 seconds)
Cbc0038I Round again with cutoff of -35.5666
Cbc0038I Pass   1: suminf.    4.03245 (23) obj. -35.5666 iterations 51
Cbc0038I Pass   2: suminf.    3.42421 (14) obj. -35.5666 iterations 18
Cbc0038I Pass   3: suminf.    2.28431 (7) obj. -35.5666 iterations 15
Cbc0038I Pass   4: suminf.    1.54482 (6) obj. -35.5666 iterations 2
Cbc0038I Pass   5: suminf.    2.59985 (10) obj. -35.5666 iterations 11
Cbc0038I Pass   6: suminf.    1.83482 (7) obj. -35.5666 iterations 10
Cbc0038I Pass   7: suminf.    1.37564 (6) obj. -35.5666 iterations 2
Cbc0038I Pass   8: suminf.    1.07792 (5) obj. -35.5666 iterations 2
Cbc0038I Pass   9: suminf.    2.01800 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  10: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  11: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  12: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  13: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  14: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  15: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  16: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  17: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  18: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  19: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  20: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  21: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  22: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  23: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  24: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  25: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I Pass  26: suminf.    1.87642 (5) obj. -35.5666 iterations 5
Cbc0038I Pass  27: suminf.    1.58432 (6) obj. -35.5666 iterations 1
Cbc0038I Pass  28: suminf.    1.56011 (5) obj. -35.5666 iterations 1
Cbc0038I Pass  29: suminf.    2.01800 (5) obj. -35.5666 iterations 3
Cbc0038I Pass  30: suminf.    1.80504 (5) obj. -35.5666 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -32.3028 to -32.414 (0.13 seconds)
Cbc0038I Round again with cutoff of -41.4412
Cbc0038I Pass  30: suminf.    4.70556 (23) obj. -41.4412 iterations 0
Cbc0038I Pass  31: suminf.    4.21363 (15) obj. -41.4412 iterations 18
Cbc0038I Pass  32: suminf.    3.25076 (8) obj. -41.4412 iterations 20
Cbc0038I Pass  33: suminf.    2.46498 (8) obj. -41.4412 iterations 6
Cbc0038I Pass  34: suminf.    1.78307 (6) obj. -41.4412 iterations 7
Cbc0038I Pass  35: suminf.    1.78507 (6) obj. -41.4412 iterations 1
Cbc0038I Pass  36: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  37: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  38: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  39: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  40: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  41: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  42: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  43: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  44: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  45: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  46: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  47: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  48: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  49: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  50: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  51: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  52: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  53: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  54: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I Pass  55: suminf.    1.78507 (6) obj. -41.4412 iterations 4
Cbc0038I Pass  56: suminf.    2.14589 (6) obj. -41.4412 iterations 5
Cbc0038I Pass  57: suminf.    1.76961 (6) obj. -41.4412 iterations 3
Cbc0038I Pass  58: suminf.    2.29843 (7) obj. -41.4412 iterations 3
Cbc0038I Pass  59: suminf.    2.06388 (6) obj. -41.4412 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 73 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -32.414 - took 0.16 seconds
Cbc0012I Integer solution of -32.414 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 132 rows 73 columns, reduced to 85 rows 49 columns
Cbc0012I Integer solution of -33.67226 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 30 added rows had average density of 47.7
Cbc0013I At root node, 30 cuts changed objective from -64.939546 to -56.207527 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16148 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2601 row cuts average 63.7 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 55.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.67226 best solution, best possible -56.207527 (1.26 seconds)
Cbc0012I Integer solution of -35.36622 found by rounding after 10439 iterations and 15 nodes (1.48 seconds)
Cbc0038I Full problem 132 rows 73 columns, reduced to 57 rows 33 columns
Cbc0012I Integer solution of -35.55401 found by RINS after 11246 iterations and 41 nodes (1.67 seconds)
Cbc0001I Search completed - best objective -35.55401000000001, took 12672 iterations and 86 nodes (1.75 seconds)
Cbc0032I Strong branching done 942 times (18368 iterations), fathomed 3 nodes and fixed 29 variables
Cbc0035I Maximum depth 26, 139 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       1.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 114 (-39) columns and 1764 (-1540) elements
Clp1000I sum of infeasibilities 6.94356e-08 - average 6.80741e-10, 60 fixed columns
Coin0506I Presolve 44 (-58) rows, 54 (-60) columns and 190 (-1574) elements
Clp0006I 0  Obj 1.2613039 Dual inf 1.2539058 (54)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 3.279493 - largest nonzero change 1.1051294e-05 ( 0.00032330279%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2.3992525
Clp0000I Optimal - objective value 2.3992525
Coin0511I After Postsolve, objective 2.3992525, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2.3992525 Dual inf 40.335378 (42)
Clp0014I Perturbing problem by 0.001% of 2.0540536 - largest nonzero change 2.151379e-05 ( 0.0012247315%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 74.364139
Clp0000I Optimal - objective value 74.364139
Clp0000I Optimal - objective value 74.364139
Coin0511I After Postsolve, objective 74.364139, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.36413896 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 114 columns (114 integer (114 of which binary)) and 1766 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.267%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 6.90867
Cbc0038I Pass   1: suminf.    2.31890 (22) obj. -66.0028 iterations 34
Cbc0038I Pass   2: suminf.    1.71297 (20) obj. -62.1909 iterations 4
Cbc0038I Pass   3: suminf.    0.38891 (9) obj. -35.973 iterations 11
Cbc0038I Solution found of -24.521
Cbc0038I Rounding solution of -24.8047 is better than previous of -24.521

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -24.8047 to -30.4957 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.2566
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.31890 (22) obj. -66.0028 iterations 0
Cbc0038I Pass   5: suminf.    1.71297 (20) obj. -62.1909 iterations 3
Cbc0038I Pass   6: suminf.    0.47982 (10) obj. -36.8821 iterations 10
Cbc0038I Pass   7: suminf.    0.71288 (4) obj. -34.2566 iterations 20
Cbc0038I Pass   8: suminf.    0.71288 (4) obj. -34.2566 iterations 0
Cbc0038I Pass   9: suminf.    0.96415 (5) obj. -34.2566 iterations 3
Cbc0038I Pass  10: suminf.    0.96415 (5) obj. -34.2566 iterations 0
Cbc0038I Pass  11: suminf.    0.45258 (3) obj. -34.2566 iterations 9
Cbc0038I Pass  12: suminf.    0.44098 (3) obj. -34.2566 iterations 2
Cbc0038I Pass  13: suminf.    0.53225 (3) obj. -34.2566 iterations 2
Cbc0038I Pass  14: suminf.    0.53225 (3) obj. -34.2566 iterations 0
Cbc0038I Pass  15: suminf.    0.44098 (3) obj. -34.2566 iterations 3
Cbc0038I Pass  16: suminf.    1.58976 (10) obj. -34.2566 iterations 28
Cbc0038I Pass  17: suminf.    1.28344 (9) obj. -34.2566 iterations 6
Cbc0038I Pass  18: suminf.    1.28344 (9) obj. -34.2566 iterations 1
Cbc0038I Pass  19: suminf.    1.13660 (6) obj. -34.2566 iterations 12
Cbc0038I Pass  20: suminf.    1.13660 (6) obj. -34.2566 iterations 4
Cbc0038I Pass  21: suminf.    0.87988 (5) obj. -34.2566 iterations 6
Cbc0038I Pass  22: suminf.    0.87988 (5) obj. -34.2566 iterations 3
Cbc0038I Pass  23: suminf.    1.21304 (5) obj. -34.2566 iterations 2
Cbc0038I Pass  24: suminf.    1.21304 (5) obj. -34.2566 iterations 1
Cbc0038I Pass  25: suminf.    0.87988 (5) obj. -34.2566 iterations 5
Cbc0038I Pass  26: suminf.    1.74796 (12) obj. -35.2221 iterations 36
Cbc0038I Pass  27: suminf.    1.52200 (11) obj. -34.2691 iterations 7
Cbc0038I Pass  28: suminf.    1.57624 (9) obj. -34.2566 iterations 18
Cbc0038I Pass  29: suminf.    1.33985 (8) obj. -34.2566 iterations 7
Cbc0038I Pass  30: suminf.    1.25689 (18) obj. -34.2566 iterations 16
Cbc0038I Pass  31: suminf.    0.79017 (7) obj. -34.2566 iterations 17
Cbc0038I Pass  32: suminf.    1.06243 (7) obj. -34.2566 iterations 6
Cbc0038I Pass  33: suminf.    1.87159 (14) obj. -34.2566 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 55 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -30.4957 to -35.554 (0.05 seconds)
Cbc0038I Round again with cutoff of -42.064
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.31890 (22) obj. -66.0028 iterations 0
Cbc0038I Pass  34: suminf.    1.71297 (20) obj. -62.1909 iterations 3
Cbc0038I Pass  35: suminf.    0.81018 (5) obj. -42.064 iterations 26
Cbc0038I Pass  36: suminf.    0.79953 (6) obj. -42.064 iterations 2
Cbc0038I Pass  37: suminf.    1.07390 (6) obj. -42.064 iterations 4
Cbc0038I Pass  38: suminf.    1.00485 (6) obj. -42.4093 iterations 2
Cbc0038I Pass  39: suminf.    0.59186 (5) obj. -42.064 iterations 19
Cbc0038I Pass  40: suminf.    0.59186 (5) obj. -42.064 iterations 3
Cbc0038I Pass  41: suminf.    0.89734 (5) obj. -42.064 iterations 2
Cbc0038I Pass  42: suminf.    0.89734 (5) obj. -42.064 iterations 1
Cbc0038I Pass  43: suminf.    0.59186 (5) obj. -42.064 iterations 5
Cbc0038I Pass  44: suminf.    1.59648 (13) obj. -42.064 iterations 37
Cbc0038I Pass  45: suminf.    1.36191 (13) obj. -42.064 iterations 8
Cbc0038I Pass  46: suminf.    1.41098 (11) obj. -42.064 iterations 15
Cbc0038I Pass  47: suminf.    1.09706 (10) obj. -42.064 iterations 1
Cbc0038I Pass  48: suminf.    1.41098 (10) obj. -42.064 iterations 2
Cbc0038I Pass  49: suminf.    2.36164 (13) obj. -42.064 iterations 16
Cbc0038I Pass  50: suminf.    1.43495 (12) obj. -42.064 iterations 4
Cbc0038I Pass  51: suminf.    1.28314 (11) obj. -42.2791 iterations 6
Cbc0038I Pass  52: suminf.    1.39066 (11) obj. -42.064 iterations 8
Cbc0038I Pass  53: suminf.    3.20472 (21) obj. -42.064 iterations 29
Cbc0038I Pass  54: suminf.    3.20472 (21) obj. -42.064 iterations 0
Cbc0038I Pass  55: suminf.    1.68569 (14) obj. -42.064 iterations 18
Cbc0038I Pass  56: suminf.    1.68569 (14) obj. -42.064 iterations 1
Cbc0038I Pass  57: suminf.    2.01861 (13) obj. -42.064 iterations 9
Cbc0038I Pass  58: suminf.    1.99935 (14) obj. -42.064 iterations 7
Cbc0038I Pass  59: suminf.    1.59549 (13) obj. -42.064 iterations 13
Cbc0038I Pass  60: suminf.    1.59071 (13) obj. -42.0736 iterations 3
Cbc0038I Pass  61: suminf.    1.79686 (16) obj. -42.064 iterations 9
Cbc0038I Pass  62: suminf.    1.75679 (16) obj. -42.064 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -35.554 - took 0.06 seconds
Cbc0012I Integer solution of -35.55401 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 28 rows 31 columns
Cbc0031I 72 added rows had average density of 29.208333
Cbc0013I At root node, 72 cuts changed objective from -68.103584 to -40.736221 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15664 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2053 row cuts average 104.9 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 294 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1296 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 56.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 261 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.55401 best solution, best possible -40.736221 (2.62 seconds)
Cbc0010I After 5 nodes, 3 on tree, -35.55401 best solution, best possible -40.736221 (3.41 seconds)
Cbc0010I After 19 nodes, 2 on tree, -35.55401 best solution, best possible -40.728358 (4.32 seconds)
Cbc0010I After 30 nodes, 5 on tree, -35.55401 best solution, best possible -40.624129 (5.02 seconds)
Cbc0001I Search completed - best objective -35.55401000000001, took 8067 iterations and 38 nodes (5.23 seconds)
Cbc0032I Strong branching done 730 times (10056 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 9, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.91   (Wallclock seconds):       5.25

