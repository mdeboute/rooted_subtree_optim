Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 101 (-2) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 3.83591e-05 - average 2.155e-07, 13 fixed columns
Coin0506I Presolve 153 (-25) rows, 87 (-14) columns and 472 (-78) elements
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.6084168 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 54.801846
Clp0000I Optimal - objective value 54.801846
Coin0511I After Postsolve, objective 54.801846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.801846
Clp0000I Optimal - objective value 54.801846
Clp0000I Optimal - objective value 54.801846
Coin0511I After Postsolve, objective 54.801846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.80184649 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 101 columns (100 integer (100 of which binary)) and 551 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.868%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.66355
Cbc0038I Solution found of 2.52566
Cbc0038I Relaxing continuous gives -4.3295
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 72 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.3295 to -27.5171 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.2457
Cbc0038I Pass   1: suminf.    3.18957 (27) obj. -30.2457 iterations 51
Cbc0038I Pass   2: suminf.    2.12742 (8) obj. -30.2457 iterations 35
Cbc0038I Pass   3: suminf.    2.02193 (7) obj. -30.2457 iterations 2
Cbc0038I Pass   4: suminf.    2.52867 (7) obj. -30.2457 iterations 24
Cbc0038I Pass   5: suminf.    1.25884 (5) obj. -30.2457 iterations 5
Cbc0038I Pass   6: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I Pass   7: suminf.    1.63669 (6) obj. -30.2457 iterations 1
Cbc0038I Pass   8: suminf.    1.57763 (5) obj. -30.2457 iterations 1
Cbc0038I Pass   9: suminf.    1.90602 (6) obj. -30.2457 iterations 7
Cbc0038I Pass  10: suminf.    1.72740 (4) obj. -30.2457 iterations 5
Cbc0038I Pass  11: suminf.    1.58440 (4) obj. -30.2457 iterations 4
Cbc0038I Pass  12: suminf.    1.70613 (6) obj. -30.2457 iterations 9
Cbc0038I Pass  13: suminf.    1.25884 (5) obj. -30.2457 iterations 3
Cbc0038I Pass  14: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I Pass  15: suminf.    1.63669 (6) obj. -30.2457 iterations 1
Cbc0038I Pass  16: suminf.    1.57763 (5) obj. -30.2457 iterations 1
Cbc0038I Pass  17: suminf.    1.90602 (6) obj. -30.2457 iterations 7
Cbc0038I Pass  18: suminf.    1.72740 (4) obj. -30.2457 iterations 5
Cbc0038I Pass  19: suminf.    1.58440 (4) obj. -30.2457 iterations 4
Cbc0038I Pass  20: suminf.    1.70613 (6) obj. -30.2457 iterations 9
Cbc0038I Pass  21: suminf.    1.25884 (5) obj. -30.2457 iterations 3
Cbc0038I Pass  22: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I Pass  23: suminf.    1.63669 (6) obj. -30.2457 iterations 1
Cbc0038I Pass  24: suminf.    1.57763 (5) obj. -30.2457 iterations 1
Cbc0038I Pass  25: suminf.    1.90602 (6) obj. -30.2457 iterations 7
Cbc0038I Pass  26: suminf.    1.72740 (4) obj. -30.2457 iterations 5
Cbc0038I Pass  27: suminf.    1.58440 (4) obj. -30.2457 iterations 4
Cbc0038I Pass  28: suminf.    1.70613 (6) obj. -30.2457 iterations 9
Cbc0038I Pass  29: suminf.    1.25884 (5) obj. -30.2457 iterations 3
Cbc0038I Pass  30: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 86 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -27.5171 - took 0.08 seconds
Cbc0012I Integer solution of -27.51711 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 72 rows 45 columns
Cbc0031I 26 added rows had average density of 82.192308
Cbc0013I At root node, 26 cuts changed objective from -54.801846 to -47.895512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13262 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1770 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.51711 best solution, best possible -47.895512 (1.06 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 8 rows 11 columns
Cbc0012I Integer solution of -27.68713 found by RINS after 9195 iterations and 41 nodes (1.30 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 12 rows 12 columns
Cbc0012I Integer solution of -27.8006 found by rounding after 11406 iterations and 109 nodes (1.45 seconds)
Cbc0001I Search completed - best objective -27.8006, took 12107 iterations and 140 nodes (1.52 seconds)
Cbc0032I Strong branching done 1248 times (19190 iterations), fathomed 15 nodes and fixed 59 variables
Cbc0035I Maximum depth 30, 599 variables fixed on reduced cost
Total time (CPU seconds):       1.49   (Wallclock seconds):       1.54

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-88) rows, 138 (-64) columns and 2227 (-3426) elements
Clp1000I sum of infeasibilities 1.18582e-07 - average 1.02225e-09, 37 fixed columns
Coin0506I Presolve 83 (-33) rows, 101 (-37) columns and 1436 (-791) elements
Clp0006I 0  Obj 54.682087 Dual inf 10.70757 (101)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.8370772 - largest nonzero change 1.5834752e-05 ( 0.0014083952%) - largest zero change 2.9452763e-05
Clp0000I Optimal - objective value 62.542324
Clp0000I Optimal - objective value 62.542324
Coin0511I After Postsolve, objective 62.542324, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.542324
Clp0000I Optimal - objective value 62.542324
Clp0000I Optimal - objective value 62.542324
Clp0000I Optimal - objective value 62.542324
Coin0511I After Postsolve, objective 62.542324, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.5423243 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 139 columns (139 integer (139 of which binary)) and 2235 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.307%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 2.93246
Cbc0038I Pass   1: suminf.    2.54752 (27) obj. -57.302 iterations 16
Cbc0038I Pass   2: suminf.    1.95321 (26) obj. -51.4048 iterations 3
Cbc0038I Solution found of -4.05659
Cbc0038I Rounding solution of -11.1028 is better than previous of -4.05659

Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 139 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -16.0624
Cbc0038I Pass   3: suminf.    2.54752 (27) obj. -57.302 iterations 0
Cbc0038I Pass   4: suminf.    1.95321 (26) obj. -51.4048 iterations 5
Cbc0038I Pass   5: suminf.    0.68656 (11) obj. -16.0624 iterations 16
Cbc0038I Pass   6: suminf.    0.08000 (1) obj. -20.6166 iterations 11
Cbc0038I Pass   7: suminf.    0.65465 (2) obj. -16.0624 iterations 2
Cbc0038I Pass   8: suminf.    0.51767 (2) obj. -28.5607 iterations 1
Cbc0038I Pass   9: suminf.    1.28054 (11) obj. -16.0624 iterations 41
Cbc0038I Pass  10: suminf.    0.54941 (7) obj. -16.5474 iterations 14
Cbc0038I Pass  11: suminf.    0.72402 (3) obj. -16.0624 iterations 12
Cbc0038I Pass  12: suminf.    0.72402 (3) obj. -16.0624 iterations 0
Cbc0038I Pass  13: suminf.    0.46791 (2) obj. -16.0624 iterations 7
Cbc0038I Pass  14: suminf.    0.10000 (1) obj. -16.5994 iterations 3
Cbc0038I Pass  15: suminf.    0.46791 (2) obj. -16.0624 iterations 2
Cbc0038I Pass  16: suminf.    2.96808 (13) obj. -16.0624 iterations 29
Cbc0038I Pass  17: suminf.    2.49157 (12) obj. -17.4595 iterations 10
Cbc0038I Pass  18: suminf.    1.03055 (4) obj. -16.0624 iterations 25
Cbc0038I Pass  19: suminf.    1.03055 (4) obj. -16.0624 iterations 1
Cbc0038I Pass  20: suminf.    0.83270 (4) obj. -16.0624 iterations 8
Cbc0038I Pass  21: suminf.    0.59114 (4) obj. -16.0624 iterations 3
Cbc0038I Pass  22: suminf.    0.97453 (3) obj. -16.0624 iterations 9
Cbc0038I Pass  23: suminf.    0.83543 (3) obj. -17.3437 iterations 5
Cbc0038I Pass  24: suminf.    0.46006 (2) obj. -16.0624 iterations 8
Cbc0038I Pass  25: suminf.    0.25604 (3) obj. -20.653 iterations 2
Cbc0038I Pass  26: suminf.    0.22293 (4) obj. -16.0624 iterations 11
Cbc0038I Pass  27: suminf.    0.22293 (4) obj. -16.0624 iterations 0
Cbc0038I Pass  28: suminf.    0.89407 (4) obj. -16.0624 iterations 10
Cbc0038I Pass  29: suminf.    0.39600 (3) obj. -20.1388 iterations 5
Cbc0038I Pass  30: suminf.    0.76619 (7) obj. -16.0624 iterations 24
Cbc0038I Pass  31: suminf.    0.72023 (7) obj. -16.0624 iterations 8
Cbc0038I Pass  32: suminf.    0.68703 (4) obj. -16.0624 iterations 20
Cbc0038I Rounding solution of -21.8559 is better than previous of -11.1028

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 139 columns, reduced to 29 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -21.8559 to -23.0453 (0.07 seconds)
Cbc0038I Round again with cutoff of -30.5759
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.54752 (27) obj. -57.302 iterations 0
Cbc0038I Pass  33: suminf.    1.95321 (26) obj. -51.4048 iterations 5
Cbc0038I Pass  34: suminf.    0.65481 (11) obj. -30.5759 iterations 17
Cbc0038I Pass  35: suminf.    0.65481 (11) obj. -30.5759 iterations 0
Cbc0038I Pass  36: suminf.    0.85921 (4) obj. -30.5759 iterations 12
Cbc0038I Pass  37: suminf.    0.85921 (4) obj. -30.5759 iterations 0
Cbc0038I Pass  38: suminf.    0.33274 (3) obj. -30.5759 iterations 14
Cbc0038I Pass  39: suminf.    0.08000 (1) obj. -33.5859 iterations 6
Cbc0038I Pass  40: suminf.    0.24722 (1) obj. -30.5759 iterations 1
Cbc0038I Pass  41: suminf.    1.31337 (6) obj. -30.5759 iterations 18
Cbc0038I Pass  42: suminf.    1.31337 (6) obj. -30.5759 iterations 4
Cbc0038I Pass  43: suminf.    1.07711 (5) obj. -30.5759 iterations 15
Cbc0038I Pass  44: suminf.    0.74569 (3) obj. -30.5759 iterations 5
Cbc0038I Pass  45: suminf.    0.07011 (3) obj. -30.5759 iterations 9
Cbc0038I Pass  46: suminf.    0.07011 (3) obj. -30.5759 iterations 0
Cbc0038I Pass  47: suminf.    0.07011 (3) obj. -30.5759 iterations 0
Cbc0038I Pass  48: suminf.    1.00071 (10) obj. -30.5759 iterations 34
Cbc0038I Pass  49: suminf.    1.00071 (10) obj. -30.5759 iterations 8
Cbc0038I Pass  50: suminf.    0.54058 (4) obj. -30.5759 iterations 23
Cbc0038I Pass  51: suminf.    0.54058 (4) obj. -30.5759 iterations 1
Cbc0038I Pass  52: suminf.    0.92726 (5) obj. -30.5759 iterations 5
Cbc0038I Pass  53: suminf.    1.55366 (12) obj. -30.5759 iterations 31
Cbc0038I Pass  54: suminf.    1.46193 (11) obj. -30.5759 iterations 9
Cbc0038I Pass  55: suminf.    0.82601 (8) obj. -30.5759 iterations 30
Cbc0038I Pass  56: suminf.    0.82601 (8) obj. -30.5759 iterations 0
Cbc0038I Pass  57: suminf.    1.65331 (7) obj. -30.5759 iterations 8
Cbc0038I Pass  58: suminf.    1.26408 (7) obj. -30.5759 iterations 1
Cbc0038I Pass  59: suminf.    2.15411 (8) obj. -30.5759 iterations 22
Cbc0038I Pass  60: suminf.    1.39673 (6) obj. -30.5759 iterations 7
Cbc0038I Pass  61: suminf.    0.78797 (5) obj. -30.5759 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -23.0453 - took 0.06 seconds
Cbc0012I Integer solution of -23.04531 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 20 rows 25 columns
Cbc0031I 49 added rows had average density of 32.102041
Cbc0013I At root node, 49 cuts changed objective from -60.697972 to -31.586072 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8861 row cuts average 12.0 elements, 1 column cuts (1 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 975 row cuts average 128.4 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 467 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 704 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 267 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 223 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.648 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.04531 best solution, best possible -31.586072 (2.19 seconds)
Cbc0012I Integer solution of -23.38762 found by rounding after 3670 iterations and 3 nodes (2.58 seconds)
Cbc0010I After 7 nodes, 8 on tree, -23.38762 best solution, best possible -31.586072 (3.01 seconds)
Cbc0012I Integer solution of -25.50966 found by rounding after 4090 iterations and 10 nodes (3.09 seconds)
Cbc0012I Integer solution of -25.819817 found by rounding after 4142 iterations and 12 nodes (3.19 seconds)
Cbc0016I Integer solution of -25.98 found by strong branching after 4194 iterations and 14 nodes (3.26 seconds)
Cbc0012I Integer solution of -26.11058 found by rounding after 4501 iterations and 24 nodes (3.63 seconds)
Cbc0010I After 26 nodes, 14 on tree, -26.11058 best solution, best possible -31.586072 (3.72 seconds)
Cbc0012I Integer solution of -26.18421 found by rounding after 4806 iterations and 32 nodes (4.00 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 19 rows 27 columns
Cbc0012I Integer solution of -26.69456 found by RINS after 5249 iterations and 41 nodes (4.35 seconds)
Cbc0010I After 42 nodes, 18 on tree, -26.69456 best solution, best possible -31.586072 (4.42 seconds)
Cbc0010I After 59 nodes, 19 on tree, -26.69456 best solution, best possible -31.586072 (5.12 seconds)
Cbc0016I Integer solution of -27.68713 found by strong branching after 6729 iterations and 64 nodes (5.35 seconds)
Cbc0016I Integer solution of -27.8006 found by strong branching after 7137 iterations and 70 nodes (5.54 seconds)
Cbc0010I After 77 nodes, 11 on tree, -27.8006 best solution, best possible -31.586072 (5.83 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 42 rows 56 columns
Cbc0010I After 92 nodes, 3 on tree, -27.8006 best solution, best possible -31.586072 (6.71 seconds)
Cbc0001I Search completed - best objective -27.8006, took 8781 iterations and 96 nodes (6.73 seconds)
Cbc0032I Strong branching done 1140 times (17857 iterations), fathomed 16 nodes and fixed 11 variables
Cbc0035I Maximum depth 20, 445 variables fixed on reduced cost
Total time (CPU seconds):       4.84   (Wallclock seconds):       6.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 101 (-2) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 3.83591e-05 - average 2.155e-07, 13 fixed columns
Coin0506I Presolve 153 (-25) rows, 87 (-14) columns and 472 (-78) elements
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.6084168 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 54.801846
Clp0000I Optimal - objective value 54.801846
Coin0511I After Postsolve, objective 54.801846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.801846
Clp0000I Optimal - objective value 54.801846
Clp0000I Optimal - objective value 54.801846
Coin0511I After Postsolve, objective 54.801846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.80184649 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 101 columns (100 integer (100 of which binary)) and 551 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.868%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.66355
Cbc0038I Solution found of 2.52566
Cbc0038I Relaxing continuous gives -4.3295
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 72 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.3295 to -27.5171 (0.05 seconds)
Cbc0038I Round again with cutoff of -30.2457
Cbc0038I Pass   1: suminf.    3.18957 (27) obj. -30.2457 iterations 51
Cbc0038I Pass   2: suminf.    2.12742 (8) obj. -30.2457 iterations 35
Cbc0038I Pass   3: suminf.    2.02193 (7) obj. -30.2457 iterations 2
Cbc0038I Pass   4: suminf.    2.52867 (7) obj. -30.2457 iterations 24
Cbc0038I Pass   5: suminf.    1.25884 (5) obj. -30.2457 iterations 5
Cbc0038I Pass   6: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I Pass   7: suminf.    1.63669 (6) obj. -30.2457 iterations 1
Cbc0038I Pass   8: suminf.    1.57763 (5) obj. -30.2457 iterations 1
Cbc0038I Pass   9: suminf.    1.90602 (6) obj. -30.2457 iterations 7
Cbc0038I Pass  10: suminf.    1.72740 (4) obj. -30.2457 iterations 5
Cbc0038I Pass  11: suminf.    1.58440 (4) obj. -30.2457 iterations 4
Cbc0038I Pass  12: suminf.    1.70613 (6) obj. -30.2457 iterations 9
Cbc0038I Pass  13: suminf.    1.25884 (5) obj. -30.2457 iterations 3
Cbc0038I Pass  14: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I Pass  15: suminf.    1.63669 (6) obj. -30.2457 iterations 1
Cbc0038I Pass  16: suminf.    1.57763 (5) obj. -30.2457 iterations 1
Cbc0038I Pass  17: suminf.    1.90602 (6) obj. -30.2457 iterations 7
Cbc0038I Pass  18: suminf.    1.72740 (4) obj. -30.2457 iterations 5
Cbc0038I Pass  19: suminf.    1.58440 (4) obj. -30.2457 iterations 4
Cbc0038I Pass  20: suminf.    1.70613 (6) obj. -30.2457 iterations 9
Cbc0038I Pass  21: suminf.    1.25884 (5) obj. -30.2457 iterations 3
Cbc0038I Pass  22: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I Pass  23: suminf.    1.63669 (6) obj. -30.2457 iterations 1
Cbc0038I Pass  24: suminf.    1.57763 (5) obj. -30.2457 iterations 1
Cbc0038I Pass  25: suminf.    1.90602 (6) obj. -30.2457 iterations 7
Cbc0038I Pass  26: suminf.    1.72740 (4) obj. -30.2457 iterations 5
Cbc0038I Pass  27: suminf.    1.58440 (4) obj. -30.2457 iterations 4
Cbc0038I Pass  28: suminf.    1.70613 (6) obj. -30.2457 iterations 9
Cbc0038I Pass  29: suminf.    1.25884 (5) obj. -30.2457 iterations 3
Cbc0038I Pass  30: suminf.    1.90795 (6) obj. -30.2457 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 101 columns, reduced to 86 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -27.5171 - took 0.09 seconds
Cbc0012I Integer solution of -27.51711 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 72 rows 45 columns
Cbc0031I 26 added rows had average density of 82.192308
Cbc0013I At root node, 26 cuts changed objective from -54.801846 to -47.895512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13262 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1770 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.51711 best solution, best possible -47.895512 (1.21 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 8 rows 11 columns
Cbc0012I Integer solution of -27.68713 found by RINS after 9195 iterations and 41 nodes (1.50 seconds)
Cbc0038I Full problem 178 rows 101 columns, reduced to 12 rows 12 columns
Cbc0012I Integer solution of -27.8006 found by rounding after 11406 iterations and 109 nodes (1.69 seconds)
Cbc0001I Search completed - best objective -27.8006, took 12107 iterations and 140 nodes (1.78 seconds)
Cbc0032I Strong branching done 1248 times (19190 iterations), fathomed 15 nodes and fixed 59 variables
Cbc0035I Maximum depth 30, 599 variables fixed on reduced cost
Total time (CPU seconds):       1.71   (Wallclock seconds):       1.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-89) rows, 138 (-65) columns and 2227 (-3427) elements
Clp1000I sum of infeasibilities 1.18582e-07 - average 1.02225e-09, 37 fixed columns
Coin0506I Presolve 83 (-33) rows, 101 (-37) columns and 1436 (-791) elements
Clp0006I 0  Obj 54.682087 Dual inf 10.70757 (101)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.8370772 - largest nonzero change 1.5834752e-05 ( 0.0014083952%) - largest zero change 2.9452763e-05
Clp0000I Optimal - objective value 62.542324
Clp0000I Optimal - objective value 62.542324
Coin0511I After Postsolve, objective 62.542324, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.542324
Clp0000I Optimal - objective value 62.542324
Clp0000I Optimal - objective value 62.542324
Clp0000I Optimal - objective value 62.542324
Coin0511I After Postsolve, objective 62.542324, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.5423243 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 139 columns (139 integer (139 of which binary)) and 2235 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.307%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 2.93246
Cbc0038I Pass   1: suminf.    2.54752 (27) obj. -57.302 iterations 16
Cbc0038I Pass   2: suminf.    1.95321 (26) obj. -51.4048 iterations 3
Cbc0038I Solution found of -4.05659
Cbc0038I Rounding solution of -11.1028 is better than previous of -4.05659

Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 139 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16.0624
Cbc0038I Pass   3: suminf.    2.54752 (27) obj. -57.302 iterations 0
Cbc0038I Pass   4: suminf.    1.95321 (26) obj. -51.4048 iterations 5
Cbc0038I Pass   5: suminf.    0.68656 (11) obj. -16.0624 iterations 16
Cbc0038I Pass   6: suminf.    0.08000 (1) obj. -20.6166 iterations 11
Cbc0038I Pass   7: suminf.    0.65465 (2) obj. -16.0624 iterations 2
Cbc0038I Pass   8: suminf.    0.51767 (2) obj. -28.5607 iterations 1
Cbc0038I Pass   9: suminf.    1.28054 (11) obj. -16.0624 iterations 41
Cbc0038I Pass  10: suminf.    0.54941 (7) obj. -16.5474 iterations 14
Cbc0038I Pass  11: suminf.    0.72402 (3) obj. -16.0624 iterations 12
Cbc0038I Pass  12: suminf.    0.72402 (3) obj. -16.0624 iterations 0
Cbc0038I Pass  13: suminf.    0.46791 (2) obj. -16.0624 iterations 7
Cbc0038I Pass  14: suminf.    0.10000 (1) obj. -16.5994 iterations 3
Cbc0038I Pass  15: suminf.    0.46791 (2) obj. -16.0624 iterations 2
Cbc0038I Pass  16: suminf.    2.96808 (13) obj. -16.0624 iterations 29
Cbc0038I Pass  17: suminf.    2.49157 (12) obj. -17.4595 iterations 10
Cbc0038I Pass  18: suminf.    1.03055 (4) obj. -16.0624 iterations 25
Cbc0038I Pass  19: suminf.    1.03055 (4) obj. -16.0624 iterations 1
Cbc0038I Pass  20: suminf.    0.83270 (4) obj. -16.0624 iterations 8
Cbc0038I Pass  21: suminf.    0.59114 (4) obj. -16.0624 iterations 3
Cbc0038I Pass  22: suminf.    0.97453 (3) obj. -16.0624 iterations 9
Cbc0038I Pass  23: suminf.    0.83543 (3) obj. -17.3437 iterations 5
Cbc0038I Pass  24: suminf.    0.46006 (2) obj. -16.0624 iterations 8
Cbc0038I Pass  25: suminf.    0.25604 (3) obj. -20.653 iterations 2
Cbc0038I Pass  26: suminf.    0.22293 (4) obj. -16.0624 iterations 11
Cbc0038I Pass  27: suminf.    0.22293 (4) obj. -16.0624 iterations 0
Cbc0038I Pass  28: suminf.    0.89407 (4) obj. -16.0624 iterations 10
Cbc0038I Pass  29: suminf.    0.39600 (3) obj. -20.1388 iterations 5
Cbc0038I Pass  30: suminf.    0.76619 (7) obj. -16.0624 iterations 24
Cbc0038I Pass  31: suminf.    0.72023 (7) obj. -16.0624 iterations 8
Cbc0038I Pass  32: suminf.    0.68703 (4) obj. -16.0624 iterations 20
Cbc0038I Rounding solution of -21.8559 is better than previous of -11.1028

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 139 columns, reduced to 29 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -21.8559 to -23.0453 (0.08 seconds)
Cbc0038I Round again with cutoff of -30.5759
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.54752 (27) obj. -57.302 iterations 0
Cbc0038I Pass  33: suminf.    1.95321 (26) obj. -51.4048 iterations 5
Cbc0038I Pass  34: suminf.    0.65481 (11) obj. -30.5759 iterations 17
Cbc0038I Pass  35: suminf.    0.65481 (11) obj. -30.5759 iterations 0
Cbc0038I Pass  36: suminf.    0.85921 (4) obj. -30.5759 iterations 12
Cbc0038I Pass  37: suminf.    0.85921 (4) obj. -30.5759 iterations 0
Cbc0038I Pass  38: suminf.    0.33274 (3) obj. -30.5759 iterations 14
Cbc0038I Pass  39: suminf.    0.08000 (1) obj. -33.5859 iterations 6
Cbc0038I Pass  40: suminf.    0.24722 (1) obj. -30.5759 iterations 1
Cbc0038I Pass  41: suminf.    1.31337 (6) obj. -30.5759 iterations 18
Cbc0038I Pass  42: suminf.    1.31337 (6) obj. -30.5759 iterations 4
Cbc0038I Pass  43: suminf.    1.07711 (5) obj. -30.5759 iterations 15
Cbc0038I Pass  44: suminf.    0.74569 (3) obj. -30.5759 iterations 5
Cbc0038I Pass  45: suminf.    0.07011 (3) obj. -30.5759 iterations 9
Cbc0038I Pass  46: suminf.    0.07011 (3) obj. -30.5759 iterations 0
Cbc0038I Pass  47: suminf.    0.07011 (3) obj. -30.5759 iterations 0
Cbc0038I Pass  48: suminf.    1.00071 (10) obj. -30.5759 iterations 34
Cbc0038I Pass  49: suminf.    1.00071 (10) obj. -30.5759 iterations 8
Cbc0038I Pass  50: suminf.    0.54058 (4) obj. -30.5759 iterations 23
Cbc0038I Pass  51: suminf.    0.54058 (4) obj. -30.5759 iterations 1
Cbc0038I Pass  52: suminf.    0.92726 (5) obj. -30.5759 iterations 5
Cbc0038I Pass  53: suminf.    1.55366 (12) obj. -30.5759 iterations 31
Cbc0038I Pass  54: suminf.    1.46193 (11) obj. -30.5759 iterations 9
Cbc0038I Pass  55: suminf.    0.82601 (8) obj. -30.5759 iterations 30
Cbc0038I Pass  56: suminf.    0.82601 (8) obj. -30.5759 iterations 0
Cbc0038I Pass  57: suminf.    1.65331 (7) obj. -30.5759 iterations 8
Cbc0038I Pass  58: suminf.    1.26408 (7) obj. -30.5759 iterations 1
Cbc0038I Pass  59: suminf.    2.15411 (8) obj. -30.5759 iterations 22
Cbc0038I Pass  60: suminf.    1.39673 (6) obj. -30.5759 iterations 7
Cbc0038I Pass  61: suminf.    0.78797 (5) obj. -30.5759 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -23.0453 - took 0.07 seconds
Cbc0012I Integer solution of -23.04531 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 20 rows 25 columns
Cbc0031I 49 added rows had average density of 32.102041
Cbc0013I At root node, 49 cuts changed objective from -60.697972 to -31.586072 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8861 row cuts average 12.0 elements, 1 column cuts (1 active)  in 0.178 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 975 row cuts average 128.4 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 467 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 704 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 267 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 223 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.04531 best solution, best possible -31.586072 (2.43 seconds)
Cbc0012I Integer solution of -23.38762 found by rounding after 3670 iterations and 3 nodes (2.86 seconds)
Cbc0010I After 5 nodes, 6 on tree, -23.38762 best solution, best possible -31.586072 (3.17 seconds)
Cbc0012I Integer solution of -25.50966 found by rounding after 4090 iterations and 10 nodes (3.49 seconds)
Cbc0012I Integer solution of -25.819817 found by rounding after 4142 iterations and 12 nodes (3.61 seconds)
Cbc0016I Integer solution of -25.98 found by strong branching after 4194 iterations and 14 nodes (3.71 seconds)
Cbc0010I After 20 nodes, 9 on tree, -25.98 best solution, best possible -31.586072 (3.94 seconds)
Cbc0012I Integer solution of -26.11058 found by rounding after 4501 iterations and 24 nodes (4.18 seconds)
Cbc0012I Integer solution of -26.18421 found by rounding after 4806 iterations and 32 nodes (4.63 seconds)
Cbc0010I After 33 nodes, 17 on tree, -26.18421 best solution, best possible -31.586072 (4.70 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 19 rows 27 columns
Cbc0012I Integer solution of -26.69456 found by RINS after 5249 iterations and 41 nodes (5.07 seconds)
Cbc0010I After 47 nodes, 18 on tree, -26.69456 best solution, best possible -31.586072 (5.41 seconds)
Cbc0010I After 60 nodes, 20 on tree, -26.69456 best solution, best possible -31.586072 (6.13 seconds)
Cbc0016I Integer solution of -27.68713 found by strong branching after 6729 iterations and 64 nodes (6.36 seconds)
Cbc0016I Integer solution of -27.8006 found by strong branching after 7137 iterations and 70 nodes (6.58 seconds)
Cbc0010I After 75 nodes, 11 on tree, -27.8006 best solution, best possible -31.586072 (6.88 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 42 rows 56 columns
Cbc0010I After 91 nodes, 2 on tree, -27.8006 best solution, best possible -31.586072 (7.84 seconds)
Cbc0001I Search completed - best objective -27.8006, took 8781 iterations and 96 nodes (8.08 seconds)
Cbc0032I Strong branching done 1140 times (17857 iterations), fathomed 16 nodes and fixed 11 variables
Cbc0035I Maximum depth 20, 445 variables fixed on reduced cost
Total time (CPU seconds):       5.72   (Wallclock seconds):       8.10

