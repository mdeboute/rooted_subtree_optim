Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 5.95228e-05 - average 4.37668e-07, 8 fixed columns
Coin0506I Presolve 120 (-16) rows, 68 (-8) columns and 368 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Coin0511I After Postsolve, objective 39.054354, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Coin0511I After Postsolve, objective 39.054354, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.05435383 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 11.2333
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.30841 iterations 57
Cbc0038I Solution found of 1.30841
Cbc0038I Relaxing continuous gives 1.30841
Cbc0038I Rounding solution of -3.04278 is better than previous of 1.30841

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -3.04278 to -11.7785 (0.05 seconds)
Cbc0038I Round again with cutoff of -14.5062
Cbc0038I Pass   2: suminf.    2.60656 (12) obj. -14.5062 iterations 15
Cbc0038I Pass   3: suminf.    1.43658 (5) obj. -14.5062 iterations 13
Cbc0038I Pass   4: suminf.    1.43658 (5) obj. -14.5062 iterations 1
Cbc0038I Pass   5: suminf.    1.12324 (4) obj. -14.5062 iterations 8
Cbc0038I Pass   6: suminf.    1.03322 (3) obj. -14.5062 iterations 1
Cbc0038I Pass   7: suminf.    0.88669 (3) obj. -14.5062 iterations 3
Cbc0038I Pass   8: suminf.    1.63606 (6) obj. -14.5062 iterations 7
Cbc0038I Pass   9: suminf.    1.58729 (5) obj. -14.5062 iterations 1
Cbc0038I Pass  10: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  11: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  12: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  13: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  14: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  15: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  16: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  17: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  18: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  19: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  20: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  21: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  22: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  23: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  24: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  25: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  26: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  27: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  28: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  29: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  30: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  31: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -11.7785 to -13.7913 (0.09 seconds)
Cbc0038I Round again with cutoff of -19.4158
Cbc0038I Pass  31: suminf.    3.56159 (13) obj. -19.4158 iterations 1
Cbc0038I Pass  32: suminf.    1.73845 (6) obj. -19.4158 iterations 14
Cbc0038I Pass  33: suminf.    1.73845 (6) obj. -19.4158 iterations 0
Cbc0038I Pass  34: suminf.    2.71798 (8) obj. -19.4158 iterations 11
Cbc0038I Pass  35: suminf.    1.83841 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  36: suminf.    1.73997 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  37: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  38: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  39: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  40: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  41: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  42: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  43: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  44: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  45: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  46: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  47: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  48: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  49: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  50: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  51: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  52: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  53: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  54: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  55: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  56: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  57: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  58: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  59: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  60: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -13.7913 - took 0.11 seconds
Cbc0012I Integer solution of -13.79135 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0031I 31 added rows had average density of 44.903226
Cbc0013I At root node, 31 cuts changed objective from -39.054354 to -31.263946 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17099 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2080 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.79135 best solution, best possible -31.263946 (1.21 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 67 rows 41 columns
Cbc0038I Full problem 136 rows 76 columns, reduced to 11 rows 12 columns
Cbc0001I Search completed - best objective -13.79135, took 12621 iterations and 122 nodes (1.71 seconds)
Cbc0032I Strong branching done 1180 times (21315 iterations), fathomed 8 nodes and fixed 36 variables
Cbc0035I Maximum depth 32, 283 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       1.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 118 (-34) columns and 1902 (-1401) elements
Clp1000I sum of infeasibilities 2.94303e-07 - average 2.82984e-09, 16 fixed columns
Coin0506I Presolve 90 (-14) rows, 102 (-16) columns and 1485 (-417) elements
Clp0006I 0  Obj 40.559301 Dual inf 4.3012162 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 1.5008396 - largest nonzero change 1.0113637e-05 ( 0.00060188215%) - largest zero change 2.7417786e-05
Clp0000I Optimal - objective value 50.653295
Clp0000I Optimal - objective value 50.653295
Coin0511I After Postsolve, objective 50.653295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.653295
Clp0000I Optimal - objective value 50.653295
Clp0000I Optimal - objective value 50.653295
Clp0000I Optimal - objective value 50.653295
Coin0511I After Postsolve, objective 50.653295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.65329541 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 120 columns (120 integer (120 of which binary)) and 1911 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.145%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.36011
Cbc0038I Pass   1: suminf.    2.17007 (32) obj. -30.1123 iterations 19
Cbc0038I Pass   2: suminf.    2.17007 (32) obj. -30.1123 iterations 1
Cbc0038I Pass   3: suminf.    0.19619 (7) obj. 0.955572 iterations 25
Cbc0038I Solution found of 7.75938
Cbc0038I Rounding solution of 3.92701 is better than previous of 7.75938

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 3.92701 to -1.05026 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.26295
Cbc0038I Pass   4: suminf.    2.17007 (32) obj. -30.1123 iterations 0
Cbc0038I Pass   5: suminf.    2.17007 (32) obj. -30.1123 iterations 1
Cbc0038I Pass   6: suminf.    0.55612 (15) obj. -7.62895 iterations 17
Cbc0038I Pass   7: suminf.    1.58505 (9) obj. -5.26295 iterations 31
Cbc0038I Pass   8: suminf.    1.58505 (9) obj. -5.26295 iterations 0
Cbc0038I Pass   9: suminf.    0.62484 (6) obj. -5.26295 iterations 16
Cbc0038I Pass  10: suminf.    0.40104 (4) obj. -5.26295 iterations 2
Cbc0038I Pass  11: suminf.    0.59480 (3) obj. -5.26295 iterations 9
Cbc0038I Pass  12: suminf.    0.46605 (3) obj. -5.77795 iterations 2
Cbc0038I Pass  13: suminf.    0.72355 (3) obj. -5.26295 iterations 8
Cbc0038I Pass  14: suminf.    1.97037 (12) obj. -5.26295 iterations 29
Cbc0038I Pass  15: suminf.    1.08522 (11) obj. -5.26295 iterations 6
Cbc0038I Pass  16: suminf.    1.28606 (6) obj. -5.26295 iterations 18
Cbc0038I Pass  17: suminf.    0.94682 (6) obj. -5.26295 iterations 5
Cbc0038I Pass  18: suminf.    1.43082 (6) obj. -5.26295 iterations 6
Cbc0038I Pass  19: suminf.    1.43082 (6) obj. -5.26295 iterations 0
Cbc0038I Pass  20: suminf.    1.23573 (5) obj. -5.26295 iterations 7
Cbc0038I Pass  21: suminf.    0.63431 (5) obj. -5.26295 iterations 10
Cbc0038I Pass  22: suminf.    1.05804 (4) obj. -5.26295 iterations 5
Cbc0038I Pass  23: suminf.    1.05804 (4) obj. -5.26295 iterations 4
Cbc0038I Pass  24: suminf.    0.99583 (4) obj. -5.26295 iterations 5
Cbc0038I Pass  25: suminf.    0.99583 (4) obj. -5.26295 iterations 4
Cbc0038I Pass  26: suminf.    1.05804 (4) obj. -5.26295 iterations 6
Cbc0038I Pass  27: suminf.    1.93106 (11) obj. -5.26295 iterations 31
Cbc0038I Pass  28: suminf.    0.94180 (9) obj. -5.45128 iterations 7
Cbc0038I Pass  29: suminf.    1.30061 (8) obj. -5.26295 iterations 16
Cbc0038I Pass  30: suminf.    1.27847 (7) obj. -5.26295 iterations 2
Cbc0038I Pass  31: suminf.    1.31602 (6) obj. -5.26295 iterations 12
Cbc0038I Pass  32: suminf.    0.93583 (7) obj. -5.26295 iterations 4
Cbc0038I Pass  33: suminf.    1.60550 (7) obj. -5.26295 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 40 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -1.05026 to -11.2007 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.5959
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.17007 (32) obj. -30.1123 iterations 0
Cbc0038I Pass  34: suminf.    2.17007 (32) obj. -30.1123 iterations 1
Cbc0038I Pass  35: suminf.    2.38063 (16) obj. -17.5959 iterations 44
Cbc0038I Pass  36: suminf.    2.19197 (15) obj. -17.8187 iterations 2
Cbc0038I Pass  37: suminf.    1.92352 (12) obj. -17.5959 iterations 29
Cbc0038I Pass  38: suminf.    1.64693 (13) obj. -17.5959 iterations 5
Cbc0038I Pass  39: suminf.    2.83158 (12) obj. -17.5959 iterations 11
Cbc0038I Pass  40: suminf.    2.83158 (12) obj. -17.5959 iterations 4
Cbc0038I Pass  41: suminf.    2.76098 (13) obj. -17.5959 iterations 6
Cbc0038I Pass  42: suminf.    2.76098 (13) obj. -17.5959 iterations 1
Cbc0038I Pass  43: suminf.    2.88825 (13) obj. -17.5959 iterations 9
Cbc0038I Pass  44: suminf.    2.88825 (13) obj. -17.5959 iterations 3
Cbc0038I Pass  45: suminf.    2.76098 (13) obj. -17.5959 iterations 4
Cbc0038I Pass  46: suminf.    2.89789 (18) obj. -17.5959 iterations 17
Cbc0038I Pass  47: suminf.    2.74752 (17) obj. -17.5959 iterations 4
Cbc0038I Pass  48: suminf.    2.45450 (15) obj. -17.5959 iterations 9
Cbc0038I Pass  49: suminf.    1.95271 (14) obj. -17.5959 iterations 8
Cbc0038I Pass  50: suminf.    2.01305 (13) obj. -17.5959 iterations 17
Cbc0038I Pass  51: suminf.    1.81576 (14) obj. -17.5959 iterations 7
Cbc0038I Pass  52: suminf.    2.88028 (14) obj. -17.5959 iterations 10
Cbc0038I Pass  53: suminf.    1.84599 (13) obj. -17.5959 iterations 7
Cbc0038I Pass  54: suminf.    2.35128 (16) obj. -17.5959 iterations 23
Cbc0038I Pass  55: suminf.    2.12335 (17) obj. -17.5959 iterations 5
Cbc0038I Pass  56: suminf.    2.22789 (14) obj. -17.5959 iterations 16
Cbc0038I Pass  57: suminf.    1.93764 (15) obj. -17.5959 iterations 2
Cbc0038I Pass  58: suminf.    2.44917 (14) obj. -17.5959 iterations 13
Cbc0038I Pass  59: suminf.    2.44917 (14) obj. -17.5959 iterations 7
Cbc0038I Pass  60: suminf.    2.40705 (14) obj. -17.5959 iterations 5
Cbc0038I Pass  61: suminf.    2.40705 (14) obj. -17.5959 iterations 3
Cbc0038I Pass  62: suminf.    2.52702 (13) obj. -17.5959 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -11.2007 - took 0.11 seconds
Cbc0012I Integer solution of -11.200691 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 27 rows 30 columns
Cbc0031I 70 added rows had average density of 33.457143
Cbc0013I At root node, 70 cuts changed objective from -43.176213 to -17.793653 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16116 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1652 row cuts average 113.6 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 321 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1025 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 352 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.624 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.200691 best solution, best possible -17.793653 (2.95 seconds)
Cbc0012I Integer solution of -12.44883 found by DiveCoefficient after 6591 iterations and 1 nodes (2.98 seconds)
Cbc0012I Integer solution of -12.901291 found by rounding after 6596 iterations and 2 nodes (2.98 seconds)
Cbc0012I Integer solution of -13.09463 found by DiveCoefficient after 6608 iterations and 2 nodes (2.99 seconds)
Cbc0012I Integer solution of -13.17748 found by rounding after 6612 iterations and 3 nodes (2.99 seconds)
Cbc0012I Integer solution of -13.5081 found by DiveCoefficient after 6626 iterations and 3 nodes (3.00 seconds)
Cbc0012I Integer solution of -13.56622 found by DiveCoefficient after 6632 iterations and 4 nodes (3.01 seconds)
Cbc0016I Integer solution of -13.651911 found by strong branching after 6645 iterations and 6 nodes (3.01 seconds)
Cbc0012I Integer solution of -13.70746 found by DiveCoefficient after 6650 iterations and 6 nodes (3.02 seconds)
Cbc0010I After 19 nodes, 4 on tree, -13.70746 best solution, best possible -16.866676 (3.66 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 50 rows 65 columns
Cbc0010I After 57 nodes, 7 on tree, -13.70746 best solution, best possible -16.866676 (4.41 seconds)
Cbc0016I Integer solution of -13.74314 found by strong branching after 9235 iterations and 60 nodes (4.43 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 65 rows 82 columns
Cbc0012I Integer solution of -13.79135 found by RINS after 11220 iterations and 95 nodes (5.21 seconds)
Cbc0010I After 95 nodes, 2 on tree, -13.79135 best solution, best possible -16.866676 (5.21 seconds)
Cbc0001I Search completed - best objective -13.79135, took 12005 iterations and 108 nodes (5.63 seconds)
Cbc0032I Strong branching done 1366 times (27226 iterations), fathomed 16 nodes and fixed 8 variables
Cbc0035I Maximum depth 15, 307 variables fixed on reduced cost
Total time (CPU seconds):       4.85   (Wallclock seconds):       5.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 5.95228e-05 - average 4.37668e-07, 8 fixed columns
Coin0506I Presolve 120 (-16) rows, 68 (-8) columns and 368 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Coin0511I After Postsolve, objective 39.054354, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Clp0000I Optimal - objective value 39.054354
Coin0511I After Postsolve, objective 39.054354, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.05435383 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 11.2333
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.30841 iterations 57
Cbc0038I Solution found of 1.30841
Cbc0038I Relaxing continuous gives 1.30841
Cbc0038I Rounding solution of -3.04278 is better than previous of 1.30841

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -3.04278 to -11.7785 (0.05 seconds)
Cbc0038I Round again with cutoff of -14.5062
Cbc0038I Pass   2: suminf.    2.60656 (12) obj. -14.5062 iterations 15
Cbc0038I Pass   3: suminf.    1.43658 (5) obj. -14.5062 iterations 13
Cbc0038I Pass   4: suminf.    1.43658 (5) obj. -14.5062 iterations 1
Cbc0038I Pass   5: suminf.    1.12324 (4) obj. -14.5062 iterations 8
Cbc0038I Pass   6: suminf.    1.03322 (3) obj. -14.5062 iterations 1
Cbc0038I Pass   7: suminf.    0.88669 (3) obj. -14.5062 iterations 3
Cbc0038I Pass   8: suminf.    1.63606 (6) obj. -14.5062 iterations 7
Cbc0038I Pass   9: suminf.    1.58729 (5) obj. -14.5062 iterations 1
Cbc0038I Pass  10: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  11: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  12: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  13: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  14: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  15: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  16: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  17: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  18: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  19: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  20: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  21: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  22: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  23: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  24: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  25: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  26: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I Pass  27: suminf.    1.45841 (4) obj. -14.5062 iterations 5
Cbc0038I Pass  28: suminf.    1.81021 (5) obj. -14.5062 iterations 5
Cbc0038I Pass  29: suminf.    1.58729 (5) obj. -14.5062 iterations 2
Cbc0038I Pass  30: suminf.    1.58729 (5) obj. -14.5062 iterations 0
Cbc0038I Pass  31: suminf.    2.18847 (5) obj. -14.5062 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -11.7785 to -13.7913 (0.10 seconds)
Cbc0038I Round again with cutoff of -19.4158
Cbc0038I Pass  31: suminf.    3.56159 (13) obj. -19.4158 iterations 1
Cbc0038I Pass  32: suminf.    1.73845 (6) obj. -19.4158 iterations 14
Cbc0038I Pass  33: suminf.    1.73845 (6) obj. -19.4158 iterations 0
Cbc0038I Pass  34: suminf.    2.71798 (8) obj. -19.4158 iterations 11
Cbc0038I Pass  35: suminf.    1.83841 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  36: suminf.    1.73997 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  37: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  38: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  39: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  40: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  41: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  42: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  43: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  44: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  45: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  46: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  47: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  48: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  49: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  50: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  51: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  52: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  53: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  54: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I Pass  55: suminf.    1.73997 (5) obj. -19.4158 iterations 0
Cbc0038I Pass  56: suminf.    2.35369 (6) obj. -19.4158 iterations 7
Cbc0038I Pass  57: suminf.    2.14139 (5) obj. -19.4158 iterations 1
Cbc0038I Pass  58: suminf.    1.52966 (5) obj. -19.4158 iterations 5
Cbc0038I Pass  59: suminf.    2.29607 (6) obj. -19.4158 iterations 8
Cbc0038I Pass  60: suminf.    1.73997 (5) obj. -19.4158 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -13.7913 - took 0.11 seconds
Cbc0012I Integer solution of -13.79135 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 93 rows 54 columns
Cbc0031I 31 added rows had average density of 44.903226
Cbc0013I At root node, 31 cuts changed objective from -39.054354 to -31.263946 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17099 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2080 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.79135 best solution, best possible -31.263946 (1.18 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 67 rows 41 columns
Cbc0038I Full problem 136 rows 76 columns, reduced to 11 rows 12 columns
Cbc0001I Search completed - best objective -13.79135, took 12621 iterations and 122 nodes (1.66 seconds)
Cbc0032I Strong branching done 1180 times (21315 iterations), fathomed 8 nodes and fixed 36 variables
Cbc0035I Maximum depth 32, 283 variables fixed on reduced cost
Total time (CPU seconds):       1.62   (Wallclock seconds):       1.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 118 (-35) columns and 1902 (-1402) elements
Clp1000I sum of infeasibilities 2.94303e-07 - average 2.82984e-09, 16 fixed columns
Coin0506I Presolve 90 (-14) rows, 102 (-16) columns and 1485 (-417) elements
Clp0006I 0  Obj 40.559301 Dual inf 4.3012162 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 1.5008396 - largest nonzero change 1.0113637e-05 ( 0.00060188215%) - largest zero change 2.7417786e-05
Clp0000I Optimal - objective value 50.653295
Clp0000I Optimal - objective value 50.653295
Coin0511I After Postsolve, objective 50.653295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.653295
Clp0000I Optimal - objective value 50.653295
Clp0000I Optimal - objective value 50.653295
Clp0000I Optimal - objective value 50.653295
Coin0511I After Postsolve, objective 50.653295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.65329541 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 120 columns (120 integer (120 of which binary)) and 1911 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.145%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.36011
Cbc0038I Pass   1: suminf.    2.17007 (32) obj. -30.1123 iterations 19
Cbc0038I Pass   2: suminf.    2.17007 (32) obj. -30.1123 iterations 1
Cbc0038I Pass   3: suminf.    0.19619 (7) obj. 0.955572 iterations 25
Cbc0038I Solution found of 7.75938
Cbc0038I Rounding solution of 3.92701 is better than previous of 7.75938

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 3.92701 to -1.05026 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.26295
Cbc0038I Pass   4: suminf.    2.17007 (32) obj. -30.1123 iterations 0
Cbc0038I Pass   5: suminf.    2.17007 (32) obj. -30.1123 iterations 1
Cbc0038I Pass   6: suminf.    0.55612 (15) obj. -7.62895 iterations 17
Cbc0038I Pass   7: suminf.    1.58505 (9) obj. -5.26295 iterations 31
Cbc0038I Pass   8: suminf.    1.58505 (9) obj. -5.26295 iterations 0
Cbc0038I Pass   9: suminf.    0.62484 (6) obj. -5.26295 iterations 16
Cbc0038I Pass  10: suminf.    0.40104 (4) obj. -5.26295 iterations 2
Cbc0038I Pass  11: suminf.    0.59480 (3) obj. -5.26295 iterations 9
Cbc0038I Pass  12: suminf.    0.46605 (3) obj. -5.77795 iterations 2
Cbc0038I Pass  13: suminf.    0.72355 (3) obj. -5.26295 iterations 8
Cbc0038I Pass  14: suminf.    1.97037 (12) obj. -5.26295 iterations 29
Cbc0038I Pass  15: suminf.    1.08522 (11) obj. -5.26295 iterations 6
Cbc0038I Pass  16: suminf.    1.28606 (6) obj. -5.26295 iterations 18
Cbc0038I Pass  17: suminf.    0.94682 (6) obj. -5.26295 iterations 5
Cbc0038I Pass  18: suminf.    1.43082 (6) obj. -5.26295 iterations 6
Cbc0038I Pass  19: suminf.    1.43082 (6) obj. -5.26295 iterations 0
Cbc0038I Pass  20: suminf.    1.23573 (5) obj. -5.26295 iterations 7
Cbc0038I Pass  21: suminf.    0.63431 (5) obj. -5.26295 iterations 10
Cbc0038I Pass  22: suminf.    1.05804 (4) obj. -5.26295 iterations 5
Cbc0038I Pass  23: suminf.    1.05804 (4) obj. -5.26295 iterations 4
Cbc0038I Pass  24: suminf.    0.99583 (4) obj. -5.26295 iterations 5
Cbc0038I Pass  25: suminf.    0.99583 (4) obj. -5.26295 iterations 4
Cbc0038I Pass  26: suminf.    1.05804 (4) obj. -5.26295 iterations 6
Cbc0038I Pass  27: suminf.    1.93106 (11) obj. -5.26295 iterations 31
Cbc0038I Pass  28: suminf.    0.94180 (9) obj. -5.45128 iterations 7
Cbc0038I Pass  29: suminf.    1.30061 (8) obj. -5.26295 iterations 16
Cbc0038I Pass  30: suminf.    1.27847 (7) obj. -5.26295 iterations 2
Cbc0038I Pass  31: suminf.    1.31602 (6) obj. -5.26295 iterations 12
Cbc0038I Pass  32: suminf.    0.93583 (7) obj. -5.26295 iterations 4
Cbc0038I Pass  33: suminf.    1.60550 (7) obj. -5.26295 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 40 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -1.05026 to -11.2007 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.5959
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.17007 (32) obj. -30.1123 iterations 0
Cbc0038I Pass  34: suminf.    2.17007 (32) obj. -30.1123 iterations 1
Cbc0038I Pass  35: suminf.    2.38063 (16) obj. -17.5959 iterations 44
Cbc0038I Pass  36: suminf.    2.19197 (15) obj. -17.8187 iterations 2
Cbc0038I Pass  37: suminf.    1.92352 (12) obj. -17.5959 iterations 29
Cbc0038I Pass  38: suminf.    1.64693 (13) obj. -17.5959 iterations 5
Cbc0038I Pass  39: suminf.    2.83158 (12) obj. -17.5959 iterations 11
Cbc0038I Pass  40: suminf.    2.83158 (12) obj. -17.5959 iterations 4
Cbc0038I Pass  41: suminf.    2.76098 (13) obj. -17.5959 iterations 6
Cbc0038I Pass  42: suminf.    2.76098 (13) obj. -17.5959 iterations 1
Cbc0038I Pass  43: suminf.    2.88825 (13) obj. -17.5959 iterations 9
Cbc0038I Pass  44: suminf.    2.88825 (13) obj. -17.5959 iterations 3
Cbc0038I Pass  45: suminf.    2.76098 (13) obj. -17.5959 iterations 4
Cbc0038I Pass  46: suminf.    2.89789 (18) obj. -17.5959 iterations 17
Cbc0038I Pass  47: suminf.    2.74752 (17) obj. -17.5959 iterations 4
Cbc0038I Pass  48: suminf.    2.45450 (15) obj. -17.5959 iterations 9
Cbc0038I Pass  49: suminf.    1.95271 (14) obj. -17.5959 iterations 8
Cbc0038I Pass  50: suminf.    2.01305 (13) obj. -17.5959 iterations 17
Cbc0038I Pass  51: suminf.    1.81576 (14) obj. -17.5959 iterations 7
Cbc0038I Pass  52: suminf.    2.88028 (14) obj. -17.5959 iterations 10
Cbc0038I Pass  53: suminf.    1.84599 (13) obj. -17.5959 iterations 7
Cbc0038I Pass  54: suminf.    2.35128 (16) obj. -17.5959 iterations 23
Cbc0038I Pass  55: suminf.    2.12335 (17) obj. -17.5959 iterations 5
Cbc0038I Pass  56: suminf.    2.22789 (14) obj. -17.5959 iterations 16
Cbc0038I Pass  57: suminf.    1.93764 (15) obj. -17.5959 iterations 2
Cbc0038I Pass  58: suminf.    2.44917 (14) obj. -17.5959 iterations 13
Cbc0038I Pass  59: suminf.    2.44917 (14) obj. -17.5959 iterations 7
Cbc0038I Pass  60: suminf.    2.40705 (14) obj. -17.5959 iterations 5
Cbc0038I Pass  61: suminf.    2.40705 (14) obj. -17.5959 iterations 3
Cbc0038I Pass  62: suminf.    2.52702 (13) obj. -17.5959 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -11.2007 - took 0.09 seconds
Cbc0012I Integer solution of -11.200691 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 27 rows 30 columns
Cbc0031I 70 added rows had average density of 33.457143
Cbc0013I At root node, 70 cuts changed objective from -43.176213 to -17.793653 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16116 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1652 row cuts average 113.6 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 321 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1025 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 352 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.580 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.200691 best solution, best possible -17.793653 (2.74 seconds)
Cbc0012I Integer solution of -12.44883 found by DiveCoefficient after 6591 iterations and 1 nodes (2.77 seconds)
Cbc0012I Integer solution of -12.901291 found by rounding after 6596 iterations and 2 nodes (2.77 seconds)
Cbc0012I Integer solution of -13.09463 found by DiveCoefficient after 6608 iterations and 2 nodes (2.78 seconds)
Cbc0012I Integer solution of -13.17748 found by rounding after 6612 iterations and 3 nodes (2.78 seconds)
Cbc0012I Integer solution of -13.5081 found by DiveCoefficient after 6626 iterations and 3 nodes (2.78 seconds)
Cbc0012I Integer solution of -13.56622 found by DiveCoefficient after 6632 iterations and 4 nodes (2.79 seconds)
Cbc0016I Integer solution of -13.651911 found by strong branching after 6645 iterations and 6 nodes (2.80 seconds)
Cbc0012I Integer solution of -13.70746 found by DiveCoefficient after 6650 iterations and 6 nodes (2.80 seconds)
Cbc0010I After 21 nodes, 6 on tree, -13.70746 best solution, best possible -16.866676 (3.47 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 50 rows 65 columns
Cbc0016I Integer solution of -13.74314 found by strong branching after 9235 iterations and 60 nodes (4.10 seconds)
Cbc0010I After 66 nodes, 3 on tree, -13.74314 best solution, best possible -16.866676 (4.17 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 65 rows 82 columns
Cbc0012I Integer solution of -13.79135 found by RINS after 11220 iterations and 95 nodes (4.86 seconds)
Cbc0010I After 96 nodes, 3 on tree, -13.79135 best solution, best possible -16.866676 (4.96 seconds)
Cbc0001I Search completed - best objective -13.79135, took 12005 iterations and 108 nodes (5.25 seconds)
Cbc0032I Strong branching done 1366 times (27226 iterations), fathomed 16 nodes and fixed 8 variables
Cbc0035I Maximum depth 15, 307 variables fixed on reduced cost
Total time (CPU seconds):       4.52   (Wallclock seconds):       5.27

