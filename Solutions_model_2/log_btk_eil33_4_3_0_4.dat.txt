Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 45 (-24) rows, 25 (-10) columns and 133 (-62) elements
Clp0000I Optimal - objective value 176.12415
Coin0511I After Postsolve, objective 176.12415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 176.1241532 - 22 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.65922
Cbc0038I Pass   1: suminf.    0.56188 (2) obj. -100.747 iterations 15
Cbc0038I Solution found of -66.9999
Cbc0038I Relaxing continuous gives -66.9999
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -66.9999 to -83.3332 (0.01 seconds)
Cbc0038I Round again with cutoff of -92.5416
Cbc0038I Pass   2: suminf.    0.56188 (2) obj. -100.747 iterations 0
Cbc0038I Pass   3: suminf.    0.23999 (2) obj. -92.5416 iterations 3
Cbc0038I Pass   4: suminf.    0.19471 (3) obj. -92.5416 iterations 3
Cbc0038I Pass   5: suminf.    0.89444 (3) obj. -92.5416 iterations 10
Cbc0038I Pass   6: suminf.    0.33241 (2) obj. -92.5416 iterations 2
Cbc0038I Pass   7: suminf.    1.82133 (8) obj. -92.5416 iterations 10
Cbc0038I Pass   8: suminf.    1.56998 (9) obj. -92.5416 iterations 4
Cbc0038I Pass   9: suminf.    0.58525 (2) obj. -92.5416 iterations 13
Cbc0038I Pass  10: suminf.    0.28545 (1) obj. -92.5416 iterations 1
Cbc0038I Pass  11: suminf.    0.42824 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  12: suminf.    2.01304 (8) obj. -92.5416 iterations 9
Cbc0038I Pass  13: suminf.    1.30813 (3) obj. -92.5416 iterations 5
Cbc0038I Pass  14: suminf.    0.24452 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  15: suminf.    0.37639 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  16: suminf.    0.62088 (3) obj. -92.5416 iterations 4
Cbc0038I Pass  17: suminf.    0.57090 (2) obj. -92.5416 iterations 1
Cbc0038I Pass  18: suminf.    0.20602 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  19: suminf.    0.23191 (2) obj. -92.5416 iterations 2
Cbc0038I Pass  20: suminf.    0.82622 (2) obj. -92.5416 iterations 4
Cbc0038I Pass  21: suminf.    2.31162 (9) obj. -92.5416 iterations 12
Cbc0038I Pass  22: suminf.    1.56811 (7) obj. -92.5416 iterations 5
Cbc0038I Pass  23: suminf.    1.14228 (4) obj. -92.5416 iterations 5
Cbc0038I Pass  24: suminf.    0.33565 (1) obj. -92.5416 iterations 9
Cbc0038I Pass  25: suminf.    0.22013 (2) obj. -92.5416 iterations 2
Cbc0038I Pass  26: suminf.    0.68565 (2) obj. -92.5416 iterations 4
Cbc0038I Pass  27: suminf.    0.61946 (2) obj. -92.5416 iterations 4
Cbc0038I Pass  28: suminf.    0.81417 (2) obj. -92.5416 iterations 2
Cbc0038I Pass  29: suminf.    0.61946 (2) obj. -92.5416 iterations 1
Cbc0038I Pass  30: suminf.    2.05176 (6) obj. -92.5416 iterations 4
Cbc0038I Pass  31: suminf.    1.31452 (4) obj. -92.5416 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -83.3332 - took 0.04 seconds
Cbc0012I Integer solution of -83.3332 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 25 columns, reduced to 16 rows 11 columns
Cbc0031I 7 added rows had average density of 18.285714
Cbc0013I At root node, 7 cuts changed objective from -175.41666 to -114.22274 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 290 row cuts average 3.9 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.745 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -83.3332 best solution, best possible -114.21986 (1.43 seconds)
Cbc0001I Search completed - best objective -83.33320000000001, took 1211 iterations and 2 nodes (1.56 seconds)
Cbc0032I Strong branching done 24 times (216 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-17) rows, 54 (-12) columns and 419 (-304) elements
Clp1000I sum of infeasibilities 0 - average 0, 10 fixed columns
Coin0506I Presolve 42 (-9) rows, 44 (-10) columns and 279 (-140) elements
Clp0006I 0  Obj 199.77656 Dual inf 8.0759394 (39)
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 229.37828
Clp0000I Optimal - objective value 229.37828
Coin0511I After Postsolve, objective 229.37828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 229.37828 Dual inf 4.5455176 (1)
Clp0014I Perturbing problem by 0.001% of 1.9752627 - largest nonzero change 1.0782101e-05 ( 0.00080919949%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 231.33843
Clp0000I Optimal - objective value 231.33843
Clp0000I Optimal - objective value 231.33843
Coin0511I After Postsolve, objective 231.33843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 231.3384269 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 54 columns (54 integer (54 of which binary)) and 428 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.575%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.91483
Cbc0038I Pass   1: suminf.    0.97038 (8) obj. -118.163 iterations 10
Cbc0038I Pass   2: suminf.    0.97038 (8) obj. -118.163 iterations 0
Cbc0038I Solution found of -28.9999
Cbc0038I Rounding solution of -37.3332 is better than previous of -28.9999

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 54 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -37.3332 to -83.3332 (0.02 seconds)
Cbc0038I Round again with cutoff of -90.8521
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.97038 (8) obj. -118.163 iterations 0
Cbc0038I Pass   4: suminf.    0.97038 (8) obj. -118.163 iterations 0
Cbc0038I Pass   5: suminf.    0.32031 (1) obj. -90.8521 iterations 8
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -104.833 iterations 1
Cbc0038I Pass   7: suminf.    0.20833 (1) obj. -96.7082 iterations 5
Cbc0038I Pass   8: suminf.    0.20833 (1) obj. -96.7082 iterations 1
Cbc0038I Pass   9: suminf.    0.27269 (1) obj. -90.8521 iterations 1
Cbc0038I Pass  10: suminf.    0.98974 (11) obj. -90.8521 iterations 11
Cbc0038I Pass  11: suminf.    0.89857 (10) obj. -90.8521 iterations 3
Cbc0038I Pass  12: suminf.    0.52413 (2) obj. -90.8521 iterations 13
Cbc0038I Pass  13: suminf.    0.52413 (2) obj. -90.8521 iterations 0
Cbc0038I Pass  14: suminf.    0.26902 (1) obj. -90.8521 iterations 1
Cbc0038I Pass  15: suminf.    0.20833 (1) obj. -96.3749 iterations 1
Cbc0038I Pass  16: suminf.    1.72819 (10) obj. -90.8521 iterations 15
Cbc0038I Pass  17: suminf.    1.72819 (10) obj. -90.8521 iterations 2
Cbc0038I Pass  18: suminf.    0.27700 (2) obj. -90.8521 iterations 8
Cbc0038I Pass  19: suminf.    0.20833 (1) obj. -93.3749 iterations 1
Cbc0038I Pass  20: suminf.    0.23606 (1) obj. -90.8521 iterations 1
Cbc0038I Pass  21: suminf.    1.67634 (10) obj. -90.8521 iterations 14
Cbc0038I Pass  22: suminf.    1.53641 (9) obj. -96.2671 iterations 3
Cbc0038I Pass  23: suminf.    0.47657 (3) obj. -90.8521 iterations 13
Cbc0038I Pass  24: suminf.    0.47657 (3) obj. -90.8521 iterations 0
Cbc0038I Pass  25: suminf.    0.98153 (2) obj. -90.8521 iterations 6
Cbc0038I Pass  26: suminf.    0.31664 (1) obj. -90.8521 iterations 2
Cbc0038I Pass  27: suminf.    0.25000 (1) obj. -96.9166 iterations 1
Cbc0038I Pass  28: suminf.    1.61050 (8) obj. -90.8521 iterations 17
Cbc0038I Pass  29: suminf.    1.29710 (5) obj. -93.8872 iterations 6
Cbc0038I Pass  30: suminf.    0.73495 (4) obj. -90.8521 iterations 8
Cbc0038I Pass  31: suminf.    0.73495 (4) obj. -90.8521 iterations 0
Cbc0038I Pass  32: suminf.    0.60402 (2) obj. -90.8521 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 54 columns, reduced to 37 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -83.3332 - took 0.01 seconds
Cbc0012I Integer solution of -83.3332 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 54 columns, reduced to 14 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 3.3
Cbc0013I At root node, 10 cuts changed objective from -158.52094 to -87.87487 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 84 row cuts average 3.4 elements, 28 column cuts (28 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -83.33320000000001, took 83 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 45 (-24) rows, 25 (-10) columns and 133 (-62) elements
Clp0000I Optimal - objective value 176.12415
Coin0511I After Postsolve, objective 176.12415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 176.1241532 - 22 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.65922
Cbc0038I Pass   1: suminf.    0.56188 (2) obj. -100.747 iterations 15
Cbc0038I Solution found of -66.9999
Cbc0038I Relaxing continuous gives -66.9999
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -66.9999 to -83.3332 (0.01 seconds)
Cbc0038I Round again with cutoff of -92.5416
Cbc0038I Pass   2: suminf.    0.56188 (2) obj. -100.747 iterations 0
Cbc0038I Pass   3: suminf.    0.23999 (2) obj. -92.5416 iterations 3
Cbc0038I Pass   4: suminf.    0.19471 (3) obj. -92.5416 iterations 3
Cbc0038I Pass   5: suminf.    0.89444 (3) obj. -92.5416 iterations 10
Cbc0038I Pass   6: suminf.    0.33241 (2) obj. -92.5416 iterations 2
Cbc0038I Pass   7: suminf.    1.82133 (8) obj. -92.5416 iterations 10
Cbc0038I Pass   8: suminf.    1.56998 (9) obj. -92.5416 iterations 4
Cbc0038I Pass   9: suminf.    0.58525 (2) obj. -92.5416 iterations 13
Cbc0038I Pass  10: suminf.    0.28545 (1) obj. -92.5416 iterations 1
Cbc0038I Pass  11: suminf.    0.42824 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  12: suminf.    2.01304 (8) obj. -92.5416 iterations 9
Cbc0038I Pass  13: suminf.    1.30813 (3) obj. -92.5416 iterations 5
Cbc0038I Pass  14: suminf.    0.24452 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  15: suminf.    0.37639 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  16: suminf.    0.62088 (3) obj. -92.5416 iterations 4
Cbc0038I Pass  17: suminf.    0.57090 (2) obj. -92.5416 iterations 1
Cbc0038I Pass  18: suminf.    0.20602 (1) obj. -92.5416 iterations 2
Cbc0038I Pass  19: suminf.    0.23191 (2) obj. -92.5416 iterations 2
Cbc0038I Pass  20: suminf.    0.82622 (2) obj. -92.5416 iterations 4
Cbc0038I Pass  21: suminf.    2.31162 (9) obj. -92.5416 iterations 12
Cbc0038I Pass  22: suminf.    1.56811 (7) obj. -92.5416 iterations 5
Cbc0038I Pass  23: suminf.    1.14228 (4) obj. -92.5416 iterations 5
Cbc0038I Pass  24: suminf.    0.33565 (1) obj. -92.5416 iterations 9
Cbc0038I Pass  25: suminf.    0.22013 (2) obj. -92.5416 iterations 2
Cbc0038I Pass  26: suminf.    0.68565 (2) obj. -92.5416 iterations 4
Cbc0038I Pass  27: suminf.    0.61946 (2) obj. -92.5416 iterations 4
Cbc0038I Pass  28: suminf.    0.81417 (2) obj. -92.5416 iterations 2
Cbc0038I Pass  29: suminf.    0.61946 (2) obj. -92.5416 iterations 1
Cbc0038I Pass  30: suminf.    2.05176 (6) obj. -92.5416 iterations 4
Cbc0038I Pass  31: suminf.    1.31452 (4) obj. -92.5416 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -83.3332 - took 0.03 seconds
Cbc0012I Integer solution of -83.3332 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 45 rows 25 columns, reduced to 16 rows 11 columns
Cbc0031I 7 added rows had average density of 18.285714
Cbc0013I At root node, 7 cuts changed objective from -175.41666 to -114.22274 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 290 row cuts average 3.9 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 270 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -83.3332 best solution, best possible -114.21986 (1.40 seconds)
Cbc0001I Search completed - best objective -83.33320000000001, took 1211 iterations and 2 nodes (1.53 seconds)
Cbc0032I Strong branching done 24 times (216 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 54 (-13) columns and 419 (-305) elements
Clp1000I sum of infeasibilities 0 - average 0, 10 fixed columns
Coin0506I Presolve 42 (-9) rows, 44 (-10) columns and 279 (-140) elements
Clp0006I 0  Obj 199.77656 Dual inf 8.0759394 (39)
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 229.37828
Clp0000I Optimal - objective value 229.37828
Coin0511I After Postsolve, objective 229.37828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 229.37828 Dual inf 4.5455176 (1)
Clp0014I Perturbing problem by 0.001% of 1.9752627 - largest nonzero change 1.0782101e-05 ( 0.00080919949%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 231.33843
Clp0000I Optimal - objective value 231.33843
Clp0000I Optimal - objective value 231.33843
Coin0511I After Postsolve, objective 231.33843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 231.3384269 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 54 columns (54 integer (54 of which binary)) and 428 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.575%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.91483
Cbc0038I Pass   1: suminf.    0.97038 (8) obj. -118.163 iterations 10
Cbc0038I Pass   2: suminf.    0.97038 (8) obj. -118.163 iterations 0
Cbc0038I Solution found of -28.9999
Cbc0038I Rounding solution of -37.3332 is better than previous of -28.9999

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 54 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -37.3332 to -83.3332 (0.03 seconds)
Cbc0038I Round again with cutoff of -90.8521
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.97038 (8) obj. -118.163 iterations 0
Cbc0038I Pass   4: suminf.    0.97038 (8) obj. -118.163 iterations 0
Cbc0038I Pass   5: suminf.    0.32031 (1) obj. -90.8521 iterations 8
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -104.833 iterations 1
Cbc0038I Pass   7: suminf.    0.20833 (1) obj. -96.7082 iterations 5
Cbc0038I Pass   8: suminf.    0.20833 (1) obj. -96.7082 iterations 1
Cbc0038I Pass   9: suminf.    0.27269 (1) obj. -90.8521 iterations 1
Cbc0038I Pass  10: suminf.    0.98974 (11) obj. -90.8521 iterations 11
Cbc0038I Pass  11: suminf.    0.89857 (10) obj. -90.8521 iterations 3
Cbc0038I Pass  12: suminf.    0.52413 (2) obj. -90.8521 iterations 13
Cbc0038I Pass  13: suminf.    0.52413 (2) obj. -90.8521 iterations 0
Cbc0038I Pass  14: suminf.    0.26902 (1) obj. -90.8521 iterations 1
Cbc0038I Pass  15: suminf.    0.20833 (1) obj. -96.3749 iterations 1
Cbc0038I Pass  16: suminf.    1.72819 (10) obj. -90.8521 iterations 15
Cbc0038I Pass  17: suminf.    1.72819 (10) obj. -90.8521 iterations 2
Cbc0038I Pass  18: suminf.    0.27700 (2) obj. -90.8521 iterations 8
Cbc0038I Pass  19: suminf.    0.20833 (1) obj. -93.3749 iterations 1
Cbc0038I Pass  20: suminf.    0.23606 (1) obj. -90.8521 iterations 1
Cbc0038I Pass  21: suminf.    1.67634 (10) obj. -90.8521 iterations 14
Cbc0038I Pass  22: suminf.    1.53641 (9) obj. -96.2671 iterations 3
Cbc0038I Pass  23: suminf.    0.47657 (3) obj. -90.8521 iterations 13
Cbc0038I Pass  24: suminf.    0.47657 (3) obj. -90.8521 iterations 0
Cbc0038I Pass  25: suminf.    0.98153 (2) obj. -90.8521 iterations 6
Cbc0038I Pass  26: suminf.    0.31664 (1) obj. -90.8521 iterations 2
Cbc0038I Pass  27: suminf.    0.25000 (1) obj. -96.9166 iterations 1
Cbc0038I Pass  28: suminf.    1.61050 (8) obj. -90.8521 iterations 17
Cbc0038I Pass  29: suminf.    1.29710 (5) obj. -93.8872 iterations 6
Cbc0038I Pass  30: suminf.    0.73495 (4) obj. -90.8521 iterations 8
Cbc0038I Pass  31: suminf.    0.73495 (4) obj. -90.8521 iterations 0
Cbc0038I Pass  32: suminf.    0.60402 (2) obj. -90.8521 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 54 columns, reduced to 37 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -83.3332 - took 0.02 seconds
Cbc0012I Integer solution of -83.3332 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 54 columns, reduced to 14 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 3.3
Cbc0013I At root node, 10 cuts changed objective from -158.52094 to -87.87487 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 84 row cuts average 3.4 elements, 28 column cuts (28 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0001I Search completed - best objective -83.33320000000001, took 83 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

