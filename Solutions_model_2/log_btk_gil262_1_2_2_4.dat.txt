Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1501 (-44) elements
Clp1000I sum of infeasibilities 1.85653e-05 - average 3.68359e-08, 107 fixed columns
Coin0506I Presolve 290 (-214) rows, 154 (-108) columns and 863 (-638) elements
Clp0029I End of values pass after 154 iterations
Clp0014I Perturbing problem by 0.001% of 0.16322971 - largest nonzero change 0 ( 0%) - largest zero change 2.9941894e-05
Clp0000I Optimal - objective value 121.20685
Clp0000I Optimal - objective value 121.20685
Coin0511I After Postsolve, objective 121.20685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13707262 - largest nonzero change 0 ( 0%) - largest zero change 2.9786142e-05
Clp0000I Optimal - objective value 121.20685
Clp0000I Optimal - objective value 121.20685
Clp0000I Optimal - objective value 121.20685
Coin0511I After Postsolve, objective 121.20685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.206851 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 82 integers unsatisfied sum - 12.9536
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.49209 iterations 257
Cbc0038I Solution found of 7.49209
Cbc0038I Relaxing continuous gives 7.49209
Cbc0038I Rounding solution of -4.14971 is better than previous of 7.49209

Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 153 rows 83 columns
Cbc0038I Mini branch and bound improved solution from -4.14971 to -48.4433 (0.07 seconds)
Cbc0038I Round again with cutoff of -55.7198
Cbc0038I Pass   2: suminf.    3.43032 (16) obj. -55.7198 iterations 44
Cbc0038I Pass   3: suminf.    3.43032 (16) obj. -55.7198 iterations 0
Cbc0038I Pass   4: suminf.    2.43639 (9) obj. -55.7198 iterations 45
Cbc0038I Pass   5: suminf.    2.05578 (8) obj. -55.7198 iterations 17
Cbc0038I Pass   6: suminf.    2.04216 (9) obj. -55.7198 iterations 6
Cbc0038I Pass   7: suminf.    2.75154 (9) obj. -55.7198 iterations 24
Cbc0038I Pass   8: suminf.    2.07851 (8) obj. -55.7198 iterations 9
Cbc0038I Pass   9: suminf.    2.75057 (7) obj. -55.7198 iterations 12
Cbc0038I Pass  10: suminf.    1.74454 (4) obj. -55.7198 iterations 26
Cbc0038I Pass  11: suminf.    1.24174 (5) obj. -55.7198 iterations 23
Cbc0038I Pass  12: suminf.    1.74917 (5) obj. -55.7198 iterations 21
Cbc0038I Pass  13: suminf.    1.74017 (5) obj. -55.7198 iterations 2
Cbc0038I Pass  14: suminf.    1.67598 (6) obj. -55.7198 iterations 22
Cbc0038I Pass  15: suminf.    1.66504 (6) obj. -55.7198 iterations 1
Cbc0038I Pass  16: suminf.    1.86656 (5) obj. -55.7198 iterations 18
Cbc0038I Pass  17: suminf.    1.66359 (4) obj. -55.7198 iterations 5
Cbc0038I Pass  18: suminf.    1.74017 (5) obj. -55.7198 iterations 11
Cbc0038I Pass  19: suminf.    1.74017 (5) obj. -55.7198 iterations 0
Cbc0038I Pass  20: suminf.    1.67598 (6) obj. -55.7198 iterations 22
Cbc0038I Pass  21: suminf.    1.66504 (6) obj. -55.7198 iterations 1
Cbc0038I Pass  22: suminf.    1.86656 (5) obj. -55.7198 iterations 18
Cbc0038I Pass  23: suminf.    1.66359 (4) obj. -55.7198 iterations 5
Cbc0038I Pass  24: suminf.    1.74017 (5) obj. -55.7198 iterations 11
Cbc0038I Pass  25: suminf.    1.74017 (5) obj. -55.7198 iterations 0
Cbc0038I Pass  26: suminf.    1.67598 (6) obj. -55.7198 iterations 22
Cbc0038I Pass  27: suminf.    1.66504 (6) obj. -55.7198 iterations 1
Cbc0038I Pass  28: suminf.    1.86656 (5) obj. -55.7198 iterations 18
Cbc0038I Pass  29: suminf.    1.66359 (4) obj. -55.7198 iterations 5
Cbc0038I Pass  30: suminf.    1.74017 (5) obj. -55.7198 iterations 11
Cbc0038I Pass  31: suminf.    1.74017 (5) obj. -55.7198 iterations 0
Cbc0038I Rounding solution of -56.2185 is better than previous of -48.4433

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 164 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -56.2185 to -56.5594 (0.16 seconds)
Cbc0038I Round again with cutoff of -69.489
Cbc0038I Pass  31: suminf.    4.34836 (16) obj. -69.489 iterations 1
Cbc0038I Pass  32: suminf.    4.34836 (16) obj. -69.489 iterations 0
Cbc0038I Pass  33: suminf.    3.93631 (10) obj. -69.489 iterations 47
Cbc0038I Pass  34: suminf.    3.58337 (11) obj. -69.489 iterations 13
Cbc0038I Pass  35: suminf.    3.58522 (11) obj. -69.489 iterations 5
Cbc0038I Pass  36: suminf.    3.37703 (10) obj. -69.489 iterations 25
Cbc0038I Pass  37: suminf.    2.53496 (7) obj. -69.489 iterations 26
Cbc0038I Pass  38: suminf.    2.53496 (7) obj. -69.489 iterations 0
Cbc0038I Pass  39: suminf.    2.55467 (7) obj. -69.489 iterations 19
Cbc0038I Pass  40: suminf.    2.46513 (7) obj. -69.489 iterations 8
Cbc0038I Pass  41: suminf.    2.46221 (7) obj. -69.489 iterations 23
Cbc0038I Pass  42: suminf.    2.46053 (7) obj. -69.489 iterations 1
Cbc0038I Pass  43: suminf.    2.80079 (8) obj. -69.489 iterations 18
Cbc0038I Pass  44: suminf.    2.80082 (8) obj. -69.489 iterations 4
Cbc0038I Pass  45: suminf.    2.48292 (7) obj. -69.489 iterations 29
Cbc0038I Pass  46: suminf.    6.19138 (19) obj. -69.489 iterations 67
Cbc0038I Pass  47: suminf.    3.02236 (12) obj. -69.489 iterations 54
Cbc0038I Pass  48: suminf.    3.01487 (12) obj. -69.489 iterations 2
Cbc0038I Pass  49: suminf.    2.73415 (8) obj. -69.489 iterations 66
Cbc0038I Pass  50: suminf.    2.61673 (9) obj. -69.489 iterations 9
Cbc0038I Pass  51: suminf.    2.95187 (8) obj. -69.489 iterations 21
Cbc0038I Pass  52: suminf.    2.01046 (6) obj. -69.489 iterations 11
Cbc0038I Pass  53: suminf.    1.89990 (6) obj. -69.489 iterations 12
Cbc0038I Pass  54: suminf.    1.89990 (6) obj. -69.489 iterations 0
Cbc0038I Pass  55: suminf.    1.93258 (5) obj. -69.489 iterations 34
Cbc0038I Pass  56: suminf.    1.85384 (5) obj. -69.489 iterations 16
Cbc0038I Pass  57: suminf.    1.89990 (6) obj. -69.489 iterations 19
Cbc0038I Pass  58: suminf.    6.15585 (15) obj. -69.489 iterations 49
Cbc0038I Pass  59: suminf.    4.48877 (16) obj. -69.489 iterations 54
Cbc0038I Pass  60: suminf.    4.76880 (12) obj. -69.489 iterations 30
Cbc0038I Rounding solution of -60.6936 is better than previous of -56.5594

Cbc0038I Before mini branch and bound, 158 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 192 rows 104 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I Round again with cutoff of -85.0043
Cbc0038I Pass  60: suminf.    5.37877 (18) obj. -85.0043 iterations 10
Cbc0038I Pass  61: suminf.    5.07431 (18) obj. -85.0043 iterations 26
Cbc0038I Pass  62: suminf.    4.99485 (18) obj. -85.0043 iterations 13
Cbc0038I Pass  63: suminf.    5.56817 (15) obj. -85.0043 iterations 44
Cbc0038I Pass  64: suminf.    4.22860 (13) obj. -85.0043 iterations 34
Cbc0038I Pass  65: suminf.    3.47091 (11) obj. -85.0043 iterations 23
Cbc0038I Pass  66: suminf.    4.44754 (12) obj. -85.0043 iterations 23
Cbc0038I Pass  67: suminf.    3.88901 (14) obj. -85.0043 iterations 25
Cbc0038I Pass  68: suminf.    3.88901 (14) obj. -85.0043 iterations 0
Cbc0038I Pass  69: suminf.    5.67541 (16) obj. -85.0043 iterations 35
Cbc0038I Pass  70: suminf.    4.58794 (13) obj. -85.0043 iterations 38
Cbc0038I Pass  71: suminf.    4.49781 (12) obj. -85.0043 iterations 33
Cbc0038I Pass  72: suminf.    3.90169 (13) obj. -85.0043 iterations 19
Cbc0038I Pass  73: suminf.    3.88901 (14) obj. -85.0043 iterations 1
Cbc0038I Pass  74: suminf.    3.88901 (14) obj. -85.0043 iterations 0
Cbc0038I Pass  75: suminf.    5.03455 (15) obj. -85.0043 iterations 25
Cbc0038I Pass  76: suminf.    3.77434 (12) obj. -85.0043 iterations 21
Cbc0038I Pass  77: suminf.    3.77434 (12) obj. -85.0043 iterations 4
Cbc0038I Pass  78: suminf.    5.06049 (14) obj. -85.0043 iterations 33
Cbc0038I Pass  79: suminf.    4.49130 (15) obj. -85.0043 iterations 42
Cbc0038I Pass  80: suminf.    4.34076 (15) obj. -85.0043 iterations 9
Cbc0038I Pass  81: suminf.    4.31462 (14) obj. -85.0043 iterations 16
Cbc0038I Pass  82: suminf.    4.55926 (12) obj. -85.0043 iterations 47
Cbc0038I Pass  83: suminf.    3.95202 (12) obj. -85.0043 iterations 22
Cbc0038I Pass  84: suminf.    3.86174 (12) obj. -85.0043 iterations 6
Cbc0038I Pass  85: suminf.    5.12750 (18) obj. -85.0043 iterations 46
Cbc0038I Pass  86: suminf.    3.90169 (13) obj. -85.0043 iterations 24
Cbc0038I Pass  87: suminf.    3.88901 (14) obj. -85.0043 iterations 1
Cbc0038I Pass  88: suminf.    3.88901 (14) obj. -85.0043 iterations 0
Cbc0038I Pass  89: suminf.    5.67541 (16) obj. -85.0043 iterations 34
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 171 rows 93 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -60.6936 - took 0.34 seconds
Cbc0012I Integer solution of -61.22754 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 158 rows 86 columns
Cbc0031I 52 added rows had average density of 121.55769
Cbc0013I At root node, 52 cuts changed objective from -121.20685 to -109.21002 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41169 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.504 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3469 row cuts average 257.7 elements, 0 column cuts (0 active)  in 0.512 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.568 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 256.3 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.22754 best solution, best possible -109.21002 (5.29 seconds)
Cbc0010I After 30 nodes, 9 on tree, -61.22754 best solution, best possible -109.21002 (6.00 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 6 rows 12 columns
Cbc0012I Integer solution of -63.63837 found by RINS after 19466 iterations and 41 nodes (6.11 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 109 rows 61 columns
Cbc0010I After 138 nodes, 5 on tree, -63.63837 best solution, best possible -109.21002 (6.71 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 27 rows 17 columns
Cbc0001I Search completed - best objective -63.63837000000001, took 27987 iterations and 220 nodes (7.04 seconds)
Cbc0032I Strong branching done 2112 times (56956 iterations), fathomed 30 nodes and fixed 107 variables
Cbc0035I Maximum depth 52, 1277 variables fixed on reduced cost
Total time (CPU seconds):       6.92   (Wallclock seconds):       7.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 348 (-178) rows, 366 (-158) columns and 14692 (-21044) elements
Clp1000I sum of infeasibilities 4.91696e-06 - average 1.41292e-08, 83 fixed columns
Coin0506I Presolve 268 (-80) rows, 283 (-83) columns and 9549 (-5143) elements
Clp0006I 0  Obj 134.64592 Dual inf 39.228839 (283)
Clp0029I End of values pass after 283 iterations
Clp0014I Perturbing problem by 0.001% of 1.5707666 - largest nonzero change 2.8538666e-05 ( 0.0025094533%) - largest zero change 2.9892542e-05
Clp0000I Optimal - objective value 157.00022
Clp0000I Optimal - objective value 157.00022
Coin0511I After Postsolve, objective 157.00022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 157.00022 Dual inf 18.388311 (2)
Clp0014I Perturbing problem by 0.001% of 1.5159961 - largest nonzero change 2.7618762e-05 ( 0.0023931446%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 157.00022
Clp0000I Optimal - objective value 157.00022
Clp0000I Optimal - objective value 157.00022
Coin0511I After Postsolve, objective 157.00022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 157.0002195 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0004I processed model has 348 rows, 366 columns (366 integer (366 of which binary)) and 14692 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 4.22844
Cbc0038I Pass   1: suminf.    1.65783 (56) obj. -121.035 iterations 57
Cbc0038I Pass   2: suminf.    1.65783 (56) obj. -121.035 iterations 2
Cbc0038I Pass   3: suminf.    0.49275 (27) obj. -40.7515 iterations 29
Cbc0038I Pass   4: suminf.    0.09944 (8) obj. -21.1638 iterations 19
Cbc0038I Solution found of -13.2632
Cbc0038I Rounding solution of -29.0898 is better than previous of -13.2632

Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 41 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -41.8809
Cbc0038I Pass   5: suminf.    1.65783 (56) obj. -121.035 iterations 0
Cbc0038I Pass   6: suminf.    1.65783 (56) obj. -121.035 iterations 1
Cbc0038I Pass   7: suminf.    1.11955 (44) obj. -63.8659 iterations 12
Cbc0038I Pass   8: suminf.    0.67036 (32) obj. -46.5387 iterations 12
Cbc0038I Pass   9: suminf.    0.43040 (13) obj. -41.8809 iterations 33
Cbc0038I Pass  10: suminf.    0.38041 (13) obj. -41.8809 iterations 1
Cbc0038I Pass  11: suminf.    0.69107 (3) obj. -41.8809 iterations 36
Cbc0038I Pass  12: suminf.    0.58067 (3) obj. -41.8809 iterations 13
Cbc0038I Pass  13: suminf.    0.78971 (4) obj. -41.8809 iterations 12
Cbc0038I Pass  14: suminf.    0.51506 (4) obj. -41.8809 iterations 12
Cbc0038I Pass  15: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  16: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  17: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  18: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  19: suminf.    0.51506 (4) obj. -41.8809 iterations 12
Cbc0038I Pass  20: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  21: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  22: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  23: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  24: suminf.    0.51506 (4) obj. -41.8809 iterations 11
Cbc0038I Pass  25: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  26: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  27: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  28: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  29: suminf.    0.51506 (4) obj. -41.8809 iterations 11
Cbc0038I Pass  30: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  31: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  32: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  33: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  34: suminf.    0.51506 (4) obj. -41.8809 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 247 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 113 rows 119 columns - 17 fixed gives 96, 102 - ok now
Cbc0038I Full problem 348 rows 366 columns, reduced to 47 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -29.0898 - took 0.10 seconds
Cbc0012I Integer solution of -29.08979 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 44 rows 46 columns
Cbc0031I 147 added rows had average density of 79.278912
Cbc0013I At root node, 147 cuts changed objective from -157.00022 to -85.57137 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34882 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.423 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3235 row cuts average 361.4 elements, 0 column cuts (0 active)  in 1.217 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 468 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4284 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.753 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1504 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.876 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 336 row cuts average 240.9 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 351 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.687 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.08979 best solution, best possible -85.57137 (9.21 seconds)
Cbc0012I Integer solution of -45.12335 found by rounding after 16485 iterations and 1 nodes (9.27 seconds)
Cbc0012I Integer solution of -47.19704 found by rounding after 16817 iterations and 2 nodes (9.37 seconds)
Cbc0012I Integer solution of -56.49418 found by rounding after 16928 iterations and 3 nodes (9.49 seconds)
Cbc0012I Integer solution of -61.06204 found by rounding after 17023 iterations and 4 nodes (9.60 seconds)
Cbc0012I Integer solution of -62.84567 found by DiveCoefficient after 17060 iterations and 6 nodes (9.75 seconds)
Cbc0004I Integer solution of -63.63837 found after 17204 iterations and 9 nodes (9.87 seconds)
Cbc0010I After 10 nodes, 7 on tree, -63.63837 best solution, best possible -85.57137 (9.96 seconds)
Cbc0010I After 25 nodes, 1 on tree, -63.63837 best solution, best possible -85.57137 (10.73 seconds)
Cbc0010I After 27 nodes, 2 on tree, -63.63837 best solution, best possible -85.436829 (11.80 seconds)
Cbc0010I After 29 nodes, 4 on tree, -63.63837 best solution, best possible -85.436829 (12.91 seconds)
Cbc0010I After 31 nodes, 6 on tree, -63.63837 best solution, best possible -85.436829 (13.69 seconds)
Cbc0010I After 35 nodes, 10 on tree, -63.63837 best solution, best possible -85.436829 (14.82 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 168 rows 183 columns
Cbc0010I After 43 nodes, 8 on tree, -63.63837 best solution, best possible -85.436829 (15.54 seconds)
Cbc0010I After 52 nodes, 10 on tree, -63.63837 best solution, best possible -85.436829 (16.27 seconds)
Cbc0010I After 70 nodes, 13 on tree, -63.63837 best solution, best possible -85.436829 (17.03 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 150 rows 164 columns
Cbc0010I After 91 nodes, 14 on tree, -63.63837 best solution, best possible -85.436829 (17.73 seconds)
Cbc0010I After 120 nodes, 14 on tree, -63.63837 best solution, best possible -85.436829 (18.46 seconds)
Cbc0010I After 141 nodes, 12 on tree, -63.63837 best solution, best possible -85.436829 (19.17 seconds)
Cbc0010I After 162 nodes, 17 on tree, -63.63837 best solution, best possible -85.436829 (19.88 seconds)
Cbc0010I After 193 nodes, 13 on tree, -63.63837 best solution, best possible -85.436829 (20.61 seconds)
Cbc0010I After 219 nodes, 11 on tree, -63.63837 best solution, best possible -85.436829 (21.39 seconds)
Cbc0001I Search completed - best objective -63.63837000000001, took 43308 iterations and 234 nodes (21.55 seconds)
Cbc0032I Strong branching done 1428 times (42547 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 48, 1560 variables fixed on reduced cost
Total time (CPU seconds):       19.98   (Wallclock seconds):       21.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1501 (-44) elements
Clp1000I sum of infeasibilities 1.85653e-05 - average 3.68359e-08, 107 fixed columns
Coin0506I Presolve 290 (-214) rows, 154 (-108) columns and 863 (-638) elements
Clp0029I End of values pass after 154 iterations
Clp0014I Perturbing problem by 0.001% of 0.16322971 - largest nonzero change 0 ( 0%) - largest zero change 2.9941894e-05
Clp0000I Optimal - objective value 121.20685
Clp0000I Optimal - objective value 121.20685
Coin0511I After Postsolve, objective 121.20685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13707262 - largest nonzero change 0 ( 0%) - largest zero change 2.9786142e-05
Clp0000I Optimal - objective value 121.20685
Clp0000I Optimal - objective value 121.20685
Clp0000I Optimal - objective value 121.20685
Coin0511I After Postsolve, objective 121.20685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.206851 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 82 integers unsatisfied sum - 12.9536
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.49209 iterations 257
Cbc0038I Solution found of 7.49209
Cbc0038I Relaxing continuous gives 7.49209
Cbc0038I Rounding solution of -4.14971 is better than previous of 7.49209

Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 153 rows 83 columns
Cbc0038I Mini branch and bound improved solution from -4.14971 to -48.4433 (0.08 seconds)
Cbc0038I Round again with cutoff of -55.7198
Cbc0038I Pass   2: suminf.    3.43032 (16) obj. -55.7198 iterations 44
Cbc0038I Pass   3: suminf.    3.43032 (16) obj. -55.7198 iterations 0
Cbc0038I Pass   4: suminf.    2.43639 (9) obj. -55.7198 iterations 45
Cbc0038I Pass   5: suminf.    2.05578 (8) obj. -55.7198 iterations 17
Cbc0038I Pass   6: suminf.    2.04216 (9) obj. -55.7198 iterations 6
Cbc0038I Pass   7: suminf.    2.75154 (9) obj. -55.7198 iterations 24
Cbc0038I Pass   8: suminf.    2.07851 (8) obj. -55.7198 iterations 9
Cbc0038I Pass   9: suminf.    2.75057 (7) obj. -55.7198 iterations 12
Cbc0038I Pass  10: suminf.    1.74454 (4) obj. -55.7198 iterations 26
Cbc0038I Pass  11: suminf.    1.24174 (5) obj. -55.7198 iterations 23
Cbc0038I Pass  12: suminf.    1.74917 (5) obj. -55.7198 iterations 21
Cbc0038I Pass  13: suminf.    1.74017 (5) obj. -55.7198 iterations 2
Cbc0038I Pass  14: suminf.    1.67598 (6) obj. -55.7198 iterations 22
Cbc0038I Pass  15: suminf.    1.66504 (6) obj. -55.7198 iterations 1
Cbc0038I Pass  16: suminf.    1.86656 (5) obj. -55.7198 iterations 18
Cbc0038I Pass  17: suminf.    1.66359 (4) obj. -55.7198 iterations 5
Cbc0038I Pass  18: suminf.    1.74017 (5) obj. -55.7198 iterations 11
Cbc0038I Pass  19: suminf.    1.74017 (5) obj. -55.7198 iterations 0
Cbc0038I Pass  20: suminf.    1.67598 (6) obj. -55.7198 iterations 22
Cbc0038I Pass  21: suminf.    1.66504 (6) obj. -55.7198 iterations 1
Cbc0038I Pass  22: suminf.    1.86656 (5) obj. -55.7198 iterations 18
Cbc0038I Pass  23: suminf.    1.66359 (4) obj. -55.7198 iterations 5
Cbc0038I Pass  24: suminf.    1.74017 (5) obj. -55.7198 iterations 11
Cbc0038I Pass  25: suminf.    1.74017 (5) obj. -55.7198 iterations 0
Cbc0038I Pass  26: suminf.    1.67598 (6) obj. -55.7198 iterations 22
Cbc0038I Pass  27: suminf.    1.66504 (6) obj. -55.7198 iterations 1
Cbc0038I Pass  28: suminf.    1.86656 (5) obj. -55.7198 iterations 18
Cbc0038I Pass  29: suminf.    1.66359 (4) obj. -55.7198 iterations 5
Cbc0038I Pass  30: suminf.    1.74017 (5) obj. -55.7198 iterations 11
Cbc0038I Pass  31: suminf.    1.74017 (5) obj. -55.7198 iterations 0
Cbc0038I Rounding solution of -56.2185 is better than previous of -48.4433

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 164 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -56.2185 to -56.5594 (0.16 seconds)
Cbc0038I Round again with cutoff of -69.489
Cbc0038I Pass  31: suminf.    4.34836 (16) obj. -69.489 iterations 1
Cbc0038I Pass  32: suminf.    4.34836 (16) obj. -69.489 iterations 0
Cbc0038I Pass  33: suminf.    3.93631 (10) obj. -69.489 iterations 47
Cbc0038I Pass  34: suminf.    3.58337 (11) obj. -69.489 iterations 13
Cbc0038I Pass  35: suminf.    3.58522 (11) obj. -69.489 iterations 5
Cbc0038I Pass  36: suminf.    3.37703 (10) obj. -69.489 iterations 25
Cbc0038I Pass  37: suminf.    2.53496 (7) obj. -69.489 iterations 26
Cbc0038I Pass  38: suminf.    2.53496 (7) obj. -69.489 iterations 0
Cbc0038I Pass  39: suminf.    2.55467 (7) obj. -69.489 iterations 19
Cbc0038I Pass  40: suminf.    2.46513 (7) obj. -69.489 iterations 8
Cbc0038I Pass  41: suminf.    2.46221 (7) obj. -69.489 iterations 23
Cbc0038I Pass  42: suminf.    2.46053 (7) obj. -69.489 iterations 1
Cbc0038I Pass  43: suminf.    2.80079 (8) obj. -69.489 iterations 18
Cbc0038I Pass  44: suminf.    2.80082 (8) obj. -69.489 iterations 4
Cbc0038I Pass  45: suminf.    2.48292 (7) obj. -69.489 iterations 29
Cbc0038I Pass  46: suminf.    6.19138 (19) obj. -69.489 iterations 67
Cbc0038I Pass  47: suminf.    3.02236 (12) obj. -69.489 iterations 54
Cbc0038I Pass  48: suminf.    3.01487 (12) obj. -69.489 iterations 2
Cbc0038I Pass  49: suminf.    2.73415 (8) obj. -69.489 iterations 66
Cbc0038I Pass  50: suminf.    2.61673 (9) obj. -69.489 iterations 9
Cbc0038I Pass  51: suminf.    2.95187 (8) obj. -69.489 iterations 21
Cbc0038I Pass  52: suminf.    2.01046 (6) obj. -69.489 iterations 11
Cbc0038I Pass  53: suminf.    1.89990 (6) obj. -69.489 iterations 12
Cbc0038I Pass  54: suminf.    1.89990 (6) obj. -69.489 iterations 0
Cbc0038I Pass  55: suminf.    1.93258 (5) obj. -69.489 iterations 34
Cbc0038I Pass  56: suminf.    1.85384 (5) obj. -69.489 iterations 16
Cbc0038I Pass  57: suminf.    1.89990 (6) obj. -69.489 iterations 19
Cbc0038I Pass  58: suminf.    6.15585 (15) obj. -69.489 iterations 49
Cbc0038I Pass  59: suminf.    4.48877 (16) obj. -69.489 iterations 54
Cbc0038I Pass  60: suminf.    4.76880 (12) obj. -69.489 iterations 30
Cbc0038I Rounding solution of -60.6936 is better than previous of -56.5594

Cbc0038I Before mini branch and bound, 158 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 192 rows 104 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I Round again with cutoff of -85.0043
Cbc0038I Pass  60: suminf.    5.37877 (18) obj. -85.0043 iterations 10
Cbc0038I Pass  61: suminf.    5.07431 (18) obj. -85.0043 iterations 26
Cbc0038I Pass  62: suminf.    4.99485 (18) obj. -85.0043 iterations 13
Cbc0038I Pass  63: suminf.    5.56817 (15) obj. -85.0043 iterations 44
Cbc0038I Pass  64: suminf.    4.22860 (13) obj. -85.0043 iterations 34
Cbc0038I Pass  65: suminf.    3.47091 (11) obj. -85.0043 iterations 23
Cbc0038I Pass  66: suminf.    4.44754 (12) obj. -85.0043 iterations 23
Cbc0038I Pass  67: suminf.    3.88901 (14) obj. -85.0043 iterations 25
Cbc0038I Pass  68: suminf.    3.88901 (14) obj. -85.0043 iterations 0
Cbc0038I Pass  69: suminf.    5.67541 (16) obj. -85.0043 iterations 35
Cbc0038I Pass  70: suminf.    4.58794 (13) obj. -85.0043 iterations 38
Cbc0038I Pass  71: suminf.    4.49781 (12) obj. -85.0043 iterations 33
Cbc0038I Pass  72: suminf.    3.90169 (13) obj. -85.0043 iterations 19
Cbc0038I Pass  73: suminf.    3.88901 (14) obj. -85.0043 iterations 1
Cbc0038I Pass  74: suminf.    3.88901 (14) obj. -85.0043 iterations 0
Cbc0038I Pass  75: suminf.    5.03455 (15) obj. -85.0043 iterations 25
Cbc0038I Pass  76: suminf.    3.77434 (12) obj. -85.0043 iterations 21
Cbc0038I Pass  77: suminf.    3.77434 (12) obj. -85.0043 iterations 4
Cbc0038I Pass  78: suminf.    5.06049 (14) obj. -85.0043 iterations 33
Cbc0038I Pass  79: suminf.    4.49130 (15) obj. -85.0043 iterations 42
Cbc0038I Pass  80: suminf.    4.34076 (15) obj. -85.0043 iterations 9
Cbc0038I Pass  81: suminf.    4.31462 (14) obj. -85.0043 iterations 16
Cbc0038I Pass  82: suminf.    4.55926 (12) obj. -85.0043 iterations 47
Cbc0038I Pass  83: suminf.    3.95202 (12) obj. -85.0043 iterations 22
Cbc0038I Pass  84: suminf.    3.86174 (12) obj. -85.0043 iterations 6
Cbc0038I Pass  85: suminf.    5.12750 (18) obj. -85.0043 iterations 46
Cbc0038I Pass  86: suminf.    3.90169 (13) obj. -85.0043 iterations 24
Cbc0038I Pass  87: suminf.    3.88901 (14) obj. -85.0043 iterations 1
Cbc0038I Pass  88: suminf.    3.88901 (14) obj. -85.0043 iterations 0
Cbc0038I Pass  89: suminf.    5.67541 (16) obj. -85.0043 iterations 34
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 171 rows 93 columns
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I After 0.38 seconds - Feasibility pump exiting with objective of -60.6936 - took 0.36 seconds
Cbc0012I Integer solution of -61.22754 found by feasibility pump after 0 iterations and 0 nodes (0.38 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 158 rows 86 columns
Cbc0031I 52 added rows had average density of 121.55769
Cbc0013I At root node, 52 cuts changed objective from -121.20685 to -109.21002 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41169 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.525 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3469 row cuts average 257.7 elements, 0 column cuts (0 active)  in 0.534 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.586 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 256.3 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.22754 best solution, best possible -109.21002 (5.53 seconds)
Cbc0010I After 27 nodes, 8 on tree, -61.22754 best solution, best possible -109.21002 (6.24 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 6 rows 12 columns
Cbc0012I Integer solution of -63.63837 found by RINS after 19466 iterations and 41 nodes (6.38 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 109 rows 61 columns
Cbc0010I After 136 nodes, 3 on tree, -63.63837 best solution, best possible -109.21002 (6.94 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 27 rows 17 columns
Cbc0001I Search completed - best objective -63.63837000000001, took 27987 iterations and 220 nodes (7.33 seconds)
Cbc0032I Strong branching done 2112 times (56956 iterations), fathomed 30 nodes and fixed 107 variables
Cbc0035I Maximum depth 52, 1277 variables fixed on reduced cost
Total time (CPU seconds):       7.17   (Wallclock seconds):       7.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 348 (-179) rows, 366 (-159) columns and 14692 (-21045) elements
Clp1000I sum of infeasibilities 4.91696e-06 - average 1.41292e-08, 83 fixed columns
Coin0506I Presolve 268 (-80) rows, 283 (-83) columns and 9549 (-5143) elements
Clp0006I 0  Obj 134.64592 Dual inf 39.228839 (283)
Clp0029I End of values pass after 283 iterations
Clp0014I Perturbing problem by 0.001% of 1.5707666 - largest nonzero change 2.8538666e-05 ( 0.0025094533%) - largest zero change 2.9892542e-05
Clp0000I Optimal - objective value 157.00022
Clp0000I Optimal - objective value 157.00022
Coin0511I After Postsolve, objective 157.00022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 157.00022 Dual inf 18.388311 (2)
Clp0014I Perturbing problem by 0.001% of 1.5159961 - largest nonzero change 2.7618762e-05 ( 0.0023931446%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 157.00022
Clp0000I Optimal - objective value 157.00022
Clp0000I Optimal - objective value 157.00022
Coin0511I After Postsolve, objective 157.00022, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 157.0002195 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 348 rows, 366 columns (366 integer (366 of which binary)) and 14692 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 4.22844
Cbc0038I Pass   1: suminf.    1.65783 (56) obj. -121.035 iterations 57
Cbc0038I Pass   2: suminf.    1.65783 (56) obj. -121.035 iterations 2
Cbc0038I Pass   3: suminf.    0.49275 (27) obj. -40.7515 iterations 29
Cbc0038I Pass   4: suminf.    0.09944 (8) obj. -21.1638 iterations 19
Cbc0038I Solution found of -13.2632
Cbc0038I Rounding solution of -29.0898 is better than previous of -13.2632

Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 41 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -41.8809
Cbc0038I Pass   5: suminf.    1.65783 (56) obj. -121.035 iterations 0
Cbc0038I Pass   6: suminf.    1.65783 (56) obj. -121.035 iterations 1
Cbc0038I Pass   7: suminf.    1.11955 (44) obj. -63.8659 iterations 12
Cbc0038I Pass   8: suminf.    0.67036 (32) obj. -46.5387 iterations 12
Cbc0038I Pass   9: suminf.    0.43040 (13) obj. -41.8809 iterations 33
Cbc0038I Pass  10: suminf.    0.38041 (13) obj. -41.8809 iterations 1
Cbc0038I Pass  11: suminf.    0.69107 (3) obj. -41.8809 iterations 36
Cbc0038I Pass  12: suminf.    0.58067 (3) obj. -41.8809 iterations 13
Cbc0038I Pass  13: suminf.    0.78971 (4) obj. -41.8809 iterations 12
Cbc0038I Pass  14: suminf.    0.51506 (4) obj. -41.8809 iterations 12
Cbc0038I Pass  15: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  16: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  17: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  18: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  19: suminf.    0.51506 (4) obj. -41.8809 iterations 12
Cbc0038I Pass  20: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  21: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  22: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  23: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  24: suminf.    0.51506 (4) obj. -41.8809 iterations 11
Cbc0038I Pass  25: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  26: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  27: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  28: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  29: suminf.    0.51506 (4) obj. -41.8809 iterations 11
Cbc0038I Pass  30: suminf.    0.09981 (2) obj. -47.3959 iterations 5
Cbc0038I Pass  31: suminf.    0.49263 (3) obj. -41.8809 iterations 12
Cbc0038I Pass  32: suminf.    0.49263 (3) obj. -41.8809 iterations 0
Cbc0038I Pass  33: suminf.    0.72499 (4) obj. -41.8809 iterations 6
Cbc0038I Pass  34: suminf.    0.51506 (4) obj. -41.8809 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 247 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 113 rows 119 columns - 17 fixed gives 96, 102 - ok now
Cbc0038I Full problem 348 rows 366 columns, reduced to 47 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -29.0898 - took 0.10 seconds
Cbc0012I Integer solution of -29.08979 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 44 rows 46 columns
Cbc0031I 147 added rows had average density of 79.278912
Cbc0013I At root node, 147 cuts changed objective from -157.00022 to -85.57137 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34882 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.444 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3235 row cuts average 361.4 elements, 0 column cuts (0 active)  in 1.262 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 468 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4284 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.781 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1504 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.910 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 336 row cuts average 240.9 elements, 0 column cuts (0 active)  in 0.227 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 351 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.08979 best solution, best possible -85.57137 (9.52 seconds)
Cbc0012I Integer solution of -45.12335 found by rounding after 16485 iterations and 1 nodes (9.58 seconds)
Cbc0012I Integer solution of -47.19704 found by rounding after 16817 iterations and 2 nodes (9.69 seconds)
Cbc0012I Integer solution of -56.49418 found by rounding after 16928 iterations and 3 nodes (9.81 seconds)
Cbc0012I Integer solution of -61.06204 found by rounding after 17023 iterations and 4 nodes (9.93 seconds)
Cbc0012I Integer solution of -62.84567 found by DiveCoefficient after 17060 iterations and 6 nodes (10.08 seconds)
Cbc0004I Integer solution of -63.63837 found after 17204 iterations and 9 nodes (10.20 seconds)
Cbc0010I After 10 nodes, 7 on tree, -63.63837 best solution, best possible -85.57137 (10.28 seconds)
Cbc0010I After 25 nodes, 1 on tree, -63.63837 best solution, best possible -85.57137 (11.12 seconds)
Cbc0010I After 27 nodes, 2 on tree, -63.63837 best solution, best possible -85.436829 (12.29 seconds)
Cbc0010I After 29 nodes, 4 on tree, -63.63837 best solution, best possible -85.436829 (13.48 seconds)
Cbc0010I After 31 nodes, 6 on tree, -63.63837 best solution, best possible -85.436829 (14.39 seconds)
Cbc0010I After 35 nodes, 10 on tree, -63.63837 best solution, best possible -85.436829 (15.65 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 168 rows 183 columns
Cbc0010I After 42 nodes, 7 on tree, -63.63837 best solution, best possible -85.436829 (16.36 seconds)
Cbc0010I After 52 nodes, 10 on tree, -63.63837 best solution, best possible -85.436829 (17.20 seconds)
Cbc0010I After 69 nodes, 13 on tree, -63.63837 best solution, best possible -85.436829 (17.92 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 150 rows 164 columns
Cbc0010I After 91 nodes, 14 on tree, -63.63837 best solution, best possible -85.436829 (18.75 seconds)
Cbc0010I After 118 nodes, 15 on tree, -63.63837 best solution, best possible -85.436829 (19.48 seconds)
Cbc0010I After 140 nodes, 12 on tree, -63.63837 best solution, best possible -85.436829 (20.22 seconds)
Cbc0010I After 158 nodes, 17 on tree, -63.63837 best solution, best possible -85.436829 (20.92 seconds)
Cbc0010I After 191 nodes, 12 on tree, -63.63837 best solution, best possible -85.436829 (21.63 seconds)
Cbc0010I After 213 nodes, 10 on tree, -63.63837 best solution, best possible -85.436829 (22.35 seconds)
Cbc0001I Search completed - best objective -63.63837000000001, took 43308 iterations and 234 nodes (22.73 seconds)
Cbc0032I Strong branching done 1428 times (42547 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 48, 1560 variables fixed on reduced cost
Total time (CPU seconds):       20.94   (Wallclock seconds):       22.83

