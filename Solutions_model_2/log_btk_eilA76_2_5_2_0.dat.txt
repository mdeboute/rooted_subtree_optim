Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 419 (-34) elements
Clp1000I sum of infeasibilities 0.000103614 - average 7.50823e-07, 15 fixed columns
Coin0506I Presolve 114 (-24) rows, 60 (-15) columns and 341 (-78) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Coin0511I After Postsolve, objective 51.978485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Coin0511I After Postsolve, objective 51.978485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.97848479 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.18539
Cbc0038I Solution found of -2.12714
Cbc0038I Relaxing continuous gives -10.0822
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 79 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.0822 to -25.0553 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.7418
Cbc0038I Pass   1: suminf.    2.78407 (38) obj. -27.7418 iterations 31
Cbc0038I Pass   2: suminf.    1.59327 (7) obj. -27.7418 iterations 39
Cbc0038I Pass   3: suminf.    1.09995 (5) obj. -27.7418 iterations 7
Cbc0038I Pass   4: suminf.    1.96614 (9) obj. -27.7418 iterations 14
Cbc0038I Pass   5: suminf.    1.71796 (5) obj. -27.7418 iterations 3
Cbc0038I Pass   6: suminf.    0.80129 (4) obj. -27.7418 iterations 3
Cbc0038I Pass   7: suminf.    0.73407 (3) obj. -27.7418 iterations 2
Cbc0038I Pass   8: suminf.    1.10993 (4) obj. -27.7418 iterations 3
Cbc0038I Pass   9: suminf.    2.51481 (7) obj. -27.7418 iterations 18
Cbc0038I Pass  10: suminf.    2.15320 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  11: suminf.    2.15320 (6) obj. -27.7418 iterations 0
Cbc0038I Pass  12: suminf.    2.06827 (7) obj. -27.7418 iterations 11
Cbc0038I Pass  13: suminf.    2.25354 (7) obj. -27.7418 iterations 5
Cbc0038I Pass  14: suminf.    2.10172 (8) obj. -27.7418 iterations 6
Cbc0038I Pass  15: suminf.    2.49914 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  16: suminf.    1.93678 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  17: suminf.    1.76819 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  18: suminf.    2.39567 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  19: suminf.    1.70432 (5) obj. -27.7418 iterations 3
Cbc0038I Pass  20: suminf.    1.87141 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  21: suminf.    2.49086 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  22: suminf.    1.92947 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  23: suminf.    1.91726 (7) obj. -27.7418 iterations 4
Cbc0038I Pass  24: suminf.    2.29922 (7) obj. -27.7418 iterations 4
Cbc0038I Pass  25: suminf.    1.11760 (5) obj. -27.7418 iterations 5
Cbc0038I Pass  26: suminf.    1.10016 (5) obj. -27.7418 iterations 1
Cbc0038I Pass  27: suminf.    1.49860 (6) obj. -27.7418 iterations 6
Cbc0038I Pass  28: suminf.    1.27452 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  29: suminf.    2.48581 (7) obj. -27.7418 iterations 7
Cbc0038I Pass  30: suminf.    2.39432 (8) obj. -27.7418 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 93 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -25.0553 - took 0.08 seconds
Cbc0012I Integer solution of -25.05527 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 79 rows 42 columns
Cbc0031I 25 added rows had average density of 41.52
Cbc0013I At root node, 25 cuts changed objective from -51.919549 to -45.696282 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11679 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1685 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.05527 best solution, best possible -45.696282 (0.81 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 76 rows 42 columns
Cbc0001I Search completed - best objective -25.05526999999999, took 9559 iterations and 70 nodes (1.10 seconds)
Cbc0032I Strong branching done 912 times (15340 iterations), fathomed 8 nodes and fixed 50 variables
Cbc0035I Maximum depth 17, 179 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 115 (-37) columns and 1974 (-1329) elements
Clp1000I sum of infeasibilities 2.12308e-07 - average 2.02198e-09, 66 fixed columns
Coin0506I Presolve 46 (-59) rows, 49 (-66) columns and 185 (-1789) elements
Clp0006I 0  Obj 7.5892679 Dual inf 3.44729 (48)
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 1.5260817 - largest nonzero change 2.639793e-05 ( 0.0016324266%) - largest zero change 2.9199064e-05
Clp0000I Optimal - objective value 8.0055092
Clp0000I Optimal - objective value 8.0055092
Coin0511I After Postsolve, objective 8.0055092, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 8.0055092 Dual inf 44.500637 (41)
Clp0014I Perturbing problem by 0.001% of 1.709601 - largest nonzero change 2.5641991e-05 ( 0.0017085143%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 64.369759
Clp0000I Optimal - objective value 64.369759
Clp0000I Optimal - objective value 64.369759
Coin0511I After Postsolve, objective 64.369759, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.36975925 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 118 columns (118 integer (118 of which binary)) and 1990 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.629%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 3.05479
Cbc0038I Pass   1: suminf.    2.54153 (27) obj. -59.963 iterations 17
Cbc0038I Pass   2: suminf.    0.78435 (13) obj. -35.4958 iterations 15
Cbc0038I Pass   3: suminf.    0.11083 (3) obj. -23.3852 iterations 10
Cbc0038I Solution found of -18.5605
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 118 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -18.5605 to -20.0077 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.1289
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.54153 (27) obj. -59.963 iterations 0
Cbc0038I Pass   5: suminf.    0.85752 (14) obj. -36.4226 iterations 14
Cbc0038I Pass   6: suminf.    0.47987 (2) obj. -24.1289 iterations 15
Cbc0038I Pass   7: suminf.    0.45161 (1) obj. -24.1708 iterations 2
Cbc0038I Pass   8: suminf.    0.45509 (1) obj. -24.1289 iterations 1
Cbc0038I Pass   9: suminf.    1.95030 (13) obj. -24.1289 iterations 42
Cbc0038I Pass  10: suminf.    1.14804 (11) obj. -24.1289 iterations 15
Cbc0038I Pass  11: suminf.    0.56383 (4) obj. -24.1289 iterations 15
Cbc0038I Pass  12: suminf.    0.34942 (4) obj. -24.1289 iterations 6
Cbc0038I Pass  13: suminf.    0.87884 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  14: suminf.    0.86985 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  15: suminf.    0.88947 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  16: suminf.    0.88947 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  17: suminf.    0.86985 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  18: suminf.    2.32539 (15) obj. -24.1289 iterations 37
Cbc0038I Pass  19: suminf.    2.03582 (15) obj. -25.2517 iterations 7
Cbc0038I Pass  20: suminf.    1.22812 (8) obj. -24.1289 iterations 17
Cbc0038I Pass  21: suminf.    0.82339 (7) obj. -24.1289 iterations 5
Cbc0038I Pass  22: suminf.    1.40464 (5) obj. -24.1289 iterations 18
Cbc0038I Pass  23: suminf.    0.83212 (5) obj. -24.4192 iterations 4
Cbc0038I Pass  24: suminf.    0.76815 (5) obj. -24.1289 iterations 1
Cbc0038I Pass  25: suminf.    1.67818 (12) obj. -24.1289 iterations 23
Cbc0038I Pass  26: suminf.    1.14094 (10) obj. -24.1289 iterations 11
Cbc0038I Pass  27: suminf.    1.06794 (10) obj. -24.928 iterations 5
Cbc0038I Pass  28: suminf.    1.38071 (7) obj. -24.1289 iterations 17
Cbc0038I Pass  29: suminf.    0.97636 (8) obj. -24.1289 iterations 4
Cbc0038I Pass  30: suminf.    1.30706 (5) obj. -24.1289 iterations 24
Cbc0038I Pass  31: suminf.    1.30706 (5) obj. -24.1289 iterations 0
Cbc0038I Pass  32: suminf.    0.92766 (5) obj. -24.1289 iterations 6
Cbc0038I Pass  33: suminf.    0.64315 (4) obj. -24.1289 iterations 4
Cbc0038I Rounding solution of -22.4563 is better than previous of -20.0077

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 118 columns, reduced to 38 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -22.4563 to -24.9333 (0.09 seconds)
Cbc0038I Round again with cutoff of -32.1904
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.54153 (27) obj. -59.963 iterations 0
Cbc0038I Pass  34: suminf.    1.01898 (16) obj. -39.183 iterations 12
Cbc0038I Pass  35: suminf.    0.86901 (8) obj. -32.1904 iterations 11
Cbc0038I Pass  36: suminf.    0.83486 (8) obj. -32.6876 iterations 1
Cbc0038I Pass  37: suminf.    0.91771 (4) obj. -32.1904 iterations 17
Cbc0038I Pass  38: suminf.    0.71218 (5) obj. -32.1904 iterations 7
Cbc0038I Pass  39: suminf.    0.87668 (6) obj. -32.1904 iterations 7
Cbc0038I Pass  40: suminf.    0.52319 (14) obj. -32.1904 iterations 14
Cbc0038I Pass  41: suminf.    1.43430 (9) obj. -32.1904 iterations 24
Cbc0038I Pass  42: suminf.    1.43430 (9) obj. -32.1904 iterations 2
Cbc0038I Pass  43: suminf.    2.36253 (15) obj. -32.1904 iterations 18
Cbc0038I Pass  44: suminf.    1.33522 (13) obj. -32.1904 iterations 5
Cbc0038I Pass  45: suminf.    1.35629 (11) obj. -32.1904 iterations 10
Cbc0038I Pass  46: suminf.    1.12179 (11) obj. -32.6594 iterations 5
Cbc0038I Pass  47: suminf.    1.35629 (11) obj. -32.1904 iterations 7
Cbc0038I Pass  48: suminf.    1.08253 (10) obj. -32.1904 iterations 32
Cbc0038I Pass  49: suminf.    1.06078 (10) obj. -32.1904 iterations 15
Cbc0038I Pass  50: suminf.    0.82185 (14) obj. -32.1904 iterations 33
Cbc0038I Pass  51: suminf.    0.71449 (14) obj. -32.1904 iterations 2
Cbc0038I Pass  52: suminf.    1.22527 (12) obj. -32.1904 iterations 23
Cbc0038I Pass  53: suminf.    0.88545 (12) obj. -32.1904 iterations 7
Cbc0038I Pass  54: suminf.    1.28437 (12) obj. -32.1904 iterations 7
Cbc0038I Pass  55: suminf.    1.66853 (10) obj. -32.1904 iterations 24
Cbc0038I Pass  56: suminf.    1.34530 (9) obj. -32.1904 iterations 6
Cbc0038I Pass  57: suminf.    1.30619 (8) obj. -32.1904 iterations 8
Cbc0038I Pass  58: suminf.    1.30108 (8) obj. -32.1904 iterations 5
Cbc0038I Pass  59: suminf.    1.55379 (12) obj. -32.1904 iterations 19
Cbc0038I Pass  60: suminf.    1.22778 (17) obj. -32.1904 iterations 10
Cbc0038I Pass  61: suminf.    1.35906 (8) obj. -32.1904 iterations 18
Cbc0038I Pass  62: suminf.    0.68702 (7) obj. -32.1904 iterations 5
Cbc0038I Rounding solution of -25.0304 is better than previous of -24.9333

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 118 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -25.0304 to -25.0553 (0.13 seconds)
Cbc0038I Round again with cutoff of -40.8988
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.54153 (27) obj. -59.963 iterations 0
Cbc0038I Pass  63: suminf.    1.34587 (11) obj. -40.8988 iterations 33
Cbc0038I Pass  64: suminf.    1.11536 (11) obj. -40.8988 iterations 2
Cbc0038I Pass  65: suminf.    1.05503 (11) obj. -40.8988 iterations 6
Cbc0038I Pass  66: suminf.    1.31756 (9) obj. -40.8988 iterations 21
Cbc0038I Pass  67: suminf.    1.14038 (10) obj. -40.8988 iterations 4
Cbc0038I Pass  68: suminf.    2.74869 (22) obj. -40.8988 iterations 13
Cbc0038I Pass  69: suminf.    0.97412 (8) obj. -41.2829 iterations 19
Cbc0038I Pass  70: suminf.    0.97412 (8) obj. -41.2829 iterations 0
Cbc0038I Pass  71: suminf.    1.16613 (8) obj. -40.8988 iterations 8
Cbc0038I Pass  72: suminf.    2.06609 (20) obj. -40.8988 iterations 25
Cbc0038I Pass  73: suminf.    1.56443 (13) obj. -40.8988 iterations 10
Cbc0038I Pass  74: suminf.    1.37170 (13) obj. -40.8988 iterations 5
Cbc0038I Pass  75: suminf.    1.21324 (10) obj. -40.8988 iterations 15
Cbc0038I Pass  76: suminf.    1.21324 (10) obj. -40.8988 iterations 0
Cbc0038I Pass  77: suminf.    1.20044 (9) obj. -40.8988 iterations 10
Cbc0038I Pass  78: suminf.    1.20044 (9) obj. -40.8988 iterations 1
Cbc0038I Pass  79: suminf.    1.21627 (9) obj. -40.8988 iterations 14
Cbc0038I Pass  80: suminf.    1.21627 (9) obj. -40.8988 iterations 5
Cbc0038I Pass  81: suminf.    1.22456 (9) obj. -40.8988 iterations 7
Cbc0038I Pass  82: suminf.    1.22456 (9) obj. -40.8988 iterations 5
Cbc0038I Pass  83: suminf.    2.45515 (25) obj. -40.8988 iterations 17
Cbc0038I Pass  84: suminf.    2.14809 (22) obj. -40.8988 iterations 6
Cbc0038I Pass  85: suminf.    2.56601 (20) obj. -40.8988 iterations 13
Cbc0038I Pass  86: suminf.    2.56337 (21) obj. -40.8988 iterations 2
Cbc0038I Pass  87: suminf.    3.36000 (21) obj. -40.8988 iterations 22
Cbc0038I Pass  88: suminf.    2.86942 (20) obj. -40.8988 iterations 7
Cbc0038I Pass  89: suminf.    2.36135 (21) obj. -40.8988 iterations 8
Cbc0038I Pass  90: suminf.    3.36000 (21) obj. -40.8988 iterations 9
Cbc0038I Pass  91: suminf.    4.15290 (31) obj. -40.8988 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -25.0553 - took 0.12 seconds
Cbc0012I Integer solution of -25.05527 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 108 rows 118 columns, reduced to 5 rows 9 columns
Cbc0031I 47 added rows had average density of 41.106383
Cbc0013I At root node, 47 cuts changed objective from -61.218465 to -31.428758 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9293 row cuts average 2.0 elements, 0 column cuts (17 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2214 row cuts average 108.5 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 464 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1194 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 347 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 316 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.580 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.05527 best solution, best possible -31.428758 (2.34 seconds)
Cbc0010I After 9 nodes, 8 on tree, -25.05527 best solution, best possible -31.428758 (3.04 seconds)
Cbc0010I After 34 nodes, 12 on tree, -25.05527 best solution, best possible -31.428758 (3.75 seconds)
Cbc0001I Search completed - best objective -25.05526999999999, took 6169 iterations and 48 nodes (3.92 seconds)
Cbc0032I Strong branching done 554 times (9197 iterations), fathomed 4 nodes and fixed 10 variables
Cbc0035I Maximum depth 21, 103 variables fixed on reduced cost
Total time (CPU seconds):       2.72   (Wallclock seconds):       3.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 419 (-34) elements
Clp1000I sum of infeasibilities 0.000103614 - average 7.50823e-07, 15 fixed columns
Coin0506I Presolve 114 (-24) rows, 60 (-15) columns and 341 (-78) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Coin0511I After Postsolve, objective 51.978485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Clp0000I Optimal - objective value 51.978485
Coin0511I After Postsolve, objective 51.978485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.97848479 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.18539
Cbc0038I Solution found of -2.12714
Cbc0038I Relaxing continuous gives -10.0822
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 79 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.0822 to -25.0553 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.7418
Cbc0038I Pass   1: suminf.    2.78407 (38) obj. -27.7418 iterations 31
Cbc0038I Pass   2: suminf.    1.59327 (7) obj. -27.7418 iterations 39
Cbc0038I Pass   3: suminf.    1.09995 (5) obj. -27.7418 iterations 7
Cbc0038I Pass   4: suminf.    1.96614 (9) obj. -27.7418 iterations 14
Cbc0038I Pass   5: suminf.    1.71796 (5) obj. -27.7418 iterations 3
Cbc0038I Pass   6: suminf.    0.80129 (4) obj. -27.7418 iterations 3
Cbc0038I Pass   7: suminf.    0.73407 (3) obj. -27.7418 iterations 2
Cbc0038I Pass   8: suminf.    1.10993 (4) obj. -27.7418 iterations 3
Cbc0038I Pass   9: suminf.    2.51481 (7) obj. -27.7418 iterations 18
Cbc0038I Pass  10: suminf.    2.15320 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  11: suminf.    2.15320 (6) obj. -27.7418 iterations 0
Cbc0038I Pass  12: suminf.    2.06827 (7) obj. -27.7418 iterations 11
Cbc0038I Pass  13: suminf.    2.25354 (7) obj. -27.7418 iterations 5
Cbc0038I Pass  14: suminf.    2.10172 (8) obj. -27.7418 iterations 6
Cbc0038I Pass  15: suminf.    2.49914 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  16: suminf.    1.93678 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  17: suminf.    1.76819 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  18: suminf.    2.39567 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  19: suminf.    1.70432 (5) obj. -27.7418 iterations 3
Cbc0038I Pass  20: suminf.    1.87141 (6) obj. -27.7418 iterations 8
Cbc0038I Pass  21: suminf.    2.49086 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  22: suminf.    1.92947 (6) obj. -27.7418 iterations 4
Cbc0038I Pass  23: suminf.    1.91726 (7) obj. -27.7418 iterations 4
Cbc0038I Pass  24: suminf.    2.29922 (7) obj. -27.7418 iterations 4
Cbc0038I Pass  25: suminf.    1.11760 (5) obj. -27.7418 iterations 5
Cbc0038I Pass  26: suminf.    1.10016 (5) obj. -27.7418 iterations 1
Cbc0038I Pass  27: suminf.    1.49860 (6) obj. -27.7418 iterations 6
Cbc0038I Pass  28: suminf.    1.27452 (6) obj. -27.7418 iterations 3
Cbc0038I Pass  29: suminf.    2.48581 (7) obj. -27.7418 iterations 7
Cbc0038I Pass  30: suminf.    2.39432 (8) obj. -27.7418 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 93 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -25.0553 - took 0.08 seconds
Cbc0012I Integer solution of -25.05527 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 79 rows 42 columns
Cbc0031I 25 added rows had average density of 41.52
Cbc0013I At root node, 25 cuts changed objective from -51.919549 to -45.696282 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11679 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1685 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.05527 best solution, best possible -45.696282 (0.82 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 76 rows 42 columns
Cbc0001I Search completed - best objective -25.05526999999999, took 9559 iterations and 70 nodes (1.12 seconds)
Cbc0032I Strong branching done 912 times (15340 iterations), fathomed 8 nodes and fixed 50 variables
Cbc0035I Maximum depth 17, 179 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 115 (-38) columns and 1974 (-1330) elements
Clp1000I sum of infeasibilities 2.12308e-07 - average 2.02198e-09, 66 fixed columns
Coin0506I Presolve 46 (-59) rows, 49 (-66) columns and 185 (-1789) elements
Clp0006I 0  Obj 7.5892679 Dual inf 3.44729 (48)
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 1.5260817 - largest nonzero change 2.639793e-05 ( 0.0016324266%) - largest zero change 2.9199064e-05
Clp0000I Optimal - objective value 8.0055092
Clp0000I Optimal - objective value 8.0055092
Coin0511I After Postsolve, objective 8.0055092, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 8.0055092 Dual inf 44.500637 (41)
Clp0014I Perturbing problem by 0.001% of 1.709601 - largest nonzero change 2.5641991e-05 ( 0.0017085143%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 64.369759
Clp0000I Optimal - objective value 64.369759
Clp0000I Optimal - objective value 64.369759
Coin0511I After Postsolve, objective 64.369759, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.36975925 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 118 columns (118 integer (118 of which binary)) and 1990 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.629%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 3.05479
Cbc0038I Pass   1: suminf.    2.54153 (27) obj. -59.963 iterations 17
Cbc0038I Pass   2: suminf.    0.78435 (13) obj. -35.4958 iterations 15
Cbc0038I Pass   3: suminf.    0.11083 (3) obj. -23.3852 iterations 10
Cbc0038I Solution found of -18.5605
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 118 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -18.5605 to -20.0077 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.1289
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.54153 (27) obj. -59.963 iterations 0
Cbc0038I Pass   5: suminf.    0.85752 (14) obj. -36.4226 iterations 14
Cbc0038I Pass   6: suminf.    0.47987 (2) obj. -24.1289 iterations 15
Cbc0038I Pass   7: suminf.    0.45161 (1) obj. -24.1708 iterations 2
Cbc0038I Pass   8: suminf.    0.45509 (1) obj. -24.1289 iterations 1
Cbc0038I Pass   9: suminf.    1.95030 (13) obj. -24.1289 iterations 42
Cbc0038I Pass  10: suminf.    1.14804 (11) obj. -24.1289 iterations 15
Cbc0038I Pass  11: suminf.    0.56383 (4) obj. -24.1289 iterations 15
Cbc0038I Pass  12: suminf.    0.34942 (4) obj. -24.1289 iterations 6
Cbc0038I Pass  13: suminf.    0.87884 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  14: suminf.    0.86985 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  15: suminf.    0.88947 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  16: suminf.    0.88947 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  17: suminf.    0.86985 (4) obj. -24.1289 iterations 5
Cbc0038I Pass  18: suminf.    2.32539 (15) obj. -24.1289 iterations 37
Cbc0038I Pass  19: suminf.    2.03582 (15) obj. -25.2517 iterations 7
Cbc0038I Pass  20: suminf.    1.22812 (8) obj. -24.1289 iterations 17
Cbc0038I Pass  21: suminf.    0.82339 (7) obj. -24.1289 iterations 5
Cbc0038I Pass  22: suminf.    1.40464 (5) obj. -24.1289 iterations 18
Cbc0038I Pass  23: suminf.    0.83212 (5) obj. -24.4192 iterations 4
Cbc0038I Pass  24: suminf.    0.76815 (5) obj. -24.1289 iterations 1
Cbc0038I Pass  25: suminf.    1.67818 (12) obj. -24.1289 iterations 23
Cbc0038I Pass  26: suminf.    1.14094 (10) obj. -24.1289 iterations 11
Cbc0038I Pass  27: suminf.    1.06794 (10) obj. -24.928 iterations 5
Cbc0038I Pass  28: suminf.    1.38071 (7) obj. -24.1289 iterations 17
Cbc0038I Pass  29: suminf.    0.97636 (8) obj. -24.1289 iterations 4
Cbc0038I Pass  30: suminf.    1.30706 (5) obj. -24.1289 iterations 24
Cbc0038I Pass  31: suminf.    1.30706 (5) obj. -24.1289 iterations 0
Cbc0038I Pass  32: suminf.    0.92766 (5) obj. -24.1289 iterations 6
Cbc0038I Pass  33: suminf.    0.64315 (4) obj. -24.1289 iterations 4
Cbc0038I Rounding solution of -22.4563 is better than previous of -20.0077

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 118 columns, reduced to 38 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -22.4563 to -24.9333 (0.09 seconds)
Cbc0038I Round again with cutoff of -32.1904
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.54153 (27) obj. -59.963 iterations 0
Cbc0038I Pass  34: suminf.    1.01898 (16) obj. -39.183 iterations 12
Cbc0038I Pass  35: suminf.    0.86901 (8) obj. -32.1904 iterations 11
Cbc0038I Pass  36: suminf.    0.83486 (8) obj. -32.6876 iterations 1
Cbc0038I Pass  37: suminf.    0.91771 (4) obj. -32.1904 iterations 17
Cbc0038I Pass  38: suminf.    0.71218 (5) obj. -32.1904 iterations 7
Cbc0038I Pass  39: suminf.    0.87668 (6) obj. -32.1904 iterations 7
Cbc0038I Pass  40: suminf.    0.52319 (14) obj. -32.1904 iterations 14
Cbc0038I Pass  41: suminf.    1.43430 (9) obj. -32.1904 iterations 24
Cbc0038I Pass  42: suminf.    1.43430 (9) obj. -32.1904 iterations 2
Cbc0038I Pass  43: suminf.    2.36253 (15) obj. -32.1904 iterations 18
Cbc0038I Pass  44: suminf.    1.33522 (13) obj. -32.1904 iterations 5
Cbc0038I Pass  45: suminf.    1.35629 (11) obj. -32.1904 iterations 10
Cbc0038I Pass  46: suminf.    1.12179 (11) obj. -32.6594 iterations 5
Cbc0038I Pass  47: suminf.    1.35629 (11) obj. -32.1904 iterations 7
Cbc0038I Pass  48: suminf.    1.08253 (10) obj. -32.1904 iterations 32
Cbc0038I Pass  49: suminf.    1.06078 (10) obj. -32.1904 iterations 15
Cbc0038I Pass  50: suminf.    0.82185 (14) obj. -32.1904 iterations 33
Cbc0038I Pass  51: suminf.    0.71449 (14) obj. -32.1904 iterations 2
Cbc0038I Pass  52: suminf.    1.22527 (12) obj. -32.1904 iterations 23
Cbc0038I Pass  53: suminf.    0.88545 (12) obj. -32.1904 iterations 7
Cbc0038I Pass  54: suminf.    1.28437 (12) obj. -32.1904 iterations 7
Cbc0038I Pass  55: suminf.    1.66853 (10) obj. -32.1904 iterations 24
Cbc0038I Pass  56: suminf.    1.34530 (9) obj. -32.1904 iterations 6
Cbc0038I Pass  57: suminf.    1.30619 (8) obj. -32.1904 iterations 8
Cbc0038I Pass  58: suminf.    1.30108 (8) obj. -32.1904 iterations 5
Cbc0038I Pass  59: suminf.    1.55379 (12) obj. -32.1904 iterations 19
Cbc0038I Pass  60: suminf.    1.22778 (17) obj. -32.1904 iterations 10
Cbc0038I Pass  61: suminf.    1.35906 (8) obj. -32.1904 iterations 18
Cbc0038I Pass  62: suminf.    0.68702 (7) obj. -32.1904 iterations 5
Cbc0038I Rounding solution of -25.0304 is better than previous of -24.9333

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 118 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -25.0304 to -25.0553 (0.13 seconds)
Cbc0038I Round again with cutoff of -40.8988
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.54153 (27) obj. -59.963 iterations 0
Cbc0038I Pass  63: suminf.    1.34587 (11) obj. -40.8988 iterations 33
Cbc0038I Pass  64: suminf.    1.11536 (11) obj. -40.8988 iterations 2
Cbc0038I Pass  65: suminf.    1.05503 (11) obj. -40.8988 iterations 6
Cbc0038I Pass  66: suminf.    1.31756 (9) obj. -40.8988 iterations 21
Cbc0038I Pass  67: suminf.    1.14038 (10) obj. -40.8988 iterations 4
Cbc0038I Pass  68: suminf.    2.74869 (22) obj. -40.8988 iterations 13
Cbc0038I Pass  69: suminf.    0.97412 (8) obj. -41.2829 iterations 19
Cbc0038I Pass  70: suminf.    0.97412 (8) obj. -41.2829 iterations 0
Cbc0038I Pass  71: suminf.    1.16613 (8) obj. -40.8988 iterations 8
Cbc0038I Pass  72: suminf.    2.06609 (20) obj. -40.8988 iterations 25
Cbc0038I Pass  73: suminf.    1.56443 (13) obj. -40.8988 iterations 10
Cbc0038I Pass  74: suminf.    1.37170 (13) obj. -40.8988 iterations 5
Cbc0038I Pass  75: suminf.    1.21324 (10) obj. -40.8988 iterations 15
Cbc0038I Pass  76: suminf.    1.21324 (10) obj. -40.8988 iterations 0
Cbc0038I Pass  77: suminf.    1.20044 (9) obj. -40.8988 iterations 10
Cbc0038I Pass  78: suminf.    1.20044 (9) obj. -40.8988 iterations 1
Cbc0038I Pass  79: suminf.    1.21627 (9) obj. -40.8988 iterations 14
Cbc0038I Pass  80: suminf.    1.21627 (9) obj. -40.8988 iterations 5
Cbc0038I Pass  81: suminf.    1.22456 (9) obj. -40.8988 iterations 7
Cbc0038I Pass  82: suminf.    1.22456 (9) obj. -40.8988 iterations 5
Cbc0038I Pass  83: suminf.    2.45515 (25) obj. -40.8988 iterations 17
Cbc0038I Pass  84: suminf.    2.14809 (22) obj. -40.8988 iterations 6
Cbc0038I Pass  85: suminf.    2.56601 (20) obj. -40.8988 iterations 13
Cbc0038I Pass  86: suminf.    2.56337 (21) obj. -40.8988 iterations 2
Cbc0038I Pass  87: suminf.    3.36000 (21) obj. -40.8988 iterations 22
Cbc0038I Pass  88: suminf.    2.86942 (20) obj. -40.8988 iterations 7
Cbc0038I Pass  89: suminf.    2.36135 (21) obj. -40.8988 iterations 8
Cbc0038I Pass  90: suminf.    3.36000 (21) obj. -40.8988 iterations 9
Cbc0038I Pass  91: suminf.    4.15290 (31) obj. -40.8988 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -25.0553 - took 0.13 seconds
Cbc0012I Integer solution of -25.05527 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 108 rows 118 columns, reduced to 5 rows 9 columns
Cbc0031I 47 added rows had average density of 41.106383
Cbc0013I At root node, 47 cuts changed objective from -61.218465 to -31.428758 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9293 row cuts average 2.0 elements, 0 column cuts (17 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2214 row cuts average 108.5 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 464 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1194 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 347 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 316 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.588 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.05527 best solution, best possible -31.428758 (2.40 seconds)
Cbc0010I After 9 nodes, 8 on tree, -25.05527 best solution, best possible -31.428758 (3.11 seconds)
Cbc0010I After 34 nodes, 12 on tree, -25.05527 best solution, best possible -31.428758 (3.82 seconds)
Cbc0001I Search completed - best objective -25.05526999999999, took 6169 iterations and 48 nodes (3.99 seconds)
Cbc0032I Strong branching done 554 times (9197 iterations), fathomed 4 nodes and fixed 10 variables
Cbc0035I Maximum depth 21, 103 variables fixed on reduced cost
Total time (CPU seconds):       2.77   (Wallclock seconds):       4.01

