Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 29 (-3) columns and 158 (-19) elements
Clp1000I sum of infeasibilities 1.54778e-05 - average 2.86625e-07, 2 fixed columns
Coin0506I Presolve 46 (-8) rows, 27 (-2) columns and 138 (-20) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 77.994349
Clp0000I Optimal - objective value 77.994349
Coin0511I After Postsolve, objective 77.994349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.994349
Clp0000I Optimal - objective value 77.994349
Clp0000I Optimal - objective value 77.994349
Coin0511I After Postsolve, objective 77.994349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.99434917 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 29 columns (28 integer (28 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.390%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.7999
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.48981 iterations 23
Cbc0038I Solution found of -8.48981
Cbc0038I Relaxing continuous gives -8.48981
Cbc0038I Rounding solution of -19.7551 is better than previous of -8.48981

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -19.7551 to -28.1225 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.1097
Cbc0038I Pass   2: suminf.    0.25802 (4) obj. -33.1097 iterations 6
Cbc0038I Pass   3: suminf.    0.25802 (4) obj. -33.1097 iterations 0
Cbc0038I Pass   4: suminf.    1.41301 (6) obj. -33.1097 iterations 8
Cbc0038I Pass   5: suminf.    1.18067 (5) obj. -33.1097 iterations 2
Cbc0038I Pass   6: suminf.    1.88928 (6) obj. -33.1097 iterations 7
Cbc0038I Pass   7: suminf.    1.39674 (5) obj. -33.1097 iterations 5
Cbc0038I Pass   8: suminf.    0.94778 (4) obj. -33.1097 iterations 2
Cbc0038I Pass   9: suminf.    1.88928 (6) obj. -33.1097 iterations 6
Cbc0038I Pass  10: suminf.    3.29358 (9) obj. -33.1097 iterations 13
Cbc0038I Pass  11: suminf.    1.87087 (6) obj. -33.1097 iterations 4
Cbc0038I Pass  12: suminf.    0.75878 (3) obj. -33.1097 iterations 6
Cbc0038I Pass  13: suminf.    0.39184 (4) obj. -33.1097 iterations 3
Cbc0038I Pass  14: suminf.    1.81702 (6) obj. -33.1097 iterations 5
Cbc0038I Pass  15: suminf.    2.98551 (10) obj. -33.1097 iterations 8
Cbc0038I Pass  16: suminf.    1.32039 (7) obj. -33.1097 iterations 8
Cbc0038I Pass  17: suminf.    1.49893 (6) obj. -33.1097 iterations 10
Cbc0038I Pass  18: suminf.    1.17149 (5) obj. -33.1097 iterations 2
Cbc0038I Pass  19: suminf.    1.88928 (6) obj. -33.1097 iterations 7
Cbc0038I Pass  20: suminf.    1.39674 (5) obj. -33.1097 iterations 5
Cbc0038I Pass  21: suminf.    0.94778 (4) obj. -33.1097 iterations 2
Cbc0038I Pass  22: suminf.    0.81207 (5) obj. -33.1097 iterations 10
Cbc0038I Pass  23: suminf.    0.65967 (5) obj. -33.1097 iterations 2
Cbc0038I Pass  24: suminf.    1.34395 (5) obj. -33.1097 iterations 8
Cbc0038I Pass  25: suminf.    1.21959 (5) obj. -33.1097 iterations 1
Cbc0038I Pass  26: suminf.    1.90548 (7) obj. -33.1097 iterations 9
Cbc0038I Pass  27: suminf.    1.53331 (6) obj. -33.1097 iterations 7
Cbc0038I Pass  28: suminf.    2.11125 (10) obj. -33.1097 iterations 11
Cbc0038I Pass  29: suminf.    1.08909 (6) obj. -33.1097 iterations 5
Cbc0038I Pass  30: suminf.    2.86429 (12) obj. -33.1097 iterations 8
Cbc0038I Pass  31: suminf.    1.81003 (10) obj. -33.1097 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 29 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -28.1225 - took 0.07 seconds
Cbc0012I Integer solution of -28.122467 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -77.994349 to -48.458636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2028 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 767 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0012I Integer solution of -28.265307 found by DiveCoefficient after 2615 iterations and 8 nodes (0.23 seconds)
Cbc0001I Search completed - best objective -28.26530699999999, took 3343 iterations and 16 nodes (0.29 seconds)
Cbc0032I Strong branching done 176 times (1518 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-15) rows, 49 (-11) columns and 451 (-161) elements
Clp1000I sum of infeasibilities 1.91061e-08 - average 4.06513e-10, 28 fixed columns
Coin0506I Presolve 17 (-30) rows, 21 (-28) columns and 71 (-380) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 0.43880399 - largest nonzero change 0 ( 0%) - largest zero change 1.1475306e-05
Clp0000I Optimal - objective value 13.743093
Clp0000I Optimal - objective value 13.743093
Coin0511I After Postsolve, objective 13.743093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3012579 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9944041e-05
Clp0000I Optimal - objective value 94.58332
Clp0000I Optimal - objective value 94.58332
Clp0000I Optimal - objective value 94.58332
Coin0511I After Postsolve, objective 94.58332, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.58332045 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 49 columns (49 integer (49 of which binary)) and 455 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.390%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.90699
Cbc0038I Pass   1: suminf.    2.10011 (15) obj. -62.9731 iterations 16
Cbc0038I Pass   2: suminf.    0.06250 (1) obj. -6.20276 iterations 14
Cbc0038I Solution found of -5.26526
Cbc0038I Rounding solution of -18.2244 is better than previous of -5.26526

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -18.2244 to -28.1224 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.6417
Cbc0038I Pass   3: suminf.    2.10011 (15) obj. -62.9731 iterations 0
Cbc0038I Pass   4: suminf.    1.30131 (4) obj. -33.6417 iterations 23
Cbc0038I Pass   5: suminf.    0.73429 (4) obj. -33.6417 iterations 5
Cbc0038I Pass   6: suminf.    1.30131 (4) obj. -33.6417 iterations 6
Cbc0038I Pass   7: suminf.    1.75425 (8) obj. -33.6417 iterations 15
Cbc0038I Pass   8: suminf.    1.30835 (8) obj. -33.6417 iterations 7
Cbc0038I Pass   9: suminf.    1.25524 (4) obj. -33.6417 iterations 9
Cbc0038I Pass  10: suminf.    1.25524 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  11: suminf.    1.07634 (4) obj. -33.6417 iterations 4
Cbc0038I Pass  12: suminf.    1.07634 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  13: suminf.    1.25524 (4) obj. -33.6417 iterations 3
Cbc0038I Pass  14: suminf.    1.30960 (5) obj. -39.2771 iterations 14
Cbc0038I Pass  15: suminf.    1.30960 (5) obj. -39.2771 iterations 4
Cbc0038I Pass  16: suminf.    1.12158 (4) obj. -33.6417 iterations 8
Cbc0038I Pass  17: suminf.    1.12158 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  18: suminf.    0.60615 (3) obj. -33.6417 iterations 6
Cbc0038I Pass  19: suminf.    0.65301 (3) obj. -33.6417 iterations 4
Cbc0038I Pass  20: suminf.    0.77632 (3) obj. -33.6417 iterations 2
Cbc0038I Pass  21: suminf.    0.77632 (2) obj. -33.6417 iterations 1
Cbc0038I Pass  22: suminf.    1.51488 (6) obj. -33.6417 iterations 8
Cbc0038I Pass  23: suminf.    1.51488 (6) obj. -33.6417 iterations 1
Cbc0038I Pass  24: suminf.    0.65301 (3) obj. -33.6417 iterations 6
Cbc0038I Pass  25: suminf.    0.65301 (3) obj. -33.6417 iterations 0
Cbc0038I Pass  26: suminf.    0.77632 (3) obj. -33.6417 iterations 1
Cbc0038I Pass  27: suminf.    0.77632 (2) obj. -33.6417 iterations 1
Cbc0038I Pass  28: suminf.    1.53103 (8) obj. -33.6417 iterations 16
Cbc0038I Pass  29: suminf.    1.53103 (8) obj. -33.6417 iterations 1
Cbc0038I Pass  30: suminf.    0.98521 (4) obj. -33.6417 iterations 6
Cbc0038I Pass  31: suminf.    0.98521 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  32: suminf.    1.30168 (4) obj. -33.6417 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -28.1224 - took 0.01 seconds
Cbc0012I Integer solution of -28.122417 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 49 columns, reduced to 13 rows 13 columns
Cbc0031I 15 added rows had average density of 23.2
Cbc0013I At root node, 15 cuts changed objective from -83.314071 to -33.846417 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 819 row cuts average 2.5 elements, 13 column cuts (13 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 437 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 177 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.122417 best solution, best possible -33.846417 (1.36 seconds)
Cbc0012I Integer solution of -28.265307 found by DiveCoefficient after 1479 iterations and 3 nodes (1.39 seconds)
Cbc0001I Search completed - best objective -28.26530699999999, took 1664 iterations and 6 nodes (1.40 seconds)
Cbc0032I Strong branching done 104 times (733 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.40

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 29 (-3) columns and 158 (-19) elements
Clp1000I sum of infeasibilities 1.54778e-05 - average 2.86625e-07, 2 fixed columns
Coin0506I Presolve 46 (-8) rows, 27 (-2) columns and 138 (-20) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 77.994349
Clp0000I Optimal - objective value 77.994349
Coin0511I After Postsolve, objective 77.994349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.994349
Clp0000I Optimal - objective value 77.994349
Clp0000I Optimal - objective value 77.994349
Coin0511I After Postsolve, objective 77.994349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.99434917 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 29 columns (28 integer (28 of which binary)) and 160 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.390%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.7999
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.48981 iterations 23
Cbc0038I Solution found of -8.48981
Cbc0038I Relaxing continuous gives -8.48981
Cbc0038I Rounding solution of -19.7551 is better than previous of -8.48981

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 29 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -19.7551 to -28.1225 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.1097
Cbc0038I Pass   2: suminf.    0.25802 (4) obj. -33.1097 iterations 6
Cbc0038I Pass   3: suminf.    0.25802 (4) obj. -33.1097 iterations 0
Cbc0038I Pass   4: suminf.    1.41301 (6) obj. -33.1097 iterations 8
Cbc0038I Pass   5: suminf.    1.18067 (5) obj. -33.1097 iterations 2
Cbc0038I Pass   6: suminf.    1.88928 (6) obj. -33.1097 iterations 7
Cbc0038I Pass   7: suminf.    1.39674 (5) obj. -33.1097 iterations 5
Cbc0038I Pass   8: suminf.    0.94778 (4) obj. -33.1097 iterations 2
Cbc0038I Pass   9: suminf.    1.88928 (6) obj. -33.1097 iterations 6
Cbc0038I Pass  10: suminf.    3.29358 (9) obj. -33.1097 iterations 13
Cbc0038I Pass  11: suminf.    1.87087 (6) obj. -33.1097 iterations 4
Cbc0038I Pass  12: suminf.    0.75878 (3) obj. -33.1097 iterations 6
Cbc0038I Pass  13: suminf.    0.39184 (4) obj. -33.1097 iterations 3
Cbc0038I Pass  14: suminf.    1.81702 (6) obj. -33.1097 iterations 5
Cbc0038I Pass  15: suminf.    2.98551 (10) obj. -33.1097 iterations 8
Cbc0038I Pass  16: suminf.    1.32039 (7) obj. -33.1097 iterations 8
Cbc0038I Pass  17: suminf.    1.49893 (6) obj. -33.1097 iterations 10
Cbc0038I Pass  18: suminf.    1.17149 (5) obj. -33.1097 iterations 2
Cbc0038I Pass  19: suminf.    1.88928 (6) obj. -33.1097 iterations 7
Cbc0038I Pass  20: suminf.    1.39674 (5) obj. -33.1097 iterations 5
Cbc0038I Pass  21: suminf.    0.94778 (4) obj. -33.1097 iterations 2
Cbc0038I Pass  22: suminf.    0.81207 (5) obj. -33.1097 iterations 10
Cbc0038I Pass  23: suminf.    0.65967 (5) obj. -33.1097 iterations 2
Cbc0038I Pass  24: suminf.    1.34395 (5) obj. -33.1097 iterations 8
Cbc0038I Pass  25: suminf.    1.21959 (5) obj. -33.1097 iterations 1
Cbc0038I Pass  26: suminf.    1.90548 (7) obj. -33.1097 iterations 9
Cbc0038I Pass  27: suminf.    1.53331 (6) obj. -33.1097 iterations 7
Cbc0038I Pass  28: suminf.    2.11125 (10) obj. -33.1097 iterations 11
Cbc0038I Pass  29: suminf.    1.08909 (6) obj. -33.1097 iterations 5
Cbc0038I Pass  30: suminf.    2.86429 (12) obj. -33.1097 iterations 8
Cbc0038I Pass  31: suminf.    1.81003 (10) obj. -33.1097 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 29 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -28.1225 - took 0.04 seconds
Cbc0012I Integer solution of -28.122467 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 12 added rows had average density of 18.25
Cbc0013I At root node, 12 cuts changed objective from -77.994349 to -48.458636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2028 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 767 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0012I Integer solution of -28.265307 found by DiveCoefficient after 2615 iterations and 8 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -28.26530699999999, took 3343 iterations and 16 nodes (0.33 seconds)
Cbc0032I Strong branching done 176 times (1518 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 49 (-12) columns and 451 (-162) elements
Clp1000I sum of infeasibilities 1.91061e-08 - average 4.06513e-10, 28 fixed columns
Coin0506I Presolve 17 (-30) rows, 21 (-28) columns and 71 (-380) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 0.43880399 - largest nonzero change 0 ( 0%) - largest zero change 1.1475306e-05
Clp0000I Optimal - objective value 13.743093
Clp0000I Optimal - objective value 13.743093
Coin0511I After Postsolve, objective 13.743093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3012579 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9944041e-05
Clp0000I Optimal - objective value 94.58332
Clp0000I Optimal - objective value 94.58332
Clp0000I Optimal - objective value 94.58332
Coin0511I After Postsolve, objective 94.58332, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.58332045 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 49 columns (49 integer (49 of which binary)) and 455 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.390%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.90699
Cbc0038I Pass   1: suminf.    2.10011 (15) obj. -62.9731 iterations 16
Cbc0038I Pass   2: suminf.    0.06250 (1) obj. -6.20276 iterations 14
Cbc0038I Solution found of -5.26526
Cbc0038I Rounding solution of -18.2244 is better than previous of -5.26526

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -18.2244 to -28.1224 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.6417
Cbc0038I Pass   3: suminf.    2.10011 (15) obj. -62.9731 iterations 0
Cbc0038I Pass   4: suminf.    1.30131 (4) obj. -33.6417 iterations 23
Cbc0038I Pass   5: suminf.    0.73429 (4) obj. -33.6417 iterations 5
Cbc0038I Pass   6: suminf.    1.30131 (4) obj. -33.6417 iterations 6
Cbc0038I Pass   7: suminf.    1.75425 (8) obj. -33.6417 iterations 15
Cbc0038I Pass   8: suminf.    1.30835 (8) obj. -33.6417 iterations 7
Cbc0038I Pass   9: suminf.    1.25524 (4) obj. -33.6417 iterations 9
Cbc0038I Pass  10: suminf.    1.25524 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  11: suminf.    1.07634 (4) obj. -33.6417 iterations 4
Cbc0038I Pass  12: suminf.    1.07634 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  13: suminf.    1.25524 (4) obj. -33.6417 iterations 3
Cbc0038I Pass  14: suminf.    1.30960 (5) obj. -39.2771 iterations 14
Cbc0038I Pass  15: suminf.    1.30960 (5) obj. -39.2771 iterations 4
Cbc0038I Pass  16: suminf.    1.12158 (4) obj. -33.6417 iterations 8
Cbc0038I Pass  17: suminf.    1.12158 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  18: suminf.    0.60615 (3) obj. -33.6417 iterations 6
Cbc0038I Pass  19: suminf.    0.65301 (3) obj. -33.6417 iterations 4
Cbc0038I Pass  20: suminf.    0.77632 (3) obj. -33.6417 iterations 2
Cbc0038I Pass  21: suminf.    0.77632 (2) obj. -33.6417 iterations 1
Cbc0038I Pass  22: suminf.    1.51488 (6) obj. -33.6417 iterations 8
Cbc0038I Pass  23: suminf.    1.51488 (6) obj. -33.6417 iterations 1
Cbc0038I Pass  24: suminf.    0.65301 (3) obj. -33.6417 iterations 6
Cbc0038I Pass  25: suminf.    0.65301 (3) obj. -33.6417 iterations 0
Cbc0038I Pass  26: suminf.    0.77632 (3) obj. -33.6417 iterations 1
Cbc0038I Pass  27: suminf.    0.77632 (2) obj. -33.6417 iterations 1
Cbc0038I Pass  28: suminf.    1.53103 (8) obj. -33.6417 iterations 16
Cbc0038I Pass  29: suminf.    1.53103 (8) obj. -33.6417 iterations 1
Cbc0038I Pass  30: suminf.    0.98521 (4) obj. -33.6417 iterations 6
Cbc0038I Pass  31: suminf.    0.98521 (4) obj. -33.6417 iterations 0
Cbc0038I Pass  32: suminf.    1.30168 (4) obj. -33.6417 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -28.1224 - took 0.01 seconds
Cbc0012I Integer solution of -28.122417 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 49 columns, reduced to 13 rows 13 columns
Cbc0031I 15 added rows had average density of 23.2
Cbc0013I At root node, 15 cuts changed objective from -83.314071 to -33.846417 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 819 row cuts average 2.5 elements, 13 column cuts (13 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 437 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 177 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.814 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.122417 best solution, best possible -33.846417 (1.71 seconds)
Cbc0012I Integer solution of -28.265307 found by DiveCoefficient after 1479 iterations and 3 nodes (1.74 seconds)
Cbc0001I Search completed - best objective -28.26530699999999, took 1664 iterations and 6 nodes (1.76 seconds)
Cbc0032I Strong branching done 104 times (733 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.76

