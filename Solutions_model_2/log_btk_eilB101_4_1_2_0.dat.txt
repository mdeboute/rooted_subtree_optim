Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 98 (-5) columns and 547 (-56) elements
Clp1000I sum of infeasibilities 1.64659e-05 - average 9.19885e-08, 23 fixed columns
Coin0506I Presolve 137 (-42) rows, 75 (-23) columns and 417 (-130) elements
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 1.800665 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 42.796209
Clp0000I Optimal - objective value 42.796209
Coin0511I After Postsolve, objective 42.796209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.796209
Clp0000I Optimal - objective value 42.796209
Clp0000I Optimal - objective value 42.796209
Coin0511I After Postsolve, objective 42.796209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.79620856 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 98 columns (97 integer (97 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.020%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.31698
Cbc0038I Solution found of 5.03653
Cbc0038I Relaxing continuous gives -3.22552
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 98 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.22552 to -16.4832 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.1145
Cbc0038I Pass   1: suminf.    2.67726 (30) obj. -19.1145 iterations 73
Cbc0038I Pass   2: suminf.    2.26126 (8) obj. -19.1145 iterations 36
Cbc0038I Pass   3: suminf.    1.60386 (5) obj. -19.1145 iterations 5
Cbc0038I Pass   4: suminf.    2.25856 (7) obj. -19.1145 iterations 7
Cbc0038I Pass   5: suminf.    2.11691 (7) obj. -19.1145 iterations 2
Cbc0038I Pass   6: suminf.    2.28213 (7) obj. -19.1145 iterations 6
Cbc0038I Pass   7: suminf.    2.19751 (7) obj. -19.1145 iterations 2
Cbc0038I Pass   8: suminf.    2.06258 (8) obj. -19.1145 iterations 5
Cbc0038I Pass   9: suminf.    2.03748 (7) obj. -19.1145 iterations 2
Cbc0038I Pass  10: suminf.    1.38874 (5) obj. -19.1145 iterations 8
Cbc0038I Pass  11: suminf.    1.38874 (5) obj. -19.1145 iterations 0
Cbc0038I Pass  12: suminf.    1.94522 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  13: suminf.    1.94522 (8) obj. -19.1145 iterations 0
Cbc0038I Pass  14: suminf.    2.49652 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  15: suminf.    2.19751 (7) obj. -19.1145 iterations 3
Cbc0038I Pass  16: suminf.    2.19751 (7) obj. -19.1145 iterations 0
Cbc0038I Pass  17: suminf.    2.06258 (8) obj. -19.1145 iterations 5
Cbc0038I Pass  18: suminf.    2.03748 (7) obj. -19.1145 iterations 2
Cbc0038I Pass  19: suminf.    1.38874 (5) obj. -19.1145 iterations 8
Cbc0038I Pass  20: suminf.    1.38874 (5) obj. -19.1145 iterations 0
Cbc0038I Pass  21: suminf.    1.94522 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  22: suminf.    1.94522 (8) obj. -19.1145 iterations 0
Cbc0038I Pass  23: suminf.    2.49652 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  24: suminf.    2.19751 (7) obj. -19.1145 iterations 3
Cbc0038I Pass  25: suminf.    2.19751 (7) obj. -19.1145 iterations 0
Cbc0038I Pass  26: suminf.    2.06258 (8) obj. -19.1145 iterations 5
Cbc0038I Pass  27: suminf.    2.03748 (7) obj. -19.1145 iterations 2
Cbc0038I Pass  28: suminf.    1.38874 (5) obj. -19.1145 iterations 8
Cbc0038I Pass  29: suminf.    1.38874 (5) obj. -19.1145 iterations 0
Cbc0038I Pass  30: suminf.    1.94522 (8) obj. -19.1145 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 98 columns, reduced to 96 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -16.4832 - took 0.07 seconds
Cbc0012I Integer solution of -16.48315 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 179 rows 98 columns, reduced to 78 rows 44 columns
Cbc0031I 23 added rows had average density of 77.826087
Cbc0013I At root node, 23 cuts changed objective from -42.796209 to -35.007071 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10599 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1551 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.48315 best solution, best possible -35.007071 (0.96 seconds)
Cbc0038I Full problem 179 rows 98 columns, reduced to 65 rows 37 columns
Cbc0012I Integer solution of -17.37445 found by rounding after 8287 iterations and 58 nodes (1.26 seconds)
Cbc0012I Integer solution of -17.44874 found by rounding after 8345 iterations and 62 nodes (1.26 seconds)
Cbc0001I Search completed - best objective -17.44874, took 9367 iterations and 90 nodes (1.32 seconds)
Cbc0032I Strong branching done 978 times (19975 iterations), fathomed 3 nodes and fixed 38 variables
Cbc0035I Maximum depth 36, 204 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-77) rows, 142 (-60) columns and 2504 (-3149) elements
Clp1000I sum of infeasibilities 1.2722e-07 - average 1.00173e-09, 82 fixed columns
Coin0506I Presolve 50 (-77) rows, 60 (-82) columns and 215 (-2289) elements
Clp0006I 0  Obj -8.7299977 Dual inf 4.6585424 (59)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 1.3339947 - largest nonzero change 2.9415203e-05 ( 0.0023005115%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value -7.3632101
Clp0000I Optimal - objective value -7.3632101
Coin0511I After Postsolve, objective -7.3632101, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.3632101 Dual inf 46.603407 (45)
Clp0014I Perturbing problem by 0.001% of 1.5575654 - largest nonzero change 2.8777792e-05 ( 0.0025539644%) - largest zero change 2.9816257e-05
Clp0000I Optimal - objective value 55.717769
Clp0000I Optimal - objective value 55.717769
Clp0000I Optimal - objective value 55.717769
Coin0511I After Postsolve, objective 55.717769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.71776929 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2517 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.802%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.90016
Cbc0038I Pass   1: suminf.    2.60040 (34) obj. -46.749 iterations 13
Cbc0038I Pass   2: suminf.    2.19226 (29) obj. -45.1801 iterations 2
Cbc0038I Pass   3: suminf.    0.74351 (13) obj. -15.5385 iterations 19
Cbc0038I Solution found of -1.39141
Cbc0038I Rounding solution of -3.80537 is better than previous of -1.39141

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3.80537 to -5.84818 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.2266
Cbc0038I Pass   4: suminf.    2.60040 (34) obj. -46.749 iterations 0
Cbc0038I Pass   5: suminf.    2.19226 (29) obj. -45.1801 iterations 3
Cbc0038I Pass   6: suminf.    0.55949 (7) obj. -10.2266 iterations 34
Cbc0038I Pass   7: suminf.    0.13580 (2) obj. -10.2266 iterations 8
Cbc0038I Pass   8: suminf.    0.87872 (2) obj. -10.2266 iterations 3
Cbc0038I Pass   9: suminf.    0.82603 (10) obj. -10.2266 iterations 37
Cbc0038I Pass  10: suminf.    0.73409 (10) obj. -10.2266 iterations 7
Cbc0038I Pass  11: suminf.    0.59132 (8) obj. -10.2266 iterations 18
Cbc0038I Pass  12: suminf.    0.46299 (6) obj. -10.2266 iterations 7
Cbc0038I Pass  13: suminf.    0.54480 (6) obj. -10.2266 iterations 6
Cbc0038I Pass  14: suminf.    0.97194 (10) obj. -10.2266 iterations 23
Cbc0038I Pass  15: suminf.    0.97194 (10) obj. -10.2266 iterations 4
Cbc0038I Pass  16: suminf.    1.10379 (8) obj. -10.2266 iterations 23
Cbc0038I Pass  17: suminf.    0.92433 (8) obj. -10.2266 iterations 3
Cbc0038I Pass  18: suminf.    1.99845 (7) obj. -10.2266 iterations 13
Cbc0038I Pass  19: suminf.    1.62442 (7) obj. -10.2266 iterations 7
Cbc0038I Pass  20: suminf.    0.93611 (5) obj. -10.2266 iterations 9
Cbc0038I Pass  21: suminf.    0.78752 (5) obj. -10.6723 iterations 4
Cbc0038I Pass  22: suminf.    1.34808 (12) obj. -10.2266 iterations 10
Cbc0038I Pass  23: suminf.    1.34808 (12) obj. -10.2266 iterations 3
Cbc0038I Pass  24: suminf.    1.46800 (8) obj. -10.2266 iterations 17
Cbc0038I Pass  25: suminf.    1.46800 (8) obj. -10.2266 iterations 4
Cbc0038I Pass  26: suminf.    1.74191 (10) obj. -10.2266 iterations 12
Cbc0038I Pass  27: suminf.    1.36257 (9) obj. -10.8391 iterations 6
Cbc0038I Pass  28: suminf.    1.74191 (10) obj. -10.2266 iterations 9
Cbc0038I Pass  29: suminf.    1.38845 (9) obj. -10.7874 iterations 8
Cbc0038I Pass  30: suminf.    1.92864 (17) obj. -10.2266 iterations 22
Cbc0038I Pass  31: suminf.    1.63476 (16) obj. -10.2266 iterations 13
Cbc0038I Pass  32: suminf.    1.13537 (13) obj. -10.2266 iterations 8
Cbc0038I Pass  33: suminf.    1.26337 (7) obj. -10.2266 iterations 20
Cbc0038I Rounding solution of -8.17661 is better than previous of -5.84818

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 52 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -8.17661 to -13.0588 (0.15 seconds)
Cbc0038I Round again with cutoff of -20.3734
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.60040 (34) obj. -46.749 iterations 0
Cbc0038I Pass  34: suminf.    2.19226 (29) obj. -45.1801 iterations 3
Cbc0038I Pass  35: suminf.    0.65462 (9) obj. -20.3734 iterations 43
Cbc0038I Pass  36: suminf.    0.52763 (12) obj. -20.3734 iterations 2
Cbc0038I Pass  37: suminf.    1.41919 (8) obj. -20.3734 iterations 28
Cbc0038I Pass  38: suminf.    1.24154 (9) obj. -20.3734 iterations 5
Cbc0038I Pass  39: suminf.    2.26635 (7) obj. -20.3734 iterations 15
Cbc0038I Pass  40: suminf.    2.26635 (7) obj. -20.3734 iterations 0
Cbc0038I Pass  41: suminf.    0.98279 (5) obj. -20.3734 iterations 8
Cbc0038I Pass  42: suminf.    0.79539 (5) obj. -20.9356 iterations 3
Cbc0038I Pass  43: suminf.    1.07649 (5) obj. -20.3734 iterations 20
Cbc0038I Pass  44: suminf.    1.80191 (11) obj. -20.3734 iterations 23
Cbc0038I Pass  45: suminf.    1.80191 (11) obj. -20.3734 iterations 1
Cbc0038I Pass  46: suminf.    1.13143 (6) obj. -20.3734 iterations 17
Cbc0038I Pass  47: suminf.    0.70196 (6) obj. -20.3734 iterations 4
Cbc0038I Pass  48: suminf.    1.27589 (7) obj. -20.3734 iterations 7
Cbc0038I Pass  49: suminf.    1.27589 (7) obj. -20.3734 iterations 1
Cbc0038I Pass  50: suminf.    0.96081 (6) obj. -20.3734 iterations 6
Cbc0038I Pass  51: suminf.    0.96081 (6) obj. -20.3734 iterations 3
Cbc0038I Pass  52: suminf.    1.01429 (6) obj. -20.3734 iterations 7
Cbc0038I Pass  53: suminf.    1.01429 (6) obj. -20.3734 iterations 6
Cbc0038I Pass  54: suminf.    0.96081 (6) obj. -20.3734 iterations 6
Cbc0038I Pass  55: suminf.    2.09712 (16) obj. -20.3734 iterations 22
Cbc0038I Pass  56: suminf.    1.19543 (11) obj. -21.5813 iterations 10
Cbc0038I Pass  57: suminf.    0.88073 (8) obj. -20.3734 iterations 31
Cbc0038I Pass  58: suminf.    0.88073 (8) obj. -20.3734 iterations 3
Cbc0038I Pass  59: suminf.    0.90159 (8) obj. -20.3734 iterations 8
Cbc0038I Pass  60: suminf.    0.90159 (8) obj. -20.3734 iterations 2
Cbc0038I Pass  61: suminf.    0.88073 (8) obj. -20.3734 iterations 9
Cbc0038I Pass  62: suminf.    2.03806 (12) obj. -20.3734 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 25 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -13.0588 - took 0.11 seconds
Cbc0012I Integer solution of -13.05882 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 14 rows 18 columns
Cbc0031I 54 added rows had average density of 41.740741
Cbc0013I At root node, 54 cuts changed objective from -49.631148 to -22.770234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16202 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1580 row cuts average 133.6 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 918 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 828 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 291 row cuts average 87.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 179 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.446 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.05882 best solution, best possible -22.770234 (2.39 seconds)
Cbc0012I Integer solution of -17.37445 found by rounding after 6222 iterations and 2 nodes (2.82 seconds)
Cbc0012I Integer solution of -17.44874 found by rounding after 6245 iterations and 3 nodes (2.89 seconds)
Cbc0010I After 6 nodes, 3 on tree, -17.44874 best solution, best possible -22.770234 (3.16 seconds)
Cbc0001I Search completed - best objective -17.44874, took 7397 iterations and 20 nodes (3.86 seconds)
Cbc0032I Strong branching done 426 times (9394 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 123 variables fixed on reduced cost
Total time (CPU seconds):       3.00   (Wallclock seconds):       3.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 98 (-5) columns and 547 (-56) elements
Clp1000I sum of infeasibilities 1.64659e-05 - average 9.19885e-08, 23 fixed columns
Coin0506I Presolve 137 (-42) rows, 75 (-23) columns and 417 (-130) elements
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 1.800665 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 42.796209
Clp0000I Optimal - objective value 42.796209
Coin0511I After Postsolve, objective 42.796209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.796209
Clp0000I Optimal - objective value 42.796209
Clp0000I Optimal - objective value 42.796209
Coin0511I After Postsolve, objective 42.796209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.79620856 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 98 columns (97 integer (97 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.020%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.31698
Cbc0038I Solution found of 5.03653
Cbc0038I Relaxing continuous gives -3.22552
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 98 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.22552 to -16.4832 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.1145
Cbc0038I Pass   1: suminf.    2.67726 (30) obj. -19.1145 iterations 73
Cbc0038I Pass   2: suminf.    2.26126 (8) obj. -19.1145 iterations 36
Cbc0038I Pass   3: suminf.    1.60386 (5) obj. -19.1145 iterations 5
Cbc0038I Pass   4: suminf.    2.25856 (7) obj. -19.1145 iterations 7
Cbc0038I Pass   5: suminf.    2.11691 (7) obj. -19.1145 iterations 2
Cbc0038I Pass   6: suminf.    2.28213 (7) obj. -19.1145 iterations 6
Cbc0038I Pass   7: suminf.    2.19751 (7) obj. -19.1145 iterations 2
Cbc0038I Pass   8: suminf.    2.06258 (8) obj. -19.1145 iterations 5
Cbc0038I Pass   9: suminf.    2.03748 (7) obj. -19.1145 iterations 2
Cbc0038I Pass  10: suminf.    1.38874 (5) obj. -19.1145 iterations 8
Cbc0038I Pass  11: suminf.    1.38874 (5) obj. -19.1145 iterations 0
Cbc0038I Pass  12: suminf.    1.94522 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  13: suminf.    1.94522 (8) obj. -19.1145 iterations 0
Cbc0038I Pass  14: suminf.    2.49652 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  15: suminf.    2.19751 (7) obj. -19.1145 iterations 3
Cbc0038I Pass  16: suminf.    2.19751 (7) obj. -19.1145 iterations 0
Cbc0038I Pass  17: suminf.    2.06258 (8) obj. -19.1145 iterations 5
Cbc0038I Pass  18: suminf.    2.03748 (7) obj. -19.1145 iterations 2
Cbc0038I Pass  19: suminf.    1.38874 (5) obj. -19.1145 iterations 8
Cbc0038I Pass  20: suminf.    1.38874 (5) obj. -19.1145 iterations 0
Cbc0038I Pass  21: suminf.    1.94522 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  22: suminf.    1.94522 (8) obj. -19.1145 iterations 0
Cbc0038I Pass  23: suminf.    2.49652 (8) obj. -19.1145 iterations 8
Cbc0038I Pass  24: suminf.    2.19751 (7) obj. -19.1145 iterations 3
Cbc0038I Pass  25: suminf.    2.19751 (7) obj. -19.1145 iterations 0
Cbc0038I Pass  26: suminf.    2.06258 (8) obj. -19.1145 iterations 5
Cbc0038I Pass  27: suminf.    2.03748 (7) obj. -19.1145 iterations 2
Cbc0038I Pass  28: suminf.    1.38874 (5) obj. -19.1145 iterations 8
Cbc0038I Pass  29: suminf.    1.38874 (5) obj. -19.1145 iterations 0
Cbc0038I Pass  30: suminf.    1.94522 (8) obj. -19.1145 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 98 columns, reduced to 96 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -16.4832 - took 0.08 seconds
Cbc0012I Integer solution of -16.48315 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 179 rows 98 columns, reduced to 78 rows 44 columns
Cbc0031I 23 added rows had average density of 77.826087
Cbc0013I At root node, 23 cuts changed objective from -42.796209 to -35.007071 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10599 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1551 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.48315 best solution, best possible -35.007071 (1.16 seconds)
Cbc0038I Full problem 179 rows 98 columns, reduced to 65 rows 37 columns
Cbc0012I Integer solution of -17.37445 found by rounding after 8287 iterations and 58 nodes (1.52 seconds)
Cbc0012I Integer solution of -17.44874 found by rounding after 8345 iterations and 62 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -17.44874, took 9367 iterations and 90 nodes (1.60 seconds)
Cbc0032I Strong branching done 978 times (19975 iterations), fathomed 3 nodes and fixed 38 variables
Cbc0035I Maximum depth 36, 204 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       1.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 142 (-61) columns and 2504 (-3150) elements
Clp1000I sum of infeasibilities 1.2722e-07 - average 1.00173e-09, 82 fixed columns
Coin0506I Presolve 50 (-77) rows, 60 (-82) columns and 215 (-2289) elements
Clp0006I 0  Obj -8.7299977 Dual inf 4.6585424 (59)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 1.3339947 - largest nonzero change 2.9415203e-05 ( 0.0023005115%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value -7.3632101
Clp0000I Optimal - objective value -7.3632101
Coin0511I After Postsolve, objective -7.3632101, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.3632101 Dual inf 46.603407 (45)
Clp0014I Perturbing problem by 0.001% of 1.5575654 - largest nonzero change 2.8777792e-05 ( 0.0025539644%) - largest zero change 2.9816257e-05
Clp0000I Optimal - objective value 55.717769
Clp0000I Optimal - objective value 55.717769
Clp0000I Optimal - objective value 55.717769
Coin0511I After Postsolve, objective 55.717769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.71776929 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2517 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.802%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.90016
Cbc0038I Pass   1: suminf.    2.60040 (34) obj. -46.749 iterations 13
Cbc0038I Pass   2: suminf.    2.19226 (29) obj. -45.1801 iterations 2
Cbc0038I Pass   3: suminf.    0.74351 (13) obj. -15.5385 iterations 19
Cbc0038I Solution found of -1.39141
Cbc0038I Rounding solution of -3.80537 is better than previous of -1.39141

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3.80537 to -5.84818 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.2266
Cbc0038I Pass   4: suminf.    2.60040 (34) obj. -46.749 iterations 0
Cbc0038I Pass   5: suminf.    2.19226 (29) obj. -45.1801 iterations 3
Cbc0038I Pass   6: suminf.    0.55949 (7) obj. -10.2266 iterations 34
Cbc0038I Pass   7: suminf.    0.13580 (2) obj. -10.2266 iterations 8
Cbc0038I Pass   8: suminf.    0.87872 (2) obj. -10.2266 iterations 3
Cbc0038I Pass   9: suminf.    0.82603 (10) obj. -10.2266 iterations 37
Cbc0038I Pass  10: suminf.    0.73409 (10) obj. -10.2266 iterations 7
Cbc0038I Pass  11: suminf.    0.59132 (8) obj. -10.2266 iterations 18
Cbc0038I Pass  12: suminf.    0.46299 (6) obj. -10.2266 iterations 7
Cbc0038I Pass  13: suminf.    0.54480 (6) obj. -10.2266 iterations 6
Cbc0038I Pass  14: suminf.    0.97194 (10) obj. -10.2266 iterations 23
Cbc0038I Pass  15: suminf.    0.97194 (10) obj. -10.2266 iterations 4
Cbc0038I Pass  16: suminf.    1.10379 (8) obj. -10.2266 iterations 23
Cbc0038I Pass  17: suminf.    0.92433 (8) obj. -10.2266 iterations 3
Cbc0038I Pass  18: suminf.    1.99845 (7) obj. -10.2266 iterations 13
Cbc0038I Pass  19: suminf.    1.62442 (7) obj. -10.2266 iterations 7
Cbc0038I Pass  20: suminf.    0.93611 (5) obj. -10.2266 iterations 9
Cbc0038I Pass  21: suminf.    0.78752 (5) obj. -10.6723 iterations 4
Cbc0038I Pass  22: suminf.    1.34808 (12) obj. -10.2266 iterations 10
Cbc0038I Pass  23: suminf.    1.34808 (12) obj. -10.2266 iterations 3
Cbc0038I Pass  24: suminf.    1.46800 (8) obj. -10.2266 iterations 17
Cbc0038I Pass  25: suminf.    1.46800 (8) obj. -10.2266 iterations 4
Cbc0038I Pass  26: suminf.    1.74191 (10) obj. -10.2266 iterations 12
Cbc0038I Pass  27: suminf.    1.36257 (9) obj. -10.8391 iterations 6
Cbc0038I Pass  28: suminf.    1.74191 (10) obj. -10.2266 iterations 9
Cbc0038I Pass  29: suminf.    1.38845 (9) obj. -10.7874 iterations 8
Cbc0038I Pass  30: suminf.    1.92864 (17) obj. -10.2266 iterations 22
Cbc0038I Pass  31: suminf.    1.63476 (16) obj. -10.2266 iterations 13
Cbc0038I Pass  32: suminf.    1.13537 (13) obj. -10.2266 iterations 8
Cbc0038I Pass  33: suminf.    1.26337 (7) obj. -10.2266 iterations 20
Cbc0038I Rounding solution of -8.17661 is better than previous of -5.84818

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 52 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -8.17661 to -13.0588 (0.13 seconds)
Cbc0038I Round again with cutoff of -20.3734
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.60040 (34) obj. -46.749 iterations 0
Cbc0038I Pass  34: suminf.    2.19226 (29) obj. -45.1801 iterations 3
Cbc0038I Pass  35: suminf.    0.65462 (9) obj. -20.3734 iterations 43
Cbc0038I Pass  36: suminf.    0.52763 (12) obj. -20.3734 iterations 2
Cbc0038I Pass  37: suminf.    1.41919 (8) obj. -20.3734 iterations 28
Cbc0038I Pass  38: suminf.    1.24154 (9) obj. -20.3734 iterations 5
Cbc0038I Pass  39: suminf.    2.26635 (7) obj. -20.3734 iterations 15
Cbc0038I Pass  40: suminf.    2.26635 (7) obj. -20.3734 iterations 0
Cbc0038I Pass  41: suminf.    0.98279 (5) obj. -20.3734 iterations 8
Cbc0038I Pass  42: suminf.    0.79539 (5) obj. -20.9356 iterations 3
Cbc0038I Pass  43: suminf.    1.07649 (5) obj. -20.3734 iterations 20
Cbc0038I Pass  44: suminf.    1.80191 (11) obj. -20.3734 iterations 23
Cbc0038I Pass  45: suminf.    1.80191 (11) obj. -20.3734 iterations 1
Cbc0038I Pass  46: suminf.    1.13143 (6) obj. -20.3734 iterations 17
Cbc0038I Pass  47: suminf.    0.70196 (6) obj. -20.3734 iterations 4
Cbc0038I Pass  48: suminf.    1.27589 (7) obj. -20.3734 iterations 7
Cbc0038I Pass  49: suminf.    1.27589 (7) obj. -20.3734 iterations 1
Cbc0038I Pass  50: suminf.    0.96081 (6) obj. -20.3734 iterations 6
Cbc0038I Pass  51: suminf.    0.96081 (6) obj. -20.3734 iterations 3
Cbc0038I Pass  52: suminf.    1.01429 (6) obj. -20.3734 iterations 7
Cbc0038I Pass  53: suminf.    1.01429 (6) obj. -20.3734 iterations 6
Cbc0038I Pass  54: suminf.    0.96081 (6) obj. -20.3734 iterations 6
Cbc0038I Pass  55: suminf.    2.09712 (16) obj. -20.3734 iterations 22
Cbc0038I Pass  56: suminf.    1.19543 (11) obj. -21.5813 iterations 10
Cbc0038I Pass  57: suminf.    0.88073 (8) obj. -20.3734 iterations 31
Cbc0038I Pass  58: suminf.    0.88073 (8) obj. -20.3734 iterations 3
Cbc0038I Pass  59: suminf.    0.90159 (8) obj. -20.3734 iterations 8
Cbc0038I Pass  60: suminf.    0.90159 (8) obj. -20.3734 iterations 2
Cbc0038I Pass  61: suminf.    0.88073 (8) obj. -20.3734 iterations 9
Cbc0038I Pass  62: suminf.    2.03806 (12) obj. -20.3734 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 25 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -13.0588 - took 0.11 seconds
Cbc0012I Integer solution of -13.05882 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 14 rows 18 columns
Cbc0031I 54 added rows had average density of 41.740741
Cbc0013I At root node, 54 cuts changed objective from -49.631148 to -22.770234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16202 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1580 row cuts average 133.6 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 918 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 828 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 291 row cuts average 87.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 179 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.535 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.05882 best solution, best possible -22.770234 (3.06 seconds)
Cbc0012I Integer solution of -17.37445 found by rounding after 6222 iterations and 2 nodes (3.55 seconds)
Cbc0012I Integer solution of -17.44874 found by rounding after 6245 iterations and 3 nodes (3.65 seconds)
Cbc0010I After 5 nodes, 2 on tree, -17.44874 best solution, best possible -22.770234 (3.88 seconds)
Cbc0010I After 15 nodes, 2 on tree, -17.44874 best solution, best possible -22.770234 (4.86 seconds)
Cbc0001I Search completed - best objective -17.44874, took 7397 iterations and 20 nodes (4.91 seconds)
Cbc0032I Strong branching done 426 times (9394 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 123 variables fixed on reduced cost
Total time (CPU seconds):       3.59   (Wallclock seconds):       4.93

