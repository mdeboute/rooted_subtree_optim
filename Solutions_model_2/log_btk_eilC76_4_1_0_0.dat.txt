Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 0.000102408 - average 7.47501e-07, 6 fixed columns
Coin0506I Presolve 125 (-12) rows, 69 (-7) columns and 381 (-37) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 56.735846
Clp0000I Optimal - objective value 56.735846
Coin0511I After Postsolve, objective 56.735846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.735846
Clp0000I Optimal - objective value 56.735846
Clp0000I Optimal - objective value 56.735846
Coin0511I After Postsolve, objective 56.735846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.73584601 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 9.2494
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.55241 iterations 61
Cbc0038I Solution found of 3.55241
Cbc0038I Relaxing continuous gives 3.55241
Cbc0038I Rounding solution of -5.65322 is better than previous of 3.55241

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 94 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -5.65322 to -25.5645 (0.05 seconds)
Cbc0038I Round again with cutoff of -28.6818
Cbc0038I Pass   2: suminf.    3.58332 (19) obj. -28.6818 iterations 23
Cbc0038I Pass   3: suminf.    3.58332 (19) obj. -28.6818 iterations 0
Cbc0038I Pass   4: suminf.    3.71648 (11) obj. -28.6818 iterations 22
Cbc0038I Pass   5: suminf.    3.36305 (10) obj. -28.6818 iterations 1
Cbc0038I Pass   6: suminf.    3.58692 (19) obj. -28.6818 iterations 24
Cbc0038I Pass   7: suminf.    3.53545 (11) obj. -28.6818 iterations 26
Cbc0038I Pass   8: suminf.    3.05313 (10) obj. -28.6818 iterations 9
Cbc0038I Pass   9: suminf.    3.06174 (9) obj. -28.6818 iterations 3
Cbc0038I Pass  10: suminf.    1.89437 (9) obj. -28.6818 iterations 11
Cbc0038I Pass  11: suminf.    1.89437 (9) obj. -28.6818 iterations 0
Cbc0038I Pass  12: suminf.    3.96710 (23) obj. -28.6818 iterations 24
Cbc0038I Pass  13: suminf.    3.82111 (38) obj. -28.6818 iterations 16
Cbc0038I Pass  14: suminf.    3.81139 (10) obj. -28.6818 iterations 44
Cbc0038I Pass  15: suminf.    3.81139 (10) obj. -28.6818 iterations 1
Cbc0038I Pass  16: suminf.    3.29718 (12) obj. -28.6818 iterations 23
Cbc0038I Pass  17: suminf.    2.90443 (20) obj. -28.6818 iterations 4
Cbc0038I Pass  18: suminf.    3.80494 (12) obj. -28.6818 iterations 15
Cbc0038I Pass  19: suminf.    1.93219 (9) obj. -28.6818 iterations 3
Cbc0038I Pass  20: suminf.    1.58613 (7) obj. -28.6818 iterations 4
Cbc0038I Pass  21: suminf.    1.44658 (7) obj. -28.6818 iterations 4
Cbc0038I Pass  22: suminf.    1.81230 (7) obj. -28.6818 iterations 9
Cbc0038I Pass  23: suminf.    1.44540 (4) obj. -28.6818 iterations 4
Cbc0038I Pass  24: suminf.    1.44540 (4) obj. -28.6818 iterations 0
Cbc0038I Pass  25: suminf.    1.37608 (6) obj. -28.6818 iterations 4
Cbc0038I Pass  26: suminf.    1.36422 (7) obj. -28.6818 iterations 3
Cbc0038I Pass  27: suminf.    1.73962 (5) obj. -28.6818 iterations 8
Cbc0038I Pass  28: suminf.    1.44540 (4) obj. -28.6818 iterations 3
Cbc0038I Pass  29: suminf.    1.44540 (4) obj. -28.6818 iterations 0
Cbc0038I Pass  30: suminf.    1.37608 (6) obj. -28.6818 iterations 4
Cbc0038I Pass  31: suminf.    1.36422 (7) obj. -28.6818 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -25.5645 - took 0.08 seconds
Cbc0012I Integer solution of -25.56453 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 94 rows 52 columns
Cbc0031I 29 added rows had average density of 55.482759
Cbc0013I At root node, 29 cuts changed objective from -56.735846 to -49.131293 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15395 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 205 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.56453 best solution, best possible -49.131293 (1.05 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 79 rows 44 columns
Cbc0038I Full problem 137 rows 76 columns, reduced to 17 rows 15 columns
Cbc0004I Integer solution of -25.62038 found after 14874 iterations and 135 nodes (1.70 seconds)
Cbc0012I Integer solution of -26.27142 found by rounding after 14932 iterations and 138 nodes (1.70 seconds)
Cbc0004I Integer solution of -26.54696 found after 15172 iterations and 152 nodes (1.73 seconds)
Cbc0004I Integer solution of -26.55653 found after 15181 iterations and 153 nodes (1.73 seconds)
Cbc0001I Search completed - best objective -26.55653, took 15648 iterations and 164 nodes (1.74 seconds)
Cbc0032I Strong branching done 1996 times (30615 iterations), fathomed 18 nodes and fixed 116 variables
Cbc0035I Maximum depth 28, 380 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       1.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 116 (-36) columns and 1844 (-1459) elements
Clp1000I sum of infeasibilities 1.54617e-06 - average 1.50113e-08, 58 fixed columns
Coin0506I Presolve 47 (-56) rows, 57 (-59) columns and 203 (-1641) elements
Clp0006I 0  Obj -4.7309125 Dual inf 1.1561488 (56)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 3.7835155 - largest nonzero change 3.3238445e-05 ( 0.00089819337%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value -2.4880109
Clp0000I Optimal - objective value -2.4880109
Coin0511I After Postsolve, objective -2.4880109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -2.4880109 Dual inf 42.994678 (41)
Clp0014I Perturbing problem by 0.001% of 1.8818053 - largest nonzero change 2.090649e-05 ( 0.0015380202%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 66.33189
Clp0000I Optimal - objective value 66.33189
Clp0000I Optimal - objective value 66.33189
Coin0511I After Postsolve, objective 66.33189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.33188988 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 116 columns (116 integer (116 of which binary)) and 1846 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.330%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.70291
Cbc0038I Pass   1: suminf.    2.07148 (29) obj. -52.3775 iterations 16
Cbc0038I Pass   2: suminf.    1.94296 (25) obj. -51.9932 iterations 8
Cbc0038I Solution found of -13.2829
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -13.2829 to -17.744 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.7293
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.07148 (29) obj. -52.3775 iterations 0
Cbc0038I Pass   4: suminf.    1.94296 (25) obj. -51.9932 iterations 6
Cbc0038I Pass   5: suminf.    0.86891 (10) obj. -21.7293 iterations 31
Cbc0038I Pass   6: suminf.    0.67139 (8) obj. -23.8702 iterations 3
Cbc0038I Pass   7: suminf.    0.55879 (4) obj. -21.7293 iterations 16
Cbc0038I Pass   8: suminf.    0.50940 (4) obj. -21.8281 iterations 5
Cbc0038I Pass   9: suminf.    1.35067 (12) obj. -27.9022 iterations 22
Cbc0038I Pass  10: suminf.    1.35067 (12) obj. -27.9022 iterations 6
Cbc0038I Pass  11: suminf.    1.05218 (6) obj. -21.7293 iterations 16
Cbc0038I Pass  12: suminf.    0.85286 (9) obj. -21.7293 iterations 6
Cbc0038I Pass  13: suminf.    0.85468 (7) obj. -21.7293 iterations 21
Cbc0038I Pass  14: suminf.    0.63473 (5) obj. -21.7293 iterations 7
Cbc0038I Pass  15: suminf.    0.65843 (5) obj. -21.7293 iterations 7
Cbc0038I Pass  16: suminf.    0.65843 (5) obj. -21.7293 iterations 3
Cbc0038I Pass  17: suminf.    0.63473 (5) obj. -21.7293 iterations 6
Cbc0038I Pass  18: suminf.    3.77664 (15) obj. -21.7293 iterations 44
Cbc0038I Pass  19: suminf.    1.21303 (12) obj. -21.7293 iterations 15
Cbc0038I Pass  20: suminf.    1.21303 (12) obj. -21.7293 iterations 0
Cbc0038I Pass  21: suminf.    0.68048 (6) obj. -21.7293 iterations 30
Cbc0038I Pass  22: suminf.    0.63100 (9) obj. -21.7293 iterations 10
Cbc0038I Pass  23: suminf.    1.05594 (6) obj. -21.7293 iterations 15
Cbc0038I Pass  24: suminf.    1.05594 (6) obj. -21.7293 iterations 7
Cbc0038I Pass  25: suminf.    1.03828 (6) obj. -21.7293 iterations 11
Cbc0038I Pass  26: suminf.    1.03828 (6) obj. -21.7293 iterations 7
Cbc0038I Pass  27: suminf.    1.05594 (6) obj. -21.7293 iterations 8
Cbc0038I Pass  28: suminf.    1.01959 (13) obj. -21.7293 iterations 25
Cbc0038I Pass  29: suminf.    0.87261 (9) obj. -21.7293 iterations 8
Cbc0038I Pass  30: suminf.    1.69508 (8) obj. -21.7293 iterations 13
Cbc0038I Pass  31: suminf.    1.29135 (8) obj. -21.7293 iterations 1
Cbc0038I Pass  32: suminf.    1.26179 (8) obj. -21.7293 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 45 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -17.744 to -21.4407 (0.08 seconds)
Cbc0038I Round again with cutoff of -28.9028
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.07148 (29) obj. -52.3775 iterations 0
Cbc0038I Pass  33: suminf.    1.94296 (25) obj. -51.9932 iterations 6
Cbc0038I Pass  34: suminf.    1.04186 (14) obj. -28.9028 iterations 28
Cbc0038I Pass  35: suminf.    0.92678 (12) obj. -30.4182 iterations 2
Cbc0038I Pass  36: suminf.    0.97207 (8) obj. -28.9028 iterations 23
Cbc0038I Pass  37: suminf.    0.94347 (8) obj. -28.96 iterations 5
Cbc0038I Pass  38: suminf.    2.56748 (16) obj. -28.9028 iterations 22
Cbc0038I Pass  39: suminf.    1.19588 (11) obj. -28.9028 iterations 9
Cbc0038I Pass  40: suminf.    1.70603 (10) obj. -28.9028 iterations 5
Cbc0038I Pass  41: suminf.    1.24160 (10) obj. -28.9028 iterations 2
Cbc0038I Pass  42: suminf.    2.04293 (16) obj. -28.9028 iterations 13
Cbc0038I Pass  43: suminf.    1.33656 (14) obj. -28.9028 iterations 5
Cbc0038I Pass  44: suminf.    1.82392 (13) obj. -28.9028 iterations 9
Cbc0038I Pass  45: suminf.    1.82392 (13) obj. -28.9028 iterations 2
Cbc0038I Pass  46: suminf.    1.83025 (13) obj. -28.9028 iterations 5
Cbc0038I Pass  47: suminf.    1.31075 (13) obj. -28.9028 iterations 3
Cbc0038I Pass  48: suminf.    2.31831 (17) obj. -28.9028 iterations 14
Cbc0038I Pass  49: suminf.    1.76332 (14) obj. -29.0893 iterations 6
Cbc0038I Pass  50: suminf.    1.76439 (12) obj. -28.9028 iterations 11
Cbc0038I Pass  51: suminf.    1.76439 (12) obj. -28.9028 iterations 0
Cbc0038I Pass  52: suminf.    2.03795 (12) obj. -28.9028 iterations 13
Cbc0038I Pass  53: suminf.    1.50647 (12) obj. -28.9028 iterations 4
Cbc0038I Pass  54: suminf.    1.43872 (12) obj. -28.9028 iterations 7
Cbc0038I Pass  55: suminf.    1.43872 (12) obj. -28.9028 iterations 3
Cbc0038I Pass  56: suminf.    1.40500 (12) obj. -28.9028 iterations 6
Cbc0038I Pass  57: suminf.    1.40500 (12) obj. -28.9028 iterations 4
Cbc0038I Pass  58: suminf.    4.53260 (20) obj. -28.9028 iterations 15
Cbc0038I Pass  59: suminf.    1.97909 (15) obj. -28.9028 iterations 10
Cbc0038I Pass  60: suminf.    1.97909 (15) obj. -28.9028 iterations 0
Cbc0038I Pass  61: suminf.    1.12485 (10) obj. -28.9028 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -21.4407 - took 0.10 seconds
Cbc0012I Integer solution of -21.44067 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 103 rows 116 columns, reduced to 33 rows 39 columns
Cbc0031I 54 added rows had average density of 30.907407
Cbc0013I At root node, 54 cuts changed objective from -57.596566 to -33.709143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11807 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1100 row cuts average 105.8 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 465 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 692 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 225 row cuts average 68.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.650 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.44067 best solution, best possible -33.709143 (2.18 seconds)
Cbc0012I Integer solution of -25.33908 found by rounding after 5395 iterations and 11 nodes (2.60 seconds)
Cbc0016I Integer solution of -25.8847 found by strong branching after 5403 iterations and 13 nodes (2.60 seconds)
Cbc0012I Integer solution of -26.27142 found by rounding after 6109 iterations and 28 nodes (2.70 seconds)
Cbc0004I Integer solution of -26.54696 found after 6169 iterations and 34 nodes (2.72 seconds)
Cbc0004I Integer solution of -26.55653 found after 6178 iterations and 36 nodes (2.72 seconds)
Cbc0001I Search completed - best objective -26.55653, took 6331 iterations and 38 nodes (2.73 seconds)
Cbc0032I Strong branching done 484 times (10679 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 109 variables fixed on reduced cost
Total time (CPU seconds):       2.15   (Wallclock seconds):       2.74

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 0.000102408 - average 7.47501e-07, 6 fixed columns
Coin0506I Presolve 125 (-12) rows, 69 (-7) columns and 381 (-37) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 56.735846
Clp0000I Optimal - objective value 56.735846
Coin0511I After Postsolve, objective 56.735846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.735846
Clp0000I Optimal - objective value 56.735846
Clp0000I Optimal - objective value 56.735846
Coin0511I After Postsolve, objective 56.735846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.73584601 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 9.2494
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.55241 iterations 61
Cbc0038I Solution found of 3.55241
Cbc0038I Relaxing continuous gives 3.55241
Cbc0038I Rounding solution of -5.65322 is better than previous of 3.55241

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 94 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -5.65322 to -25.5645 (0.06 seconds)
Cbc0038I Round again with cutoff of -28.6818
Cbc0038I Pass   2: suminf.    3.58332 (19) obj. -28.6818 iterations 23
Cbc0038I Pass   3: suminf.    3.58332 (19) obj. -28.6818 iterations 0
Cbc0038I Pass   4: suminf.    3.71648 (11) obj. -28.6818 iterations 22
Cbc0038I Pass   5: suminf.    3.36305 (10) obj. -28.6818 iterations 1
Cbc0038I Pass   6: suminf.    3.58692 (19) obj. -28.6818 iterations 24
Cbc0038I Pass   7: suminf.    3.53545 (11) obj. -28.6818 iterations 26
Cbc0038I Pass   8: suminf.    3.05313 (10) obj. -28.6818 iterations 9
Cbc0038I Pass   9: suminf.    3.06174 (9) obj. -28.6818 iterations 3
Cbc0038I Pass  10: suminf.    1.89437 (9) obj. -28.6818 iterations 11
Cbc0038I Pass  11: suminf.    1.89437 (9) obj. -28.6818 iterations 0
Cbc0038I Pass  12: suminf.    3.96710 (23) obj. -28.6818 iterations 24
Cbc0038I Pass  13: suminf.    3.82111 (38) obj. -28.6818 iterations 16
Cbc0038I Pass  14: suminf.    3.81139 (10) obj. -28.6818 iterations 44
Cbc0038I Pass  15: suminf.    3.81139 (10) obj. -28.6818 iterations 1
Cbc0038I Pass  16: suminf.    3.29718 (12) obj. -28.6818 iterations 23
Cbc0038I Pass  17: suminf.    2.90443 (20) obj. -28.6818 iterations 4
Cbc0038I Pass  18: suminf.    3.80494 (12) obj. -28.6818 iterations 15
Cbc0038I Pass  19: suminf.    1.93219 (9) obj. -28.6818 iterations 3
Cbc0038I Pass  20: suminf.    1.58613 (7) obj. -28.6818 iterations 4
Cbc0038I Pass  21: suminf.    1.44658 (7) obj. -28.6818 iterations 4
Cbc0038I Pass  22: suminf.    1.81230 (7) obj. -28.6818 iterations 9
Cbc0038I Pass  23: suminf.    1.44540 (4) obj. -28.6818 iterations 4
Cbc0038I Pass  24: suminf.    1.44540 (4) obj. -28.6818 iterations 0
Cbc0038I Pass  25: suminf.    1.37608 (6) obj. -28.6818 iterations 4
Cbc0038I Pass  26: suminf.    1.36422 (7) obj. -28.6818 iterations 3
Cbc0038I Pass  27: suminf.    1.73962 (5) obj. -28.6818 iterations 8
Cbc0038I Pass  28: suminf.    1.44540 (4) obj. -28.6818 iterations 3
Cbc0038I Pass  29: suminf.    1.44540 (4) obj. -28.6818 iterations 0
Cbc0038I Pass  30: suminf.    1.37608 (6) obj. -28.6818 iterations 4
Cbc0038I Pass  31: suminf.    1.36422 (7) obj. -28.6818 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -25.5645 - took 0.09 seconds
Cbc0012I Integer solution of -25.56453 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 94 rows 52 columns
Cbc0031I 29 added rows had average density of 55.482759
Cbc0013I At root node, 29 cuts changed objective from -56.735846 to -49.131293 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15395 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 205 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.56453 best solution, best possible -49.131293 (1.13 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 79 rows 44 columns
Cbc0038I Full problem 137 rows 76 columns, reduced to 17 rows 15 columns
Cbc0010I After 123 nodes, 16 on tree, -25.56453 best solution, best possible -49.131122 (1.83 seconds)
Cbc0004I Integer solution of -25.62038 found after 14874 iterations and 135 nodes (1.84 seconds)
Cbc0012I Integer solution of -26.27142 found by rounding after 14932 iterations and 138 nodes (1.85 seconds)
Cbc0004I Integer solution of -26.54696 found after 15172 iterations and 152 nodes (1.88 seconds)
Cbc0004I Integer solution of -26.55653 found after 15181 iterations and 153 nodes (1.88 seconds)
Cbc0001I Search completed - best objective -26.55653, took 15648 iterations and 164 nodes (1.90 seconds)
Cbc0032I Strong branching done 1996 times (30615 iterations), fathomed 18 nodes and fixed 116 variables
Cbc0035I Maximum depth 28, 380 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       1.92

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 116 (-37) columns and 1844 (-1460) elements
Clp1000I sum of infeasibilities 1.54617e-06 - average 1.50113e-08, 58 fixed columns
Coin0506I Presolve 47 (-56) rows, 57 (-59) columns and 203 (-1641) elements
Clp0006I 0  Obj -4.7309125 Dual inf 1.1561488 (56)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 3.7835155 - largest nonzero change 3.3238445e-05 ( 0.00089819337%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value -2.4880109
Clp0000I Optimal - objective value -2.4880109
Coin0511I After Postsolve, objective -2.4880109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -2.4880109 Dual inf 42.994678 (41)
Clp0014I Perturbing problem by 0.001% of 1.8818053 - largest nonzero change 2.090649e-05 ( 0.0015380202%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 66.33189
Clp0000I Optimal - objective value 66.33189
Clp0000I Optimal - objective value 66.33189
Coin0511I After Postsolve, objective 66.33189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.33188988 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 116 columns (116 integer (116 of which binary)) and 1846 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.330%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.70291
Cbc0038I Pass   1: suminf.    2.07148 (29) obj. -52.3775 iterations 16
Cbc0038I Pass   2: suminf.    1.94296 (25) obj. -51.9932 iterations 8
Cbc0038I Solution found of -13.2829
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -13.2829 to -17.744 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.7293
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.07148 (29) obj. -52.3775 iterations 0
Cbc0038I Pass   4: suminf.    1.94296 (25) obj. -51.9932 iterations 6
Cbc0038I Pass   5: suminf.    0.86891 (10) obj. -21.7293 iterations 31
Cbc0038I Pass   6: suminf.    0.67139 (8) obj. -23.8702 iterations 3
Cbc0038I Pass   7: suminf.    0.55879 (4) obj. -21.7293 iterations 16
Cbc0038I Pass   8: suminf.    0.50940 (4) obj. -21.8281 iterations 5
Cbc0038I Pass   9: suminf.    1.35067 (12) obj. -27.9022 iterations 22
Cbc0038I Pass  10: suminf.    1.35067 (12) obj. -27.9022 iterations 6
Cbc0038I Pass  11: suminf.    1.05218 (6) obj. -21.7293 iterations 16
Cbc0038I Pass  12: suminf.    0.85286 (9) obj. -21.7293 iterations 6
Cbc0038I Pass  13: suminf.    0.85468 (7) obj. -21.7293 iterations 21
Cbc0038I Pass  14: suminf.    0.63473 (5) obj. -21.7293 iterations 7
Cbc0038I Pass  15: suminf.    0.65843 (5) obj. -21.7293 iterations 7
Cbc0038I Pass  16: suminf.    0.65843 (5) obj. -21.7293 iterations 3
Cbc0038I Pass  17: suminf.    0.63473 (5) obj. -21.7293 iterations 6
Cbc0038I Pass  18: suminf.    3.77664 (15) obj. -21.7293 iterations 44
Cbc0038I Pass  19: suminf.    1.21303 (12) obj. -21.7293 iterations 15
Cbc0038I Pass  20: suminf.    1.21303 (12) obj. -21.7293 iterations 0
Cbc0038I Pass  21: suminf.    0.68048 (6) obj. -21.7293 iterations 30
Cbc0038I Pass  22: suminf.    0.63100 (9) obj. -21.7293 iterations 10
Cbc0038I Pass  23: suminf.    1.05594 (6) obj. -21.7293 iterations 15
Cbc0038I Pass  24: suminf.    1.05594 (6) obj. -21.7293 iterations 7
Cbc0038I Pass  25: suminf.    1.03828 (6) obj. -21.7293 iterations 11
Cbc0038I Pass  26: suminf.    1.03828 (6) obj. -21.7293 iterations 7
Cbc0038I Pass  27: suminf.    1.05594 (6) obj. -21.7293 iterations 8
Cbc0038I Pass  28: suminf.    1.01959 (13) obj. -21.7293 iterations 25
Cbc0038I Pass  29: suminf.    0.87261 (9) obj. -21.7293 iterations 8
Cbc0038I Pass  30: suminf.    1.69508 (8) obj. -21.7293 iterations 13
Cbc0038I Pass  31: suminf.    1.29135 (8) obj. -21.7293 iterations 1
Cbc0038I Pass  32: suminf.    1.26179 (8) obj. -21.7293 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 45 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -17.744 to -21.4407 (0.08 seconds)
Cbc0038I Round again with cutoff of -28.9028
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.07148 (29) obj. -52.3775 iterations 0
Cbc0038I Pass  33: suminf.    1.94296 (25) obj. -51.9932 iterations 6
Cbc0038I Pass  34: suminf.    1.04186 (14) obj. -28.9028 iterations 28
Cbc0038I Pass  35: suminf.    0.92678 (12) obj. -30.4182 iterations 2
Cbc0038I Pass  36: suminf.    0.97207 (8) obj. -28.9028 iterations 23
Cbc0038I Pass  37: suminf.    0.94347 (8) obj. -28.96 iterations 5
Cbc0038I Pass  38: suminf.    2.56748 (16) obj. -28.9028 iterations 22
Cbc0038I Pass  39: suminf.    1.19588 (11) obj. -28.9028 iterations 9
Cbc0038I Pass  40: suminf.    1.70603 (10) obj. -28.9028 iterations 5
Cbc0038I Pass  41: suminf.    1.24160 (10) obj. -28.9028 iterations 2
Cbc0038I Pass  42: suminf.    2.04293 (16) obj. -28.9028 iterations 13
Cbc0038I Pass  43: suminf.    1.33656 (14) obj. -28.9028 iterations 5
Cbc0038I Pass  44: suminf.    1.82392 (13) obj. -28.9028 iterations 9
Cbc0038I Pass  45: suminf.    1.82392 (13) obj. -28.9028 iterations 2
Cbc0038I Pass  46: suminf.    1.83025 (13) obj. -28.9028 iterations 5
Cbc0038I Pass  47: suminf.    1.31075 (13) obj. -28.9028 iterations 3
Cbc0038I Pass  48: suminf.    2.31831 (17) obj. -28.9028 iterations 14
Cbc0038I Pass  49: suminf.    1.76332 (14) obj. -29.0893 iterations 6
Cbc0038I Pass  50: suminf.    1.76439 (12) obj. -28.9028 iterations 11
Cbc0038I Pass  51: suminf.    1.76439 (12) obj. -28.9028 iterations 0
Cbc0038I Pass  52: suminf.    2.03795 (12) obj. -28.9028 iterations 13
Cbc0038I Pass  53: suminf.    1.50647 (12) obj. -28.9028 iterations 4
Cbc0038I Pass  54: suminf.    1.43872 (12) obj. -28.9028 iterations 7
Cbc0038I Pass  55: suminf.    1.43872 (12) obj. -28.9028 iterations 3
Cbc0038I Pass  56: suminf.    1.40500 (12) obj. -28.9028 iterations 6
Cbc0038I Pass  57: suminf.    1.40500 (12) obj. -28.9028 iterations 4
Cbc0038I Pass  58: suminf.    4.53260 (20) obj. -28.9028 iterations 15
Cbc0038I Pass  59: suminf.    1.97909 (15) obj. -28.9028 iterations 10
Cbc0038I Pass  60: suminf.    1.97909 (15) obj. -28.9028 iterations 0
Cbc0038I Pass  61: suminf.    1.12485 (10) obj. -28.9028 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -21.4407 - took 0.11 seconds
Cbc0012I Integer solution of -21.44067 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 103 rows 116 columns, reduced to 33 rows 39 columns
Cbc0031I 54 added rows had average density of 30.907407
Cbc0013I At root node, 54 cuts changed objective from -57.596566 to -33.709143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11807 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1100 row cuts average 105.8 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 465 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 692 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 225 row cuts average 68.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.44067 best solution, best possible -33.709143 (2.67 seconds)
Cbc0012I Integer solution of -25.33908 found by rounding after 5395 iterations and 11 nodes (3.19 seconds)
Cbc0016I Integer solution of -25.8847 found by strong branching after 5403 iterations and 13 nodes (3.19 seconds)
Cbc0012I Integer solution of -26.27142 found by rounding after 6109 iterations and 28 nodes (3.34 seconds)
Cbc0010I After 33 nodes, 4 on tree, -26.27142 best solution, best possible -31.845376 (3.37 seconds)
Cbc0004I Integer solution of -26.54696 found after 6169 iterations and 34 nodes (3.37 seconds)
Cbc0004I Integer solution of -26.55653 found after 6178 iterations and 36 nodes (3.37 seconds)
Cbc0001I Search completed - best objective -26.55653, took 6331 iterations and 38 nodes (3.38 seconds)
Cbc0032I Strong branching done 484 times (10679 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 109 variables fixed on reduced cost
Total time (CPU seconds):       2.56   (Wallclock seconds):       3.40

