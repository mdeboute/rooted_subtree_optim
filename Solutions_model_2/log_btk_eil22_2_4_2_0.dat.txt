Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 8.74197e-08 - average 2.49771e-09, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 21 (-1) columns and 101 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 55.980757
Clp0000I Optimal - objective value 55.980757
Coin0511I After Postsolve, objective 55.980757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.980757
Clp0000I Optimal - objective value 55.980757
Clp0000I Optimal - objective value 55.980757
Coin0511I After Postsolve, objective 55.980757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.98075659 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.79157
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.25 iterations 15
Cbc0038I Solution found of 6.25
Cbc0038I Relaxing continuous gives 6.25
Cbc0038I Rounding solution of -13.5375 is better than previous of 6.25

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -17.7819
Cbc0038I Pass   2: suminf.    0.57783 (2) obj. -17.7819 iterations 2
Cbc0038I Pass   3: suminf.    0.16973 (1) obj. -17.7819 iterations 1
Cbc0038I Pass   4: suminf.    0.41012 (1) obj. -17.7819 iterations 1
Cbc0038I Pass   5: suminf.    2.03151 (5) obj. -17.7819 iterations 7
Cbc0038I Pass   6: suminf.    0.65579 (2) obj. -17.7819 iterations 7
Cbc0038I Pass   7: suminf.    2.11740 (6) obj. -17.7819 iterations 6
Cbc0038I Pass   8: suminf.    1.04929 (4) obj. -17.7819 iterations 9
Cbc0038I Pass   9: suminf.    0.95911 (5) obj. -17.7819 iterations 2
Cbc0038I Pass  10: suminf.    0.43917 (2) obj. -17.7819 iterations 5
Cbc0038I Pass  11: suminf.    0.46278 (1) obj. -17.7819 iterations 2
Cbc0038I Pass  12: suminf.    0.27579 (1) obj. -17.7819 iterations 2
Cbc0038I Pass  13: suminf.    0.16973 (1) obj. -17.7819 iterations 3
Cbc0038I Pass  14: suminf.    0.41012 (1) obj. -17.7819 iterations 1
Cbc0038I Pass  15: suminf.    0.41012 (1) obj. -17.7819 iterations 0
Cbc0038I Pass  16: suminf.    1.99348 (5) obj. -17.7819 iterations 5
Cbc0038I Pass  17: suminf.    1.28220 (4) obj. -17.7819 iterations 5
Cbc0038I Pass  18: suminf.    0.56758 (4) obj. -17.7819 iterations 2
Cbc0038I Pass  19: suminf.    0.42000 (4) obj. -17.7819 iterations 3
Cbc0038I Pass  20: suminf.    0.94608 (7) obj. -17.7819 iterations 4
Cbc0038I Pass  21: suminf.    0.77350 (12) obj. -17.7819 iterations 7
Cbc0038I Pass  22: suminf.    1.27138 (4) obj. -17.7819 iterations 15
Cbc0038I Pass  23: suminf.    1.27138 (4) obj. -17.7819 iterations 1
Cbc0038I Pass  24: suminf.    1.16713 (4) obj. -17.7819 iterations 5
Cbc0038I Pass  25: suminf.    0.79801 (3) obj. -17.7819 iterations 1
Cbc0038I Pass  26: suminf.    0.79478 (3) obj. -17.7819 iterations 1
Cbc0038I Pass  27: suminf.    2.78264 (8) obj. -17.7819 iterations 10
Cbc0038I Pass  28: suminf.    1.26774 (5) obj. -17.7819 iterations 6
Cbc0038I Pass  29: suminf.    1.25528 (5) obj. -17.7819 iterations 1
Cbc0038I Pass  30: suminf.    1.17389 (4) obj. -17.7819 iterations 5
Cbc0038I Pass  31: suminf.    0.56028 (3) obj. -17.7819 iterations 2
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -25.4217
Cbc0038I Pass  31: suminf.    0.52347 (2) obj. -25.4217 iterations 1
Cbc0038I Pass  32: suminf.    0.52347 (2) obj. -25.4217 iterations 0
Cbc0038I Pass  33: suminf.    0.91600 (2) obj. -25.4217 iterations 1
Cbc0038I Pass  34: suminf.    1.41991 (4) obj. -25.4217 iterations 2
Cbc0038I Pass  35: suminf.    0.87937 (2) obj. -25.4217 iterations 2
Cbc0038I Pass  36: suminf.    2.14525 (7) obj. -25.4217 iterations 5
Cbc0038I Pass  37: suminf.    3.76581 (9) obj. -25.4217 iterations 14
Cbc0038I Pass  38: suminf.    2.14868 (8) obj. -25.4217 iterations 7
Cbc0038I Pass  39: suminf.    1.41309 (12) obj. -25.4217 iterations 18
Cbc0038I Pass  40: suminf.    1.41309 (12) obj. -25.4217 iterations 0
Cbc0038I Pass  41: suminf.    1.30818 (4) obj. -25.4217 iterations 13
Cbc0038I Pass  42: suminf.    1.30818 (4) obj. -25.4217 iterations 1
Cbc0038I Pass  43: suminf.    1.14774 (4) obj. -25.4217 iterations 4
Cbc0038I Pass  44: suminf.    1.08205 (4) obj. -25.4217 iterations 1
Cbc0038I Pass  45: suminf.    0.92140 (4) obj. -25.4217 iterations 6
Cbc0038I Pass  46: suminf.    0.88574 (5) obj. -25.4217 iterations 2
Cbc0038I Pass  47: suminf.    0.84927 (3) obj. -25.4217 iterations 6
Cbc0038I Pass  48: suminf.    0.58865 (2) obj. -25.4217 iterations 3
Cbc0038I Pass  49: suminf.    0.52347 (2) obj. -25.4217 iterations 2
Cbc0038I Pass  50: suminf.    0.52347 (2) obj. -25.4217 iterations 0
Cbc0038I Pass  51: suminf.    0.91600 (2) obj. -25.4217 iterations 1
Cbc0038I Pass  52: suminf.    0.80682 (3) obj. -25.4217 iterations 5
Cbc0038I Pass  53: suminf.    0.59370 (2) obj. -25.4217 iterations 6
Cbc0038I Pass  54: suminf.    1.69771 (7) obj. -25.4217 iterations 9
Cbc0038I Pass  55: suminf.    1.18012 (6) obj. -25.4217 iterations 1
Cbc0038I Pass  56: suminf.    1.41309 (12) obj. -25.4217 iterations 11
Cbc0038I Pass  57: suminf.    1.30818 (4) obj. -25.4217 iterations 13
Cbc0038I Pass  58: suminf.    1.30818 (4) obj. -25.4217 iterations 1
Cbc0038I Pass  59: suminf.    1.14774 (4) obj. -25.4217 iterations 4
Cbc0038I Pass  60: suminf.    1.08205 (4) obj. -25.4217 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -13.5375 - took 0.05 seconds
Cbc0012I Integer solution of -13.5375 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 23 rows 15 columns
Cbc0031I 10 added rows had average density of 18.5
Cbc0013I At root node, 10 cuts changed objective from -55.980757 to -33.455202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1326 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 562 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13.5375, took 1938 iterations and 2 nodes (0.16 seconds)
Cbc0032I Strong branching done 22 times (275 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-12) rows, 41 (-3) columns and 308 (-52) elements
Clp1000I sum of infeasibilities 1.00739e-09 - average 2.9629e-11, 28 fixed columns
Coin0506I Presolve 8 (-26) rows, 13 (-28) columns and 37 (-271) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 3.0939574 - largest nonzero change 1.7201597e-05 ( 0.00066957451%) - largest zero change 1.919719e-05
Clp0000I Optimal - objective value -15.130808
Clp0000I Optimal - objective value -15.130808
Coin0511I After Postsolve, objective -15.130808, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5480466 - largest nonzero change 2.5938216e-05 ( 0.0018425102%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 83.114706
Clp0000I Optimal - objective value 83.114706
Clp0000I Optimal - objective value 83.114706
Coin0511I After Postsolve, objective 83.114706, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.11470584 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 41 columns (41 integer (41 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.140%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.14066
Cbc0038I Pass   1: suminf.    2.27842 (12) obj. -38.7171 iterations 8
Cbc0038I Pass   2: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Solution found of 2.74132
Cbc0038I Rounding solution of -1.2691 is better than previous of 2.74132

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -1.2691 to -4.7341 (0.01 seconds)
Cbc0038I Round again with cutoff of -10.0709
Cbc0038I Pass   3: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass   4: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass   5: suminf.    0.60307 (2) obj. -10.0709 iterations 13
Cbc0038I Pass   6: suminf.    0.53053 (2) obj. -18.6797 iterations 1
Cbc0038I Pass   7: suminf.    0.21053 (1) obj. -10.6797 iterations 1
Cbc0038I Pass   8: suminf.    1.43284 (7) obj. -26.496 iterations 11
Cbc0038I Pass   9: suminf.    1.21595 (6) obj. -25.8853 iterations 2
Cbc0038I Pass  10: suminf.    0.61504 (3) obj. -10.0709 iterations 7
Cbc0038I Pass  11: suminf.    0.44929 (3) obj. -10.0709 iterations 1
Cbc0038I Pass  12: suminf.    0.25053 (2) obj. -14.1552 iterations 2
Cbc0038I Pass  13: suminf.    0.21053 (1) obj. -13.1552 iterations 1
Cbc0038I Pass  14: suminf.    0.49078 (2) obj. -10.0709 iterations 2
Cbc0038I Pass  15: suminf.    1.79565 (7) obj. -10.0709 iterations 8
Cbc0038I Pass  16: suminf.    1.75133 (7) obj. -10.0709 iterations 3
Cbc0038I Pass  17: suminf.    1.44337 (4) obj. -10.0709 iterations 9
Cbc0038I Pass  18: suminf.    0.64348 (4) obj. -10.0709 iterations 7
Cbc0038I Pass  19: suminf.    0.64348 (4) obj. -10.0709 iterations 1
Cbc0038I Pass  20: suminf.    0.83065 (3) obj. -10.0709 iterations 3
Cbc0038I Pass  21: suminf.    0.83065 (3) obj. -10.0709 iterations 0
Cbc0038I Pass  22: suminf.    0.72681 (3) obj. -10.0709 iterations 2
Cbc0038I Pass  23: suminf.    0.72681 (3) obj. -10.0709 iterations 1
Cbc0038I Pass  24: suminf.    1.84948 (9) obj. -10.0709 iterations 12
Cbc0038I Pass  25: suminf.    1.50867 (9) obj. -10.0709 iterations 4
Cbc0038I Pass  26: suminf.    0.53064 (4) obj. -10.0709 iterations 12
Cbc0038I Pass  27: suminf.    0.49237 (3) obj. -10.0709 iterations 3
Cbc0038I Pass  28: suminf.    0.91460 (4) obj. -10.0709 iterations 2
Cbc0038I Pass  29: suminf.    0.92681 (3) obj. -10.0709 iterations 4
Cbc0038I Pass  30: suminf.    0.92681 (3) obj. -10.0709 iterations 1
Cbc0038I Pass  31: suminf.    0.81742 (3) obj. -10.0709 iterations 2
Cbc0038I Pass  32: suminf.    0.59338 (3) obj. -13.8795 iterations 1
Cbc0038I Rounding solution of -8.50702 is better than previous of -4.7341

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -19.6769
Cbc0038I Pass  32: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  33: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  34: suminf.    0.62610 (6) obj. -19.6769 iterations 13
Cbc0038I Pass  35: suminf.    0.62610 (6) obj. -19.6769 iterations 0
Cbc0038I Pass  36: suminf.    0.55295 (3) obj. -19.6769 iterations 6
Cbc0038I Pass  37: suminf.    0.31579 (2) obj. -20.5946 iterations 2
Cbc0038I Pass  38: suminf.    0.55295 (3) obj. -19.6769 iterations 3
Cbc0038I Pass  39: suminf.    1.98974 (8) obj. -19.6769 iterations 10
Cbc0038I Pass  40: suminf.    1.71810 (8) obj. -19.7107 iterations 2
Cbc0038I Pass  41: suminf.    1.31372 (8) obj. -19.6769 iterations 8
Cbc0038I Pass  42: suminf.    1.25075 (5) obj. -22.6037 iterations 3
Cbc0038I Pass  43: suminf.    0.92340 (4) obj. -19.6769 iterations 7
Cbc0038I Pass  44: suminf.    0.31579 (2) obj. -20.5946 iterations 3
Cbc0038I Pass  45: suminf.    0.55295 (3) obj. -19.6769 iterations 3
Cbc0038I Pass  46: suminf.    2.35620 (10) obj. -19.6769 iterations 15
Cbc0038I Pass  47: suminf.    1.96424 (8) obj. -19.6769 iterations 3
Cbc0038I Pass  48: suminf.    1.02669 (5) obj. -19.6769 iterations 9
Cbc0038I Pass  49: suminf.    1.02669 (5) obj. -19.6769 iterations 0
Cbc0038I Pass  50: suminf.    0.96373 (5) obj. -19.6769 iterations 2
Cbc0038I Pass  51: suminf.    0.96373 (5) obj. -19.6769 iterations 0
Cbc0038I Pass  52: suminf.    1.18804 (5) obj. -19.6769 iterations 2
Cbc0038I Pass  53: suminf.    1.31251 (6) obj. -19.6769 iterations 9
Cbc0038I Pass  54: suminf.    0.77272 (4) obj. -19.6769 iterations 6
Cbc0038I Pass  55: suminf.    1.08933 (4) obj. -19.6769 iterations 3
Cbc0038I Pass  56: suminf.    1.02119 (5) obj. -19.6769 iterations 1
Cbc0038I Pass  57: suminf.    1.06875 (6) obj. -19.6769 iterations 8
Cbc0038I Pass  58: suminf.    1.06875 (6) obj. -19.6769 iterations 0
Cbc0038I Pass  59: suminf.    1.83592 (6) obj. -19.6769 iterations 2
Cbc0038I Pass  60: suminf.    1.17612 (5) obj. -21.4947 iterations 1
Cbc0038I Pass  61: suminf.    1.83592 (6) obj. -19.6769 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -8.50702 to -13.5375 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.2042
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  62: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  63: suminf.    1.00289 (6) obj. -31.2042 iterations 13
Cbc0038I Pass  64: suminf.    0.93898 (6) obj. -31.2042 iterations 2
Cbc0038I Pass  65: suminf.    0.90829 (4) obj. -31.2042 iterations 15
Cbc0038I Pass  66: suminf.    0.64049 (4) obj. -31.2042 iterations 3
Cbc0038I Pass  67: suminf.    0.76617 (4) obj. -31.2042 iterations 2
Cbc0038I Pass  68: suminf.    1.36597 (7) obj. -31.2042 iterations 9
Cbc0038I Pass  69: suminf.    1.36597 (7) obj. -31.2042 iterations 1
Cbc0038I Pass  70: suminf.    0.76617 (4) obj. -31.2042 iterations 4
Cbc0038I Pass  71: suminf.    2.02874 (7) obj. -31.2042 iterations 8
Cbc0038I Pass  72: suminf.    1.38177 (6) obj. -31.293 iterations 3
Cbc0038I Pass  73: suminf.    1.37238 (7) obj. -31.2042 iterations 2
Cbc0038I Pass  74: suminf.    1.61112 (6) obj. -31.2042 iterations 5
Cbc0038I Pass  75: suminf.    1.53152 (7) obj. -31.2042 iterations 2
Cbc0038I Pass  76: suminf.    1.61112 (6) obj. -31.2042 iterations 3
Cbc0038I Pass  77: suminf.    2.42869 (10) obj. -31.2042 iterations 6
Cbc0038I Pass  78: suminf.    1.93070 (9) obj. -31.2042 iterations 3
Cbc0038I Pass  79: suminf.    1.61112 (6) obj. -31.2042 iterations 7
Cbc0038I Pass  80: suminf.    2.05419 (10) obj. -31.2042 iterations 12
Cbc0038I Pass  81: suminf.    1.72072 (9) obj. -31.2042 iterations 3
Cbc0038I Pass  82: suminf.    1.85195 (8) obj. -31.2042 iterations 7
Cbc0038I Pass  83: suminf.    1.78539 (9) obj. -31.2042 iterations 2
Cbc0038I Pass  84: suminf.    1.40421 (6) obj. -31.2042 iterations 8
Cbc0038I Pass  85: suminf.    1.37479 (6) obj. -31.2042 iterations 1
Cbc0038I Pass  86: suminf.    0.64049 (4) obj. -31.2042 iterations 3
Cbc0038I Pass  87: suminf.    0.76617 (4) obj. -31.2042 iterations 2
Cbc0038I Pass  88: suminf.    1.77568 (7) obj. -31.2042 iterations 5
Cbc0038I Pass  89: suminf.    1.46600 (7) obj. -31.2042 iterations 1
Cbc0038I Pass  90: suminf.    0.86626 (5) obj. -31.2042 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13.5375 - took 0.04 seconds
Cbc0012I Integer solution of -13.5375 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 33 rows 41 columns, reduced to 18 rows 22 columns
Cbc0031I 17 added rows had average density of 4.8823529
Cbc0013I At root node, 65 cuts changed objective from -58.101037 to -12.70375 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 144 row cuts average 6.4 elements, 9 column cuts (9 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 38 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13.5375, took 41 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 8.74197e-08 - average 2.49771e-09, 1 fixed columns
Coin0506I Presolve 33 (-2) rows, 21 (-1) columns and 101 (-6) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 55.980757
Clp0000I Optimal - objective value 55.980757
Coin0511I After Postsolve, objective 55.980757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.980757
Clp0000I Optimal - objective value 55.980757
Clp0000I Optimal - objective value 55.980757
Coin0511I After Postsolve, objective 55.980757, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.98075659 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.434%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.79157
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.25 iterations 15
Cbc0038I Solution found of 6.25
Cbc0038I Relaxing continuous gives 6.25
Cbc0038I Rounding solution of -13.5375 is better than previous of 6.25

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -17.7819
Cbc0038I Pass   2: suminf.    0.57783 (2) obj. -17.7819 iterations 2
Cbc0038I Pass   3: suminf.    0.16973 (1) obj. -17.7819 iterations 1
Cbc0038I Pass   4: suminf.    0.41012 (1) obj. -17.7819 iterations 1
Cbc0038I Pass   5: suminf.    2.03151 (5) obj. -17.7819 iterations 7
Cbc0038I Pass   6: suminf.    0.65579 (2) obj. -17.7819 iterations 7
Cbc0038I Pass   7: suminf.    2.11740 (6) obj. -17.7819 iterations 6
Cbc0038I Pass   8: suminf.    1.04929 (4) obj. -17.7819 iterations 9
Cbc0038I Pass   9: suminf.    0.95911 (5) obj. -17.7819 iterations 2
Cbc0038I Pass  10: suminf.    0.43917 (2) obj. -17.7819 iterations 5
Cbc0038I Pass  11: suminf.    0.46278 (1) obj. -17.7819 iterations 2
Cbc0038I Pass  12: suminf.    0.27579 (1) obj. -17.7819 iterations 2
Cbc0038I Pass  13: suminf.    0.16973 (1) obj. -17.7819 iterations 3
Cbc0038I Pass  14: suminf.    0.41012 (1) obj. -17.7819 iterations 1
Cbc0038I Pass  15: suminf.    0.41012 (1) obj. -17.7819 iterations 0
Cbc0038I Pass  16: suminf.    1.99348 (5) obj. -17.7819 iterations 5
Cbc0038I Pass  17: suminf.    1.28220 (4) obj. -17.7819 iterations 5
Cbc0038I Pass  18: suminf.    0.56758 (4) obj. -17.7819 iterations 2
Cbc0038I Pass  19: suminf.    0.42000 (4) obj. -17.7819 iterations 3
Cbc0038I Pass  20: suminf.    0.94608 (7) obj. -17.7819 iterations 4
Cbc0038I Pass  21: suminf.    0.77350 (12) obj. -17.7819 iterations 7
Cbc0038I Pass  22: suminf.    1.27138 (4) obj. -17.7819 iterations 15
Cbc0038I Pass  23: suminf.    1.27138 (4) obj. -17.7819 iterations 1
Cbc0038I Pass  24: suminf.    1.16713 (4) obj. -17.7819 iterations 5
Cbc0038I Pass  25: suminf.    0.79801 (3) obj. -17.7819 iterations 1
Cbc0038I Pass  26: suminf.    0.79478 (3) obj. -17.7819 iterations 1
Cbc0038I Pass  27: suminf.    2.78264 (8) obj. -17.7819 iterations 10
Cbc0038I Pass  28: suminf.    1.26774 (5) obj. -17.7819 iterations 6
Cbc0038I Pass  29: suminf.    1.25528 (5) obj. -17.7819 iterations 1
Cbc0038I Pass  30: suminf.    1.17389 (4) obj. -17.7819 iterations 5
Cbc0038I Pass  31: suminf.    0.56028 (3) obj. -17.7819 iterations 2
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -25.4217
Cbc0038I Pass  31: suminf.    0.52347 (2) obj. -25.4217 iterations 1
Cbc0038I Pass  32: suminf.    0.52347 (2) obj. -25.4217 iterations 0
Cbc0038I Pass  33: suminf.    0.91600 (2) obj. -25.4217 iterations 1
Cbc0038I Pass  34: suminf.    1.41991 (4) obj. -25.4217 iterations 2
Cbc0038I Pass  35: suminf.    0.87937 (2) obj. -25.4217 iterations 2
Cbc0038I Pass  36: suminf.    2.14525 (7) obj. -25.4217 iterations 5
Cbc0038I Pass  37: suminf.    3.76581 (9) obj. -25.4217 iterations 14
Cbc0038I Pass  38: suminf.    2.14868 (8) obj. -25.4217 iterations 7
Cbc0038I Pass  39: suminf.    1.41309 (12) obj. -25.4217 iterations 18
Cbc0038I Pass  40: suminf.    1.41309 (12) obj. -25.4217 iterations 0
Cbc0038I Pass  41: suminf.    1.30818 (4) obj. -25.4217 iterations 13
Cbc0038I Pass  42: suminf.    1.30818 (4) obj. -25.4217 iterations 1
Cbc0038I Pass  43: suminf.    1.14774 (4) obj. -25.4217 iterations 4
Cbc0038I Pass  44: suminf.    1.08205 (4) obj. -25.4217 iterations 1
Cbc0038I Pass  45: suminf.    0.92140 (4) obj. -25.4217 iterations 6
Cbc0038I Pass  46: suminf.    0.88574 (5) obj. -25.4217 iterations 2
Cbc0038I Pass  47: suminf.    0.84927 (3) obj. -25.4217 iterations 6
Cbc0038I Pass  48: suminf.    0.58865 (2) obj. -25.4217 iterations 3
Cbc0038I Pass  49: suminf.    0.52347 (2) obj. -25.4217 iterations 2
Cbc0038I Pass  50: suminf.    0.52347 (2) obj. -25.4217 iterations 0
Cbc0038I Pass  51: suminf.    0.91600 (2) obj. -25.4217 iterations 1
Cbc0038I Pass  52: suminf.    0.80682 (3) obj. -25.4217 iterations 5
Cbc0038I Pass  53: suminf.    0.59370 (2) obj. -25.4217 iterations 6
Cbc0038I Pass  54: suminf.    1.69771 (7) obj. -25.4217 iterations 9
Cbc0038I Pass  55: suminf.    1.18012 (6) obj. -25.4217 iterations 1
Cbc0038I Pass  56: suminf.    1.41309 (12) obj. -25.4217 iterations 11
Cbc0038I Pass  57: suminf.    1.30818 (4) obj. -25.4217 iterations 13
Cbc0038I Pass  58: suminf.    1.30818 (4) obj. -25.4217 iterations 1
Cbc0038I Pass  59: suminf.    1.14774 (4) obj. -25.4217 iterations 4
Cbc0038I Pass  60: suminf.    1.08205 (4) obj. -25.4217 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -13.5375 - took 0.04 seconds
Cbc0012I Integer solution of -13.5375 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 23 rows 15 columns
Cbc0031I 10 added rows had average density of 18.5
Cbc0013I At root node, 10 cuts changed objective from -55.980757 to -33.455202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1326 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 562 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13.5375, took 1938 iterations and 2 nodes (0.15 seconds)
Cbc0032I Strong branching done 22 times (275 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 41 (-4) columns and 308 (-53) elements
Clp1000I sum of infeasibilities 1.00739e-09 - average 2.9629e-11, 28 fixed columns
Coin0506I Presolve 8 (-26) rows, 13 (-28) columns and 37 (-271) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 3.0939574 - largest nonzero change 1.7201597e-05 ( 0.00066957451%) - largest zero change 1.919719e-05
Clp0000I Optimal - objective value -15.130808
Clp0000I Optimal - objective value -15.130808
Coin0511I After Postsolve, objective -15.130808, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5480466 - largest nonzero change 2.5938216e-05 ( 0.0018425102%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 83.114706
Clp0000I Optimal - objective value 83.114706
Clp0000I Optimal - objective value 83.114706
Coin0511I After Postsolve, objective 83.114706, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.11470584 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 41 columns (41 integer (41 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.140%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.14066
Cbc0038I Pass   1: suminf.    2.27842 (12) obj. -38.7171 iterations 8
Cbc0038I Pass   2: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Solution found of 2.74132
Cbc0038I Rounding solution of -1.2691 is better than previous of 2.74132

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -1.2691 to -4.7341 (0.01 seconds)
Cbc0038I Round again with cutoff of -10.0709
Cbc0038I Pass   3: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass   4: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass   5: suminf.    0.60307 (2) obj. -10.0709 iterations 13
Cbc0038I Pass   6: suminf.    0.53053 (2) obj. -18.6797 iterations 1
Cbc0038I Pass   7: suminf.    0.21053 (1) obj. -10.6797 iterations 1
Cbc0038I Pass   8: suminf.    1.43284 (7) obj. -26.496 iterations 11
Cbc0038I Pass   9: suminf.    1.21595 (6) obj. -25.8853 iterations 2
Cbc0038I Pass  10: suminf.    0.61504 (3) obj. -10.0709 iterations 7
Cbc0038I Pass  11: suminf.    0.44929 (3) obj. -10.0709 iterations 1
Cbc0038I Pass  12: suminf.    0.25053 (2) obj. -14.1552 iterations 2
Cbc0038I Pass  13: suminf.    0.21053 (1) obj. -13.1552 iterations 1
Cbc0038I Pass  14: suminf.    0.49078 (2) obj. -10.0709 iterations 2
Cbc0038I Pass  15: suminf.    1.79565 (7) obj. -10.0709 iterations 8
Cbc0038I Pass  16: suminf.    1.75133 (7) obj. -10.0709 iterations 3
Cbc0038I Pass  17: suminf.    1.44337 (4) obj. -10.0709 iterations 9
Cbc0038I Pass  18: suminf.    0.64348 (4) obj. -10.0709 iterations 7
Cbc0038I Pass  19: suminf.    0.64348 (4) obj. -10.0709 iterations 1
Cbc0038I Pass  20: suminf.    0.83065 (3) obj. -10.0709 iterations 3
Cbc0038I Pass  21: suminf.    0.83065 (3) obj. -10.0709 iterations 0
Cbc0038I Pass  22: suminf.    0.72681 (3) obj. -10.0709 iterations 2
Cbc0038I Pass  23: suminf.    0.72681 (3) obj. -10.0709 iterations 1
Cbc0038I Pass  24: suminf.    1.84948 (9) obj. -10.0709 iterations 12
Cbc0038I Pass  25: suminf.    1.50867 (9) obj. -10.0709 iterations 4
Cbc0038I Pass  26: suminf.    0.53064 (4) obj. -10.0709 iterations 12
Cbc0038I Pass  27: suminf.    0.49237 (3) obj. -10.0709 iterations 3
Cbc0038I Pass  28: suminf.    0.91460 (4) obj. -10.0709 iterations 2
Cbc0038I Pass  29: suminf.    0.92681 (3) obj. -10.0709 iterations 4
Cbc0038I Pass  30: suminf.    0.92681 (3) obj. -10.0709 iterations 1
Cbc0038I Pass  31: suminf.    0.81742 (3) obj. -10.0709 iterations 2
Cbc0038I Pass  32: suminf.    0.59338 (3) obj. -13.8795 iterations 1
Cbc0038I Rounding solution of -8.50702 is better than previous of -4.7341

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -19.6769
Cbc0038I Pass  32: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  33: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  34: suminf.    0.62610 (6) obj. -19.6769 iterations 13
Cbc0038I Pass  35: suminf.    0.62610 (6) obj. -19.6769 iterations 0
Cbc0038I Pass  36: suminf.    0.55295 (3) obj. -19.6769 iterations 6
Cbc0038I Pass  37: suminf.    0.31579 (2) obj. -20.5946 iterations 2
Cbc0038I Pass  38: suminf.    0.55295 (3) obj. -19.6769 iterations 3
Cbc0038I Pass  39: suminf.    1.98974 (8) obj. -19.6769 iterations 10
Cbc0038I Pass  40: suminf.    1.71810 (8) obj. -19.7107 iterations 2
Cbc0038I Pass  41: suminf.    1.31372 (8) obj. -19.6769 iterations 8
Cbc0038I Pass  42: suminf.    1.25075 (5) obj. -22.6037 iterations 3
Cbc0038I Pass  43: suminf.    0.92340 (4) obj. -19.6769 iterations 7
Cbc0038I Pass  44: suminf.    0.31579 (2) obj. -20.5946 iterations 3
Cbc0038I Pass  45: suminf.    0.55295 (3) obj. -19.6769 iterations 3
Cbc0038I Pass  46: suminf.    2.35620 (10) obj. -19.6769 iterations 15
Cbc0038I Pass  47: suminf.    1.96424 (8) obj. -19.6769 iterations 3
Cbc0038I Pass  48: suminf.    1.02669 (5) obj. -19.6769 iterations 9
Cbc0038I Pass  49: suminf.    1.02669 (5) obj. -19.6769 iterations 0
Cbc0038I Pass  50: suminf.    0.96373 (5) obj. -19.6769 iterations 2
Cbc0038I Pass  51: suminf.    0.96373 (5) obj. -19.6769 iterations 0
Cbc0038I Pass  52: suminf.    1.18804 (5) obj. -19.6769 iterations 2
Cbc0038I Pass  53: suminf.    1.31251 (6) obj. -19.6769 iterations 9
Cbc0038I Pass  54: suminf.    0.77272 (4) obj. -19.6769 iterations 6
Cbc0038I Pass  55: suminf.    1.08933 (4) obj. -19.6769 iterations 3
Cbc0038I Pass  56: suminf.    1.02119 (5) obj. -19.6769 iterations 1
Cbc0038I Pass  57: suminf.    1.06875 (6) obj. -19.6769 iterations 8
Cbc0038I Pass  58: suminf.    1.06875 (6) obj. -19.6769 iterations 0
Cbc0038I Pass  59: suminf.    1.83592 (6) obj. -19.6769 iterations 2
Cbc0038I Pass  60: suminf.    1.17612 (5) obj. -21.4947 iterations 1
Cbc0038I Pass  61: suminf.    1.83592 (6) obj. -19.6769 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -8.50702 to -13.5375 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.2042
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  62: suminf.    2.27842 (12) obj. -38.7171 iterations 0
Cbc0038I Pass  63: suminf.    1.00289 (6) obj. -31.2042 iterations 13
Cbc0038I Pass  64: suminf.    0.93898 (6) obj. -31.2042 iterations 2
Cbc0038I Pass  65: suminf.    0.90829 (4) obj. -31.2042 iterations 15
Cbc0038I Pass  66: suminf.    0.64049 (4) obj. -31.2042 iterations 3
Cbc0038I Pass  67: suminf.    0.76617 (4) obj. -31.2042 iterations 2
Cbc0038I Pass  68: suminf.    1.36597 (7) obj. -31.2042 iterations 9
Cbc0038I Pass  69: suminf.    1.36597 (7) obj. -31.2042 iterations 1
Cbc0038I Pass  70: suminf.    0.76617 (4) obj. -31.2042 iterations 4
Cbc0038I Pass  71: suminf.    2.02874 (7) obj. -31.2042 iterations 8
Cbc0038I Pass  72: suminf.    1.38177 (6) obj. -31.293 iterations 3
Cbc0038I Pass  73: suminf.    1.37238 (7) obj. -31.2042 iterations 2
Cbc0038I Pass  74: suminf.    1.61112 (6) obj. -31.2042 iterations 5
Cbc0038I Pass  75: suminf.    1.53152 (7) obj. -31.2042 iterations 2
Cbc0038I Pass  76: suminf.    1.61112 (6) obj. -31.2042 iterations 3
Cbc0038I Pass  77: suminf.    2.42869 (10) obj. -31.2042 iterations 6
Cbc0038I Pass  78: suminf.    1.93070 (9) obj. -31.2042 iterations 3
Cbc0038I Pass  79: suminf.    1.61112 (6) obj. -31.2042 iterations 7
Cbc0038I Pass  80: suminf.    2.05419 (10) obj. -31.2042 iterations 12
Cbc0038I Pass  81: suminf.    1.72072 (9) obj. -31.2042 iterations 3
Cbc0038I Pass  82: suminf.    1.85195 (8) obj. -31.2042 iterations 7
Cbc0038I Pass  83: suminf.    1.78539 (9) obj. -31.2042 iterations 2
Cbc0038I Pass  84: suminf.    1.40421 (6) obj. -31.2042 iterations 8
Cbc0038I Pass  85: suminf.    1.37479 (6) obj. -31.2042 iterations 1
Cbc0038I Pass  86: suminf.    0.64049 (4) obj. -31.2042 iterations 3
Cbc0038I Pass  87: suminf.    0.76617 (4) obj. -31.2042 iterations 2
Cbc0038I Pass  88: suminf.    1.77568 (7) obj. -31.2042 iterations 5
Cbc0038I Pass  89: suminf.    1.46600 (7) obj. -31.2042 iterations 1
Cbc0038I Pass  90: suminf.    0.86626 (5) obj. -31.2042 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 41 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -13.5375 - took 0.04 seconds
Cbc0012I Integer solution of -13.5375 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 33 rows 41 columns, reduced to 18 rows 22 columns
Cbc0031I 17 added rows had average density of 4.8823529
Cbc0013I At root node, 65 cuts changed objective from -58.101037 to -12.70375 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 144 row cuts average 6.4 elements, 9 column cuts (9 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 38 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13.5375, took 41 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

