Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 149 (-34) elements
Clp1000I sum of infeasibilities 7.93791e-07 - average 1.58758e-08, 3 fixed columns
Coin0506I Presolve 44 (-6) rows, 25 (-3) columns and 131 (-18) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 93.160526
Clp0000I Optimal - objective value 93.160526
Coin0511I After Postsolve, objective 93.160526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.160526
Clp0000I Optimal - objective value 93.160526
Clp0000I Optimal - objective value 93.160526
Coin0511I After Postsolve, objective 93.160526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.16052626 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.463
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -17.8358 iterations 13
Cbc0038I Solution found of -17.8358
Cbc0038I Relaxing continuous gives -17.8358
Cbc0038I Rounding solution of -23.3332 is better than previous of -17.8358

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -23.3332 to -56.1429 (0.02 seconds)
Cbc0038I Round again with cutoff of -59.0658
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.48890 (5) obj. -59.0658 iterations 3
Cbc0038I Pass   3: suminf.    0.86082 (2) obj. -59.0658 iterations 7
Cbc0038I Pass   4: suminf.    0.63521 (2) obj. -59.0658 iterations 3
Cbc0038I Pass   5: suminf.    0.46250 (1) obj. -59.0658 iterations 2
Cbc0038I Pass   6: suminf.    0.48927 (1) obj. -59.0658 iterations 1
Cbc0038I Pass   7: suminf.    1.68034 (6) obj. -59.0658 iterations 11
Cbc0038I Pass   8: suminf.    1.26818 (5) obj. -59.0658 iterations 4
Cbc0038I Pass   9: suminf.    0.43574 (2) obj. -59.0658 iterations 8
Cbc0038I Pass  10: suminf.    0.49197 (2) obj. -59.0658 iterations 4
Cbc0038I Pass  11: suminf.    0.35000 (1) obj. -59.0658 iterations 2
Cbc0038I Pass  12: suminf.    1.20728 (4) obj. -59.0658 iterations 3
Cbc0038I Pass  13: suminf.    0.35000 (1) obj. -59.0658 iterations 6
Cbc0038I Pass  14: suminf.    0.86647 (3) obj. -59.0658 iterations 4
Cbc0038I Pass  15: suminf.    0.49254 (2) obj. -59.0658 iterations 2
Cbc0038I Pass  16: suminf.    0.49254 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  17: suminf.    0.49197 (2) obj. -59.0658 iterations 4
Cbc0038I Pass  18: suminf.    1.75816 (5) obj. -59.0658 iterations 10
Cbc0038I Pass  19: suminf.    1.51361 (6) obj. -59.0658 iterations 3
Cbc0038I Pass  20: suminf.    0.46371 (2) obj. -59.0658 iterations 6
Cbc0038I Pass  21: suminf.    0.46371 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  22: suminf.    0.41346 (2) obj. -59.0658 iterations 4
Cbc0038I Pass  23: suminf.    0.41346 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  24: suminf.    0.20684 (1) obj. -59.0658 iterations 5
Cbc0038I Pass  25: suminf.    0.06250 (1) obj. -59.0658 iterations 2
Cbc0038I Pass  26: suminf.    0.56935 (2) obj. -59.0658 iterations 1
Cbc0038I Pass  27: suminf.    0.56935 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  28: suminf.    1.30454 (4) obj. -59.0658 iterations 7
Cbc0038I Pass  29: suminf.    0.87735 (2) obj. -59.0658 iterations 1
Cbc0038I Pass  30: suminf.    0.46250 (1) obj. -59.0658 iterations 2
Cbc0038I Pass  31: suminf.    0.48927 (1) obj. -59.0658 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -56.1429 to -61.6534 (0.03 seconds)
Cbc0038I Round again with cutoff of -66.397
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.80959 (5) obj. -66.397 iterations 1
Cbc0038I Pass  32: suminf.    1.07609 (4) obj. -66.397 iterations 4
Cbc0038I Pass  33: suminf.    0.77585 (3) obj. -66.397 iterations 3
Cbc0038I Pass  34: suminf.    0.77585 (3) obj. -66.397 iterations 0
Cbc0038I Pass  35: suminf.    0.57001 (2) obj. -66.397 iterations 4
Cbc0038I Pass  36: suminf.    0.57001 (2) obj. -66.397 iterations 0
Cbc0038I Pass  37: suminf.    0.10616 (2) obj. -66.397 iterations 2
Cbc0038I Pass  38: suminf.    0.10616 (2) obj. -66.397 iterations 1
Cbc0038I Pass  39: suminf.    0.10616 (2) obj. -66.397 iterations 1
Cbc0038I Pass  40: suminf.    0.10616 (2) obj. -66.397 iterations 1
Cbc0038I Pass  41: suminf.    0.57001 (2) obj. -66.397 iterations 3
Cbc0038I Pass  42: suminf.    0.57001 (2) obj. -66.397 iterations 0
Cbc0038I Pass  43: suminf.    0.10616 (2) obj. -66.397 iterations 2
Cbc0038I Pass  44: suminf.    1.70716 (5) obj. -66.397 iterations 9
Cbc0038I Pass  45: suminf.    0.92119 (3) obj. -66.397 iterations 6
Cbc0038I Pass  46: suminf.    0.84860 (3) obj. -66.397 iterations 2
Cbc0038I Pass  47: suminf.    1.67369 (4) obj. -66.397 iterations 4
Cbc0038I Pass  48: suminf.    1.27672 (3) obj. -66.397 iterations 3
Cbc0038I Pass  49: suminf.    0.51345 (4) obj. -66.397 iterations 2
Cbc0038I Pass  50: suminf.    0.51345 (4) obj. -66.397 iterations 0
Cbc0038I Pass  51: suminf.    1.21686 (4) obj. -66.397 iterations 9
Cbc0038I Pass  52: suminf.    0.82977 (3) obj. -66.397 iterations 3
Cbc0038I Pass  53: suminf.    0.82597 (3) obj. -66.397 iterations 1
Cbc0038I Pass  54: suminf.    1.31129 (4) obj. -66.397 iterations 4
Cbc0038I Pass  55: suminf.    1.13662 (3) obj. -66.397 iterations 4
Cbc0038I Pass  56: suminf.    0.69603 (4) obj. -66.397 iterations 12
Cbc0038I Pass  57: suminf.    0.68345 (3) obj. -66.397 iterations 5
Cbc0038I Pass  58: suminf.    1.36143 (3) obj. -66.397 iterations 4
Cbc0038I Pass  59: suminf.    0.16250 (1) obj. -66.397 iterations 4
Cbc0038I Pass  60: suminf.    0.16848 (1) obj. -66.397 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -61.6534 - took 0.03 seconds
Cbc0012I Integer solution of -61.653386 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 30 rows 18 columns
Cbc0031I 10 added rows had average density of 21.6
Cbc0013I At root node, 10 cuts changed objective from -85.371038 to -71.933324 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 589 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 432 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -61.65338629999999, took 1861 iterations and 6 nodes (0.18 seconds)
Cbc0032I Strong branching done 68 times (679 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 49 (-13) columns and 426 (-222) elements
Clp1000I sum of infeasibilities 2.48268e-08 - average 5.51707e-10, 28 fixed columns
Coin0506I Presolve 18 (-27) rows, 21 (-28) columns and 73 (-353) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 75.821856
Clp0000I Optimal - objective value 75.821856
Coin0511I After Postsolve, objective 75.821856, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3635153 - largest nonzero change 0 ( 0%) - largest zero change 2.9586889e-05
Clp0000I Optimal - objective value 106.76228
Clp0000I Optimal - objective value 106.76228
Clp0000I Optimal - objective value 106.76228
Coin0511I After Postsolve, objective 106.76228, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.7622849 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 47 columns (47 integer (47 of which binary)) and 381 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.96655
Cbc0038I Pass   1: suminf.    0.66743 (8) obj. -42.5418 iterations 13
Cbc0038I Pass   2: suminf.    0.66743 (8) obj. -42.5418 iterations 1
Cbc0038I Solution found of -33.4021
Cbc0038I Rounding solution of -48.3121 is better than previous of -33.4021

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -51.6401
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.81784 (15) obj. -51.6401 iterations 3
Cbc0038I Pass   4: suminf.    1.81784 (15) obj. -51.6401 iterations 0
Cbc0038I Pass   5: suminf.    0.59689 (2) obj. -51.6401 iterations 19
Cbc0038I Pass   6: suminf.    0.59689 (2) obj. -51.6401 iterations 0
Cbc0038I Pass   7: suminf.    0.61861 (3) obj. -51.6401 iterations 2
Cbc0038I Pass   8: suminf.    1.31993 (3) obj. -51.6401 iterations 2
Cbc0038I Pass   9: suminf.    1.60099 (5) obj. -51.6401 iterations 8
Cbc0038I Pass  10: suminf.    1.60099 (5) obj. -51.6401 iterations 3
Cbc0038I Pass  11: suminf.    0.27262 (2) obj. -51.6401 iterations 4
Cbc0038I Pass  12: suminf.    0.07461 (2) obj. -51.6401 iterations 2
Cbc0038I Pass  13: suminf.    0.18549 (2) obj. -53.6479 iterations 3
Cbc0038I Pass  14: suminf.    1.51081 (8) obj. -51.6401 iterations 14
Cbc0038I Pass  15: suminf.    1.51081 (8) obj. -51.6401 iterations 2
Cbc0038I Pass  16: suminf.    0.35693 (2) obj. -51.6401 iterations 13
Cbc0038I Pass  17: suminf.    0.32094 (2) obj. -51.6401 iterations 2
Cbc0038I Pass  18: suminf.    1.02600 (4) obj. -51.6401 iterations 3
Cbc0038I Pass  19: suminf.    0.44854 (2) obj. -51.6401 iterations 7
Cbc0038I Pass  20: suminf.    0.19011 (2) obj. -51.6401 iterations 3
Cbc0038I Pass  21: suminf.    0.19011 (2) obj. -51.6401 iterations 0
Cbc0038I Pass  22: suminf.    0.52339 (2) obj. -51.6401 iterations 2
Cbc0038I Pass  23: suminf.    1.66909 (7) obj. -51.6401 iterations 6
Cbc0038I Pass  24: suminf.    0.71074 (3) obj. -55.5466 iterations 8
Cbc0038I Pass  25: suminf.    0.46778 (1) obj. -51.6401 iterations 5
Cbc0038I Pass  26: suminf.    0.45000 (1) obj. -56.1556 iterations 1
Cbc0038I Pass  27: suminf.    1.59529 (5) obj. -51.6401 iterations 12
Cbc0038I Pass  28: suminf.    1.59529 (5) obj. -51.6401 iterations 0
Cbc0038I Pass  29: suminf.    0.39398 (2) obj. -51.6401 iterations 8
Cbc0038I Pass  30: suminf.    0.29498 (1) obj. -51.6401 iterations 1
Cbc0038I Pass  31: suminf.    0.30000 (1) obj. -51.9157 iterations 1
Cbc0038I Pass  32: suminf.    3.21230 (13) obj. -51.6401 iterations 20
Cbc0038I Rounding solution of -54.6267 is better than previous of -48.3121

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 31 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -54.6267 to -61.608 (0.04 seconds)
Cbc0038I Round again with cutoff of -65.6047
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.30632 (17) obj. -65.6047 iterations 1
Cbc0038I Pass  33: suminf.    2.30632 (17) obj. -65.6047 iterations 0
Cbc0038I Pass  34: suminf.    1.27427 (5) obj. -65.6047 iterations 13
Cbc0038I Pass  35: suminf.    0.64757 (2) obj. -66.8249 iterations 4
Cbc0038I Pass  36: suminf.    0.61455 (2) obj. -65.6047 iterations 1
Cbc0038I Pass  37: suminf.    1.86644 (5) obj. -65.6047 iterations 10
Cbc0038I Pass  38: suminf.    1.49836 (4) obj. -65.6047 iterations 5
Cbc0038I Pass  39: suminf.    1.26751 (3) obj. -65.6047 iterations 5
Cbc0038I Pass  40: suminf.    1.03906 (3) obj. -65.6047 iterations 1
Cbc0038I Pass  41: suminf.    1.01122 (3) obj. -65.6047 iterations 2
Cbc0038I Pass  42: suminf.    1.34898 (4) obj. -65.6047 iterations 3
Cbc0038I Pass  43: suminf.    1.29866 (3) obj. -65.6047 iterations 3
Cbc0038I Pass  44: suminf.    1.71464 (7) obj. -65.6047 iterations 6
Cbc0038I Pass  45: suminf.    1.65306 (5) obj. -65.6047 iterations 3
Cbc0038I Pass  46: suminf.    1.84005 (4) obj. -65.6047 iterations 6
Cbc0038I Pass  47: suminf.    1.03906 (3) obj. -65.6047 iterations 2
Cbc0038I Pass  48: suminf.    1.01122 (3) obj. -65.6047 iterations 2
Cbc0038I Pass  49: suminf.    1.34898 (4) obj. -65.6047 iterations 3
Cbc0038I Pass  50: suminf.    1.29866 (3) obj. -65.6047 iterations 3
Cbc0038I Pass  51: suminf.    3.03454 (10) obj. -65.6047 iterations 11
Cbc0038I Pass  52: suminf.    2.87478 (11) obj. -65.6047 iterations 3
Cbc0038I Pass  53: suminf.    1.98876 (5) obj. -65.6047 iterations 10
Cbc0038I Pass  54: suminf.    1.83751 (7) obj. -65.6047 iterations 4
Cbc0038I Pass  55: suminf.    1.98876 (5) obj. -65.6047 iterations 3
Cbc0038I Pass  56: suminf.    2.26407 (8) obj. -65.6047 iterations 6
Cbc0038I Pass  57: suminf.    1.13960 (8) obj. -65.6047 iterations 4
Cbc0038I Pass  58: suminf.    1.13960 (8) obj. -65.6047 iterations 0
Cbc0038I Pass  59: suminf.    1.14436 (3) obj. -65.6047 iterations 6
Cbc0038I Pass  60: suminf.    0.67646 (3) obj. -65.6047 iterations 2
Cbc0038I Pass  61: suminf.    0.94426 (6) obj. -65.6047 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -61.608 - took 0.03 seconds
Cbc0012I Integer solution of -61.608026 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 41 rows 47 columns, reduced to 7 rows 8 columns
Cbc0031I 15 added rows had average density of 20.666667
Cbc0013I At root node, 15 cuts changed objective from -81.590895 to -66.57714 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1560 row cuts average 5.0 elements, 5 column cuts (5 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 642 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 85 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 119 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 81 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 302 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 314 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.740 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -61.608026 best solution, best possible -66.57714 (1.60 seconds)
Cbc0016I Integer solution of -61.653386 found by strong branching after 1925 iterations and 3 nodes (1.84 seconds)
Cbc0001I Search completed - best objective -61.65338629999999, took 1985 iterations and 6 nodes (1.85 seconds)
Cbc0032I Strong branching done 78 times (729 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.86

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 149 (-34) elements
Clp1000I sum of infeasibilities 7.93791e-07 - average 1.58758e-08, 3 fixed columns
Coin0506I Presolve 44 (-6) rows, 25 (-3) columns and 131 (-18) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 93.160526
Clp0000I Optimal - objective value 93.160526
Coin0511I After Postsolve, objective 93.160526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.160526
Clp0000I Optimal - objective value 93.160526
Clp0000I Optimal - objective value 93.160526
Coin0511I After Postsolve, objective 93.160526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.16052626 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.463
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -17.8358 iterations 13
Cbc0038I Solution found of -17.8358
Cbc0038I Relaxing continuous gives -17.8358
Cbc0038I Rounding solution of -23.3332 is better than previous of -17.8358

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -23.3332 to -56.1429 (0.02 seconds)
Cbc0038I Round again with cutoff of -59.0658
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.48890 (5) obj. -59.0658 iterations 3
Cbc0038I Pass   3: suminf.    0.86082 (2) obj. -59.0658 iterations 7
Cbc0038I Pass   4: suminf.    0.63521 (2) obj. -59.0658 iterations 3
Cbc0038I Pass   5: suminf.    0.46250 (1) obj. -59.0658 iterations 2
Cbc0038I Pass   6: suminf.    0.48927 (1) obj. -59.0658 iterations 1
Cbc0038I Pass   7: suminf.    1.68034 (6) obj. -59.0658 iterations 11
Cbc0038I Pass   8: suminf.    1.26818 (5) obj. -59.0658 iterations 4
Cbc0038I Pass   9: suminf.    0.43574 (2) obj. -59.0658 iterations 8
Cbc0038I Pass  10: suminf.    0.49197 (2) obj. -59.0658 iterations 4
Cbc0038I Pass  11: suminf.    0.35000 (1) obj. -59.0658 iterations 2
Cbc0038I Pass  12: suminf.    1.20728 (4) obj. -59.0658 iterations 3
Cbc0038I Pass  13: suminf.    0.35000 (1) obj. -59.0658 iterations 6
Cbc0038I Pass  14: suminf.    0.86647 (3) obj. -59.0658 iterations 4
Cbc0038I Pass  15: suminf.    0.49254 (2) obj. -59.0658 iterations 2
Cbc0038I Pass  16: suminf.    0.49254 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  17: suminf.    0.49197 (2) obj. -59.0658 iterations 4
Cbc0038I Pass  18: suminf.    1.75816 (5) obj. -59.0658 iterations 10
Cbc0038I Pass  19: suminf.    1.51361 (6) obj. -59.0658 iterations 3
Cbc0038I Pass  20: suminf.    0.46371 (2) obj. -59.0658 iterations 6
Cbc0038I Pass  21: suminf.    0.46371 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  22: suminf.    0.41346 (2) obj. -59.0658 iterations 4
Cbc0038I Pass  23: suminf.    0.41346 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  24: suminf.    0.20684 (1) obj. -59.0658 iterations 5
Cbc0038I Pass  25: suminf.    0.06250 (1) obj. -59.0658 iterations 2
Cbc0038I Pass  26: suminf.    0.56935 (2) obj. -59.0658 iterations 1
Cbc0038I Pass  27: suminf.    0.56935 (2) obj. -59.0658 iterations 0
Cbc0038I Pass  28: suminf.    1.30454 (4) obj. -59.0658 iterations 7
Cbc0038I Pass  29: suminf.    0.87735 (2) obj. -59.0658 iterations 1
Cbc0038I Pass  30: suminf.    0.46250 (1) obj. -59.0658 iterations 2
Cbc0038I Pass  31: suminf.    0.48927 (1) obj. -59.0658 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -56.1429 to -61.6534 (0.04 seconds)
Cbc0038I Round again with cutoff of -66.397
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.80959 (5) obj. -66.397 iterations 1
Cbc0038I Pass  32: suminf.    1.07609 (4) obj. -66.397 iterations 4
Cbc0038I Pass  33: suminf.    0.77585 (3) obj. -66.397 iterations 3
Cbc0038I Pass  34: suminf.    0.77585 (3) obj. -66.397 iterations 0
Cbc0038I Pass  35: suminf.    0.57001 (2) obj. -66.397 iterations 4
Cbc0038I Pass  36: suminf.    0.57001 (2) obj. -66.397 iterations 0
Cbc0038I Pass  37: suminf.    0.10616 (2) obj. -66.397 iterations 2
Cbc0038I Pass  38: suminf.    0.10616 (2) obj. -66.397 iterations 1
Cbc0038I Pass  39: suminf.    0.10616 (2) obj. -66.397 iterations 1
Cbc0038I Pass  40: suminf.    0.10616 (2) obj. -66.397 iterations 1
Cbc0038I Pass  41: suminf.    0.57001 (2) obj. -66.397 iterations 3
Cbc0038I Pass  42: suminf.    0.57001 (2) obj. -66.397 iterations 0
Cbc0038I Pass  43: suminf.    0.10616 (2) obj. -66.397 iterations 2
Cbc0038I Pass  44: suminf.    1.70716 (5) obj. -66.397 iterations 9
Cbc0038I Pass  45: suminf.    0.92119 (3) obj. -66.397 iterations 6
Cbc0038I Pass  46: suminf.    0.84860 (3) obj. -66.397 iterations 2
Cbc0038I Pass  47: suminf.    1.67369 (4) obj. -66.397 iterations 4
Cbc0038I Pass  48: suminf.    1.27672 (3) obj. -66.397 iterations 3
Cbc0038I Pass  49: suminf.    0.51345 (4) obj. -66.397 iterations 2
Cbc0038I Pass  50: suminf.    0.51345 (4) obj. -66.397 iterations 0
Cbc0038I Pass  51: suminf.    1.21686 (4) obj. -66.397 iterations 9
Cbc0038I Pass  52: suminf.    0.82977 (3) obj. -66.397 iterations 3
Cbc0038I Pass  53: suminf.    0.82597 (3) obj. -66.397 iterations 1
Cbc0038I Pass  54: suminf.    1.31129 (4) obj. -66.397 iterations 4
Cbc0038I Pass  55: suminf.    1.13662 (3) obj. -66.397 iterations 4
Cbc0038I Pass  56: suminf.    0.69603 (4) obj. -66.397 iterations 12
Cbc0038I Pass  57: suminf.    0.68345 (3) obj. -66.397 iterations 5
Cbc0038I Pass  58: suminf.    1.36143 (3) obj. -66.397 iterations 4
Cbc0038I Pass  59: suminf.    0.16250 (1) obj. -66.397 iterations 4
Cbc0038I Pass  60: suminf.    0.16848 (1) obj. -66.397 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -61.6534 - took 0.04 seconds
Cbc0012I Integer solution of -61.653386 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 30 rows 18 columns
Cbc0031I 10 added rows had average density of 21.6
Cbc0013I At root node, 10 cuts changed objective from -85.371038 to -71.933324 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 589 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 432 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -61.65338629999999, took 1861 iterations and 6 nodes (0.20 seconds)
Cbc0032I Strong branching done 68 times (679 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 369 (-280) elements
Clp1000I sum of infeasibilities 2.57693e-08 - average 6.13556e-10, 27 fixed columns
Coin0506I Presolve 17 (-25) rows, 19 (-27) columns and 67 (-302) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 1.7490226 - largest nonzero change 0 ( 0%) - largest zero change 1.8933212e-05
Clp0000I Optimal - objective value 68.143051
Clp0000I Optimal - objective value 68.143051
Coin0511I After Postsolve, objective 68.143051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.365281 - largest nonzero change 0 ( 0%) - largest zero change 2.9856715e-05
Clp0000I Optimal - objective value 100.2189
Clp0000I Optimal - objective value 100.2189
Clp0000I Optimal - objective value 100.2189
Coin0511I After Postsolve, objective 100.2189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.2189039 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 47 columns (47 integer (47 of which binary)) and 381 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.00351
Cbc0038I Pass   1: suminf.    0.21241 (3) obj. -28.3193 iterations 13
Cbc0038I Pass   2: suminf.    0.21241 (3) obj. -28.3193 iterations 1
Cbc0038I Solution found of -24.6186
Cbc0038I Rounding solution of -33.116 is better than previous of -24.6186

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -33.116 to -56.1429 (0.01 seconds)
Cbc0038I Round again with cutoff of -58.715
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.45857 (13) obj. -58.715 iterations 7
Cbc0038I Pass   4: suminf.    1.87584 (14) obj. -58.715 iterations 1
Cbc0038I Pass   5: suminf.    0.69810 (3) obj. -58.715 iterations 18
Cbc0038I Pass   6: suminf.    0.69810 (3) obj. -58.715 iterations 0
Cbc0038I Pass   7: suminf.    0.83333 (2) obj. -61.8247 iterations 2
Cbc0038I Pass   8: suminf.    1.28709 (7) obj. -58.715 iterations 7
Cbc0038I Pass   9: suminf.    0.87671 (4) obj. -58.715 iterations 4
Cbc0038I Pass  10: suminf.    0.67782 (3) obj. -58.715 iterations 2
Cbc0038I Pass  11: suminf.    0.79938 (3) obj. -58.715 iterations 1
Cbc0038I Pass  12: suminf.    1.76105 (6) obj. -58.715 iterations 11
Cbc0038I Pass  13: suminf.    1.67289 (5) obj. -58.715 iterations 3
Cbc0038I Pass  14: suminf.    0.67491 (3) obj. -58.715 iterations 10
Cbc0038I Pass  15: suminf.    1.21676 (4) obj. -58.715 iterations 7
Cbc0038I Pass  16: suminf.    0.54035 (2) obj. -60.2276 iterations 4
Cbc0038I Pass  17: suminf.    0.48353 (2) obj. -58.715 iterations 1
Cbc0038I Pass  18: suminf.    1.94933 (7) obj. -58.715 iterations 6
Cbc0038I Pass  19: suminf.    1.60995 (7) obj. -58.715 iterations 1
Cbc0038I Pass  20: suminf.    0.86923 (4) obj. -58.715 iterations 7
Cbc0038I Pass  21: suminf.    0.96748 (5) obj. -58.715 iterations 9
Cbc0038I Pass  22: suminf.    0.87550 (6) obj. -58.715 iterations 5
Cbc0038I Pass  23: suminf.    0.81761 (4) obj. -58.715 iterations 6
Cbc0038I Pass  24: suminf.    0.76561 (4) obj. -58.715 iterations 3
Cbc0038I Pass  25: suminf.    0.34500 (2) obj. -58.715 iterations 3
Cbc0038I Pass  26: suminf.    0.09690 (1) obj. -58.715 iterations 2
Cbc0038I Pass  27: suminf.    0.13333 (1) obj. -60.716 iterations 1
Cbc0038I Pass  28: suminf.    3.28223 (11) obj. -58.715 iterations 17
Cbc0038I Pass  29: suminf.    1.91315 (9) obj. -58.715 iterations 4
Cbc0038I Pass  30: suminf.    1.20965 (4) obj. -58.715 iterations 12
Cbc0038I Pass  31: suminf.    1.20965 (4) obj. -58.715 iterations 0
Cbc0038I Pass  32: suminf.    1.34639 (3) obj. -58.715 iterations 5
Cbc0038I Rounding solution of -59.4637 is better than previous of -56.1429

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -63.9436
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.88680 (13) obj. -63.9436 iterations 0
Cbc0038I Pass  33: suminf.    2.88680 (13) obj. -63.9436 iterations 0
Cbc0038I Pass  34: suminf.    1.34777 (4) obj. -63.9436 iterations 11
Cbc0038I Pass  35: suminf.    0.66276 (2) obj. -66.5593 iterations 3
Cbc0038I Pass  36: suminf.    0.49340 (2) obj. -63.9436 iterations 1
Cbc0038I Pass  37: suminf.    1.05742 (3) obj. -63.9436 iterations 2
Cbc0038I Pass  38: suminf.    1.21940 (3) obj. -63.9436 iterations 1
Cbc0038I Pass  39: suminf.    2.08181 (8) obj. -63.9436 iterations 13
Cbc0038I Pass  40: suminf.    1.71430 (6) obj. -63.9436 iterations 4
Cbc0038I Pass  41: suminf.    1.71402 (6) obj. -63.9436 iterations 1
Cbc0038I Pass  42: suminf.    1.12139 (3) obj. -63.9436 iterations 10
Cbc0038I Pass  43: suminf.    1.01058 (4) obj. -63.9436 iterations 1
Cbc0038I Pass  44: suminf.    1.48006 (4) obj. -63.9436 iterations 5
Cbc0038I Pass  45: suminf.    1.24721 (4) obj. -63.9436 iterations 1
Cbc0038I Pass  46: suminf.    0.75830 (3) obj. -63.9436 iterations 5
Cbc0038I Pass  47: suminf.    1.54734 (4) obj. -63.9436 iterations 6
Cbc0038I Pass  48: suminf.    1.12139 (3) obj. -63.9436 iterations 1
Cbc0038I Pass  49: suminf.    1.01058 (4) obj. -63.9436 iterations 1
Cbc0038I Pass  50: suminf.    1.48006 (4) obj. -63.9436 iterations 5
Cbc0038I Pass  51: suminf.    1.24721 (4) obj. -63.9436 iterations 1
Cbc0038I Pass  52: suminf.    0.75830 (3) obj. -63.9436 iterations 5
Cbc0038I Pass  53: suminf.    1.54734 (4) obj. -63.9436 iterations 6
Cbc0038I Pass  54: suminf.    1.12139 (3) obj. -63.9436 iterations 1
Cbc0038I Pass  55: suminf.    1.01058 (4) obj. -63.9436 iterations 1
Cbc0038I Pass  56: suminf.    1.48006 (4) obj. -63.9436 iterations 5
Cbc0038I Pass  57: suminf.    1.24721 (4) obj. -63.9436 iterations 1
Cbc0038I Pass  58: suminf.    0.75830 (3) obj. -63.9436 iterations 5
Cbc0038I Pass  59: suminf.    1.54734 (4) obj. -63.9436 iterations 6
Cbc0038I Pass  60: suminf.    1.12139 (3) obj. -63.9436 iterations 1
Cbc0038I Pass  61: suminf.    1.01058 (4) obj. -63.9436 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -59.4637 - took 0.02 seconds
Cbc0012I Integer solution of -59.463682 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 41 rows 47 columns, reduced to 8 rows 9 columns
Cbc0031I 19 added rows had average density of 18.157895
Cbc0013I At root node, 19 cuts changed objective from -81.862754 to -66.803883 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1508 row cuts average 3.9 elements, 5 column cuts (5 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 683 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 111 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 137 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 278 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 296 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.804 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -59.463682 best solution, best possible -66.803883 (1.70 seconds)
Cbc0016I Integer solution of -61.653386 found by strong branching after 2235 iterations and 6 nodes (1.81 seconds)
Cbc0001I Search completed - best objective -61.65338629999999, took 2363 iterations and 10 nodes (1.83 seconds)
Cbc0032I Strong branching done 192 times (2189 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.83

