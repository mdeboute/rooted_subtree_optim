Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 24 (-9) columns and 123 (-60) elements
Clp1000I sum of infeasibilities 2.87369e-06 - average 7.009e-08, 16 fixed columns
Coin0506I Presolve 11 (-30) rows, 7 (-17) columns and 30 (-93) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 1527.2039
Clp0000I Optimal - objective value 1527.2039
Coin0511I After Postsolve, objective 1527.2039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1527.2039
Clp0000I Optimal - objective value 1527.2039
Clp0000I Optimal - objective value 1527.2039
Coin0511I After Postsolve, objective 1527.2039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1527.203873 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 24 columns (23 integer (23 of which binary)) and 132 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.248%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.23232
Cbc0038I Solution found of -676.641
Cbc0038I Relaxing continuous gives -676.641
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -676.641 to -899.342 (0.01 seconds)
Cbc0038I Round again with cutoff of -920.886
Cbc0038I Pass   1: suminf.    0.27098 (1) obj. -920.886 iterations 10
Cbc0038I Pass   2: suminf.    0.30894 (1) obj. -955.106 iterations 1
Cbc0038I Pass   3: suminf.    0.50863 (2) obj. -1020.92 iterations 3
Cbc0038I Pass   4: suminf.    0.28169 (2) obj. -980.678 iterations 8
Cbc0038I Pass   5: suminf.    0.04770 (2) obj. -920.886 iterations 6
Cbc0038I Pass   6: suminf.    0.24834 (2) obj. -1004.84 iterations 2
Cbc0038I Pass   7: suminf.    0.38333 (1) obj. -1024.83 iterations 2
Cbc0038I Pass   8: suminf.    0.91136 (3) obj. -920.886 iterations 6
Cbc0038I Pass   9: suminf.    0.75291 (3) obj. -920.886 iterations 3
Cbc0038I Pass  10: suminf.    0.04391 (2) obj. -920.886 iterations 4
Cbc0038I Pass  11: suminf.    0.14030 (2) obj. -958.334 iterations 1
Cbc0038I Pass  12: suminf.    1.12539 (4) obj. -920.886 iterations 10
Cbc0038I Pass  13: suminf.    1.00927 (3) obj. -920.886 iterations 5
Cbc0038I Pass  14: suminf.    0.62687 (3) obj. -920.886 iterations 7
Cbc0038I Pass  15: suminf.    0.47019 (3) obj. -920.886 iterations 4
Cbc0038I Pass  16: suminf.    0.72621 (3) obj. -920.886 iterations 1
Cbc0038I Pass  17: suminf.    0.81423 (3) obj. -920.886 iterations 4
Cbc0038I Pass  18: suminf.    1.39049 (4) obj. -920.886 iterations 3
Cbc0038I Pass  19: suminf.    1.39049 (4) obj. -920.886 iterations 0
Cbc0038I Pass  20: suminf.    0.87547 (3) obj. -920.886 iterations 3
Cbc0038I Pass  21: suminf.    0.49097 (2) obj. -920.886 iterations 3
Cbc0038I Pass  22: suminf.    0.43277 (3) obj. -920.886 iterations 3
Cbc0038I Pass  23: suminf.    0.43277 (3) obj. -920.886 iterations 1
Cbc0038I Pass  24: suminf.    1.42372 (5) obj. -920.886 iterations 7
Cbc0038I Pass  25: suminf.    0.31724 (2) obj. -920.886 iterations 4
Cbc0038I Pass  26: suminf.    0.45764 (2) obj. -979.755 iterations 2
Cbc0038I Pass  27: suminf.    0.38544 (3) obj. -920.886 iterations 2
Cbc0038I Pass  28: suminf.    0.60636 (4) obj. -920.886 iterations 8
Cbc0038I Pass  29: suminf.    0.47145 (3) obj. -920.886 iterations 2
Cbc0038I Pass  30: suminf.    0.71471 (2) obj. -920.886 iterations 3
Cbc0038I Rounding solution of -902.925 is better than previous of -899.342

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -902.925 to -985.503 (0.02 seconds)
Cbc0038I Round again with cutoff of -1011.36
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.46037 (2) obj. -1011.36 iterations 1
Cbc0038I Pass  31: suminf.    0.47675 (2) obj. -1017.44 iterations 1
Cbc0038I Pass  32: suminf.    2.07223 (6) obj. -1011.36 iterations 16
Cbc0038I Pass  33: suminf.    2.07223 (6) obj. -1011.36 iterations 1
Cbc0038I Pass  34: suminf.    0.55914 (2) obj. -1043.06 iterations 8
Cbc0038I Pass  35: suminf.    0.43333 (1) obj. -1018.76 iterations 1
Cbc0038I Pass  36: suminf.    0.50093 (3) obj. -1011.36 iterations 2
Cbc0038I Pass  37: suminf.    0.43333 (1) obj. -1018.76 iterations 3
Cbc0038I Pass  38: suminf.    1.44561 (7) obj. -1011.36 iterations 5
Cbc0038I Pass  39: suminf.    1.13980 (5) obj. -1011.36 iterations 2
Cbc0038I Pass  40: suminf.    1.22451 (4) obj. -1011.36 iterations 3
Cbc0038I Pass  41: suminf.    0.62124 (3) obj. -1011.36 iterations 2
Cbc0038I Pass  42: suminf.    0.78606 (3) obj. -1011.36 iterations 1
Cbc0038I Pass  43: suminf.    1.59132 (6) obj. -1011.36 iterations 5
Cbc0038I Pass  44: suminf.    1.21645 (4) obj. -1011.36 iterations 4
Cbc0038I Pass  45: suminf.    2.78663 (7) obj. -1011.36 iterations 4
Cbc0038I Pass  46: suminf.    1.56136 (5) obj. -1011.36 iterations 4
Cbc0038I Pass  47: suminf.    0.83320 (4) obj. -1011.36 iterations 8
Cbc0038I Pass  48: suminf.    0.78618 (3) obj. -1011.36 iterations 1
Cbc0038I Pass  49: suminf.    0.45011 (2) obj. -1011.36 iterations 5
Cbc0038I Pass  50: suminf.    0.27252 (3) obj. -1011.36 iterations 5
Cbc0038I Pass  51: suminf.    0.38333 (1) obj. -1024.83 iterations 4
Cbc0038I Pass  52: suminf.    0.38333 (1) obj. -1024.83 iterations 2
Cbc0038I Pass  53: suminf.    0.98906 (3) obj. -1011.36 iterations 10
Cbc0038I Pass  54: suminf.    0.88226 (3) obj. -1011.36 iterations 2
Cbc0038I Pass  55: suminf.    0.47675 (2) obj. -1017.44 iterations 2
Cbc0038I Pass  56: suminf.    0.46037 (2) obj. -1011.36 iterations 1
Cbc0038I Pass  57: suminf.    0.83365 (5) obj. -1011.36 iterations 6
Cbc0038I Pass  58: suminf.    0.56786 (5) obj. -1011.36 iterations 4
Cbc0038I Pass  59: suminf.    0.71684 (4) obj. -1011.36 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -985.503 - took 0.05 seconds
Cbc0012I Integer solution of -985.50275 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 24 columns, reduced to 16 rows 9 columns
Cbc0031I 5 added rows had average density of 12
Cbc0013I At root node, 31 cuts changed objective from -1114.7814 to -985.26282 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.5 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -985.5027500000001, took 38 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-16) rows, 53 (-9) columns and 447 (-201) elements
Clp1000I sum of infeasibilities 1.55728e-10 - average 3.24434e-12, 48 fixed columns
Coin0506I Presolve 5 (-43) rows, 5 (-48) columns and 16 (-431) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 1497.4991
Clp0000I Optimal - objective value 1497.4991
Coin0511I After Postsolve, objective 1497.4991, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1465808 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 1534.7572
Clp0000I Optimal - objective value 1534.7572
Clp0000I Optimal - objective value 1534.7572
Coin0511I After Postsolve, objective 1534.7572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1534.757188 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 7 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 359 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.766%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.51065
Cbc0038I Pass   1: suminf.    0.36769 (6) obj. -409.217 iterations 20
Cbc0038I Pass   2: suminf.    0.36769 (6) obj. -409.217 iterations 1
Cbc0038I Solution found of -399.774
Cbc0038I Rounding solution of -447.373 is better than previous of -399.774

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -447.373 to -899.342 (0.02 seconds)
Cbc0038I Round again with cutoff of -922.44
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85357 (19) obj. -922.44 iterations 11
Cbc0038I Pass   4: suminf.    0.78950 (8) obj. -922.44 iterations 1
Cbc0038I Pass   5: suminf.    0.76156 (2) obj. -922.44 iterations 10
Cbc0038I Pass   6: suminf.    0.38614 (1) obj. -953.077 iterations 2
Cbc0038I Pass   7: suminf.    0.42013 (1) obj. -922.44 iterations 1
Cbc0038I Pass   8: suminf.    1.73080 (12) obj. -922.44 iterations 6
Cbc0038I Pass   9: suminf.    1.43581 (11) obj. -922.44 iterations 3
Cbc0038I Pass  10: suminf.    0.30894 (1) obj. -954.106 iterations 11
Cbc0038I Pass  11: suminf.    0.27381 (1) obj. -922.44 iterations 1
Cbc0038I Pass  12: suminf.    0.88264 (10) obj. -922.44 iterations 20
Cbc0038I Pass  13: suminf.    0.84994 (10) obj. -922.44 iterations 2
Cbc0038I Pass  14: suminf.    1.13971 (3) obj. -922.44 iterations 15
Cbc0038I Pass  15: suminf.    0.80226 (2) obj. -922.44 iterations 1
Cbc0038I Pass  16: suminf.    0.80226 (2) obj. -922.44 iterations 0
Cbc0038I Pass  17: suminf.    0.82905 (2) obj. -932.39 iterations 2
Cbc0038I Pass  18: suminf.    1.28780 (4) obj. -974.773 iterations 8
Cbc0038I Pass  19: suminf.    0.51359 (4) obj. -922.44 iterations 5
Cbc0038I Solution found of -967.503
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -967.503 to -985.503 (0.03 seconds)
Cbc0038I Round again with cutoff of -1014.47
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  20: suminf.    2.04811 (19) obj. -1014.47 iterations 0
Cbc0038I Pass  21: suminf.    1.60229 (20) obj. -1014.47 iterations 1
Cbc0038I Pass  22: suminf.    0.89034 (3) obj. -1014.47 iterations 31
Cbc0038I Pass  23: suminf.    0.47675 (2) obj. -1017.44 iterations 3
Cbc0038I Pass  24: suminf.    0.46874 (2) obj. -1014.47 iterations 1
Cbc0038I Pass  25: suminf.    3.09421 (9) obj. -1014.47 iterations 10
Cbc0038I Pass  26: suminf.    1.25488 (6) obj. -1014.47 iterations 4
Cbc0038I Pass  27: suminf.    0.58467 (3) obj. -1014.47 iterations 6
Cbc0038I Pass  28: suminf.    0.58467 (3) obj. -1014.47 iterations 0
Cbc0038I Pass  29: suminf.    0.91371 (3) obj. -1014.47 iterations 3
Cbc0038I Pass  30: suminf.    0.91371 (3) obj. -1014.47 iterations 0
Cbc0038I Pass  31: suminf.    0.56469 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  32: suminf.    0.49848 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  33: suminf.    0.61683 (2) obj. -1014.47 iterations 1
Cbc0038I Pass  34: suminf.    0.58467 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  35: suminf.    0.91371 (3) obj. -1014.47 iterations 3
Cbc0038I Pass  36: suminf.    0.91371 (3) obj. -1014.47 iterations 0
Cbc0038I Pass  37: suminf.    0.56469 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  38: suminf.    0.49848 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  39: suminf.    0.61683 (2) obj. -1014.47 iterations 1
Cbc0038I Pass  40: suminf.    0.58467 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  41: suminf.    0.91371 (3) obj. -1014.47 iterations 3
Cbc0038I Pass  42: suminf.    0.91371 (3) obj. -1014.47 iterations 0
Cbc0038I Pass  43: suminf.    0.56469 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  44: suminf.    0.49848 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  45: suminf.    0.61683 (2) obj. -1014.47 iterations 1
Cbc0038I Pass  46: suminf.    0.58467 (3) obj. -1014.47 iterations 1
Cbc0038I Pass  47: suminf.    0.91371 (3) obj. -1014.47 iterations 3
Cbc0038I Pass  48: suminf.    0.91371 (3) obj. -1014.47 iterations 0
Cbc0038I Pass  49: suminf.    0.56469 (3) obj. -1014.47 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 24 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -985.503 - took 0.02 seconds
Cbc0012I Integer solution of -985.50275 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 29 rows 28 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 4.3333333
Cbc0013I At root node, 6 cuts changed objective from -1130.3239 to -992.73563 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 39 row cuts average 2.3 elements, 25 column cuts (25 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -985.5027500000001, took 31 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 24 (-9) columns and 123 (-60) elements
Clp1000I sum of infeasibilities 2.87369e-06 - average 7.009e-08, 16 fixed columns
Coin0506I Presolve 11 (-30) rows, 7 (-17) columns and 30 (-93) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 1527.2039
Clp0000I Optimal - objective value 1527.2039
Coin0511I After Postsolve, objective 1527.2039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1527.2039
Clp0000I Optimal - objective value 1527.2039
Clp0000I Optimal - objective value 1527.2039
Coin0511I After Postsolve, objective 1527.2039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1527.203873 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 24 columns (23 integer (23 of which binary)) and 132 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.248%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.23232
Cbc0038I Solution found of -676.641
Cbc0038I Relaxing continuous gives -676.641
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -676.641 to -899.342 (0.01 seconds)
Cbc0038I Round again with cutoff of -920.886
Cbc0038I Pass   1: suminf.    0.27098 (1) obj. -920.886 iterations 10
Cbc0038I Pass   2: suminf.    0.30894 (1) obj. -955.106 iterations 1
Cbc0038I Pass   3: suminf.    0.50863 (2) obj. -1020.92 iterations 3
Cbc0038I Pass   4: suminf.    0.28169 (2) obj. -980.678 iterations 8
Cbc0038I Pass   5: suminf.    0.04770 (2) obj. -920.886 iterations 6
Cbc0038I Pass   6: suminf.    0.24834 (2) obj. -1004.84 iterations 2
Cbc0038I Pass   7: suminf.    0.38333 (1) obj. -1024.83 iterations 2
Cbc0038I Pass   8: suminf.    0.91136 (3) obj. -920.886 iterations 6
Cbc0038I Pass   9: suminf.    0.75291 (3) obj. -920.886 iterations 3
Cbc0038I Pass  10: suminf.    0.04391 (2) obj. -920.886 iterations 4
Cbc0038I Pass  11: suminf.    0.14030 (2) obj. -958.334 iterations 1
Cbc0038I Pass  12: suminf.    1.12539 (4) obj. -920.886 iterations 10
Cbc0038I Pass  13: suminf.    1.00927 (3) obj. -920.886 iterations 5
Cbc0038I Pass  14: suminf.    0.62687 (3) obj. -920.886 iterations 7
Cbc0038I Pass  15: suminf.    0.47019 (3) obj. -920.886 iterations 4
Cbc0038I Pass  16: suminf.    0.72621 (3) obj. -920.886 iterations 1
Cbc0038I Pass  17: suminf.    0.81423 (3) obj. -920.886 iterations 4
Cbc0038I Pass  18: suminf.    1.39049 (4) obj. -920.886 iterations 3
Cbc0038I Pass  19: suminf.    1.39049 (4) obj. -920.886 iterations 0
Cbc0038I Pass  20: suminf.    0.87547 (3) obj. -920.886 iterations 3
Cbc0038I Pass  21: suminf.    0.49097 (2) obj. -920.886 iterations 3
Cbc0038I Pass  22: suminf.    0.43277 (3) obj. -920.886 iterations 3
Cbc0038I Pass  23: suminf.    0.43277 (3) obj. -920.886 iterations 1
Cbc0038I Pass  24: suminf.    1.42372 (5) obj. -920.886 iterations 7
Cbc0038I Pass  25: suminf.    0.31724 (2) obj. -920.886 iterations 4
Cbc0038I Pass  26: suminf.    0.45764 (2) obj. -979.755 iterations 2
Cbc0038I Pass  27: suminf.    0.38544 (3) obj. -920.886 iterations 2
Cbc0038I Pass  28: suminf.    0.60636 (4) obj. -920.886 iterations 8
Cbc0038I Pass  29: suminf.    0.47145 (3) obj. -920.886 iterations 2
Cbc0038I Pass  30: suminf.    0.71471 (2) obj. -920.886 iterations 3
Cbc0038I Rounding solution of -902.925 is better than previous of -899.342

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -902.925 to -985.503 (0.02 seconds)
Cbc0038I Round again with cutoff of -1011.36
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.46037 (2) obj. -1011.36 iterations 1
Cbc0038I Pass  31: suminf.    0.47675 (2) obj. -1017.44 iterations 1
Cbc0038I Pass  32: suminf.    2.07223 (6) obj. -1011.36 iterations 16
Cbc0038I Pass  33: suminf.    2.07223 (6) obj. -1011.36 iterations 1
Cbc0038I Pass  34: suminf.    0.55914 (2) obj. -1043.06 iterations 8
Cbc0038I Pass  35: suminf.    0.43333 (1) obj. -1018.76 iterations 1
Cbc0038I Pass  36: suminf.    0.50093 (3) obj. -1011.36 iterations 2
Cbc0038I Pass  37: suminf.    0.43333 (1) obj. -1018.76 iterations 3
Cbc0038I Pass  38: suminf.    1.44561 (7) obj. -1011.36 iterations 5
Cbc0038I Pass  39: suminf.    1.13980 (5) obj. -1011.36 iterations 2
Cbc0038I Pass  40: suminf.    1.22451 (4) obj. -1011.36 iterations 3
Cbc0038I Pass  41: suminf.    0.62124 (3) obj. -1011.36 iterations 2
Cbc0038I Pass  42: suminf.    0.78606 (3) obj. -1011.36 iterations 1
Cbc0038I Pass  43: suminf.    1.59132 (6) obj. -1011.36 iterations 5
Cbc0038I Pass  44: suminf.    1.21645 (4) obj. -1011.36 iterations 4
Cbc0038I Pass  45: suminf.    2.78663 (7) obj. -1011.36 iterations 4
Cbc0038I Pass  46: suminf.    1.56136 (5) obj. -1011.36 iterations 4
Cbc0038I Pass  47: suminf.    0.83320 (4) obj. -1011.36 iterations 8
Cbc0038I Pass  48: suminf.    0.78618 (3) obj. -1011.36 iterations 1
Cbc0038I Pass  49: suminf.    0.45011 (2) obj. -1011.36 iterations 5
Cbc0038I Pass  50: suminf.    0.27252 (3) obj. -1011.36 iterations 5
Cbc0038I Pass  51: suminf.    0.38333 (1) obj. -1024.83 iterations 4
Cbc0038I Pass  52: suminf.    0.38333 (1) obj. -1024.83 iterations 2
Cbc0038I Pass  53: suminf.    0.98906 (3) obj. -1011.36 iterations 10
Cbc0038I Pass  54: suminf.    0.88226 (3) obj. -1011.36 iterations 2
Cbc0038I Pass  55: suminf.    0.47675 (2) obj. -1017.44 iterations 2
Cbc0038I Pass  56: suminf.    0.46037 (2) obj. -1011.36 iterations 1
Cbc0038I Pass  57: suminf.    0.83365 (5) obj. -1011.36 iterations 6
Cbc0038I Pass  58: suminf.    0.56786 (5) obj. -1011.36 iterations 4
Cbc0038I Pass  59: suminf.    0.71684 (4) obj. -1011.36 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 24 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -985.503 - took 0.02 seconds
Cbc0012I Integer solution of -985.50275 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 24 columns, reduced to 16 rows 9 columns
Cbc0031I 5 added rows had average density of 12
Cbc0013I At root node, 31 cuts changed objective from -1114.7814 to -985.26282 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.5 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0001I Search completed - best objective -985.5027500000001, took 38 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 46 (-17) columns and 348 (-301) elements
Clp1000I sum of infeasibilities 2.60089e-11 - average 6.34362e-13, 41 fixed columns
Coin0506I Presolve 5 (-36) rows, 5 (-41) columns and 16 (-332) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 1497.4991
Clp0000I Optimal - objective value 1497.4991
Coin0511I After Postsolve, objective 1497.4991, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1285644 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 1534.7572
Clp0000I Optimal - objective value 1534.7572
Clp0000I Optimal - objective value 1534.7572
Coin0511I After Postsolve, objective 1534.7572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1534.757188 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 359 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.766%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.4378
Cbc0038I Pass   1: suminf.    0.39255 (6) obj. -409.168 iterations 22
Cbc0038I Pass   2: suminf.    0.39255 (6) obj. -409.168 iterations 1
Cbc0038I Solution found of -399.774
Cbc0038I Rounding solution of -447.373 is better than previous of -399.774

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -447.373 to -899.342 (0.02 seconds)
Cbc0038I Round again with cutoff of -922.454
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.56710 (19) obj. -922.454 iterations 10
Cbc0038I Pass   4: suminf.    0.93672 (7) obj. -1025.49 iterations 13
Cbc0038I Pass   5: suminf.    0.69573 (6) obj. -922.454 iterations 3
Cbc0038I Pass   6: suminf.    0.30894 (1) obj. -955.106 iterations 6
Cbc0038I Pass   7: suminf.    0.27272 (1) obj. -922.454 iterations 1
Cbc0038I Pass   8: suminf.    0.58648 (3) obj. -922.454 iterations 7
Cbc0038I Pass   9: suminf.    0.38614 (1) obj. -940.077 iterations 5
Cbc0038I Pass  10: suminf.    0.40569 (1) obj. -922.454 iterations 1
Cbc0038I Pass  11: suminf.    0.39394 (9) obj. -922.454 iterations 17
Cbc0038I Pass  12: suminf.    0.39394 (9) obj. -922.454 iterations 1
Cbc0038I Pass  13: suminf.    0.69341 (6) obj. -922.454 iterations 8
Cbc0038I Pass  14: suminf.    0.27886 (2) obj. -945.772 iterations 7
Cbc0038I Pass  15: suminf.    0.21608 (2) obj. -922.454 iterations 1
Cbc0038I Pass  16: suminf.    0.83173 (6) obj. -922.454 iterations 6
Cbc0038I Pass  17: suminf.    0.64856 (5) obj. -922.454 iterations 2
Cbc0038I Pass  18: suminf.    0.27886 (2) obj. -947.772 iterations 6
Cbc0038I Pass  19: suminf.    0.21070 (2) obj. -922.454 iterations 1
Cbc0038I Pass  20: suminf.    1.28439 (5) obj. -996.152 iterations 14
Cbc0038I Pass  21: suminf.    1.01645 (5) obj. -922.454 iterations 7
Cbc0038I Pass  22: suminf.    0.30894 (1) obj. -953.106 iterations 6
Cbc0038I Pass  23: suminf.    0.27494 (1) obj. -922.454 iterations 1
Cbc0038I Pass  24: suminf.    2.09310 (10) obj. -922.454 iterations 23
Cbc0038I Pass  25: suminf.    2.02129 (12) obj. -922.454 iterations 8
Cbc0038I Pass  26: suminf.    0.07853 (2) obj. -922.454 iterations 20
Cbc0038I Solution found of -961.503
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -961.503 to -985.503 (0.03 seconds)
Cbc0038I Round again with cutoff of -1014.5
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  27: suminf.    2.79666 (19) obj. -1014.5 iterations 0
Cbc0038I Pass  28: suminf.    0.50863 (2) obj. -1020.92 iterations 22
Cbc0038I Pass  29: suminf.    0.46882 (2) obj. -1014.5 iterations 2
Cbc0038I Pass  30: suminf.    0.47675 (2) obj. -1017.44 iterations 2
Cbc0038I Pass  31: suminf.    1.56207 (7) obj. -1014.5 iterations 13
Cbc0038I Pass  32: suminf.    1.36982 (9) obj. -1014.5 iterations 2
Cbc0038I Pass  33: suminf.    0.77792 (4) obj. -1014.5 iterations 6
Cbc0038I Pass  34: suminf.    0.47694 (3) obj. -1014.5 iterations 1
Cbc0038I Pass  35: suminf.    0.47753 (3) obj. -1014.5 iterations 1
Cbc0038I Pass  36: suminf.    1.62248 (7) obj. -1014.5 iterations 9
Cbc0038I Pass  37: suminf.    1.62248 (7) obj. -1014.5 iterations 2
Cbc0038I Pass  38: suminf.    0.85144 (3) obj. -1014.5 iterations 6
Cbc0038I Pass  39: suminf.    0.85144 (3) obj. -1014.5 iterations 1
Cbc0038I Pass  40: suminf.    0.92898 (3) obj. -1014.5 iterations 4
Cbc0038I Pass  41: suminf.    0.92898 (3) obj. -1014.5 iterations 0
Cbc0038I Pass  42: suminf.    0.94065 (3) obj. -1014.5 iterations 1
Cbc0038I Pass  43: suminf.    1.57483 (8) obj. -1014.5 iterations 11
Cbc0038I Pass  44: suminf.    1.57483 (8) obj. -1014.5 iterations 0
Cbc0038I Pass  45: suminf.    0.88110 (3) obj. -1014.5 iterations 7
Cbc0038I Pass  46: suminf.    0.88110 (3) obj. -1014.5 iterations 0
Cbc0038I Pass  47: suminf.    0.99309 (4) obj. -1014.5 iterations 2
Cbc0038I Pass  48: suminf.    0.98424 (4) obj. -1014.5 iterations 2
Cbc0038I Pass  49: suminf.    0.71365 (3) obj. -1014.5 iterations 3
Cbc0038I Pass  50: suminf.    0.71365 (3) obj. -1014.5 iterations 1
Cbc0038I Pass  51: suminf.    0.88110 (3) obj. -1014.5 iterations 2
Cbc0038I Pass  52: suminf.    0.88110 (3) obj. -1014.5 iterations 2
Cbc0038I Pass  53: suminf.    0.99309 (4) obj. -1014.5 iterations 3
Cbc0038I Pass  54: suminf.    0.98424 (4) obj. -1014.5 iterations 2
Cbc0038I Pass  55: suminf.    0.71365 (3) obj. -1014.5 iterations 3
Cbc0038I Pass  56: suminf.    0.71365 (3) obj. -1014.5 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -985.503 - took 0.03 seconds
Cbc0012I Integer solution of -985.50275 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 29 rows 28 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 4.4285714
Cbc0013I At root node, 7 cuts changed objective from -1130.4665 to -992.41697 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 39 row cuts average 2.3 elements, 22 column cuts (22 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -985.5027500000001, took 40 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

