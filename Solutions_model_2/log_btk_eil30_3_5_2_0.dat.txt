Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 29 (-3) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 5.47565e-05 - average 1.11748e-06, 4 fixed columns
Coin0506I Presolve 43 (-6) rows, 25 (-4) columns and 128 (-20) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Coin0511I After Postsolve, objective 66.593293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Coin0511I After Postsolve, objective 66.593293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.59329314 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 29 columns (28 integer (28 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.864%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.79749
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.3875 iterations 25
Cbc0038I Solution found of 5.3875
Cbc0038I Relaxing continuous gives 5.3875
Cbc0038I Rounding solution of 2.9125 is better than previous of 5.3875

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 39 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 2.9125 to -26.9062 (0.05 seconds)
Cbc0038I Round again with cutoff of -30.875
Cbc0038I Pass   2: suminf.    1.80996 (6) obj. -30.875 iterations 7
Cbc0038I Pass   3: suminf.    1.51333 (5) obj. -30.875 iterations 6
Cbc0038I Pass   4: suminf.    2.37725 (6) obj. -30.875 iterations 10
Cbc0038I Pass   5: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass   6: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass   7: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass   8: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass   9: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  10: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  11: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  12: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  13: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  14: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  15: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  16: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  17: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  18: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  19: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  20: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  21: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  22: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  23: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  24: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  25: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  26: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  27: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  28: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  29: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  30: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  31: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 39 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -26.9062 - took 0.06 seconds
Cbc0012I Integer solution of -26.9062 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 15 added rows had average density of 22.4
Cbc0013I At root node, 15 cuts changed objective from -66.593293 to -40.496546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2519 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1334 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 196 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.643 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.9062 best solution, best possible -40.496546 (1.40 seconds)
Cbc0001I Search completed - best objective -26.90620000000001, took 3292 iterations and 10 nodes (1.45 seconds)
Cbc0032I Strong branching done 146 times (1316 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-15) rows, 54 (-6) columns and 498 (-114) elements
Clp1000I sum of infeasibilities 7.45419e-10 - average 1.586e-11, 39 fixed columns
Coin0506I Presolve 10 (-37) rows, 15 (-39) columns and 45 (-453) elements
Clp0006I 0  Obj 2.0951017 Dual inf 786.64169 (14)
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 0.23704526 - largest nonzero change 0 ( 0%) - largest zero change 2.8607977e-05
Clp0000I Optimal - objective value 17.756131
Clp0000I Optimal - objective value 17.756131
Coin0511I After Postsolve, objective 17.756131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 17.756131 Dual inf 635.65256 (27)
Clp0014I Perturbing problem by 0.001% of 0.21073051 - largest nonzero change 2.2304298e-05 ( 0.0018908272%) - largest zero change 2.7999421e-05
Clp0000I Optimal - objective value 87.462581
Clp0000I Optimal - objective value 87.462581
Clp0000I Optimal - objective value 87.462581
Coin0511I After Postsolve, objective 87.462581, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.4625812 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 54 columns (54 integer (54 of which binary)) and 500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.730%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.53008
Cbc0038I Pass   1: suminf.    3.52241 (16) obj. -53.6628 iterations 8
Cbc0038I Pass   2: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Solution found of -5.625
Cbc0038I Rounding solution of -7.4125 is better than previous of -5.625

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -7.4125 to -20.825 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.8056
Cbc0038I Pass   3: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass   4: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass   5: suminf.    0.51266 (4) obj. -25.8056 iterations 18
Cbc0038I Pass   6: suminf.    0.28640 (4) obj. -25.8056 iterations 2
Cbc0038I Pass   7: suminf.    0.29006 (2) obj. -26.8636 iterations 3
Cbc0038I Pass   8: suminf.    0.23380 (3) obj. -25.8056 iterations 2
Cbc0038I Pass   9: suminf.    1.70730 (7) obj. -25.8056 iterations 10
Cbc0038I Pass  10: suminf.    1.38148 (6) obj. -25.8056 iterations 3
Cbc0038I Pass  11: suminf.    1.56242 (5) obj. -25.8056 iterations 6
Cbc0038I Pass  12: suminf.    1.56242 (5) obj. -25.8056 iterations 0
Cbc0038I Pass  13: suminf.    0.79137 (4) obj. -25.8056 iterations 3
Cbc0038I Pass  14: suminf.    0.79137 (4) obj. -25.8056 iterations 0
Cbc0038I Pass  15: suminf.    0.87941 (4) obj. -25.8056 iterations 1
Cbc0038I Pass  16: suminf.    0.87923 (4) obj. -25.8056 iterations 1
Cbc0038I Pass  17: suminf.    0.79137 (4) obj. -25.8056 iterations 2
Cbc0038I Pass  18: suminf.    2.15856 (6) obj. -25.8056 iterations 11
Cbc0038I Pass  19: suminf.    2.15856 (6) obj. -25.8056 iterations 0
Cbc0038I Pass  20: suminf.    1.68949 (5) obj. -25.8056 iterations 8
Cbc0038I Pass  21: suminf.    1.68949 (5) obj. -25.8056 iterations 0
Cbc0038I Pass  22: suminf.    1.95071 (5) obj. -27.5308 iterations 1
Cbc0038I Pass  23: suminf.    1.75902 (5) obj. -25.8056 iterations 2
Cbc0038I Pass  24: suminf.    1.68949 (5) obj. -25.8056 iterations 1
Cbc0038I Pass  25: suminf.    3.38372 (9) obj. -25.8056 iterations 10
Cbc0038I Pass  26: suminf.    2.64899 (8) obj. -25.8056 iterations 3
Cbc0038I Pass  27: suminf.    1.95525 (7) obj. -25.8056 iterations 2
Cbc0038I Pass  28: suminf.    1.96155 (6) obj. -25.8056 iterations 5
Cbc0038I Pass  29: suminf.    1.96155 (6) obj. -25.8056 iterations 0
Cbc0038I Pass  30: suminf.    1.88658 (6) obj. -25.8056 iterations 1
Cbc0038I Pass  31: suminf.    1.88658 (6) obj. -25.8056 iterations 0
Cbc0038I Pass  32: suminf.    1.96155 (6) obj. -25.8056 iterations 1
Cbc0038I Rounding solution of -22.325 is better than previous of -20.825

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -22.325 to -23.35 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.7706
Cbc0038I Pass  32: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  33: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  34: suminf.    0.89859 (5) obj. -34.7706 iterations 20
Cbc0038I Pass  35: suminf.    0.89859 (5) obj. -34.7706 iterations 0
Cbc0038I Pass  36: suminf.    0.95982 (4) obj. -34.7706 iterations 2
Cbc0038I Pass  37: suminf.    0.95964 (4) obj. -34.7706 iterations 1
Cbc0038I Pass  38: suminf.    0.89859 (4) obj. -34.7706 iterations 2
Cbc0038I Pass  39: suminf.    0.89859 (4) obj. -34.7706 iterations 0
Cbc0038I Pass  40: suminf.    2.33758 (11) obj. -34.7706 iterations 18
Cbc0038I Pass  41: suminf.    2.24339 (11) obj. -34.7706 iterations 2
Cbc0038I Pass  42: suminf.    2.09113 (8) obj. -34.7706 iterations 13
Cbc0038I Pass  43: suminf.    1.51171 (6) obj. -34.7706 iterations 2
Cbc0038I Pass  44: suminf.    1.45341 (5) obj. -34.7706 iterations 2
Cbc0038I Pass  45: suminf.    1.33340 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  46: suminf.    1.51171 (6) obj. -34.7706 iterations 3
Cbc0038I Pass  47: suminf.    3.19933 (12) obj. -34.7706 iterations 14
Cbc0038I Pass  48: suminf.    2.47112 (10) obj. -34.7706 iterations 5
Cbc0038I Pass  49: suminf.    1.99290 (6) obj. -34.7706 iterations 13
Cbc0038I Pass  50: suminf.    1.99290 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  51: suminf.    1.82095 (6) obj. -34.7706 iterations 2
Cbc0038I Pass  52: suminf.    1.82095 (6) obj. -34.7706 iterations 0
Cbc0038I Pass  53: suminf.    1.99290 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  54: suminf.    3.26159 (8) obj. -34.7706 iterations 11
Cbc0038I Pass  55: suminf.    2.08730 (6) obj. -34.7706 iterations 5
Cbc0038I Pass  56: suminf.    2.08730 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  57: suminf.    2.62351 (6) obj. -34.7706 iterations 3
Cbc0038I Pass  58: suminf.    1.83031 (6) obj. -34.7706 iterations 3
Cbc0038I Pass  59: suminf.    1.80457 (6) obj. -34.7706 iterations 2
Cbc0038I Pass  60: suminf.    1.95340 (6) obj. -35.6635 iterations 1
Cbc0038I Pass  61: suminf.    4.71573 (12) obj. -34.7706 iterations 14
Cbc0038I Rounding solution of -24.925 is better than previous of -23.35

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -24.925 to -26.9062 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.5285
Cbc0038I Pass  61: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  62: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  63: suminf.    2.12923 (7) obj. -45.5285 iterations 18
Cbc0038I Pass  64: suminf.    2.12923 (7) obj. -45.5285 iterations 0
Cbc0038I Pass  65: suminf.    1.99255 (6) obj. -45.5285 iterations 2
Cbc0038I Pass  66: suminf.    1.99255 (6) obj. -45.5285 iterations 0
Cbc0038I Pass  67: suminf.    2.00615 (6) obj. -45.5285 iterations 1
Cbc0038I Pass  68: suminf.    1.78279 (7) obj. -45.5285 iterations 2
Cbc0038I Pass  69: suminf.    1.88115 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  70: suminf.    1.80609 (7) obj. -45.5285 iterations 1
Cbc0038I Pass  71: suminf.    2.00615 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  72: suminf.    2.17039 (10) obj. -45.5285 iterations 12
Cbc0038I Pass  73: suminf.    1.84111 (8) obj. -45.5285 iterations 5
Cbc0038I Pass  74: suminf.    2.00615 (6) obj. -45.5285 iterations 9
Cbc0038I Pass  75: suminf.    1.78279 (7) obj. -45.5285 iterations 2
Cbc0038I Pass  76: suminf.    1.88115 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  77: suminf.    1.80609 (7) obj. -45.5285 iterations 1
Cbc0038I Pass  78: suminf.    2.00615 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  79: suminf.    3.24944 (10) obj. -45.5285 iterations 12
Cbc0038I Pass  80: suminf.    2.73974 (9) obj. -45.5285 iterations 4
Cbc0038I Pass  81: suminf.    2.26590 (8) obj. -45.5285 iterations 3
Cbc0038I Pass  82: suminf.    2.19794 (7) obj. -45.5285 iterations 7
Cbc0038I Pass  83: suminf.    1.90567 (7) obj. -45.5285 iterations 1
Cbc0038I Pass  84: suminf.    1.76226 (6) obj. -45.5285 iterations 2
Cbc0038I Pass  85: suminf.    2.48483 (7) obj. -46.3442 iterations 5
Cbc0038I Pass  86: suminf.    2.48483 (7) obj. -46.3442 iterations 1
Cbc0038I Pass  87: suminf.    1.93035 (6) obj. -45.5285 iterations 7
Cbc0038I Pass  88: suminf.    1.93035 (6) obj. -45.5285 iterations 0
Cbc0038I Pass  89: suminf.    2.14367 (7) obj. -45.5285 iterations 4
Cbc0038I Pass  90: suminf.    2.14367 (7) obj. -45.5285 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.9062 - took 0.03 seconds
Cbc0012I Integer solution of -26.9062 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 54 columns, reduced to 12 rows 14 columns
Cbc0031I 23 added rows had average density of 5.9565217
Cbc0013I At root node, 23 cuts changed objective from -70.630326 to -28.263078 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 254 row cuts average 2.5 elements, 20 column cuts (20 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.9062 best solution, best possible -28.263078 (0.17 seconds)
Cbc0001I Search completed - best objective -26.90620000000001, took 306 iterations and 10 nodes (0.47 seconds)
Cbc0032I Strong branching done 92 times (334 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 29 (-3) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 5.47565e-05 - average 1.11748e-06, 4 fixed columns
Coin0506I Presolve 43 (-6) rows, 25 (-4) columns and 128 (-20) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Coin0511I After Postsolve, objective 66.593293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Clp0000I Optimal - objective value 66.593293
Coin0511I After Postsolve, objective 66.593293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.59329314 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 29 columns (28 integer (28 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.864%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.79749
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.3875 iterations 25
Cbc0038I Solution found of 5.3875
Cbc0038I Relaxing continuous gives 5.3875
Cbc0038I Rounding solution of 2.9125 is better than previous of 5.3875

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 39 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 2.9125 to -26.9062 (0.05 seconds)
Cbc0038I Round again with cutoff of -30.875
Cbc0038I Pass   2: suminf.    1.80996 (6) obj. -30.875 iterations 7
Cbc0038I Pass   3: suminf.    1.51333 (5) obj. -30.875 iterations 6
Cbc0038I Pass   4: suminf.    2.37725 (6) obj. -30.875 iterations 10
Cbc0038I Pass   5: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass   6: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass   7: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass   8: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass   9: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  10: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  11: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  12: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  13: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  14: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  15: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  16: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  17: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  18: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  19: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  20: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  21: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  22: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  23: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  24: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I Pass  25: suminf.    2.37725 (6) obj. -30.875 iterations 6
Cbc0038I Pass  26: suminf.    2.17355 (5) obj. -30.875 iterations 1
Cbc0038I Pass  27: suminf.    1.68377 (5) obj. -30.875 iterations 1
Cbc0038I Pass  28: suminf.    1.28652 (4) obj. -30.875 iterations 4
Cbc0038I Pass  29: suminf.    1.61382 (5) obj. -30.875 iterations 5
Cbc0038I Pass  30: suminf.    1.31291 (5) obj. -30.875 iterations 1
Cbc0038I Pass  31: suminf.    1.31291 (5) obj. -30.875 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 39 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -26.9062 - took 0.06 seconds
Cbc0012I Integer solution of -26.9062 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 15 added rows had average density of 22.4
Cbc0013I At root node, 15 cuts changed objective from -66.593293 to -40.496546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2519 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1334 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 196 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.753 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.9062 best solution, best possible -40.496546 (1.61 seconds)
Cbc0001I Search completed - best objective -26.90620000000001, took 3292 iterations and 10 nodes (1.67 seconds)
Cbc0032I Strong branching done 146 times (1316 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 54 (-7) columns and 498 (-115) elements
Clp1000I sum of infeasibilities 7.45419e-10 - average 1.586e-11, 39 fixed columns
Coin0506I Presolve 10 (-37) rows, 15 (-39) columns and 45 (-453) elements
Clp0006I 0  Obj 2.0951017 Dual inf 786.64169 (14)
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 0.23704526 - largest nonzero change 0 ( 0%) - largest zero change 2.8607977e-05
Clp0000I Optimal - objective value 17.756131
Clp0000I Optimal - objective value 17.756131
Coin0511I After Postsolve, objective 17.756131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 17.756131 Dual inf 635.65256 (27)
Clp0014I Perturbing problem by 0.001% of 0.21073051 - largest nonzero change 2.2304298e-05 ( 0.0018908272%) - largest zero change 2.7999421e-05
Clp0000I Optimal - objective value 87.462581
Clp0000I Optimal - objective value 87.462581
Clp0000I Optimal - objective value 87.462581
Coin0511I After Postsolve, objective 87.462581, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.4625812 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 54 columns (54 integer (54 of which binary)) and 500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.730%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.53008
Cbc0038I Pass   1: suminf.    3.52241 (16) obj. -53.6628 iterations 8
Cbc0038I Pass   2: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Solution found of -5.625
Cbc0038I Rounding solution of -7.4125 is better than previous of -5.625

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -7.4125 to -20.825 (0.02 seconds)
Cbc0038I Round again with cutoff of -25.8056
Cbc0038I Pass   3: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass   4: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass   5: suminf.    0.51266 (4) obj. -25.8056 iterations 18
Cbc0038I Pass   6: suminf.    0.28640 (4) obj. -25.8056 iterations 2
Cbc0038I Pass   7: suminf.    0.29006 (2) obj. -26.8636 iterations 3
Cbc0038I Pass   8: suminf.    0.23380 (3) obj. -25.8056 iterations 2
Cbc0038I Pass   9: suminf.    1.70730 (7) obj. -25.8056 iterations 10
Cbc0038I Pass  10: suminf.    1.38148 (6) obj. -25.8056 iterations 3
Cbc0038I Pass  11: suminf.    1.56242 (5) obj. -25.8056 iterations 6
Cbc0038I Pass  12: suminf.    1.56242 (5) obj. -25.8056 iterations 0
Cbc0038I Pass  13: suminf.    0.79137 (4) obj. -25.8056 iterations 3
Cbc0038I Pass  14: suminf.    0.79137 (4) obj. -25.8056 iterations 0
Cbc0038I Pass  15: suminf.    0.87941 (4) obj. -25.8056 iterations 1
Cbc0038I Pass  16: suminf.    0.87923 (4) obj. -25.8056 iterations 1
Cbc0038I Pass  17: suminf.    0.79137 (4) obj. -25.8056 iterations 2
Cbc0038I Pass  18: suminf.    2.15856 (6) obj. -25.8056 iterations 11
Cbc0038I Pass  19: suminf.    2.15856 (6) obj. -25.8056 iterations 0
Cbc0038I Pass  20: suminf.    1.68949 (5) obj. -25.8056 iterations 8
Cbc0038I Pass  21: suminf.    1.68949 (5) obj. -25.8056 iterations 0
Cbc0038I Pass  22: suminf.    1.95071 (5) obj. -27.5308 iterations 1
Cbc0038I Pass  23: suminf.    1.75902 (5) obj. -25.8056 iterations 2
Cbc0038I Pass  24: suminf.    1.68949 (5) obj. -25.8056 iterations 1
Cbc0038I Pass  25: suminf.    3.38372 (9) obj. -25.8056 iterations 10
Cbc0038I Pass  26: suminf.    2.64899 (8) obj. -25.8056 iterations 3
Cbc0038I Pass  27: suminf.    1.95525 (7) obj. -25.8056 iterations 2
Cbc0038I Pass  28: suminf.    1.96155 (6) obj. -25.8056 iterations 5
Cbc0038I Pass  29: suminf.    1.96155 (6) obj. -25.8056 iterations 0
Cbc0038I Pass  30: suminf.    1.88658 (6) obj. -25.8056 iterations 1
Cbc0038I Pass  31: suminf.    1.88658 (6) obj. -25.8056 iterations 0
Cbc0038I Pass  32: suminf.    1.96155 (6) obj. -25.8056 iterations 1
Cbc0038I Rounding solution of -22.325 is better than previous of -20.825

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -22.325 to -23.35 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.7706
Cbc0038I Pass  32: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  33: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  34: suminf.    0.89859 (5) obj. -34.7706 iterations 20
Cbc0038I Pass  35: suminf.    0.89859 (5) obj. -34.7706 iterations 0
Cbc0038I Pass  36: suminf.    0.95982 (4) obj. -34.7706 iterations 2
Cbc0038I Pass  37: suminf.    0.95964 (4) obj. -34.7706 iterations 1
Cbc0038I Pass  38: suminf.    0.89859 (4) obj. -34.7706 iterations 2
Cbc0038I Pass  39: suminf.    0.89859 (4) obj. -34.7706 iterations 0
Cbc0038I Pass  40: suminf.    2.33758 (11) obj. -34.7706 iterations 18
Cbc0038I Pass  41: suminf.    2.24339 (11) obj. -34.7706 iterations 2
Cbc0038I Pass  42: suminf.    2.09113 (8) obj. -34.7706 iterations 13
Cbc0038I Pass  43: suminf.    1.51171 (6) obj. -34.7706 iterations 2
Cbc0038I Pass  44: suminf.    1.45341 (5) obj. -34.7706 iterations 2
Cbc0038I Pass  45: suminf.    1.33340 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  46: suminf.    1.51171 (6) obj. -34.7706 iterations 3
Cbc0038I Pass  47: suminf.    3.19933 (12) obj. -34.7706 iterations 14
Cbc0038I Pass  48: suminf.    2.47112 (10) obj. -34.7706 iterations 5
Cbc0038I Pass  49: suminf.    1.99290 (6) obj. -34.7706 iterations 13
Cbc0038I Pass  50: suminf.    1.99290 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  51: suminf.    1.82095 (6) obj. -34.7706 iterations 2
Cbc0038I Pass  52: suminf.    1.82095 (6) obj. -34.7706 iterations 0
Cbc0038I Pass  53: suminf.    1.99290 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  54: suminf.    3.26159 (8) obj. -34.7706 iterations 11
Cbc0038I Pass  55: suminf.    2.08730 (6) obj. -34.7706 iterations 5
Cbc0038I Pass  56: suminf.    2.08730 (6) obj. -34.7706 iterations 1
Cbc0038I Pass  57: suminf.    2.62351 (6) obj. -34.7706 iterations 3
Cbc0038I Pass  58: suminf.    1.83031 (6) obj. -34.7706 iterations 3
Cbc0038I Pass  59: suminf.    1.80457 (6) obj. -34.7706 iterations 2
Cbc0038I Pass  60: suminf.    1.95340 (6) obj. -35.6635 iterations 1
Cbc0038I Pass  61: suminf.    4.71573 (12) obj. -34.7706 iterations 14
Cbc0038I Rounding solution of -24.925 is better than previous of -23.35

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -24.925 to -26.9062 (0.04 seconds)
Cbc0038I Round again with cutoff of -45.5285
Cbc0038I Pass  61: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  62: suminf.    3.52241 (16) obj. -53.6628 iterations 0
Cbc0038I Pass  63: suminf.    2.12923 (7) obj. -45.5285 iterations 18
Cbc0038I Pass  64: suminf.    2.12923 (7) obj. -45.5285 iterations 0
Cbc0038I Pass  65: suminf.    1.99255 (6) obj. -45.5285 iterations 2
Cbc0038I Pass  66: suminf.    1.99255 (6) obj. -45.5285 iterations 0
Cbc0038I Pass  67: suminf.    2.00615 (6) obj. -45.5285 iterations 1
Cbc0038I Pass  68: suminf.    1.78279 (7) obj. -45.5285 iterations 2
Cbc0038I Pass  69: suminf.    1.88115 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  70: suminf.    1.80609 (7) obj. -45.5285 iterations 1
Cbc0038I Pass  71: suminf.    2.00615 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  72: suminf.    2.17039 (10) obj. -45.5285 iterations 12
Cbc0038I Pass  73: suminf.    1.84111 (8) obj. -45.5285 iterations 5
Cbc0038I Pass  74: suminf.    2.00615 (6) obj. -45.5285 iterations 9
Cbc0038I Pass  75: suminf.    1.78279 (7) obj. -45.5285 iterations 2
Cbc0038I Pass  76: suminf.    1.88115 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  77: suminf.    1.80609 (7) obj. -45.5285 iterations 1
Cbc0038I Pass  78: suminf.    2.00615 (6) obj. -45.5285 iterations 3
Cbc0038I Pass  79: suminf.    3.24944 (10) obj. -45.5285 iterations 12
Cbc0038I Pass  80: suminf.    2.73974 (9) obj. -45.5285 iterations 4
Cbc0038I Pass  81: suminf.    2.26590 (8) obj. -45.5285 iterations 3
Cbc0038I Pass  82: suminf.    2.19794 (7) obj. -45.5285 iterations 7
Cbc0038I Pass  83: suminf.    1.90567 (7) obj. -45.5285 iterations 1
Cbc0038I Pass  84: suminf.    1.76226 (6) obj. -45.5285 iterations 2
Cbc0038I Pass  85: suminf.    2.48483 (7) obj. -46.3442 iterations 5
Cbc0038I Pass  86: suminf.    2.48483 (7) obj. -46.3442 iterations 1
Cbc0038I Pass  87: suminf.    1.93035 (6) obj. -45.5285 iterations 7
Cbc0038I Pass  88: suminf.    1.93035 (6) obj. -45.5285 iterations 0
Cbc0038I Pass  89: suminf.    2.14367 (7) obj. -45.5285 iterations 4
Cbc0038I Pass  90: suminf.    2.14367 (7) obj. -45.5285 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -26.9062 - took 0.03 seconds
Cbc0012I Integer solution of -26.9062 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 47 rows 54 columns, reduced to 12 rows 14 columns
Cbc0031I 23 added rows had average density of 5.9565217
Cbc0013I At root node, 23 cuts changed objective from -70.630326 to -28.263078 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 254 row cuts average 2.5 elements, 20 column cuts (20 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.9062 best solution, best possible -28.263078 (0.19 seconds)
Cbc0001I Search completed - best objective -26.90620000000001, took 306 iterations and 10 nodes (0.53 seconds)
Cbc0032I Strong branching done 92 times (334 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.53

