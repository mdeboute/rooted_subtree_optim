Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-20) rows, 17 (-8) columns and 85 (-50) elements
Clp1000I sum of infeasibilities 1.92265e-06 - average 6.62984e-08, 12 fixed columns
Coin0506I Presolve 3 (-26) rows, 3 (-14) columns and 7 (-78) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 11219.009
Clp0000I Optimal - objective value 11219.009
Coin0511I After Postsolve, objective 11219.009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1801161 - largest nonzero change 2.3757001e-05 ( 0.0015070958%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 11219.009
Clp0000I Optimal - objective value 11219.009
Clp0000I Optimal - objective value 11219.009
Coin0511I After Postsolve, objective 11219.009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11219.00908 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 17 columns (16 integer (16 of which binary)) and 85 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.042%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.66798
Cbc0038I Pass   1: suminf.    0.94326 (3) obj. -10065.6 iterations 3
Cbc0038I Solution found of -4280.62
Cbc0038I Relaxing continuous gives -4280.62
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 17 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4868.26
Cbc0038I Pass   2: suminf.    0.94326 (3) obj. -10065.6 iterations 0
Cbc0038I Pass   3: suminf.    0.09023 (1) obj. -4868.26 iterations 3
Cbc0038I Pass   4: suminf.    0.24240 (1) obj. -9214.75 iterations 1
Cbc0038I Pass   5: suminf.    0.87183 (2) obj. -8569.95 iterations 2
Cbc0038I Pass   6: suminf.    0.09023 (1) obj. -4868.26 iterations 2
Cbc0038I Pass   7: suminf.    0.40401 (1) obj. -8162.25 iterations 1
Cbc0038I Pass   8: suminf.    1.16262 (3) obj. -8695.52 iterations 3
Cbc0038I Pass   9: suminf.    0.20586 (1) obj. -4868.26 iterations 3
Cbc0038I Pass  10: suminf.    0.32321 (1) obj. -7935.38 iterations 1
Cbc0038I Pass  11: suminf.    0.12928 (1) obj. -6464 iterations 5
Cbc0038I Pass  12: suminf.    0.12928 (1) obj. -6464 iterations 1
Cbc0038I Pass  13: suminf.    0.37430 (1) obj. -4868.26 iterations 1
Cbc0038I Pass  14: suminf.    0.37430 (1) obj. -4868.26 iterations 2
Cbc0038I Pass  15: suminf.    0.04589 (2) obj. -8229.09 iterations 7
Cbc0038I Pass  16: suminf.    0.04589 (2) obj. -8229.09 iterations 0
Cbc0038I Pass  17: suminf.    0.38585 (1) obj. -4868.26 iterations 4
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -7360 iterations 1
Cbc0038I Solution found of -7360
Cbc0038I Relaxing continuous gives -7360
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 17 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -7360 to -7360.01 (0.01 seconds)
Cbc0038I Round again with cutoff of -7919.41
Cbc0038I Pass  19: suminf.    0.94326 (3) obj. -10065.6 iterations 0
Cbc0038I Pass  20: suminf.    0.44129 (1) obj. -7919.41 iterations 3
Cbc0038I Pass  21: suminf.    0.24240 (1) obj. -9214.75 iterations 1
Cbc0038I Pass  22: suminf.    0.41209 (1) obj. -8109.63 iterations 4
Cbc0038I Pass  23: suminf.    0.41209 (1) obj. -8109.63 iterations 1
Cbc0038I Pass  24: suminf.    0.44129 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  25: suminf.    0.44129 (1) obj. -7919.41 iterations 5
Cbc0038I Pass  26: suminf.    0.36167 (1) obj. -8438.01 iterations 1
Cbc0038I Pass  27: suminf.    0.44129 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  28: suminf.    0.12581 (1) obj. -7919.41 iterations 2
Cbc0038I Pass  29: suminf.    0.12581 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  30: suminf.    0.21816 (1) obj. -8520.87 iterations 1
Cbc0038I Pass  31: suminf.    1.30575 (3) obj. -7919.41 iterations 4
Cbc0038I Pass  32: suminf.    0.28087 (1) obj. -8211.13 iterations 1
Cbc0038I Pass  33: suminf.    0.32566 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  34: suminf.    0.20814 (1) obj. -8684.76 iterations 2
Cbc0038I Pass  35: suminf.    0.32566 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  36: suminf.    0.20814 (1) obj. -8684.76 iterations 1
Cbc0038I Pass  37: suminf.    0.29395 (3) obj. -9386.6 iterations 8
Cbc0038I Pass  38: suminf.    0.29395 (3) obj. -9386.6 iterations 1
Cbc0038I Pass  39: suminf.    0.05661 (1) obj. -7919.41 iterations 3
Cbc0038I Pass  40: suminf.    0.00323 (1) obj. -8267.08 iterations 1
Cbc0038I Pass  41: suminf.    0.10019 (1) obj. -8537.7 iterations 1
Cbc0038I Pass  42: suminf.    0.19513 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  43: suminf.    0.10019 (1) obj. -8537.7 iterations 1
Cbc0038I Pass  44: suminf.    0.19884 (2) obj. -8408.72 iterations 8
Cbc0038I Pass  45: suminf.    0.19884 (2) obj. -8408.72 iterations 1
Cbc0038I Pass  46: suminf.    0.16741 (2) obj. -7919.41 iterations 3
Cbc0038I Pass  47: suminf.    0.16741 (2) obj. -7919.41 iterations 0
Cbc0038I Pass  48: suminf.    0.31076 (1) obj. -7919.41 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 17 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7360.01 - took 0.02 seconds
Cbc0012I Integer solution of -7360.005 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -8288.13 found by DiveCoefficient after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 29 rows 17 columns, reduced to 9 rows 10 columns
Cbc0012I Integer solution of -8330.135 found by DiveCoefficient after 12 iterations and 0 nodes (0.01 seconds)
Cbc0031I 4 added rows had average density of 3
Cbc0013I At root node, 4 cuts changed objective from -10157.009 to -8330.135 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 2.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8330.135, took 12 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-14) rows, 37 (-9) columns and 263 (-125) elements
Clp1000I sum of infeasibilities 0 - average 0, 25 fixed columns
Coin0506I Presolve 9 (-25) rows, 9 (-28) columns and 24 (-239) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 11266.881
Clp0000I Optimal - objective value 11266.881
Coin0511I After Postsolve, objective 11266.881, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1254382 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 11307.146
Clp0000I Optimal - objective value 11307.146
Clp0000I Optimal - objective value 11307.146
Coin0511I After Postsolve, objective 11307.146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11307.1458 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 36 columns (36 integer (36 of which binary)) and 245 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.562%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.14865
Cbc0038I Pass   1: suminf.    0.92653 (3) obj. -10447.2 iterations 12
Cbc0038I Pass   2: suminf.    0.92653 (3) obj. -10447.2 iterations 0
Cbc0038I Solution found of -5208.75
Cbc0038I Rounding solution of -5309.75 is better than previous of -5208.75

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 36 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -5309.75 to -6058.88 (0.01 seconds)
Cbc0038I Round again with cutoff of -6557.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.92653 (3) obj. -10447.2 iterations 0
Cbc0038I Pass   4: suminf.    0.92653 (3) obj. -10447.2 iterations 0
Cbc0038I Pass   5: suminf.    0.20708 (1) obj. -6557.45 iterations 4
Cbc0038I Pass   6: suminf.    0.27902 (1) obj. -9904.38 iterations 1
Cbc0038I Pass   7: suminf.    0.76966 (5) obj. -8913.62 iterations 6
Cbc0038I Pass   8: suminf.    0.76966 (5) obj. -8913.62 iterations 0
Cbc0038I Pass   9: suminf.    0.48549 (1) obj. -6557.45 iterations 5
Cbc0038I Pass  10: suminf.    0.15707 (1) obj. -8885.38 iterations 1
Cbc0038I Pass  11: suminf.    0.53370 (3) obj. -8927.46 iterations 3
Cbc0038I Pass  12: suminf.    0.48012 (1) obj. -6557.45 iterations 3
Cbc0038I Pass  13: suminf.    0.15707 (1) obj. -8920.38 iterations 1
Cbc0038I Pass  14: suminf.    1.36272 (5) obj. -8762.48 iterations 7
Cbc0038I Pass  15: suminf.    1.07502 (4) obj. -8760.47 iterations 2
Cbc0038I Pass  16: suminf.    0.48549 (1) obj. -6557.45 iterations 4
Cbc0038I Pass  17: suminf.    0.24390 (1) obj. -8319.87 iterations 1
Cbc0038I Pass  18: suminf.    1.01633 (4) obj. -8352.8 iterations 3
Cbc0038I Pass  19: suminf.    1.01633 (4) obj. -8352.8 iterations 0
Cbc0038I Pass  20: suminf.    1.00683 (9) obj. -9129.22 iterations 8
Cbc0038I Pass  21: suminf.    0.99883 (8) obj. -9125.17 iterations 2
Cbc0038I Pass  22: suminf.    0.49133 (1) obj. -6557.45 iterations 8
Cbc0038I Pass  23: suminf.    0.12195 (1) obj. -9076.13 iterations 1
Cbc0038I Pass  24: suminf.    1.82313 (7) obj. -8893.29 iterations 8
Cbc0038I Pass  25: suminf.    1.53696 (6) obj. -8884.41 iterations 1
Cbc0038I Pass  26: suminf.    0.49133 (1) obj. -6557.45 iterations 6
Cbc0038I Pass  27: suminf.    0.24390 (1) obj. -8281.87 iterations 1
Cbc0038I Pass  28: suminf.    2.28950 (8) obj. -7902.75 iterations 13
Cbc0038I Pass  29: suminf.    2.19636 (7) obj. -7899.86 iterations 1
Cbc0038I Pass  30: suminf.    0.39012 (1) obj. -6557.45 iterations 7
Cbc0038I Pass  31: suminf.    0.27293 (1) obj. -7320.72 iterations 1
Cbc0038I Pass  32: suminf.    1.03008 (5) obj. -8142.27 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -6058.88 - took 0.01 seconds
Cbc0012I Integer solution of -6058.875 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -6920 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 36 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -8330.135 found by DiveCoefficient after 110 iterations and 0 nodes (1.41 seconds)
Cbc0031I 18 added rows had average density of 6.2222222
Cbc0013I At root node, 18 cuts changed objective from -11044.671 to -8330.1353 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 335 row cuts average 4.4 elements, 2 column cuts (2 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 122 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 66 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.751 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.0002683312 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -8330.135, took 110 iterations and 0 nodes (1.41 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-20) rows, 17 (-8) columns and 85 (-50) elements
Clp1000I sum of infeasibilities 1.92265e-06 - average 6.62984e-08, 12 fixed columns
Coin0506I Presolve 3 (-26) rows, 3 (-14) columns and 7 (-78) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 11219.009
Clp0000I Optimal - objective value 11219.009
Coin0511I After Postsolve, objective 11219.009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1801161 - largest nonzero change 2.3757001e-05 ( 0.0015070958%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 11219.009
Clp0000I Optimal - objective value 11219.009
Clp0000I Optimal - objective value 11219.009
Coin0511I After Postsolve, objective 11219.009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11219.00908 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 17 columns (16 integer (16 of which binary)) and 85 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.042%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.66798
Cbc0038I Pass   1: suminf.    0.94326 (3) obj. -10065.6 iterations 3
Cbc0038I Solution found of -4280.62
Cbc0038I Relaxing continuous gives -4280.62
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 17 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4868.26
Cbc0038I Pass   2: suminf.    0.94326 (3) obj. -10065.6 iterations 0
Cbc0038I Pass   3: suminf.    0.09023 (1) obj. -4868.26 iterations 3
Cbc0038I Pass   4: suminf.    0.24240 (1) obj. -9214.75 iterations 1
Cbc0038I Pass   5: suminf.    0.87183 (2) obj. -8569.95 iterations 2
Cbc0038I Pass   6: suminf.    0.09023 (1) obj. -4868.26 iterations 2
Cbc0038I Pass   7: suminf.    0.40401 (1) obj. -8162.25 iterations 1
Cbc0038I Pass   8: suminf.    1.16262 (3) obj. -8695.52 iterations 3
Cbc0038I Pass   9: suminf.    0.20586 (1) obj. -4868.26 iterations 3
Cbc0038I Pass  10: suminf.    0.32321 (1) obj. -7935.38 iterations 1
Cbc0038I Pass  11: suminf.    0.12928 (1) obj. -6464 iterations 5
Cbc0038I Pass  12: suminf.    0.12928 (1) obj. -6464 iterations 1
Cbc0038I Pass  13: suminf.    0.37430 (1) obj. -4868.26 iterations 1
Cbc0038I Pass  14: suminf.    0.37430 (1) obj. -4868.26 iterations 2
Cbc0038I Pass  15: suminf.    0.04589 (2) obj. -8229.09 iterations 7
Cbc0038I Pass  16: suminf.    0.04589 (2) obj. -8229.09 iterations 0
Cbc0038I Pass  17: suminf.    0.38585 (1) obj. -4868.26 iterations 4
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -7360 iterations 1
Cbc0038I Solution found of -7360
Cbc0038I Relaxing continuous gives -7360
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 17 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -7360 to -7360.01 (0.01 seconds)
Cbc0038I Round again with cutoff of -7919.41
Cbc0038I Pass  19: suminf.    0.94326 (3) obj. -10065.6 iterations 0
Cbc0038I Pass  20: suminf.    0.44129 (1) obj. -7919.41 iterations 3
Cbc0038I Pass  21: suminf.    0.24240 (1) obj. -9214.75 iterations 1
Cbc0038I Pass  22: suminf.    0.41209 (1) obj. -8109.63 iterations 4
Cbc0038I Pass  23: suminf.    0.41209 (1) obj. -8109.63 iterations 1
Cbc0038I Pass  24: suminf.    0.44129 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  25: suminf.    0.44129 (1) obj. -7919.41 iterations 5
Cbc0038I Pass  26: suminf.    0.36167 (1) obj. -8438.01 iterations 1
Cbc0038I Pass  27: suminf.    0.44129 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  28: suminf.    0.12581 (1) obj. -7919.41 iterations 2
Cbc0038I Pass  29: suminf.    0.12581 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  30: suminf.    0.21816 (1) obj. -8520.87 iterations 1
Cbc0038I Pass  31: suminf.    1.30575 (3) obj. -7919.41 iterations 4
Cbc0038I Pass  32: suminf.    0.28087 (1) obj. -8211.13 iterations 1
Cbc0038I Pass  33: suminf.    0.32566 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  34: suminf.    0.20814 (1) obj. -8684.76 iterations 2
Cbc0038I Pass  35: suminf.    0.32566 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  36: suminf.    0.20814 (1) obj. -8684.76 iterations 1
Cbc0038I Pass  37: suminf.    0.29395 (3) obj. -9386.6 iterations 8
Cbc0038I Pass  38: suminf.    0.29395 (3) obj. -9386.6 iterations 1
Cbc0038I Pass  39: suminf.    0.05661 (1) obj. -7919.41 iterations 3
Cbc0038I Pass  40: suminf.    0.00323 (1) obj. -8267.08 iterations 1
Cbc0038I Pass  41: suminf.    0.10019 (1) obj. -8537.7 iterations 1
Cbc0038I Pass  42: suminf.    0.19513 (1) obj. -7919.41 iterations 1
Cbc0038I Pass  43: suminf.    0.10019 (1) obj. -8537.7 iterations 1
Cbc0038I Pass  44: suminf.    0.19884 (2) obj. -8408.72 iterations 8
Cbc0038I Pass  45: suminf.    0.19884 (2) obj. -8408.72 iterations 1
Cbc0038I Pass  46: suminf.    0.16741 (2) obj. -7919.41 iterations 3
Cbc0038I Pass  47: suminf.    0.16741 (2) obj. -7919.41 iterations 0
Cbc0038I Pass  48: suminf.    0.31076 (1) obj. -7919.41 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 17 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7360.01 - took 0.01 seconds
Cbc0012I Integer solution of -7360.005 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -8288.13 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 17 columns, reduced to 9 rows 10 columns
Cbc0012I Integer solution of -8330.135 found by DiveCoefficient after 12 iterations and 0 nodes (0.02 seconds)
Cbc0031I 4 added rows had average density of 3
Cbc0013I At root node, 4 cuts changed objective from -10157.009 to -8330.135 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 2.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8330.135, took 12 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-19) rows, 33 (-14) columns and 227 (-162) elements
Clp1000I sum of infeasibilities 0 - average 0, 21 fixed columns
Coin0506I Presolve 9 (-21) rows, 9 (-24) columns and 24 (-203) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 11266.881
Clp0000I Optimal - objective value 11266.881
Coin0511I After Postsolve, objective 11266.881, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5084365 - largest nonzero change 1.836629e-05 ( 0.001836629%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 11307.146
Clp0000I Optimal - objective value 11307.146
Clp0000I Optimal - objective value 11307.146
Coin0511I After Postsolve, objective 11307.146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11307.1458 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 35 columns (35 integer (35 of which binary)) and 237 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.781
Cbc0038I Pass   1: suminf.    0.50376 (2) obj. -9549.09 iterations 14
Cbc0038I Pass   2: suminf.    0.50376 (2) obj. -9549.09 iterations 1
Cbc0038I Solution found of -4455.62
Cbc0038I Rounding solution of -5309.75 is better than previous of -4455.62

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -5846.16
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.50376 (2) obj. -9549.09 iterations 0
Cbc0038I Pass   4: suminf.    0.50376 (2) obj. -9549.09 iterations 1
Cbc0038I Pass   5: suminf.    0.21351 (1) obj. -5846.16 iterations 2
Cbc0038I Pass   6: suminf.    0.21805 (1) obj. -9548.38 iterations 1
Cbc0038I Pass   7: suminf.    0.35244 (3) obj. -7777.4 iterations 7
Cbc0038I Pass   8: suminf.    0.35244 (3) obj. -7777.4 iterations 1
Cbc0038I Pass   9: suminf.    0.35514 (1) obj. -5846.16 iterations 3
Cbc0038I Pass  10: suminf.    0.05951 (1) obj. -7771.53 iterations 1
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -6400.88 iterations 6
Cbc0038I Solution found of -6400.88
Cbc0038I Rounding solution of -7356.01 is better than previous of -6400.88

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 35 columns, reduced to 21 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7356.01 to -8330.14 (0.02 seconds)
Cbc0038I Round again with cutoff of -8798.87
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.50376 (2) obj. -9549.09 iterations 0
Cbc0038I Pass  13: suminf.    0.50376 (2) obj. -9549.09 iterations 1
Cbc0038I Pass  14: suminf.    0.33313 (1) obj. -8798.87 iterations 2
Cbc0038I Pass  15: suminf.    0.21805 (1) obj. -9548.38 iterations 1
Cbc0038I Pass  16: suminf.    3.03645 (8) obj. -8798.87 iterations 9
Cbc0038I Pass  17: suminf.    1.93386 (5) obj. -9078.9 iterations 2
Cbc0038I Pass  18: suminf.    1.56110 (4) obj. -9077.78 iterations 1
Cbc0038I Pass  19: suminf.    0.46662 (2) obj. -8798.87 iterations 4
Cbc0038I Pass  20: suminf.    0.44917 (2) obj. -8798.87 iterations 1
Cbc0038I Pass  21: suminf.    0.32484 (1) obj. -8798.87 iterations 2
Cbc0038I Pass  22: suminf.    0.21805 (1) obj. -9494.38 iterations 1
Cbc0038I Pass  23: suminf.    1.46795 (5) obj. -8798.87 iterations 4
Cbc0038I Pass  24: suminf.    1.01507 (4) obj. -8798.87 iterations 1
Cbc0038I Pass  25: suminf.    2.38943 (8) obj. -8798.87 iterations 7
Cbc0038I Pass  26: suminf.    1.58124 (6) obj. -8798.87 iterations 2
Cbc0038I Pass  27: suminf.    0.33451 (1) obj. -8798.87 iterations 6
Cbc0038I Pass  28: suminf.    0.24244 (1) obj. -9398.53 iterations 1
Cbc0038I Pass  29: suminf.    2.08699 (6) obj. -9222.74 iterations 5
Cbc0038I Pass  30: suminf.    0.92815 (3) obj. -9401.64 iterations 3
Cbc0038I Pass  31: suminf.    2.41423 (9) obj. -8798.87 iterations 12
Cbc0038I Pass  32: suminf.    1.96288 (8) obj. -8798.87 iterations 2
Cbc0038I Pass  33: suminf.    0.32499 (1) obj. -8798.87 iterations 8
Cbc0038I Pass  34: suminf.    0.21805 (1) obj. -9495.38 iterations 1
Cbc0038I Pass  35: suminf.    1.37749 (4) obj. -9655.31 iterations 8
Cbc0038I Pass  36: suminf.    0.96843 (3) obj. -9836.84 iterations 3
Cbc0038I Pass  37: suminf.    0.33451 (1) obj. -8798.87 iterations 3
Cbc0038I Pass  38: suminf.    0.24244 (1) obj. -9398.53 iterations 1
Cbc0038I Pass  39: suminf.    0.35375 (5) obj. -8798.87 iterations 5
Cbc0038I Pass  40: suminf.    0.25295 (3) obj. -8798.87 iterations 1
Cbc0038I Pass  41: suminf.    0.25000 (2) obj. -9068 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 35 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -8330.14 - took 0.01 seconds
Cbc0012I Integer solution of -8330.135 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 35 columns, reduced to 21 rows 17 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -10673.831 to -10673.831 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8330.135, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

