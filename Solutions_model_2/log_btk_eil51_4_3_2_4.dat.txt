Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 281 (-22) elements
Clp1000I sum of infeasibilities 1.8918e-05 - average 2.03419e-07, 0 fixed columns
Coin0506I Presolve 93 (0) rows, 51 (0) columns and 281 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 34.943605
Clp0000I Optimal - objective value 34.943605
Coin0511I After Postsolve, objective 34.943605, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.943605
Clp0000I Optimal - objective value 34.943605
Clp0000I Optimal - objective value 34.943605
Coin0511I After Postsolve, objective 34.943605, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.94360471 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 10.1734
Cbc0038I Solution found of 7.58666
Cbc0038I Relaxing continuous gives -3.01438
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -6.20739
Cbc0038I Pass   1: suminf.    0.78580 (25) obj. -6.20739 iterations 30
Cbc0038I Pass   2: suminf.    1.45396 (9) obj. -6.20739 iterations 34
Cbc0038I Pass   3: suminf.    1.27004 (7) obj. -6.20739 iterations 3
Cbc0038I Pass   4: suminf.    2.26210 (6) obj. -6.20739 iterations 14
Cbc0038I Pass   5: suminf.    2.04220 (9) obj. -6.20739 iterations 3
Cbc0038I Pass   6: suminf.    0.47867 (4) obj. -6.20739 iterations 12
Cbc0038I Pass   7: suminf.    0.47867 (4) obj. -6.20739 iterations 0
Cbc0038I Pass   8: suminf.    1.28616 (4) obj. -6.20739 iterations 7
Cbc0038I Pass   9: suminf.    0.94732 (4) obj. -6.20739 iterations 2
Cbc0038I Pass  10: suminf.    2.01361 (7) obj. -6.20739 iterations 5
Cbc0038I Pass  11: suminf.    1.60407 (6) obj. -6.20739 iterations 1
Cbc0038I Pass  12: suminf.    1.16202 (4) obj. -6.20739 iterations 7
Cbc0038I Pass  13: suminf.    0.86178 (3) obj. -6.20739 iterations 5
Cbc0038I Pass  14: suminf.    0.86178 (3) obj. -6.20739 iterations 1
Cbc0038I Pass  15: suminf.    0.99408 (3) obj. -6.20739 iterations 3
Cbc0038I Pass  16: suminf.    0.99408 (3) obj. -6.20739 iterations 1
Cbc0038I Pass  17: suminf.    0.86178 (3) obj. -6.20739 iterations 2
Cbc0038I Pass  18: suminf.    1.77916 (7) obj. -6.20739 iterations 10
Cbc0038I Pass  19: suminf.    0.99005 (5) obj. -6.20739 iterations 4
Cbc0038I Pass  20: suminf.    1.48622 (4) obj. -6.20739 iterations 8
Cbc0038I Pass  21: suminf.    1.17937 (3) obj. -6.20739 iterations 1
Cbc0038I Pass  22: suminf.    0.74830 (3) obj. -6.20739 iterations 2
Cbc0038I Pass  23: suminf.    0.70786 (3) obj. -6.20739 iterations 3
Cbc0038I Pass  24: suminf.    1.02998 (4) obj. -6.20739 iterations 3
Cbc0038I Pass  25: suminf.    0.86011 (7) obj. -6.20739 iterations 4
Cbc0038I Pass  26: suminf.    0.68253 (4) obj. -6.20739 iterations 9
Cbc0038I Pass  27: suminf.    1.04554 (6) obj. -6.20739 iterations 5
Cbc0038I Pass  28: suminf.    0.99795 (6) obj. -6.20739 iterations 2
Cbc0038I Pass  29: suminf.    2.19321 (6) obj. -6.20739 iterations 14
Cbc0038I Pass  30: suminf.    1.00540 (4) obj. -6.20739 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -3.01438 - took 0.10 seconds
Cbc0012I Integer solution of -3.01438 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 20 added rows had average density of 32.5
Cbc0013I At root node, 20 cuts changed objective from -34.943605 to -27.514895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9417 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1729 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3.01438, took 7226 iterations and 44 nodes (0.67 seconds)
Cbc0032I Strong branching done 528 times (9771 iterations), fathomed 6 nodes and fixed 23 variables
Cbc0035I Maximum depth 14, 90 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-33) rows, 78 (-24) columns and 1040 (-538) elements
Clp1000I sum of infeasibilities 8.94926e-08 - average 1.26046e-09, 42 fixed columns
Coin0506I Presolve 30 (-41) rows, 36 (-42) columns and 127 (-913) elements
Clp0006I 0  Obj -3.6927572 Dual inf 0.85034791 (36)
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 2.7174855 - largest nonzero change 3.488921e-05 ( 0.00099891329%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value -2.5824103
Clp0000I Optimal - objective value -2.5824103
Coin0511I After Postsolve, objective -2.5824103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -2.5824103 Dual inf 12.490081 (28)
Clp0014I Perturbing problem by 0.001% of 4.4069971 - largest nonzero change 1.7910165e-05 ( 0.00097494084%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 46.647419
Clp0000I Optimal - objective value 46.647419
Clp0000I Optimal - objective value 46.647419
Coin0511I After Postsolve, objective 46.647419, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.64741865 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 72 rows, 79 columns (79 integer (79 of which binary)) and 1045 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.587%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.47883
Cbc0038I Pass   1: suminf.    2.80540 (24) obj. -36.71 iterations 10
Cbc0038I Pass   2: suminf.    2.06473 (21) obj. -34.9274 iterations 3
Cbc0038I Pass   3: suminf.    0.97308 (11) obj. -15.3831 iterations 10
Cbc0038I Solution found of 3.71382
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 79 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -0.987688
Cbc0038I Pass   4: suminf.    2.80540 (24) obj. -36.71 iterations 0
Cbc0038I Pass   5: suminf.    2.06473 (21) obj. -34.9274 iterations 6
Cbc0038I Pass   6: suminf.    0.32836 (1) obj. -0.987688 iterations 22
Cbc0038I Pass   7: suminf.    0.12245 (1) obj. -2.42904 iterations 2
Cbc0038I Pass   8: suminf.    2.23000 (10) obj. -5.13221 iterations 15
Cbc0038I Pass   9: suminf.    2.23000 (10) obj. -5.13221 iterations 2
Cbc0038I Pass  10: suminf.    0.17077 (2) obj. -0.987688 iterations 16
Cbc0038I Pass  11: suminf.    0.14286 (1) obj. -1.1831 iterations 3
Cbc0038I Pass  12: suminf.    0.17077 (1) obj. -0.987688 iterations 2
Cbc0038I Pass  13: suminf.    1.22286 (9) obj. -1.88692 iterations 24
Cbc0038I Pass  14: suminf.    0.74907 (8) obj. -0.987688 iterations 6
Cbc0038I Pass  15: suminf.    0.22975 (6) obj. -0.987688 iterations 12
Cbc0038I Pass  16: suminf.    0.22224 (4) obj. -0.987688 iterations 4
Cbc0038I Pass  17: suminf.    0.41056 (3) obj. -0.987688 iterations 5
Cbc0038I Pass  18: suminf.    0.41056 (3) obj. -0.987688 iterations 0
Cbc0038I Pass  19: suminf.    0.52620 (3) obj. -0.987688 iterations 3
Cbc0038I Pass  20: suminf.    0.52620 (3) obj. -0.987688 iterations 0
Cbc0038I Pass  21: suminf.    1.66979 (11) obj. -0.987688 iterations 31
Cbc0038I Pass  22: suminf.    1.66979 (11) obj. -0.987688 iterations 2
Cbc0038I Pass  23: suminf.    1.45906 (4) obj. -0.987688 iterations 11
Cbc0038I Pass  24: suminf.    0.60657 (3) obj. -1.55816 iterations 3
Cbc0038I Pass  25: suminf.    0.54441 (3) obj. -0.987688 iterations 2
Cbc0038I Pass  26: suminf.    0.72067 (3) obj. -0.987688 iterations 4
Cbc0038I Pass  27: suminf.    1.06246 (9) obj. -0.987688 iterations 19
Cbc0038I Pass  28: suminf.    0.78642 (6) obj. -1.62664 iterations 3
Cbc0038I Pass  29: suminf.    0.60815 (6) obj. -0.987688 iterations 10
Cbc0038I Pass  30: suminf.    0.60815 (6) obj. -0.987688 iterations 0
Cbc0038I Pass  31: suminf.    0.30640 (3) obj. -0.987688 iterations 8
Cbc0038I Pass  32: suminf.    0.28139 (3) obj. -0.987688 iterations 5
Cbc0038I Pass  33: suminf.    0.50120 (3) obj. -0.987688 iterations 5
Cbc0038I Rounding solution of 0.872236 is better than previous of 3.71382

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 79 columns, reduced to 38 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 0.872236 to -2.93208 (0.12 seconds)
Cbc0038I Round again with cutoff of -11.0058
Cbc0038I Pass  33: suminf.    2.80540 (24) obj. -36.71 iterations 0
Cbc0038I Pass  34: suminf.    2.06473 (21) obj. -34.9274 iterations 6
Cbc0038I Pass  35: suminf.    0.77631 (9) obj. -12.6767 iterations 12
Cbc0038I Pass  36: suminf.    1.14644 (7) obj. -11.0058 iterations 18
Cbc0038I Pass  37: suminf.    0.90721 (7) obj. -14.8412 iterations 3
Cbc0038I Pass  38: suminf.    1.37415 (6) obj. -11.0058 iterations 11
Cbc0038I Pass  39: suminf.    1.13303 (4) obj. -11.5854 iterations 3
Cbc0038I Pass  40: suminf.    1.91819 (11) obj. -11.0058 iterations 21
Cbc0038I Pass  41: suminf.    1.47348 (7) obj. -11.0058 iterations 10
Cbc0038I Pass  42: suminf.    1.25384 (4) obj. -11.0058 iterations 9
Cbc0038I Pass  43: suminf.    0.90911 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  44: suminf.    1.06411 (7) obj. -11.0058 iterations 4
Cbc0038I Pass  45: suminf.    1.00341 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  46: suminf.    0.96347 (7) obj. -11.0058 iterations 4
Cbc0038I Pass  47: suminf.    2.33850 (9) obj. -11.0058 iterations 17
Cbc0038I Pass  48: suminf.    2.22983 (9) obj. -11.5492 iterations 4
Cbc0038I Pass  49: suminf.    1.15326 (6) obj. -11.0058 iterations 11
Cbc0038I Pass  50: suminf.    1.15326 (6) obj. -11.0058 iterations 0
Cbc0038I Pass  51: suminf.    0.82690 (5) obj. -11.0058 iterations 7
Cbc0038I Pass  52: suminf.    0.65603 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  53: suminf.    0.67023 (5) obj. -11.0058 iterations 4
Cbc0038I Pass  54: suminf.    0.67023 (5) obj. -11.0058 iterations 4
Cbc0038I Pass  55: suminf.    0.65603 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  56: suminf.    1.31609 (8) obj. -11.0058 iterations 13
Cbc0038I Pass  57: suminf.    1.07774 (8) obj. -11.0058 iterations 5
Cbc0038I Pass  58: suminf.    1.56070 (7) obj. -11.0058 iterations 6
Cbc0038I Pass  59: suminf.    1.26568 (6) obj. -11.0058 iterations 4
Cbc0038I Pass  60: suminf.    0.91438 (6) obj. -11.0058 iterations 1
Cbc0038I Pass  61: suminf.    1.42225 (7) obj. -11.0058 iterations 4
Cbc0038I Pass  62: suminf.    1.26568 (6) obj. -11.0058 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -2.93208 - took 0.11 seconds
Cbc0012I Integer solution of -2.9320837 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 72 rows 79 columns, reduced to 24 rows 31 columns
Cbc0031I 41 added rows had average density of 32.731707
Cbc0013I At root node, 41 cuts changed objective from -43.30036 to -12.935294 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8738 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 998 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 117 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 973 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 300 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.630 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.9320837 best solution, best possible -12.935294 (1.82 seconds)
Cbc0004I Integer solution of -3.01438 found after 5919 iterations and 38 nodes (2.13 seconds)
Cbc0001I Search completed - best objective -3.01438, took 5919 iterations and 38 nodes (2.13 seconds)
Cbc0032I Strong branching done 512 times (7232 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 16, 45 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 281 (-22) elements
Clp1000I sum of infeasibilities 1.8918e-05 - average 2.03419e-07, 0 fixed columns
Coin0506I Presolve 93 (0) rows, 51 (0) columns and 281 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 34.943605
Clp0000I Optimal - objective value 34.943605
Coin0511I After Postsolve, objective 34.943605, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.943605
Clp0000I Optimal - objective value 34.943605
Clp0000I Optimal - objective value 34.943605
Coin0511I After Postsolve, objective 34.943605, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.94360471 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 10.1734
Cbc0038I Solution found of 7.58666
Cbc0038I Relaxing continuous gives -3.01438
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -6.20739
Cbc0038I Pass   1: suminf.    0.78580 (25) obj. -6.20739 iterations 30
Cbc0038I Pass   2: suminf.    1.45396 (9) obj. -6.20739 iterations 34
Cbc0038I Pass   3: suminf.    1.27004 (7) obj. -6.20739 iterations 3
Cbc0038I Pass   4: suminf.    2.26210 (6) obj. -6.20739 iterations 14
Cbc0038I Pass   5: suminf.    2.04220 (9) obj. -6.20739 iterations 3
Cbc0038I Pass   6: suminf.    0.47867 (4) obj. -6.20739 iterations 12
Cbc0038I Pass   7: suminf.    0.47867 (4) obj. -6.20739 iterations 0
Cbc0038I Pass   8: suminf.    1.28616 (4) obj. -6.20739 iterations 7
Cbc0038I Pass   9: suminf.    0.94732 (4) obj. -6.20739 iterations 2
Cbc0038I Pass  10: suminf.    2.01361 (7) obj. -6.20739 iterations 5
Cbc0038I Pass  11: suminf.    1.60407 (6) obj. -6.20739 iterations 1
Cbc0038I Pass  12: suminf.    1.16202 (4) obj. -6.20739 iterations 7
Cbc0038I Pass  13: suminf.    0.86178 (3) obj. -6.20739 iterations 5
Cbc0038I Pass  14: suminf.    0.86178 (3) obj. -6.20739 iterations 1
Cbc0038I Pass  15: suminf.    0.99408 (3) obj. -6.20739 iterations 3
Cbc0038I Pass  16: suminf.    0.99408 (3) obj. -6.20739 iterations 1
Cbc0038I Pass  17: suminf.    0.86178 (3) obj. -6.20739 iterations 2
Cbc0038I Pass  18: suminf.    1.77916 (7) obj. -6.20739 iterations 10
Cbc0038I Pass  19: suminf.    0.99005 (5) obj. -6.20739 iterations 4
Cbc0038I Pass  20: suminf.    1.48622 (4) obj. -6.20739 iterations 8
Cbc0038I Pass  21: suminf.    1.17937 (3) obj. -6.20739 iterations 1
Cbc0038I Pass  22: suminf.    0.74830 (3) obj. -6.20739 iterations 2
Cbc0038I Pass  23: suminf.    0.70786 (3) obj. -6.20739 iterations 3
Cbc0038I Pass  24: suminf.    1.02998 (4) obj. -6.20739 iterations 3
Cbc0038I Pass  25: suminf.    0.86011 (7) obj. -6.20739 iterations 4
Cbc0038I Pass  26: suminf.    0.68253 (4) obj. -6.20739 iterations 9
Cbc0038I Pass  27: suminf.    1.04554 (6) obj. -6.20739 iterations 5
Cbc0038I Pass  28: suminf.    0.99795 (6) obj. -6.20739 iterations 2
Cbc0038I Pass  29: suminf.    2.19321 (6) obj. -6.20739 iterations 14
Cbc0038I Pass  30: suminf.    1.00540 (4) obj. -6.20739 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -3.01438 - took 0.10 seconds
Cbc0012I Integer solution of -3.01438 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 20 added rows had average density of 32.5
Cbc0013I At root node, 20 cuts changed objective from -34.943605 to -27.514895 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9417 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1729 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 12 nodes, 9 on tree, -3.01438 best solution, best possible -27.514895 (0.69 seconds)
Cbc0001I Search completed - best objective -3.01438, took 7226 iterations and 44 nodes (0.73 seconds)
Cbc0032I Strong branching done 528 times (9771 iterations), fathomed 6 nodes and fixed 23 variables
Cbc0035I Maximum depth 14, 90 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-34) rows, 78 (-25) columns and 1040 (-539) elements
Clp1000I sum of infeasibilities 8.94926e-08 - average 1.26046e-09, 42 fixed columns
Coin0506I Presolve 30 (-41) rows, 36 (-42) columns and 127 (-913) elements
Clp0006I 0  Obj -3.6927572 Dual inf 0.85034791 (36)
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 2.7174855 - largest nonzero change 3.488921e-05 ( 0.00099891329%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value -2.5824103
Clp0000I Optimal - objective value -2.5824103
Coin0511I After Postsolve, objective -2.5824103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -2.5824103 Dual inf 12.490081 (28)
Clp0014I Perturbing problem by 0.001% of 4.4069971 - largest nonzero change 1.7910165e-05 ( 0.00097494084%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 46.647419
Clp0000I Optimal - objective value 46.647419
Clp0000I Optimal - objective value 46.647419
Coin0511I After Postsolve, objective 46.647419, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.64741865 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 72 rows, 79 columns (79 integer (79 of which binary)) and 1045 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.587%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.47883
Cbc0038I Pass   1: suminf.    2.80540 (24) obj. -36.71 iterations 10
Cbc0038I Pass   2: suminf.    2.06473 (21) obj. -34.9274 iterations 3
Cbc0038I Pass   3: suminf.    0.97308 (11) obj. -15.3831 iterations 10
Cbc0038I Solution found of 3.71382
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 79 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -0.987688
Cbc0038I Pass   4: suminf.    2.80540 (24) obj. -36.71 iterations 0
Cbc0038I Pass   5: suminf.    2.06473 (21) obj. -34.9274 iterations 6
Cbc0038I Pass   6: suminf.    0.32836 (1) obj. -0.987688 iterations 22
Cbc0038I Pass   7: suminf.    0.12245 (1) obj. -2.42904 iterations 2
Cbc0038I Pass   8: suminf.    2.23000 (10) obj. -5.13221 iterations 15
Cbc0038I Pass   9: suminf.    2.23000 (10) obj. -5.13221 iterations 2
Cbc0038I Pass  10: suminf.    0.17077 (2) obj. -0.987688 iterations 16
Cbc0038I Pass  11: suminf.    0.14286 (1) obj. -1.1831 iterations 3
Cbc0038I Pass  12: suminf.    0.17077 (1) obj. -0.987688 iterations 2
Cbc0038I Pass  13: suminf.    1.22286 (9) obj. -1.88692 iterations 24
Cbc0038I Pass  14: suminf.    0.74907 (8) obj. -0.987688 iterations 6
Cbc0038I Pass  15: suminf.    0.22975 (6) obj. -0.987688 iterations 12
Cbc0038I Pass  16: suminf.    0.22224 (4) obj. -0.987688 iterations 4
Cbc0038I Pass  17: suminf.    0.41056 (3) obj. -0.987688 iterations 5
Cbc0038I Pass  18: suminf.    0.41056 (3) obj. -0.987688 iterations 0
Cbc0038I Pass  19: suminf.    0.52620 (3) obj. -0.987688 iterations 3
Cbc0038I Pass  20: suminf.    0.52620 (3) obj. -0.987688 iterations 0
Cbc0038I Pass  21: suminf.    1.66979 (11) obj. -0.987688 iterations 31
Cbc0038I Pass  22: suminf.    1.66979 (11) obj. -0.987688 iterations 2
Cbc0038I Pass  23: suminf.    1.45906 (4) obj. -0.987688 iterations 11
Cbc0038I Pass  24: suminf.    0.60657 (3) obj. -1.55816 iterations 3
Cbc0038I Pass  25: suminf.    0.54441 (3) obj. -0.987688 iterations 2
Cbc0038I Pass  26: suminf.    0.72067 (3) obj. -0.987688 iterations 4
Cbc0038I Pass  27: suminf.    1.06246 (9) obj. -0.987688 iterations 19
Cbc0038I Pass  28: suminf.    0.78642 (6) obj. -1.62664 iterations 3
Cbc0038I Pass  29: suminf.    0.60815 (6) obj. -0.987688 iterations 10
Cbc0038I Pass  30: suminf.    0.60815 (6) obj. -0.987688 iterations 0
Cbc0038I Pass  31: suminf.    0.30640 (3) obj. -0.987688 iterations 8
Cbc0038I Pass  32: suminf.    0.28139 (3) obj. -0.987688 iterations 5
Cbc0038I Pass  33: suminf.    0.50120 (3) obj. -0.987688 iterations 5
Cbc0038I Rounding solution of 0.872236 is better than previous of 3.71382

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 79 columns, reduced to 38 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 0.872236 to -2.93208 (0.14 seconds)
Cbc0038I Round again with cutoff of -11.0058
Cbc0038I Pass  33: suminf.    2.80540 (24) obj. -36.71 iterations 0
Cbc0038I Pass  34: suminf.    2.06473 (21) obj. -34.9274 iterations 6
Cbc0038I Pass  35: suminf.    0.77631 (9) obj. -12.6767 iterations 12
Cbc0038I Pass  36: suminf.    1.14644 (7) obj. -11.0058 iterations 18
Cbc0038I Pass  37: suminf.    0.90721 (7) obj. -14.8412 iterations 3
Cbc0038I Pass  38: suminf.    1.37415 (6) obj. -11.0058 iterations 11
Cbc0038I Pass  39: suminf.    1.13303 (4) obj. -11.5854 iterations 3
Cbc0038I Pass  40: suminf.    1.91819 (11) obj. -11.0058 iterations 21
Cbc0038I Pass  41: suminf.    1.47348 (7) obj. -11.0058 iterations 10
Cbc0038I Pass  42: suminf.    1.25384 (4) obj. -11.0058 iterations 9
Cbc0038I Pass  43: suminf.    0.90911 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  44: suminf.    1.06411 (7) obj. -11.0058 iterations 4
Cbc0038I Pass  45: suminf.    1.00341 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  46: suminf.    0.96347 (7) obj. -11.0058 iterations 4
Cbc0038I Pass  47: suminf.    2.33850 (9) obj. -11.0058 iterations 17
Cbc0038I Pass  48: suminf.    2.22983 (9) obj. -11.5492 iterations 4
Cbc0038I Pass  49: suminf.    1.15326 (6) obj. -11.0058 iterations 11
Cbc0038I Pass  50: suminf.    1.15326 (6) obj. -11.0058 iterations 0
Cbc0038I Pass  51: suminf.    0.82690 (5) obj. -11.0058 iterations 7
Cbc0038I Pass  52: suminf.    0.65603 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  53: suminf.    0.67023 (5) obj. -11.0058 iterations 4
Cbc0038I Pass  54: suminf.    0.67023 (5) obj. -11.0058 iterations 4
Cbc0038I Pass  55: suminf.    0.65603 (5) obj. -11.0058 iterations 5
Cbc0038I Pass  56: suminf.    1.31609 (8) obj. -11.0058 iterations 13
Cbc0038I Pass  57: suminf.    1.07774 (8) obj. -11.0058 iterations 5
Cbc0038I Pass  58: suminf.    1.56070 (7) obj. -11.0058 iterations 6
Cbc0038I Pass  59: suminf.    1.26568 (6) obj. -11.0058 iterations 4
Cbc0038I Pass  60: suminf.    0.91438 (6) obj. -11.0058 iterations 1
Cbc0038I Pass  61: suminf.    1.42225 (7) obj. -11.0058 iterations 4
Cbc0038I Pass  62: suminf.    1.26568 (6) obj. -11.0058 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -2.93208 - took 0.13 seconds
Cbc0012I Integer solution of -2.9320837 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 72 rows 79 columns, reduced to 24 rows 31 columns
Cbc0031I 41 added rows had average density of 32.731707
Cbc0013I At root node, 41 cuts changed objective from -43.30036 to -12.935294 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8738 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 998 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 117 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 973 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 300 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.694 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.9320837 best solution, best possible -12.935294 (2.07 seconds)
Cbc0004I Integer solution of -3.01438 found after 5919 iterations and 38 nodes (2.40 seconds)
Cbc0001I Search completed - best objective -3.01438, took 5919 iterations and 38 nodes (2.40 seconds)
Cbc0032I Strong branching done 512 times (7232 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 16, 45 variables fixed on reduced cost
Total time (CPU seconds):       1.83   (Wallclock seconds):       2.41

