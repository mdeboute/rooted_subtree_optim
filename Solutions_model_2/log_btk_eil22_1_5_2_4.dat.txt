Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 21 (-3) columns and 100 (-29) elements
Clp1000I sum of infeasibilities 9.32392e-07 - average 2.82543e-08, 1 fixed columns
Coin0506I Presolve 31 (-2) rows, 20 (-1) columns and 94 (-6) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 67.043918
Clp0000I Optimal - objective value 67.043918
Coin0511I After Postsolve, objective 67.043918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.043918
Clp0000I Optimal - objective value 67.043918
Clp0000I Optimal - objective value 67.043918
Coin0511I After Postsolve, objective 67.043918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.04391756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 100 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.433%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.49919
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.21697 iterations 18
Cbc0038I Solution found of -9.21697
Cbc0038I Relaxing continuous gives -9.21697
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -9.21697 to -22.2414 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.7217
Cbc0038I Pass   2: suminf.    0.77585 (3) obj. -26.7217 iterations 3
Cbc0038I Pass   3: suminf.    0.89771 (5) obj. -26.7217 iterations 3
Cbc0038I Pass   4: suminf.    1.16093 (3) obj. -26.7217 iterations 8
Cbc0038I Pass   5: suminf.    0.90347 (3) obj. -26.7217 iterations 4
Cbc0038I Pass   6: suminf.    0.91915 (4) obj. -26.7217 iterations 4
Cbc0038I Pass   7: suminf.    1.26556 (4) obj. -26.7217 iterations 8
Cbc0038I Pass   8: suminf.    1.04160 (3) obj. -26.7217 iterations 3
Cbc0038I Pass   9: suminf.    0.83698 (3) obj. -26.7217 iterations 1
Cbc0038I Pass  10: suminf.    0.62863 (2) obj. -26.7217 iterations 1
Cbc0038I Pass  11: suminf.    0.79581 (3) obj. -26.7217 iterations 4
Cbc0038I Pass  12: suminf.    0.73833 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  13: suminf.    0.88814 (3) obj. -26.7217 iterations 3
Cbc0038I Pass  14: suminf.    1.05566 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  15: suminf.    0.93142 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  16: suminf.    0.91915 (4) obj. -26.7217 iterations 5
Cbc0038I Pass  17: suminf.    0.89771 (5) obj. -26.7217 iterations 2
Cbc0038I Pass  18: suminf.    1.16093 (3) obj. -26.7217 iterations 8
Cbc0038I Pass  19: suminf.    0.90347 (3) obj. -26.7217 iterations 6
Cbc0038I Pass  20: suminf.    0.94827 (4) obj. -26.7217 iterations 8
Cbc0038I Pass  21: suminf.    0.82822 (2) obj. -26.7217 iterations 4
Cbc0038I Pass  22: suminf.    0.42804 (1) obj. -26.7217 iterations 6
Cbc0038I Pass  23: suminf.    0.47994 (1) obj. -26.7217 iterations 2
Cbc0038I Pass  24: suminf.    0.80030 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  25: suminf.    0.47994 (1) obj. -26.7217 iterations 2
Cbc0038I Pass  26: suminf.    1.36757 (5) obj. -26.7217 iterations 6
Cbc0038I Pass  27: suminf.    0.93901 (3) obj. -26.7217 iterations 4
Cbc0038I Pass  28: suminf.    0.87536 (3) obj. -26.7217 iterations 4
Cbc0038I Pass  29: suminf.    0.71799 (3) obj. -26.7217 iterations 5
Cbc0038I Pass  30: suminf.    0.71190 (3) obj. -26.7217 iterations 1
Cbc0038I Pass  31: suminf.    0.58292 (2) obj. -26.7217 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.2414 - took 0.02 seconds
Cbc0012I Integer solution of -22.2414 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 15.75
Cbc0013I At root node, 12 cuts changed objective from -67.043918 to -42.529148 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1390 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 795 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22.2414, took 2441 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 74 times (553 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-15) rows, 38 (-6) columns and 272 (-88) elements
Clp1000I sum of infeasibilities 0 - average 0, 31 fixed columns
Coin0506I Presolve 5 (-26) rows, 7 (-31) columns and 19 (-253) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -7.0406887
Clp0000I Optimal - objective value -7.0406887
Coin0511I After Postsolve, objective -7.0406887, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2840025 - largest nonzero change 0 ( 0%) - largest zero change 2.8565992e-05
Clp0000I Optimal - objective value 79.171927
Clp0000I Optimal - objective value 79.171927
Clp0000I Optimal - objective value 79.171927
Coin0511I After Postsolve, objective 79.171927, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.1719273 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 38 columns (38 integer (38 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.305%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.50141
Cbc0038I Pass   1: suminf.    1.17320 (10) obj. -49.9792 iterations 6
Cbc0038I Pass   2: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Solution found of -8.47247
Cbc0038I Rounding solution of -12.6873 is better than previous of -8.47247

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -12.6873 to -20.7094 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.2842
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass   4: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass   5: suminf.    1.17222 (3) obj. -25.2842 iterations 12
Cbc0038I Pass   6: suminf.    0.52427 (3) obj. -25.2842 iterations 1
Cbc0038I Pass   7: suminf.    0.20445 (2) obj. -25.2842 iterations 3
Cbc0038I Pass   8: suminf.    0.09091 (1) obj. -25.3144 iterations 2
Cbc0038I Pass   9: suminf.    0.20445 (2) obj. -25.2842 iterations 2
Cbc0038I Pass  10: suminf.    1.55471 (8) obj. -25.2842 iterations 11
Cbc0038I Pass  11: suminf.    0.92483 (5) obj. -25.2842 iterations 4
Cbc0038I Pass  12: suminf.    0.93543 (4) obj. -25.2842 iterations 7
Cbc0038I Pass  13: suminf.    0.77438 (3) obj. -25.7092 iterations 2
Cbc0038I Pass  14: suminf.    0.93828 (4) obj. -25.2842 iterations 4
Cbc0038I Pass  15: suminf.    1.52085 (7) obj. -25.2842 iterations 13
Cbc0038I Pass  16: suminf.    0.78821 (5) obj. -29.8501 iterations 1
Cbc0038I Pass  17: suminf.    0.49649 (3) obj. -25.2842 iterations 8
Cbc0038I Pass  18: suminf.    0.49649 (3) obj. -25.2842 iterations 0
Cbc0038I Pass  19: suminf.    0.16488 (2) obj. -25.2842 iterations 2
Cbc0038I Pass  20: suminf.    0.16488 (2) obj. -25.2842 iterations 0
Cbc0038I Pass  21: suminf.    0.58299 (2) obj. -25.2842 iterations 1
Cbc0038I Pass  22: suminf.    1.15211 (5) obj. -25.2842 iterations 10
Cbc0038I Pass  23: suminf.    1.01584 (4) obj. -25.7256 iterations 1
Cbc0038I Pass  24: suminf.    0.76190 (3) obj. -25.2842 iterations 5
Cbc0038I Pass  25: suminf.    0.64022 (3) obj. -25.2842 iterations 1
Cbc0038I Pass  26: suminf.    0.48059 (3) obj. -25.2842 iterations 4
Cbc0038I Pass  27: suminf.    0.32195 (3) obj. -25.2842 iterations 1
Cbc0038I Pass  28: suminf.    0.95423 (3) obj. -25.2842 iterations 6
Cbc0038I Pass  29: suminf.    0.71565 (3) obj. -27.4314 iterations 1
Cbc0038I Pass  30: suminf.    0.71496 (3) obj. -25.2842 iterations 4
Cbc0038I Pass  31: suminf.    1.83813 (7) obj. -25.2842 iterations 10
Cbc0038I Pass  32: suminf.    1.83813 (7) obj. -25.2842 iterations 1
Cbc0038I Rounding solution of -22.2414 is better than previous of -20.7094

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.5187
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass  33: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass  34: suminf.    1.27591 (6) obj. -33.5187 iterations 14
Cbc0038I Pass  35: suminf.    1.26724 (5) obj. -33.5187 iterations 1
Cbc0038I Pass  36: suminf.    1.04813 (3) obj. -33.5187 iterations 3
Cbc0038I Pass  37: suminf.    1.04813 (3) obj. -33.5187 iterations 0
Cbc0038I Pass  38: suminf.    0.79264 (4) obj. -33.5187 iterations 3
Cbc0038I Pass  39: suminf.    0.69991 (4) obj. -33.5187 iterations 2
Cbc0038I Pass  40: suminf.    0.40937 (4) obj. -33.5187 iterations 1
Cbc0038I Pass  41: suminf.    0.37326 (4) obj. -33.5187 iterations 1
Cbc0038I Pass  42: suminf.    0.69991 (4) obj. -33.5187 iterations 5
Cbc0038I Pass  43: suminf.    0.84726 (6) obj. -33.5187 iterations 13
Cbc0038I Pass  44: suminf.    0.74458 (5) obj. -33.5187 iterations 2
Cbc0038I Pass  45: suminf.    0.58239 (4) obj. -33.5187 iterations 4
Cbc0038I Pass  46: suminf.    0.39234 (2) obj. -33.6459 iterations 2
Cbc0038I Pass  47: suminf.    0.56684 (3) obj. -33.5187 iterations 3
Cbc0038I Pass  48: suminf.    2.05818 (11) obj. -33.5187 iterations 14
Cbc0038I Pass  49: suminf.    1.29110 (6) obj. -33.5187 iterations 3
Cbc0038I Pass  50: suminf.    0.73016 (3) obj. -33.5187 iterations 7
Cbc0038I Pass  51: suminf.    0.55870 (3) obj. -33.5187 iterations 2
Cbc0038I Pass  52: suminf.    0.73555 (3) obj. -33.5187 iterations 1
Cbc0038I Pass  53: suminf.    0.73555 (3) obj. -33.5187 iterations 0
Cbc0038I Pass  54: suminf.    0.55870 (3) obj. -33.5187 iterations 1
Cbc0038I Pass  55: suminf.    1.58450 (9) obj. -33.5187 iterations 13
Cbc0038I Pass  56: suminf.    1.21280 (6) obj. -33.5998 iterations 4
Cbc0038I Pass  57: suminf.    1.13025 (8) obj. -33.5187 iterations 7
Cbc0038I Pass  58: suminf.    0.63184 (3) obj. -34.595 iterations 4
Cbc0038I Pass  59: suminf.    0.76639 (3) obj. -33.5187 iterations 2
Cbc0038I Pass  60: suminf.    1.41025 (10) obj. -33.5187 iterations 10
Cbc0038I Pass  61: suminf.    1.17264 (7) obj. -33.5187 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 24 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.2414 - took 0.02 seconds
Cbc0012I Integer solution of -22.2414 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 31 rows 38 columns, reduced to 10 rows 14 columns
Cbc0031I 17 added rows had average density of 9.5882353
Cbc0013I At root node, 17 cuts changed objective from -66.456705 to -25.624562 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 719 row cuts average 3.7 elements, 10 column cuts (10 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 427 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 173 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.819 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.2414 best solution, best possible -25.624562 (1.57 seconds)
Cbc0001I Search completed - best objective -22.2414, took 1322 iterations and 6 nodes (1.81 seconds)
Cbc0032I Strong branching done 72 times (580 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 21 (-3) columns and 100 (-29) elements
Clp1000I sum of infeasibilities 9.32392e-07 - average 2.82543e-08, 1 fixed columns
Coin0506I Presolve 31 (-2) rows, 20 (-1) columns and 94 (-6) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 67.043918
Clp0000I Optimal - objective value 67.043918
Coin0511I After Postsolve, objective 67.043918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.043918
Clp0000I Optimal - objective value 67.043918
Clp0000I Optimal - objective value 67.043918
Coin0511I After Postsolve, objective 67.043918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.04391756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 100 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.433%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.49919
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.21697 iterations 18
Cbc0038I Solution found of -9.21697
Cbc0038I Relaxing continuous gives -9.21697
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -9.21697 to -22.2414 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.7217
Cbc0038I Pass   2: suminf.    0.77585 (3) obj. -26.7217 iterations 3
Cbc0038I Pass   3: suminf.    0.89771 (5) obj. -26.7217 iterations 3
Cbc0038I Pass   4: suminf.    1.16093 (3) obj. -26.7217 iterations 8
Cbc0038I Pass   5: suminf.    0.90347 (3) obj. -26.7217 iterations 4
Cbc0038I Pass   6: suminf.    0.91915 (4) obj. -26.7217 iterations 4
Cbc0038I Pass   7: suminf.    1.26556 (4) obj. -26.7217 iterations 8
Cbc0038I Pass   8: suminf.    1.04160 (3) obj. -26.7217 iterations 3
Cbc0038I Pass   9: suminf.    0.83698 (3) obj. -26.7217 iterations 1
Cbc0038I Pass  10: suminf.    0.62863 (2) obj. -26.7217 iterations 1
Cbc0038I Pass  11: suminf.    0.79581 (3) obj. -26.7217 iterations 4
Cbc0038I Pass  12: suminf.    0.73833 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  13: suminf.    0.88814 (3) obj. -26.7217 iterations 3
Cbc0038I Pass  14: suminf.    1.05566 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  15: suminf.    0.93142 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  16: suminf.    0.91915 (4) obj. -26.7217 iterations 5
Cbc0038I Pass  17: suminf.    0.89771 (5) obj. -26.7217 iterations 2
Cbc0038I Pass  18: suminf.    1.16093 (3) obj. -26.7217 iterations 8
Cbc0038I Pass  19: suminf.    0.90347 (3) obj. -26.7217 iterations 6
Cbc0038I Pass  20: suminf.    0.94827 (4) obj. -26.7217 iterations 8
Cbc0038I Pass  21: suminf.    0.82822 (2) obj. -26.7217 iterations 4
Cbc0038I Pass  22: suminf.    0.42804 (1) obj. -26.7217 iterations 6
Cbc0038I Pass  23: suminf.    0.47994 (1) obj. -26.7217 iterations 2
Cbc0038I Pass  24: suminf.    0.80030 (3) obj. -26.7217 iterations 2
Cbc0038I Pass  25: suminf.    0.47994 (1) obj. -26.7217 iterations 2
Cbc0038I Pass  26: suminf.    1.36757 (5) obj. -26.7217 iterations 6
Cbc0038I Pass  27: suminf.    0.93901 (3) obj. -26.7217 iterations 4
Cbc0038I Pass  28: suminf.    0.87536 (3) obj. -26.7217 iterations 4
Cbc0038I Pass  29: suminf.    0.71799 (3) obj. -26.7217 iterations 5
Cbc0038I Pass  30: suminf.    0.71190 (3) obj. -26.7217 iterations 1
Cbc0038I Pass  31: suminf.    0.58292 (2) obj. -26.7217 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.2414 - took 0.04 seconds
Cbc0012I Integer solution of -22.2414 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 15.75
Cbc0013I At root node, 12 cuts changed objective from -67.043918 to -42.529148 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1390 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 795 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22.2414, took 2441 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 74 times (553 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 38 (-7) columns and 272 (-89) elements
Clp1000I sum of infeasibilities 0 - average 0, 31 fixed columns
Coin0506I Presolve 5 (-26) rows, 7 (-31) columns and 19 (-253) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -7.0406887
Clp0000I Optimal - objective value -7.0406887
Coin0511I After Postsolve, objective -7.0406887, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2840025 - largest nonzero change 0 ( 0%) - largest zero change 2.8565992e-05
Clp0000I Optimal - objective value 79.171927
Clp0000I Optimal - objective value 79.171927
Clp0000I Optimal - objective value 79.171927
Coin0511I After Postsolve, objective 79.171927, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.1719273 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 38 columns (38 integer (38 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.305%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.50141
Cbc0038I Pass   1: suminf.    1.17320 (10) obj. -49.9792 iterations 6
Cbc0038I Pass   2: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Solution found of -8.47247
Cbc0038I Rounding solution of -12.6873 is better than previous of -8.47247

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -12.6873 to -20.7094 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.2842
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass   4: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass   5: suminf.    1.17222 (3) obj. -25.2842 iterations 12
Cbc0038I Pass   6: suminf.    0.52427 (3) obj. -25.2842 iterations 1
Cbc0038I Pass   7: suminf.    0.20445 (2) obj. -25.2842 iterations 3
Cbc0038I Pass   8: suminf.    0.09091 (1) obj. -25.3144 iterations 2
Cbc0038I Pass   9: suminf.    0.20445 (2) obj. -25.2842 iterations 2
Cbc0038I Pass  10: suminf.    1.55471 (8) obj. -25.2842 iterations 11
Cbc0038I Pass  11: suminf.    0.92483 (5) obj. -25.2842 iterations 4
Cbc0038I Pass  12: suminf.    0.93543 (4) obj. -25.2842 iterations 7
Cbc0038I Pass  13: suminf.    0.77438 (3) obj. -25.7092 iterations 2
Cbc0038I Pass  14: suminf.    0.93828 (4) obj. -25.2842 iterations 4
Cbc0038I Pass  15: suminf.    1.52085 (7) obj. -25.2842 iterations 13
Cbc0038I Pass  16: suminf.    0.78821 (5) obj. -29.8501 iterations 1
Cbc0038I Pass  17: suminf.    0.49649 (3) obj. -25.2842 iterations 8
Cbc0038I Pass  18: suminf.    0.49649 (3) obj. -25.2842 iterations 0
Cbc0038I Pass  19: suminf.    0.16488 (2) obj. -25.2842 iterations 2
Cbc0038I Pass  20: suminf.    0.16488 (2) obj. -25.2842 iterations 0
Cbc0038I Pass  21: suminf.    0.58299 (2) obj. -25.2842 iterations 1
Cbc0038I Pass  22: suminf.    1.15211 (5) obj. -25.2842 iterations 10
Cbc0038I Pass  23: suminf.    1.01584 (4) obj. -25.7256 iterations 1
Cbc0038I Pass  24: suminf.    0.76190 (3) obj. -25.2842 iterations 5
Cbc0038I Pass  25: suminf.    0.64022 (3) obj. -25.2842 iterations 1
Cbc0038I Pass  26: suminf.    0.48059 (3) obj. -25.2842 iterations 4
Cbc0038I Pass  27: suminf.    0.32195 (3) obj. -25.2842 iterations 1
Cbc0038I Pass  28: suminf.    0.95423 (3) obj. -25.2842 iterations 6
Cbc0038I Pass  29: suminf.    0.71565 (3) obj. -27.4314 iterations 1
Cbc0038I Pass  30: suminf.    0.71496 (3) obj. -25.2842 iterations 4
Cbc0038I Pass  31: suminf.    1.83813 (7) obj. -25.2842 iterations 10
Cbc0038I Pass  32: suminf.    1.83813 (7) obj. -25.2842 iterations 1
Cbc0038I Rounding solution of -22.2414 is better than previous of -20.7094

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.5187
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass  33: suminf.    1.17320 (10) obj. -49.9792 iterations 0
Cbc0038I Pass  34: suminf.    1.27591 (6) obj. -33.5187 iterations 14
Cbc0038I Pass  35: suminf.    1.26724 (5) obj. -33.5187 iterations 1
Cbc0038I Pass  36: suminf.    1.04813 (3) obj. -33.5187 iterations 3
Cbc0038I Pass  37: suminf.    1.04813 (3) obj. -33.5187 iterations 0
Cbc0038I Pass  38: suminf.    0.79264 (4) obj. -33.5187 iterations 3
Cbc0038I Pass  39: suminf.    0.69991 (4) obj. -33.5187 iterations 2
Cbc0038I Pass  40: suminf.    0.40937 (4) obj. -33.5187 iterations 1
Cbc0038I Pass  41: suminf.    0.37326 (4) obj. -33.5187 iterations 1
Cbc0038I Pass  42: suminf.    0.69991 (4) obj. -33.5187 iterations 5
Cbc0038I Pass  43: suminf.    0.84726 (6) obj. -33.5187 iterations 13
Cbc0038I Pass  44: suminf.    0.74458 (5) obj. -33.5187 iterations 2
Cbc0038I Pass  45: suminf.    0.58239 (4) obj. -33.5187 iterations 4
Cbc0038I Pass  46: suminf.    0.39234 (2) obj. -33.6459 iterations 2
Cbc0038I Pass  47: suminf.    0.56684 (3) obj. -33.5187 iterations 3
Cbc0038I Pass  48: suminf.    2.05818 (11) obj. -33.5187 iterations 14
Cbc0038I Pass  49: suminf.    1.29110 (6) obj. -33.5187 iterations 3
Cbc0038I Pass  50: suminf.    0.73016 (3) obj. -33.5187 iterations 7
Cbc0038I Pass  51: suminf.    0.55870 (3) obj. -33.5187 iterations 2
Cbc0038I Pass  52: suminf.    0.73555 (3) obj. -33.5187 iterations 1
Cbc0038I Pass  53: suminf.    0.73555 (3) obj. -33.5187 iterations 0
Cbc0038I Pass  54: suminf.    0.55870 (3) obj. -33.5187 iterations 1
Cbc0038I Pass  55: suminf.    1.58450 (9) obj. -33.5187 iterations 13
Cbc0038I Pass  56: suminf.    1.21280 (6) obj. -33.5998 iterations 4
Cbc0038I Pass  57: suminf.    1.13025 (8) obj. -33.5187 iterations 7
Cbc0038I Pass  58: suminf.    0.63184 (3) obj. -34.595 iterations 4
Cbc0038I Pass  59: suminf.    0.76639 (3) obj. -33.5187 iterations 2
Cbc0038I Pass  60: suminf.    1.41025 (10) obj. -33.5187 iterations 10
Cbc0038I Pass  61: suminf.    1.17264 (7) obj. -33.5187 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 38 columns, reduced to 24 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -22.2414 - took 0.02 seconds
Cbc0012I Integer solution of -22.2414 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 38 columns, reduced to 10 rows 14 columns
Cbc0031I 17 added rows had average density of 9.5882353
Cbc0013I At root node, 17 cuts changed objective from -66.456705 to -25.624562 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 719 row cuts average 3.7 elements, 10 column cuts (10 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 427 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 173 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.758 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.2414 best solution, best possible -25.624562 (1.47 seconds)
Cbc0001I Search completed - best objective -22.2414, took 1322 iterations and 6 nodes (1.69 seconds)
Cbc0032I Strong branching done 72 times (580 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.69

