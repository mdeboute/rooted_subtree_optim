Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 17 (-32) rows, 11 (-14) columns and 34 (-101) elements
Clp0000I Optimal - objective value 80.233855
Coin0511I After Postsolve, objective 80.233855, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.23385485 - 9 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 17 rows, 11 columns (10 integer (10 of which binary)) and 34 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.719%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.07363
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -65 iterations 7
Cbc0038I Solution found of -65
Cbc0038I Relaxing continuous gives -65
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -67.4233
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.01939 (1) obj. -67.4233 iterations 1
Cbc0038I Pass   3: suminf.    0.56215 (3) obj. -67.4233 iterations 3
Cbc0038I Pass   4: suminf.    1.06564 (4) obj. -67.4233 iterations 3
Cbc0038I Pass   5: suminf.    0.56215 (3) obj. -67.4233 iterations 4
Cbc0038I Pass   6: suminf.    0.01939 (1) obj. -67.4233 iterations 4
Cbc0038I Pass   7: suminf.    0.04178 (2) obj. -67.4233 iterations 2
Cbc0038I Pass   8: suminf.    0.01939 (1) obj. -67.4233 iterations 1
Cbc0038I Pass   9: suminf.    0.01939 (1) obj. -67.4233 iterations 1
Cbc0038I Pass  10: suminf.    0.30193 (3) obj. -67.4233 iterations 6
Cbc0038I Pass  11: suminf.    0.30193 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  12: suminf.    1.10285 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  13: suminf.    0.30193 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  14: suminf.    0.30193 (3) obj. -67.4233 iterations 1
Cbc0038I Pass  15: suminf.    0.30658 (4) obj. -67.4233 iterations 1
Cbc0038I Pass  16: suminf.    1.14722 (4) obj. -67.4233 iterations 4
Cbc0038I Pass  17: suminf.    0.71004 (5) obj. -67.4233 iterations 3
Cbc0038I Pass  18: suminf.    1.18034 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  19: suminf.    0.30193 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  20: suminf.    0.30193 (3) obj. -67.4233 iterations 1
Cbc0038I Pass  21: suminf.    0.30193 (3) obj. -67.4233 iterations 0
Cbc0038I Pass  22: suminf.    0.93377 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  23: suminf.    0.30193 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  24: suminf.    0.89599 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  25: suminf.    0.89186 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  26: suminf.    0.89186 (3) obj. -67.4233 iterations 1
Cbc0038I Pass  27: suminf.    0.89599 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  28: suminf.    1.04508 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  29: suminf.    0.30658 (4) obj. -67.4233 iterations 1
Cbc0038I Pass  30: suminf.    1.52141 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  31: suminf.    1.52141 (4) obj. -67.4233 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -65 - took 0.01 seconds
Cbc0012I Integer solution of -65 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 11 columns, reduced to 5 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -80.233855 to -80.233855 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -65, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-14) rows, 36 (-10) columns and 233 (-155) elements
Clp1000I sum of infeasibilities 0.000330452 - average 9.71917e-06, 33 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-36) columns and 0 (-233) elements
Clp0000I Optimal - objective value 172.09927
Clp0000I Optimal - objective value 172.09927
Coin0511I After Postsolve, objective 172.09927, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3798607 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 252.9408
Clp0000I Optimal - objective value 252.9408
Clp0000I Optimal - objective value 252.9408
Coin0511I After Postsolve, objective 252.9408, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 252.9408002 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 35 columns (35 integer (35 of which binary)) and 239 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.129%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.54225
Cbc0038I Pass   1: suminf.    0.20000 (1) obj. -123.6 iterations 16
Cbc0038I Pass   2: suminf.    0.20000 (1) obj. -123.6 iterations 0
Cbc0038I Solution found of -118
Cbc0038I Rounding solution of -126 is better than previous of -118

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 35 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -126 to -158 (0.02 seconds)
Cbc0038I Round again with cutoff of -164.419
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.83818 (6) obj. -164.419 iterations 1
Cbc0038I Pass   4: suminf.    0.21396 (1) obj. -164.419 iterations 6
Cbc0038I Pass   5: suminf.    0.21396 (1) obj. -164.419 iterations 0
Cbc0038I Pass   6: suminf.    0.30769 (1) obj. -167.231 iterations 2
Cbc0038I Pass   7: suminf.    1.27436 (4) obj. -169.931 iterations 5
Cbc0038I Pass   8: suminf.    0.37022 (2) obj. -164.419 iterations 5
Cbc0038I Pass   9: suminf.    0.68269 (2) obj. -170.356 iterations 2
Cbc0038I Pass  10: suminf.    0.90299 (4) obj. -181.029 iterations 4
Cbc0038I Solution found of -166
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 35 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -176.238
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  11: suminf.    2.06667 (5) obj. -179.033 iterations 1
Cbc0038I Pass  12: suminf.    0.83951 (3) obj. -176.238 iterations 11
Cbc0038I Pass  13: suminf.    1.18269 (3) obj. -180.356 iterations 1
Cbc0038I Pass  14: suminf.    0.96595 (3) obj. -176.238 iterations 1
Cbc0038I Pass  15: suminf.    0.83951 (3) obj. -176.238 iterations 2
Cbc0038I Pass  16: suminf.    2.09959 (8) obj. -183.173 iterations 10
Cbc0038I Pass  17: suminf.    0.40522 (2) obj. -176.238 iterations 10
Cbc0038I Pass  18: suminf.    0.48077 (2) obj. -177.673 iterations 1
Cbc0038I Pass  19: suminf.    1.07273 (4) obj. -176.238 iterations 7
Cbc0038I Pass  20: suminf.    0.90236 (3) obj. -176.238 iterations 3
Cbc0038I Pass  21: suminf.    0.40522 (2) obj. -176.238 iterations 4
Cbc0038I Pass  22: suminf.    2.08658 (8) obj. -177.225 iterations 12
Cbc0038I Pass  23: suminf.    0.70346 (3) obj. -176.238 iterations 11
Cbc0038I Pass  24: suminf.    0.69448 (3) obj. -176.238 iterations 3
Cbc0038I Pass  25: suminf.    0.69448 (3) obj. -176.238 iterations 1
Cbc0038I Pass  26: suminf.    0.98077 (3) obj. -179.673 iterations 2
Cbc0038I Pass  27: suminf.    0.79995 (3) obj. -176.238 iterations 1
Cbc0038I Pass  28: suminf.    1.51988 (6) obj. -176.238 iterations 8
Cbc0038I Pass  29: suminf.    0.70346 (3) obj. -176.238 iterations 5
Cbc0038I Pass  30: suminf.    0.69448 (3) obj. -176.238 iterations 3
Cbc0038I Pass  31: suminf.    0.69448 (3) obj. -176.238 iterations 1
Cbc0038I Pass  32: suminf.    0.98077 (3) obj. -179.673 iterations 2
Cbc0038I Pass  33: suminf.    0.79995 (3) obj. -176.238 iterations 1
Cbc0038I Pass  34: suminf.    4.31300 (11) obj. -176.238 iterations 28
Cbc0038I Pass  35: suminf.    3.04919 (8) obj. -176.238 iterations 7
Cbc0038I Pass  36: suminf.    3.04919 (8) obj. -176.238 iterations 0
Cbc0038I Pass  37: suminf.    2.09031 (6) obj. -176.238 iterations 6
Cbc0038I Pass  38: suminf.    1.66369 (6) obj. -176.238 iterations 2
Cbc0038I Pass  39: suminf.    0.13946 (2) obj. -176.238 iterations 2
Cbc0038I Pass  40: suminf.    0.25024 (5) obj. -176.238 iterations 9
Cbc0038I Rounding solution of -175 is better than previous of -166

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 35 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -187.323
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  40: suminf.    2.34298 (6) obj. -187.323 iterations 1
Cbc0038I Pass  41: suminf.    2.05146 (6) obj. -187.323 iterations 8
Cbc0038I Pass  42: suminf.    2.05146 (6) obj. -187.323 iterations 0
Cbc0038I Pass  43: suminf.    2.14185 (6) obj. -187.323 iterations 1
Cbc0038I Pass  44: suminf.    2.07858 (6) obj. -187.323 iterations 1
Cbc0038I Pass  45: suminf.    2.07858 (6) obj. -187.323 iterations 0
Cbc0038I Pass  46: suminf.    2.05146 (6) obj. -187.323 iterations 4
Cbc0038I Pass  47: suminf.    2.05146 (6) obj. -187.323 iterations 1
Cbc0038I Pass  48: suminf.    2.14185 (6) obj. -187.323 iterations 1
Cbc0038I Pass  49: suminf.    2.07858 (6) obj. -187.323 iterations 1
Cbc0038I Pass  50: suminf.    2.07858 (6) obj. -187.323 iterations 0
Cbc0038I Pass  51: suminf.    2.05146 (6) obj. -187.323 iterations 4
Cbc0038I Pass  52: suminf.    2.05146 (6) obj. -187.323 iterations 1
Cbc0038I Pass  53: suminf.    2.14185 (6) obj. -187.323 iterations 1
Cbc0038I Pass  54: suminf.    2.07858 (6) obj. -187.323 iterations 1
Cbc0038I Pass  55: suminf.    2.07858 (6) obj. -187.323 iterations 0
Cbc0038I Pass  56: suminf.    2.05146 (6) obj. -187.323 iterations 4
Cbc0038I Pass  57: suminf.    2.05146 (6) obj. -187.323 iterations 1
Cbc0038I Pass  58: suminf.    2.14185 (6) obj. -187.323 iterations 1
Cbc0038I Pass  59: suminf.    2.07858 (6) obj. -187.323 iterations 1
Cbc0038I Pass  60: suminf.    2.07858 (6) obj. -187.323 iterations 0
Cbc0038I Pass  61: suminf.    2.05146 (6) obj. -187.323 iterations 4
Cbc0038I Pass  62: suminf.    2.05146 (6) obj. -187.323 iterations 1
Cbc0038I Pass  63: suminf.    2.14185 (6) obj. -187.323 iterations 1
Cbc0038I Pass  64: suminf.    2.07858 (6) obj. -187.323 iterations 1
Cbc0038I Pass  65: suminf.    2.07858 (6) obj. -187.323 iterations 0
Cbc0038I Pass  66: suminf.    2.05146 (6) obj. -187.323 iterations 4
Cbc0038I Pass  67: suminf.    2.05146 (6) obj. -187.323 iterations 1
Cbc0038I Pass  68: suminf.    2.14185 (6) obj. -187.323 iterations 1
Cbc0038I Pass  69: suminf.    2.07858 (6) obj. -187.323 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -175 - took 0.02 seconds
Cbc0012I Integer solution of -175 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -185.32632 to -185.32632 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175, took 23 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 17 (-32) rows, 11 (-14) columns and 34 (-101) elements
Clp0000I Optimal - objective value 80.233855
Coin0511I After Postsolve, objective 80.233855, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.23385485 - 9 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 17 rows, 11 columns (10 integer (10 of which binary)) and 34 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.719%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.07363
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -65 iterations 7
Cbc0038I Solution found of -65
Cbc0038I Relaxing continuous gives -65
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -67.4233
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.01939 (1) obj. -67.4233 iterations 1
Cbc0038I Pass   3: suminf.    0.56215 (3) obj. -67.4233 iterations 3
Cbc0038I Pass   4: suminf.    1.06564 (4) obj. -67.4233 iterations 3
Cbc0038I Pass   5: suminf.    0.56215 (3) obj. -67.4233 iterations 4
Cbc0038I Pass   6: suminf.    0.01939 (1) obj. -67.4233 iterations 4
Cbc0038I Pass   7: suminf.    0.04178 (2) obj. -67.4233 iterations 2
Cbc0038I Pass   8: suminf.    0.01939 (1) obj. -67.4233 iterations 1
Cbc0038I Pass   9: suminf.    0.01939 (1) obj. -67.4233 iterations 1
Cbc0038I Pass  10: suminf.    0.30193 (3) obj. -67.4233 iterations 6
Cbc0038I Pass  11: suminf.    0.30193 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  12: suminf.    1.10285 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  13: suminf.    0.30193 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  14: suminf.    0.30193 (3) obj. -67.4233 iterations 1
Cbc0038I Pass  15: suminf.    0.30658 (4) obj. -67.4233 iterations 1
Cbc0038I Pass  16: suminf.    1.14722 (4) obj. -67.4233 iterations 4
Cbc0038I Pass  17: suminf.    0.71004 (5) obj. -67.4233 iterations 3
Cbc0038I Pass  18: suminf.    1.18034 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  19: suminf.    0.30193 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  20: suminf.    0.30193 (3) obj. -67.4233 iterations 1
Cbc0038I Pass  21: suminf.    0.30193 (3) obj. -67.4233 iterations 0
Cbc0038I Pass  22: suminf.    0.93377 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  23: suminf.    0.30193 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  24: suminf.    0.89599 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  25: suminf.    0.89186 (3) obj. -67.4233 iterations 3
Cbc0038I Pass  26: suminf.    0.89186 (3) obj. -67.4233 iterations 1
Cbc0038I Pass  27: suminf.    0.89599 (3) obj. -67.4233 iterations 2
Cbc0038I Pass  28: suminf.    1.04508 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  29: suminf.    0.30658 (4) obj. -67.4233 iterations 1
Cbc0038I Pass  30: suminf.    1.52141 (4) obj. -67.4233 iterations 3
Cbc0038I Pass  31: suminf.    1.52141 (4) obj. -67.4233 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -65 - took 0.00 seconds
Cbc0012I Integer solution of -65 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 11 columns, reduced to 5 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -80.233855 to -80.233855 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -65, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-21) rows, 31 (-16) columns and 155 (-234) elements
Clp1000I sum of infeasibilities 6.92354e-10 - average 2.47269e-11, 27 fixed columns
Coin0506I Presolve 0 (-28) rows, 0 (-31) columns and 0 (-155) elements
Clp0000I Optimal - objective value 65
Clp0000I Optimal - objective value 65
Coin0511I After Postsolve, objective 65, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.9013021 - largest nonzero change 1.531786e-05 ( 0.00091204228%) - largest zero change 2.56423e-05
Clp0000I Optimal - objective value 132.79775
Clp0000I Optimal - objective value 132.79775
Clp0000I Optimal - objective value 132.79775
Coin0511I After Postsolve, objective 132.79775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 132.7977521 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 28 rows, 31 columns (31 integer (31 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.090%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.95754
Cbc0038I Pass   1: suminf.    0.31111 (2) obj. -9.06667 iterations 4
Cbc0038I Pass   2: suminf.    0.31111 (2) obj. -9.06667 iterations 0
Cbc0038I Solution found of 24
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 31 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 24 to -18 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.211
Cbc0038I Pass   3: suminf.    2.23529 (16) obj. -27.211 iterations 1
Cbc0038I Pass   4: suminf.    2.23529 (16) obj. -27.211 iterations 0
Cbc0038I Pass   5: suminf.    1.16869 (9) obj. -27.211 iterations 19
Cbc0038I Pass   6: suminf.    1.16869 (9) obj. -27.211 iterations 0
Cbc0038I Pass   7: suminf.    0.30703 (1) obj. -27.211 iterations 13
Cbc0038I Pass   8: suminf.    0.44444 (1) obj. -34.6667 iterations 1
Cbc0038I Pass   9: suminf.    1.87302 (4) obj. -54.3333 iterations 5
Cbc0038I Pass  10: suminf.    1.00000 (2) obj. -38 iterations 3
Cbc0038I Solution found of -30
Cbc0038I Rounding solution of -38 is better than previous of -30

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -51.4221
Cbc0038I Pass  11: suminf.    3.48781 (16) obj. -51.4221 iterations 0
Cbc0038I Pass  12: suminf.    3.48781 (16) obj. -51.4221 iterations 0
Cbc0038I Pass  13: suminf.    3.17535 (12) obj. -51.4221 iterations 13
Cbc0038I Pass  14: suminf.    3.17535 (12) obj. -51.4221 iterations 0
Cbc0038I Pass  15: suminf.    1.36454 (3) obj. -51.4221 iterations 16
Cbc0038I Pass  16: suminf.    1.36454 (3) obj. -51.4221 iterations 1
Cbc0038I Pass  17: suminf.    1.37837 (3) obj. -51.4221 iterations 2
Cbc0038I Pass  18: suminf.    1.37302 (3) obj. -51.5238 iterations 1
Cbc0038I Pass  19: suminf.    1.36454 (3) obj. -51.4221 iterations 3
Cbc0038I Pass  20: suminf.    2.07568 (5) obj. -51.4221 iterations 6
Cbc0038I Pass  21: suminf.    1.36454 (3) obj. -51.4221 iterations 6
Cbc0038I Pass  22: suminf.    1.36454 (3) obj. -51.4221 iterations 0
Cbc0038I Pass  23: suminf.    1.37837 (3) obj. -51.4221 iterations 2
Cbc0038I Pass  24: suminf.    1.37302 (3) obj. -51.5238 iterations 1
Cbc0038I Pass  25: suminf.    1.36454 (3) obj. -51.4221 iterations 3
Cbc0038I Pass  26: suminf.    2.79182 (7) obj. -51.4221 iterations 9
Cbc0038I Pass  27: suminf.    1.63332 (4) obj. -51.4221 iterations 6
Cbc0038I Pass  28: suminf.    0.87302 (2) obj. -51.4762 iterations 3
Cbc0038I Pass  29: suminf.    0.87017 (2) obj. -51.4221 iterations 2
Cbc0038I Pass  30: suminf.    1.12074 (3) obj. -51.4221 iterations 5
Cbc0038I Pass  31: suminf.    0.74740 (2) obj. -51.4221 iterations 1
Cbc0038I Pass  32: suminf.    0.51344 (2) obj. -51.4221 iterations 2
Cbc0038I Pass  33: suminf.    0.51344 (2) obj. -51.4221 iterations 1
Cbc0038I Pass  34: suminf.    0.61905 (2) obj. -53.4286 iterations 2
Cbc0038I Pass  35: suminf.    2.08248 (7) obj. -51.4221 iterations 8
Cbc0038I Pass  36: suminf.    1.38629 (4) obj. -51.4221 iterations 3
Cbc0038I Pass  37: suminf.    2.36454 (6) obj. -51.4221 iterations 9
Cbc0038I Pass  38: suminf.    2.36454 (6) obj. -51.4221 iterations 2
Cbc0038I Pass  39: suminf.    1.73208 (4) obj. -51.4221 iterations 5
Cbc0038I Pass  40: suminf.    1.73208 (4) obj. -51.4221 iterations 0
Cbc0038I Rounding solution of -47 is better than previous of -38

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 31 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -66.3287
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  40: suminf.    7.95754 (20) obj. -101.111 iterations 1
Cbc0038I Pass  41: suminf.    2.45806 (6) obj. -66.3287 iterations 25
Cbc0038I Pass  42: suminf.    2.45806 (6) obj. -66.3287 iterations 1
Cbc0038I Pass  43: suminf.    2.55953 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  44: suminf.    2.48850 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  45: suminf.    2.48850 (6) obj. -66.3287 iterations 1
Cbc0038I Pass  46: suminf.    2.45806 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  47: suminf.    2.45806 (6) obj. -66.3287 iterations 0
Cbc0038I Pass  48: suminf.    2.55953 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  49: suminf.    2.48850 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  50: suminf.    2.48850 (6) obj. -66.3287 iterations 1
Cbc0038I Pass  51: suminf.    2.45806 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  52: suminf.    2.45806 (6) obj. -66.3287 iterations 0
Cbc0038I Pass  53: suminf.    2.55953 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  54: suminf.    2.48850 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  55: suminf.    2.48850 (6) obj. -66.3287 iterations 1
Cbc0038I Pass  56: suminf.    2.45806 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  57: suminf.    2.45806 (6) obj. -66.3287 iterations 0
Cbc0038I Pass  58: suminf.    2.55953 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  59: suminf.    2.48850 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  60: suminf.    2.48850 (6) obj. -66.3287 iterations 1
Cbc0038I Pass  61: suminf.    2.45806 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  62: suminf.    2.45806 (6) obj. -66.3287 iterations 0
Cbc0038I Pass  63: suminf.    2.55953 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  64: suminf.    2.48850 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  65: suminf.    2.48850 (6) obj. -66.3287 iterations 1
Cbc0038I Pass  66: suminf.    2.45806 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  67: suminf.    2.45806 (6) obj. -66.3287 iterations 0
Cbc0038I Pass  68: suminf.    2.55953 (6) obj. -66.3287 iterations 2
Cbc0038I Pass  69: suminf.    2.48850 (6) obj. -66.3287 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -47 - took 0.01 seconds
Cbc0012I Integer solution of -47 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -65 found by DiveCoefficient after 8 iterations and 0 nodes (0.02 seconds)
Cbc0013I At root node, 0 cuts changed objective from -101.11071 to -65 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 64 row cuts average 2.0 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -65, took 8 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

