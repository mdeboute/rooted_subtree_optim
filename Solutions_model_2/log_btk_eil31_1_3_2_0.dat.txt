Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-12) rows, 30 (-3) columns and 159 (-24) elements
Clp1000I sum of infeasibilities 2.41626e-05 - average 4.55898e-07, 15 fixed columns
Coin0506I Presolve 17 (-36) rows, 11 (-19) columns and 50 (-109) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 333.99059
Clp0000I Optimal - objective value 333.99059
Coin0511I After Postsolve, objective 333.99059, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 333.99059
Clp0000I Optimal - objective value 333.99059
Clp0000I Optimal - objective value 333.99059
Coin0511I After Postsolve, objective 333.99059, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 333.9905927 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 30 columns (29 integer (29 of which binary)) and 167 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.831%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.77872
Cbc0038I Pass   1: suminf.    0.54145 (2) obj. -314.73 iterations 4
Cbc0038I Solution found of -75.4783
Cbc0038I Relaxing continuous gives -75.4783
Cbc0038I Rounding solution of -204.45 is better than previous of -75.4783

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 30 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -217.066
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54145 (2) obj. -314.73 iterations 0
Cbc0038I Pass   3: suminf.    0.23130 (1) obj. -217.066 iterations 2
Cbc0038I Pass   4: suminf.    0.08130 (1) obj. -244.695 iterations 1
Cbc0038I Pass   5: suminf.    0.50218 (2) obj. -269.213 iterations 6
Cbc0038I Pass   6: suminf.    0.21722 (1) obj. -217.066 iterations 4
Cbc0038I Pass   7: suminf.    0.49593 (1) obj. -268.403 iterations 1
Cbc0038I Pass   8: suminf.    1.47816 (6) obj. -217.066 iterations 6
Cbc0038I Pass   9: suminf.    0.28952 (3) obj. -217.066 iterations 5
Cbc0038I Pass  10: suminf.    0.45243 (2) obj. -217.066 iterations 5
Cbc0038I Pass  11: suminf.    0.27768 (2) obj. -217.066 iterations 3
Cbc0038I Pass  12: suminf.    0.95579 (4) obj. -217.066 iterations 11
Cbc0038I Pass  13: suminf.    0.95579 (4) obj. -217.066 iterations 1
Cbc0038I Pass  14: suminf.    0.92114 (2) obj. -217.066 iterations 6
Cbc0038I Pass  15: suminf.    0.35189 (2) obj. -217.066 iterations 2
Cbc0038I Pass  16: suminf.    1.11233 (6) obj. -217.066 iterations 6
Cbc0038I Pass  17: suminf.    0.32389 (2) obj. -217.066 iterations 5
Cbc0038I Pass  18: suminf.    0.89505 (2) obj. -217.066 iterations 4
Cbc0038I Pass  19: suminf.    0.89505 (2) obj. -217.066 iterations 0
Cbc0038I Pass  20: suminf.    0.52364 (2) obj. -239.236 iterations 4
Cbc0038I Pass  21: suminf.    1.22921 (5) obj. -217.066 iterations 8
Cbc0038I Pass  22: suminf.    0.86100 (4) obj. -217.066 iterations 4
Cbc0038I Pass  23: suminf.    0.70774 (2) obj. -243.312 iterations 4
Cbc0038I Pass  24: suminf.    0.50543 (2) obj. -217.066 iterations 3
Cbc0038I Pass  25: suminf.    1.04651 (4) obj. -217.066 iterations 12
Cbc0038I Pass  26: suminf.    0.49939 (2) obj. -217.066 iterations 5
Cbc0038I Pass  27: suminf.    0.51867 (2) obj. -219.567 iterations 2
Cbc0038I Pass  28: suminf.    0.81222 (3) obj. -225.455 iterations 2
Cbc0038I Pass  29: suminf.    0.72224 (3) obj. -217.066 iterations 2
Cbc0038I Pass  30: suminf.    0.83050 (2) obj. -217.066 iterations 5
Cbc0038I Pass  31: suminf.    0.83050 (2) obj. -217.066 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 30 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -204.45 - took 0.02 seconds
Cbc0012I Integer solution of -204.45028 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 49 rows 30 columns, reduced to 13 rows 8 columns
Cbc0012I Integer solution of -204.45038 found by DiveCoefficient after 1196 iterations and 0 nodes (1.35 seconds)
Cbc0031I 8 added rows had average density of 23.125
Cbc0013I At root node, 8 cuts changed objective from -330.61061 to -228.29935 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 408 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 434 row cuts average 26.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.700 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -204.45038 best solution, best possible -228.29935 (1.35 seconds)
Cbc0001I Search completed - best objective -204.45038, took 2471 iterations and 34 nodes (1.45 seconds)
Cbc0032I Strong branching done 288 times (1687 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 6, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-24) rows, 45 (-17) columns and 359 (-289) elements
Clp1000I sum of infeasibilities 3.92408e-08 - average 9.81019e-10, 23 fixed columns
Coin0506I Presolve 20 (-20) rows, 22 (-23) columns and 78 (-281) elements
Clp0006I 0  Obj 341.88163 Dual inf 5.3562317 (21)
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 3.7404845 - largest nonzero change 0 ( 0%) - largest zero change 1.7963867e-05
Clp0000I Optimal - objective value 345.89042
Clp0000I Optimal - objective value 345.89042
Coin0511I After Postsolve, objective 345.89042, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 345.89042 Dual inf 70.633539 (3)
Clp0014I Perturbing problem by 0.001% of 1.2315497 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 345.89042
Clp0000I Optimal - objective value 345.89042
Clp0000I Optimal - objective value 345.89042
Coin0511I After Postsolve, objective 345.89042, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 345.8904213 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 45 columns (45 integer (45 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.81107
Cbc0038I Pass   1: suminf.    0.19293 (2) obj. -215.053 iterations 18
Cbc0038I Pass   2: suminf.    0.19293 (2) obj. -215.053 iterations 1
Cbc0038I Solution found of -57.39
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 45 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -57.39 to -183.992 (0.01 seconds)
Cbc0038I Round again with cutoff of -197.388
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.19293 (2) obj. -215.053 iterations 0
Cbc0038I Pass   4: suminf.    0.19293 (2) obj. -215.053 iterations 1
Cbc0038I Pass   5: suminf.    0.23993 (1) obj. -197.388 iterations 2
Cbc0038I Pass   6: suminf.    0.15447 (1) obj. -213.13 iterations 1
Cbc0038I Pass   7: suminf.    0.33951 (7) obj. -197.388 iterations 12
Cbc0038I Pass   8: suminf.    0.23464 (5) obj. -197.388 iterations 11
Cbc0038I Pass   9: suminf.    0.24000 (1) obj. -266.356 iterations 7
Cbc0038I Pass  10: suminf.    0.38556 (1) obj. -197.388 iterations 1
Cbc0038I Pass  11: suminf.    0.46237 (4) obj. -197.388 iterations 11
Cbc0038I Pass  12: suminf.    0.46237 (4) obj. -197.388 iterations 1
Cbc0038I Pass  13: suminf.    0.31951 (2) obj. -197.388 iterations 4
Cbc0038I Pass  14: suminf.    0.33127 (2) obj. -197.388 iterations 1
Cbc0038I Pass  15: suminf.    0.40390 (5) obj. -197.388 iterations 6
Cbc0038I Pass  16: suminf.    0.21120 (1) obj. -197.388 iterations 10
Cbc0038I Pass  17: suminf.    0.24000 (1) obj. -259.356 iterations 2
Cbc0038I Pass  18: suminf.    0.42357 (1) obj. -197.388 iterations 1
Cbc0038I Pass  19: suminf.    1.68066 (9) obj. -197.388 iterations 9
Cbc0038I Pass  20: suminf.    0.99300 (5) obj. -197.388 iterations 6
Cbc0038I Pass  21: suminf.    0.47733 (2) obj. -197.388 iterations 7
Cbc0038I Pass  22: suminf.    0.42651 (1) obj. -197.388 iterations 1
Cbc0038I Pass  23: suminf.    0.28000 (1) obj. -251.447 iterations 1
Cbc0038I Pass  24: suminf.    1.13397 (9) obj. -197.388 iterations 12
Cbc0038I Pass  25: suminf.    0.87900 (8) obj. -197.388 iterations 2
Cbc0038I Pass  26: suminf.    0.62839 (2) obj. -197.388 iterations 8
Cbc0038I Pass  27: suminf.    0.44040 (2) obj. -197.388 iterations 2
Cbc0038I Pass  28: suminf.    0.57755 (2) obj. -197.388 iterations 2
Cbc0038I Pass  29: suminf.    1.05646 (6) obj. -197.66 iterations 16
Cbc0038I Pass  30: suminf.    0.39924 (4) obj. -197.388 iterations 6
Cbc0038I Pass  31: suminf.    0.20325 (1) obj. -207.869 iterations 4
Cbc0038I Pass  32: suminf.    0.14635 (1) obj. -197.388 iterations 1
Cbc0038I Rounding solution of -203.308 is better than previous of -183.992

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 45 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -203.308 to -204.45 (0.04 seconds)
Cbc0038I Round again with cutoff of -227.151
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.48597 (8) obj. -227.151 iterations 3
Cbc0038I Pass  33: suminf.    0.48597 (8) obj. -227.151 iterations 1
Cbc0038I Pass  34: suminf.    0.23432 (1) obj. -227.151 iterations 24
Cbc0038I Pass  35: suminf.    0.34634 (2) obj. -309.229 iterations 2
Cbc0038I Pass  36: suminf.    0.35756 (2) obj. -227.151 iterations 2
Cbc0038I Pass  37: suminf.    0.35756 (2) obj. -227.151 iterations 0
Cbc0038I Pass  38: suminf.    1.10657 (4) obj. -227.151 iterations 8
Cbc0038I Pass  39: suminf.    1.10657 (4) obj. -227.151 iterations 0
Cbc0038I Pass  40: suminf.    0.24235 (2) obj. -227.151 iterations 5
Cbc0038I Pass  41: suminf.    0.83065 (2) obj. -227.151 iterations 1
Cbc0038I Pass  42: suminf.    2.24476 (10) obj. -227.151 iterations 8
Cbc0038I Pass  43: suminf.    1.93567 (9) obj. -227.151 iterations 1
Cbc0038I Pass  44: suminf.    0.88599 (2) obj. -227.151 iterations 8
Cbc0038I Pass  45: suminf.    0.88599 (2) obj. -227.151 iterations 0
Cbc0038I Pass  46: suminf.    0.29458 (2) obj. -227.151 iterations 1
Cbc0038I Pass  47: suminf.    0.34911 (6) obj. -227.151 iterations 10
Cbc0038I Pass  48: suminf.    0.29612 (2) obj. -227.151 iterations 10
Cbc0038I Pass  49: suminf.    0.32958 (2) obj. -227.151 iterations 1
Cbc0038I Pass  50: suminf.    0.72545 (3) obj. -227.151 iterations 5
Cbc0038I Pass  51: suminf.    0.28587 (2) obj. -227.151 iterations 1
Cbc0038I Pass  52: suminf.    0.87676 (2) obj. -227.151 iterations 1
Cbc0038I Pass  53: suminf.    0.80390 (4) obj. -227.151 iterations 9
Cbc0038I Pass  54: suminf.    0.80390 (4) obj. -227.151 iterations 3
Cbc0038I Pass  55: suminf.    0.60260 (2) obj. -227.151 iterations 3
Cbc0038I Pass  56: suminf.    0.52926 (2) obj. -227.151 iterations 1
Cbc0038I Pass  57: suminf.    0.52926 (2) obj. -227.151 iterations 0
Cbc0038I Pass  58: suminf.    1.18569 (4) obj. -227.151 iterations 9
Cbc0038I Pass  59: suminf.    1.18569 (4) obj. -227.151 iterations 0
Cbc0038I Pass  60: suminf.    0.76860 (2) obj. -244.057 iterations 4
Cbc0038I Pass  61: suminf.    0.61268 (2) obj. -227.151 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 45 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -204.45 - took 0.04 seconds
Cbc0012I Integer solution of -204.45038 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 45 columns, reduced to 14 rows 15 columns
Cbc0031I 15 added rows had average density of 21.333333
Cbc0013I At root node, 15 cuts changed objective from -317.95516 to -225.40262 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 796 row cuts average 2.9 elements, 7 column cuts (7 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 434 row cuts average 31.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 127 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 124 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 122 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 215 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.676 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -204.45038 best solution, best possible -225.40262 (1.38 seconds)
Cbc0010I After 14 nodes, 5 on tree, -204.45038 best solution, best possible -225.40262 (2.09 seconds)
Cbc0001I Search completed - best objective -204.45038, took 2334 iterations and 26 nodes (2.57 seconds)
Cbc0032I Strong branching done 400 times (2699 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-12) rows, 30 (-3) columns and 159 (-24) elements
Clp1000I sum of infeasibilities 2.41626e-05 - average 4.55898e-07, 15 fixed columns
Coin0506I Presolve 17 (-36) rows, 11 (-19) columns and 50 (-109) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 333.99059
Clp0000I Optimal - objective value 333.99059
Coin0511I After Postsolve, objective 333.99059, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 333.99059
Clp0000I Optimal - objective value 333.99059
Clp0000I Optimal - objective value 333.99059
Coin0511I After Postsolve, objective 333.99059, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 333.9905927 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 30 columns (29 integer (29 of which binary)) and 167 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.831%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.77872
Cbc0038I Pass   1: suminf.    0.54145 (2) obj. -314.73 iterations 4
Cbc0038I Solution found of -75.4783
Cbc0038I Relaxing continuous gives -75.4783
Cbc0038I Rounding solution of -204.45 is better than previous of -75.4783

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 30 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -217.066
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54145 (2) obj. -314.73 iterations 0
Cbc0038I Pass   3: suminf.    0.23130 (1) obj. -217.066 iterations 2
Cbc0038I Pass   4: suminf.    0.08130 (1) obj. -244.695 iterations 1
Cbc0038I Pass   5: suminf.    0.50218 (2) obj. -269.213 iterations 6
Cbc0038I Pass   6: suminf.    0.21722 (1) obj. -217.066 iterations 4
Cbc0038I Pass   7: suminf.    0.49593 (1) obj. -268.403 iterations 1
Cbc0038I Pass   8: suminf.    1.47816 (6) obj. -217.066 iterations 6
Cbc0038I Pass   9: suminf.    0.28952 (3) obj. -217.066 iterations 5
Cbc0038I Pass  10: suminf.    0.45243 (2) obj. -217.066 iterations 5
Cbc0038I Pass  11: suminf.    0.27768 (2) obj. -217.066 iterations 3
Cbc0038I Pass  12: suminf.    0.95579 (4) obj. -217.066 iterations 11
Cbc0038I Pass  13: suminf.    0.95579 (4) obj. -217.066 iterations 1
Cbc0038I Pass  14: suminf.    0.92114 (2) obj. -217.066 iterations 6
Cbc0038I Pass  15: suminf.    0.35189 (2) obj. -217.066 iterations 2
Cbc0038I Pass  16: suminf.    1.11233 (6) obj. -217.066 iterations 6
Cbc0038I Pass  17: suminf.    0.32389 (2) obj. -217.066 iterations 5
Cbc0038I Pass  18: suminf.    0.89505 (2) obj. -217.066 iterations 4
Cbc0038I Pass  19: suminf.    0.89505 (2) obj. -217.066 iterations 0
Cbc0038I Pass  20: suminf.    0.52364 (2) obj. -239.236 iterations 4
Cbc0038I Pass  21: suminf.    1.22921 (5) obj. -217.066 iterations 8
Cbc0038I Pass  22: suminf.    0.86100 (4) obj. -217.066 iterations 4
Cbc0038I Pass  23: suminf.    0.70774 (2) obj. -243.312 iterations 4
Cbc0038I Pass  24: suminf.    0.50543 (2) obj. -217.066 iterations 3
Cbc0038I Pass  25: suminf.    1.04651 (4) obj. -217.066 iterations 12
Cbc0038I Pass  26: suminf.    0.49939 (2) obj. -217.066 iterations 5
Cbc0038I Pass  27: suminf.    0.51867 (2) obj. -219.567 iterations 2
Cbc0038I Pass  28: suminf.    0.81222 (3) obj. -225.455 iterations 2
Cbc0038I Pass  29: suminf.    0.72224 (3) obj. -217.066 iterations 2
Cbc0038I Pass  30: suminf.    0.83050 (2) obj. -217.066 iterations 5
Cbc0038I Pass  31: suminf.    0.83050 (2) obj. -217.066 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 30 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -204.45 - took 0.05 seconds
Cbc0012I Integer solution of -204.45028 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 49 rows 30 columns, reduced to 13 rows 8 columns
Cbc0012I Integer solution of -204.45038 found by DiveCoefficient after 1196 iterations and 0 nodes (1.45 seconds)
Cbc0031I 8 added rows had average density of 23.125
Cbc0013I At root node, 8 cuts changed objective from -330.61061 to -228.29935 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 408 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 434 row cuts average 26.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.748 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -204.45038 best solution, best possible -228.29935 (1.46 seconds)
Cbc0001I Search completed - best objective -204.45038, took 2471 iterations and 34 nodes (1.57 seconds)
Cbc0032I Strong branching done 288 times (1687 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 6, 33 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 45 (-18) columns and 359 (-290) elements
Clp1000I sum of infeasibilities 3.92408e-08 - average 9.81019e-10, 23 fixed columns
Coin0506I Presolve 20 (-20) rows, 22 (-23) columns and 78 (-281) elements
Clp0006I 0  Obj 341.88163 Dual inf 5.3562317 (21)
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 3.7404845 - largest nonzero change 0 ( 0%) - largest zero change 1.7963867e-05
Clp0000I Optimal - objective value 345.89042
Clp0000I Optimal - objective value 345.89042
Coin0511I After Postsolve, objective 345.89042, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 345.89042 Dual inf 70.633539 (3)
Clp0014I Perturbing problem by 0.001% of 1.2315497 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 345.89042
Clp0000I Optimal - objective value 345.89042
Clp0000I Optimal - objective value 345.89042
Coin0511I After Postsolve, objective 345.89042, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 345.8904213 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 45 columns (45 integer (45 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.81107
Cbc0038I Pass   1: suminf.    0.19293 (2) obj. -215.053 iterations 18
Cbc0038I Pass   2: suminf.    0.19293 (2) obj. -215.053 iterations 1
Cbc0038I Solution found of -57.39
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 45 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -57.39 to -183.992 (0.01 seconds)
Cbc0038I Round again with cutoff of -197.388
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.19293 (2) obj. -215.053 iterations 0
Cbc0038I Pass   4: suminf.    0.19293 (2) obj. -215.053 iterations 1
Cbc0038I Pass   5: suminf.    0.23993 (1) obj. -197.388 iterations 2
Cbc0038I Pass   6: suminf.    0.15447 (1) obj. -213.13 iterations 1
Cbc0038I Pass   7: suminf.    0.33951 (7) obj. -197.388 iterations 12
Cbc0038I Pass   8: suminf.    0.23464 (5) obj. -197.388 iterations 11
Cbc0038I Pass   9: suminf.    0.24000 (1) obj. -266.356 iterations 7
Cbc0038I Pass  10: suminf.    0.38556 (1) obj. -197.388 iterations 1
Cbc0038I Pass  11: suminf.    0.46237 (4) obj. -197.388 iterations 11
Cbc0038I Pass  12: suminf.    0.46237 (4) obj. -197.388 iterations 1
Cbc0038I Pass  13: suminf.    0.31951 (2) obj. -197.388 iterations 4
Cbc0038I Pass  14: suminf.    0.33127 (2) obj. -197.388 iterations 1
Cbc0038I Pass  15: suminf.    0.40390 (5) obj. -197.388 iterations 6
Cbc0038I Pass  16: suminf.    0.21120 (1) obj. -197.388 iterations 10
Cbc0038I Pass  17: suminf.    0.24000 (1) obj. -259.356 iterations 2
Cbc0038I Pass  18: suminf.    0.42357 (1) obj. -197.388 iterations 1
Cbc0038I Pass  19: suminf.    1.68066 (9) obj. -197.388 iterations 9
Cbc0038I Pass  20: suminf.    0.99300 (5) obj. -197.388 iterations 6
Cbc0038I Pass  21: suminf.    0.47733 (2) obj. -197.388 iterations 7
Cbc0038I Pass  22: suminf.    0.42651 (1) obj. -197.388 iterations 1
Cbc0038I Pass  23: suminf.    0.28000 (1) obj. -251.447 iterations 1
Cbc0038I Pass  24: suminf.    1.13397 (9) obj. -197.388 iterations 12
Cbc0038I Pass  25: suminf.    0.87900 (8) obj. -197.388 iterations 2
Cbc0038I Pass  26: suminf.    0.62839 (2) obj. -197.388 iterations 8
Cbc0038I Pass  27: suminf.    0.44040 (2) obj. -197.388 iterations 2
Cbc0038I Pass  28: suminf.    0.57755 (2) obj. -197.388 iterations 2
Cbc0038I Pass  29: suminf.    1.05646 (6) obj. -197.66 iterations 16
Cbc0038I Pass  30: suminf.    0.39924 (4) obj. -197.388 iterations 6
Cbc0038I Pass  31: suminf.    0.20325 (1) obj. -207.869 iterations 4
Cbc0038I Pass  32: suminf.    0.14635 (1) obj. -197.388 iterations 1
Cbc0038I Rounding solution of -203.308 is better than previous of -183.992

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 45 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -203.308 to -204.45 (0.04 seconds)
Cbc0038I Round again with cutoff of -227.151
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.48597 (8) obj. -227.151 iterations 3
Cbc0038I Pass  33: suminf.    0.48597 (8) obj. -227.151 iterations 1
Cbc0038I Pass  34: suminf.    0.23432 (1) obj. -227.151 iterations 24
Cbc0038I Pass  35: suminf.    0.34634 (2) obj. -309.229 iterations 2
Cbc0038I Pass  36: suminf.    0.35756 (2) obj. -227.151 iterations 2
Cbc0038I Pass  37: suminf.    0.35756 (2) obj. -227.151 iterations 0
Cbc0038I Pass  38: suminf.    1.10657 (4) obj. -227.151 iterations 8
Cbc0038I Pass  39: suminf.    1.10657 (4) obj. -227.151 iterations 0
Cbc0038I Pass  40: suminf.    0.24235 (2) obj. -227.151 iterations 5
Cbc0038I Pass  41: suminf.    0.83065 (2) obj. -227.151 iterations 1
Cbc0038I Pass  42: suminf.    2.24476 (10) obj. -227.151 iterations 8
Cbc0038I Pass  43: suminf.    1.93567 (9) obj. -227.151 iterations 1
Cbc0038I Pass  44: suminf.    0.88599 (2) obj. -227.151 iterations 8
Cbc0038I Pass  45: suminf.    0.88599 (2) obj. -227.151 iterations 0
Cbc0038I Pass  46: suminf.    0.29458 (2) obj. -227.151 iterations 1
Cbc0038I Pass  47: suminf.    0.34911 (6) obj. -227.151 iterations 10
Cbc0038I Pass  48: suminf.    0.29612 (2) obj. -227.151 iterations 10
Cbc0038I Pass  49: suminf.    0.32958 (2) obj. -227.151 iterations 1
Cbc0038I Pass  50: suminf.    0.72545 (3) obj. -227.151 iterations 5
Cbc0038I Pass  51: suminf.    0.28587 (2) obj. -227.151 iterations 1
Cbc0038I Pass  52: suminf.    0.87676 (2) obj. -227.151 iterations 1
Cbc0038I Pass  53: suminf.    0.80390 (4) obj. -227.151 iterations 9
Cbc0038I Pass  54: suminf.    0.80390 (4) obj. -227.151 iterations 3
Cbc0038I Pass  55: suminf.    0.60260 (2) obj. -227.151 iterations 3
Cbc0038I Pass  56: suminf.    0.52926 (2) obj. -227.151 iterations 1
Cbc0038I Pass  57: suminf.    0.52926 (2) obj. -227.151 iterations 0
Cbc0038I Pass  58: suminf.    1.18569 (4) obj. -227.151 iterations 9
Cbc0038I Pass  59: suminf.    1.18569 (4) obj. -227.151 iterations 0
Cbc0038I Pass  60: suminf.    0.76860 (2) obj. -244.057 iterations 4
Cbc0038I Pass  61: suminf.    0.61268 (2) obj. -227.151 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 45 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -204.45 - took 0.04 seconds
Cbc0012I Integer solution of -204.45038 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 45 columns, reduced to 14 rows 15 columns
Cbc0031I 15 added rows had average density of 21.333333
Cbc0013I At root node, 15 cuts changed objective from -317.95516 to -225.40262 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 796 row cuts average 2.9 elements, 7 column cuts (7 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 434 row cuts average 31.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 127 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 124 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 122 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 215 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -204.45038 best solution, best possible -225.40262 (1.53 seconds)
Cbc0010I After 14 nodes, 5 on tree, -204.45038 best solution, best possible -225.40262 (2.29 seconds)
Cbc0001I Search completed - best objective -204.45038, took 2334 iterations and 26 nodes (2.82 seconds)
Cbc0032I Strong branching done 400 times (2699 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       2.83

