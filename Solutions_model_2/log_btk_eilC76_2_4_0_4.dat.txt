Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 56 (-22) columns and 305 (-148) elements
Clp1000I sum of infeasibilities 1.72144e-05 - average 1.72144e-07, 25 fixed columns
Coin0506I Presolve 47 (-53) rows, 27 (-29) columns and 141 (-164) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 158.20322
Clp0000I Optimal - objective value 158.20322
Coin0511I After Postsolve, objective 158.20322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 158.20322
Clp0000I Optimal - objective value 158.20322
Clp0000I Optimal - objective value 158.20322
Coin0511I After Postsolve, objective 158.20322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 158.2032232 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 100 rows, 56 columns (55 integer (55 of which binary)) and 305 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.549%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.13063
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -120.732 iterations 24
Cbc0038I Solution found of -120.732
Cbc0038I Relaxing continuous gives -120.732
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -120.732 to -126.395 (0.01 seconds)
Cbc0038I Round again with cutoff of -129.576
Cbc0038I Pass   2: suminf.    0.59597 (3) obj. -129.576 iterations 6
Cbc0038I Pass   3: suminf.    0.44511 (3) obj. -129.576 iterations 14
Cbc0038I Pass   4: suminf.    0.44307 (3) obj. -129.576 iterations 7
Cbc0038I Pass   5: suminf.    0.82950 (3) obj. -129.576 iterations 7
Cbc0038I Pass   6: suminf.    1.91312 (5) obj. -129.576 iterations 8
Cbc0038I Pass   7: suminf.    1.91312 (5) obj. -129.576 iterations 3
Cbc0038I Pass   8: suminf.    1.06563 (4) obj. -129.576 iterations 17
Cbc0038I Pass   9: suminf.    0.92107 (4) obj. -129.576 iterations 10
Cbc0038I Pass  10: suminf.    0.91096 (3) obj. -129.576 iterations 14
Cbc0038I Pass  11: suminf.    0.59597 (3) obj. -129.576 iterations 3
Cbc0038I Pass  12: suminf.    0.44511 (3) obj. -129.576 iterations 14
Cbc0038I Pass  13: suminf.    0.44307 (3) obj. -129.576 iterations 7
Cbc0038I Pass  14: suminf.    0.82950 (3) obj. -129.576 iterations 6
Cbc0038I Pass  15: suminf.    4.30051 (13) obj. -129.576 iterations 21
Cbc0038I Pass  16: suminf.    2.82417 (10) obj. -129.576 iterations 7
Cbc0038I Pass  17: suminf.    2.82417 (10) obj. -129.576 iterations 0
Cbc0038I Pass  18: suminf.    2.72133 (6) obj. -129.576 iterations 18
Cbc0038I Pass  19: suminf.    0.92107 (4) obj. -129.576 iterations 9
Cbc0038I Pass  20: suminf.    0.91096 (3) obj. -129.576 iterations 19
Cbc0038I Pass  21: suminf.    0.59597 (3) obj. -129.576 iterations 3
Cbc0038I Pass  22: suminf.    0.44511 (3) obj. -129.576 iterations 14
Cbc0038I Pass  23: suminf.    0.44307 (3) obj. -129.576 iterations 9
Cbc0038I Pass  24: suminf.    0.82950 (3) obj. -129.576 iterations 6
Cbc0038I Pass  25: suminf.    0.76440 (3) obj. -129.576 iterations 22
Cbc0038I Pass  26: suminf.    0.52478 (2) obj. -129.576 iterations 11
Cbc0038I Pass  27: suminf.    0.32353 (1) obj. -129.576 iterations 4
Cbc0038I Pass  28: suminf.    0.40586 (1) obj. -129.576 iterations 1
Cbc0038I Pass  29: suminf.    5.01710 (15) obj. -129.576 iterations 22
Cbc0038I Pass  30: suminf.    1.92974 (5) obj. -129.576 iterations 8
Cbc0038I Pass  31: suminf.    1.51995 (4) obj. -129.576 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -126.395 - took 0.02 seconds
Cbc0012I Integer solution of -126.3951 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 100 rows 56 columns, reduced to 37 rows 21 columns
Cbc0031I 8 added rows had average density of 15.125
Cbc0013I At root node, 8 cuts changed objective from -158.20322 to -142.2639 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 3.3 elements, 13 column cuts (13 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -126.3951, took 197 iterations and 16 nodes (0.06 seconds)
Cbc0032I Strong branching done 70 times (288 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 60 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-69) rows, 95 (-57) columns and 1226 (-2077) elements
Clp1000I sum of infeasibilities 9.4122e-08 - average 1.10732e-09, 70 fixed columns
Coin0506I Presolve 22 (-63) rows, 25 (-70) columns and 89 (-1137) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.5313645 - largest nonzero change 0 ( 0%) - largest zero change 2.1918903e-05
Clp0000I Optimal - objective value 118.69074
Clp0000I Optimal - objective value 118.69074
Coin0511I After Postsolve, objective 118.69074, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1875303 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 186.5832
Clp0000I Optimal - objective value 186.5832
Clp0000I Optimal - objective value 186.5832
Coin0511I After Postsolve, objective 186.5832, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 186.5832009 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1232 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.222%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.21072
Cbc0038I Pass   1: suminf.    1.90014 (15) obj. -126.307 iterations 18
Cbc0038I Pass   2: suminf.    1.90014 (15) obj. -126.307 iterations 3
Cbc0038I Pass   3: suminf.    0.33249 (4) obj. -106.522 iterations 11
Cbc0038I Solution found of -101.893
Cbc0038I Rounding solution of -103.346 is better than previous of -101.893

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 32 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -103.346 to -126.395 (0.05 seconds)
Cbc0038I Round again with cutoff of -131.248
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.29940 (28) obj. -131.248 iterations 4
Cbc0038I Pass   5: suminf.    2.15696 (16) obj. -131.248 iterations 2
Cbc0038I Pass   6: suminf.    1.28696 (20) obj. -131.248 iterations 25
Cbc0038I Pass   7: suminf.    1.15429 (16) obj. -131.248 iterations 5
Cbc0038I Pass   8: suminf.    0.93385 (5) obj. -131.248 iterations 26
Cbc0038I Pass   9: suminf.    0.91181 (6) obj. -131.248 iterations 5
Cbc0038I Pass  10: suminf.    0.85993 (8) obj. -131.248 iterations 13
Cbc0038I Pass  11: suminf.    0.85993 (8) obj. -131.248 iterations 0
Cbc0038I Pass  12: suminf.    2.05660 (11) obj. -131.248 iterations 9
Cbc0038I Pass  13: suminf.    0.43915 (2) obj. -131.94 iterations 15
Cbc0038I Pass  14: suminf.    0.40464 (2) obj. -131.248 iterations 3
Cbc0038I Pass  15: suminf.    0.55447 (2) obj. -131.248 iterations 11
Cbc0038I Pass  16: suminf.    1.57833 (7) obj. -131.248 iterations 10
Cbc0038I Pass  17: suminf.    0.85121 (5) obj. -134.833 iterations 10
Cbc0038I Pass  18: suminf.    0.67261 (5) obj. -131.248 iterations 2
Cbc0038I Pass  19: suminf.    0.68362 (2) obj. -131.248 iterations 13
Cbc0038I Pass  20: suminf.    0.48749 (5) obj. -131.248 iterations 8
Cbc0038I Pass  21: suminf.    2.11625 (10) obj. -131.248 iterations 15
Cbc0038I Pass  22: suminf.    2.11625 (10) obj. -131.248 iterations 0
Cbc0038I Pass  23: suminf.    3.49654 (10) obj. -131.248 iterations 12
Cbc0038I Pass  24: suminf.    3.30591 (26) obj. -131.248 iterations 35
Cbc0038I Pass  25: suminf.    2.01705 (10) obj. -131.248 iterations 18
Cbc0038I Pass  26: suminf.    1.80237 (10) obj. -133.193 iterations 2
Cbc0038I Pass  27: suminf.    0.77408 (4) obj. -131.248 iterations 17
Cbc0038I Pass  28: suminf.    0.46162 (3) obj. -131.248 iterations 3
Cbc0038I Pass  29: suminf.    0.76618 (3) obj. -131.248 iterations 8
Cbc0038I Pass  30: suminf.    0.55563 (6) obj. -131.248 iterations 6
Cbc0038I Pass  31: suminf.    2.52766 (10) obj. -131.248 iterations 16
Cbc0038I Pass  32: suminf.    2.52766 (10) obj. -131.248 iterations 0
Cbc0038I Pass  33: suminf.    3.73165 (11) obj. -131.248 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 43 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -126.395 - took 0.06 seconds
Cbc0012I Integer solution of -126.3951 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 85 rows 95 columns, reduced to 14 rows 13 columns
Cbc0031I 28 added rows had average density of 18.928571
Cbc0013I At root node, 28 cuts changed objective from -174.91925 to -134.29421 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 478 row cuts average 5.9 elements, 17 column cuts (17 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 218 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -126.3951 best solution, best possible -134.2858 (0.60 seconds)
Cbc0001I Search completed - best objective -126.3951, took 594 iterations and 10 nodes (0.80 seconds)
Cbc0032I Strong branching done 202 times (2354 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 56 (-22) columns and 305 (-148) elements
Clp1000I sum of infeasibilities 1.72144e-05 - average 1.72144e-07, 25 fixed columns
Coin0506I Presolve 47 (-53) rows, 27 (-29) columns and 141 (-164) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 158.20322
Clp0000I Optimal - objective value 158.20322
Coin0511I After Postsolve, objective 158.20322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 158.20322
Clp0000I Optimal - objective value 158.20322
Clp0000I Optimal - objective value 158.20322
Coin0511I After Postsolve, objective 158.20322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 158.2032232 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 100 rows, 56 columns (55 integer (55 of which binary)) and 305 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.549%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.13063
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -120.732 iterations 24
Cbc0038I Solution found of -120.732
Cbc0038I Relaxing continuous gives -120.732
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -120.732 to -126.395 (0.02 seconds)
Cbc0038I Round again with cutoff of -129.576
Cbc0038I Pass   2: suminf.    0.59597 (3) obj. -129.576 iterations 6
Cbc0038I Pass   3: suminf.    0.44511 (3) obj. -129.576 iterations 14
Cbc0038I Pass   4: suminf.    0.44307 (3) obj. -129.576 iterations 7
Cbc0038I Pass   5: suminf.    0.82950 (3) obj. -129.576 iterations 7
Cbc0038I Pass   6: suminf.    1.91312 (5) obj. -129.576 iterations 8
Cbc0038I Pass   7: suminf.    1.91312 (5) obj. -129.576 iterations 3
Cbc0038I Pass   8: suminf.    1.06563 (4) obj. -129.576 iterations 17
Cbc0038I Pass   9: suminf.    0.92107 (4) obj. -129.576 iterations 10
Cbc0038I Pass  10: suminf.    0.91096 (3) obj. -129.576 iterations 14
Cbc0038I Pass  11: suminf.    0.59597 (3) obj. -129.576 iterations 3
Cbc0038I Pass  12: suminf.    0.44511 (3) obj. -129.576 iterations 14
Cbc0038I Pass  13: suminf.    0.44307 (3) obj. -129.576 iterations 7
Cbc0038I Pass  14: suminf.    0.82950 (3) obj. -129.576 iterations 6
Cbc0038I Pass  15: suminf.    4.30051 (13) obj. -129.576 iterations 21
Cbc0038I Pass  16: suminf.    2.82417 (10) obj. -129.576 iterations 7
Cbc0038I Pass  17: suminf.    2.82417 (10) obj. -129.576 iterations 0
Cbc0038I Pass  18: suminf.    2.72133 (6) obj. -129.576 iterations 18
Cbc0038I Pass  19: suminf.    0.92107 (4) obj. -129.576 iterations 9
Cbc0038I Pass  20: suminf.    0.91096 (3) obj. -129.576 iterations 19
Cbc0038I Pass  21: suminf.    0.59597 (3) obj. -129.576 iterations 3
Cbc0038I Pass  22: suminf.    0.44511 (3) obj. -129.576 iterations 14
Cbc0038I Pass  23: suminf.    0.44307 (3) obj. -129.576 iterations 9
Cbc0038I Pass  24: suminf.    0.82950 (3) obj. -129.576 iterations 6
Cbc0038I Pass  25: suminf.    0.76440 (3) obj. -129.576 iterations 22
Cbc0038I Pass  26: suminf.    0.52478 (2) obj. -129.576 iterations 11
Cbc0038I Pass  27: suminf.    0.32353 (1) obj. -129.576 iterations 4
Cbc0038I Pass  28: suminf.    0.40586 (1) obj. -129.576 iterations 1
Cbc0038I Pass  29: suminf.    5.01710 (15) obj. -129.576 iterations 22
Cbc0038I Pass  30: suminf.    1.92974 (5) obj. -129.576 iterations 8
Cbc0038I Pass  31: suminf.    1.51995 (4) obj. -129.576 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -126.395 - took 0.03 seconds
Cbc0012I Integer solution of -126.3951 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 100 rows 56 columns, reduced to 37 rows 21 columns
Cbc0031I 8 added rows had average density of 15.125
Cbc0013I At root node, 8 cuts changed objective from -158.20322 to -142.2639 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 3.3 elements, 13 column cuts (13 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -126.3951, took 197 iterations and 16 nodes (0.08 seconds)
Cbc0032I Strong branching done 70 times (288 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 60 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-70) rows, 95 (-58) columns and 1226 (-2078) elements
Clp1000I sum of infeasibilities 9.4122e-08 - average 1.10732e-09, 70 fixed columns
Coin0506I Presolve 22 (-63) rows, 25 (-70) columns and 89 (-1137) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.5313645 - largest nonzero change 0 ( 0%) - largest zero change 2.1918903e-05
Clp0000I Optimal - objective value 118.69074
Clp0000I Optimal - objective value 118.69074
Coin0511I After Postsolve, objective 118.69074, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1875303 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 186.5832
Clp0000I Optimal - objective value 186.5832
Clp0000I Optimal - objective value 186.5832
Coin0511I After Postsolve, objective 186.5832, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 186.5832009 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1232 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.222%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.21072
Cbc0038I Pass   1: suminf.    1.90014 (15) obj. -126.307 iterations 18
Cbc0038I Pass   2: suminf.    1.90014 (15) obj. -126.307 iterations 3
Cbc0038I Pass   3: suminf.    0.33249 (4) obj. -106.522 iterations 11
Cbc0038I Solution found of -101.893
Cbc0038I Rounding solution of -103.346 is better than previous of -101.893

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 32 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -103.346 to -126.395 (0.05 seconds)
Cbc0038I Round again with cutoff of -131.248
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.29940 (28) obj. -131.248 iterations 4
Cbc0038I Pass   5: suminf.    2.15696 (16) obj. -131.248 iterations 2
Cbc0038I Pass   6: suminf.    1.28696 (20) obj. -131.248 iterations 25
Cbc0038I Pass   7: suminf.    1.15429 (16) obj. -131.248 iterations 5
Cbc0038I Pass   8: suminf.    0.93385 (5) obj. -131.248 iterations 26
Cbc0038I Pass   9: suminf.    0.91181 (6) obj. -131.248 iterations 5
Cbc0038I Pass  10: suminf.    0.85993 (8) obj. -131.248 iterations 13
Cbc0038I Pass  11: suminf.    0.85993 (8) obj. -131.248 iterations 0
Cbc0038I Pass  12: suminf.    2.05660 (11) obj. -131.248 iterations 9
Cbc0038I Pass  13: suminf.    0.43915 (2) obj. -131.94 iterations 15
Cbc0038I Pass  14: suminf.    0.40464 (2) obj. -131.248 iterations 3
Cbc0038I Pass  15: suminf.    0.55447 (2) obj. -131.248 iterations 11
Cbc0038I Pass  16: suminf.    1.57833 (7) obj. -131.248 iterations 10
Cbc0038I Pass  17: suminf.    0.85121 (5) obj. -134.833 iterations 10
Cbc0038I Pass  18: suminf.    0.67261 (5) obj. -131.248 iterations 2
Cbc0038I Pass  19: suminf.    0.68362 (2) obj. -131.248 iterations 13
Cbc0038I Pass  20: suminf.    0.48749 (5) obj. -131.248 iterations 8
Cbc0038I Pass  21: suminf.    2.11625 (10) obj. -131.248 iterations 15
Cbc0038I Pass  22: suminf.    2.11625 (10) obj. -131.248 iterations 0
Cbc0038I Pass  23: suminf.    3.49654 (10) obj. -131.248 iterations 12
Cbc0038I Pass  24: suminf.    3.30591 (26) obj. -131.248 iterations 35
Cbc0038I Pass  25: suminf.    2.01705 (10) obj. -131.248 iterations 18
Cbc0038I Pass  26: suminf.    1.80237 (10) obj. -133.193 iterations 2
Cbc0038I Pass  27: suminf.    0.77408 (4) obj. -131.248 iterations 17
Cbc0038I Pass  28: suminf.    0.46162 (3) obj. -131.248 iterations 3
Cbc0038I Pass  29: suminf.    0.76618 (3) obj. -131.248 iterations 8
Cbc0038I Pass  30: suminf.    0.55563 (6) obj. -131.248 iterations 6
Cbc0038I Pass  31: suminf.    2.52766 (10) obj. -131.248 iterations 16
Cbc0038I Pass  32: suminf.    2.52766 (10) obj. -131.248 iterations 0
Cbc0038I Pass  33: suminf.    3.73165 (11) obj. -131.248 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 43 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -126.395 - took 0.06 seconds
Cbc0012I Integer solution of -126.3951 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 85 rows 95 columns, reduced to 14 rows 13 columns
Cbc0031I 28 added rows had average density of 18.928571
Cbc0013I At root node, 28 cuts changed objective from -174.91925 to -134.29421 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 478 row cuts average 5.9 elements, 17 column cuts (17 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 218 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -126.3951 best solution, best possible -134.2858 (0.56 seconds)
Cbc0001I Search completed - best objective -126.3951, took 594 iterations and 10 nodes (0.91 seconds)
Cbc0032I Strong branching done 202 times (2354 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.92

