Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 38 (-31) rows, 21 (-14) columns and 111 (-84) elements
Clp0000I Optimal - objective value 104.34518
Coin0511I After Postsolve, objective 104.34518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.3451809 - 25 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.987%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.85944
Cbc0038I Solution found of -32
Cbc0038I Relaxing continuous gives -32
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -39.6844
Cbc0038I Pass   1: suminf.    0.23644 (1) obj. -39.6844 iterations 17
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -39.6844 iterations 2
Cbc0038I Solution found of -39.6844
Cbc0038I Relaxing continuous gives -64.5
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -72.869
Cbc0038I Pass   3: suminf.    1.53451 (9) obj. -72.869 iterations 7
Cbc0038I Pass   4: suminf.    1.38666 (11) obj. -72.869 iterations 4
Cbc0038I Pass   5: suminf.    2.10798 (7) obj. -72.869 iterations 13
Cbc0038I Pass   6: suminf.    2.10798 (7) obj. -72.869 iterations 0
Cbc0038I Pass   7: suminf.    2.30030 (6) obj. -72.869 iterations 7
Cbc0038I Pass   8: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass   9: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  10: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  11: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  12: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  13: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  14: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass  15: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  16: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  17: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  18: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  19: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  20: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass  21: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  22: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  23: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  24: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  25: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  26: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass  27: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  28: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  29: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  30: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  31: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  32: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -64.5 - took 0.03 seconds
Cbc0012I Integer solution of -64.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -104.34518 to -104.34518 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.5, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-23) rows, 47 (-19) columns and 363 (-360) elements
Clp1000I sum of infeasibilities 5.37467e-08 - average 1.19437e-09, 34 fixed columns
Coin0506I Presolve 11 (-34) rows, 13 (-34) columns and 43 (-320) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value -7.3064516
Clp0000I Optimal - objective value -7.3064516
Coin0511I After Postsolve, objective -7.3064516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.4390758 - largest nonzero change 2.8915257e-05 ( 0.0017698061%) - largest zero change 2.155116e-05
Clp0000I Optimal - objective value 164.94707
Clp0000I Optimal - objective value 164.94707
Clp0000I Optimal - objective value 164.94707
Coin0511I After Postsolve, objective 164.94707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.9470725 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 47 columns (47 integer (47 of which binary)) and 367 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.35904
Cbc0038I Pass   1: suminf.    1.90146 (12) obj. -45.1642 iterations 10
Cbc0038I Pass   2: suminf.    1.90146 (12) obj. -45.1642 iterations 0
Cbc0038I Solution found of 16
Cbc0038I Rounding solution of -12 is better than previous of 16

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -22.0137
Cbc0038I Pass   3: suminf.    1.90146 (12) obj. -45.1642 iterations 0
Cbc0038I Pass   4: suminf.    1.90146 (12) obj. -45.1642 iterations 0
Cbc0038I Pass   5: suminf.    0.41244 (2) obj. -22.0137 iterations 19
Cbc0038I Pass   6: suminf.    0.41244 (2) obj. -22.0137 iterations 0
Cbc0038I Pass   7: suminf.    0.29724 (2) obj. -22.0137 iterations 1
Cbc0038I Pass   8: suminf.    1.35918 (9) obj. -27.7459 iterations 11
Cbc0038I Pass   9: suminf.    0.52740 (3) obj. -22.0137 iterations 8
Cbc0038I Pass  10: suminf.    0.33961 (3) obj. -22.0137 iterations 2
Cbc0038I Pass  11: suminf.    0.33961 (3) obj. -22.0137 iterations 0
Cbc0038I Pass  12: suminf.    0.24507 (2) obj. -22.0137 iterations 2
Cbc0038I Pass  13: suminf.    0.24507 (2) obj. -22.0137 iterations 0
Cbc0038I Pass  14: suminf.    0.31463 (2) obj. -44.8297 iterations 1
Cbc0038I Pass  15: suminf.    0.26316 (1) obj. -41.9474 iterations 1
Cbc0038I Pass  16: suminf.    0.42139 (4) obj. -22.0137 iterations 21
Cbc0038I Pass  17: suminf.    0.22069 (4) obj. -33.2534 iterations 8
Cbc0038I Pass  18: suminf.    0.28063 (2) obj. -22.0137 iterations 4
Cbc0038I Pass  19: suminf.    0.10263 (2) obj. -29.4895 iterations 1
Cbc0038I Pass  20: suminf.    1.37123 (7) obj. -22.0137 iterations 9
Cbc0038I Pass  21: suminf.    0.55457 (3) obj. -22.0137 iterations 7
Cbc0038I Pass  22: suminf.    0.55457 (3) obj. -22.0137 iterations 0
Cbc0038I Pass  23: suminf.    0.65054 (2) obj. -22.0137 iterations 2
Cbc0038I Pass  24: suminf.    0.65054 (2) obj. -22.0137 iterations 0
Cbc0038I Pass  25: suminf.    0.47581 (2) obj. -22.0137 iterations 1
Cbc0038I Pass  26: suminf.    1.10506 (7) obj. -22.0137 iterations 15
Cbc0038I Pass  27: suminf.    1.10506 (7) obj. -22.0137 iterations 2
Cbc0038I Pass  28: suminf.    0.55106 (3) obj. -22.0137 iterations 9
Cbc0038I Pass  29: suminf.    0.22175 (2) obj. -24.3189 iterations 3
Cbc0038I Pass  30: suminf.    0.27663 (2) obj. -22.0137 iterations 2
Cbc0038I Pass  31: suminf.    3.44015 (13) obj. -22.0137 iterations 22
Cbc0038I Pass  32: suminf.    2.52671 (13) obj. -22.0137 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 47 columns, reduced to 35 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 16 to -64.5 (0.03 seconds)
Cbc0038I Round again with cutoff of -73.5276
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.39497 (13) obj. -73.5276 iterations 1
Cbc0038I Pass  33: suminf.    2.26175 (13) obj. -80.9877 iterations 2
Cbc0038I Pass  34: suminf.    2.22876 (17) obj. -73.5276 iterations 16
Cbc0038I Pass  35: suminf.    2.22876 (17) obj. -73.5276 iterations 0
Cbc0038I Pass  36: suminf.    1.56107 (5) obj. -73.5276 iterations 19
Cbc0038I Pass  37: suminf.    1.47277 (5) obj. -73.5276 iterations 2
Cbc0038I Pass  38: suminf.    1.56107 (5) obj. -73.5276 iterations 2
Cbc0038I Pass  39: suminf.    2.86913 (10) obj. -73.5276 iterations 10
Cbc0038I Pass  40: suminf.    2.58557 (9) obj. -73.5276 iterations 3
Cbc0038I Pass  41: suminf.    3.47460 (12) obj. -73.5276 iterations 4
Cbc0038I Pass  42: suminf.    3.47460 (12) obj. -73.5276 iterations 1
Cbc0038I Pass  43: suminf.    3.92690 (18) obj. -73.5276 iterations 6
Cbc0038I Pass  44: suminf.    3.92690 (18) obj. -73.5276 iterations 0
Cbc0038I Pass  45: suminf.    3.32408 (17) obj. -73.5276 iterations 2
Cbc0038I Pass  46: suminf.    3.31041 (16) obj. -73.5276 iterations 3
Cbc0038I Pass  47: suminf.    1.91886 (6) obj. -73.5276 iterations 16
Cbc0038I Pass  48: suminf.    1.80015 (6) obj. -73.5276 iterations 2
Cbc0038I Pass  49: suminf.    1.56107 (5) obj. -73.5276 iterations 6
Cbc0038I Pass  50: suminf.    1.47277 (5) obj. -73.5276 iterations 4
Cbc0038I Pass  51: suminf.    3.05357 (11) obj. -73.5276 iterations 7
Cbc0038I Pass  52: suminf.    3.05357 (11) obj. -73.5276 iterations 0
Cbc0038I Pass  53: suminf.    1.56107 (5) obj. -73.5276 iterations 10
Cbc0038I Pass  54: suminf.    2.47600 (10) obj. -73.5276 iterations 5
Cbc0038I Pass  55: suminf.    2.42545 (8) obj. -73.5276 iterations 5
Cbc0038I Pass  56: suminf.    2.06560 (7) obj. -73.5276 iterations 9
Cbc0038I Pass  57: suminf.    2.06560 (7) obj. -73.5276 iterations 0
Cbc0038I Pass  58: suminf.    1.99894 (7) obj. -73.5276 iterations 2
Cbc0038I Pass  59: suminf.    1.99894 (7) obj. -73.5276 iterations 0
Cbc0038I Pass  60: suminf.    2.06560 (7) obj. -73.5276 iterations 2
Cbc0038I Pass  61: suminf.    2.06560 (7) obj. -73.5276 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -64.5 - took 0.02 seconds
Cbc0012I Integer solution of -64.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 45 rows 47 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -107.63826 to -49.664875 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 133 row cuts average 5.2 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.5, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 38 (-31) rows, 21 (-14) columns and 111 (-84) elements
Clp0000I Optimal - objective value 104.34518
Coin0511I After Postsolve, objective 104.34518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.3451809 - 25 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.987%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.85944
Cbc0038I Solution found of -32
Cbc0038I Relaxing continuous gives -32
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -39.6844
Cbc0038I Pass   1: suminf.    0.23644 (1) obj. -39.6844 iterations 17
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -39.6844 iterations 2
Cbc0038I Solution found of -39.6844
Cbc0038I Relaxing continuous gives -64.5
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -72.869
Cbc0038I Pass   3: suminf.    1.53451 (9) obj. -72.869 iterations 7
Cbc0038I Pass   4: suminf.    1.38666 (11) obj. -72.869 iterations 4
Cbc0038I Pass   5: suminf.    2.10798 (7) obj. -72.869 iterations 13
Cbc0038I Pass   6: suminf.    2.10798 (7) obj. -72.869 iterations 0
Cbc0038I Pass   7: suminf.    2.30030 (6) obj. -72.869 iterations 7
Cbc0038I Pass   8: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass   9: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  10: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  11: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  12: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  13: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  14: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass  15: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  16: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  17: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  18: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  19: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  20: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass  21: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  22: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  23: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  24: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  25: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  26: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I Pass  27: suminf.    2.13373 (8) obj. -72.869 iterations 3
Cbc0038I Pass  28: suminf.    2.13373 (8) obj. -72.869 iterations 0
Cbc0038I Pass  29: suminf.    1.68960 (7) obj. -72.869 iterations 10
Cbc0038I Pass  30: suminf.    1.46753 (6) obj. -72.869 iterations 1
Cbc0038I Pass  31: suminf.    2.30030 (6) obj. -72.869 iterations 6
Cbc0038I Pass  32: suminf.    2.65533 (6) obj. -72.869 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -64.5 - took 0.03 seconds
Cbc0012I Integer solution of -64.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -104.34518 to -104.34518 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.5, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-24) rows, 47 (-20) columns and 363 (-361) elements
Clp1000I sum of infeasibilities 5.37467e-08 - average 1.19437e-09, 34 fixed columns
Coin0506I Presolve 11 (-34) rows, 13 (-34) columns and 43 (-320) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value -7.3064516
Clp0000I Optimal - objective value -7.3064516
Coin0511I After Postsolve, objective -7.3064516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.4390758 - largest nonzero change 2.8915257e-05 ( 0.0017698061%) - largest zero change 2.155116e-05
Clp0000I Optimal - objective value 164.94707
Clp0000I Optimal - objective value 164.94707
Clp0000I Optimal - objective value 164.94707
Coin0511I After Postsolve, objective 164.94707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.9470725 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 47 columns (47 integer (47 of which binary)) and 367 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.35904
Cbc0038I Pass   1: suminf.    1.90146 (12) obj. -45.1642 iterations 10
Cbc0038I Pass   2: suminf.    1.90146 (12) obj. -45.1642 iterations 0
Cbc0038I Solution found of 16
Cbc0038I Rounding solution of -12 is better than previous of 16

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.0137
Cbc0038I Pass   3: suminf.    1.90146 (12) obj. -45.1642 iterations 0
Cbc0038I Pass   4: suminf.    1.90146 (12) obj. -45.1642 iterations 0
Cbc0038I Pass   5: suminf.    0.41244 (2) obj. -22.0137 iterations 19
Cbc0038I Pass   6: suminf.    0.41244 (2) obj. -22.0137 iterations 0
Cbc0038I Pass   7: suminf.    0.29724 (2) obj. -22.0137 iterations 1
Cbc0038I Pass   8: suminf.    1.35918 (9) obj. -27.7459 iterations 11
Cbc0038I Pass   9: suminf.    0.52740 (3) obj. -22.0137 iterations 8
Cbc0038I Pass  10: suminf.    0.33961 (3) obj. -22.0137 iterations 2
Cbc0038I Pass  11: suminf.    0.33961 (3) obj. -22.0137 iterations 0
Cbc0038I Pass  12: suminf.    0.24507 (2) obj. -22.0137 iterations 2
Cbc0038I Pass  13: suminf.    0.24507 (2) obj. -22.0137 iterations 0
Cbc0038I Pass  14: suminf.    0.31463 (2) obj. -44.8297 iterations 1
Cbc0038I Pass  15: suminf.    0.26316 (1) obj. -41.9474 iterations 1
Cbc0038I Pass  16: suminf.    0.42139 (4) obj. -22.0137 iterations 21
Cbc0038I Pass  17: suminf.    0.22069 (4) obj. -33.2534 iterations 8
Cbc0038I Pass  18: suminf.    0.28063 (2) obj. -22.0137 iterations 4
Cbc0038I Pass  19: suminf.    0.10263 (2) obj. -29.4895 iterations 1
Cbc0038I Pass  20: suminf.    1.37123 (7) obj. -22.0137 iterations 9
Cbc0038I Pass  21: suminf.    0.55457 (3) obj. -22.0137 iterations 7
Cbc0038I Pass  22: suminf.    0.55457 (3) obj. -22.0137 iterations 0
Cbc0038I Pass  23: suminf.    0.65054 (2) obj. -22.0137 iterations 2
Cbc0038I Pass  24: suminf.    0.65054 (2) obj. -22.0137 iterations 0
Cbc0038I Pass  25: suminf.    0.47581 (2) obj. -22.0137 iterations 1
Cbc0038I Pass  26: suminf.    1.10506 (7) obj. -22.0137 iterations 15
Cbc0038I Pass  27: suminf.    1.10506 (7) obj. -22.0137 iterations 2
Cbc0038I Pass  28: suminf.    0.55106 (3) obj. -22.0137 iterations 9
Cbc0038I Pass  29: suminf.    0.22175 (2) obj. -24.3189 iterations 3
Cbc0038I Pass  30: suminf.    0.27663 (2) obj. -22.0137 iterations 2
Cbc0038I Pass  31: suminf.    3.44015 (13) obj. -22.0137 iterations 22
Cbc0038I Pass  32: suminf.    2.52671 (13) obj. -22.0137 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 47 columns, reduced to 35 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 16 to -64.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -73.5276
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.39497 (13) obj. -73.5276 iterations 1
Cbc0038I Pass  33: suminf.    2.26175 (13) obj. -80.9877 iterations 2
Cbc0038I Pass  34: suminf.    2.22876 (17) obj. -73.5276 iterations 16
Cbc0038I Pass  35: suminf.    2.22876 (17) obj. -73.5276 iterations 0
Cbc0038I Pass  36: suminf.    1.56107 (5) obj. -73.5276 iterations 19
Cbc0038I Pass  37: suminf.    1.47277 (5) obj. -73.5276 iterations 2
Cbc0038I Pass  38: suminf.    1.56107 (5) obj. -73.5276 iterations 2
Cbc0038I Pass  39: suminf.    2.86913 (10) obj. -73.5276 iterations 10
Cbc0038I Pass  40: suminf.    2.58557 (9) obj. -73.5276 iterations 3
Cbc0038I Pass  41: suminf.    3.47460 (12) obj. -73.5276 iterations 4
Cbc0038I Pass  42: suminf.    3.47460 (12) obj. -73.5276 iterations 1
Cbc0038I Pass  43: suminf.    3.92690 (18) obj. -73.5276 iterations 6
Cbc0038I Pass  44: suminf.    3.92690 (18) obj. -73.5276 iterations 0
Cbc0038I Pass  45: suminf.    3.32408 (17) obj. -73.5276 iterations 2
Cbc0038I Pass  46: suminf.    3.31041 (16) obj. -73.5276 iterations 3
Cbc0038I Pass  47: suminf.    1.91886 (6) obj. -73.5276 iterations 16
Cbc0038I Pass  48: suminf.    1.80015 (6) obj. -73.5276 iterations 2
Cbc0038I Pass  49: suminf.    1.56107 (5) obj. -73.5276 iterations 6
Cbc0038I Pass  50: suminf.    1.47277 (5) obj. -73.5276 iterations 4
Cbc0038I Pass  51: suminf.    3.05357 (11) obj. -73.5276 iterations 7
Cbc0038I Pass  52: suminf.    3.05357 (11) obj. -73.5276 iterations 0
Cbc0038I Pass  53: suminf.    1.56107 (5) obj. -73.5276 iterations 10
Cbc0038I Pass  54: suminf.    2.47600 (10) obj. -73.5276 iterations 5
Cbc0038I Pass  55: suminf.    2.42545 (8) obj. -73.5276 iterations 5
Cbc0038I Pass  56: suminf.    2.06560 (7) obj. -73.5276 iterations 9
Cbc0038I Pass  57: suminf.    2.06560 (7) obj. -73.5276 iterations 0
Cbc0038I Pass  58: suminf.    1.99894 (7) obj. -73.5276 iterations 2
Cbc0038I Pass  59: suminf.    1.99894 (7) obj. -73.5276 iterations 0
Cbc0038I Pass  60: suminf.    2.06560 (7) obj. -73.5276 iterations 2
Cbc0038I Pass  61: suminf.    2.06560 (7) obj. -73.5276 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -64.5 - took 0.03 seconds
Cbc0012I Integer solution of -64.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 45 rows 47 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -107.63826 to -49.664875 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 133 row cuts average 5.2 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.5, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

