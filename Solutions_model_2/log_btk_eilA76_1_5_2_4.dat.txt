Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 0.000524051 - average 4.00039e-06, 16 fixed columns
Coin0506I Presolve 93 (-38) rows, 55 (-20) columns and 289 (-115) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.26712011 - largest nonzero change 0 ( 0%) - largest zero change 2.7495251e-05
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Coin0511I After Postsolve, objective 43.975109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Coin0511I After Postsolve, objective 43.975109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.97510855 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.82858
Cbc0038I Solution found of -4.27778
Cbc0038I Relaxing continuous gives -13.6325
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16.6522
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.61747 (34) obj. -16.6522 iterations 33
Cbc0038I Pass   2: suminf.    3.10205 (10) obj. -16.6522 iterations 38
Cbc0038I Pass   3: suminf.    1.23928 (4) obj. -16.6522 iterations 12
Cbc0038I Pass   4: suminf.    1.17986 (6) obj. -16.6522 iterations 2
Cbc0038I Pass   5: suminf.    1.97896 (6) obj. -16.6522 iterations 8
Cbc0038I Pass   6: suminf.    1.71788 (6) obj. -16.6522 iterations 1
Cbc0038I Pass   7: suminf.    1.84172 (5) obj. -16.6522 iterations 7
Cbc0038I Pass   8: suminf.    1.82693 (6) obj. -16.6522 iterations 1
Cbc0038I Pass   9: suminf.    1.82693 (6) obj. -16.6522 iterations 0
Cbc0038I Pass  10: suminf.    1.71151 (6) obj. -16.6522 iterations 7
Cbc0038I Pass  11: suminf.    1.60485 (6) obj. -16.6522 iterations 4
Cbc0038I Pass  12: suminf.    1.53515 (4) obj. -16.6522 iterations 8
Cbc0038I Pass  13: suminf.    1.50636 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  14: suminf.    1.63310 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  15: suminf.    1.30725 (5) obj. -16.6522 iterations 3
Cbc0038I Pass  16: suminf.    2.12597 (5) obj. -16.6522 iterations 6
Cbc0038I Pass  17: suminf.    1.62018 (6) obj. -16.6522 iterations 16
Cbc0038I Pass  18: suminf.    1.20820 (5) obj. -16.6522 iterations 10
Cbc0038I Pass  19: suminf.    1.20970 (6) obj. -16.6522 iterations 1
Cbc0038I Pass  20: suminf.    1.48481 (4) obj. -16.6522 iterations 9
Cbc0038I Pass  21: suminf.    1.40044 (6) obj. -16.6522 iterations 3
Cbc0038I Pass  22: suminf.    1.53515 (4) obj. -16.6522 iterations 8
Cbc0038I Pass  23: suminf.    1.50636 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  24: suminf.    1.63310 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  25: suminf.    1.30725 (5) obj. -16.6522 iterations 3
Cbc0038I Pass  26: suminf.    2.12597 (5) obj. -16.6522 iterations 6
Cbc0038I Pass  27: suminf.    2.79990 (7) obj. -16.6522 iterations 18
Cbc0038I Pass  28: suminf.    1.70587 (6) obj. -16.6522 iterations 15
Cbc0038I Pass  29: suminf.    1.30425 (5) obj. -16.6522 iterations 4
Cbc0038I Pass  30: suminf.    1.45781 (4) obj. -16.6522 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -13.6325 - took 0.05 seconds
Cbc0012I Integer solution of -13.6325 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 65 rows 38 columns
Cbc0031I 21 added rows had average density of 58.857143
Cbc0013I At root node, 21 cuts changed objective from -43.828529 to -37.679215 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10731 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1366 row cuts average 67.9 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 67.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.6325 best solution, best possible -37.679215 (0.73 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 10 rows 8 columns
Cbc0004I Integer solution of -13.722053 found after 9335 iterations and 42 nodes (0.96 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -13.722053, took 11613 iterations and 166 nodes (1.12 seconds)
Cbc0032I Strong branching done 1266 times (16564 iterations), fathomed 9 nodes and fixed 64 variables
Cbc0035I Maximum depth 25, 302 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 118 (-34) columns and 2086 (-1217) elements
Clp1000I sum of infeasibilities 1.0536e-05 - average 1.04316e-07, 7 fixed columns
Coin0506I Presolve 91 (-10) rows, 107 (-11) columns and 1778 (-308) elements
Clp0006I 0  Obj 17.026214 Dual inf 6.4859959 (107)
Clp0029I End of values pass after 107 iterations
Clp0014I Perturbing problem by 0.001% of 1.7997155 - largest nonzero change 2.1367677e-05 ( 0.0014271972%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 57.415983
Clp0000I Optimal - objective value 57.415983
Coin0511I After Postsolve, objective 57.415983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.415983
Clp0000I Optimal - objective value 57.415983
Clp0000I Optimal - objective value 57.415983
Clp0000I Optimal - objective value 57.415983
Coin0511I After Postsolve, objective 57.415983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.41598302 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 121 columns (121 integer (121 of which binary)) and 2105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.731%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 8.89737
Cbc0038I Pass   1: suminf.    1.47828 (27) obj. -17.9778 iterations 28
Cbc0038I Pass   2: suminf.    1.47828 (27) obj. -17.9778 iterations 1
Cbc0038I Pass   3: suminf.    0.70378 (15) obj. -6.7523 iterations 12
Cbc0038I Solution found of 16.1628
Cbc0038I Rounding solution of -0.049383 is better than previous of 16.1628

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 121 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -0.049383 to -3.56623 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.26334
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.47828 (27) obj. -17.9778 iterations 0
Cbc0038I Pass   5: suminf.    1.47828 (27) obj. -17.9778 iterations 1
Cbc0038I Pass   6: suminf.    0.53793 (9) obj. -8.26334 iterations 34
Cbc0038I Pass   7: suminf.    0.53793 (9) obj. -8.26334 iterations 0
Cbc0038I Pass   8: suminf.    1.64706 (7) obj. -8.26334 iterations 20
Cbc0038I Pass   9: suminf.    0.97832 (13) obj. -8.26334 iterations 5
Cbc0038I Pass  10: suminf.    0.69829 (20) obj. -8.26334 iterations 2
Cbc0038I Pass  11: suminf.    0.72758 (6) obj. -8.26334 iterations 28
Cbc0038I Pass  12: suminf.    0.72758 (6) obj. -8.26334 iterations 0
Cbc0038I Pass  13: suminf.    2.09724 (8) obj. -8.26334 iterations 11
Cbc0038I Pass  14: suminf.    1.29357 (7) obj. -8.26334 iterations 4
Cbc0038I Pass  15: suminf.    1.29357 (7) obj. -8.26334 iterations 3
Cbc0038I Pass  16: suminf.    1.72189 (7) obj. -8.26334 iterations 9
Cbc0038I Pass  17: suminf.    1.72189 (7) obj. -8.26334 iterations 0
Cbc0038I Pass  18: suminf.    1.92012 (7) obj. -8.26334 iterations 4
Cbc0038I Pass  19: suminf.    1.92012 (7) obj. -8.26334 iterations 3
Cbc0038I Pass  20: suminf.    1.72189 (7) obj. -8.26334 iterations 7
Cbc0038I Pass  21: suminf.    1.30529 (17) obj. -8.26334 iterations 32
Cbc0038I Pass  22: suminf.    1.30380 (16) obj. -8.26334 iterations 10
Cbc0038I Pass  23: suminf.    1.79043 (8) obj. -8.26334 iterations 19
Cbc0038I Pass  24: suminf.    1.32587 (8) obj. -8.26334 iterations 8
Cbc0038I Pass  25: suminf.    1.76839 (7) obj. -8.26334 iterations 8
Cbc0038I Pass  26: suminf.    1.34148 (7) obj. -8.26334 iterations 2
Cbc0038I Pass  27: suminf.    0.93248 (6) obj. -8.26334 iterations 2
Cbc0038I Pass  28: suminf.    0.48408 (6) obj. -8.26334 iterations 5
Cbc0038I Pass  29: suminf.    1.15605 (6) obj. -8.26334 iterations 7
Cbc0038I Pass  30: suminf.    0.76604 (6) obj. -8.26334 iterations 1
Cbc0038I Pass  31: suminf.    1.72189 (7) obj. -8.26334 iterations 4
Cbc0038I Pass  32: suminf.    1.72189 (7) obj. -8.26334 iterations 2
Cbc0038I Pass  33: suminf.    1.92012 (7) obj. -8.26334 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 121 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -3.56623 to -3.94975 (0.06 seconds)
Cbc0038I Round again with cutoff of -16.718
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.47828 (27) obj. -17.9778 iterations 0
Cbc0038I Pass  34: suminf.    1.47828 (27) obj. -17.9778 iterations 1
Cbc0038I Pass  35: suminf.    1.11346 (18) obj. -16.718 iterations 49
Cbc0038I Pass  36: suminf.    1.11346 (18) obj. -16.718 iterations 1
Cbc0038I Pass  37: suminf.    1.13275 (16) obj. -16.718 iterations 25
Cbc0038I Pass  38: suminf.    1.08193 (11) obj. -16.718 iterations 3
Cbc0038I Pass  39: suminf.    3.98406 (14) obj. -16.718 iterations 14
Cbc0038I Pass  40: suminf.    3.98406 (14) obj. -16.718 iterations 1
Cbc0038I Pass  41: suminf.    3.82878 (12) obj. -16.718 iterations 8
Cbc0038I Pass  42: suminf.    2.95830 (13) obj. -16.718 iterations 5
Cbc0038I Pass  43: suminf.    1.73255 (11) obj. -16.718 iterations 6
Cbc0038I Pass  44: suminf.    1.63024 (11) obj. -16.718 iterations 6
Cbc0038I Pass  45: suminf.    3.82878 (12) obj. -16.718 iterations 12
Cbc0038I Pass  46: suminf.    3.74246 (18) obj. -16.718 iterations 18
Cbc0038I Pass  47: suminf.    1.04126 (14) obj. -16.718 iterations 13
Cbc0038I Pass  48: suminf.    0.96115 (15) obj. -16.718 iterations 3
Cbc0038I Pass  49: suminf.    3.59444 (15) obj. -16.718 iterations 20
Cbc0038I Pass  50: suminf.    1.30572 (15) obj. -16.718 iterations 9
Cbc0038I Pass  51: suminf.    1.15880 (12) obj. -16.718 iterations 8
Cbc0038I Pass  52: suminf.    3.07149 (17) obj. -16.718 iterations 13
Cbc0038I Pass  53: suminf.    3.20675 (19) obj. -16.718 iterations 12
Cbc0038I Pass  54: suminf.    2.40957 (17) obj. -16.718 iterations 9
Cbc0038I Pass  55: suminf.    3.00341 (16) obj. -16.718 iterations 15
Cbc0038I Pass  56: suminf.    2.55158 (17) obj. -16.718 iterations 2
Cbc0038I Pass  57: suminf.    3.30553 (13) obj. -16.718 iterations 16
Cbc0038I Pass  58: suminf.    3.14033 (14) obj. -16.718 iterations 5
Cbc0038I Pass  59: suminf.    3.30553 (13) obj. -16.718 iterations 6
Cbc0038I Pass  60: suminf.    3.41685 (18) obj. -16.718 iterations 10
Cbc0038I Pass  61: suminf.    2.22962 (16) obj. -16.718 iterations 6
Cbc0038I Pass  62: suminf.    1.55013 (12) obj. -16.7367 iterations 7
Cbc0038I Rounding solution of -5.57045 is better than previous of -3.94975

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 121 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -5.57045 to -6.41312 (0.12 seconds)
Cbc0038I Round again with cutoff of -26.8635
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.01354 (43) obj. -26.8635 iterations 10
Cbc0038I Pass  63: suminf.    2.88729 (24) obj. -26.8635 iterations 33
Cbc0038I Pass  64: suminf.    1.55409 (24) obj. -26.8635 iterations 2
Cbc0038I Pass  65: suminf.    1.55409 (24) obj. -26.8635 iterations 0
Cbc0038I Pass  66: suminf.    1.82126 (21) obj. -26.8635 iterations 13
Cbc0038I Pass  67: suminf.    1.72461 (22) obj. -26.8635 iterations 5
Cbc0038I Pass  68: suminf.    4.95481 (23) obj. -26.8635 iterations 13
Cbc0038I Pass  69: suminf.    4.72059 (23) obj. -26.8635 iterations 2
Cbc0038I Pass  70: suminf.    1.86524 (22) obj. -26.8635 iterations 12
Cbc0038I Pass  71: suminf.    1.86524 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  72: suminf.    4.95481 (23) obj. -26.8635 iterations 17
Cbc0038I Pass  73: suminf.    4.86054 (23) obj. -26.8635 iterations 3
Cbc0038I Pass  74: suminf.    2.18494 (22) obj. -26.8635 iterations 15
Cbc0038I Pass  75: suminf.    2.18494 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  76: suminf.    4.95481 (23) obj. -26.8635 iterations 18
Cbc0038I Pass  77: suminf.    4.85470 (23) obj. -26.8635 iterations 2
Cbc0038I Pass  78: suminf.    2.20856 (22) obj. -26.8635 iterations 14
Cbc0038I Pass  79: suminf.    2.20856 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  80: suminf.    4.95481 (23) obj. -26.8635 iterations 20
Cbc0038I Pass  81: suminf.    4.82433 (23) obj. -26.8635 iterations 3
Cbc0038I Pass  82: suminf.    2.18494 (22) obj. -26.8635 iterations 14
Cbc0038I Pass  83: suminf.    2.18494 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  84: suminf.    4.95481 (23) obj. -26.8635 iterations 12
Cbc0038I Pass  85: suminf.    4.77748 (23) obj. -26.8635 iterations 2
Cbc0038I Pass  86: suminf.    2.18982 (22) obj. -26.8635 iterations 13
Cbc0038I Pass  87: suminf.    2.18982 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  88: suminf.    4.95481 (23) obj. -26.8635 iterations 12
Cbc0038I Pass  89: suminf.    4.74947 (23) obj. -26.8635 iterations 4
Cbc0038I Pass  90: suminf.    2.18494 (22) obj. -26.8635 iterations 13
Cbc0038I Pass  91: suminf.    2.18494 (22) obj. -26.8635 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -6.41312 - took 0.10 seconds
Cbc0012I Integer solution of -6.41312 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 104 rows 121 columns, reduced to 26 rows 29 columns
Cbc0031I 58 added rows had average density of 42.827586
Cbc0013I At root node, 58 cuts changed objective from -50.536401 to -20.772037 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21293 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.207 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3313 row cuts average 110.9 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 551 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1732 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 433 row cuts average 54.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 167 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.41312 best solution, best possible -20.772037 (2.01 seconds)
Cbc0012I Integer solution of -13.71846 found by rounding after 6781 iterations and 1 nodes (2.02 seconds)
Cbc0012I Integer solution of -13.722053 found by rounding after 7169 iterations and 10 nodes (2.08 seconds)
Cbc0038I Full problem 104 rows 121 columns, reduced to 11 rows 17 columns
Cbc0038I Full problem 104 rows 121 columns, reduced to 6 rows 11 columns
Cbc0010I After 126 nodes, 7 on tree, -13.722053 best solution, best possible -20.133535 (2.73 seconds)
Cbc0001I Search completed - best objective -13.722053, took 10088 iterations and 150 nodes (2.92 seconds)
Cbc0032I Strong branching done 1046 times (15482 iterations), fathomed 19 nodes and fixed 15 variables
Cbc0035I Maximum depth 12, 235 variables fixed on reduced cost
Total time (CPU seconds):       2.70   (Wallclock seconds):       2.95

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 0.000524051 - average 4.00039e-06, 16 fixed columns
Coin0506I Presolve 93 (-38) rows, 55 (-20) columns and 289 (-115) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.26712011 - largest nonzero change 0 ( 0%) - largest zero change 2.7495251e-05
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Coin0511I After Postsolve, objective 43.975109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Clp0000I Optimal - objective value 43.975109
Coin0511I After Postsolve, objective 43.975109, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.97510855 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.82858
Cbc0038I Solution found of -4.27778
Cbc0038I Relaxing continuous gives -13.6325
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16.6522
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.61747 (34) obj. -16.6522 iterations 33
Cbc0038I Pass   2: suminf.    3.10205 (10) obj. -16.6522 iterations 38
Cbc0038I Pass   3: suminf.    1.23928 (4) obj. -16.6522 iterations 12
Cbc0038I Pass   4: suminf.    1.17986 (6) obj. -16.6522 iterations 2
Cbc0038I Pass   5: suminf.    1.97896 (6) obj. -16.6522 iterations 8
Cbc0038I Pass   6: suminf.    1.71788 (6) obj. -16.6522 iterations 1
Cbc0038I Pass   7: suminf.    1.84172 (5) obj. -16.6522 iterations 7
Cbc0038I Pass   8: suminf.    1.82693 (6) obj. -16.6522 iterations 1
Cbc0038I Pass   9: suminf.    1.82693 (6) obj. -16.6522 iterations 0
Cbc0038I Pass  10: suminf.    1.71151 (6) obj. -16.6522 iterations 7
Cbc0038I Pass  11: suminf.    1.60485 (6) obj. -16.6522 iterations 4
Cbc0038I Pass  12: suminf.    1.53515 (4) obj. -16.6522 iterations 8
Cbc0038I Pass  13: suminf.    1.50636 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  14: suminf.    1.63310 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  15: suminf.    1.30725 (5) obj. -16.6522 iterations 3
Cbc0038I Pass  16: suminf.    2.12597 (5) obj. -16.6522 iterations 6
Cbc0038I Pass  17: suminf.    1.62018 (6) obj. -16.6522 iterations 16
Cbc0038I Pass  18: suminf.    1.20820 (5) obj. -16.6522 iterations 10
Cbc0038I Pass  19: suminf.    1.20970 (6) obj. -16.6522 iterations 1
Cbc0038I Pass  20: suminf.    1.48481 (4) obj. -16.6522 iterations 9
Cbc0038I Pass  21: suminf.    1.40044 (6) obj. -16.6522 iterations 3
Cbc0038I Pass  22: suminf.    1.53515 (4) obj. -16.6522 iterations 8
Cbc0038I Pass  23: suminf.    1.50636 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  24: suminf.    1.63310 (4) obj. -16.6522 iterations 2
Cbc0038I Pass  25: suminf.    1.30725 (5) obj. -16.6522 iterations 3
Cbc0038I Pass  26: suminf.    2.12597 (5) obj. -16.6522 iterations 6
Cbc0038I Pass  27: suminf.    2.79990 (7) obj. -16.6522 iterations 18
Cbc0038I Pass  28: suminf.    1.70587 (6) obj. -16.6522 iterations 15
Cbc0038I Pass  29: suminf.    1.30425 (5) obj. -16.6522 iterations 4
Cbc0038I Pass  30: suminf.    1.45781 (4) obj. -16.6522 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 69 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -13.6325 - took 0.05 seconds
Cbc0012I Integer solution of -13.6325 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 65 rows 38 columns
Cbc0031I 21 added rows had average density of 58.857143
Cbc0013I At root node, 21 cuts changed objective from -43.828529 to -37.679215 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10731 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1366 row cuts average 67.9 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 67.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.6325 best solution, best possible -37.679215 (0.92 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 10 rows 8 columns
Cbc0004I Integer solution of -13.722053 found after 9335 iterations and 42 nodes (1.17 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -13.722053, took 11613 iterations and 166 nodes (1.35 seconds)
Cbc0032I Strong branching done 1266 times (16564 iterations), fathomed 9 nodes and fixed 64 variables
Cbc0035I Maximum depth 25, 302 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 118 (-35) columns and 2086 (-1218) elements
Clp1000I sum of infeasibilities 1.0536e-05 - average 1.04316e-07, 7 fixed columns
Coin0506I Presolve 91 (-10) rows, 107 (-11) columns and 1778 (-308) elements
Clp0006I 0  Obj 17.026214 Dual inf 6.4859959 (107)
Clp0029I End of values pass after 107 iterations
Clp0014I Perturbing problem by 0.001% of 1.7997155 - largest nonzero change 2.1367677e-05 ( 0.0014271972%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 57.415983
Clp0000I Optimal - objective value 57.415983
Coin0511I After Postsolve, objective 57.415983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.415983
Clp0000I Optimal - objective value 57.415983
Clp0000I Optimal - objective value 57.415983
Clp0000I Optimal - objective value 57.415983
Coin0511I After Postsolve, objective 57.415983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.41598302 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 121 columns (121 integer (121 of which binary)) and 2105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.731%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 8.89737
Cbc0038I Pass   1: suminf.    1.47828 (27) obj. -17.9778 iterations 28
Cbc0038I Pass   2: suminf.    1.47828 (27) obj. -17.9778 iterations 1
Cbc0038I Pass   3: suminf.    0.70378 (15) obj. -6.7523 iterations 12
Cbc0038I Solution found of 16.1628
Cbc0038I Rounding solution of -0.049383 is better than previous of 16.1628

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 121 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -0.049383 to -3.56623 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.26334
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.47828 (27) obj. -17.9778 iterations 0
Cbc0038I Pass   5: suminf.    1.47828 (27) obj. -17.9778 iterations 1
Cbc0038I Pass   6: suminf.    0.53793 (9) obj. -8.26334 iterations 34
Cbc0038I Pass   7: suminf.    0.53793 (9) obj. -8.26334 iterations 0
Cbc0038I Pass   8: suminf.    1.64706 (7) obj. -8.26334 iterations 20
Cbc0038I Pass   9: suminf.    0.97832 (13) obj. -8.26334 iterations 5
Cbc0038I Pass  10: suminf.    0.69829 (20) obj. -8.26334 iterations 2
Cbc0038I Pass  11: suminf.    0.72758 (6) obj. -8.26334 iterations 28
Cbc0038I Pass  12: suminf.    0.72758 (6) obj. -8.26334 iterations 0
Cbc0038I Pass  13: suminf.    2.09724 (8) obj. -8.26334 iterations 11
Cbc0038I Pass  14: suminf.    1.29357 (7) obj. -8.26334 iterations 4
Cbc0038I Pass  15: suminf.    1.29357 (7) obj. -8.26334 iterations 3
Cbc0038I Pass  16: suminf.    1.72189 (7) obj. -8.26334 iterations 9
Cbc0038I Pass  17: suminf.    1.72189 (7) obj. -8.26334 iterations 0
Cbc0038I Pass  18: suminf.    1.92012 (7) obj. -8.26334 iterations 4
Cbc0038I Pass  19: suminf.    1.92012 (7) obj. -8.26334 iterations 3
Cbc0038I Pass  20: suminf.    1.72189 (7) obj. -8.26334 iterations 7
Cbc0038I Pass  21: suminf.    1.30529 (17) obj. -8.26334 iterations 32
Cbc0038I Pass  22: suminf.    1.30380 (16) obj. -8.26334 iterations 10
Cbc0038I Pass  23: suminf.    1.79043 (8) obj. -8.26334 iterations 19
Cbc0038I Pass  24: suminf.    1.32587 (8) obj. -8.26334 iterations 8
Cbc0038I Pass  25: suminf.    1.76839 (7) obj. -8.26334 iterations 8
Cbc0038I Pass  26: suminf.    1.34148 (7) obj. -8.26334 iterations 2
Cbc0038I Pass  27: suminf.    0.93248 (6) obj. -8.26334 iterations 2
Cbc0038I Pass  28: suminf.    0.48408 (6) obj. -8.26334 iterations 5
Cbc0038I Pass  29: suminf.    1.15605 (6) obj. -8.26334 iterations 7
Cbc0038I Pass  30: suminf.    0.76604 (6) obj. -8.26334 iterations 1
Cbc0038I Pass  31: suminf.    1.72189 (7) obj. -8.26334 iterations 4
Cbc0038I Pass  32: suminf.    1.72189 (7) obj. -8.26334 iterations 2
Cbc0038I Pass  33: suminf.    1.92012 (7) obj. -8.26334 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 121 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -3.56623 to -3.94975 (0.05 seconds)
Cbc0038I Round again with cutoff of -16.718
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.47828 (27) obj. -17.9778 iterations 0
Cbc0038I Pass  34: suminf.    1.47828 (27) obj. -17.9778 iterations 1
Cbc0038I Pass  35: suminf.    1.11346 (18) obj. -16.718 iterations 49
Cbc0038I Pass  36: suminf.    1.11346 (18) obj. -16.718 iterations 1
Cbc0038I Pass  37: suminf.    1.13275 (16) obj. -16.718 iterations 25
Cbc0038I Pass  38: suminf.    1.08193 (11) obj. -16.718 iterations 3
Cbc0038I Pass  39: suminf.    3.98406 (14) obj. -16.718 iterations 14
Cbc0038I Pass  40: suminf.    3.98406 (14) obj. -16.718 iterations 1
Cbc0038I Pass  41: suminf.    3.82878 (12) obj. -16.718 iterations 8
Cbc0038I Pass  42: suminf.    2.95830 (13) obj. -16.718 iterations 5
Cbc0038I Pass  43: suminf.    1.73255 (11) obj. -16.718 iterations 6
Cbc0038I Pass  44: suminf.    1.63024 (11) obj. -16.718 iterations 6
Cbc0038I Pass  45: suminf.    3.82878 (12) obj. -16.718 iterations 12
Cbc0038I Pass  46: suminf.    3.74246 (18) obj. -16.718 iterations 18
Cbc0038I Pass  47: suminf.    1.04126 (14) obj. -16.718 iterations 13
Cbc0038I Pass  48: suminf.    0.96115 (15) obj. -16.718 iterations 3
Cbc0038I Pass  49: suminf.    3.59444 (15) obj. -16.718 iterations 20
Cbc0038I Pass  50: suminf.    1.30572 (15) obj. -16.718 iterations 9
Cbc0038I Pass  51: suminf.    1.15880 (12) obj. -16.718 iterations 8
Cbc0038I Pass  52: suminf.    3.07149 (17) obj. -16.718 iterations 13
Cbc0038I Pass  53: suminf.    3.20675 (19) obj. -16.718 iterations 12
Cbc0038I Pass  54: suminf.    2.40957 (17) obj. -16.718 iterations 9
Cbc0038I Pass  55: suminf.    3.00341 (16) obj. -16.718 iterations 15
Cbc0038I Pass  56: suminf.    2.55158 (17) obj. -16.718 iterations 2
Cbc0038I Pass  57: suminf.    3.30553 (13) obj. -16.718 iterations 16
Cbc0038I Pass  58: suminf.    3.14033 (14) obj. -16.718 iterations 5
Cbc0038I Pass  59: suminf.    3.30553 (13) obj. -16.718 iterations 6
Cbc0038I Pass  60: suminf.    3.41685 (18) obj. -16.718 iterations 10
Cbc0038I Pass  61: suminf.    2.22962 (16) obj. -16.718 iterations 6
Cbc0038I Pass  62: suminf.    1.55013 (12) obj. -16.7367 iterations 7
Cbc0038I Rounding solution of -5.57045 is better than previous of -3.94975

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 121 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -5.57045 to -6.41312 (0.12 seconds)
Cbc0038I Round again with cutoff of -26.8635
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.01354 (43) obj. -26.8635 iterations 10
Cbc0038I Pass  63: suminf.    2.88729 (24) obj. -26.8635 iterations 33
Cbc0038I Pass  64: suminf.    1.55409 (24) obj. -26.8635 iterations 2
Cbc0038I Pass  65: suminf.    1.55409 (24) obj. -26.8635 iterations 0
Cbc0038I Pass  66: suminf.    1.82126 (21) obj. -26.8635 iterations 13
Cbc0038I Pass  67: suminf.    1.72461 (22) obj. -26.8635 iterations 5
Cbc0038I Pass  68: suminf.    4.95481 (23) obj. -26.8635 iterations 13
Cbc0038I Pass  69: suminf.    4.72059 (23) obj. -26.8635 iterations 2
Cbc0038I Pass  70: suminf.    1.86524 (22) obj. -26.8635 iterations 12
Cbc0038I Pass  71: suminf.    1.86524 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  72: suminf.    4.95481 (23) obj. -26.8635 iterations 17
Cbc0038I Pass  73: suminf.    4.86054 (23) obj. -26.8635 iterations 3
Cbc0038I Pass  74: suminf.    2.18494 (22) obj. -26.8635 iterations 15
Cbc0038I Pass  75: suminf.    2.18494 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  76: suminf.    4.95481 (23) obj. -26.8635 iterations 18
Cbc0038I Pass  77: suminf.    4.85470 (23) obj. -26.8635 iterations 2
Cbc0038I Pass  78: suminf.    2.20856 (22) obj. -26.8635 iterations 14
Cbc0038I Pass  79: suminf.    2.20856 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  80: suminf.    4.95481 (23) obj. -26.8635 iterations 20
Cbc0038I Pass  81: suminf.    4.82433 (23) obj. -26.8635 iterations 3
Cbc0038I Pass  82: suminf.    2.18494 (22) obj. -26.8635 iterations 14
Cbc0038I Pass  83: suminf.    2.18494 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  84: suminf.    4.95481 (23) obj. -26.8635 iterations 12
Cbc0038I Pass  85: suminf.    4.77748 (23) obj. -26.8635 iterations 2
Cbc0038I Pass  86: suminf.    2.18982 (22) obj. -26.8635 iterations 13
Cbc0038I Pass  87: suminf.    2.18982 (22) obj. -26.8635 iterations 1
Cbc0038I Pass  88: suminf.    4.95481 (23) obj. -26.8635 iterations 12
Cbc0038I Pass  89: suminf.    4.74947 (23) obj. -26.8635 iterations 4
Cbc0038I Pass  90: suminf.    2.18494 (22) obj. -26.8635 iterations 13
Cbc0038I Pass  91: suminf.    2.18494 (22) obj. -26.8635 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -6.41312 - took 0.11 seconds
Cbc0012I Integer solution of -6.41312 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 104 rows 121 columns, reduced to 26 rows 29 columns
Cbc0031I 58 added rows had average density of 42.827586
Cbc0013I At root node, 58 cuts changed objective from -50.536401 to -20.772037 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21293 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3313 row cuts average 110.9 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 551 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1732 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 433 row cuts average 54.3 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 167 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.197 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.41312 best solution, best possible -20.772037 (2.35 seconds)
Cbc0012I Integer solution of -13.71846 found by rounding after 6781 iterations and 1 nodes (2.36 seconds)
Cbc0012I Integer solution of -13.722053 found by rounding after 7169 iterations and 10 nodes (2.43 seconds)
Cbc0038I Full problem 104 rows 121 columns, reduced to 11 rows 17 columns
Cbc0038I Full problem 104 rows 121 columns, reduced to 6 rows 11 columns
Cbc0010I After 123 nodes, 6 on tree, -13.722053 best solution, best possible -20.133535 (3.06 seconds)
Cbc0001I Search completed - best objective -13.722053, took 10088 iterations and 150 nodes (3.31 seconds)
Cbc0032I Strong branching done 1046 times (15482 iterations), fathomed 19 nodes and fixed 15 variables
Cbc0035I Maximum depth 12, 235 variables fixed on reduced cost
Total time (CPU seconds):       3.03   (Wallclock seconds):       3.34

