Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 150 (-55) rows, 81 (-22) columns and 456 (-147) elements
Clp1000I sum of infeasibilities 1.82838e-07 - average 1.21892e-09, 73 fixed columns
Coin0506I Presolve 11 (-139) rows, 8 (-73) columns and 32 (-424) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Coin0511I After Postsolve, objective 22321.898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21155682 - largest nonzero change 0 ( 0%) - largest zero change 2.9716912e-05
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Coin0511I After Postsolve, objective 22321.898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22321.89784 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 150 rows, 81 columns (80 integer (80 of which binary)) and 469 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.288%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.37469
Cbc0038I Pass   1: suminf.    0.75254 (2) obj. -22154.4 iterations 17
Cbc0038I Solution found of -19020
Cbc0038I Relaxing continuous gives -19020
Cbc0038I Rounding solution of -20547.4 is better than previous of -19020

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20724.9
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.75254 (2) obj. -22154.4 iterations 0
Cbc0038I Pass   3: suminf.    0.33077 (2) obj. -20724.9 iterations 3
Cbc0038I Pass   4: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass   5: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass   6: suminf.    0.81181 (4) obj. -20724.9 iterations 16
Cbc0038I Pass   7: suminf.    0.06396 (1) obj. -20724.9 iterations 14
Cbc0038I Pass   8: suminf.    0.28526 (2) obj. -21597.8 iterations 2
Cbc0038I Pass   9: suminf.    0.76454 (3) obj. -20724.9 iterations 9
Cbc0038I Pass  10: suminf.    0.37872 (2) obj. -21148.1 iterations 7
Cbc0038I Pass  11: suminf.    0.74527 (2) obj. -20724.9 iterations 6
Cbc0038I Pass  12: suminf.    0.53496 (9) obj. -20724.9 iterations 23
Cbc0038I Pass  13: suminf.    0.25195 (2) obj. -20724.9 iterations 15
Cbc0038I Pass  14: suminf.    0.80123 (2) obj. -20724.9 iterations 10
Cbc0038I Pass  15: suminf.    0.29803 (1) obj. -20724.9 iterations 10
Cbc0038I Pass  16: suminf.    0.43902 (1) obj. -21470.2 iterations 1
Cbc0038I Pass  17: suminf.    1.36265 (9) obj. -20724.9 iterations 14
Cbc0038I Pass  18: suminf.    0.56135 (7) obj. -20724.9 iterations 8
Cbc0038I Pass  19: suminf.    0.55311 (8) obj. -20724.9 iterations 4
Cbc0038I Pass  20: suminf.    0.89322 (3) obj. -20724.9 iterations 20
Cbc0038I Pass  21: suminf.    0.21495 (1) obj. -20724.9 iterations 5
Cbc0038I Pass  22: suminf.    0.24390 (1) obj. -20877.9 iterations 1
Cbc0038I Pass  23: suminf.    1.22539 (4) obj. -20724.9 iterations 11
Cbc0038I Pass  24: suminf.    0.30488 (3) obj. -20724.9 iterations 13
Cbc0038I Pass  25: suminf.    1.01857 (3) obj. -20724.9 iterations 10
Cbc0038I Pass  26: suminf.    0.71452 (2) obj. -20724.9 iterations 7
Cbc0038I Pass  27: suminf.    0.20069 (2) obj. -20724.9 iterations 9
Cbc0038I Pass  28: suminf.    0.74546 (2) obj. -20724.9 iterations 2
Cbc0038I Pass  29: suminf.    0.49960 (2) obj. -21556.7 iterations 2
Cbc0038I Pass  30: suminf.    0.79417 (3) obj. -20724.9 iterations 6
Cbc0038I Pass  31: suminf.    0.17966 (2) obj. -21154.5 iterations 3
Cbc0038I Rounding solution of -21529.5 is better than previous of -20547.4

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -21688
Cbc0038I Reduced cost fixing fixed 48 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.75254 (2) obj. -22154.4 iterations 0
Cbc0038I Pass  32: suminf.    0.56329 (2) obj. -21688 iterations 3
Cbc0038I Pass  33: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass  34: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass  35: suminf.    1.14353 (3) obj. -21688 iterations 12
Cbc0038I Pass  36: suminf.    0.51828 (3) obj. -21688 iterations 1
Cbc0038I Pass  37: suminf.    0.56329 (2) obj. -21688 iterations 7
Cbc0038I Pass  38: suminf.    0.56329 (2) obj. -21688 iterations 0
Cbc0038I Pass  39: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass  40: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass  41: suminf.    2.03075 (6) obj. -21688 iterations 12
Cbc0038I Pass  42: suminf.    0.75254 (2) obj. -22154.4 iterations 10
Cbc0038I Pass  43: suminf.    2.33058 (6) obj. -21688 iterations 12
Cbc0038I Pass  44: suminf.    2.15937 (6) obj. -21688 iterations 4
Cbc0038I Pass  45: suminf.    2.40523 (5) obj. -21812.4 iterations 7
Cbc0038I Pass  46: suminf.    0.57474 (7) obj. -21688 iterations 13
Cbc0038I Pass  47: suminf.    0.32365 (4) obj. -21877.7 iterations 18
Cbc0038I Pass  48: suminf.    0.02998 (1) obj. -21688 iterations 6
Cbc0038I Pass  49: suminf.    0.04878 (1) obj. -21787.3 iterations 1
Cbc0038I Pass  50: suminf.    0.25635 (4) obj. -21688 iterations 8
Cbc0038I Pass  51: suminf.    0.15111 (3) obj. -21688 iterations 7
Cbc0038I Pass  52: suminf.    0.23911 (3) obj. -21688 iterations 8
Cbc0038I Pass  53: suminf.    1.36327 (7) obj. -21688 iterations 14
Cbc0038I Pass  54: suminf.    1.01345 (8) obj. -21688 iterations 11
Cbc0038I Pass  55: suminf.    1.01345 (8) obj. -21688 iterations 4
Cbc0038I Pass  56: suminf.    0.32365 (4) obj. -21877.7 iterations 21
Cbc0038I Pass  57: suminf.    0.02998 (1) obj. -21688 iterations 11
Cbc0038I Pass  58: suminf.    1.00434 (4) obj. -21688 iterations 13
Cbc0038I Pass  59: suminf.    0.81094 (3) obj. -21688 iterations 7
Cbc0038I Pass  60: suminf.    0.09880 (2) obj. -21994.5 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -21529.5 - took 0.02 seconds
Cbc0012I Integer solution of -21529.496 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 150 rows 81 columns, reduced to 12 rows 9 columns
Cbc0031I 6 added rows had average density of 13.666667
Cbc0013I At root node, 6 cuts changed objective from -22321.898 to -21743.307 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -21529.496, took 200 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 20 times (119 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-84) rows, 130 (-72) columns and 2270 (-3383) elements
Clp1000I sum of infeasibilities 5.90393e-07 - average 4.91994e-09, 115 fixed columns
Coin0506I Presolve 12 (-108) rows, 15 (-115) columns and 50 (-2220) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 2.2504444 - largest nonzero change 0 ( 0%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value 22275.82
Clp0000I Optimal - objective value 22275.82
Coin0511I After Postsolve, objective 22275.82, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5686981 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 22349.86
Clp0000I Optimal - objective value 22349.86
Clp0000I Optimal - objective value 22349.86
Coin0511I After Postsolve, objective 22349.86, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22349.8596 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 132 columns (132 integer (132 of which binary)) and 2295 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.138%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 3.29946
Cbc0038I Pass   1: suminf.    1.51205 (29) obj. -22169.3 iterations 12
Cbc0038I Pass   2: suminf.    0.41401 (11) obj. -19035.4 iterations 6
Cbc0038I Pass   3: suminf.    0.01389 (1) obj. -19022 iterations 10
Cbc0038I Solution found of -19020
Cbc0038I Rounding solution of -20547.4 is better than previous of -19020

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 132 columns, reduced to 28 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -20726.5
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.51205 (29) obj. -22169.3 iterations 0
Cbc0038I Pass   5: suminf.    0.81216 (25) obj. -20726.5 iterations 4
Cbc0038I Pass   6: suminf.    0.53240 (4) obj. -22056.7 iterations 22
Cbc0038I Pass   7: suminf.    0.42106 (3) obj. -21745.3 iterations 1
Cbc0038I Pass   8: suminf.    0.33429 (2) obj. -20726.5 iterations 4
Cbc0038I Pass   9: suminf.    0.51235 (2) obj. -22054.7 iterations 1
Cbc0038I Pass  10: suminf.    0.40000 (1) obj. -21743.3 iterations 1
Cbc0038I Pass  11: suminf.    1.75312 (11) obj. -20726.5 iterations 21
Cbc0038I Pass  12: suminf.    0.95786 (7) obj. -21739 iterations 11
Cbc0038I Pass  13: suminf.    0.47748 (7) obj. -20726.5 iterations 4
Cbc0038I Pass  14: suminf.    0.51235 (2) obj. -22049.7 iterations 6
Cbc0038I Pass  15: suminf.    0.40000 (1) obj. -21738.3 iterations 1
Cbc0038I Pass  16: suminf.    0.33550 (2) obj. -20726.5 iterations 2
Cbc0038I Pass  17: suminf.    2.11562 (14) obj. -20726.5 iterations 26
Cbc0038I Pass  18: suminf.    0.93977 (6) obj. -20726.5 iterations 12
Cbc0038I Pass  19: suminf.    0.46960 (5) obj. -20726.5 iterations 3
Cbc0038I Pass  20: suminf.    0.37211 (2) obj. -20793.4 iterations 4
Cbc0038I Pass  21: suminf.    0.35595 (2) obj. -20726.5 iterations 1
Cbc0038I Pass  22: suminf.    0.72089 (4) obj. -20726.5 iterations 23
Cbc0038I Pass  23: suminf.    0.41664 (3) obj. -20983.6 iterations 7
Cbc0038I Pass  24: suminf.    0.33646 (2) obj. -20726.5 iterations 6
Cbc0038I Pass  25: suminf.    0.51235 (2) obj. -22045.7 iterations 1
Cbc0038I Pass  26: suminf.    0.40000 (1) obj. -21734.3 iterations 1
Cbc0038I Pass  27: suminf.    0.54167 (4) obj. -22046.7 iterations 11
Cbc0038I Pass  28: suminf.    0.43079 (3) obj. -21735.3 iterations 6
Cbc0038I Pass  29: suminf.    0.33694 (2) obj. -20726.5 iterations 4
Cbc0038I Pass  30: suminf.    0.51235 (2) obj. -22043.7 iterations 1
Cbc0038I Pass  31: suminf.    0.40000 (1) obj. -21732.3 iterations 1
Cbc0038I Pass  32: suminf.    0.91926 (12) obj. -20726.5 iterations 21
Cbc0038I Pass  33: suminf.    0.83606 (11) obj. -20726.5 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 132 columns, reduced to 38 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -19020 to -20785.6 (0.07 seconds)
Cbc0038I Round again with cutoff of -21096
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.51205 (29) obj. -22169.3 iterations 0
Cbc0038I Pass  34: suminf.    0.94750 (25) obj. -21096 iterations 3
Cbc0038I Pass  35: suminf.    0.61836 (11) obj. -22064.6 iterations 15
Cbc0038I Pass  36: suminf.    0.51133 (10) obj. -21753.2 iterations 1
Cbc0038I Pass  37: suminf.    0.42351 (2) obj. -21096 iterations 11
Cbc0038I Pass  38: suminf.    0.51235 (2) obj. -22054.7 iterations 1
Cbc0038I Pass  39: suminf.    0.40000 (1) obj. -21743.3 iterations 1
Cbc0038I Pass  40: suminf.    1.07021 (8) obj. -21096 iterations 15
Cbc0038I Pass  41: suminf.    1.07021 (8) obj. -21096 iterations 3
Cbc0038I Pass  42: suminf.    1.18652 (4) obj. -21096 iterations 7
Cbc0038I Pass  43: suminf.    1.18561 (6) obj. -21096 iterations 3
Cbc0038I Pass  44: suminf.    0.42520 (2) obj. -21096 iterations 6
Cbc0038I Pass  45: suminf.    0.42520 (2) obj. -21096 iterations 4
Cbc0038I Pass  46: suminf.    0.51235 (2) obj. -22047.7 iterations 1
Cbc0038I Pass  47: suminf.    0.40000 (1) obj. -21736.3 iterations 1
Cbc0038I Pass  48: suminf.    0.65736 (6) obj. -21741.9 iterations 15
Cbc0038I Pass  49: suminf.    0.65736 (6) obj. -21741.9 iterations 8
Cbc0038I Pass  50: suminf.    0.42569 (2) obj. -21096 iterations 7
Cbc0038I Pass  51: suminf.    0.51235 (2) obj. -22045.7 iterations 1
Cbc0038I Pass  52: suminf.    0.40000 (1) obj. -21734.3 iterations 1
Cbc0038I Pass  53: suminf.    0.87480 (10) obj. -21096 iterations 15
Cbc0038I Pass  54: suminf.    0.81566 (6) obj. -21146.4 iterations 4
Cbc0038I Pass  55: suminf.    0.72894 (2) obj. -21096 iterations 7
Cbc0038I Pass  56: suminf.    0.34050 (2) obj. -21096 iterations 1
Cbc0038I Pass  57: suminf.    0.72894 (2) obj. -21096 iterations 3
Cbc0038I Pass  58: suminf.    1.04290 (8) obj. -21096 iterations 32
Cbc0038I Pass  59: suminf.    0.39163 (6) obj. -21623.9 iterations 7
Cbc0038I Pass  60: suminf.    0.42786 (2) obj. -21096 iterations 8
Cbc0038I Pass  61: suminf.    0.51235 (2) obj. -22036.7 iterations 1
Cbc0038I Pass  62: suminf.    0.40000 (1) obj. -21725.3 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 132 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -20785.6 - took 0.05 seconds
Cbc0012I Integer solution of -20785.636 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 121 rows 132 columns, reduced to 32 rows 33 columns
Cbc0031I 25 added rows had average density of 11.36
Cbc0013I At root node, 25 cuts changed objective from -22337.583 to -21702.767 in 78 passes
Cbc0014I Cut generator 0 (Probing) - 2128 row cuts average 5.0 elements, 13 column cuts (13 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 278 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 109 row cuts average 57.7 elements, 0 column cuts (0 active)  in 0.539 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20785.636 best solution, best possible -21702.767 (1.24 seconds)
Cbc0016I Integer solution of -21529.496 found by strong branching after 1465 iterations and 5 nodes (1.60 seconds)
Cbc0001I Search completed - best objective -21529.496, took 1595 iterations and 10 nodes (1.60 seconds)
Cbc0032I Strong branching done 216 times (2438 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 35 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 150 (-55) rows, 81 (-22) columns and 456 (-147) elements
Clp1000I sum of infeasibilities 1.82838e-07 - average 1.21892e-09, 73 fixed columns
Coin0506I Presolve 11 (-139) rows, 8 (-73) columns and 32 (-424) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Coin0511I After Postsolve, objective 22321.898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21155682 - largest nonzero change 0 ( 0%) - largest zero change 2.9716912e-05
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Clp0000I Optimal - objective value 22321.898
Coin0511I After Postsolve, objective 22321.898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22321.89784 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 150 rows, 81 columns (80 integer (80 of which binary)) and 469 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.288%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.37469
Cbc0038I Pass   1: suminf.    0.75254 (2) obj. -22154.4 iterations 17
Cbc0038I Solution found of -19020
Cbc0038I Relaxing continuous gives -19020
Cbc0038I Rounding solution of -20547.4 is better than previous of -19020

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20724.9
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.75254 (2) obj. -22154.4 iterations 0
Cbc0038I Pass   3: suminf.    0.33077 (2) obj. -20724.9 iterations 3
Cbc0038I Pass   4: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass   5: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass   6: suminf.    0.81181 (4) obj. -20724.9 iterations 16
Cbc0038I Pass   7: suminf.    0.06396 (1) obj. -20724.9 iterations 14
Cbc0038I Pass   8: suminf.    0.28526 (2) obj. -21597.8 iterations 2
Cbc0038I Pass   9: suminf.    0.76454 (3) obj. -20724.9 iterations 9
Cbc0038I Pass  10: suminf.    0.37872 (2) obj. -21148.1 iterations 7
Cbc0038I Pass  11: suminf.    0.74527 (2) obj. -20724.9 iterations 6
Cbc0038I Pass  12: suminf.    0.53496 (9) obj. -20724.9 iterations 23
Cbc0038I Pass  13: suminf.    0.25195 (2) obj. -20724.9 iterations 15
Cbc0038I Pass  14: suminf.    0.80123 (2) obj. -20724.9 iterations 10
Cbc0038I Pass  15: suminf.    0.29803 (1) obj. -20724.9 iterations 10
Cbc0038I Pass  16: suminf.    0.43902 (1) obj. -21470.2 iterations 1
Cbc0038I Pass  17: suminf.    1.36265 (9) obj. -20724.9 iterations 14
Cbc0038I Pass  18: suminf.    0.56135 (7) obj. -20724.9 iterations 8
Cbc0038I Pass  19: suminf.    0.55311 (8) obj. -20724.9 iterations 4
Cbc0038I Pass  20: suminf.    0.89322 (3) obj. -20724.9 iterations 20
Cbc0038I Pass  21: suminf.    0.21495 (1) obj. -20724.9 iterations 5
Cbc0038I Pass  22: suminf.    0.24390 (1) obj. -20877.9 iterations 1
Cbc0038I Pass  23: suminf.    1.22539 (4) obj. -20724.9 iterations 11
Cbc0038I Pass  24: suminf.    0.30488 (3) obj. -20724.9 iterations 13
Cbc0038I Pass  25: suminf.    1.01857 (3) obj. -20724.9 iterations 10
Cbc0038I Pass  26: suminf.    0.71452 (2) obj. -20724.9 iterations 7
Cbc0038I Pass  27: suminf.    0.20069 (2) obj. -20724.9 iterations 9
Cbc0038I Pass  28: suminf.    0.74546 (2) obj. -20724.9 iterations 2
Cbc0038I Pass  29: suminf.    0.49960 (2) obj. -21556.7 iterations 2
Cbc0038I Pass  30: suminf.    0.79417 (3) obj. -20724.9 iterations 6
Cbc0038I Pass  31: suminf.    0.17966 (2) obj. -21154.5 iterations 3
Cbc0038I Rounding solution of -21529.5 is better than previous of -20547.4

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -21688
Cbc0038I Reduced cost fixing fixed 48 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.75254 (2) obj. -22154.4 iterations 0
Cbc0038I Pass  32: suminf.    0.56329 (2) obj. -21688 iterations 3
Cbc0038I Pass  33: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass  34: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass  35: suminf.    1.14353 (3) obj. -21688 iterations 12
Cbc0038I Pass  36: suminf.    0.51828 (3) obj. -21688 iterations 1
Cbc0038I Pass  37: suminf.    0.56329 (2) obj. -21688 iterations 7
Cbc0038I Pass  38: suminf.    0.56329 (2) obj. -21688 iterations 0
Cbc0038I Pass  39: suminf.    0.51235 (2) obj. -22067.7 iterations 1
Cbc0038I Pass  40: suminf.    0.40000 (1) obj. -21756.3 iterations 1
Cbc0038I Pass  41: suminf.    2.03075 (6) obj. -21688 iterations 12
Cbc0038I Pass  42: suminf.    0.75254 (2) obj. -22154.4 iterations 10
Cbc0038I Pass  43: suminf.    2.33058 (6) obj. -21688 iterations 12
Cbc0038I Pass  44: suminf.    2.15937 (6) obj. -21688 iterations 4
Cbc0038I Pass  45: suminf.    2.40523 (5) obj. -21812.4 iterations 7
Cbc0038I Pass  46: suminf.    0.57474 (7) obj. -21688 iterations 13
Cbc0038I Pass  47: suminf.    0.32365 (4) obj. -21877.7 iterations 18
Cbc0038I Pass  48: suminf.    0.02998 (1) obj. -21688 iterations 6
Cbc0038I Pass  49: suminf.    0.04878 (1) obj. -21787.3 iterations 1
Cbc0038I Pass  50: suminf.    0.25635 (4) obj. -21688 iterations 8
Cbc0038I Pass  51: suminf.    0.15111 (3) obj. -21688 iterations 7
Cbc0038I Pass  52: suminf.    0.23911 (3) obj. -21688 iterations 8
Cbc0038I Pass  53: suminf.    1.36327 (7) obj. -21688 iterations 14
Cbc0038I Pass  54: suminf.    1.01345 (8) obj. -21688 iterations 11
Cbc0038I Pass  55: suminf.    1.01345 (8) obj. -21688 iterations 4
Cbc0038I Pass  56: suminf.    0.32365 (4) obj. -21877.7 iterations 21
Cbc0038I Pass  57: suminf.    0.02998 (1) obj. -21688 iterations 11
Cbc0038I Pass  58: suminf.    1.00434 (4) obj. -21688 iterations 13
Cbc0038I Pass  59: suminf.    0.81094 (3) obj. -21688 iterations 7
Cbc0038I Pass  60: suminf.    0.09880 (2) obj. -21994.5 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 81 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -21529.5 - took 0.02 seconds
Cbc0012I Integer solution of -21529.496 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 150 rows 81 columns, reduced to 12 rows 9 columns
Cbc0031I 6 added rows had average density of 13.666667
Cbc0013I At root node, 6 cuts changed objective from -22321.898 to -21743.307 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 2.9 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -21529.496, took 200 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 20 times (119 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-90) rows, 125 (-78) columns and 2109 (-3545) elements
Clp1000I sum of infeasibilities 7.14021e-07 - average 6.20887e-09, 110 fixed columns
Coin0506I Presolve 12 (-103) rows, 15 (-110) columns and 50 (-2059) elements
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 2.2504444 - largest nonzero change 0 ( 0%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value 22275.82
Clp0000I Optimal - objective value 22275.82
Coin0511I After Postsolve, objective 22275.82, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6084013 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 22349.86
Clp0000I Optimal - objective value 22349.86
Clp0000I Optimal - objective value 22349.86
Coin0511I After Postsolve, objective 22349.86, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22349.8596 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 127 columns (127 integer (127 of which binary)) and 2133 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.145%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 3.3715
Cbc0038I Pass   1: suminf.    1.56932 (29) obj. -22169.3 iterations 12
Cbc0038I Pass   2: suminf.    0.44275 (11) obj. -19035.3 iterations 4
Cbc0038I Solution found of -19020
Cbc0038I Rounding solution of -20547.4 is better than previous of -19020

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 28 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -20726.5
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.56932 (29) obj. -22169.3 iterations 0
Cbc0038I Pass   4: suminf.    0.84642 (25) obj. -20726.5 iterations 4
Cbc0038I Pass   5: suminf.    0.54599 (5) obj. -22057.7 iterations 21
Cbc0038I Pass   6: suminf.    0.43533 (4) obj. -21746.3 iterations 1
Cbc0038I Pass   7: suminf.    0.33429 (2) obj. -20726.5 iterations 5
Cbc0038I Pass   8: suminf.    0.51235 (2) obj. -22054.7 iterations 1
Cbc0038I Pass   9: suminf.    0.40000 (1) obj. -21743.3 iterations 1
Cbc0038I Pass  10: suminf.    1.97643 (17) obj. -20726.5 iterations 25
Cbc0038I Pass  11: suminf.    0.31069 (9) obj. -20726.5 iterations 10
Cbc0038I Pass  12: suminf.    0.28526 (2) obj. -21593.5 iterations 10
Cbc0038I Pass  13: suminf.    0.06483 (1) obj. -20726.5 iterations 2
Cbc0038I Pass  14: suminf.    1.35218 (13) obj. -20726.5 iterations 28
Cbc0038I Pass  15: suminf.    1.00795 (13) obj. -20726.5 iterations 7
Cbc0038I Pass  16: suminf.    0.12203 (2) obj. -21995.2 iterations 12
Cbc0038I Solution found of -21509.5
Cbc0038I Rounding solution of -21529.5 is better than previous of -21509.5

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -21691.1
Cbc0038I Reduced cost fixing fixed 48 variables on major pass 3
Cbc0038I Pass  17: suminf.    1.56932 (29) obj. -22169.3 iterations 0
Cbc0038I Pass  18: suminf.    1.20997 (25) obj. -21691.1 iterations 4
Cbc0038I Pass  19: suminf.    0.54599 (5) obj. -22057.7 iterations 21
Cbc0038I Pass  20: suminf.    0.43533 (4) obj. -21746.3 iterations 1
Cbc0038I Pass  21: suminf.    0.56718 (2) obj. -21691.1 iterations 5
Cbc0038I Pass  22: suminf.    0.51235 (2) obj. -22054.7 iterations 1
Cbc0038I Pass  23: suminf.    0.40000 (1) obj. -21743.3 iterations 1
Cbc0038I Pass  24: suminf.    0.54454 (4) obj. -22055.7 iterations 6
Cbc0038I Pass  25: suminf.    0.43381 (3) obj. -21744.3 iterations 2
Cbc0038I Pass  26: suminf.    0.56767 (2) obj. -21691.1 iterations 4
Cbc0038I Pass  27: suminf.    0.51235 (2) obj. -22052.7 iterations 1
Cbc0038I Pass  28: suminf.    0.40000 (1) obj. -21741.3 iterations 1
Cbc0038I Pass  29: suminf.    1.24584 (8) obj. -21691.1 iterations 10
Cbc0038I Pass  30: suminf.    0.51131 (10) obj. -21691.1 iterations 8
Cbc0038I Pass  31: suminf.    3.10558 (7) obj. -21691.1 iterations 9
Cbc0038I Pass  32: suminf.    0.75254 (2) obj. -22136.4 iterations 10
Cbc0038I Pass  33: suminf.    0.56839 (2) obj. -21691.1 iterations 2
Cbc0038I Pass  34: suminf.    0.51235 (2) obj. -22049.7 iterations 1
Cbc0038I Pass  35: suminf.    0.40000 (1) obj. -21738.3 iterations 1
Cbc0038I Pass  36: suminf.    0.65452 (7) obj. -21691.1 iterations 20
Cbc0038I Pass  37: suminf.    0.65452 (7) obj. -21691.1 iterations 1
Cbc0038I Pass  38: suminf.    0.56887 (2) obj. -21691.1 iterations 11
Cbc0038I Pass  39: suminf.    0.56887 (2) obj. -21691.1 iterations 1
Cbc0038I Pass  40: suminf.    0.51235 (2) obj. -22047.7 iterations 1
Cbc0038I Pass  41: suminf.    0.40000 (1) obj. -21736.3 iterations 1
Cbc0038I Pass  42: suminf.    1.93419 (11) obj. -21946.7 iterations 20
Cbc0038I Pass  43: suminf.    0.85439 (7) obj. -21998.2 iterations 9
Cbc0038I Pass  44: suminf.    0.58832 (6) obj. -21740.1 iterations 1
Cbc0038I Pass  45: suminf.    0.56936 (2) obj. -21691.1 iterations 7
Cbc0038I Pass  46: suminf.    0.51235 (2) obj. -22045.7 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -21529.5 - took 0.04 seconds
Cbc0012I Integer solution of -21529.496 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 117 rows 127 columns, reduced to 28 rows 29 columns
Cbc0031I 26 added rows had average density of 15.115385
Cbc0013I At root node, 26 cuts changed objective from -22337.489 to -21668.329 in 33 passes
Cbc0014I Cut generator 0 (Probing) - 765 row cuts average 4.1 elements, 12 column cuts (12 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 164 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 158 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.341 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21529.496 best solution, best possible -21668.329 (0.80 seconds)
Cbc0001I Search completed - best objective -21529.496, took 964 iterations and 2 nodes (1.08 seconds)
Cbc0032I Strong branching done 66 times (777 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 48 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       1.09

