Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 407 (-46) elements
Clp1000I sum of infeasibilities 0.000374533 - average 2.81604e-06, 63 fixed columns
Coin0506I Presolve 17 (-116) rows, 11 (-63) columns and 50 (-357) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Coin0511I After Postsolve, objective 3846.279, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30343977 - largest nonzero change 0 ( 0%) - largest zero change 2.7133081e-05
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Coin0511I After Postsolve, objective 3846.279, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3846.279021 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 74 columns (73 integer (73 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.74014
Cbc0038I Pass   1: suminf.    1.60262 (5) obj. -3711.85 iterations 16
Cbc0038I Pass   2: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Solution found of -2435.49
Cbc0038I Relaxing continuous gives -2440.37
Cbc0038I Rounding solution of -3311.84 is better than previous of -2440.37

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3311.84 to -3649.57 (0.01 seconds)
Cbc0038I Round again with cutoff of -3669.24
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Pass   4: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Pass   5: suminf.    0.42558 (1) obj. -3669.24 iterations 15
Cbc0038I Pass   6: suminf.    0.42558 (1) obj. -3669.24 iterations 0
Cbc0038I Pass   7: suminf.    0.29730 (1) obj. -3746.9 iterations 6
Cbc0038I Pass   8: suminf.    0.43053 (1) obj. -3669.24 iterations 1
Cbc0038I Pass   9: suminf.    2.57931 (8) obj. -3669.24 iterations 21
Cbc0038I Pass  10: suminf.    1.79749 (10) obj. -3669.24 iterations 12
Cbc0038I Pass  11: suminf.    1.46838 (4) obj. -3669.24 iterations 10
Cbc0038I Pass  12: suminf.    0.67650 (2) obj. -3669.24 iterations 11
Cbc0038I Pass  13: suminf.    0.38546 (2) obj. -3669.24 iterations 5
Cbc0038I Pass  14: suminf.    0.11800 (1) obj. -3669.24 iterations 7
Cbc0038I Pass  15: suminf.    0.11800 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  16: suminf.    0.40541 (1) obj. -3707.98 iterations 5
Cbc0038I Pass  17: suminf.    0.33893 (1) obj. -3669.24 iterations 1
Cbc0038I Pass  18: suminf.    0.55740 (6) obj. -3669.24 iterations 8
Cbc0038I Pass  19: suminf.    0.55740 (6) obj. -3669.24 iterations 4
Cbc0038I Pass  20: suminf.    3.93655 (9) obj. -3669.24 iterations 12
Cbc0038I Pass  21: suminf.    1.44584 (3) obj. -3669.24 iterations 12
Cbc0038I Pass  22: suminf.    1.44584 (3) obj. -3669.24 iterations 1
Cbc0038I Pass  23: suminf.    0.11800 (1) obj. -3669.24 iterations 6
Cbc0038I Pass  24: suminf.    0.11800 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  25: suminf.    0.40541 (1) obj. -3707.98 iterations 5
Cbc0038I Pass  26: suminf.    0.33893 (1) obj. -3669.24 iterations 1
Cbc0038I Pass  27: suminf.    2.31662 (10) obj. -3669.24 iterations 20
Cbc0038I Pass  28: suminf.    1.69915 (4) obj. -3673.31 iterations 12
Cbc0038I Pass  29: suminf.    1.13701 (4) obj. -3669.24 iterations 7
Cbc0038I Pass  30: suminf.    0.42558 (1) obj. -3669.24 iterations 9
Cbc0038I Pass  31: suminf.    0.42558 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  32: suminf.    0.29730 (1) obj. -3746.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -3649.57 to -3721.81 (0.03 seconds)
Cbc0038I Round again with cutoff of -3746.7
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.17380 (5) obj. -3746.7 iterations 3
Cbc0038I Pass  33: suminf.    0.86842 (3) obj. -3746.7 iterations 4
Cbc0038I Pass  34: suminf.    0.39710 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  35: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  36: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  37: suminf.    0.60793 (2) obj. -3746.7 iterations 14
Cbc0038I Pass  38: suminf.    0.48649 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  39: suminf.    0.45339 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  40: suminf.    1.23268 (10) obj. -3746.7 iterations 14
Cbc0038I Pass  41: suminf.    0.87204 (4) obj. -3746.7 iterations 9
Cbc0038I Pass  42: suminf.    0.39710 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  43: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  44: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  45: suminf.    1.42079 (7) obj. -3746.7 iterations 9
Cbc0038I Pass  46: suminf.    0.03636 (2) obj. -3746.7 iterations 8
Cbc0038I Pass  47: suminf.    0.03636 (2) obj. -3746.7 iterations 0
Cbc0038I Pass  48: suminf.    0.39710 (1) obj. -3746.7 iterations 8
Cbc0038I Pass  49: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  50: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  51: suminf.    1.48549 (5) obj. -3746.7 iterations 17
Cbc0038I Pass  52: suminf.    0.90303 (3) obj. -3746.7 iterations 8
Cbc0038I Pass  53: suminf.    0.39723 (3) obj. -3746.7 iterations 9
Cbc0038I Pass  54: suminf.    0.55106 (3) obj. -3746.7 iterations 8
Cbc0038I Pass  55: suminf.    0.40837 (3) obj. -3746.7 iterations 7
Cbc0038I Pass  56: suminf.    0.38631 (2) obj. -3746.7 iterations 5
Cbc0038I Pass  57: suminf.    0.38631 (2) obj. -3746.7 iterations 0
Cbc0038I Pass  58: suminf.    0.29730 (1) obj. -3746.7 iterations 3
Cbc0038I Pass  59: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  60: suminf.    1.14030 (4) obj. -3746.7 iterations 12
Cbc0038I Pass  61: suminf.    0.80951 (4) obj. -3746.7 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3721.81 - took 0.03 seconds
Cbc0012I Integer solution of -3721.808 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 133 rows 74 columns, reduced to 15 rows 12 columns
Cbc0031I 6 added rows had average density of 38
Cbc0013I At root node, 6 cuts changed objective from -3846.279 to -3801.902 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 3.8 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3721.808, took 462 iterations and 18 nodes (0.11 seconds)
Cbc0032I Strong branching done 128 times (719 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 113 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 116 (-36) columns and 2010 (-1293) elements
Clp1000I sum of infeasibilities 4.77709e-08 - average 4.63795e-10, 66 fixed columns
Coin0506I Presolve 47 (-56) rows, 50 (-66) columns and 381 (-1629) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 3883.3871
Clp0000I Optimal - objective value 3883.3871
Coin0511I After Postsolve, objective 3883.3871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9522368 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 3883.3871
Clp0000I Optimal - objective value 3883.3871
Clp0000I Optimal - objective value 3883.3871
Coin0511I After Postsolve, objective 3883.3871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3883.387123 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 118 columns (118 integer (118 of which binary)) and 2022 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.49665
Cbc0038I Pass   1: suminf.    1.88303 (25) obj. -3775.43 iterations 21
Cbc0038I Pass   2: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass   3: suminf.    0.85686 (15) obj. -3760.21 iterations 10
Cbc0038I Solution found of -3190.94
Cbc0038I Rounding solution of -3354.71 is better than previous of -3190.94

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 28 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -3354.71 to -3494.66 (0.04 seconds)
Cbc0038I Round again with cutoff of -3531.96
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.88303 (25) obj. -3775.43 iterations 0
Cbc0038I Pass   5: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass   6: suminf.    0.41492 (1) obj. -3531.96 iterations 25
Cbc0038I Pass   7: suminf.    0.05405 (1) obj. -3742.3 iterations 1
Cbc0038I Pass   8: suminf.    1.02347 (15) obj. -3610.68 iterations 27
Cbc0038I Pass   9: suminf.    1.02347 (15) obj. -3610.68 iterations 9
Cbc0038I Pass  10: suminf.    0.23813 (1) obj. -3531.96 iterations 11
Cbc0038I Pass  11: suminf.    0.40541 (1) obj. -3629.46 iterations 1
Cbc0038I Pass  12: suminf.    4.31702 (25) obj. -3531.96 iterations 38
Cbc0038I Pass  13: suminf.    2.14419 (16) obj. -3531.96 iterations 15
Cbc0038I Pass  14: suminf.    1.42680 (15) obj. -3531.96 iterations 4
Cbc0038I Pass  15: suminf.    1.06204 (15) obj. -3531.96 iterations 1
Cbc0038I Pass  16: suminf.    0.26060 (3) obj. -3531.96 iterations 14
Cbc0038I Pass  17: suminf.    1.25479 (4) obj. -3531.96 iterations 6
Cbc0038I Pass  18: suminf.    0.58083 (2) obj. -3545.83 iterations 6
Cbc0038I Pass  19: suminf.    0.53671 (2) obj. -3531.96 iterations 3
Cbc0038I Pass  20: suminf.    0.58083 (2) obj. -3545.83 iterations 3
Cbc0038I Pass  21: suminf.    2.24560 (14) obj. -3531.96 iterations 22
Cbc0038I Pass  22: suminf.    1.12288 (12) obj. -3531.96 iterations 7
Cbc0038I Pass  23: suminf.    0.29448 (2) obj. -3531.96 iterations 13
Cbc0038I Pass  24: suminf.    0.22670 (3) obj. -3531.96 iterations 4
Cbc0038I Pass  25: suminf.    2.13718 (13) obj. -3531.96 iterations 21
Cbc0038I Pass  26: suminf.    1.84242 (14) obj. -3531.96 iterations 5
Cbc0038I Pass  27: suminf.    0.05128 (2) obj. -3619.97 iterations 13
Cbc0038I Pass  28: suminf.    0.03030 (1) obj. -3614.99 iterations 3
Cbc0038I Pass  29: suminf.    0.48835 (2) obj. -3531.96 iterations 3
Cbc0038I Pass  30: suminf.    0.04995 (2) obj. -3619.81 iterations 2
Cbc0038I Pass  31: suminf.    1.08406 (9) obj. -3531.96 iterations 12
Cbc0038I Pass  32: suminf.    0.75348 (7) obj. -3531.96 iterations 5
Cbc0038I Pass  33: suminf.    0.13569 (2) obj. -3531.96 iterations 9
Cbc0038I Rounding solution of -3538.54 is better than previous of -3494.66

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 51 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -3538.54 to -3700.2 (0.10 seconds)
Cbc0038I Round again with cutoff of -3733.71
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.88303 (25) obj. -3775.43 iterations 0
Cbc0038I Pass  34: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass  35: suminf.    0.85686 (15) obj. -3760.21 iterations 10
Cbc0038I Pass  36: suminf.    0.06879 (1) obj. -3733.71 iterations 15
Cbc0038I Pass  37: suminf.    0.05405 (1) obj. -3742.3 iterations 1
Cbc0038I Pass  38: suminf.    1.88464 (18) obj. -3733.71 iterations 25
Cbc0038I Pass  39: suminf.    1.69599 (15) obj. -3733.71 iterations 7
Cbc0038I Pass  40: suminf.    0.26360 (2) obj. -3733.71 iterations 19
Cbc0038I Pass  41: suminf.    0.26360 (2) obj. -3733.71 iterations 0
Cbc0038I Pass  42: suminf.    0.29730 (1) obj. -3735.9 iterations 3
Cbc0038I Pass  43: suminf.    0.30105 (1) obj. -3733.71 iterations 1
Cbc0038I Pass  44: suminf.    1.06631 (10) obj. -3733.71 iterations 19
Cbc0038I Pass  45: suminf.    1.06631 (10) obj. -3733.71 iterations 2
Cbc0038I Pass  46: suminf.    0.48522 (2) obj. -3733.71 iterations 16
Cbc0038I Pass  47: suminf.    0.43072 (2) obj. -3733.71 iterations 7
Cbc0038I Pass  48: suminf.    0.85424 (2) obj. -3733.71 iterations 8
Cbc0038I Pass  49: suminf.    0.43072 (2) obj. -3733.71 iterations 5
Cbc0038I Pass  50: suminf.    0.78132 (8) obj. -3733.71 iterations 20
Cbc0038I Pass  51: suminf.    0.76201 (7) obj. -3738.26 iterations 5
Cbc0038I Pass  52: suminf.    0.37525 (2) obj. -3733.71 iterations 12
Cbc0038I Pass  53: suminf.    0.37525 (2) obj. -3733.71 iterations 4
Cbc0038I Pass  54: suminf.    0.85012 (2) obj. -3733.71 iterations 8
Cbc0038I Pass  55: suminf.    0.85312 (9) obj. -3733.71 iterations 30
Cbc0038I Pass  56: suminf.    0.85277 (8) obj. -3733.88 iterations 7
Cbc0038I Pass  57: suminf.    0.64542 (2) obj. -3733.71 iterations 16
Cbc0038I Pass  58: suminf.    0.19048 (1) obj. -3772.89 iterations 5
Cbc0038I Pass  59: suminf.    0.19048 (1) obj. -3772.89 iterations 0
Cbc0038I Pass  60: suminf.    1.71066 (14) obj. -3733.71 iterations 22
Cbc0038I Pass  61: suminf.    1.39594 (10) obj. -3756.86 iterations 7
Cbc0038I Pass  62: suminf.    0.93053 (3) obj. -3733.71 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 47 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -3700.2 to -3721.81 (0.14 seconds)
Cbc0038I Round again with cutoff of -3773.91
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.88303 (25) obj. -3775.43 iterations 0
Cbc0038I Pass  63: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass  64: suminf.    0.95574 (8) obj. -3773.91 iterations 34
Cbc0038I Pass  65: suminf.    0.93761 (8) obj. -3778.36 iterations 3
Cbc0038I Pass  66: suminf.    0.62925 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  67: suminf.    0.13793 (2) obj. -3795.74 iterations 7
Cbc0038I Pass  68: suminf.    0.72676 (10) obj. -3773.91 iterations 24
Cbc0038I Pass  69: suminf.    0.62002 (9) obj. -3799.15 iterations 13
Cbc0038I Pass  70: suminf.    0.51198 (2) obj. -3773.91 iterations 14
Cbc0038I Pass  71: suminf.    0.13793 (2) obj. -3791.74 iterations 6
Cbc0038I Pass  72: suminf.    1.20916 (8) obj. -3804.62 iterations 11
Cbc0038I Pass  73: suminf.    1.20916 (8) obj. -3804.62 iterations 2
Cbc0038I Pass  74: suminf.    0.33607 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  75: suminf.    0.13793 (2) obj. -3785.74 iterations 6
Cbc0038I Pass  76: suminf.    1.40071 (9) obj. -3773.91 iterations 11
Cbc0038I Pass  77: suminf.    0.53248 (4) obj. -3789.14 iterations 5
Cbc0038I Pass  78: suminf.    0.49733 (2) obj. -3773.91 iterations 8
Cbc0038I Pass  79: suminf.    0.39723 (3) obj. -3787.41 iterations 6
Cbc0038I Pass  80: suminf.    2.31903 (18) obj. -3773.91 iterations 20
Cbc0038I Pass  81: suminf.    1.79174 (11) obj. -3778.7 iterations 6
Cbc0038I Pass  82: suminf.    0.51164 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  83: suminf.    0.39723 (3) obj. -3790.41 iterations 5
Cbc0038I Pass  84: suminf.    1.48452 (14) obj. -3773.91 iterations 13
Cbc0038I Pass  85: suminf.    1.48452 (14) obj. -3773.91 iterations 0
Cbc0038I Pass  86: suminf.    0.22850 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  87: suminf.    0.13793 (2) obj. -3788.74 iterations 6
Cbc0038I Pass  88: suminf.    0.42403 (2) obj. -3773.91 iterations 8
Cbc0038I Pass  89: suminf.    0.94498 (11) obj. -3773.91 iterations 21
Cbc0038I Pass  90: suminf.    0.83180 (9) obj. -3773.91 iterations 8
Cbc0038I Pass  91: suminf.    1.11951 (3) obj. -3773.91 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -3721.81 - took 0.14 seconds
Cbc0012I Integer solution of -3721.808 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 30 rows 32 columns
Cbc0031I 34 added rows had average density of 14.058824
Cbc0013I At root node, 34 cuts changed objective from -3867.7213 to -3782.7065 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 526 row cuts average 9.1 elements, 24 column cuts (24 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 53.6 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -3721.808 best solution, best possible -3782.7065 (0.59 seconds)
Cbc0010I After 13 nodes, 2 on tree, -3721.808 best solution, best possible -3782.7065 (1.30 seconds)
Cbc0001I Search completed - best objective -3721.808, took 1145 iterations and 16 nodes (1.42 seconds)
Cbc0032I Strong branching done 292 times (3605 iterations), fathomed 4 nodes and fixed 19 variables
Cbc0035I Maximum depth 4, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.42

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 407 (-46) elements
Clp1000I sum of infeasibilities 0.000374533 - average 2.81604e-06, 63 fixed columns
Coin0506I Presolve 17 (-116) rows, 11 (-63) columns and 50 (-357) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Coin0511I After Postsolve, objective 3846.279, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30343977 - largest nonzero change 0 ( 0%) - largest zero change 2.7133081e-05
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Clp0000I Optimal - objective value 3846.279
Coin0511I After Postsolve, objective 3846.279, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3846.279021 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 74 columns (73 integer (73 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.74014
Cbc0038I Pass   1: suminf.    1.60262 (5) obj. -3711.85 iterations 16
Cbc0038I Pass   2: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Solution found of -2435.49
Cbc0038I Relaxing continuous gives -2440.37
Cbc0038I Rounding solution of -3311.84 is better than previous of -2440.37

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3311.84 to -3649.57 (0.01 seconds)
Cbc0038I Round again with cutoff of -3669.24
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Pass   4: suminf.    1.60262 (5) obj. -3711.85 iterations 0
Cbc0038I Pass   5: suminf.    0.42558 (1) obj. -3669.24 iterations 15
Cbc0038I Pass   6: suminf.    0.42558 (1) obj. -3669.24 iterations 0
Cbc0038I Pass   7: suminf.    0.29730 (1) obj. -3746.9 iterations 6
Cbc0038I Pass   8: suminf.    0.43053 (1) obj. -3669.24 iterations 1
Cbc0038I Pass   9: suminf.    2.57931 (8) obj. -3669.24 iterations 21
Cbc0038I Pass  10: suminf.    1.79749 (10) obj. -3669.24 iterations 12
Cbc0038I Pass  11: suminf.    1.46838 (4) obj. -3669.24 iterations 10
Cbc0038I Pass  12: suminf.    0.67650 (2) obj. -3669.24 iterations 11
Cbc0038I Pass  13: suminf.    0.38546 (2) obj. -3669.24 iterations 5
Cbc0038I Pass  14: suminf.    0.11800 (1) obj. -3669.24 iterations 7
Cbc0038I Pass  15: suminf.    0.11800 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  16: suminf.    0.40541 (1) obj. -3707.98 iterations 5
Cbc0038I Pass  17: suminf.    0.33893 (1) obj. -3669.24 iterations 1
Cbc0038I Pass  18: suminf.    0.55740 (6) obj. -3669.24 iterations 8
Cbc0038I Pass  19: suminf.    0.55740 (6) obj. -3669.24 iterations 4
Cbc0038I Pass  20: suminf.    3.93655 (9) obj. -3669.24 iterations 12
Cbc0038I Pass  21: suminf.    1.44584 (3) obj. -3669.24 iterations 12
Cbc0038I Pass  22: suminf.    1.44584 (3) obj. -3669.24 iterations 1
Cbc0038I Pass  23: suminf.    0.11800 (1) obj. -3669.24 iterations 6
Cbc0038I Pass  24: suminf.    0.11800 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  25: suminf.    0.40541 (1) obj. -3707.98 iterations 5
Cbc0038I Pass  26: suminf.    0.33893 (1) obj. -3669.24 iterations 1
Cbc0038I Pass  27: suminf.    2.31662 (10) obj. -3669.24 iterations 20
Cbc0038I Pass  28: suminf.    1.69915 (4) obj. -3673.31 iterations 12
Cbc0038I Pass  29: suminf.    1.13701 (4) obj. -3669.24 iterations 7
Cbc0038I Pass  30: suminf.    0.42558 (1) obj. -3669.24 iterations 9
Cbc0038I Pass  31: suminf.    0.42558 (1) obj. -3669.24 iterations 0
Cbc0038I Pass  32: suminf.    0.29730 (1) obj. -3746.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -3649.57 to -3721.81 (0.03 seconds)
Cbc0038I Round again with cutoff of -3746.7
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.17380 (5) obj. -3746.7 iterations 3
Cbc0038I Pass  33: suminf.    0.86842 (3) obj. -3746.7 iterations 4
Cbc0038I Pass  34: suminf.    0.39710 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  35: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  36: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  37: suminf.    0.60793 (2) obj. -3746.7 iterations 14
Cbc0038I Pass  38: suminf.    0.48649 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  39: suminf.    0.45339 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  40: suminf.    1.23268 (10) obj. -3746.7 iterations 14
Cbc0038I Pass  41: suminf.    0.87204 (4) obj. -3746.7 iterations 9
Cbc0038I Pass  42: suminf.    0.39710 (1) obj. -3746.7 iterations 10
Cbc0038I Pass  43: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  44: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  45: suminf.    1.42079 (7) obj. -3746.7 iterations 9
Cbc0038I Pass  46: suminf.    0.03636 (2) obj. -3746.7 iterations 8
Cbc0038I Pass  47: suminf.    0.03636 (2) obj. -3746.7 iterations 0
Cbc0038I Pass  48: suminf.    0.39710 (1) obj. -3746.7 iterations 8
Cbc0038I Pass  49: suminf.    0.29730 (1) obj. -3746.7 iterations 6
Cbc0038I Pass  50: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  51: suminf.    1.48549 (5) obj. -3746.7 iterations 17
Cbc0038I Pass  52: suminf.    0.90303 (3) obj. -3746.7 iterations 8
Cbc0038I Pass  53: suminf.    0.39723 (3) obj. -3746.7 iterations 9
Cbc0038I Pass  54: suminf.    0.55106 (3) obj. -3746.7 iterations 8
Cbc0038I Pass  55: suminf.    0.40837 (3) obj. -3746.7 iterations 7
Cbc0038I Pass  56: suminf.    0.38631 (2) obj. -3746.7 iterations 5
Cbc0038I Pass  57: suminf.    0.38631 (2) obj. -3746.7 iterations 0
Cbc0038I Pass  58: suminf.    0.29730 (1) obj. -3746.7 iterations 3
Cbc0038I Pass  59: suminf.    0.29763 (1) obj. -3746.7 iterations 1
Cbc0038I Pass  60: suminf.    1.14030 (4) obj. -3746.7 iterations 12
Cbc0038I Pass  61: suminf.    0.80951 (4) obj. -3746.7 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3721.81 - took 0.03 seconds
Cbc0012I Integer solution of -3721.808 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 133 rows 74 columns, reduced to 15 rows 12 columns
Cbc0031I 6 added rows had average density of 38
Cbc0013I At root node, 6 cuts changed objective from -3846.279 to -3801.902 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 3.8 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3721.808, took 462 iterations and 18 nodes (0.11 seconds)
Cbc0032I Strong branching done 128 times (719 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 113 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 116 (-37) columns and 2010 (-1294) elements
Clp1000I sum of infeasibilities 4.77709e-08 - average 4.63795e-10, 66 fixed columns
Coin0506I Presolve 47 (-56) rows, 50 (-66) columns and 381 (-1629) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 3883.3871
Clp0000I Optimal - objective value 3883.3871
Coin0511I After Postsolve, objective 3883.3871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9522368 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 3883.3871
Clp0000I Optimal - objective value 3883.3871
Clp0000I Optimal - objective value 3883.3871
Coin0511I After Postsolve, objective 3883.3871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3883.387123 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 118 columns (118 integer (118 of which binary)) and 2022 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.49665
Cbc0038I Pass   1: suminf.    1.88303 (25) obj. -3775.43 iterations 21
Cbc0038I Pass   2: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass   3: suminf.    0.85686 (15) obj. -3760.21 iterations 10
Cbc0038I Solution found of -3190.94
Cbc0038I Rounding solution of -3354.71 is better than previous of -3190.94

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 28 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -3354.71 to -3494.66 (0.03 seconds)
Cbc0038I Round again with cutoff of -3531.96
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.88303 (25) obj. -3775.43 iterations 0
Cbc0038I Pass   5: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass   6: suminf.    0.41492 (1) obj. -3531.96 iterations 25
Cbc0038I Pass   7: suminf.    0.05405 (1) obj. -3742.3 iterations 1
Cbc0038I Pass   8: suminf.    1.02347 (15) obj. -3610.68 iterations 27
Cbc0038I Pass   9: suminf.    1.02347 (15) obj. -3610.68 iterations 9
Cbc0038I Pass  10: suminf.    0.23813 (1) obj. -3531.96 iterations 11
Cbc0038I Pass  11: suminf.    0.40541 (1) obj. -3629.46 iterations 1
Cbc0038I Pass  12: suminf.    4.31702 (25) obj. -3531.96 iterations 38
Cbc0038I Pass  13: suminf.    2.14419 (16) obj. -3531.96 iterations 15
Cbc0038I Pass  14: suminf.    1.42680 (15) obj. -3531.96 iterations 4
Cbc0038I Pass  15: suminf.    1.06204 (15) obj. -3531.96 iterations 1
Cbc0038I Pass  16: suminf.    0.26060 (3) obj. -3531.96 iterations 14
Cbc0038I Pass  17: suminf.    1.25479 (4) obj. -3531.96 iterations 6
Cbc0038I Pass  18: suminf.    0.58083 (2) obj. -3545.83 iterations 6
Cbc0038I Pass  19: suminf.    0.53671 (2) obj. -3531.96 iterations 3
Cbc0038I Pass  20: suminf.    0.58083 (2) obj. -3545.83 iterations 3
Cbc0038I Pass  21: suminf.    2.24560 (14) obj. -3531.96 iterations 22
Cbc0038I Pass  22: suminf.    1.12288 (12) obj. -3531.96 iterations 7
Cbc0038I Pass  23: suminf.    0.29448 (2) obj. -3531.96 iterations 13
Cbc0038I Pass  24: suminf.    0.22670 (3) obj. -3531.96 iterations 4
Cbc0038I Pass  25: suminf.    2.13718 (13) obj. -3531.96 iterations 21
Cbc0038I Pass  26: suminf.    1.84242 (14) obj. -3531.96 iterations 5
Cbc0038I Pass  27: suminf.    0.05128 (2) obj. -3619.97 iterations 13
Cbc0038I Pass  28: suminf.    0.03030 (1) obj. -3614.99 iterations 3
Cbc0038I Pass  29: suminf.    0.48835 (2) obj. -3531.96 iterations 3
Cbc0038I Pass  30: suminf.    0.04995 (2) obj. -3619.81 iterations 2
Cbc0038I Pass  31: suminf.    1.08406 (9) obj. -3531.96 iterations 12
Cbc0038I Pass  32: suminf.    0.75348 (7) obj. -3531.96 iterations 5
Cbc0038I Pass  33: suminf.    0.13569 (2) obj. -3531.96 iterations 9
Cbc0038I Rounding solution of -3538.54 is better than previous of -3494.66

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 51 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -3538.54 to -3700.2 (0.09 seconds)
Cbc0038I Round again with cutoff of -3733.71
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.88303 (25) obj. -3775.43 iterations 0
Cbc0038I Pass  34: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass  35: suminf.    0.85686 (15) obj. -3760.21 iterations 10
Cbc0038I Pass  36: suminf.    0.06879 (1) obj. -3733.71 iterations 15
Cbc0038I Pass  37: suminf.    0.05405 (1) obj. -3742.3 iterations 1
Cbc0038I Pass  38: suminf.    1.88464 (18) obj. -3733.71 iterations 25
Cbc0038I Pass  39: suminf.    1.69599 (15) obj. -3733.71 iterations 7
Cbc0038I Pass  40: suminf.    0.26360 (2) obj. -3733.71 iterations 19
Cbc0038I Pass  41: suminf.    0.26360 (2) obj. -3733.71 iterations 0
Cbc0038I Pass  42: suminf.    0.29730 (1) obj. -3735.9 iterations 3
Cbc0038I Pass  43: suminf.    0.30105 (1) obj. -3733.71 iterations 1
Cbc0038I Pass  44: suminf.    1.06631 (10) obj. -3733.71 iterations 19
Cbc0038I Pass  45: suminf.    1.06631 (10) obj. -3733.71 iterations 2
Cbc0038I Pass  46: suminf.    0.48522 (2) obj. -3733.71 iterations 16
Cbc0038I Pass  47: suminf.    0.43072 (2) obj. -3733.71 iterations 7
Cbc0038I Pass  48: suminf.    0.85424 (2) obj. -3733.71 iterations 8
Cbc0038I Pass  49: suminf.    0.43072 (2) obj. -3733.71 iterations 5
Cbc0038I Pass  50: suminf.    0.78132 (8) obj. -3733.71 iterations 20
Cbc0038I Pass  51: suminf.    0.76201 (7) obj. -3738.26 iterations 5
Cbc0038I Pass  52: suminf.    0.37525 (2) obj. -3733.71 iterations 12
Cbc0038I Pass  53: suminf.    0.37525 (2) obj. -3733.71 iterations 4
Cbc0038I Pass  54: suminf.    0.85012 (2) obj. -3733.71 iterations 8
Cbc0038I Pass  55: suminf.    0.85312 (9) obj. -3733.71 iterations 30
Cbc0038I Pass  56: suminf.    0.85277 (8) obj. -3733.88 iterations 7
Cbc0038I Pass  57: suminf.    0.64542 (2) obj. -3733.71 iterations 16
Cbc0038I Pass  58: suminf.    0.19048 (1) obj. -3772.89 iterations 5
Cbc0038I Pass  59: suminf.    0.19048 (1) obj. -3772.89 iterations 0
Cbc0038I Pass  60: suminf.    1.71066 (14) obj. -3733.71 iterations 22
Cbc0038I Pass  61: suminf.    1.39594 (10) obj. -3756.86 iterations 7
Cbc0038I Pass  62: suminf.    0.93053 (3) obj. -3733.71 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 47 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -3700.2 to -3721.81 (0.12 seconds)
Cbc0038I Round again with cutoff of -3773.91
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.88303 (25) obj. -3775.43 iterations 0
Cbc0038I Pass  63: suminf.    1.88303 (25) obj. -3775.43 iterations 2
Cbc0038I Pass  64: suminf.    0.95574 (8) obj. -3773.91 iterations 34
Cbc0038I Pass  65: suminf.    0.93761 (8) obj. -3778.36 iterations 3
Cbc0038I Pass  66: suminf.    0.62925 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  67: suminf.    0.13793 (2) obj. -3795.74 iterations 7
Cbc0038I Pass  68: suminf.    0.72676 (10) obj. -3773.91 iterations 24
Cbc0038I Pass  69: suminf.    0.62002 (9) obj. -3799.15 iterations 13
Cbc0038I Pass  70: suminf.    0.51198 (2) obj. -3773.91 iterations 14
Cbc0038I Pass  71: suminf.    0.13793 (2) obj. -3791.74 iterations 6
Cbc0038I Pass  72: suminf.    1.20916 (8) obj. -3804.62 iterations 11
Cbc0038I Pass  73: suminf.    1.20916 (8) obj. -3804.62 iterations 2
Cbc0038I Pass  74: suminf.    0.33607 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  75: suminf.    0.13793 (2) obj. -3785.74 iterations 6
Cbc0038I Pass  76: suminf.    1.40071 (9) obj. -3773.91 iterations 11
Cbc0038I Pass  77: suminf.    0.53248 (4) obj. -3789.14 iterations 5
Cbc0038I Pass  78: suminf.    0.49733 (2) obj. -3773.91 iterations 8
Cbc0038I Pass  79: suminf.    0.39723 (3) obj. -3787.41 iterations 6
Cbc0038I Pass  80: suminf.    2.31903 (18) obj. -3773.91 iterations 20
Cbc0038I Pass  81: suminf.    1.79174 (11) obj. -3778.7 iterations 6
Cbc0038I Pass  82: suminf.    0.51164 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  83: suminf.    0.39723 (3) obj. -3790.41 iterations 5
Cbc0038I Pass  84: suminf.    1.48452 (14) obj. -3773.91 iterations 13
Cbc0038I Pass  85: suminf.    1.48452 (14) obj. -3773.91 iterations 0
Cbc0038I Pass  86: suminf.    0.22850 (2) obj. -3773.91 iterations 13
Cbc0038I Pass  87: suminf.    0.13793 (2) obj. -3788.74 iterations 6
Cbc0038I Pass  88: suminf.    0.42403 (2) obj. -3773.91 iterations 8
Cbc0038I Pass  89: suminf.    0.94498 (11) obj. -3773.91 iterations 21
Cbc0038I Pass  90: suminf.    0.83180 (9) obj. -3773.91 iterations 8
Cbc0038I Pass  91: suminf.    1.11951 (3) obj. -3773.91 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 118 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -3721.81 - took 0.14 seconds
Cbc0012I Integer solution of -3721.808 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 105 rows 118 columns, reduced to 30 rows 32 columns
Cbc0031I 34 added rows had average density of 14.058824
Cbc0013I At root node, 34 cuts changed objective from -3867.7213 to -3782.7065 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 526 row cuts average 9.1 elements, 24 column cuts (24 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 60 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 53.6 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -3721.808 best solution, best possible -3782.7065 (0.56 seconds)
Cbc0010I After 13 nodes, 2 on tree, -3721.808 best solution, best possible -3782.7065 (1.29 seconds)
Cbc0001I Search completed - best objective -3721.808, took 1145 iterations and 16 nodes (1.40 seconds)
Cbc0032I Strong branching done 292 times (3605 iterations), fathomed 4 nodes and fixed 19 variables
Cbc0035I Maximum depth 4, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.40

