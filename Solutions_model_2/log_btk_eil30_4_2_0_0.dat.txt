Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 34 (-29) rows, 20 (-12) columns and 101 (-76) elements
Clp0000I Optimal - objective value 68.733024
Coin0511I After Postsolve, objective 68.733024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.73302439 - 18 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 20 columns (19 integer (19 of which binary)) and 101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.146%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.03868
Cbc0038I Pass   1: suminf.    0.01613 (1) obj. -25.1907 iterations 15
Cbc0038I Solution found of 18.075
Cbc0038I Relaxing continuous gives 18.075
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 18.075 to -20.35 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.225
Cbc0038I Pass   2: suminf.    0.01690 (2) obj. -25.225 iterations 1
Cbc0038I Pass   3: suminf.    0.01690 (2) obj. -25.225 iterations 0
Cbc0038I Pass   4: suminf.    1.27493 (4) obj. -25.225 iterations 6
Cbc0038I Pass   5: suminf.    0.47275 (3) obj. -25.225 iterations 2
Cbc0038I Pass   6: suminf.    0.23679 (2) obj. -25.225 iterations 1
Cbc0038I Pass   7: suminf.    0.14621 (2) obj. -25.225 iterations 3
Cbc0038I Pass   8: suminf.    1.90017 (6) obj. -25.225 iterations 6
Cbc0038I Pass   9: suminf.    1.67901 (6) obj. -25.225 iterations 4
Cbc0038I Pass  10: suminf.    0.77239 (3) obj. -25.225 iterations 6
Cbc0038I Pass  11: suminf.    0.70263 (2) obj. -25.225 iterations 1
Cbc0038I Pass  12: suminf.    1.06355 (3) obj. -25.225 iterations 2
Cbc0038I Pass  13: suminf.    0.50616 (2) obj. -25.225 iterations 4
Cbc0038I Pass  14: suminf.    0.01690 (2) obj. -25.225 iterations 3
Cbc0038I Pass  15: suminf.    0.01690 (2) obj. -25.225 iterations 0
Cbc0038I Pass  16: suminf.    0.30617 (2) obj. -25.225 iterations 2
Cbc0038I Pass  17: suminf.    0.30617 (2) obj. -25.225 iterations 1
Cbc0038I Pass  18: suminf.    0.41537 (3) obj. -25.225 iterations 3
Cbc0038I Pass  19: suminf.    0.31148 (3) obj. -25.225 iterations 1
Cbc0038I Pass  20: suminf.    1.24811 (3) obj. -25.225 iterations 2
Cbc0038I Pass  21: suminf.    0.59532 (3) obj. -25.225 iterations 1
Cbc0038I Pass  22: suminf.    1.17796 (3) obj. -25.225 iterations 4
Cbc0038I Pass  23: suminf.    0.42859 (3) obj. -25.225 iterations 2
Cbc0038I Pass  24: suminf.    1.17796 (3) obj. -25.225 iterations 2
Cbc0038I Pass  25: suminf.    2.53116 (8) obj. -25.225 iterations 11
Cbc0038I Pass  26: suminf.    0.60870 (3) obj. -25.225 iterations 3
Cbc0038I Pass  27: suminf.    0.97903 (5) obj. -25.225 iterations 4
Cbc0038I Pass  28: suminf.    0.93706 (5) obj. -25.225 iterations 1
Cbc0038I Pass  29: suminf.    0.51507 (2) obj. -25.225 iterations 5
Cbc0038I Pass  30: suminf.    0.48899 (2) obj. -25.225 iterations 1
Cbc0038I Pass  31: suminf.    0.92269 (3) obj. -25.225 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -20.35 - took 0.01 seconds
Cbc0012I Integer solution of -20.35 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 20 columns, reduced to 20 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 3.5
Cbc0013I At root node, 5 cuts changed objective from -68.733024 to -21.782235 in 36 passes
Cbc0014I Cut generator 0 (Probing) - 330 row cuts average 3.2 elements, 11 column cuts (11 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 180 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 74 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.34999999999999, took 460 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-24) rows, 42 (-18) columns and 320 (-292) elements
Clp1000I sum of infeasibilities 5.43669e-06 - average 1.43071e-07, 35 fixed columns
Coin0506I Presolve 5 (-33) rows, 7 (-35) columns and 20 (-300) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 7.9628584
Clp0000I Optimal - objective value 7.9628584
Coin0511I After Postsolve, objective 7.9628584, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5031996 - largest nonzero change 1.2121517e-05 ( 0.00076266555%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 120.68661
Clp0000I Optimal - objective value 120.68661
Clp0000I Optimal - objective value 120.68661
Coin0511I After Postsolve, objective 120.68661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 120.6866069 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 47 columns (47 integer (47 of which binary)) and 332 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.741%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.25381
Cbc0038I Pass   1: suminf.    1.65668 (9) obj. -38.7699 iterations 10
Cbc0038I Pass   2: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Solution found of 12
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 12 to -8.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -16.975
Cbc0038I Pass   3: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass   4: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass   5: suminf.    0.34110 (1) obj. -16.975 iterations 10
Cbc0038I Pass   6: suminf.    0.30645 (1) obj. -18.4988 iterations 1
Cbc0038I Pass   7: suminf.    0.97893 (3) obj. -16.975 iterations 9
Cbc0038I Pass   8: suminf.    0.97893 (3) obj. -16.975 iterations 0
Cbc0038I Pass   9: suminf.    0.47339 (2) obj. -16.975 iterations 2
Cbc0038I Pass  10: suminf.    0.63274 (3) obj. -16.975 iterations 3
Cbc0038I Pass  11: suminf.    0.47339 (2) obj. -16.975 iterations 2
Cbc0038I Pass  12: suminf.    0.33026 (2) obj. -16.975 iterations 2
Cbc0038I Pass  13: suminf.    1.00297 (4) obj. -16.975 iterations 16
Cbc0038I Pass  14: suminf.    1.00297 (4) obj. -16.975 iterations 3
Cbc0038I Pass  15: suminf.    0.16815 (2) obj. -16.975 iterations 3
Cbc0038I Pass  16: suminf.    0.14144 (2) obj. -18.1494 iterations 1
Cbc0038I Pass  17: suminf.    0.20016 (2) obj. -16.975 iterations 2
Cbc0038I Pass  18: suminf.    0.60757 (4) obj. -31.4387 iterations 7
Cbc0038I Pass  19: suminf.    0.60757 (4) obj. -31.4387 iterations 3
Cbc0038I Pass  20: suminf.    0.25016 (2) obj. -16.975 iterations 4
Cbc0038I Pass  21: suminf.    0.14144 (2) obj. -19.1494 iterations 1
Cbc0038I Pass  22: suminf.    2.03230 (12) obj. -16.975 iterations 10
Cbc0038I Pass  23: suminf.    1.29135 (11) obj. -16.975 iterations 2
Cbc0038I Pass  24: suminf.    0.72931 (4) obj. -16.975 iterations 2
Cbc0038I Pass  25: suminf.    0.68729 (3) obj. -16.975 iterations 6
Cbc0038I Pass  26: suminf.    0.68729 (3) obj. -16.975 iterations 0
Cbc0038I Pass  27: suminf.    0.81540 (3) obj. -16.975 iterations 2
Cbc0038I Pass  28: suminf.    0.68445 (3) obj. -19.5939 iterations 1
Cbc0038I Pass  29: suminf.    0.68729 (3) obj. -16.975 iterations 1
Cbc0038I Pass  30: suminf.    3.12087 (13) obj. -16.975 iterations 20
Cbc0038I Pass  31: suminf.    3.12087 (13) obj. -16.975 iterations 0
Cbc0038I Pass  32: suminf.    2.21949 (8) obj. -16.975 iterations 15
Cbc0038I Rounding solution of -11.075 is better than previous of -8.2

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 27 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -11.075 to -20.35 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.425
Cbc0038I Pass  32: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass  33: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass  34: suminf.    0.46054 (3) obj. -35.425 iterations 10
Cbc0038I Pass  35: suminf.    0.46054 (3) obj. -35.425 iterations 0
Cbc0038I Pass  36: suminf.    1.07370 (6) obj. -35.425 iterations 11
Cbc0038I Pass  37: suminf.    0.83218 (4) obj. -35.425 iterations 2
Cbc0038I Pass  38: suminf.    0.79241 (4) obj. -35.425 iterations 1
Cbc0038I Pass  39: suminf.    0.79241 (4) obj. -35.425 iterations 0
Cbc0038I Pass  40: suminf.    0.83218 (4) obj. -35.425 iterations 2
Cbc0038I Pass  41: suminf.    1.68915 (7) obj. -35.425 iterations 4
Cbc0038I Pass  42: suminf.    1.48089 (6) obj. -35.425 iterations 1
Cbc0038I Pass  43: suminf.    0.65036 (4) obj. -35.425 iterations 4
Cbc0038I Pass  44: suminf.    0.65036 (4) obj. -35.425 iterations 0
Cbc0038I Pass  45: suminf.    0.63857 (4) obj. -35.425 iterations 1
Cbc0038I Pass  46: suminf.    0.63857 (4) obj. -35.425 iterations 0
Cbc0038I Pass  47: suminf.    0.65036 (4) obj. -35.425 iterations 2
Cbc0038I Pass  48: suminf.    0.89913 (7) obj. -35.425 iterations 10
Cbc0038I Pass  49: suminf.    0.22477 (3) obj. -35.6494 iterations 5
Cbc0038I Pass  50: suminf.    0.54725 (3) obj. -35.425 iterations 3
Cbc0038I Pass  51: suminf.    0.54725 (3) obj. -35.425 iterations 0
Cbc0038I Pass  52: suminf.    0.67820 (3) obj. -35.425 iterations 2
Cbc0038I Pass  53: suminf.    0.57155 (3) obj. -37.558 iterations 1
Cbc0038I Pass  54: suminf.    0.93042 (4) obj. -36.8403 iterations 4
Cbc0038I Pass  55: suminf.    0.93042 (4) obj. -36.8403 iterations 1
Cbc0038I Pass  56: suminf.    0.58178 (3) obj. -35.425 iterations 2
Cbc0038I Pass  57: suminf.    0.57155 (3) obj. -35.558 iterations 1
Cbc0038I Pass  58: suminf.    1.68111 (7) obj. -35.425 iterations 8
Cbc0038I Pass  59: suminf.    1.18053 (6) obj. -47.7044 iterations 3
Cbc0038I Pass  60: suminf.    0.65036 (4) obj. -35.425 iterations 6
Cbc0038I Pass  61: suminf.    0.65036 (4) obj. -35.425 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20.35 - took 0.02 seconds
Cbc0012I Integer solution of -20.35 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 47 columns, reduced to 24 rows 25 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 17 added rows had average density of 4.5882353
Cbc0013I At root node, 17 cuts changed objective from -95.60157 to -25.161723 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 89 row cuts average 2.0 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 21 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20.34999999999999, took 48 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 34 (-29) rows, 20 (-12) columns and 101 (-76) elements
Clp0000I Optimal - objective value 68.733024
Coin0511I After Postsolve, objective 68.733024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.73302439 - 18 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 20 columns (19 integer (19 of which binary)) and 101 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.146%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.03868
Cbc0038I Pass   1: suminf.    0.01613 (1) obj. -25.1907 iterations 15
Cbc0038I Solution found of 18.075
Cbc0038I Relaxing continuous gives 18.075
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 18.075 to -20.35 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.225
Cbc0038I Pass   2: suminf.    0.01690 (2) obj. -25.225 iterations 1
Cbc0038I Pass   3: suminf.    0.01690 (2) obj. -25.225 iterations 0
Cbc0038I Pass   4: suminf.    1.27493 (4) obj. -25.225 iterations 6
Cbc0038I Pass   5: suminf.    0.47275 (3) obj. -25.225 iterations 2
Cbc0038I Pass   6: suminf.    0.23679 (2) obj. -25.225 iterations 1
Cbc0038I Pass   7: suminf.    0.14621 (2) obj. -25.225 iterations 3
Cbc0038I Pass   8: suminf.    1.90017 (6) obj. -25.225 iterations 6
Cbc0038I Pass   9: suminf.    1.67901 (6) obj. -25.225 iterations 4
Cbc0038I Pass  10: suminf.    0.77239 (3) obj. -25.225 iterations 6
Cbc0038I Pass  11: suminf.    0.70263 (2) obj. -25.225 iterations 1
Cbc0038I Pass  12: suminf.    1.06355 (3) obj. -25.225 iterations 2
Cbc0038I Pass  13: suminf.    0.50616 (2) obj. -25.225 iterations 4
Cbc0038I Pass  14: suminf.    0.01690 (2) obj. -25.225 iterations 3
Cbc0038I Pass  15: suminf.    0.01690 (2) obj. -25.225 iterations 0
Cbc0038I Pass  16: suminf.    0.30617 (2) obj. -25.225 iterations 2
Cbc0038I Pass  17: suminf.    0.30617 (2) obj. -25.225 iterations 1
Cbc0038I Pass  18: suminf.    0.41537 (3) obj. -25.225 iterations 3
Cbc0038I Pass  19: suminf.    0.31148 (3) obj. -25.225 iterations 1
Cbc0038I Pass  20: suminf.    1.24811 (3) obj. -25.225 iterations 2
Cbc0038I Pass  21: suminf.    0.59532 (3) obj. -25.225 iterations 1
Cbc0038I Pass  22: suminf.    1.17796 (3) obj. -25.225 iterations 4
Cbc0038I Pass  23: suminf.    0.42859 (3) obj. -25.225 iterations 2
Cbc0038I Pass  24: suminf.    1.17796 (3) obj. -25.225 iterations 2
Cbc0038I Pass  25: suminf.    2.53116 (8) obj. -25.225 iterations 11
Cbc0038I Pass  26: suminf.    0.60870 (3) obj. -25.225 iterations 3
Cbc0038I Pass  27: suminf.    0.97903 (5) obj. -25.225 iterations 4
Cbc0038I Pass  28: suminf.    0.93706 (5) obj. -25.225 iterations 1
Cbc0038I Pass  29: suminf.    0.51507 (2) obj. -25.225 iterations 5
Cbc0038I Pass  30: suminf.    0.48899 (2) obj. -25.225 iterations 1
Cbc0038I Pass  31: suminf.    0.92269 (3) obj. -25.225 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -20.35 - took 0.02 seconds
Cbc0012I Integer solution of -20.35 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 20 columns, reduced to 20 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 3.5
Cbc0013I At root node, 5 cuts changed objective from -68.733024 to -21.782235 in 36 passes
Cbc0014I Cut generator 0 (Probing) - 330 row cuts average 3.2 elements, 11 column cuts (11 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 180 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 74 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.34999999999999, took 460 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-25) rows, 42 (-19) columns and 320 (-293) elements
Clp1000I sum of infeasibilities 5.43669e-06 - average 1.43071e-07, 35 fixed columns
Coin0506I Presolve 5 (-33) rows, 7 (-35) columns and 20 (-300) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 7.9628584
Clp0000I Optimal - objective value 7.9628584
Coin0511I After Postsolve, objective 7.9628584, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5031996 - largest nonzero change 1.2121517e-05 ( 0.00076266555%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 120.68661
Clp0000I Optimal - objective value 120.68661
Clp0000I Optimal - objective value 120.68661
Coin0511I After Postsolve, objective 120.68661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 120.6866069 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 47 columns (47 integer (47 of which binary)) and 332 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.741%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.25381
Cbc0038I Pass   1: suminf.    1.65668 (9) obj. -38.7699 iterations 10
Cbc0038I Pass   2: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Solution found of 12
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 12 to -8.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -16.975
Cbc0038I Pass   3: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass   4: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass   5: suminf.    0.34110 (1) obj. -16.975 iterations 10
Cbc0038I Pass   6: suminf.    0.30645 (1) obj. -18.4988 iterations 1
Cbc0038I Pass   7: suminf.    0.97893 (3) obj. -16.975 iterations 9
Cbc0038I Pass   8: suminf.    0.97893 (3) obj. -16.975 iterations 0
Cbc0038I Pass   9: suminf.    0.47339 (2) obj. -16.975 iterations 2
Cbc0038I Pass  10: suminf.    0.63274 (3) obj. -16.975 iterations 3
Cbc0038I Pass  11: suminf.    0.47339 (2) obj. -16.975 iterations 2
Cbc0038I Pass  12: suminf.    0.33026 (2) obj. -16.975 iterations 2
Cbc0038I Pass  13: suminf.    1.00297 (4) obj. -16.975 iterations 16
Cbc0038I Pass  14: suminf.    1.00297 (4) obj. -16.975 iterations 3
Cbc0038I Pass  15: suminf.    0.16815 (2) obj. -16.975 iterations 3
Cbc0038I Pass  16: suminf.    0.14144 (2) obj. -18.1494 iterations 1
Cbc0038I Pass  17: suminf.    0.20016 (2) obj. -16.975 iterations 2
Cbc0038I Pass  18: suminf.    0.60757 (4) obj. -31.4387 iterations 7
Cbc0038I Pass  19: suminf.    0.60757 (4) obj. -31.4387 iterations 3
Cbc0038I Pass  20: suminf.    0.25016 (2) obj. -16.975 iterations 4
Cbc0038I Pass  21: suminf.    0.14144 (2) obj. -19.1494 iterations 1
Cbc0038I Pass  22: suminf.    2.03230 (12) obj. -16.975 iterations 10
Cbc0038I Pass  23: suminf.    1.29135 (11) obj. -16.975 iterations 2
Cbc0038I Pass  24: suminf.    0.72931 (4) obj. -16.975 iterations 2
Cbc0038I Pass  25: suminf.    0.68729 (3) obj. -16.975 iterations 6
Cbc0038I Pass  26: suminf.    0.68729 (3) obj. -16.975 iterations 0
Cbc0038I Pass  27: suminf.    0.81540 (3) obj. -16.975 iterations 2
Cbc0038I Pass  28: suminf.    0.68445 (3) obj. -19.5939 iterations 1
Cbc0038I Pass  29: suminf.    0.68729 (3) obj. -16.975 iterations 1
Cbc0038I Pass  30: suminf.    3.12087 (13) obj. -16.975 iterations 20
Cbc0038I Pass  31: suminf.    3.12087 (13) obj. -16.975 iterations 0
Cbc0038I Pass  32: suminf.    2.21949 (8) obj. -16.975 iterations 15
Cbc0038I Rounding solution of -11.075 is better than previous of -8.2

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 27 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -11.075 to -20.35 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.425
Cbc0038I Pass  32: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass  33: suminf.    1.65668 (9) obj. -38.7699 iterations 0
Cbc0038I Pass  34: suminf.    0.46054 (3) obj. -35.425 iterations 10
Cbc0038I Pass  35: suminf.    0.46054 (3) obj. -35.425 iterations 0
Cbc0038I Pass  36: suminf.    1.07370 (6) obj. -35.425 iterations 11
Cbc0038I Pass  37: suminf.    0.83218 (4) obj. -35.425 iterations 2
Cbc0038I Pass  38: suminf.    0.79241 (4) obj. -35.425 iterations 1
Cbc0038I Pass  39: suminf.    0.79241 (4) obj. -35.425 iterations 0
Cbc0038I Pass  40: suminf.    0.83218 (4) obj. -35.425 iterations 2
Cbc0038I Pass  41: suminf.    1.68915 (7) obj. -35.425 iterations 4
Cbc0038I Pass  42: suminf.    1.48089 (6) obj. -35.425 iterations 1
Cbc0038I Pass  43: suminf.    0.65036 (4) obj. -35.425 iterations 4
Cbc0038I Pass  44: suminf.    0.65036 (4) obj. -35.425 iterations 0
Cbc0038I Pass  45: suminf.    0.63857 (4) obj. -35.425 iterations 1
Cbc0038I Pass  46: suminf.    0.63857 (4) obj. -35.425 iterations 0
Cbc0038I Pass  47: suminf.    0.65036 (4) obj. -35.425 iterations 2
Cbc0038I Pass  48: suminf.    0.89913 (7) obj. -35.425 iterations 10
Cbc0038I Pass  49: suminf.    0.22477 (3) obj. -35.6494 iterations 5
Cbc0038I Pass  50: suminf.    0.54725 (3) obj. -35.425 iterations 3
Cbc0038I Pass  51: suminf.    0.54725 (3) obj. -35.425 iterations 0
Cbc0038I Pass  52: suminf.    0.67820 (3) obj. -35.425 iterations 2
Cbc0038I Pass  53: suminf.    0.57155 (3) obj. -37.558 iterations 1
Cbc0038I Pass  54: suminf.    0.93042 (4) obj. -36.8403 iterations 4
Cbc0038I Pass  55: suminf.    0.93042 (4) obj. -36.8403 iterations 1
Cbc0038I Pass  56: suminf.    0.58178 (3) obj. -35.425 iterations 2
Cbc0038I Pass  57: suminf.    0.57155 (3) obj. -35.558 iterations 1
Cbc0038I Pass  58: suminf.    1.68111 (7) obj. -35.425 iterations 8
Cbc0038I Pass  59: suminf.    1.18053 (6) obj. -47.7044 iterations 3
Cbc0038I Pass  60: suminf.    0.65036 (4) obj. -35.425 iterations 6
Cbc0038I Pass  61: suminf.    0.65036 (4) obj. -35.425 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20.35 - took 0.02 seconds
Cbc0012I Integer solution of -20.35 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 47 columns, reduced to 24 rows 25 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 17 added rows had average density of 4.5882353
Cbc0013I At root node, 17 cuts changed objective from -95.60157 to -25.161723 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 89 row cuts average 2.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 21 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -20.34999999999999, took 48 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

