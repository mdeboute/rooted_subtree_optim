Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.10305e-05 - average 8.48502e-08, 10 fixed columns
Coin0506I Presolve 109 (-21) rows, 65 (-11) columns and 340 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Coin0511I After Postsolve, objective 37.833742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Coin0511I After Postsolve, objective 37.833742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.83374231 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 12.0889
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20.232 iterations 56
Cbc0038I Solution found of 20.232
Cbc0038I Relaxing continuous gives 20.232
Cbc0038I Rounding solution of -6.81669 is better than previous of 20.232

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -6.81669 to -13.3824 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.8277
Cbc0038I Pass   2: suminf.    4.18265 (22) obj. -15.8277 iterations 25
Cbc0038I Pass   3: suminf.    3.85350 (17) obj. -15.8277 iterations 9
Cbc0038I Pass   4: suminf.    1.30534 (4) obj. -15.8277 iterations 24
Cbc0038I Pass   5: suminf.    1.30534 (4) obj. -15.8277 iterations 0
Cbc0038I Pass   6: suminf.    1.44644 (5) obj. -15.8277 iterations 8
Cbc0038I Pass   7: suminf.    1.44644 (5) obj. -15.8277 iterations 0
Cbc0038I Pass   8: suminf.    1.88367 (5) obj. -15.8277 iterations 5
Cbc0038I Pass   9: suminf.    1.88367 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  10: suminf.    2.13391 (5) obj. -15.8277 iterations 2
Cbc0038I Pass  11: suminf.    2.13391 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  12: suminf.    1.88367 (5) obj. -15.8277 iterations 2
Cbc0038I Pass  13: suminf.    4.00407 (10) obj. -15.8277 iterations 18
Cbc0038I Pass  14: suminf.    1.77443 (5) obj. -15.8277 iterations 15
Cbc0038I Pass  15: suminf.    0.97464 (5) obj. -15.8277 iterations 5
Cbc0038I Pass  16: suminf.    1.28877 (5) obj. -15.8277 iterations 8
Cbc0038I Pass  17: suminf.    1.28877 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  18: suminf.    1.58517 (4) obj. -15.8277 iterations 3
Cbc0038I Pass  19: suminf.    1.22131 (4) obj. -15.8277 iterations 2
Cbc0038I Pass  20: suminf.    2.16525 (8) obj. -15.8277 iterations 17
Cbc0038I Pass  21: suminf.    1.46833 (6) obj. -15.8277 iterations 3
Cbc0038I Pass  22: suminf.    1.07157 (7) obj. -15.8277 iterations 2
Cbc0038I Pass  23: suminf.    1.54603 (5) obj. -15.8277 iterations 10
Cbc0038I Pass  24: suminf.    1.49059 (5) obj. -15.8277 iterations 1
Cbc0038I Pass  25: suminf.    1.25265 (4) obj. -15.8277 iterations 3
Cbc0038I Pass  26: suminf.    1.25265 (4) obj. -15.8277 iterations 0
Cbc0038I Pass  27: suminf.    1.74913 (8) obj. -15.8277 iterations 30
Cbc0038I Pass  28: suminf.    1.57805 (7) obj. -15.8277 iterations 6
Cbc0038I Pass  29: suminf.    1.82522 (5) obj. -15.8277 iterations 10
Cbc0038I Pass  30: suminf.    1.60814 (5) obj. -15.8277 iterations 1
Cbc0038I Pass  31: suminf.    1.69805 (5) obj. -15.8277 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -13.3824 - took 0.08 seconds
Cbc0012I Integer solution of -13.382447 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 69 rows 40 columns
Cbc0031I 31 added rows had average density of 50.709677
Cbc0013I At root node, 31 cuts changed objective from -37.833742 to -30.098796 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15271 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1916 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.382447 best solution, best possible -30.098796 (1.00 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 64 rows 39 columns
Cbc0012I Integer solution of -13.453077 found by rounding after 11043 iterations and 61 nodes (1.27 seconds)
Cbc0016I Integer solution of -13.5141 found by strong branching after 11227 iterations and 75 nodes (1.30 seconds)
Cbc0012I Integer solution of -13.76037 found by rounding after 11333 iterations and 89 nodes (1.30 seconds)
Cbc0001I Search completed - best objective -13.76036999999999, took 11402 iterations and 94 nodes (1.31 seconds)
Cbc0032I Strong branching done 986 times (16783 iterations), fathomed 9 nodes and fixed 17 variables
Cbc0035I Maximum depth 25, 150 variables fixed on reduced cost
Total time (CPU seconds):       1.28   (Wallclock seconds):       1.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 118 (-34) columns and 1919 (-1384) elements
Clp1000I sum of infeasibilities 7.62819e-08 - average 7.78387e-10, 26 fixed columns
Coin0506I Presolve 75 (-23) rows, 92 (-26) columns and 1174 (-745) elements
Clp0006I 0  Obj 41.894314 Dual inf 3.7479361 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.3339494 - largest nonzero change 2.1346299e-05 ( 0.0015380202%) - largest zero change 2.9644772e-05
Clp0000I Optimal - objective value 57.435293
Clp0000I Optimal - objective value 57.435293
Coin0511I After Postsolve, objective 57.435293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.435293
Clp0000I Optimal - objective value 57.435293
Clp0000I Optimal - objective value 57.435293
Clp0000I Optimal - objective value 57.435293
Coin0511I After Postsolve, objective 57.435293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.43529274 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 118 columns (118 integer (118 of which binary)) and 1923 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.411%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.02379
Cbc0038I Pass   1: suminf.    3.30334 (34) obj. -35.0069 iterations 18
Cbc0038I Pass   2: suminf.    3.30334 (34) obj. -35.0069 iterations 1
Cbc0038I Pass   3: suminf.    2.19302 (24) obj. -16.2906 iterations 10
Cbc0038I Solution found of 8.25522
Cbc0038I Rounding solution of -2.40951 is better than previous of 8.25522

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2.40951 to -9.00552 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.1836
Cbc0038I Pass   4: suminf.    3.30334 (34) obj. -35.0069 iterations 0
Cbc0038I Pass   5: suminf.    3.30334 (34) obj. -35.0069 iterations 1
Cbc0038I Pass   6: suminf.    0.99560 (8) obj. -13.1836 iterations 31
Cbc0038I Pass   7: suminf.    0.79378 (7) obj. -15.3518 iterations 2
Cbc0038I Pass   8: suminf.    1.11450 (6) obj. -13.1836 iterations 15
Cbc0038I Pass   9: suminf.    1.11450 (6) obj. -13.1836 iterations 0
Cbc0038I Pass  10: suminf.    1.33845 (5) obj. -13.1836 iterations 8
Cbc0038I Pass  11: suminf.    1.29838 (5) obj. -13.1836 iterations 6
Cbc0038I Pass  12: suminf.    0.38884 (4) obj. -13.1836 iterations 4
Cbc0038I Pass  13: suminf.    0.55460 (3) obj. -13.1836 iterations 6
Cbc0038I Pass  14: suminf.    1.94420 (12) obj. -13.1836 iterations 21
Cbc0038I Pass  15: suminf.    1.57530 (11) obj. -16.5037 iterations 4
Cbc0038I Pass  16: suminf.    0.65605 (5) obj. -13.1836 iterations 25
Cbc0038I Pass  17: suminf.    0.65642 (4) obj. -13.1836 iterations 1
Cbc0038I Pass  18: suminf.    0.95286 (3) obj. -13.1836 iterations 6
Cbc0038I Pass  19: suminf.    0.95286 (3) obj. -13.1836 iterations 0
Cbc0038I Pass  20: suminf.    0.38884 (4) obj. -13.1836 iterations 6
Cbc0038I Pass  21: suminf.    0.38884 (4) obj. -13.1836 iterations 0
Cbc0038I Pass  22: suminf.    0.55460 (3) obj. -13.1836 iterations 5
Cbc0038I Pass  23: suminf.    3.25511 (17) obj. -13.1836 iterations 30
Cbc0038I Pass  24: suminf.    3.15676 (17) obj. -13.1836 iterations 8
Cbc0038I Pass  25: suminf.    1.46038 (5) obj. -13.1836 iterations 27
Cbc0038I Pass  26: suminf.    1.38892 (6) obj. -13.1836 iterations 5
Cbc0038I Pass  27: suminf.    1.88499 (11) obj. -13.1836 iterations 8
Cbc0038I Pass  28: suminf.    1.77290 (8) obj. -13.1836 iterations 1
Cbc0038I Pass  29: suminf.    0.73452 (5) obj. -13.1836 iterations 9
Cbc0038I Pass  30: suminf.    0.60047 (4) obj. -13.814 iterations 3
Cbc0038I Pass  31: suminf.    1.07030 (7) obj. -13.1836 iterations 4
Cbc0038I Pass  32: suminf.    2.50244 (11) obj. -13.1836 iterations 16
Cbc0038I Pass  33: suminf.    2.22477 (10) obj. -13.1836 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 43 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -9.00552 to -12.1796 (0.06 seconds)
Cbc0038I Round again with cutoff of -20.7041
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.30334 (34) obj. -35.0069 iterations 0
Cbc0038I Pass  34: suminf.    3.30334 (34) obj. -35.0069 iterations 1
Cbc0038I Pass  35: suminf.    2.56082 (25) obj. -20.7041 iterations 10
Cbc0038I Pass  36: suminf.    1.94987 (16) obj. -20.7041 iterations 14
Cbc0038I Pass  37: suminf.    1.70407 (15) obj. -24.2265 iterations 2
Cbc0038I Pass  38: suminf.    3.55042 (13) obj. -20.7041 iterations 32
Cbc0038I Pass  39: suminf.    2.21240 (11) obj. -20.7041 iterations 6
Cbc0038I Pass  40: suminf.    2.20843 (9) obj. -20.7041 iterations 3
Cbc0038I Pass  41: suminf.    1.85480 (8) obj. -20.7041 iterations 9
Cbc0038I Pass  42: suminf.    1.82033 (10) obj. -20.7041 iterations 6
Cbc0038I Pass  43: suminf.    1.85480 (8) obj. -20.7041 iterations 6
Cbc0038I Pass  44: suminf.    2.18728 (16) obj. -20.7041 iterations 22
Cbc0038I Pass  45: suminf.    2.11173 (12) obj. -20.7041 iterations 6
Cbc0038I Pass  46: suminf.    1.84825 (11) obj. -20.7041 iterations 22
Cbc0038I Pass  47: suminf.    1.84825 (11) obj. -20.7041 iterations 5
Cbc0038I Pass  48: suminf.    3.23597 (11) obj. -20.7041 iterations 5
Cbc0038I Pass  49: suminf.    2.86226 (14) obj. -20.7041 iterations 5
Cbc0038I Pass  50: suminf.    1.87172 (12) obj. -20.7041 iterations 11
Cbc0038I Pass  51: suminf.    3.32205 (17) obj. -20.7041 iterations 25
Cbc0038I Pass  52: suminf.    3.24037 (18) obj. -20.7041 iterations 3
Cbc0038I Pass  53: suminf.    2.70734 (13) obj. -20.7041 iterations 18
Cbc0038I Pass  54: suminf.    2.70734 (13) obj. -20.7041 iterations 2
Cbc0038I Pass  55: suminf.    2.73936 (9) obj. -20.7041 iterations 18
Cbc0038I Pass  56: suminf.    2.69996 (9) obj. -20.7041 iterations 3
Cbc0038I Pass  57: suminf.    2.49384 (10) obj. -20.7041 iterations 7
Cbc0038I Pass  58: suminf.    2.70541 (10) obj. -20.7041 iterations 5
Cbc0038I Pass  59: suminf.    2.54261 (10) obj. -20.7041 iterations 3
Cbc0038I Pass  60: suminf.    1.71803 (8) obj. -20.7041 iterations 13
Cbc0038I Pass  61: suminf.    1.71904 (8) obj. -20.7041 iterations 3
Cbc0038I Pass  62: suminf.    1.85480 (8) obj. -20.7041 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -12.1796 - took 0.06 seconds
Cbc0012I Integer solution of -12.179617 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 2 rows 2 columns
Cbc0031I 62 added rows had average density of 25.935484
Cbc0013I At root node, 62 cuts changed objective from -50.785846 to -17.190182 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10888 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1008 row cuts average 102.9 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 629 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1430 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 48.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.651 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.179617 best solution, best possible -17.190182 (2.16 seconds)
Cbc0012I Integer solution of -12.57445 found by DiveCoefficient after 4793 iterations and 2 nodes (2.23 seconds)
Cbc0012I Integer solution of -12.75725 found by DiveCoefficient after 4865 iterations and 4 nodes (2.24 seconds)
Cbc0016I Integer solution of -12.878627 found by strong branching after 4945 iterations and 21 nodes (2.27 seconds)
Cbc0012I Integer solution of -12.960577 found by rounding after 5047 iterations and 39 nodes (2.29 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 57 rows 69 columns
Cbc0012I Integer solution of -13.382447 found by RINS after 5360 iterations and 44 nodes (2.55 seconds)
Cbc0010I After 77 nodes, 4 on tree, -13.382447 best solution, best possible -16.529121 (2.86 seconds)
Cbc0004I Integer solution of -13.76037 found after 6525 iterations and 80 nodes (2.89 seconds)
Cbc0001I Search completed - best objective -13.76036999999999, took 7053 iterations and 94 nodes (3.09 seconds)
Cbc0032I Strong branching done 1022 times (13696 iterations), fathomed 23 nodes and fixed 25 variables
Cbc0035I Maximum depth 11, 219 variables fixed on reduced cost
Total time (CPU seconds):       2.55   (Wallclock seconds):       3.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.10305e-05 - average 8.48502e-08, 10 fixed columns
Coin0506I Presolve 109 (-21) rows, 65 (-11) columns and 340 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Coin0511I After Postsolve, objective 37.833742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Clp0000I Optimal - objective value 37.833742
Coin0511I After Postsolve, objective 37.833742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.83374231 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 12.0889
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20.232 iterations 56
Cbc0038I Solution found of 20.232
Cbc0038I Relaxing continuous gives 20.232
Cbc0038I Rounding solution of -6.81669 is better than previous of 20.232

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -6.81669 to -13.3824 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.8277
Cbc0038I Pass   2: suminf.    4.18265 (22) obj. -15.8277 iterations 25
Cbc0038I Pass   3: suminf.    3.85350 (17) obj. -15.8277 iterations 9
Cbc0038I Pass   4: suminf.    1.30534 (4) obj. -15.8277 iterations 24
Cbc0038I Pass   5: suminf.    1.30534 (4) obj. -15.8277 iterations 0
Cbc0038I Pass   6: suminf.    1.44644 (5) obj. -15.8277 iterations 8
Cbc0038I Pass   7: suminf.    1.44644 (5) obj. -15.8277 iterations 0
Cbc0038I Pass   8: suminf.    1.88367 (5) obj. -15.8277 iterations 5
Cbc0038I Pass   9: suminf.    1.88367 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  10: suminf.    2.13391 (5) obj. -15.8277 iterations 2
Cbc0038I Pass  11: suminf.    2.13391 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  12: suminf.    1.88367 (5) obj. -15.8277 iterations 2
Cbc0038I Pass  13: suminf.    4.00407 (10) obj. -15.8277 iterations 18
Cbc0038I Pass  14: suminf.    1.77443 (5) obj. -15.8277 iterations 15
Cbc0038I Pass  15: suminf.    0.97464 (5) obj. -15.8277 iterations 5
Cbc0038I Pass  16: suminf.    1.28877 (5) obj. -15.8277 iterations 8
Cbc0038I Pass  17: suminf.    1.28877 (5) obj. -15.8277 iterations 0
Cbc0038I Pass  18: suminf.    1.58517 (4) obj. -15.8277 iterations 3
Cbc0038I Pass  19: suminf.    1.22131 (4) obj. -15.8277 iterations 2
Cbc0038I Pass  20: suminf.    2.16525 (8) obj. -15.8277 iterations 17
Cbc0038I Pass  21: suminf.    1.46833 (6) obj. -15.8277 iterations 3
Cbc0038I Pass  22: suminf.    1.07157 (7) obj. -15.8277 iterations 2
Cbc0038I Pass  23: suminf.    1.54603 (5) obj. -15.8277 iterations 10
Cbc0038I Pass  24: suminf.    1.49059 (5) obj. -15.8277 iterations 1
Cbc0038I Pass  25: suminf.    1.25265 (4) obj. -15.8277 iterations 3
Cbc0038I Pass  26: suminf.    1.25265 (4) obj. -15.8277 iterations 0
Cbc0038I Pass  27: suminf.    1.74913 (8) obj. -15.8277 iterations 30
Cbc0038I Pass  28: suminf.    1.57805 (7) obj. -15.8277 iterations 6
Cbc0038I Pass  29: suminf.    1.82522 (5) obj. -15.8277 iterations 10
Cbc0038I Pass  30: suminf.    1.60814 (5) obj. -15.8277 iterations 1
Cbc0038I Pass  31: suminf.    1.69805 (5) obj. -15.8277 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -13.3824 - took 0.08 seconds
Cbc0012I Integer solution of -13.382447 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 69 rows 40 columns
Cbc0031I 31 added rows had average density of 50.709677
Cbc0013I At root node, 31 cuts changed objective from -37.833742 to -30.098796 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15271 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1916 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.382447 best solution, best possible -30.098796 (1.00 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 64 rows 39 columns
Cbc0012I Integer solution of -13.453077 found by rounding after 11043 iterations and 61 nodes (1.28 seconds)
Cbc0016I Integer solution of -13.5141 found by strong branching after 11227 iterations and 75 nodes (1.30 seconds)
Cbc0012I Integer solution of -13.76037 found by rounding after 11333 iterations and 89 nodes (1.31 seconds)
Cbc0001I Search completed - best objective -13.76036999999999, took 11402 iterations and 94 nodes (1.32 seconds)
Cbc0032I Strong branching done 986 times (16783 iterations), fathomed 9 nodes and fixed 17 variables
Cbc0035I Maximum depth 25, 150 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 118 (-35) columns and 1919 (-1385) elements
Clp1000I sum of infeasibilities 7.62819e-08 - average 7.78387e-10, 26 fixed columns
Coin0506I Presolve 75 (-23) rows, 92 (-26) columns and 1174 (-745) elements
Clp0006I 0  Obj 41.894314 Dual inf 3.7479361 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.3339494 - largest nonzero change 2.1346299e-05 ( 0.0015380202%) - largest zero change 2.9644772e-05
Clp0000I Optimal - objective value 57.435293
Clp0000I Optimal - objective value 57.435293
Coin0511I After Postsolve, objective 57.435293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.435293
Clp0000I Optimal - objective value 57.435293
Clp0000I Optimal - objective value 57.435293
Clp0000I Optimal - objective value 57.435293
Coin0511I After Postsolve, objective 57.435293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.43529274 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 118 columns (118 integer (118 of which binary)) and 1923 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.411%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.02379
Cbc0038I Pass   1: suminf.    3.30334 (34) obj. -35.0069 iterations 18
Cbc0038I Pass   2: suminf.    3.30334 (34) obj. -35.0069 iterations 1
Cbc0038I Pass   3: suminf.    2.19302 (24) obj. -16.2906 iterations 10
Cbc0038I Solution found of 8.25522
Cbc0038I Rounding solution of -2.40951 is better than previous of 8.25522

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2.40951 to -9.00552 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.1836
Cbc0038I Pass   4: suminf.    3.30334 (34) obj. -35.0069 iterations 0
Cbc0038I Pass   5: suminf.    3.30334 (34) obj. -35.0069 iterations 1
Cbc0038I Pass   6: suminf.    0.99560 (8) obj. -13.1836 iterations 31
Cbc0038I Pass   7: suminf.    0.79378 (7) obj. -15.3518 iterations 2
Cbc0038I Pass   8: suminf.    1.11450 (6) obj. -13.1836 iterations 15
Cbc0038I Pass   9: suminf.    1.11450 (6) obj. -13.1836 iterations 0
Cbc0038I Pass  10: suminf.    1.33845 (5) obj. -13.1836 iterations 8
Cbc0038I Pass  11: suminf.    1.29838 (5) obj. -13.1836 iterations 6
Cbc0038I Pass  12: suminf.    0.38884 (4) obj. -13.1836 iterations 4
Cbc0038I Pass  13: suminf.    0.55460 (3) obj. -13.1836 iterations 6
Cbc0038I Pass  14: suminf.    1.94420 (12) obj. -13.1836 iterations 21
Cbc0038I Pass  15: suminf.    1.57530 (11) obj. -16.5037 iterations 4
Cbc0038I Pass  16: suminf.    0.65605 (5) obj. -13.1836 iterations 25
Cbc0038I Pass  17: suminf.    0.65642 (4) obj. -13.1836 iterations 1
Cbc0038I Pass  18: suminf.    0.95286 (3) obj. -13.1836 iterations 6
Cbc0038I Pass  19: suminf.    0.95286 (3) obj. -13.1836 iterations 0
Cbc0038I Pass  20: suminf.    0.38884 (4) obj. -13.1836 iterations 6
Cbc0038I Pass  21: suminf.    0.38884 (4) obj. -13.1836 iterations 0
Cbc0038I Pass  22: suminf.    0.55460 (3) obj. -13.1836 iterations 5
Cbc0038I Pass  23: suminf.    3.25511 (17) obj. -13.1836 iterations 30
Cbc0038I Pass  24: suminf.    3.15676 (17) obj. -13.1836 iterations 8
Cbc0038I Pass  25: suminf.    1.46038 (5) obj. -13.1836 iterations 27
Cbc0038I Pass  26: suminf.    1.38892 (6) obj. -13.1836 iterations 5
Cbc0038I Pass  27: suminf.    1.88499 (11) obj. -13.1836 iterations 8
Cbc0038I Pass  28: suminf.    1.77290 (8) obj. -13.1836 iterations 1
Cbc0038I Pass  29: suminf.    0.73452 (5) obj. -13.1836 iterations 9
Cbc0038I Pass  30: suminf.    0.60047 (4) obj. -13.814 iterations 3
Cbc0038I Pass  31: suminf.    1.07030 (7) obj. -13.1836 iterations 4
Cbc0038I Pass  32: suminf.    2.50244 (11) obj. -13.1836 iterations 16
Cbc0038I Pass  33: suminf.    2.22477 (10) obj. -13.1836 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 43 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -9.00552 to -12.1796 (0.07 seconds)
Cbc0038I Round again with cutoff of -20.7041
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.30334 (34) obj. -35.0069 iterations 0
Cbc0038I Pass  34: suminf.    3.30334 (34) obj. -35.0069 iterations 1
Cbc0038I Pass  35: suminf.    2.56082 (25) obj. -20.7041 iterations 10
Cbc0038I Pass  36: suminf.    1.94987 (16) obj. -20.7041 iterations 14
Cbc0038I Pass  37: suminf.    1.70407 (15) obj. -24.2265 iterations 2
Cbc0038I Pass  38: suminf.    3.55042 (13) obj. -20.7041 iterations 32
Cbc0038I Pass  39: suminf.    2.21240 (11) obj. -20.7041 iterations 6
Cbc0038I Pass  40: suminf.    2.20843 (9) obj. -20.7041 iterations 3
Cbc0038I Pass  41: suminf.    1.85480 (8) obj. -20.7041 iterations 9
Cbc0038I Pass  42: suminf.    1.82033 (10) obj. -20.7041 iterations 6
Cbc0038I Pass  43: suminf.    1.85480 (8) obj. -20.7041 iterations 6
Cbc0038I Pass  44: suminf.    2.18728 (16) obj. -20.7041 iterations 22
Cbc0038I Pass  45: suminf.    2.11173 (12) obj. -20.7041 iterations 6
Cbc0038I Pass  46: suminf.    1.84825 (11) obj. -20.7041 iterations 22
Cbc0038I Pass  47: suminf.    1.84825 (11) obj. -20.7041 iterations 5
Cbc0038I Pass  48: suminf.    3.23597 (11) obj. -20.7041 iterations 5
Cbc0038I Pass  49: suminf.    2.86226 (14) obj. -20.7041 iterations 5
Cbc0038I Pass  50: suminf.    1.87172 (12) obj. -20.7041 iterations 11
Cbc0038I Pass  51: suminf.    3.32205 (17) obj. -20.7041 iterations 25
Cbc0038I Pass  52: suminf.    3.24037 (18) obj. -20.7041 iterations 3
Cbc0038I Pass  53: suminf.    2.70734 (13) obj. -20.7041 iterations 18
Cbc0038I Pass  54: suminf.    2.70734 (13) obj. -20.7041 iterations 2
Cbc0038I Pass  55: suminf.    2.73936 (9) obj. -20.7041 iterations 18
Cbc0038I Pass  56: suminf.    2.69996 (9) obj. -20.7041 iterations 3
Cbc0038I Pass  57: suminf.    2.49384 (10) obj. -20.7041 iterations 7
Cbc0038I Pass  58: suminf.    2.70541 (10) obj. -20.7041 iterations 5
Cbc0038I Pass  59: suminf.    2.54261 (10) obj. -20.7041 iterations 3
Cbc0038I Pass  60: suminf.    1.71803 (8) obj. -20.7041 iterations 13
Cbc0038I Pass  61: suminf.    1.71904 (8) obj. -20.7041 iterations 3
Cbc0038I Pass  62: suminf.    1.85480 (8) obj. -20.7041 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 118 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -12.1796 - took 0.07 seconds
Cbc0012I Integer solution of -12.179617 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 2 rows 2 columns
Cbc0031I 62 added rows had average density of 25.935484
Cbc0013I At root node, 62 cuts changed objective from -50.785846 to -17.190182 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10888 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1008 row cuts average 102.9 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 629 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1430 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 48.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.663 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.179617 best solution, best possible -17.190182 (2.18 seconds)
Cbc0012I Integer solution of -12.57445 found by DiveCoefficient after 4793 iterations and 2 nodes (2.25 seconds)
Cbc0012I Integer solution of -12.75725 found by DiveCoefficient after 4865 iterations and 4 nodes (2.27 seconds)
Cbc0016I Integer solution of -12.878627 found by strong branching after 4945 iterations and 21 nodes (2.29 seconds)
Cbc0012I Integer solution of -12.960577 found by rounding after 5047 iterations and 39 nodes (2.32 seconds)
Cbc0038I Full problem 98 rows 118 columns, reduced to 57 rows 69 columns
Cbc0012I Integer solution of -13.382447 found by RINS after 5360 iterations and 44 nodes (2.56 seconds)
Cbc0010I After 79 nodes, 6 on tree, -13.382447 best solution, best possible -16.529121 (2.89 seconds)
Cbc0004I Integer solution of -13.76037 found after 6525 iterations and 80 nodes (2.89 seconds)
Cbc0001I Search completed - best objective -13.76036999999999, took 7053 iterations and 94 nodes (3.08 seconds)
Cbc0032I Strong branching done 1022 times (13696 iterations), fathomed 23 nodes and fixed 25 variables
Cbc0035I Maximum depth 11, 219 variables fixed on reduced cost
Total time (CPU seconds):       2.53   (Wallclock seconds):       3.09

