Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 0.000337376 - average 8.8783e-06, 7 fixed columns
Coin0506I Presolve 19 (-19) rows, 14 (-8) columns and 59 (-53) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 2915.1062
Clp0000I Optimal - objective value 2915.1062
Coin0511I After Postsolve, objective 2915.1062, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2915.1062
Clp0000I Optimal - objective value 2915.1062
Clp0000I Optimal - objective value 2915.1062
Coin0511I After Postsolve, objective 2915.1062, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2915.106222 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.85349
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1988.31 iterations 9
Cbc0038I Solution found of -1988.31
Cbc0038I Relaxing continuous gives -1988.31
Cbc0038I Rounding solution of -2281.65 is better than previous of -1988.31

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -2281.65 to -2418.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -2460.75
Cbc0038I Pass   2: suminf.    0.37803 (2) obj. -2460.75 iterations 1
Cbc0038I Pass   3: suminf.    0.26449 (1) obj. -2739.01 iterations 2
Cbc0038I Pass   4: suminf.    0.14747 (1) obj. -2460.75 iterations 1
Cbc0038I Pass   5: suminf.    0.56348 (3) obj. -2460.75 iterations 6
Cbc0038I Pass   6: suminf.    0.48043 (2) obj. -2460.75 iterations 1
Cbc0038I Pass   7: suminf.    0.43961 (1) obj. -2471.71 iterations 2
Cbc0038I Pass   8: suminf.    0.43500 (1) obj. -2460.75 iterations 1
Cbc0038I Pass   9: suminf.    0.19219 (1) obj. -2460.75 iterations 5
Cbc0038I Pass  10: suminf.    0.28865 (1) obj. -2690.11 iterations 1
Cbc0038I Pass  11: suminf.    0.19219 (1) obj. -2460.75 iterations 1
Cbc0038I Pass  12: suminf.    0.33163 (1) obj. -2460.75 iterations 2
Cbc0038I Pass  13: suminf.    0.33163 (1) obj. -2460.75 iterations 1
Cbc0038I Pass  14: suminf.    0.37319 (1) obj. -2559.57 iterations 1
Cbc0038I Pass  15: suminf.    1.10800 (3) obj. -2460.75 iterations 6
Cbc0038I Pass  16: suminf.    1.10800 (3) obj. -2460.75 iterations 0
Cbc0038I Pass  17: suminf.    0.70083 (2) obj. -2460.75 iterations 3
Cbc0038I Pass  18: suminf.    0.67154 (3) obj. -2460.75 iterations 2
Cbc0038I Pass  19: suminf.    0.23182 (1) obj. -2515.16 iterations 2
Cbc0038I Pass  20: suminf.    0.23182 (1) obj. -2515.16 iterations 0
Cbc0038I Pass  21: suminf.    0.12397 (1) obj. -2460.75 iterations 3
Cbc0038I Pass  22: suminf.    0.16164 (1) obj. -2550.33 iterations 1
Cbc0038I Pass  23: suminf.    1.26797 (3) obj. -2460.75 iterations 6
Cbc0038I Pass  24: suminf.    0.97276 (3) obj. -2460.75 iterations 2
Cbc0038I Pass  25: suminf.    1.21676 (3) obj. -2460.75 iterations 2
Cbc0038I Pass  26: suminf.    0.80083 (2) obj. -2460.75 iterations 2
Cbc0038I Pass  27: suminf.    0.26058 (1) obj. -2511.74 iterations 2
Cbc0038I Pass  28: suminf.    0.28203 (1) obj. -2460.75 iterations 1
Cbc0038I Pass  29: suminf.    0.58013 (3) obj. -2460.75 iterations 3
Cbc0038I Pass  30: suminf.    0.58013 (3) obj. -2460.75 iterations 0
Cbc0038I Pass  31: suminf.    1.24809 (4) obj. -2460.75 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2418.7 to -2504.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -2571.23
Cbc0038I Pass  31: suminf.    0.46643 (2) obj. -2571.23 iterations 0
Cbc0038I Pass  32: suminf.    0.26449 (1) obj. -2739.01 iterations 2
Cbc0038I Pass  33: suminf.    0.19393 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  34: suminf.    1.72266 (5) obj. -2571.23 iterations 1
Cbc0038I Pass  35: suminf.    0.70556 (4) obj. -2571.23 iterations 4
Cbc0038I Pass  36: suminf.    0.25895 (3) obj. -2588.21 iterations 2
Cbc0038I Pass  37: suminf.    0.43978 (2) obj. -2571.23 iterations 4
Cbc0038I Pass  38: suminf.    0.22222 (1) obj. -2671.8 iterations 2
Cbc0038I Pass  39: suminf.    0.17993 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  40: suminf.    1.13717 (5) obj. -2571.23 iterations 9
Cbc0038I Pass  41: suminf.    0.78854 (4) obj. -2571.23 iterations 4
Cbc0038I Pass  42: suminf.    0.27536 (1) obj. -2590.99 iterations 4
Cbc0038I Pass  43: suminf.    0.26705 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  44: suminf.    0.38327 (2) obj. -2571.23 iterations 4
Cbc0038I Pass  45: suminf.    0.34783 (1) obj. -2580.15 iterations 2
Cbc0038I Pass  46: suminf.    0.34408 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  47: suminf.    1.01163 (3) obj. -2571.23 iterations 9
Cbc0038I Pass  48: suminf.    0.78950 (4) obj. -2571.23 iterations 4
Cbc0038I Pass  49: suminf.    0.78950 (4) obj. -2571.23 iterations 0
Cbc0038I Pass  50: suminf.    0.49134 (3) obj. -2571.23 iterations 4
Cbc0038I Pass  51: suminf.    0.44289 (3) obj. -2571.23 iterations 3
Cbc0038I Pass  52: suminf.    0.43785 (2) obj. -2571.23 iterations 2
Cbc0038I Pass  53: suminf.    0.34096 (2) obj. -2571.23 iterations 1
Cbc0038I Pass  54: suminf.    0.31019 (2) obj. -2571.23 iterations 1
Cbc0038I Pass  55: suminf.    0.48636 (1) obj. -2588.11 iterations 2
Cbc0038I Pass  56: suminf.    0.48636 (1) obj. -2588.11 iterations 0
Cbc0038I Pass  57: suminf.    1.39161 (4) obj. -2571.23 iterations 10
Cbc0038I Pass  58: suminf.    1.39161 (4) obj. -2571.23 iterations 1
Cbc0038I Pass  59: suminf.    0.37198 (1) obj. -2649.85 iterations 4
Cbc0038I Pass  60: suminf.    0.33892 (1) obj. -2571.23 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -2504.23 to -2673.64 (0.03 seconds)
Cbc0038I Round again with cutoff of -2723.33
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.58813 (2) obj. -2723.33 iterations 0
Cbc0038I Pass  61: suminf.    0.26449 (1) obj. -2739.01 iterations 2
Cbc0038I Pass  62: suminf.    0.25790 (1) obj. -2723.33 iterations 1
Cbc0038I Pass  63: suminf.    1.26174 (7) obj. -2723.33 iterations 6
Cbc0038I Pass  64: suminf.    1.20227 (5) obj. -2723.33 iterations 1
Cbc0038I Pass  65: suminf.    1.17368 (4) obj. -2723.33 iterations 6
Cbc0038I Pass  66: suminf.    1.01116 (3) obj. -2723.33 iterations 1
Cbc0038I Pass  67: suminf.    0.88199 (4) obj. -2723.33 iterations 3
Cbc0038I Pass  68: suminf.    0.88014 (4) obj. -2723.33 iterations 2
Cbc0038I Pass  69: suminf.    1.27996 (4) obj. -2723.33 iterations 6
Cbc0038I Pass  70: suminf.    1.07007 (5) obj. -2723.33 iterations 2
Cbc0038I Pass  71: suminf.    1.72267 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  72: suminf.    1.68863 (5) obj. -2723.33 iterations 2
Cbc0038I Pass  73: suminf.    1.04836 (4) obj. -2723.33 iterations 2
Cbc0038I Pass  74: suminf.    1.04906 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  75: suminf.    1.68863 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  76: suminf.    1.03875 (4) obj. -2723.33 iterations 4
Cbc0038I Pass  77: suminf.    1.18705 (6) obj. -2723.33 iterations 4
Cbc0038I Pass  78: suminf.    1.97838 (7) obj. -2723.33 iterations 7
Cbc0038I Pass  79: suminf.    0.83135 (3) obj. -2723.33 iterations 5
Cbc0038I Pass  80: suminf.    1.04048 (3) obj. -2723.33 iterations 2
Cbc0038I Pass  81: suminf.    1.04048 (3) obj. -2723.33 iterations 0
Cbc0038I Pass  82: suminf.    1.13644 (3) obj. -2723.33 iterations 1
Cbc0038I Pass  83: suminf.    2.20069 (8) obj. -2723.33 iterations 7
Cbc0038I Pass  84: suminf.    0.92906 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  85: suminf.    1.10206 (4) obj. -2723.33 iterations 5
Cbc0038I Pass  86: suminf.    1.09651 (4) obj. -2723.33 iterations 2
Cbc0038I Pass  87: suminf.    1.39910 (4) obj. -2723.33 iterations 5
Cbc0038I Pass  88: suminf.    1.27701 (5) obj. -2723.33 iterations 2
Cbc0038I Pass  89: suminf.    1.68863 (5) obj. -2723.33 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2673.64 - took 0.03 seconds
Cbc0012I Integer solution of -2673.6393 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 4 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 15.666667
Cbc0013I At root node, 3 cuts changed objective from -2839.2675 to -2693.3317 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2673.6393, took 12 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-8) rows, 44 (-2) columns and 349 (-39) elements
Clp1000I sum of infeasibilities 6.37918e-05 - average 1.5948e-06, 37 fixed columns
Coin0506I Presolve 5 (-35) rows, 7 (-37) columns and 20 (-329) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2855.8281
Clp0000I Optimal - objective value 2855.8281
Coin0511I After Postsolve, objective 2855.8281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0836826 - largest nonzero change 1.7799242e-05 ( 0.0017799242%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 2944.9644
Clp0000I Optimal - objective value 2944.9644
Clp0000I Optimal - objective value 2944.9644
Coin0511I After Postsolve, objective 2944.9644, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2944.964408 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 44 columns (44 integer (44 of which binary)) and 370 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.784%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 4.86321
Cbc0038I Solution found of -1988.31
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -1988.31 to -2427.96 (0.02 seconds)
Cbc0038I Round again with cutoff of -2468.48
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.77934 (4) obj. -2468.48 iterations 21
Cbc0038I Pass   2: suminf.    0.20000 (1) obj. -2550.66 iterations 5
Cbc0038I Pass   3: suminf.    0.16544 (1) obj. -2468.48 iterations 1
Cbc0038I Pass   4: suminf.    1.75145 (6) obj. -2468.48 iterations 8
Cbc0038I Pass   5: suminf.    0.49098 (2) obj. -2468.48 iterations 5
Cbc0038I Pass   6: suminf.    0.48671 (1) obj. -2512.91 iterations 2
Cbc0038I Pass   7: suminf.    0.46803 (1) obj. -2468.48 iterations 1
Cbc0038I Pass   8: suminf.    2.57000 (8) obj. -2468.48 iterations 10
Cbc0038I Pass   9: suminf.    0.20785 (1) obj. -2468.48 iterations 8
Cbc0038I Pass  10: suminf.    0.25000 (1) obj. -2568.72 iterations 1
Cbc0038I Pass  11: suminf.    0.76779 (3) obj. -2468.48 iterations 5
Cbc0038I Pass  12: suminf.    0.76779 (3) obj. -2468.48 iterations 1
Cbc0038I Pass  13: suminf.    0.21498 (1) obj. -2620.2 iterations 3
Cbc0038I Pass  14: suminf.    0.15117 (1) obj. -2468.48 iterations 1
Cbc0038I Pass  15: suminf.    2.85386 (8) obj. -2468.48 iterations 10
Cbc0038I Pass  16: suminf.    1.00463 (3) obj. -2468.48 iterations 6
Cbc0038I Pass  17: suminf.    0.32367 (1) obj. -2589.05 iterations 3
Cbc0038I Pass  18: suminf.    0.27297 (1) obj. -2468.48 iterations 1
Cbc0038I Pass  19: suminf.    2.39438 (9) obj. -2468.48 iterations 11
Cbc0038I Pass  20: suminf.    1.71029 (8) obj. -2468.48 iterations 2
Cbc0038I Pass  21: suminf.    0.75950 (3) obj. -2468.48 iterations 10
Cbc0038I Pass  22: suminf.    0.75950 (3) obj. -2468.48 iterations 0
Cbc0038I Pass  23: suminf.    0.34783 (1) obj. -2540.15 iterations 3
Cbc0038I Pass  24: suminf.    0.31769 (1) obj. -2468.48 iterations 1
Cbc0038I Pass  25: suminf.    3.08612 (9) obj. -2468.48 iterations 16
Cbc0038I Pass  26: suminf.    1.19126 (7) obj. -2468.48 iterations 5
Cbc0038I Pass  27: suminf.    0.39906 (2) obj. -2468.48 iterations 7
Cbc0038I Pass  28: suminf.    0.39906 (2) obj. -2468.48 iterations 0
Cbc0038I Pass  29: suminf.    0.32754 (1) obj. -2505.6 iterations 2
Cbc0038I Pass  30: suminf.    0.31193 (1) obj. -2468.48 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 44 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -2427.96 to -2673.64 (0.03 seconds)
Cbc0038I Round again with cutoff of -2705.56
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.53124 (5) obj. -2705.56 iterations 2
Cbc0038I Pass  31: suminf.    0.70639 (2) obj. -2705.56 iterations 7
Cbc0038I Pass  32: suminf.    0.70639 (2) obj. -2705.56 iterations 0
Cbc0038I Pass  33: suminf.    0.76351 (2) obj. -2719.38 iterations 3
Cbc0038I Pass  34: suminf.    0.75245 (2) obj. -2705.56 iterations 1
Cbc0038I Pass  35: suminf.    1.28035 (4) obj. -2705.56 iterations 6
Cbc0038I Pass  36: suminf.    0.99547 (3) obj. -2705.56 iterations 5
Cbc0038I Pass  37: suminf.    1.01104 (3) obj. -2705.56 iterations 2
Cbc0038I Pass  38: suminf.    1.71311 (7) obj. -2705.56 iterations 6
Cbc0038I Pass  39: suminf.    0.70639 (2) obj. -2705.56 iterations 6
Cbc0038I Pass  40: suminf.    0.76351 (2) obj. -2719.38 iterations 4
Cbc0038I Pass  41: suminf.    0.75245 (2) obj. -2705.56 iterations 1
Cbc0038I Pass  42: suminf.    0.70639 (2) obj. -2705.56 iterations 3
Cbc0038I Pass  43: suminf.    2.13565 (9) obj. -2705.56 iterations 10
Cbc0038I Pass  44: suminf.    1.12980 (5) obj. -2705.56 iterations 5
Cbc0038I Pass  45: suminf.    1.57462 (4) obj. -2705.56 iterations 5
Cbc0038I Pass  46: suminf.    1.57462 (4) obj. -2705.56 iterations 1
Cbc0038I Pass  47: suminf.    1.48657 (4) obj. -2705.56 iterations 4
Cbc0038I Pass  48: suminf.    1.24211 (4) obj. -2705.56 iterations 2
Cbc0038I Pass  49: suminf.    1.24211 (4) obj. -2705.56 iterations 0
Cbc0038I Pass  50: suminf.    1.57462 (4) obj. -2705.56 iterations 3
Cbc0038I Pass  51: suminf.    1.57462 (4) obj. -2705.56 iterations 1
Cbc0038I Pass  52: suminf.    1.48657 (4) obj. -2705.56 iterations 4
Cbc0038I Pass  53: suminf.    1.24211 (4) obj. -2705.56 iterations 2
Cbc0038I Pass  54: suminf.    1.24211 (4) obj. -2705.56 iterations 0
Cbc0038I Pass  55: suminf.    1.57462 (4) obj. -2705.56 iterations 3
Cbc0038I Pass  56: suminf.    1.57462 (4) obj. -2705.56 iterations 1
Cbc0038I Pass  57: suminf.    1.48657 (4) obj. -2705.56 iterations 4
Cbc0038I Pass  58: suminf.    1.24211 (4) obj. -2705.56 iterations 2
Cbc0038I Pass  59: suminf.    1.24211 (4) obj. -2705.56 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2673.64 - took 0.02 seconds
Cbc0012I Integer solution of -2673.6393 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 44 columns, reduced to 3 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 8.4
Cbc0013I At root node, 5 cuts changed objective from -2783.7686 to -2688.2999 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 1.8 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2673.6393, took 36 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 0.000337376 - average 8.8783e-06, 7 fixed columns
Coin0506I Presolve 19 (-19) rows, 14 (-8) columns and 59 (-53) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 2915.1062
Clp0000I Optimal - objective value 2915.1062
Coin0511I After Postsolve, objective 2915.1062, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2915.1062
Clp0000I Optimal - objective value 2915.1062
Clp0000I Optimal - objective value 2915.1062
Coin0511I After Postsolve, objective 2915.1062, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2915.106222 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.85349
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1988.31 iterations 9
Cbc0038I Solution found of -1988.31
Cbc0038I Relaxing continuous gives -1988.31
Cbc0038I Rounding solution of -2281.65 is better than previous of -1988.31

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -2281.65 to -2418.7 (0.01 seconds)
Cbc0038I Round again with cutoff of -2460.75
Cbc0038I Pass   2: suminf.    0.37803 (2) obj. -2460.75 iterations 1
Cbc0038I Pass   3: suminf.    0.26449 (1) obj. -2739.01 iterations 2
Cbc0038I Pass   4: suminf.    0.14747 (1) obj. -2460.75 iterations 1
Cbc0038I Pass   5: suminf.    0.56348 (3) obj. -2460.75 iterations 6
Cbc0038I Pass   6: suminf.    0.48043 (2) obj. -2460.75 iterations 1
Cbc0038I Pass   7: suminf.    0.43961 (1) obj. -2471.71 iterations 2
Cbc0038I Pass   8: suminf.    0.43500 (1) obj. -2460.75 iterations 1
Cbc0038I Pass   9: suminf.    0.19219 (1) obj. -2460.75 iterations 5
Cbc0038I Pass  10: suminf.    0.28865 (1) obj. -2690.11 iterations 1
Cbc0038I Pass  11: suminf.    0.19219 (1) obj. -2460.75 iterations 1
Cbc0038I Pass  12: suminf.    0.33163 (1) obj. -2460.75 iterations 2
Cbc0038I Pass  13: suminf.    0.33163 (1) obj. -2460.75 iterations 1
Cbc0038I Pass  14: suminf.    0.37319 (1) obj. -2559.57 iterations 1
Cbc0038I Pass  15: suminf.    1.10800 (3) obj. -2460.75 iterations 6
Cbc0038I Pass  16: suminf.    1.10800 (3) obj. -2460.75 iterations 0
Cbc0038I Pass  17: suminf.    0.70083 (2) obj. -2460.75 iterations 3
Cbc0038I Pass  18: suminf.    0.67154 (3) obj. -2460.75 iterations 2
Cbc0038I Pass  19: suminf.    0.23182 (1) obj. -2515.16 iterations 2
Cbc0038I Pass  20: suminf.    0.23182 (1) obj. -2515.16 iterations 0
Cbc0038I Pass  21: suminf.    0.12397 (1) obj. -2460.75 iterations 3
Cbc0038I Pass  22: suminf.    0.16164 (1) obj. -2550.33 iterations 1
Cbc0038I Pass  23: suminf.    1.26797 (3) obj. -2460.75 iterations 6
Cbc0038I Pass  24: suminf.    0.97276 (3) obj. -2460.75 iterations 2
Cbc0038I Pass  25: suminf.    1.21676 (3) obj. -2460.75 iterations 2
Cbc0038I Pass  26: suminf.    0.80083 (2) obj. -2460.75 iterations 2
Cbc0038I Pass  27: suminf.    0.26058 (1) obj. -2511.74 iterations 2
Cbc0038I Pass  28: suminf.    0.28203 (1) obj. -2460.75 iterations 1
Cbc0038I Pass  29: suminf.    0.58013 (3) obj. -2460.75 iterations 3
Cbc0038I Pass  30: suminf.    0.58013 (3) obj. -2460.75 iterations 0
Cbc0038I Pass  31: suminf.    1.24809 (4) obj. -2460.75 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2418.7 to -2504.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -2571.23
Cbc0038I Pass  31: suminf.    0.46643 (2) obj. -2571.23 iterations 0
Cbc0038I Pass  32: suminf.    0.26449 (1) obj. -2739.01 iterations 2
Cbc0038I Pass  33: suminf.    0.19393 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  34: suminf.    1.72266 (5) obj. -2571.23 iterations 1
Cbc0038I Pass  35: suminf.    0.70556 (4) obj. -2571.23 iterations 4
Cbc0038I Pass  36: suminf.    0.25895 (3) obj. -2588.21 iterations 2
Cbc0038I Pass  37: suminf.    0.43978 (2) obj. -2571.23 iterations 4
Cbc0038I Pass  38: suminf.    0.22222 (1) obj. -2671.8 iterations 2
Cbc0038I Pass  39: suminf.    0.17993 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  40: suminf.    1.13717 (5) obj. -2571.23 iterations 9
Cbc0038I Pass  41: suminf.    0.78854 (4) obj. -2571.23 iterations 4
Cbc0038I Pass  42: suminf.    0.27536 (1) obj. -2590.99 iterations 4
Cbc0038I Pass  43: suminf.    0.26705 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  44: suminf.    0.38327 (2) obj. -2571.23 iterations 4
Cbc0038I Pass  45: suminf.    0.34783 (1) obj. -2580.15 iterations 2
Cbc0038I Pass  46: suminf.    0.34408 (1) obj. -2571.23 iterations 1
Cbc0038I Pass  47: suminf.    1.01163 (3) obj. -2571.23 iterations 9
Cbc0038I Pass  48: suminf.    0.78950 (4) obj. -2571.23 iterations 4
Cbc0038I Pass  49: suminf.    0.78950 (4) obj. -2571.23 iterations 0
Cbc0038I Pass  50: suminf.    0.49134 (3) obj. -2571.23 iterations 4
Cbc0038I Pass  51: suminf.    0.44289 (3) obj. -2571.23 iterations 3
Cbc0038I Pass  52: suminf.    0.43785 (2) obj. -2571.23 iterations 2
Cbc0038I Pass  53: suminf.    0.34096 (2) obj. -2571.23 iterations 1
Cbc0038I Pass  54: suminf.    0.31019 (2) obj. -2571.23 iterations 1
Cbc0038I Pass  55: suminf.    0.48636 (1) obj. -2588.11 iterations 2
Cbc0038I Pass  56: suminf.    0.48636 (1) obj. -2588.11 iterations 0
Cbc0038I Pass  57: suminf.    1.39161 (4) obj. -2571.23 iterations 10
Cbc0038I Pass  58: suminf.    1.39161 (4) obj. -2571.23 iterations 1
Cbc0038I Pass  59: suminf.    0.37198 (1) obj. -2649.85 iterations 4
Cbc0038I Pass  60: suminf.    0.33892 (1) obj. -2571.23 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -2504.23 to -2673.64 (0.03 seconds)
Cbc0038I Round again with cutoff of -2723.33
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.58813 (2) obj. -2723.33 iterations 0
Cbc0038I Pass  61: suminf.    0.26449 (1) obj. -2739.01 iterations 2
Cbc0038I Pass  62: suminf.    0.25790 (1) obj. -2723.33 iterations 1
Cbc0038I Pass  63: suminf.    1.26174 (7) obj. -2723.33 iterations 6
Cbc0038I Pass  64: suminf.    1.20227 (5) obj. -2723.33 iterations 1
Cbc0038I Pass  65: suminf.    1.17368 (4) obj. -2723.33 iterations 6
Cbc0038I Pass  66: suminf.    1.01116 (3) obj. -2723.33 iterations 1
Cbc0038I Pass  67: suminf.    0.88199 (4) obj. -2723.33 iterations 3
Cbc0038I Pass  68: suminf.    0.88014 (4) obj. -2723.33 iterations 2
Cbc0038I Pass  69: suminf.    1.27996 (4) obj. -2723.33 iterations 6
Cbc0038I Pass  70: suminf.    1.07007 (5) obj. -2723.33 iterations 2
Cbc0038I Pass  71: suminf.    1.72267 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  72: suminf.    1.68863 (5) obj. -2723.33 iterations 2
Cbc0038I Pass  73: suminf.    1.04836 (4) obj. -2723.33 iterations 2
Cbc0038I Pass  74: suminf.    1.04906 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  75: suminf.    1.68863 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  76: suminf.    1.03875 (4) obj. -2723.33 iterations 4
Cbc0038I Pass  77: suminf.    1.18705 (6) obj. -2723.33 iterations 4
Cbc0038I Pass  78: suminf.    1.97838 (7) obj. -2723.33 iterations 7
Cbc0038I Pass  79: suminf.    0.83135 (3) obj. -2723.33 iterations 5
Cbc0038I Pass  80: suminf.    1.04048 (3) obj. -2723.33 iterations 2
Cbc0038I Pass  81: suminf.    1.04048 (3) obj. -2723.33 iterations 0
Cbc0038I Pass  82: suminf.    1.13644 (3) obj. -2723.33 iterations 1
Cbc0038I Pass  83: suminf.    2.20069 (8) obj. -2723.33 iterations 7
Cbc0038I Pass  84: suminf.    0.92906 (5) obj. -2723.33 iterations 3
Cbc0038I Pass  85: suminf.    1.10206 (4) obj. -2723.33 iterations 5
Cbc0038I Pass  86: suminf.    1.09651 (4) obj. -2723.33 iterations 2
Cbc0038I Pass  87: suminf.    1.39910 (4) obj. -2723.33 iterations 5
Cbc0038I Pass  88: suminf.    1.27701 (5) obj. -2723.33 iterations 2
Cbc0038I Pass  89: suminf.    1.68863 (5) obj. -2723.33 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2673.64 - took 0.03 seconds
Cbc0012I Integer solution of -2673.6393 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 4 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 15.666667
Cbc0013I At root node, 3 cuts changed objective from -2839.2675 to -2693.3317 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2673.6393, took 12 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 43 (-4) columns and 335 (-54) elements
Clp1000I sum of infeasibilities 6.29717e-07 - average 1.61466e-08, 27 fixed columns
Coin0506I Presolve 11 (-28) rows, 16 (-27) columns and 69 (-266) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 2904.6609
Clp0000I Optimal - objective value 2904.6609
Coin0511I After Postsolve, objective 2904.6609, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.54793 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2944.9644
Clp0000I Optimal - objective value 2944.9644
Clp0000I Optimal - objective value 2944.9644
Coin0511I After Postsolve, objective 2944.9644, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2944.964408 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 43 columns (43 integer (43 of which binary)) and 349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.393%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.05328
Cbc0038I Solution found of -1988.31
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 43 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -1988.31 to -2427.96 (0.02 seconds)
Cbc0038I Round again with cutoff of -2468.19
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.77885 (4) obj. -2468.19 iterations 19
Cbc0038I Pass   2: suminf.    0.20000 (1) obj. -2550.66 iterations 5
Cbc0038I Pass   3: suminf.    0.16531 (1) obj. -2468.19 iterations 1
Cbc0038I Pass   4: suminf.    1.74330 (5) obj. -2468.19 iterations 7
Cbc0038I Pass   5: suminf.    0.23697 (1) obj. -2468.19 iterations 4
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -2499.16 iterations 1
Cbc0038I Pass   7: suminf.    1.83608 (8) obj. -2468.19 iterations 11
Cbc0038I Pass   8: suminf.    0.30640 (4) obj. -2468.19 iterations 4
Cbc0038I Pass   9: suminf.    0.23309 (1) obj. -2565.29 iterations 4
Cbc0038I Pass  10: suminf.    0.19225 (1) obj. -2468.19 iterations 1
Cbc0038I Pass  11: suminf.    0.58333 (2) obj. -2468.19 iterations 3
Cbc0038I Pass  12: suminf.    0.28685 (1) obj. -2468.19 iterations 1
Cbc0038I Pass  13: suminf.    0.36594 (1) obj. -2656.25 iterations 1
Cbc0038I Pass  14: suminf.    2.62817 (9) obj. -2468.19 iterations 12
Cbc0038I Pass  15: suminf.    1.39548 (3) obj. -2468.19 iterations 7
Cbc0038I Pass  16: suminf.    0.47464 (1) obj. -2476.82 iterations 3
Cbc0038I Pass  17: suminf.    0.47101 (1) obj. -2468.19 iterations 1
Cbc0038I Pass  18: suminf.    2.24129 (7) obj. -2468.19 iterations 7
Cbc0038I Pass  19: suminf.    1.25115 (3) obj. -2468.19 iterations 5
Cbc0038I Pass  20: suminf.    0.32971 (1) obj. -2500.55 iterations 3
Cbc0038I Pass  21: suminf.    0.31610 (1) obj. -2468.19 iterations 1
Cbc0038I Pass  22: suminf.    3.20694 (9) obj. -2468.19 iterations 14
Cbc0038I Pass  23: suminf.    1.89494 (5) obj. -2468.19 iterations 5
Cbc0038I Pass  24: suminf.    1.59509 (4) obj. -2543.34 iterations 1
Cbc0038I Pass  25: suminf.    1.39522 (5) obj. -2468.19 iterations 2
Cbc0038I Pass  26: suminf.    0.48636 (1) obj. -2553.11 iterations 5
Cbc0038I Pass  27: suminf.    0.48636 (1) obj. -2553.11 iterations 0
Cbc0038I Pass  28: suminf.    0.21041 (2) obj. -2468.19 iterations 2
Cbc0038I Pass  29: suminf.    1.36500 (5) obj. -2468.19 iterations 9
Cbc0038I Pass  30: suminf.    1.34374 (4) obj. -2468.19 iterations 2
Cbc0038I Rounding solution of -2455.47 is better than previous of -2427.96

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 43 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2455.47 to -2673.64 (0.03 seconds)
Cbc0038I Round again with cutoff of -2704.96
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.59909 (8) obj. -2704.96 iterations 4
Cbc0038I Pass  31: suminf.    1.22915 (4) obj. -2704.96 iterations 11
Cbc0038I Pass  32: suminf.    1.22915 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  33: suminf.    1.56555 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  34: suminf.    1.56555 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  35: suminf.    1.47336 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  36: suminf.    1.22915 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  37: suminf.    1.22915 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  38: suminf.    1.56555 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  39: suminf.    1.56555 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  40: suminf.    1.47336 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  41: suminf.    1.22915 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  42: suminf.    1.22915 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  43: suminf.    1.56555 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  44: suminf.    1.56555 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  45: suminf.    1.47336 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  46: suminf.    1.22915 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  47: suminf.    1.22915 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  48: suminf.    1.56555 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  49: suminf.    1.56555 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  50: suminf.    1.47336 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  51: suminf.    1.22915 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  52: suminf.    1.22915 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  53: suminf.    1.56555 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  54: suminf.    1.56555 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  55: suminf.    1.47336 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  56: suminf.    1.22915 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  57: suminf.    1.22915 (4) obj. -2704.96 iterations 0
Cbc0038I Pass  58: suminf.    1.56555 (4) obj. -2704.96 iterations 2
Cbc0038I Pass  59: suminf.    1.56555 (4) obj. -2704.96 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 43 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2673.64 - took 0.02 seconds
Cbc0012I Integer solution of -2673.6393 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 43 columns, reduced to 3 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 7.3333333
Cbc0013I At root node, 6 cuts changed objective from -2782.1971 to -2688.088 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 1.8 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 13 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2673.6393, took 34 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

