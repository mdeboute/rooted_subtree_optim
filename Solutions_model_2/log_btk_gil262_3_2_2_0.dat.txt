Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 498 (-29) rows, 260 (-4) columns and 1484 (-61) elements
Clp1000I sum of infeasibilities 5.82015e-05 - average 1.1687e-07, 122 fixed columns
Coin0506I Presolve 259 (-239) rows, 138 (-122) columns and 770 (-714) elements
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 0.1679599 - largest nonzero change 0 ( 0%) - largest zero change 2.9592953e-05
Clp0000I Optimal - objective value 143.30964
Clp0000I Optimal - objective value 143.30964
Coin0511I After Postsolve, objective 143.30964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13582414 - largest nonzero change 0 ( 0%) - largest zero change 2.9753437e-05
Clp0000I Optimal - objective value 143.30964
Clp0000I Optimal - objective value 143.30964
Clp0000I Optimal - objective value 143.30964
Coin0511I After Postsolve, objective 143.30964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 143.309637 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 498 rows, 260 columns (259 integer (259 of which binary)) and 1484 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 77 integers unsatisfied sum - 11.0117
Cbc0038I Solution found of 8.86589
Cbc0038I Relaxing continuous gives -6.06184
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 498 rows 260 columns, reduced to 143 rows 78 columns
Cbc0038I Mini branch and bound improved solution from -6.06184 to -58.5448 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.0214
Cbc0038I Pass   1: suminf.    3.73949 (42) obj. -67.0214 iterations 166
Cbc0038I Pass   2: suminf.    3.59001 (10) obj. -67.0214 iterations 58
Cbc0038I Pass   3: suminf.    2.28815 (12) obj. -67.0214 iterations 25
Cbc0038I Pass   4: suminf.    1.85149 (6) obj. -67.0214 iterations 3
Cbc0038I Pass   5: suminf.    1.57017 (6) obj. -67.0214 iterations 8
Cbc0038I Pass   6: suminf.    2.82847 (10) obj. -67.0214 iterations 15
Cbc0038I Pass   7: suminf.    2.80754 (9) obj. -67.0214 iterations 2
Cbc0038I Pass   8: suminf.    1.38425 (4) obj. -67.0214 iterations 14
Cbc0038I Pass   9: suminf.    0.64227 (3) obj. -67.0214 iterations 13
Cbc0038I Pass  10: suminf.    1.21148 (3) obj. -67.0214 iterations 4
Cbc0038I Pass  11: suminf.    0.78735 (2) obj. -67.0214 iterations 1
Cbc0038I Pass  12: suminf.    8.59437 (22) obj. -67.0214 iterations 49
Cbc0038I Pass  13: suminf.    3.68413 (14) obj. -67.0214 iterations 54
Cbc0038I Pass  14: suminf.    3.68413 (14) obj. -67.0214 iterations 0
Cbc0038I Pass  15: suminf.    4.04013 (10) obj. -67.0214 iterations 54
Cbc0038I Pass  16: suminf.    3.14076 (9) obj. -67.0214 iterations 23
Cbc0038I Pass  17: suminf.    3.10322 (9) obj. -67.0214 iterations 3
Cbc0038I Pass  18: suminf.    1.82272 (6) obj. -67.0214 iterations 14
Cbc0038I Pass  19: suminf.    0.74279 (4) obj. -67.0214 iterations 10
Cbc0038I Pass  20: suminf.    1.01528 (4) obj. -67.0214 iterations 9
Cbc0038I Pass  21: suminf.    0.36408 (4) obj. -67.0214 iterations 9
Cbc0038I Pass  22: suminf.    1.43467 (4) obj. -67.0214 iterations 7
Cbc0038I Pass  23: suminf.    1.08485 (3) obj. -67.0214 iterations 6
Cbc0038I Pass  24: suminf.    4.04556 (11) obj. -67.0214 iterations 38
Cbc0038I Pass  25: suminf.    1.90809 (6) obj. -67.0214 iterations 40
Cbc0038I Pass  26: suminf.    0.80694 (3) obj. -67.0214 iterations 9
Cbc0038I Pass  27: suminf.    0.60499 (4) obj. -67.0214 iterations 6
Cbc0038I Pass  28: suminf.    0.69085 (3) obj. -67.0214 iterations 5
Cbc0038I Pass  29: suminf.    0.37087 (2) obj. -67.0214 iterations 5
Cbc0038I Pass  30: suminf.    0.99194 (3) obj. -67.0214 iterations 8
Cbc0038I Rounding solution of -79.558 is better than previous of -58.5448

Cbc0038I Before mini branch and bound, 150 integers at bound fixed and 0 continuous
Cbc0038I Full problem 498 rows 260 columns, reduced to 202 rows 110 columns
Cbc0038I Mini branch and bound improved solution from -79.558 to -91.0381 (0.16 seconds)
Cbc0038I Round again with cutoff of -101.492
Cbc0038I Pass  30: suminf.    5.85407 (42) obj. -101.492 iterations 0
Cbc0038I Pass  31: suminf.    4.42033 (13) obj. -101.492 iterations 52
Cbc0038I Pass  32: suminf.    2.42964 (10) obj. -101.492 iterations 20
Cbc0038I Pass  33: suminf.    3.46537 (13) obj. -101.492 iterations 23
Cbc0038I Pass  34: suminf.    3.16872 (12) obj. -101.492 iterations 9
Cbc0038I Pass  35: suminf.    3.15197 (12) obj. -101.492 iterations 16
Cbc0038I Pass  36: suminf.    2.69926 (11) obj. -101.492 iterations 18
Cbc0038I Pass  37: suminf.    3.65996 (12) obj. -101.492 iterations 18
Cbc0038I Pass  38: suminf.    2.25514 (11) obj. -101.492 iterations 11
Cbc0038I Pass  39: suminf.    2.24751 (10) obj. -101.492 iterations 2
Cbc0038I Pass  40: suminf.    3.26816 (10) obj. -101.492 iterations 16
Cbc0038I Pass  41: suminf.    3.01216 (12) obj. -101.492 iterations 10
Cbc0038I Pass  42: suminf.    3.00892 (11) obj. -101.492 iterations 3
Cbc0038I Pass  43: suminf.    3.22693 (11) obj. -101.492 iterations 23
Cbc0038I Pass  44: suminf.    2.57918 (12) obj. -101.492 iterations 15
Cbc0038I Pass  45: suminf.    2.57918 (12) obj. -101.492 iterations 1
Cbc0038I Pass  46: suminf.    3.48767 (13) obj. -101.492 iterations 16
Cbc0038I Pass  47: suminf.    2.73220 (10) obj. -101.492 iterations 23
Cbc0038I Pass  48: suminf.    2.69926 (11) obj. -101.492 iterations 6
Cbc0038I Pass  49: suminf.    3.65996 (12) obj. -101.492 iterations 18
Cbc0038I Pass  50: suminf.    2.25514 (11) obj. -101.492 iterations 11
Cbc0038I Pass  51: suminf.    2.24751 (10) obj. -101.492 iterations 2
Cbc0038I Pass  52: suminf.    3.26816 (10) obj. -101.492 iterations 16
Cbc0038I Pass  53: suminf.    3.01216 (12) obj. -101.492 iterations 10
Cbc0038I Pass  54: suminf.    3.00892 (11) obj. -101.492 iterations 3
Cbc0038I Pass  55: suminf.    3.22693 (11) obj. -101.492 iterations 23
Cbc0038I Pass  56: suminf.    2.57918 (12) obj. -101.492 iterations 15
Cbc0038I Pass  57: suminf.    2.57918 (12) obj. -101.492 iterations 1
Cbc0038I Pass  58: suminf.    3.48767 (13) obj. -101.492 iterations 16
Cbc0038I Pass  59: suminf.    2.73220 (10) obj. -101.492 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 498 rows 260 columns, reduced to 177 rows 96 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -91.0381 - took 0.24 seconds
Cbc0012I Integer solution of -91.03807 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 498 rows 260 columns, reduced to 143 rows 78 columns
Cbc0031I 47 added rows had average density of 161
Cbc0013I At root node, 47 cuts changed objective from -143.30964 to -131.35788 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32406 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.489 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2330 row cuts average 258.2 elements, 0 column cuts (0 active)  in 0.560 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.672 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 254.4 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -91.03807 best solution, best possible -131.35788 (5.45 seconds)
Cbc0038I Full problem 498 rows 260 columns, reduced to 125 rows 71 columns
Cbc0010I After 45 nodes, 8 on tree, -91.03807 best solution, best possible -131.35788 (6.15 seconds)
Cbc0001I Search completed - best objective -91.03806999999998, took 22693 iterations and 98 nodes (6.37 seconds)
Cbc0032I Strong branching done 1218 times (33520 iterations), fathomed 11 nodes and fixed 71 variables
Cbc0035I Maximum depth 30, 408 variables fixed on reduced cost
Total time (CPU seconds):       6.27   (Wallclock seconds):       6.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 348 (-178) rows, 368 (-156) columns and 15500 (-20236) elements
Clp1000I sum of infeasibilities 7.17658e-06 - average 2.06224e-08, 95 fixed columns
Coin0506I Presolve 248 (-100) rows, 271 (-97) columns and 9470 (-6030) elements
Clp0006I 0  Obj 447.72871 Dual inf 41.656035 (271)
Clp0029I End of values pass after 271 iterations
Clp0014I Perturbing problem by 0.001% of 1.6939945 - largest nonzero change 1.9755883e-05 ( 0.0016558695%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 474.33791
Clp0000I Optimal - objective value 474.33791
Coin0511I After Postsolve, objective 474.33791, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 474.33791 Dual inf 171.06438 (8)
Clp0014I Perturbing problem by 0.001% of 1.6036857 - largest nonzero change 1.3922052e-05 ( 0.0012571614%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 475.67124
Clp0000I Optimal - objective value 475.67124
Clp0000I Optimal - objective value 475.67124
Coin0511I After Postsolve, objective 475.67124, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 475.6712386 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0004I processed model has 348 rows, 368 columns (368 integer (368 of which binary)) and 15500 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.540%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 108 integers unsatisfied sum - 9.2363
Cbc0038I Pass   1: suminf.    1.80207 (74) obj. -100.211 iterations 32
Cbc0038I Pass   2: suminf.    1.80207 (74) obj. -100.211 iterations 1
Cbc0038I Pass   3: suminf.    1.33567 (61) obj. -41.5741 iterations 13
Cbc0038I Pass   4: suminf.    0.70912 (39) obj. -10.4836 iterations 22
Cbc0038I Pass   5: suminf.    0.32034 (22) obj. 7.10615 iterations 17
Cbc0038I Pass   6: suminf.    0.12940 (10) obj. 19.9003 iterations 12
Cbc0038I Solution found of 29.7709
Cbc0038I Rounding solution of -4.62397 is better than previous of 29.7709

Cbc0038I Before mini branch and bound, 256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 368 columns, reduced to 39 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -4.62397 to -296.702 (0.14 seconds)
Cbc0038I Round again with cutoff of -314.599
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   7: suminf.    6.09572 (107) obj. -314.599 iterations 12
Cbc0038I Pass   8: suminf.    6.09572 (107) obj. -314.599 iterations 0
Cbc0038I Pass   9: suminf.    4.14168 (87) obj. -437.488 iterations 20
Cbc0038I Pass  10: suminf.    2.91396 (69) obj. -418.858 iterations 18
Cbc0038I Pass  11: suminf.    2.06562 (52) obj. -357.171 iterations 17
Cbc0038I Pass  12: suminf.    1.36261 (36) obj. -336.137 iterations 16
Cbc0038I Pass  13: suminf.    0.65301 (19) obj. -314.599 iterations 19
Cbc0038I Pass  14: suminf.    0.05364 (1) obj. -324.146 iterations 19
Cbc0038I Pass  15: suminf.    0.38286 (1) obj. -314.599 iterations 1
Cbc0038I Pass  16: suminf.    2.12916 (17) obj. -314.599 iterations 48
Cbc0038I Pass  17: suminf.    1.34522 (17) obj. -314.599 iterations 21
Cbc0038I Pass  18: suminf.    0.68002 (7) obj. -314.599 iterations 38
Cbc0038I Pass  19: suminf.    0.28257 (4) obj. -314.599 iterations 8
Cbc0038I Pass  20: suminf.    1.11620 (5) obj. -314.599 iterations 17
Cbc0038I Pass  21: suminf.    0.69501 (8) obj. -314.599 iterations 8
Cbc0038I Pass  22: suminf.    0.41050 (4) obj. -314.599 iterations 9
Cbc0038I Pass  23: suminf.    0.75091 (7) obj. -314.599 iterations 13
Cbc0038I Pass  24: suminf.    0.75091 (7) obj. -314.599 iterations 0
Cbc0038I Pass  25: suminf.    0.13308 (7) obj. -314.599 iterations 12
Cbc0038I Pass  26: suminf.    0.11907 (8) obj. -314.599 iterations 8
Cbc0038I Pass  27: suminf.    0.40556 (7) obj. -314.599 iterations 10
Cbc0038I Pass  28: suminf.    1.32290 (20) obj. -314.599 iterations 74
Cbc0038I Pass  29: suminf.    1.32290 (20) obj. -314.599 iterations 22
Cbc0038I Pass  30: suminf.    1.72583 (7) obj. -314.599 iterations 34
Cbc0038I Pass  31: suminf.    1.72583 (7) obj. -314.599 iterations 0
Cbc0038I Pass  32: suminf.    0.81270 (5) obj. -314.599 iterations 10
Cbc0038I Pass  33: suminf.    0.54961 (8) obj. -314.599 iterations 7
Cbc0038I Pass  34: suminf.    0.58433 (6) obj. -314.599 iterations 5
Cbc0038I Pass  35: suminf.    2.15652 (22) obj. -314.599 iterations 62
Cbc0038I Pass  36: suminf.    0.93862 (18) obj. -316.987 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 225 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 368 columns, reduced to 11 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -296.702 to -298.92 (0.21 seconds)
Cbc0038I Round again with cutoff of -346.813
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  36: suminf.    6.61006 (107) obj. -346.813 iterations 0
Cbc0038I Pass  37: suminf.    6.61006 (107) obj. -346.813 iterations 0
Cbc0038I Pass  38: suminf.    4.60612 (95) obj. -346.813 iterations 12
Cbc0038I Pass  39: suminf.    4.60612 (95) obj. -346.813 iterations 0
Cbc0038I Pass  40: suminf.    3.03435 (71) obj. -394.24 iterations 24
Cbc0038I Pass  41: suminf.    2.25258 (56) obj. -371.47 iterations 15
Cbc0038I Pass  42: suminf.    1.79491 (46) obj. -350.488 iterations 10
Cbc0038I Pass  43: suminf.    0.97502 (25) obj. -346.813 iterations 32
Cbc0038I Pass  44: suminf.    0.92601 (25) obj. -348.235 iterations 1
Cbc0038I Pass  45: suminf.    1.10382 (16) obj. -346.813 iterations 33
Cbc0038I Pass  46: suminf.    0.80580 (16) obj. -346.813 iterations 2
Cbc0038I Pass  47: suminf.    0.89322 (11) obj. -346.813 iterations 21
Cbc0038I Pass  48: suminf.    0.71189 (11) obj. -346.813 iterations 5
Cbc0038I Pass  49: suminf.    0.92204 (7) obj. -346.813 iterations 22
Cbc0038I Pass  50: suminf.    0.92204 (7) obj. -346.813 iterations 1
Cbc0038I Pass  51: suminf.    0.92814 (6) obj. -346.813 iterations 9
Cbc0038I Pass  52: suminf.    0.92814 (6) obj. -346.813 iterations 2
Cbc0038I Pass  53: suminf.    0.92882 (6) obj. -346.813 iterations 11
Cbc0038I Pass  54: suminf.    0.92882 (6) obj. -346.813 iterations 1
Cbc0038I Pass  55: suminf.    1.11236 (6) obj. -346.813 iterations 11
Cbc0038I Pass  56: suminf.    1.11236 (6) obj. -346.813 iterations 2
Cbc0038I Pass  57: suminf.    2.46789 (27) obj. -346.813 iterations 53
Cbc0038I Pass  58: suminf.    2.45688 (26) obj. -346.813 iterations 15
Cbc0038I Pass  59: suminf.    1.27382 (17) obj. -346.813 iterations 17
Cbc0038I Pass  60: suminf.    1.27382 (17) obj. -346.813 iterations 0
Cbc0038I Pass  61: suminf.    1.02016 (6) obj. -346.813 iterations 29
Cbc0038I Pass  62: suminf.    0.92882 (6) obj. -346.813 iterations 2
Cbc0038I Pass  63: suminf.    1.11236 (6) obj. -346.813 iterations 11
Cbc0038I Pass  64: suminf.    1.11236 (6) obj. -346.813 iterations 2
Cbc0038I Pass  65: suminf.    0.92882 (6) obj. -346.813 iterations 3
Cbc0038I Rounding solution of -299.076 is better than previous of -298.92

Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 368 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I Round again with cutoff of -385.471
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  65: suminf.    6.49413 (106) obj. -446.295 iterations 2
Cbc0038I Pass  66: suminf.    6.49413 (106) obj. -446.295 iterations 0
Cbc0038I Pass  67: suminf.    3.96005 (95) obj. -429.134 iterations 11
Cbc0038I Pass  68: suminf.    3.08499 (82) obj. -385.471 iterations 14
Cbc0038I Pass  69: suminf.    3.00418 (64) obj. -385.471 iterations 33
Cbc0038I Pass  70: suminf.    2.47619 (48) obj. -385.471 iterations 37
Cbc0038I Pass  71: suminf.    2.45844 (45) obj. -385.471 iterations 4
Cbc0038I Pass  72: suminf.    2.82942 (32) obj. -385.471 iterations 37
Cbc0038I Pass  73: suminf.    2.40110 (31) obj. -385.471 iterations 4
Cbc0038I Pass  74: suminf.    2.51963 (29) obj. -385.471 iterations 12
Cbc0038I Pass  75: suminf.    2.45224 (29) obj. -385.471 iterations 4
Cbc0038I Pass  76: suminf.    2.92101 (23) obj. -385.471 iterations 26
Cbc0038I Pass  77: suminf.    2.51957 (23) obj. -385.471 iterations 4
Cbc0038I Pass  78: suminf.    2.75540 (21) obj. -385.471 iterations 23
Cbc0038I Pass  79: suminf.    2.75540 (21) obj. -385.471 iterations 3
Cbc0038I Pass  80: suminf.    2.93962 (19) obj. -385.471 iterations 18
Cbc0038I Pass  81: suminf.    2.63923 (19) obj. -385.471 iterations 9
Cbc0038I Pass  82: suminf.    2.93962 (19) obj. -385.471 iterations 15
Cbc0038I Pass  83: suminf.    3.77024 (39) obj. -385.471 iterations 49
Cbc0038I Pass  84: suminf.    3.73432 (38) obj. -385.471 iterations 9
Cbc0038I Pass  85: suminf.    2.71306 (26) obj. -385.471 iterations 30
Cbc0038I Pass  86: suminf.    2.40209 (29) obj. -385.471 iterations 12
Cbc0038I Pass  87: suminf.    2.81501 (19) obj. -385.471 iterations 39
Cbc0038I Pass  88: suminf.    2.63923 (19) obj. -385.471 iterations 11
Cbc0038I Pass  89: suminf.    2.93962 (19) obj. -385.471 iterations 17
Cbc0038I Pass  90: suminf.    3.23565 (27) obj. -385.471 iterations 49
Cbc0038I Pass  91: suminf.    2.95352 (26) obj. -385.471 iterations 22
Cbc0038I Pass  92: suminf.    2.79345 (22) obj. -385.471 iterations 31
Cbc0038I Pass  93: suminf.    2.57871 (22) obj. -385.9 iterations 10
Cbc0038I Pass  94: suminf.    2.93962 (19) obj. -385.471 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 245 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 368 columns, reduced to 7 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -299.076 - took 0.24 seconds
Cbc0012I Integer solution of -299.0763 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0012I Integer solution of -300.91441 found by DiveCoefficient after 273 iterations and 0 nodes (0.59 seconds)
Cbc0031I 70 added rows had average density of 10.814286
Cbc0013I At root node, 70 cuts changed objective from -475.67124 to -306.01012 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 451 row cuts average 2.0 elements, 44 column cuts (44 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 116.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 122 row cuts average 131.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 109.5 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -300.91441 best solution, best possible -306.01012 (0.59 seconds)
Cbc0012I Integer solution of -301.36301 found by DiveCoefficient after 282 iterations and 2 nodes (0.61 seconds)
Cbc0012I Integer solution of -302.68578 found by rounding after 415 iterations and 10 nodes (0.79 seconds)
Cbc0012I Integer solution of -303.13438 found by rounding after 669 iterations and 19 nodes (0.92 seconds)
Cbc0012I Integer solution of -303.7159 found by rounding after 680 iterations and 20 nodes (0.93 seconds)
Cbc0001I Search completed - best objective -303.7158999999999, took 1103 iterations and 38 nodes (1.25 seconds)
Cbc0032I Strong branching done 230 times (1833 iterations), fathomed 5 nodes and fixed 11 variables
Cbc0035I Maximum depth 14, 470 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       1.27

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 498 (-29) rows, 260 (-4) columns and 1484 (-61) elements
Clp1000I sum of infeasibilities 5.82015e-05 - average 1.1687e-07, 122 fixed columns
Coin0506I Presolve 259 (-239) rows, 138 (-122) columns and 770 (-714) elements
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 0.1679599 - largest nonzero change 0 ( 0%) - largest zero change 2.9592953e-05
Clp0000I Optimal - objective value 143.30964
Clp0000I Optimal - objective value 143.30964
Coin0511I After Postsolve, objective 143.30964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13582414 - largest nonzero change 0 ( 0%) - largest zero change 2.9753437e-05
Clp0000I Optimal - objective value 143.30964
Clp0000I Optimal - objective value 143.30964
Clp0000I Optimal - objective value 143.30964
Coin0511I After Postsolve, objective 143.30964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 143.309637 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 498 rows, 260 columns (259 integer (259 of which binary)) and 1484 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 77 integers unsatisfied sum - 11.0117
Cbc0038I Solution found of 8.86589
Cbc0038I Relaxing continuous gives -6.06184
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 498 rows 260 columns, reduced to 143 rows 78 columns
Cbc0038I Mini branch and bound improved solution from -6.06184 to -58.5448 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.0214
Cbc0038I Pass   1: suminf.    3.73949 (42) obj. -67.0214 iterations 166
Cbc0038I Pass   2: suminf.    3.59001 (10) obj. -67.0214 iterations 58
Cbc0038I Pass   3: suminf.    2.28815 (12) obj. -67.0214 iterations 25
Cbc0038I Pass   4: suminf.    1.85149 (6) obj. -67.0214 iterations 3
Cbc0038I Pass   5: suminf.    1.57017 (6) obj. -67.0214 iterations 8
Cbc0038I Pass   6: suminf.    2.82847 (10) obj. -67.0214 iterations 15
Cbc0038I Pass   7: suminf.    2.80754 (9) obj. -67.0214 iterations 2
Cbc0038I Pass   8: suminf.    1.38425 (4) obj. -67.0214 iterations 14
Cbc0038I Pass   9: suminf.    0.64227 (3) obj. -67.0214 iterations 13
Cbc0038I Pass  10: suminf.    1.21148 (3) obj. -67.0214 iterations 4
Cbc0038I Pass  11: suminf.    0.78735 (2) obj. -67.0214 iterations 1
Cbc0038I Pass  12: suminf.    8.59437 (22) obj. -67.0214 iterations 49
Cbc0038I Pass  13: suminf.    3.68413 (14) obj. -67.0214 iterations 54
Cbc0038I Pass  14: suminf.    3.68413 (14) obj. -67.0214 iterations 0
Cbc0038I Pass  15: suminf.    4.04013 (10) obj. -67.0214 iterations 54
Cbc0038I Pass  16: suminf.    3.14076 (9) obj. -67.0214 iterations 23
Cbc0038I Pass  17: suminf.    3.10322 (9) obj. -67.0214 iterations 3
Cbc0038I Pass  18: suminf.    1.82272 (6) obj. -67.0214 iterations 14
Cbc0038I Pass  19: suminf.    0.74279 (4) obj. -67.0214 iterations 10
Cbc0038I Pass  20: suminf.    1.01528 (4) obj. -67.0214 iterations 9
Cbc0038I Pass  21: suminf.    0.36408 (4) obj. -67.0214 iterations 9
Cbc0038I Pass  22: suminf.    1.43467 (4) obj. -67.0214 iterations 7
Cbc0038I Pass  23: suminf.    1.08485 (3) obj. -67.0214 iterations 6
Cbc0038I Pass  24: suminf.    4.04556 (11) obj. -67.0214 iterations 38
Cbc0038I Pass  25: suminf.    1.90809 (6) obj. -67.0214 iterations 40
Cbc0038I Pass  26: suminf.    0.80694 (3) obj. -67.0214 iterations 9
Cbc0038I Pass  27: suminf.    0.60499 (4) obj. -67.0214 iterations 6
Cbc0038I Pass  28: suminf.    0.69085 (3) obj. -67.0214 iterations 5
Cbc0038I Pass  29: suminf.    0.37087 (2) obj. -67.0214 iterations 5
Cbc0038I Pass  30: suminf.    0.99194 (3) obj. -67.0214 iterations 8
Cbc0038I Rounding solution of -79.558 is better than previous of -58.5448

Cbc0038I Before mini branch and bound, 150 integers at bound fixed and 0 continuous
Cbc0038I Full problem 498 rows 260 columns, reduced to 202 rows 110 columns
Cbc0038I Mini branch and bound improved solution from -79.558 to -91.0381 (0.16 seconds)
Cbc0038I Round again with cutoff of -101.492
Cbc0038I Pass  30: suminf.    5.85407 (42) obj. -101.492 iterations 0
Cbc0038I Pass  31: suminf.    4.42033 (13) obj. -101.492 iterations 52
Cbc0038I Pass  32: suminf.    2.42964 (10) obj. -101.492 iterations 20
Cbc0038I Pass  33: suminf.    3.46537 (13) obj. -101.492 iterations 23
Cbc0038I Pass  34: suminf.    3.16872 (12) obj. -101.492 iterations 9
Cbc0038I Pass  35: suminf.    3.15197 (12) obj. -101.492 iterations 16
Cbc0038I Pass  36: suminf.    2.69926 (11) obj. -101.492 iterations 18
Cbc0038I Pass  37: suminf.    3.65996 (12) obj. -101.492 iterations 18
Cbc0038I Pass  38: suminf.    2.25514 (11) obj. -101.492 iterations 11
Cbc0038I Pass  39: suminf.    2.24751 (10) obj. -101.492 iterations 2
Cbc0038I Pass  40: suminf.    3.26816 (10) obj. -101.492 iterations 16
Cbc0038I Pass  41: suminf.    3.01216 (12) obj. -101.492 iterations 10
Cbc0038I Pass  42: suminf.    3.00892 (11) obj. -101.492 iterations 3
Cbc0038I Pass  43: suminf.    3.22693 (11) obj. -101.492 iterations 23
Cbc0038I Pass  44: suminf.    2.57918 (12) obj. -101.492 iterations 15
Cbc0038I Pass  45: suminf.    2.57918 (12) obj. -101.492 iterations 1
Cbc0038I Pass  46: suminf.    3.48767 (13) obj. -101.492 iterations 16
Cbc0038I Pass  47: suminf.    2.73220 (10) obj. -101.492 iterations 23
Cbc0038I Pass  48: suminf.    2.69926 (11) obj. -101.492 iterations 6
Cbc0038I Pass  49: suminf.    3.65996 (12) obj. -101.492 iterations 18
Cbc0038I Pass  50: suminf.    2.25514 (11) obj. -101.492 iterations 11
Cbc0038I Pass  51: suminf.    2.24751 (10) obj. -101.492 iterations 2
Cbc0038I Pass  52: suminf.    3.26816 (10) obj. -101.492 iterations 16
Cbc0038I Pass  53: suminf.    3.01216 (12) obj. -101.492 iterations 10
Cbc0038I Pass  54: suminf.    3.00892 (11) obj. -101.492 iterations 3
Cbc0038I Pass  55: suminf.    3.22693 (11) obj. -101.492 iterations 23
Cbc0038I Pass  56: suminf.    2.57918 (12) obj. -101.492 iterations 15
Cbc0038I Pass  57: suminf.    2.57918 (12) obj. -101.492 iterations 1
Cbc0038I Pass  58: suminf.    3.48767 (13) obj. -101.492 iterations 16
Cbc0038I Pass  59: suminf.    2.73220 (10) obj. -101.492 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 498 rows 260 columns, reduced to 177 rows 96 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -91.0381 - took 0.24 seconds
Cbc0012I Integer solution of -91.03807 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 498 rows 260 columns, reduced to 143 rows 78 columns
Cbc0031I 47 added rows had average density of 161
Cbc0013I At root node, 47 cuts changed objective from -143.30964 to -131.35788 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32406 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.484 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2330 row cuts average 258.2 elements, 0 column cuts (0 active)  in 0.552 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.667 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 254.4 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -91.03807 best solution, best possible -131.35788 (5.41 seconds)
Cbc0038I Full problem 498 rows 260 columns, reduced to 125 rows 71 columns
Cbc0010I After 45 nodes, 8 on tree, -91.03807 best solution, best possible -131.35788 (6.12 seconds)
Cbc0001I Search completed - best objective -91.03806999999998, took 22693 iterations and 98 nodes (6.34 seconds)
Cbc0032I Strong branching done 1218 times (33520 iterations), fathomed 11 nodes and fixed 71 variables
Cbc0035I Maximum depth 30, 408 variables fixed on reduced cost
Total time (CPU seconds):       6.23   (Wallclock seconds):       6.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 345 (-182) rows, 365 (-160) columns and 15283 (-20454) elements
Clp1000I sum of infeasibilities 4.13085e-06 - average 1.19735e-08, 193 fixed columns
Coin0506I Presolve 157 (-188) rows, 172 (-193) columns and 634 (-14649) elements
Clp0006I 0  Obj 7.917675 Dual inf 5918.5505 (170)
Clp0029I End of values pass after 120 iterations
Clp0014I Perturbing problem by 0.001% of 0.14903506 - largest nonzero change 2.7751027e-05 ( 0.0025228206%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 9.2716869
Clp0000I Optimal - objective value 9.2716869
Coin0511I After Postsolve, objective 9.2716869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 9.2716869 Dual inf 214.24468 (108)
Clp0014I Perturbing problem by 0.001% of 1.6128308 - largest nonzero change 2.6752782e-05 ( 0.0024275985%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 182.87326
Clp0000I Optimal - objective value 182.87326
Clp0000I Optimal - objective value 182.87326
Coin0511I After Postsolve, objective 182.87326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 182.8732575 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 345 rows, 365 columns (365 integer (365 of which binary)) and 15283 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.552%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 106 integers unsatisfied sum - 7.80453
Cbc0038I Pass   1: suminf.    2.76395 (75) obj. -142.915 iterations 40
Cbc0038I Pass   2: suminf.    2.76395 (75) obj. -142.915 iterations 1
Cbc0038I Pass   3: suminf.    1.79253 (58) obj. -59.7169 iterations 17
Cbc0038I Pass   4: suminf.    0.68266 (29) obj. -25.1043 iterations 29
Cbc0038I Pass   5: suminf.    0.17397 (10) obj. -5.64599 iterations 19
Cbc0038I Solution found of 5.16466
Cbc0038I Rounding solution of -17.122 is better than previous of 5.16466

Cbc0038I Before mini branch and bound, 256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 365 columns, reduced to 32 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -33.6617
Cbc0038I Pass   6: suminf.    2.76395 (75) obj. -142.915 iterations 0
Cbc0038I Pass   7: suminf.    2.76395 (75) obj. -142.915 iterations 1
Cbc0038I Pass   8: suminf.    2.00540 (63) obj. -72.1619 iterations 12
Cbc0038I Pass   9: suminf.    1.50396 (51) obj. -50.1276 iterations 12
Cbc0038I Pass  10: suminf.    1.01166 (28) obj. -33.6617 iterations 28
Cbc0038I Pass  11: suminf.    0.48629 (4) obj. -33.6617 iterations 29
Cbc0038I Pass  12: suminf.    0.43867 (1) obj. -33.6617 iterations 5
Cbc0038I Pass  13: suminf.    0.05019 (1) obj. -44.9274 iterations 1
Cbc0038I Pass  14: suminf.    1.01510 (23) obj. -55.1786 iterations 37
Cbc0038I Pass  15: suminf.    0.95034 (22) obj. -54.3986 iterations 15
Cbc0038I Pass  16: suminf.    0.67870 (11) obj. -33.6617 iterations 17
Cbc0038I Pass  17: suminf.    0.67870 (11) obj. -33.6617 iterations 0
Cbc0038I Pass  18: suminf.    0.27734 (3) obj. -33.6617 iterations 15
Cbc0038I Pass  19: suminf.    0.22649 (2) obj. -34.1309 iterations 3
Cbc0038I Pass  20: suminf.    0.24733 (2) obj. -33.6617 iterations 6
Cbc0038I Pass  21: suminf.    2.42574 (20) obj. -33.6617 iterations 70
Cbc0038I Pass  22: suminf.    2.42574 (20) obj. -33.6617 iterations 24
Cbc0038I Pass  23: suminf.    1.39428 (22) obj. -33.6617 iterations 52
Cbc0038I Pass  24: suminf.    1.39428 (22) obj. -33.6617 iterations 0
Cbc0038I Pass  25: suminf.    0.68598 (9) obj. -33.6617 iterations 11
Cbc0038I Pass  26: suminf.    0.33145 (6) obj. -38.5712 iterations 7
Cbc0038I Pass  27: suminf.    0.76011 (3) obj. -33.6617 iterations 8
Cbc0038I Pass  28: suminf.    0.23071 (2) obj. -34.672 iterations 3
Cbc0038I Pass  29: suminf.    3.45669 (27) obj. -33.6617 iterations 58
Cbc0038I Pass  30: suminf.    3.45669 (27) obj. -33.6617 iterations 8
Cbc0038I Pass  31: suminf.    1.89101 (13) obj. -33.6617 iterations 42
Cbc0038I Pass  32: suminf.    0.80376 (11) obj. -37.2861 iterations 9
Cbc0038I Pass  33: suminf.    0.68379 (10) obj. -34.7009 iterations 3
Cbc0038I Pass  34: suminf.    0.36964 (7) obj. -33.6617 iterations 51
Cbc0038I Pass  35: suminf.    0.36964 (7) obj. -33.6617 iterations 1
Cbc0038I Rounding solution of -27.0005 is better than previous of -17.122

Cbc0038I Before mini branch and bound, 223 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 365 columns, reduced to 133 rows 140 columns - 31 fixed gives 96, 108 - ok now
Cbc0038I Full problem 345 rows 365 columns, reduced to 48 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -27.0005 to -31.323 (0.22 seconds)
Cbc0038I Round again with cutoff of -63.4331
Cbc0038I Pass  35: suminf.    2.76395 (75) obj. -142.915 iterations 0
Cbc0038I Pass  36: suminf.    2.76395 (75) obj. -142.915 iterations 1
Cbc0038I Pass  37: suminf.    1.87909 (54) obj. -63.4331 iterations 22
Cbc0038I Pass  38: suminf.    1.13473 (40) obj. -63.4331 iterations 17
Cbc0038I Pass  39: suminf.    0.66066 (41) obj. -63.4331 iterations 54
Cbc0038I Pass  40: suminf.    0.66066 (41) obj. -63.4331 iterations 0
Cbc0038I Pass  41: suminf.    1.89475 (31) obj. -63.4331 iterations 21
Cbc0038I Pass  42: suminf.    1.02186 (31) obj. -63.4331 iterations 7
Cbc0038I Pass  43: suminf.    0.69692 (23) obj. -66.7364 iterations 12
Cbc0038I Pass  44: suminf.    0.88766 (21) obj. -63.4331 iterations 54
Cbc0038I Pass  45: suminf.    0.72834 (14) obj. -64.7364 iterations 11
Cbc0038I Pass  46: suminf.    1.71570 (12) obj. -63.4331 iterations 54
Cbc0038I Pass  47: suminf.    1.71570 (12) obj. -63.4331 iterations 0
Cbc0038I Pass  48: suminf.    0.76371 (6) obj. -63.4331 iterations 19
Cbc0038I Pass  49: suminf.    0.44273 (6) obj. -63.4331 iterations 6
Cbc0038I Pass  50: suminf.    0.76556 (6) obj. -63.4331 iterations 8
Cbc0038I Pass  51: suminf.    1.44818 (24) obj. -63.4331 iterations 62
Cbc0038I Pass  52: suminf.    0.90754 (17) obj. -63.6305 iterations 24
Cbc0038I Pass  53: suminf.    0.74565 (8) obj. -63.4331 iterations 29
Cbc0038I Pass  54: suminf.    0.74501 (8) obj. -63.4331 iterations 1
Cbc0038I Pass  55: suminf.    1.29388 (6) obj. -63.4331 iterations 11
Cbc0038I Pass  56: suminf.    1.22344 (6) obj. -63.4331 iterations 4
Cbc0038I Pass  57: suminf.    1.03471 (6) obj. -63.4331 iterations 9
Cbc0038I Pass  58: suminf.    1.03471 (6) obj. -63.4331 iterations 1
Cbc0038I Pass  59: suminf.    1.03454 (6) obj. -63.4331 iterations 11
Cbc0038I Pass  60: suminf.    1.03454 (6) obj. -63.4331 iterations 1
Cbc0038I Pass  61: suminf.    1.52006 (22) obj. -66.3975 iterations 59
Cbc0038I Pass  62: suminf.    1.23114 (22) obj. -63.4331 iterations 15
Cbc0038I Pass  63: suminf.    1.33560 (10) obj. -63.4331 iterations 28
Cbc0038I Pass  64: suminf.    0.73246 (9) obj. -63.4331 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 231 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 365 columns, reduced to 77 rows 87 columns
Cbc0038I Mini branch and bound improved solution from -31.323 to -50.9986 (0.33 seconds)
Cbc0038I Round again with cutoff of -99.1588
Cbc0038I Pass  64: suminf.    2.76395 (75) obj. -142.915 iterations 0
Cbc0038I Pass  65: suminf.    2.76395 (75) obj. -142.915 iterations 1
Cbc0038I Pass  66: suminf.    2.06109 (57) obj. -99.1588 iterations 22
Cbc0038I Pass  67: suminf.    1.74727 (56) obj. -106.203 iterations 3
Cbc0038I Pass  68: suminf.    1.79169 (54) obj. -99.1588 iterations 23
Cbc0038I Pass  69: suminf.    1.79169 (54) obj. -99.1588 iterations 0
Cbc0038I Pass  70: suminf.    2.99669 (38) obj. -99.1588 iterations 31
Cbc0038I Pass  71: suminf.    2.34840 (59) obj. -99.1588 iterations 13
Cbc0038I Pass  72: suminf.    3.02192 (55) obj. -99.1588 iterations 14
Cbc0038I Pass  73: suminf.    1.75430 (51) obj. -99.1588 iterations 14
Cbc0038I Pass  74: suminf.    1.61829 (50) obj. -101.514 iterations 6
Cbc0038I Pass  75: suminf.    1.46607 (38) obj. -99.1588 iterations 55
Cbc0038I Pass  76: suminf.    1.41582 (45) obj. -99.1588 iterations 11
Cbc0038I Pass  77: suminf.    1.40212 (23) obj. -99.1588 iterations 53
Cbc0038I Pass  78: suminf.    1.40212 (23) obj. -99.1588 iterations 0
Cbc0038I Pass  79: suminf.    1.81349 (21) obj. -99.1588 iterations 51
Cbc0038I Pass  80: suminf.    0.93773 (17) obj. -99.3379 iterations 28
Cbc0038I Pass  81: suminf.    1.02727 (17) obj. -99.1588 iterations 19
Cbc0038I Pass  82: suminf.    2.64161 (25) obj. -99.1588 iterations 38
Cbc0038I Pass  83: suminf.    1.60871 (23) obj. -99.1588 iterations 17
Cbc0038I Pass  84: suminf.    1.94915 (20) obj. -99.1588 iterations 22
Cbc0038I Pass  85: suminf.    1.76399 (22) obj. -99.1588 iterations 14
Cbc0038I Pass  86: suminf.    2.33227 (20) obj. -99.1588 iterations 28
Cbc0038I Pass  87: suminf.    1.48803 (22) obj. -99.1588 iterations 18
Cbc0038I Pass  88: suminf.    1.49733 (20) obj. -99.1588 iterations 27
Cbc0038I Pass  89: suminf.    4.53982 (35) obj. -99.1588 iterations 36
Cbc0038I Pass  90: suminf.    1.97711 (30) obj. -99.1588 iterations 16
Cbc0038I Pass  91: suminf.    1.97499 (30) obj. -99.1588 iterations 9
Cbc0038I Pass  92: suminf.    2.27929 (25) obj. -99.1588 iterations 31
Cbc0038I Pass  93: suminf.    2.27929 (25) obj. -99.1588 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 232 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 365 columns, reduced to 53 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.40 seconds)
Cbc0038I After 0.40 seconds - Feasibility pump exiting with objective of -50.9986 - took 0.29 seconds
Cbc0012I Integer solution of -50.99855 found by feasibility pump after 0 iterations and 0 nodes (0.40 seconds)
Cbc0038I Full problem 345 rows 365 columns, reduced to 60 rows 67 columns
Cbc0031I 129 added rows had average density of 80.751938
Cbc0013I At root node, 129 cuts changed objective from -182.51875 to -109.90315 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35603 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.418 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3139 row cuts average 353.5 elements, 0 column cuts (0 active)  in 0.981 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 313 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4416 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.519 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1022 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 338 row cuts average 236.8 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 198 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.488 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -50.99855 best solution, best possible -109.90315 (7.85 seconds)
Cbc0010I After 3 nodes, 2 on tree, -50.99855 best solution, best possible -108.68414 (9.01 seconds)
Cbc0012I Integer solution of -63.19565 found by rounding after 16416 iterations and 4 nodes (9.03 seconds)
Cbc0012I Integer solution of -76.27725 found by DiveCoefficient after 16522 iterations and 4 nodes (9.07 seconds)
Cbc0012I Integer solution of -91.03807 found by rounding after 16637 iterations and 5 nodes (9.10 seconds)
Cbc0010I After 21 nodes, 2 on tree, -91.03807 best solution, best possible -108.68414 (9.78 seconds)
Cbc0010I After 23 nodes, 4 on tree, -91.03807 best solution, best possible -108.68414 (10.63 seconds)
Cbc0010I After 29 nodes, 4 on tree, -91.03807 best solution, best possible -108.68414 (11.38 seconds)
Cbc0001I Search completed - best objective -91.03806999999998, took 19933 iterations and 38 nodes (11.84 seconds)
Cbc0032I Strong branching done 654 times (27354 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 8, 196 variables fixed on reduced cost
Total time (CPU seconds):       11.66   (Wallclock seconds):       11.93

