Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 63 (-15) columns and 348 (-105) elements
Clp1000I sum of infeasibilities 0.000168974 - average 1.48223e-06, 54 fixed columns
Coin0506I Presolve 8 (-106) rows, 9 (-54) columns and 28 (-320) elements
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.0096885 - largest nonzero change 0 ( 0%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 15461.519
Clp0000I Optimal - objective value 15461.519
Coin0511I After Postsolve, objective 15461.519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3860702 - largest nonzero change 0 ( 0%) - largest zero change 2.9867245e-05
Clp0000I Optimal - objective value 15461.519
Clp0000I Optimal - objective value 15461.519
Clp0000I Optimal - objective value 15461.519
Coin0511I After Postsolve, objective 15461.519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15461.51922 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 63 columns (62 integer (62 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.475%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.46087
Cbc0038I Pass   1: suminf.    0.13333 (1) obj. -15436.4 iterations 15
Cbc0038I Solution found of -12909
Cbc0038I Relaxing continuous gives -12909
Cbc0038I Rounding solution of -13591.3 is better than previous of -12909

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13778.4
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.13333 (1) obj. -15436.4 iterations 0
Cbc0038I Pass   3: suminf.    0.29811 (1) obj. -13778.4 iterations 5
Cbc0038I Pass   4: suminf.    1.72418 (6) obj. -13778.4 iterations 12
Cbc0038I Pass   5: suminf.    0.76132 (3) obj. -13778.4 iterations 7
Cbc0038I Pass   6: suminf.    0.32143 (1) obj. -14014.2 iterations 2
Cbc0038I Pass   7: suminf.    0.29839 (1) obj. -13778.4 iterations 6
Cbc0038I Pass   8: suminf.    0.38710 (1) obj. -14639.6 iterations 5
Cbc0038I Pass   9: suminf.    1.01333 (4) obj. -13778.4 iterations 9
Cbc0038I Pass  10: suminf.    0.31297 (1) obj. -13778.4 iterations 10
Cbc0038I Pass  11: suminf.    0.15443 (2) obj. -14269.8 iterations 3
Cbc0038I Pass  12: suminf.    0.31297 (1) obj. -13778.4 iterations 4
Cbc0038I Pass  13: suminf.    1.04040 (7) obj. -13778.4 iterations 16
Cbc0038I Pass  14: suminf.    0.59072 (8) obj. -13778.4 iterations 7
Cbc0038I Pass  15: suminf.    1.20551 (4) obj. -13778.4 iterations 14
Cbc0038I Pass  16: suminf.    1.20551 (4) obj. -13778.4 iterations 0
Cbc0038I Pass  17: suminf.    1.12534 (5) obj. -13778.4 iterations 10
Cbc0038I Pass  18: suminf.    1.12534 (5) obj. -13778.4 iterations 0
Cbc0038I Pass  19: suminf.    0.74371 (4) obj. -13778.4 iterations 7
Cbc0038I Pass  20: suminf.    0.45747 (1) obj. -13778.4 iterations 3
Cbc0038I Pass  21: suminf.    0.36000 (1) obj. -14091.3 iterations 2
Cbc0038I Pass  22: suminf.    2.72954 (7) obj. -13778.4 iterations 23
Cbc0038I Pass  23: suminf.    1.97042 (6) obj. -13778.4 iterations 5
Cbc0038I Pass  24: suminf.    1.54374 (4) obj. -13778.4 iterations 2
Cbc0038I Pass  25: suminf.    0.52769 (2) obj. -14324.5 iterations 8
Cbc0038I Pass  26: suminf.    0.16729 (1) obj. -13778.4 iterations 4
Cbc0038I Pass  27: suminf.    0.16729 (1) obj. -13778.4 iterations 0
Cbc0038I Pass  28: suminf.    0.63325 (2) obj. -14163.6 iterations 3
Cbc0038I Pass  29: suminf.    1.08161 (3) obj. -13778.4 iterations 8
Cbc0038I Pass  30: suminf.    1.08161 (3) obj. -13778.4 iterations 1
Cbc0038I Pass  31: suminf.    0.29839 (1) obj. -13778.4 iterations 4
Cbc0038I Rounding solution of -14100.8 is better than previous of -13591.3

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -14100.8 to -15017.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -15106.2
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.13333 (1) obj. -15436.4 iterations 0
Cbc0038I Pass  32: suminf.    0.24657 (1) obj. -15106.2 iterations 4
Cbc0038I Pass  33: suminf.    0.13333 (1) obj. -15436.4 iterations 4
Cbc0038I Pass  34: suminf.    0.24657 (1) obj. -15106.2 iterations 5
Cbc0038I Pass  35: suminf.    0.87185 (5) obj. -15106.2 iterations 10
Cbc0038I Pass  36: suminf.    0.91231 (5) obj. -15106.2 iterations 9
Cbc0038I Pass  37: suminf.    0.78914 (2) obj. -15182.1 iterations 10
Cbc0038I Pass  38: suminf.    1.09144 (3) obj. -15106.2 iterations 5
Cbc0038I Pass  39: suminf.    0.72913 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  40: suminf.    0.72913 (3) obj. -15106.2 iterations 0
Cbc0038I Pass  41: suminf.    1.09144 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  42: suminf.    1.57215 (4) obj. -15106.2 iterations 11
Cbc0038I Pass  43: suminf.    1.57215 (4) obj. -15106.2 iterations 2
Cbc0038I Pass  44: suminf.    1.09144 (3) obj. -15106.2 iterations 7
Cbc0038I Pass  45: suminf.    1.09144 (3) obj. -15106.2 iterations 0
Cbc0038I Pass  46: suminf.    0.72913 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  47: suminf.    0.72913 (3) obj. -15106.2 iterations 0
Cbc0038I Pass  48: suminf.    1.09144 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  49: suminf.    1.54129 (4) obj. -15106.2 iterations 11
Cbc0038I Pass  50: suminf.    0.44625 (2) obj. -15205.6 iterations 12
Cbc0038I Pass  51: suminf.    0.49542 (1) obj. -15106.2 iterations 6
Cbc0038I Pass  52: suminf.    0.43639 (3) obj. -15106.2 iterations 4
Cbc0038I Pass  53: suminf.    0.03577 (2) obj. -15106.2 iterations 5
Cbc0038I Pass  54: suminf.    1.58198 (4) obj. -15106.2 iterations 8
Cbc0038I Pass  55: suminf.    0.03577 (2) obj. -15106.2 iterations 5
Cbc0038I Pass  56: suminf.    0.44777 (5) obj. -15106.2 iterations 10
Cbc0038I Pass  57: suminf.    0.47237 (2) obj. -15106.2 iterations 10
Cbc0038I Pass  58: suminf.    0.47545 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  59: suminf.    0.47545 (3) obj. -15106.2 iterations 3
Cbc0038I Pass  60: suminf.    0.32792 (4) obj. -15106.2 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15017.3 - took 0.04 seconds
Cbc0012I Integer solution of -15017.31 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 114 rows 63 columns, reduced to 3 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 6 cuts changed objective from -15461.519 to -15145.129 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.4 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15017.31, took 17 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-60) rows, 104 (-48) columns and 1596 (-1707) elements
Clp1000I sum of infeasibilities 3.59762e-09 - average 3.82726e-11, 63 fixed columns
Coin0506I Presolve 33 (-61) rows, 35 (-69) columns and 168 (-1428) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 15500.937
Clp0000I Optimal - objective value 15500.937
Coin0511I After Postsolve, objective 15500.937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.5954778 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15500.937
Clp0000I Optimal - objective value 15500.937
Clp0000I Optimal - objective value 15500.937
Coin0511I After Postsolve, objective 15500.937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15500.93687 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 105 columns (105 integer (105 of which binary)) and 1605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.730%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 2.24446
Cbc0038I Pass   1: suminf.    1.91459 (25) obj. -15469.5 iterations 19
Cbc0038I Pass   2: suminf.    0.54365 (12) obj. -12922.4 iterations 13
Cbc0038I Solution found of -12909
Cbc0038I Rounding solution of -13621 is better than previous of -12909

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 105 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -13808.4
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.91459 (25) obj. -15469.5 iterations 0
Cbc0038I Pass   4: suminf.    1.11880 (16) obj. -13808.4 iterations 11
Cbc0038I Pass   5: suminf.    0.13333 (1) obj. -15436.4 iterations 17
Cbc0038I Pass   6: suminf.    0.30842 (1) obj. -13808.4 iterations 4
Cbc0038I Pass   7: suminf.    1.27908 (10) obj. -13808.4 iterations 26
Cbc0038I Pass   8: suminf.    0.38228 (6) obj. -13808.4 iterations 10
Cbc0038I Pass   9: suminf.    0.62308 (2) obj. -14588.9 iterations 10
Cbc0038I Pass  10: suminf.    0.07512 (1) obj. -13808.4 iterations 4
Cbc0038I Pass  11: suminf.    0.07512 (1) obj. -13808.4 iterations 0
Cbc0038I Pass  12: suminf.    1.02656 (11) obj. -13808.4 iterations 30
Cbc0038I Pass  13: suminf.    0.86859 (9) obj. -14112.6 iterations 9
Cbc0038I Pass  14: suminf.    0.41596 (1) obj. -13808.4 iterations 12
Cbc0038I Pass  15: suminf.    0.35484 (1) obj. -14436.1 iterations 3
Cbc0038I Pass  16: suminf.    1.24406 (11) obj. -13808.4 iterations 15
Cbc0038I Pass  17: suminf.    0.94789 (11) obj. -13808.4 iterations 7
Cbc0038I Pass  18: suminf.    0.35484 (1) obj. -14431.1 iterations 15
Cbc0038I Pass  19: suminf.    0.41778 (1) obj. -13808.4 iterations 3
Cbc0038I Pass  20: suminf.    1.79585 (10) obj. -13808.4 iterations 15
Cbc0038I Pass  21: suminf.    1.11113 (10) obj. -13808.4 iterations 6
Cbc0038I Pass  22: suminf.    0.87516 (7) obj. -13808.4 iterations 3
Cbc0038I Pass  23: suminf.    0.74994 (8) obj. -14254.9 iterations 4
Cbc0038I Pass  24: suminf.    0.41301 (1) obj. -13808.4 iterations 11
Cbc0038I Pass  25: suminf.    0.26582 (2) obj. -14247.5 iterations 4
Cbc0038I Pass  26: suminf.    0.84197 (7) obj. -13808.4 iterations 18
Cbc0038I Pass  27: suminf.    0.83980 (6) obj. -13808.4 iterations 4
Cbc0038I Pass  28: suminf.    0.27586 (1) obj. -14591.6 iterations 9
Cbc0038I Pass  29: suminf.    0.49469 (1) obj. -13808.4 iterations 2
Cbc0038I Pass  30: suminf.    1.65655 (11) obj. -13808.4 iterations 16
Cbc0038I Pass  31: suminf.    0.37651 (6) obj. -14087.4 iterations 8
Cbc0038I Solution found of -14081.8
Cbc0038I Rounding solution of -14113.8 is better than previous of -14081.8

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 105 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -14113.8 to -15017.3 (0.05 seconds)
Cbc0038I Round again with cutoff of -15112.8
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.91459 (25) obj. -15469.5 iterations 0
Cbc0038I Pass  33: suminf.    0.36684 (5) obj. -15112.8 iterations 23
Cbc0038I Pass  34: suminf.    0.25388 (5) obj. -15442.2 iterations 3
Cbc0038I Pass  35: suminf.    0.24430 (1) obj. -15112.8 iterations 7
Cbc0038I Pass  36: suminf.    0.13333 (1) obj. -15436.4 iterations 3
Cbc0038I Pass  37: suminf.    0.53669 (8) obj. -15397.9 iterations 9
Cbc0038I Pass  38: suminf.    0.49439 (7) obj. -15441 iterations 2
Cbc0038I Pass  39: suminf.    0.24396 (1) obj. -15112.8 iterations 9
Cbc0038I Pass  40: suminf.    0.13333 (1) obj. -15435.4 iterations 3
Cbc0038I Pass  41: suminf.    0.63961 (8) obj. -15439.8 iterations 11
Cbc0038I Pass  42: suminf.    0.63961 (8) obj. -15439.8 iterations 2
Cbc0038I Pass  43: suminf.    0.24293 (1) obj. -15112.8 iterations 10
Cbc0038I Pass  44: suminf.    0.13333 (1) obj. -15432.4 iterations 3
Cbc0038I Pass  45: suminf.    0.72668 (10) obj. -15112.8 iterations 14
Cbc0038I Pass  46: suminf.    0.40089 (5) obj. -15433.1 iterations 7
Cbc0038I Pass  47: suminf.    0.24190 (1) obj. -15112.8 iterations 7
Cbc0038I Pass  48: suminf.    0.13333 (1) obj. -15429.4 iterations 3
Cbc0038I Pass  49: suminf.    0.56397 (6) obj. -15112.8 iterations 13
Cbc0038I Pass  50: suminf.    0.48280 (5) obj. -15425.8 iterations 4
Cbc0038I Pass  51: suminf.    0.23881 (1) obj. -15112.8 iterations 7
Cbc0038I Pass  52: suminf.    0.13333 (1) obj. -15420.4 iterations 3
Cbc0038I Pass  53: suminf.    0.71800 (8) obj. -15432.9 iterations 15
Cbc0038I Pass  54: suminf.    0.71800 (8) obj. -15432.9 iterations 3
Cbc0038I Pass  55: suminf.    0.23847 (1) obj. -15112.8 iterations 10
Cbc0038I Pass  56: suminf.    0.13333 (1) obj. -15419.4 iterations 3
Cbc0038I Pass  57: suminf.    1.15789 (6) obj. -15112.8 iterations 11
Cbc0038I Pass  58: suminf.    0.35153 (4) obj. -15424 iterations 5
Cbc0038I Pass  59: suminf.    0.23847 (1) obj. -15112.8 iterations 6
Cbc0038I Pass  60: suminf.    0.13333 (1) obj. -15419.4 iterations 3
Cbc0038I Pass  61: suminf.    0.60405 (5) obj. -15112.8 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 105 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -15017.3 - took 0.04 seconds
Cbc0012I Integer solution of -15017.31 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 95 rows 105 columns, reduced to 3 rows 4 columns
Cbc0031I 16 added rows had average density of 19.125
Cbc0013I At root node, 25 cuts changed objective from -15470.229 to -15017.31 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15017.31, took 64 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 63 (-15) columns and 348 (-105) elements
Clp1000I sum of infeasibilities 0.000168974 - average 1.48223e-06, 54 fixed columns
Coin0506I Presolve 8 (-106) rows, 9 (-54) columns and 28 (-320) elements
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.0096885 - largest nonzero change 0 ( 0%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 15461.519
Clp0000I Optimal - objective value 15461.519
Coin0511I After Postsolve, objective 15461.519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3860702 - largest nonzero change 0 ( 0%) - largest zero change 2.9867245e-05
Clp0000I Optimal - objective value 15461.519
Clp0000I Optimal - objective value 15461.519
Clp0000I Optimal - objective value 15461.519
Coin0511I After Postsolve, objective 15461.519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15461.51922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 63 columns (62 integer (62 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.475%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.46087
Cbc0038I Pass   1: suminf.    0.13333 (1) obj. -15436.4 iterations 15
Cbc0038I Solution found of -12909
Cbc0038I Relaxing continuous gives -12909
Cbc0038I Rounding solution of -13591.3 is better than previous of -12909

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13778.4
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.13333 (1) obj. -15436.4 iterations 0
Cbc0038I Pass   3: suminf.    0.29811 (1) obj. -13778.4 iterations 5
Cbc0038I Pass   4: suminf.    1.72418 (6) obj. -13778.4 iterations 12
Cbc0038I Pass   5: suminf.    0.76132 (3) obj. -13778.4 iterations 7
Cbc0038I Pass   6: suminf.    0.32143 (1) obj. -14014.2 iterations 2
Cbc0038I Pass   7: suminf.    0.29839 (1) obj. -13778.4 iterations 6
Cbc0038I Pass   8: suminf.    0.38710 (1) obj. -14639.6 iterations 5
Cbc0038I Pass   9: suminf.    1.01333 (4) obj. -13778.4 iterations 9
Cbc0038I Pass  10: suminf.    0.31297 (1) obj. -13778.4 iterations 10
Cbc0038I Pass  11: suminf.    0.15443 (2) obj. -14269.8 iterations 3
Cbc0038I Pass  12: suminf.    0.31297 (1) obj. -13778.4 iterations 4
Cbc0038I Pass  13: suminf.    1.04040 (7) obj. -13778.4 iterations 16
Cbc0038I Pass  14: suminf.    0.59072 (8) obj. -13778.4 iterations 7
Cbc0038I Pass  15: suminf.    1.20551 (4) obj. -13778.4 iterations 14
Cbc0038I Pass  16: suminf.    1.20551 (4) obj. -13778.4 iterations 0
Cbc0038I Pass  17: suminf.    1.12534 (5) obj. -13778.4 iterations 10
Cbc0038I Pass  18: suminf.    1.12534 (5) obj. -13778.4 iterations 0
Cbc0038I Pass  19: suminf.    0.74371 (4) obj. -13778.4 iterations 7
Cbc0038I Pass  20: suminf.    0.45747 (1) obj. -13778.4 iterations 3
Cbc0038I Pass  21: suminf.    0.36000 (1) obj. -14091.3 iterations 2
Cbc0038I Pass  22: suminf.    2.72954 (7) obj. -13778.4 iterations 23
Cbc0038I Pass  23: suminf.    1.97042 (6) obj. -13778.4 iterations 5
Cbc0038I Pass  24: suminf.    1.54374 (4) obj. -13778.4 iterations 2
Cbc0038I Pass  25: suminf.    0.52769 (2) obj. -14324.5 iterations 8
Cbc0038I Pass  26: suminf.    0.16729 (1) obj. -13778.4 iterations 4
Cbc0038I Pass  27: suminf.    0.16729 (1) obj. -13778.4 iterations 0
Cbc0038I Pass  28: suminf.    0.63325 (2) obj. -14163.6 iterations 3
Cbc0038I Pass  29: suminf.    1.08161 (3) obj. -13778.4 iterations 8
Cbc0038I Pass  30: suminf.    1.08161 (3) obj. -13778.4 iterations 1
Cbc0038I Pass  31: suminf.    0.29839 (1) obj. -13778.4 iterations 4
Cbc0038I Rounding solution of -14100.8 is better than previous of -13591.3

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -14100.8 to -15017.3 (0.02 seconds)
Cbc0038I Round again with cutoff of -15106.2
Cbc0038I Reduced cost fixing fixed 39 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.13333 (1) obj. -15436.4 iterations 0
Cbc0038I Pass  32: suminf.    0.24657 (1) obj. -15106.2 iterations 4
Cbc0038I Pass  33: suminf.    0.13333 (1) obj. -15436.4 iterations 4
Cbc0038I Pass  34: suminf.    0.24657 (1) obj. -15106.2 iterations 5
Cbc0038I Pass  35: suminf.    0.87185 (5) obj. -15106.2 iterations 10
Cbc0038I Pass  36: suminf.    0.91231 (5) obj. -15106.2 iterations 9
Cbc0038I Pass  37: suminf.    0.78914 (2) obj. -15182.1 iterations 10
Cbc0038I Pass  38: suminf.    1.09144 (3) obj. -15106.2 iterations 5
Cbc0038I Pass  39: suminf.    0.72913 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  40: suminf.    0.72913 (3) obj. -15106.2 iterations 0
Cbc0038I Pass  41: suminf.    1.09144 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  42: suminf.    1.57215 (4) obj. -15106.2 iterations 11
Cbc0038I Pass  43: suminf.    1.57215 (4) obj. -15106.2 iterations 2
Cbc0038I Pass  44: suminf.    1.09144 (3) obj. -15106.2 iterations 7
Cbc0038I Pass  45: suminf.    1.09144 (3) obj. -15106.2 iterations 0
Cbc0038I Pass  46: suminf.    0.72913 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  47: suminf.    0.72913 (3) obj. -15106.2 iterations 0
Cbc0038I Pass  48: suminf.    1.09144 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  49: suminf.    1.54129 (4) obj. -15106.2 iterations 11
Cbc0038I Pass  50: suminf.    0.44625 (2) obj. -15205.6 iterations 12
Cbc0038I Pass  51: suminf.    0.49542 (1) obj. -15106.2 iterations 6
Cbc0038I Pass  52: suminf.    0.43639 (3) obj. -15106.2 iterations 4
Cbc0038I Pass  53: suminf.    0.03577 (2) obj. -15106.2 iterations 5
Cbc0038I Pass  54: suminf.    1.58198 (4) obj. -15106.2 iterations 8
Cbc0038I Pass  55: suminf.    0.03577 (2) obj. -15106.2 iterations 5
Cbc0038I Pass  56: suminf.    0.44777 (5) obj. -15106.2 iterations 10
Cbc0038I Pass  57: suminf.    0.47237 (2) obj. -15106.2 iterations 10
Cbc0038I Pass  58: suminf.    0.47545 (3) obj. -15106.2 iterations 6
Cbc0038I Pass  59: suminf.    0.47545 (3) obj. -15106.2 iterations 3
Cbc0038I Pass  60: suminf.    0.32792 (4) obj. -15106.2 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15017.3 - took 0.02 seconds
Cbc0012I Integer solution of -15017.31 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 114 rows 63 columns, reduced to 3 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 6 cuts changed objective from -15461.519 to -15145.129 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.4 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15017.31, took 17 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 102 (-51) columns and 1549 (-1755) elements
Clp1000I sum of infeasibilities 0 - average 0, 68 fixed columns
Coin0506I Presolve 33 (-59) rows, 34 (-68) columns and 140 (-1409) elements
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 15500.937
Clp0000I Optimal - objective value 15500.937
Coin0511I After Postsolve, objective 15500.937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.6744945 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15500.937
Clp0000I Optimal - objective value 15500.937
Clp0000I Optimal - objective value 15500.937
Coin0511I After Postsolve, objective 15500.937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15500.93687 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 94 rows, 104 columns (104 integer (104 of which binary)) and 1559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.657%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 2.28511
Cbc0038I Pass   1: suminf.    1.95520 (25) obj. -15469.4 iterations 18
Cbc0038I Pass   2: suminf.    0.34710 (9) obj. -12919.6 iterations 16
Cbc0038I Solution found of -12909
Cbc0038I Rounding solution of -13621 is better than previous of -12909

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 104 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -13808.4
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.95520 (25) obj. -15469.4 iterations 0
Cbc0038I Pass   4: suminf.    1.12137 (16) obj. -13808.4 iterations 11
Cbc0038I Pass   5: suminf.    0.33058 (7) obj. -15444.1 iterations 11
Cbc0038I Pass   6: suminf.    0.30842 (1) obj. -13808.4 iterations 10
Cbc0038I Pass   7: suminf.    0.13333 (1) obj. -15436.4 iterations 4
Cbc0038I Pass   8: suminf.    0.61746 (8) obj. -13808.4 iterations 19
Cbc0038I Pass   9: suminf.    0.44167 (5) obj. -13808.4 iterations 5
Cbc0038I Pass  10: suminf.    0.35505 (2) obj. -13808.4 iterations 9
Cbc0038I Pass  11: suminf.    0.91304 (2) obj. -14574.8 iterations 4
Cbc0038I Pass  12: suminf.    0.79747 (2) obj. -14182.2 iterations 2
Cbc0038I Pass  13: suminf.    0.13103 (2) obj. -13808.4 iterations 4
Cbc0038I Pass  14: suminf.    0.07759 (2) obj. -13808.4 iterations 3
Cbc0038I Pass  15: suminf.    0.13333 (1) obj. -15433.4 iterations 5
Cbc0038I Pass  16: suminf.    0.30945 (1) obj. -13808.4 iterations 3
Cbc0038I Pass  17: suminf.    2.61451 (15) obj. -13808.4 iterations 27
Cbc0038I Pass  18: suminf.    1.96216 (15) obj. -13808.4 iterations 9
Cbc0038I Pass  19: suminf.    1.21083 (4) obj. -13808.4 iterations 21
Cbc0038I Pass  20: suminf.    1.21083 (4) obj. -13808.4 iterations 0
Cbc0038I Pass  21: suminf.    0.41488 (1) obj. -13808.4 iterations 5
Cbc0038I Pass  22: suminf.    0.32258 (1) obj. -14061.2 iterations 4
Cbc0038I Pass  23: suminf.    0.41488 (1) obj. -13808.4 iterations 4
Cbc0038I Pass  24: suminf.    1.66410 (11) obj. -13808.4 iterations 15
Cbc0038I Pass  25: suminf.    0.57582 (5) obj. -13808.4 iterations 10
Cbc0038I Pass  26: suminf.    0.38710 (1) obj. -14625.6 iterations 8
Cbc0038I Pass  27: suminf.    0.31448 (1) obj. -13808.4 iterations 4
Cbc0038I Pass  28: suminf.    0.72571 (5) obj. -13808.4 iterations 24
Cbc0038I Pass  29: suminf.    0.31936 (5) obj. -14257.7 iterations 11
Cbc0038I Pass  30: suminf.    0.29893 (1) obj. -13808.4 iterations 8
Cbc0038I Pass  31: suminf.    0.15443 (2) obj. -14254.8 iterations 4
Cbc0038I Pass  32: suminf.    1.58877 (10) obj. -13808.4 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 104 columns, reduced to 41 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -12909 to -15017.3 (0.05 seconds)
Cbc0038I Round again with cutoff of -15112.8
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.95520 (25) obj. -15469.4 iterations 0
Cbc0038I Pass  33: suminf.    0.48620 (8) obj. -15112.8 iterations 19
Cbc0038I Pass  34: suminf.    0.37224 (8) obj. -15445.1 iterations 2
Cbc0038I Pass  35: suminf.    0.24430 (1) obj. -15112.8 iterations 10
Cbc0038I Pass  36: suminf.    0.13333 (1) obj. -15436.4 iterations 3
Cbc0038I Pass  37: suminf.    1.36963 (8) obj. -15112.8 iterations 13
Cbc0038I Pass  38: suminf.    1.36963 (8) obj. -15112.8 iterations 1
Cbc0038I Pass  39: suminf.    1.22363 (3) obj. -15112.8 iterations 11
Cbc0038I Pass  40: suminf.    0.13333 (1) obj. -15428.4 iterations 5
Cbc0038I Pass  41: suminf.    0.24156 (1) obj. -15112.8 iterations 3
Cbc0038I Pass  42: suminf.    1.06753 (6) obj. -15112.8 iterations 12
Cbc0038I Pass  43: suminf.    0.78152 (6) obj. -15112.8 iterations 6
Cbc0038I Pass  44: suminf.    0.28367 (3) obj. -15132.5 iterations 8
Cbc0038I Pass  45: suminf.    1.20436 (3) obj. -15112.8 iterations 5
Cbc0038I Pass  46: suminf.    0.13333 (1) obj. -15423.4 iterations 4
Cbc0038I Pass  47: suminf.    0.23984 (1) obj. -15112.8 iterations 3
Cbc0038I Pass  48: suminf.    1.19118 (8) obj. -15326.8 iterations 18
Cbc0038I Pass  49: suminf.    0.43033 (7) obj. -15112.8 iterations 5
Cbc0038I Pass  50: suminf.    0.82609 (3) obj. -15319.4 iterations 11
Cbc0038I Pass  51: suminf.    0.04205 (2) obj. -15112.8 iterations 4
Cbc0038I Pass  52: suminf.    0.41394 (7) obj. -15112.8 iterations 17
Cbc0038I Pass  53: suminf.    0.35901 (6) obj. -15112.8 iterations 8
Cbc0038I Pass  54: suminf.    0.82609 (3) obj. -15320.4 iterations 10
Cbc0038I Pass  55: suminf.    0.04165 (2) obj. -15112.8 iterations 4
Cbc0038I Pass  56: suminf.    0.87508 (7) obj. -15112.8 iterations 18
Cbc0038I Pass  57: suminf.    0.38306 (4) obj. -15136.3 iterations 10
Cbc0038I Pass  58: suminf.    1.21207 (3) obj. -15112.8 iterations 6
Cbc0038I Pass  59: suminf.    0.13333 (1) obj. -15425.4 iterations 4
Cbc0038I Pass  60: suminf.    0.24053 (1) obj. -15112.8 iterations 3
Cbc0038I Pass  61: suminf.    1.85745 (21) obj. -15112.8 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 104 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -15017.3 - took 0.04 seconds
Cbc0012I Integer solution of -15017.31 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 94 rows 104 columns, reduced to 3 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 14 added rows had average density of 20.928571
Cbc0013I At root node, 14 cuts changed objective from -15470.219 to -15088.988 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 45 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15017.31, took 56 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

