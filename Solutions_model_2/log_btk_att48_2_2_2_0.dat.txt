Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 48 (-2) columns and 268 (-17) elements
Clp1000I sum of infeasibilities 4.98042e-06 - average 5.5338e-08, 5 fixed columns
Coin0506I Presolve 74 (-16) rows, 43 (-5) columns and 226 (-42) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.5314678 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2525.1576
Clp0000I Optimal - objective value 2525.1576
Coin0511I After Postsolve, objective 2525.1576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2525.1576
Clp0000I Optimal - objective value 2525.1576
Clp0000I Optimal - objective value 2525.1576
Coin0511I After Postsolve, objective 2525.1576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2525.157564 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 48 columns (47 integer (47 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 10.8493
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -273.078 iterations 34
Cbc0038I Solution found of -273.078
Cbc0038I Relaxing continuous gives -273.078
Cbc0038I Rounding solution of -516.359 is better than previous of -273.078

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -516.359 to -673.998 (0.02 seconds)
Cbc0038I Round again with cutoff of -859.114
Cbc0038I Pass   2: suminf.    0.67003 (3) obj. -859.114 iterations 3
Cbc0038I Pass   3: suminf.    0.55287 (4) obj. -859.114 iterations 2
Cbc0038I Pass   4: suminf.    0.98430 (3) obj. -859.114 iterations 3
Cbc0038I Pass   5: suminf.    0.82694 (3) obj. -859.114 iterations 2
Cbc0038I Pass   6: suminf.    0.75643 (3) obj. -859.114 iterations 2
Cbc0038I Pass   7: suminf.    1.06146 (4) obj. -859.114 iterations 4
Cbc0038I Pass   8: suminf.    0.94618 (5) obj. -859.114 iterations 2
Cbc0038I Pass   9: suminf.    0.89250 (4) obj. -859.114 iterations 1
Cbc0038I Pass  10: suminf.    1.34072 (7) obj. -859.114 iterations 5
Cbc0038I Pass  11: suminf.    1.34194 (6) obj. -859.114 iterations 1
Cbc0038I Pass  12: suminf.    1.21208 (4) obj. -859.114 iterations 6
Cbc0038I Pass  13: suminf.    0.98616 (4) obj. -859.114 iterations 3
Cbc0038I Pass  14: suminf.    1.25094 (3) obj. -859.114 iterations 6
Cbc0038I Pass  15: suminf.    1.16649 (3) obj. -859.114 iterations 1
Cbc0038I Pass  16: suminf.    1.33487 (4) obj. -859.114 iterations 3
Cbc0038I Pass  17: suminf.    1.64161 (6) obj. -859.114 iterations 13
Cbc0038I Pass  18: suminf.    1.64161 (6) obj. -859.114 iterations 3
Cbc0038I Pass  19: suminf.    1.07798 (3) obj. -859.114 iterations 7
Cbc0038I Pass  20: suminf.    1.07218 (4) obj. -859.114 iterations 1
Cbc0038I Pass  21: suminf.    1.57507 (5) obj. -859.114 iterations 4
Cbc0038I Pass  22: suminf.    1.55378 (6) obj. -859.114 iterations 2
Cbc0038I Pass  23: suminf.    2.04415 (9) obj. -859.114 iterations 7
Cbc0038I Pass  24: suminf.    1.99301 (10) obj. -859.114 iterations 1
Cbc0038I Pass  25: suminf.    1.99301 (10) obj. -859.114 iterations 0
Cbc0038I Pass  26: suminf.    2.54385 (7) obj. -859.114 iterations 8
Cbc0038I Pass  27: suminf.    2.24283 (7) obj. -859.114 iterations 1
Cbc0038I Pass  28: suminf.    1.87330 (8) obj. -859.114 iterations 1
Cbc0038I Pass  29: suminf.    1.87330 (8) obj. -859.114 iterations 0
Cbc0038I Pass  30: suminf.    2.14118 (6) obj. -859.114 iterations 7
Cbc0038I Pass  31: suminf.    1.25136 (4) obj. -859.114 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -673.998 - took 0.04 seconds
Cbc0012I Integer solution of -673.9983 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 90 rows 48 columns, reduced to 57 rows 33 columns
Cbc0031I 22 added rows had average density of 22.454545
Cbc0013I At root node, 22 cuts changed objective from -2525.1576 to -1617.0055 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5967 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1588 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 37.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -673.9982999999997, took 5575 iterations and 18 nodes (0.56 seconds)
Cbc0032I Strong branching done 382 times (7374 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-8) rows, 94 (-2) columns and 1349 (-64) elements
Clp1000I sum of infeasibilities 1.48495e-08 - average 1.64994e-10, 87 fixed columns
Coin0506I Presolve 4 (-86) rows, 7 (-87) columns and 17 (-1332) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -2868.2388
Clp0000I Optimal - objective value -2868.2388
Coin0511I After Postsolve, objective -2868.2388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 3.4237569e-05 ( 0.00053943608%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3346.8625
Clp0000I Optimal - objective value 3346.8625
Clp0000I Optimal - objective value 3346.8625
Coin0511I After Postsolve, objective 3346.8625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3346.862474 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 94 columns (94 integer (94 of which binary)) and 1357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 10.0858
Cbc0038I Pass   1: suminf.    2.65735 (22) obj. -1175.96 iterations 29
Cbc0038I Pass   2: suminf.    2.65735 (22) obj. -1175.96 iterations 3
Cbc0038I Pass   3: suminf.    0.75505 (11) obj. -91.9734 iterations 11
Cbc0038I Solution found of 471.583
Cbc0038I Rounding solution of 17.5733 is better than previous of 471.583

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 17.5733 to -261.437 (0.03 seconds)
Cbc0038I Round again with cutoff of -529.771
Cbc0038I Pass   4: suminf.    2.65735 (22) obj. -1175.96 iterations 0
Cbc0038I Pass   5: suminf.    2.65735 (22) obj. -1175.96 iterations 2
Cbc0038I Pass   6: suminf.    1.09944 (15) obj. -529.771 iterations 34
Cbc0038I Pass   7: suminf.    1.09944 (15) obj. -529.771 iterations 0
Cbc0038I Pass   8: suminf.    0.54373 (4) obj. -529.771 iterations 14
Cbc0038I Pass   9: suminf.    0.46573 (4) obj. -561.907 iterations 2
Cbc0038I Pass  10: suminf.    0.72950 (3) obj. -529.771 iterations 9
Cbc0038I Pass  11: suminf.    0.55651 (3) obj. -577.69 iterations 2
Cbc0038I Pass  12: suminf.    2.78844 (15) obj. -529.771 iterations 20
Cbc0038I Pass  13: suminf.    2.32245 (15) obj. -529.771 iterations 9
Cbc0038I Pass  14: suminf.    1.37236 (6) obj. -529.771 iterations 21
Cbc0038I Pass  15: suminf.    1.21040 (5) obj. -529.771 iterations 5
Cbc0038I Pass  16: suminf.    0.95621 (5) obj. -612.13 iterations 1
Cbc0038I Pass  17: suminf.    0.97621 (4) obj. -529.771 iterations 7
Cbc0038I Pass  18: suminf.    0.82361 (4) obj. -529.771 iterations 6
Cbc0038I Pass  19: suminf.    0.40203 (3) obj. -529.771 iterations 10
Cbc0038I Pass  20: suminf.    0.40203 (3) obj. -529.771 iterations 2
Cbc0038I Pass  21: suminf.    0.68685 (3) obj. -529.771 iterations 1
Cbc0038I Pass  22: suminf.    0.68685 (3) obj. -529.771 iterations 0
Cbc0038I Pass  23: suminf.    0.40203 (3) obj. -529.771 iterations 3
Cbc0038I Pass  24: suminf.    2.00820 (14) obj. -529.771 iterations 37
Cbc0038I Pass  25: suminf.    1.74896 (13) obj. -592.248 iterations 10
Cbc0038I Pass  26: suminf.    0.32842 (3) obj. -529.771 iterations 19
Cbc0038I Pass  27: suminf.    0.32242 (3) obj. -530.81 iterations 4
Cbc0038I Pass  28: suminf.    0.32842 (3) obj. -529.771 iterations 7
Cbc0038I Pass  29: suminf.    4.23139 (20) obj. -529.771 iterations 27
Cbc0038I Pass  30: suminf.    1.73681 (12) obj. -529.771 iterations 7
Cbc0038I Pass  31: suminf.    1.64238 (11) obj. -637.273 iterations 1
Cbc0038I Pass  32: suminf.    2.26908 (8) obj. -529.771 iterations 14
Cbc0038I Pass  33: suminf.    1.65545 (8) obj. -529.771 iterations 3
Cbc0038I Rounding solution of -441.174 is better than previous of -261.437

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 47 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -441.174 to -673.998 (0.05 seconds)
Cbc0038I Round again with cutoff of -1128.15
Cbc0038I Pass  33: suminf.    2.65735 (22) obj. -1175.96 iterations 0
Cbc0038I Pass  34: suminf.    2.65735 (22) obj. -1175.96 iterations 2
Cbc0038I Pass  35: suminf.    1.91633 (15) obj. -1128.15 iterations 34
Cbc0038I Pass  36: suminf.    1.91633 (15) obj. -1128.15 iterations 0
Cbc0038I Pass  37: suminf.    1.77014 (10) obj. -1128.15 iterations 23
Cbc0038I Pass  38: suminf.    1.77014 (10) obj. -1128.15 iterations 0
Cbc0038I Pass  39: suminf.    1.50190 (6) obj. -1128.15 iterations 16
Cbc0038I Pass  40: suminf.    1.12114 (5) obj. -1225.44 iterations 9
Cbc0038I Pass  41: suminf.    1.20351 (5) obj. -1128.15 iterations 14
Cbc0038I Pass  42: suminf.    1.20351 (5) obj. -1128.15 iterations 7
Cbc0038I Pass  43: suminf.    1.20470 (5) obj. -1128.15 iterations 5
Cbc0038I Pass  44: suminf.    1.20470 (5) obj. -1128.15 iterations 4
Cbc0038I Pass  45: suminf.    1.20351 (5) obj. -1128.15 iterations 7
Cbc0038I Pass  46: suminf.    3.29186 (14) obj. -1128.15 iterations 33
Cbc0038I Pass  47: suminf.    2.54483 (12) obj. -1128.15 iterations 8
Cbc0038I Pass  48: suminf.    2.29131 (11) obj. -1128.15 iterations 11
Cbc0038I Pass  49: suminf.    1.26493 (5) obj. -1128.15 iterations 15
Cbc0038I Pass  50: suminf.    1.26493 (5) obj. -1128.15 iterations 2
Cbc0038I Pass  51: suminf.    1.19007 (5) obj. -1128.15 iterations 4
Cbc0038I Pass  52: suminf.    1.07768 (5) obj. -1128.15 iterations 3
Cbc0038I Pass  53: suminf.    2.62005 (14) obj. -1128.15 iterations 30
Cbc0038I Pass  54: suminf.    2.49790 (12) obj. -1254.41 iterations 6
Cbc0038I Pass  55: suminf.    1.22750 (5) obj. -1128.15 iterations 15
Cbc0038I Pass  56: suminf.    1.14486 (5) obj. -1128.15 iterations 6
Cbc0038I Pass  57: suminf.    1.43078 (6) obj. -1128.15 iterations 7
Cbc0038I Pass  58: suminf.    1.43078 (6) obj. -1128.15 iterations 1
Cbc0038I Pass  59: suminf.    1.12291 (6) obj. -1128.15 iterations 9
Cbc0038I Pass  60: suminf.    1.12291 (6) obj. -1128.15 iterations 5
Cbc0038I Pass  61: suminf.    1.43078 (6) obj. -1128.15 iterations 4
Cbc0038I Pass  62: suminf.    2.68348 (12) obj. -1128.15 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -673.998 - took 0.05 seconds
Cbc0012I Integer solution of -673.9983 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 90 rows 94 columns, reduced to 6 rows 8 columns
Cbc0031I 61 added rows had average density of 32.081967
Cbc0013I At root node, 61 cuts changed objective from -2944.779 to -854.95936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14163 row cuts average 5.7 elements, 2 column cuts (18 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1589 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1046 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 399 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -673.9983 best solution, best possible -854.95936 (2.32 seconds)
Cbc0001I Search completed - best objective -673.9982999999997, took 4197 iterations and 10 nodes (2.53 seconds)
Cbc0032I Strong branching done 330 times (8208 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.85   (Wallclock seconds):       2.54

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 48 (-2) columns and 268 (-17) elements
Clp1000I sum of infeasibilities 4.98042e-06 - average 5.5338e-08, 5 fixed columns
Coin0506I Presolve 74 (-16) rows, 43 (-5) columns and 226 (-42) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.5314678 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2525.1576
Clp0000I Optimal - objective value 2525.1576
Coin0511I After Postsolve, objective 2525.1576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2525.1576
Clp0000I Optimal - objective value 2525.1576
Clp0000I Optimal - objective value 2525.1576
Coin0511I After Postsolve, objective 2525.1576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2525.157564 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 48 columns (47 integer (47 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 10.8493
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -273.078 iterations 34
Cbc0038I Solution found of -273.078
Cbc0038I Relaxing continuous gives -273.078
Cbc0038I Rounding solution of -516.359 is better than previous of -273.078

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -516.359 to -673.998 (0.03 seconds)
Cbc0038I Round again with cutoff of -859.114
Cbc0038I Pass   2: suminf.    0.67003 (3) obj. -859.114 iterations 3
Cbc0038I Pass   3: suminf.    0.55287 (4) obj. -859.114 iterations 2
Cbc0038I Pass   4: suminf.    0.98430 (3) obj. -859.114 iterations 3
Cbc0038I Pass   5: suminf.    0.82694 (3) obj. -859.114 iterations 2
Cbc0038I Pass   6: suminf.    0.75643 (3) obj. -859.114 iterations 2
Cbc0038I Pass   7: suminf.    1.06146 (4) obj. -859.114 iterations 4
Cbc0038I Pass   8: suminf.    0.94618 (5) obj. -859.114 iterations 2
Cbc0038I Pass   9: suminf.    0.89250 (4) obj. -859.114 iterations 1
Cbc0038I Pass  10: suminf.    1.34072 (7) obj. -859.114 iterations 5
Cbc0038I Pass  11: suminf.    1.34194 (6) obj. -859.114 iterations 1
Cbc0038I Pass  12: suminf.    1.21208 (4) obj. -859.114 iterations 6
Cbc0038I Pass  13: suminf.    0.98616 (4) obj. -859.114 iterations 3
Cbc0038I Pass  14: suminf.    1.25094 (3) obj. -859.114 iterations 6
Cbc0038I Pass  15: suminf.    1.16649 (3) obj. -859.114 iterations 1
Cbc0038I Pass  16: suminf.    1.33487 (4) obj. -859.114 iterations 3
Cbc0038I Pass  17: suminf.    1.64161 (6) obj. -859.114 iterations 13
Cbc0038I Pass  18: suminf.    1.64161 (6) obj. -859.114 iterations 3
Cbc0038I Pass  19: suminf.    1.07798 (3) obj. -859.114 iterations 7
Cbc0038I Pass  20: suminf.    1.07218 (4) obj. -859.114 iterations 1
Cbc0038I Pass  21: suminf.    1.57507 (5) obj. -859.114 iterations 4
Cbc0038I Pass  22: suminf.    1.55378 (6) obj. -859.114 iterations 2
Cbc0038I Pass  23: suminf.    2.04415 (9) obj. -859.114 iterations 7
Cbc0038I Pass  24: suminf.    1.99301 (10) obj. -859.114 iterations 1
Cbc0038I Pass  25: suminf.    1.99301 (10) obj. -859.114 iterations 0
Cbc0038I Pass  26: suminf.    2.54385 (7) obj. -859.114 iterations 8
Cbc0038I Pass  27: suminf.    2.24283 (7) obj. -859.114 iterations 1
Cbc0038I Pass  28: suminf.    1.87330 (8) obj. -859.114 iterations 1
Cbc0038I Pass  29: suminf.    1.87330 (8) obj. -859.114 iterations 0
Cbc0038I Pass  30: suminf.    2.14118 (6) obj. -859.114 iterations 7
Cbc0038I Pass  31: suminf.    1.25136 (4) obj. -859.114 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -673.998 - took 0.05 seconds
Cbc0012I Integer solution of -673.9983 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 90 rows 48 columns, reduced to 57 rows 33 columns
Cbc0031I 22 added rows had average density of 22.454545
Cbc0013I At root node, 22 cuts changed objective from -2525.1576 to -1617.0055 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5967 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1588 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 37.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -673.9982999999997, took 5575 iterations and 18 nodes (0.58 seconds)
Cbc0032I Strong branching done 382 times (7374 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 94 (-3) columns and 1349 (-65) elements
Clp1000I sum of infeasibilities 1.48495e-08 - average 1.64994e-10, 87 fixed columns
Coin0506I Presolve 4 (-86) rows, 7 (-87) columns and 17 (-1332) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -2868.2388
Clp0000I Optimal - objective value -2868.2388
Coin0511I After Postsolve, objective -2868.2388, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 3.4237569e-05 ( 0.00053943608%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3346.8625
Clp0000I Optimal - objective value 3346.8625
Clp0000I Optimal - objective value 3346.8625
Coin0511I After Postsolve, objective 3346.8625, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3346.862474 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 94 columns (94 integer (94 of which binary)) and 1357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 10.0858
Cbc0038I Pass   1: suminf.    2.65735 (22) obj. -1175.96 iterations 29
Cbc0038I Pass   2: suminf.    2.65735 (22) obj. -1175.96 iterations 3
Cbc0038I Pass   3: suminf.    0.75505 (11) obj. -91.9734 iterations 11
Cbc0038I Solution found of 471.583
Cbc0038I Rounding solution of 17.5733 is better than previous of 471.583

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 17.5733 to -261.437 (0.03 seconds)
Cbc0038I Round again with cutoff of -529.771
Cbc0038I Pass   4: suminf.    2.65735 (22) obj. -1175.96 iterations 0
Cbc0038I Pass   5: suminf.    2.65735 (22) obj. -1175.96 iterations 2
Cbc0038I Pass   6: suminf.    1.09944 (15) obj. -529.771 iterations 34
Cbc0038I Pass   7: suminf.    1.09944 (15) obj. -529.771 iterations 0
Cbc0038I Pass   8: suminf.    0.54373 (4) obj. -529.771 iterations 14
Cbc0038I Pass   9: suminf.    0.46573 (4) obj. -561.907 iterations 2
Cbc0038I Pass  10: suminf.    0.72950 (3) obj. -529.771 iterations 9
Cbc0038I Pass  11: suminf.    0.55651 (3) obj. -577.69 iterations 2
Cbc0038I Pass  12: suminf.    2.78844 (15) obj. -529.771 iterations 20
Cbc0038I Pass  13: suminf.    2.32245 (15) obj. -529.771 iterations 9
Cbc0038I Pass  14: suminf.    1.37236 (6) obj. -529.771 iterations 21
Cbc0038I Pass  15: suminf.    1.21040 (5) obj. -529.771 iterations 5
Cbc0038I Pass  16: suminf.    0.95621 (5) obj. -612.13 iterations 1
Cbc0038I Pass  17: suminf.    0.97621 (4) obj. -529.771 iterations 7
Cbc0038I Pass  18: suminf.    0.82361 (4) obj. -529.771 iterations 6
Cbc0038I Pass  19: suminf.    0.40203 (3) obj. -529.771 iterations 10
Cbc0038I Pass  20: suminf.    0.40203 (3) obj. -529.771 iterations 2
Cbc0038I Pass  21: suminf.    0.68685 (3) obj. -529.771 iterations 1
Cbc0038I Pass  22: suminf.    0.68685 (3) obj. -529.771 iterations 0
Cbc0038I Pass  23: suminf.    0.40203 (3) obj. -529.771 iterations 3
Cbc0038I Pass  24: suminf.    2.00820 (14) obj. -529.771 iterations 37
Cbc0038I Pass  25: suminf.    1.74896 (13) obj. -592.248 iterations 10
Cbc0038I Pass  26: suminf.    0.32842 (3) obj. -529.771 iterations 19
Cbc0038I Pass  27: suminf.    0.32242 (3) obj. -530.81 iterations 4
Cbc0038I Pass  28: suminf.    0.32842 (3) obj. -529.771 iterations 7
Cbc0038I Pass  29: suminf.    4.23139 (20) obj. -529.771 iterations 27
Cbc0038I Pass  30: suminf.    1.73681 (12) obj. -529.771 iterations 7
Cbc0038I Pass  31: suminf.    1.64238 (11) obj. -637.273 iterations 1
Cbc0038I Pass  32: suminf.    2.26908 (8) obj. -529.771 iterations 14
Cbc0038I Pass  33: suminf.    1.65545 (8) obj. -529.771 iterations 3
Cbc0038I Rounding solution of -441.174 is better than previous of -261.437

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 47 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -441.174 to -673.998 (0.05 seconds)
Cbc0038I Round again with cutoff of -1128.15
Cbc0038I Pass  33: suminf.    2.65735 (22) obj. -1175.96 iterations 0
Cbc0038I Pass  34: suminf.    2.65735 (22) obj. -1175.96 iterations 2
Cbc0038I Pass  35: suminf.    1.91633 (15) obj. -1128.15 iterations 34
Cbc0038I Pass  36: suminf.    1.91633 (15) obj. -1128.15 iterations 0
Cbc0038I Pass  37: suminf.    1.77014 (10) obj. -1128.15 iterations 23
Cbc0038I Pass  38: suminf.    1.77014 (10) obj. -1128.15 iterations 0
Cbc0038I Pass  39: suminf.    1.50190 (6) obj. -1128.15 iterations 16
Cbc0038I Pass  40: suminf.    1.12114 (5) obj. -1225.44 iterations 9
Cbc0038I Pass  41: suminf.    1.20351 (5) obj. -1128.15 iterations 14
Cbc0038I Pass  42: suminf.    1.20351 (5) obj. -1128.15 iterations 7
Cbc0038I Pass  43: suminf.    1.20470 (5) obj. -1128.15 iterations 5
Cbc0038I Pass  44: suminf.    1.20470 (5) obj. -1128.15 iterations 4
Cbc0038I Pass  45: suminf.    1.20351 (5) obj. -1128.15 iterations 7
Cbc0038I Pass  46: suminf.    3.29186 (14) obj. -1128.15 iterations 33
Cbc0038I Pass  47: suminf.    2.54483 (12) obj. -1128.15 iterations 8
Cbc0038I Pass  48: suminf.    2.29131 (11) obj. -1128.15 iterations 11
Cbc0038I Pass  49: suminf.    1.26493 (5) obj. -1128.15 iterations 15
Cbc0038I Pass  50: suminf.    1.26493 (5) obj. -1128.15 iterations 2
Cbc0038I Pass  51: suminf.    1.19007 (5) obj. -1128.15 iterations 4
Cbc0038I Pass  52: suminf.    1.07768 (5) obj. -1128.15 iterations 3
Cbc0038I Pass  53: suminf.    2.62005 (14) obj. -1128.15 iterations 30
Cbc0038I Pass  54: suminf.    2.49790 (12) obj. -1254.41 iterations 6
Cbc0038I Pass  55: suminf.    1.22750 (5) obj. -1128.15 iterations 15
Cbc0038I Pass  56: suminf.    1.14486 (5) obj. -1128.15 iterations 6
Cbc0038I Pass  57: suminf.    1.43078 (6) obj. -1128.15 iterations 7
Cbc0038I Pass  58: suminf.    1.43078 (6) obj. -1128.15 iterations 1
Cbc0038I Pass  59: suminf.    1.12291 (6) obj. -1128.15 iterations 9
Cbc0038I Pass  60: suminf.    1.12291 (6) obj. -1128.15 iterations 5
Cbc0038I Pass  61: suminf.    1.43078 (6) obj. -1128.15 iterations 4
Cbc0038I Pass  62: suminf.    2.68348 (12) obj. -1128.15 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -673.998 - took 0.06 seconds
Cbc0012I Integer solution of -673.9983 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 90 rows 94 columns, reduced to 6 rows 8 columns
Cbc0031I 61 added rows had average density of 32.081967
Cbc0013I At root node, 61 cuts changed objective from -2944.779 to -854.95936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14163 row cuts average 5.7 elements, 2 column cuts (18 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1589 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1046 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 399 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.670 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -673.9983 best solution, best possible -854.95936 (2.38 seconds)
Cbc0001I Search completed - best objective -673.9982999999997, took 4197 iterations and 10 nodes (2.60 seconds)
Cbc0032I Strong branching done 330 times (8208 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.88   (Wallclock seconds):       2.61

