Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-7) rows, 48 (-2) columns and 272 (-13) elements
Clp1000I sum of infeasibilities 5.5302e-05 - average 6.01109e-07, 1 fixed columns
Coin0506I Presolve 90 (-2) rows, 47 (-1) columns and 266 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 23.883943 - largest nonzero change 0 ( 0%) - largest zero change 1.0379096e-05
Clp0000I Optimal - objective value 2807.3326
Clp0000I Optimal - objective value 2807.3326
Coin0511I After Postsolve, objective 2807.3326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2807.3326
Clp0000I Optimal - objective value 2807.3326
Clp0000I Optimal - objective value 2807.3326
Coin0511I After Postsolve, objective 2807.3326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2807.332645 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 48 columns (47 integer (47 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.3309
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -535.112 iterations 47
Cbc0038I Solution found of -535.112
Cbc0038I Relaxing continuous gives -535.112
Cbc0038I Rounding solution of -777.275 is better than previous of -535.112

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -777.275 to -1389.16 (0.04 seconds)
Cbc0038I Round again with cutoff of -1530.98
Cbc0038I Pass   2: suminf.    3.02549 (16) obj. -1530.98 iterations 18
Cbc0038I Pass   3: suminf.    3.94194 (11) obj. -1530.98 iterations 21
Cbc0038I Pass   4: suminf.    2.84527 (9) obj. -1530.98 iterations 6
Cbc0038I Pass   5: suminf.    3.64142 (12) obj. -1530.98 iterations 14
Cbc0038I Pass   6: suminf.    3.64142 (12) obj. -1530.98 iterations 0
Cbc0038I Pass   7: suminf.    3.63445 (12) obj. -1530.98 iterations 6
Cbc0038I Pass   8: suminf.    3.46875 (11) obj. -1530.98 iterations 2
Cbc0038I Pass   9: suminf.    2.94327 (10) obj. -1530.98 iterations 1
Cbc0038I Pass  10: suminf.    2.38093 (9) obj. -1530.98 iterations 3
Cbc0038I Pass  11: suminf.    3.64142 (12) obj. -1530.98 iterations 9
Cbc0038I Pass  12: suminf.    3.64142 (12) obj. -1530.98 iterations 0
Cbc0038I Pass  13: suminf.    3.63445 (12) obj. -1530.98 iterations 6
Cbc0038I Pass  14: suminf.    3.46875 (11) obj. -1530.98 iterations 2
Cbc0038I Pass  15: suminf.    2.94327 (10) obj. -1530.98 iterations 1
Cbc0038I Pass  16: suminf.    2.38093 (9) obj. -1530.98 iterations 3
Cbc0038I Pass  17: suminf.    3.64142 (12) obj. -1530.98 iterations 9
Cbc0038I Pass  18: suminf.    3.64142 (12) obj. -1530.98 iterations 0
Cbc0038I Pass  19: suminf.    3.10158 (11) obj. -1530.98 iterations 11
Cbc0038I Pass  20: suminf.    2.90493 (8) obj. -1530.98 iterations 6
Cbc0038I Pass  21: suminf.    3.72717 (10) obj. -1530.98 iterations 4
Cbc0038I Pass  22: suminf.    3.72717 (10) obj. -1530.98 iterations 0
Cbc0038I Pass  23: suminf.    4.04207 (10) obj. -1530.98 iterations 5
Cbc0038I Pass  24: suminf.    3.38832 (10) obj. -1530.98 iterations 4
Cbc0038I Pass  25: suminf.    3.25929 (9) obj. -1530.98 iterations 1
Cbc0038I Pass  26: suminf.    2.94132 (8) obj. -1530.98 iterations 1
Cbc0038I Pass  27: suminf.    2.92024 (8) obj. -1530.98 iterations 1
Cbc0038I Pass  28: suminf.    3.72717 (10) obj. -1530.98 iterations 4
Cbc0038I Pass  29: suminf.    3.72717 (10) obj. -1530.98 iterations 0
Cbc0038I Pass  30: suminf.    4.04207 (10) obj. -1530.98 iterations 5
Cbc0038I Pass  31: suminf.    3.38832 (10) obj. -1530.98 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1389.16 - took 0.09 seconds
Cbc0012I Integer solution of -1389.1595 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 23 added rows had average density of 27.652174
Cbc0013I At root node, 23 cuts changed objective from -2807.3326 to -2187.68 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10205 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2006 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 201 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -1389.1595 best solution, best possible -2187.68 (0.70 seconds)
Cbc0001I Search completed - best objective -1389.1595, took 7329 iterations and 22 nodes (0.78 seconds)
Cbc0032I Strong branching done 366 times (8421 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 10, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-7) rows, 93 (-3) columns and 1347 (-66) elements
Clp1000I sum of infeasibilities 1.10962e-07 - average 1.21936e-09, 85 fixed columns
Coin0506I Presolve 4 (-87) rows, 5 (-88) columns and 11 (-1336) elements
Clp0006I 0  Obj -1337.0001 Dual inf 13.427476 (4)
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value -1309.7042
Clp0000I Optimal - objective value -1309.7042
Coin0511I After Postsolve, objective -1309.7042, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1309.7042 Dual inf 4788.9062 (61)
Clp0014I Perturbing problem by 0.001% of 3.4793029 - largest nonzero change 1.2711089e-05 ( 0.00020027182%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3391.0067
Clp0000I Optimal - objective value 3391.0067
Clp0000I Optimal - objective value 3391.0067
Coin0511I After Postsolve, objective 3391.0067, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3391.006741 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 93 columns (93 integer (93 of which binary)) and 1349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.239%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.01055
Cbc0038I Pass   1: suminf.    4.11090 (28) obj. -2469.68 iterations 21
Cbc0038I Pass   2: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass   3: suminf.    1.80282 (17) obj. -1806.73 iterations 11
Cbc0038I Pass   4: suminf.    0.26822 (6) obj. -821.605 iterations 11
Cbc0038I Solution found of -465.076
Cbc0038I Rounding solution of -762.597 is better than previous of -465.076

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1013.11
Cbc0038I Pass   5: suminf.    4.11090 (28) obj. -2469.68 iterations 0
Cbc0038I Pass   6: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass   7: suminf.    0.91309 (12) obj. -1013.11 iterations 34
Cbc0038I Pass   8: suminf.    0.81643 (11) obj. -1162.52 iterations 1
Cbc0038I Pass   9: suminf.    0.28559 (2) obj. -1013.11 iterations 15
Cbc0038I Pass  10: suminf.    0.26738 (2) obj. -1017.43 iterations 3
Cbc0038I Pass  11: suminf.    0.28559 (2) obj. -1013.11 iterations 4
Cbc0038I Pass  12: suminf.    2.12350 (9) obj. -1013.11 iterations 30
Cbc0038I Pass  13: suminf.    1.54152 (7) obj. -1013.11 iterations 3
Cbc0038I Pass  14: suminf.    1.21898 (7) obj. -1106.97 iterations 2
Cbc0038I Pass  15: suminf.    1.67993 (5) obj. -1013.11 iterations 14
Cbc0038I Pass  16: suminf.    1.67993 (5) obj. -1013.11 iterations 3
Cbc0038I Pass  17: suminf.    0.86951 (3) obj. -1013.11 iterations 5
Cbc0038I Pass  18: suminf.    0.86951 (3) obj. -1013.11 iterations 1
Cbc0038I Pass  19: suminf.    0.44484 (3) obj. -1013.11 iterations 2
Cbc0038I Pass  20: suminf.    0.44484 (3) obj. -1013.11 iterations 0
Cbc0038I Pass  21: suminf.    0.86951 (3) obj. -1013.11 iterations 1
Cbc0038I Pass  22: suminf.    4.03268 (17) obj. -1013.11 iterations 31
Cbc0038I Pass  23: suminf.    2.66716 (14) obj. -1013.11 iterations 10
Cbc0038I Pass  24: suminf.    1.24857 (5) obj. -1013.11 iterations 16
Cbc0038I Pass  25: suminf.    1.24857 (5) obj. -1013.11 iterations 0
Cbc0038I Pass  26: suminf.    0.72190 (4) obj. -1013.11 iterations 2
Cbc0038I Pass  27: suminf.    0.72190 (4) obj. -1013.11 iterations 0
Cbc0038I Pass  28: suminf.    0.89936 (4) obj. -1013.11 iterations 2
Cbc0038I Pass  29: suminf.    0.89936 (4) obj. -1013.11 iterations 0
Cbc0038I Pass  30: suminf.    0.72190 (4) obj. -1013.11 iterations 2
Cbc0038I Pass  31: suminf.    4.01535 (18) obj. -1013.11 iterations 18
Cbc0038I Pass  32: suminf.    1.37601 (9) obj. -1013.11 iterations 12
Cbc0038I Pass  33: suminf.    1.23598 (7) obj. -1054.86 iterations 3
Cbc0038I Pass  34: suminf.    0.84562 (5) obj. -1013.11 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 93 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -465.076 to -873.336 (0.04 seconds)
Cbc0038I Round again with cutoff of -1464.05
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.11090 (28) obj. -2469.68 iterations 0
Cbc0038I Pass  35: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass  36: suminf.    1.47232 (18) obj. -1464.05 iterations 29
Cbc0038I Pass  37: suminf.    1.46608 (17) obj. -1537.59 iterations 1
Cbc0038I Pass  38: suminf.    1.47407 (7) obj. -1464.05 iterations 24
Cbc0038I Pass  39: suminf.    1.47407 (7) obj. -1464.05 iterations 3
Cbc0038I Pass  40: suminf.    1.24819 (6) obj. -1464.05 iterations 3
Cbc0038I Pass  41: suminf.    1.24819 (6) obj. -1464.05 iterations 0
Cbc0038I Pass  42: suminf.    1.34096 (6) obj. -1464.05 iterations 3
Cbc0038I Pass  43: suminf.    1.34096 (6) obj. -1464.05 iterations 1
Cbc0038I Pass  44: suminf.    2.13740 (12) obj. -1464.05 iterations 26
Cbc0038I Pass  45: suminf.    1.81568 (12) obj. -1511.98 iterations 6
Cbc0038I Pass  46: suminf.    1.66365 (9) obj. -1464.05 iterations 16
Cbc0038I Pass  47: suminf.    1.49449 (9) obj. -1486.21 iterations 5
Cbc0038I Pass  48: suminf.    3.44188 (17) obj. -1464.05 iterations 17
Cbc0038I Pass  49: suminf.    2.70814 (15) obj. -1464.05 iterations 4
Cbc0038I Pass  50: suminf.    2.29102 (13) obj. -1510.37 iterations 2
Cbc0038I Pass  51: suminf.    1.98835 (12) obj. -1464.05 iterations 11
Cbc0038I Pass  52: suminf.    1.98835 (12) obj. -1464.05 iterations 0
Cbc0038I Pass  53: suminf.    1.82168 (11) obj. -1464.05 iterations 4
Cbc0038I Pass  54: suminf.    1.82168 (11) obj. -1464.05 iterations 0
Cbc0038I Pass  55: suminf.    1.68852 (11) obj. -1464.05 iterations 5
Cbc0038I Pass  56: suminf.    1.68852 (11) obj. -1464.05 iterations 0
Cbc0038I Pass  57: suminf.    1.82168 (11) obj. -1464.05 iterations 1
Cbc0038I Pass  58: suminf.    1.86677 (14) obj. -1464.05 iterations 19
Cbc0038I Pass  59: suminf.    1.82958 (13) obj. -1484.83 iterations 3
Cbc0038I Pass  60: suminf.    2.10996 (12) obj. -1464.05 iterations 13
Cbc0038I Pass  61: suminf.    1.88827 (12) obj. -1491.76 iterations 3
Cbc0038I Pass  62: suminf.    2.65581 (14) obj. -1464.05 iterations 24
Cbc0038I Pass  63: suminf.    1.87212 (12) obj. -1612.97 iterations 4
Cbc0038I Rounding solution of -1225.26 is better than previous of -873.336

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 93 columns, reduced to 29 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -1225.26 to -1362.26 (0.06 seconds)
Cbc0038I Round again with cutoff of -2005.16
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    4.11090 (28) obj. -2469.68 iterations 0
Cbc0038I Pass  64: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass  65: suminf.    2.29369 (12) obj. -2005.16 iterations 44
Cbc0038I Pass  66: suminf.    2.18484 (12) obj. -2021.38 iterations 5
Cbc0038I Pass  67: suminf.    2.40373 (11) obj. -2005.16 iterations 11
Cbc0038I Pass  68: suminf.    2.40373 (11) obj. -2005.16 iterations 1
Cbc0038I Pass  69: suminf.    2.26434 (11) obj. -2005.16 iterations 4
Cbc0038I Pass  70: suminf.    2.26434 (11) obj. -2005.16 iterations 1
Cbc0038I Pass  71: suminf.    2.40373 (11) obj. -2005.16 iterations 2
Cbc0038I Pass  72: suminf.    3.19412 (14) obj. -2005.16 iterations 33
Cbc0038I Pass  73: suminf.    3.19412 (14) obj. -2005.16 iterations 4
Cbc0038I Pass  74: suminf.    2.63610 (13) obj. -2005.16 iterations 6
Cbc0038I Pass  75: suminf.    2.63610 (13) obj. -2005.16 iterations 1
Cbc0038I Pass  76: suminf.    2.44554 (12) obj. -2005.16 iterations 3
Cbc0038I Pass  77: suminf.    2.39307 (12) obj. -2011.88 iterations 3
Cbc0038I Pass  78: suminf.    2.63610 (13) obj. -2005.16 iterations 7
Cbc0038I Pass  79: suminf.    3.65781 (17) obj. -2005.16 iterations 28
Cbc0038I Pass  80: suminf.    2.90224 (16) obj. -2005.16 iterations 10
Cbc0038I Pass  81: suminf.    2.50464 (15) obj. -2131 iterations 2
Cbc0038I Pass  82: suminf.    2.39609 (12) obj. -2005.16 iterations 16
Cbc0038I Pass  83: suminf.    2.39609 (12) obj. -2005.16 iterations 1
Cbc0038I Pass  84: suminf.    2.53766 (12) obj. -2005.16 iterations 2
Cbc0038I Pass  85: suminf.    2.23244 (12) obj. -2044.23 iterations 3
Cbc0038I Pass  86: suminf.    3.22165 (16) obj. -2005.16 iterations 17
Cbc0038I Pass  87: suminf.    2.91031 (15) obj. -2060.27 iterations 10
Cbc0038I Pass  88: suminf.    2.32009 (12) obj. -2005.16 iterations 9
Cbc0038I Pass  89: suminf.    2.32009 (12) obj. -2005.16 iterations 2
Cbc0038I Pass  90: suminf.    2.55697 (12) obj. -2005.16 iterations 2
Cbc0038I Pass  91: suminf.    2.20466 (12) obj. -2050.26 iterations 3
Cbc0038I Pass  92: suminf.    2.32009 (12) obj. -2005.16 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1362.26 - took 0.06 seconds
Cbc0012I Integer solution of -1362.2585 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 91 rows 93 columns, reduced to 21 rows 27 columns
Cbc0012I Integer solution of -1389.1595 found by DiveCoefficient after 323 iterations and 0 nodes (0.18 seconds)
Cbc0031I 49 added rows had average density of 17.285714
Cbc0013I At root node, 49 cuts changed objective from -3267.7727 to -1389.1595 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 1258 row cuts average 5.6 elements, 15 column cuts (41 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1389.1595, took 323 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-7) rows, 48 (-2) columns and 272 (-13) elements
Clp1000I sum of infeasibilities 5.5302e-05 - average 6.01109e-07, 1 fixed columns
Coin0506I Presolve 90 (-2) rows, 47 (-1) columns and 266 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 23.883943 - largest nonzero change 0 ( 0%) - largest zero change 1.0379096e-05
Clp0000I Optimal - objective value 2807.3326
Clp0000I Optimal - objective value 2807.3326
Coin0511I After Postsolve, objective 2807.3326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2807.3326
Clp0000I Optimal - objective value 2807.3326
Clp0000I Optimal - objective value 2807.3326
Coin0511I After Postsolve, objective 2807.3326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2807.332645 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 48 columns (47 integer (47 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.3309
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -535.112 iterations 47
Cbc0038I Solution found of -535.112
Cbc0038I Relaxing continuous gives -535.112
Cbc0038I Rounding solution of -777.275 is better than previous of -535.112

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -777.275 to -1389.16 (0.04 seconds)
Cbc0038I Round again with cutoff of -1530.98
Cbc0038I Pass   2: suminf.    3.02549 (16) obj. -1530.98 iterations 18
Cbc0038I Pass   3: suminf.    3.94194 (11) obj. -1530.98 iterations 21
Cbc0038I Pass   4: suminf.    2.84527 (9) obj. -1530.98 iterations 6
Cbc0038I Pass   5: suminf.    3.64142 (12) obj. -1530.98 iterations 14
Cbc0038I Pass   6: suminf.    3.64142 (12) obj. -1530.98 iterations 0
Cbc0038I Pass   7: suminf.    3.63445 (12) obj. -1530.98 iterations 6
Cbc0038I Pass   8: suminf.    3.46875 (11) obj. -1530.98 iterations 2
Cbc0038I Pass   9: suminf.    2.94327 (10) obj. -1530.98 iterations 1
Cbc0038I Pass  10: suminf.    2.38093 (9) obj. -1530.98 iterations 3
Cbc0038I Pass  11: suminf.    3.64142 (12) obj. -1530.98 iterations 9
Cbc0038I Pass  12: suminf.    3.64142 (12) obj. -1530.98 iterations 0
Cbc0038I Pass  13: suminf.    3.63445 (12) obj. -1530.98 iterations 6
Cbc0038I Pass  14: suminf.    3.46875 (11) obj. -1530.98 iterations 2
Cbc0038I Pass  15: suminf.    2.94327 (10) obj. -1530.98 iterations 1
Cbc0038I Pass  16: suminf.    2.38093 (9) obj. -1530.98 iterations 3
Cbc0038I Pass  17: suminf.    3.64142 (12) obj. -1530.98 iterations 9
Cbc0038I Pass  18: suminf.    3.64142 (12) obj. -1530.98 iterations 0
Cbc0038I Pass  19: suminf.    3.10158 (11) obj. -1530.98 iterations 11
Cbc0038I Pass  20: suminf.    2.90493 (8) obj. -1530.98 iterations 6
Cbc0038I Pass  21: suminf.    3.72717 (10) obj. -1530.98 iterations 4
Cbc0038I Pass  22: suminf.    3.72717 (10) obj. -1530.98 iterations 0
Cbc0038I Pass  23: suminf.    4.04207 (10) obj. -1530.98 iterations 5
Cbc0038I Pass  24: suminf.    3.38832 (10) obj. -1530.98 iterations 4
Cbc0038I Pass  25: suminf.    3.25929 (9) obj. -1530.98 iterations 1
Cbc0038I Pass  26: suminf.    2.94132 (8) obj. -1530.98 iterations 1
Cbc0038I Pass  27: suminf.    2.92024 (8) obj. -1530.98 iterations 1
Cbc0038I Pass  28: suminf.    3.72717 (10) obj. -1530.98 iterations 4
Cbc0038I Pass  29: suminf.    3.72717 (10) obj. -1530.98 iterations 0
Cbc0038I Pass  30: suminf.    4.04207 (10) obj. -1530.98 iterations 5
Cbc0038I Pass  31: suminf.    3.38832 (10) obj. -1530.98 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 48 columns, reduced to 84 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1389.16 - took 0.10 seconds
Cbc0012I Integer solution of -1389.1595 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 23 added rows had average density of 27.652174
Cbc0013I At root node, 23 cuts changed objective from -2807.3326 to -2187.68 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10205 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2006 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 201 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -1389.1595 best solution, best possible -2187.68 (0.71 seconds)
Cbc0001I Search completed - best objective -1389.1595, took 7329 iterations and 22 nodes (0.83 seconds)
Cbc0032I Strong branching done 366 times (8421 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 10, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.84

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 93 (-4) columns and 1347 (-67) elements
Clp1000I sum of infeasibilities 1.10962e-07 - average 1.21936e-09, 85 fixed columns
Coin0506I Presolve 4 (-87) rows, 5 (-88) columns and 11 (-1336) elements
Clp0006I 0  Obj -1337.0001 Dual inf 13.427476 (4)
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value -1309.7042
Clp0000I Optimal - objective value -1309.7042
Coin0511I After Postsolve, objective -1309.7042, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1309.7042 Dual inf 4788.9062 (61)
Clp0014I Perturbing problem by 0.001% of 3.4793029 - largest nonzero change 1.2711089e-05 ( 0.00020027182%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3391.0067
Clp0000I Optimal - objective value 3391.0067
Clp0000I Optimal - objective value 3391.0067
Coin0511I After Postsolve, objective 3391.0067, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3391.006741 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 93 columns (93 integer (93 of which binary)) and 1349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.239%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.01055
Cbc0038I Pass   1: suminf.    4.11090 (28) obj. -2469.68 iterations 21
Cbc0038I Pass   2: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass   3: suminf.    1.80282 (17) obj. -1806.73 iterations 11
Cbc0038I Pass   4: suminf.    0.26822 (6) obj. -821.605 iterations 11
Cbc0038I Solution found of -465.076
Cbc0038I Rounding solution of -762.597 is better than previous of -465.076

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1013.11
Cbc0038I Pass   5: suminf.    4.11090 (28) obj. -2469.68 iterations 0
Cbc0038I Pass   6: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass   7: suminf.    0.91309 (12) obj. -1013.11 iterations 34
Cbc0038I Pass   8: suminf.    0.81643 (11) obj. -1162.52 iterations 1
Cbc0038I Pass   9: suminf.    0.28559 (2) obj. -1013.11 iterations 15
Cbc0038I Pass  10: suminf.    0.26738 (2) obj. -1017.43 iterations 3
Cbc0038I Pass  11: suminf.    0.28559 (2) obj. -1013.11 iterations 4
Cbc0038I Pass  12: suminf.    2.12350 (9) obj. -1013.11 iterations 30
Cbc0038I Pass  13: suminf.    1.54152 (7) obj. -1013.11 iterations 3
Cbc0038I Pass  14: suminf.    1.21898 (7) obj. -1106.97 iterations 2
Cbc0038I Pass  15: suminf.    1.67993 (5) obj. -1013.11 iterations 14
Cbc0038I Pass  16: suminf.    1.67993 (5) obj. -1013.11 iterations 3
Cbc0038I Pass  17: suminf.    0.86951 (3) obj. -1013.11 iterations 5
Cbc0038I Pass  18: suminf.    0.86951 (3) obj. -1013.11 iterations 1
Cbc0038I Pass  19: suminf.    0.44484 (3) obj. -1013.11 iterations 2
Cbc0038I Pass  20: suminf.    0.44484 (3) obj. -1013.11 iterations 0
Cbc0038I Pass  21: suminf.    0.86951 (3) obj. -1013.11 iterations 1
Cbc0038I Pass  22: suminf.    4.03268 (17) obj. -1013.11 iterations 31
Cbc0038I Pass  23: suminf.    2.66716 (14) obj. -1013.11 iterations 10
Cbc0038I Pass  24: suminf.    1.24857 (5) obj. -1013.11 iterations 16
Cbc0038I Pass  25: suminf.    1.24857 (5) obj. -1013.11 iterations 0
Cbc0038I Pass  26: suminf.    0.72190 (4) obj. -1013.11 iterations 2
Cbc0038I Pass  27: suminf.    0.72190 (4) obj. -1013.11 iterations 0
Cbc0038I Pass  28: suminf.    0.89936 (4) obj. -1013.11 iterations 2
Cbc0038I Pass  29: suminf.    0.89936 (4) obj. -1013.11 iterations 0
Cbc0038I Pass  30: suminf.    0.72190 (4) obj. -1013.11 iterations 2
Cbc0038I Pass  31: suminf.    4.01535 (18) obj. -1013.11 iterations 18
Cbc0038I Pass  32: suminf.    1.37601 (9) obj. -1013.11 iterations 12
Cbc0038I Pass  33: suminf.    1.23598 (7) obj. -1054.86 iterations 3
Cbc0038I Pass  34: suminf.    0.84562 (5) obj. -1013.11 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 93 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -465.076 to -873.336 (0.03 seconds)
Cbc0038I Round again with cutoff of -1464.05
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.11090 (28) obj. -2469.68 iterations 0
Cbc0038I Pass  35: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass  36: suminf.    1.47232 (18) obj. -1464.05 iterations 29
Cbc0038I Pass  37: suminf.    1.46608 (17) obj. -1537.59 iterations 1
Cbc0038I Pass  38: suminf.    1.47407 (7) obj. -1464.05 iterations 24
Cbc0038I Pass  39: suminf.    1.47407 (7) obj. -1464.05 iterations 3
Cbc0038I Pass  40: suminf.    1.24819 (6) obj. -1464.05 iterations 3
Cbc0038I Pass  41: suminf.    1.24819 (6) obj. -1464.05 iterations 0
Cbc0038I Pass  42: suminf.    1.34096 (6) obj. -1464.05 iterations 3
Cbc0038I Pass  43: suminf.    1.34096 (6) obj. -1464.05 iterations 1
Cbc0038I Pass  44: suminf.    2.13740 (12) obj. -1464.05 iterations 26
Cbc0038I Pass  45: suminf.    1.81568 (12) obj. -1511.98 iterations 6
Cbc0038I Pass  46: suminf.    1.66365 (9) obj. -1464.05 iterations 16
Cbc0038I Pass  47: suminf.    1.49449 (9) obj. -1486.21 iterations 5
Cbc0038I Pass  48: suminf.    3.44188 (17) obj. -1464.05 iterations 17
Cbc0038I Pass  49: suminf.    2.70814 (15) obj. -1464.05 iterations 4
Cbc0038I Pass  50: suminf.    2.29102 (13) obj. -1510.37 iterations 2
Cbc0038I Pass  51: suminf.    1.98835 (12) obj. -1464.05 iterations 11
Cbc0038I Pass  52: suminf.    1.98835 (12) obj. -1464.05 iterations 0
Cbc0038I Pass  53: suminf.    1.82168 (11) obj. -1464.05 iterations 4
Cbc0038I Pass  54: suminf.    1.82168 (11) obj. -1464.05 iterations 0
Cbc0038I Pass  55: suminf.    1.68852 (11) obj. -1464.05 iterations 5
Cbc0038I Pass  56: suminf.    1.68852 (11) obj. -1464.05 iterations 0
Cbc0038I Pass  57: suminf.    1.82168 (11) obj. -1464.05 iterations 1
Cbc0038I Pass  58: suminf.    1.86677 (14) obj. -1464.05 iterations 19
Cbc0038I Pass  59: suminf.    1.82958 (13) obj. -1484.83 iterations 3
Cbc0038I Pass  60: suminf.    2.10996 (12) obj. -1464.05 iterations 13
Cbc0038I Pass  61: suminf.    1.88827 (12) obj. -1491.76 iterations 3
Cbc0038I Pass  62: suminf.    2.65581 (14) obj. -1464.05 iterations 24
Cbc0038I Pass  63: suminf.    1.87212 (12) obj. -1612.97 iterations 4
Cbc0038I Rounding solution of -1225.26 is better than previous of -873.336

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 93 columns, reduced to 29 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -1225.26 to -1362.26 (0.06 seconds)
Cbc0038I Round again with cutoff of -2005.16
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    4.11090 (28) obj. -2469.68 iterations 0
Cbc0038I Pass  64: suminf.    4.11090 (28) obj. -2469.68 iterations 2
Cbc0038I Pass  65: suminf.    2.29369 (12) obj. -2005.16 iterations 44
Cbc0038I Pass  66: suminf.    2.18484 (12) obj. -2021.38 iterations 5
Cbc0038I Pass  67: suminf.    2.40373 (11) obj. -2005.16 iterations 11
Cbc0038I Pass  68: suminf.    2.40373 (11) obj. -2005.16 iterations 1
Cbc0038I Pass  69: suminf.    2.26434 (11) obj. -2005.16 iterations 4
Cbc0038I Pass  70: suminf.    2.26434 (11) obj. -2005.16 iterations 1
Cbc0038I Pass  71: suminf.    2.40373 (11) obj. -2005.16 iterations 2
Cbc0038I Pass  72: suminf.    3.19412 (14) obj. -2005.16 iterations 33
Cbc0038I Pass  73: suminf.    3.19412 (14) obj. -2005.16 iterations 4
Cbc0038I Pass  74: suminf.    2.63610 (13) obj. -2005.16 iterations 6
Cbc0038I Pass  75: suminf.    2.63610 (13) obj. -2005.16 iterations 1
Cbc0038I Pass  76: suminf.    2.44554 (12) obj. -2005.16 iterations 3
Cbc0038I Pass  77: suminf.    2.39307 (12) obj. -2011.88 iterations 3
Cbc0038I Pass  78: suminf.    2.63610 (13) obj. -2005.16 iterations 7
Cbc0038I Pass  79: suminf.    3.65781 (17) obj. -2005.16 iterations 28
Cbc0038I Pass  80: suminf.    2.90224 (16) obj. -2005.16 iterations 10
Cbc0038I Pass  81: suminf.    2.50464 (15) obj. -2131 iterations 2
Cbc0038I Pass  82: suminf.    2.39609 (12) obj. -2005.16 iterations 16
Cbc0038I Pass  83: suminf.    2.39609 (12) obj. -2005.16 iterations 1
Cbc0038I Pass  84: suminf.    2.53766 (12) obj. -2005.16 iterations 2
Cbc0038I Pass  85: suminf.    2.23244 (12) obj. -2044.23 iterations 3
Cbc0038I Pass  86: suminf.    3.22165 (16) obj. -2005.16 iterations 17
Cbc0038I Pass  87: suminf.    2.91031 (15) obj. -2060.27 iterations 10
Cbc0038I Pass  88: suminf.    2.32009 (12) obj. -2005.16 iterations 9
Cbc0038I Pass  89: suminf.    2.32009 (12) obj. -2005.16 iterations 2
Cbc0038I Pass  90: suminf.    2.55697 (12) obj. -2005.16 iterations 2
Cbc0038I Pass  91: suminf.    2.20466 (12) obj. -2050.26 iterations 3
Cbc0038I Pass  92: suminf.    2.32009 (12) obj. -2005.16 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1362.26 - took 0.07 seconds
Cbc0012I Integer solution of -1362.2585 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 91 rows 93 columns, reduced to 21 rows 27 columns
Cbc0012I Integer solution of -1389.1595 found by DiveCoefficient after 323 iterations and 0 nodes (0.18 seconds)
Cbc0031I 49 added rows had average density of 17.285714
Cbc0013I At root node, 49 cuts changed objective from -3267.7727 to -1389.1595 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 1258 row cuts average 5.6 elements, 15 column cuts (41 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1389.1595, took 323 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.19

