Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 32 (-31) rows, 18 (-14) columns and 94 (-83) elements
Clp0000I Optimal - objective value 105.98359
Coin0511I After Postsolve, objective 105.98359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.9835947 - 17 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 32 rows, 18 columns (17 integer (17 of which binary)) and 94 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.655%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.73836
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -54 iterations 10
Cbc0038I Solution found of -54
Cbc0038I Relaxing continuous gives -54
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 18 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -54 to -55 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.9983
Cbc0038I Pass   2: suminf.    0.06929 (1) obj. -60.9983 iterations 1
Cbc0038I Pass   3: suminf.    0.21346 (1) obj. -60.9983 iterations 2
Cbc0038I Pass   4: suminf.    0.10342 (1) obj. -60.9983 iterations 2
Cbc0038I Pass   5: suminf.    0.37903 (1) obj. -60.9983 iterations 1
Cbc0038I Pass   6: suminf.    0.47234 (2) obj. -60.9983 iterations 5
Cbc0038I Pass   7: suminf.    1.66740 (6) obj. -60.9983 iterations 4
Cbc0038I Pass   8: suminf.    0.58911 (2) obj. -60.9983 iterations 3
Cbc0038I Pass   9: suminf.    0.46557 (2) obj. -60.9983 iterations 9
Cbc0038I Pass  10: suminf.    0.46557 (2) obj. -60.9983 iterations 3
Cbc0038I Pass  11: suminf.    0.61648 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  12: suminf.    0.54057 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  13: suminf.    0.46557 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  14: suminf.    0.46557 (2) obj. -60.9983 iterations 0
Cbc0038I Pass  15: suminf.    0.57889 (2) obj. -60.9983 iterations 2
Cbc0038I Pass  16: suminf.    0.43100 (1) obj. -60.9983 iterations 1
Cbc0038I Pass  17: suminf.    0.45161 (1) obj. -60.9983 iterations 1
Cbc0038I Pass  18: suminf.    1.12244 (3) obj. -60.9983 iterations 4
Cbc0038I Pass  19: suminf.    0.61061 (2) obj. -60.9983 iterations 3
Cbc0038I Pass  20: suminf.    0.62306 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  21: suminf.    0.57505 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  22: suminf.    0.61061 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  23: suminf.    0.81417 (4) obj. -60.9983 iterations 1
Cbc0038I Pass  24: suminf.    0.53427 (3) obj. -60.9983 iterations 1
Cbc0038I Pass  25: suminf.    0.58261 (2) obj. -60.9983 iterations 2
Cbc0038I Pass  26: suminf.    0.57505 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  27: suminf.    0.64436 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  28: suminf.    0.64436 (2) obj. -60.9983 iterations 2
Cbc0038I Pass  29: suminf.    0.62443 (5) obj. -60.9983 iterations 2
Cbc0038I Pass  30: suminf.    0.45030 (2) obj. -60.9983 iterations 5
Cbc0038I Pass  31: suminf.    0.45030 (2) obj. -60.9983 iterations 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 18 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -69.9953
Cbc0038I Pass  31: suminf.    0.21001 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  32: suminf.    0.43134 (2) obj. -69.9953 iterations 2
Cbc0038I Pass  33: suminf.    0.31455 (1) obj. -69.9953 iterations 1
Cbc0038I Pass  34: suminf.    0.25854 (1) obj. -69.9953 iterations 2
Cbc0038I Pass  35: suminf.    0.37903 (1) obj. -69.9953 iterations 1
Cbc0038I Pass  36: suminf.    0.62538 (3) obj. -69.9953 iterations 5
Cbc0038I Pass  37: suminf.    0.62538 (3) obj. -69.9953 iterations 0
Cbc0038I Pass  38: suminf.    0.49235 (2) obj. -69.9953 iterations 2
Cbc0038I Pass  39: suminf.    0.40259 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  40: suminf.    0.27269 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  41: suminf.    0.27269 (2) obj. -69.9953 iterations 0
Cbc0038I Pass  42: suminf.    1.70407 (5) obj. -69.9953 iterations 7
Cbc0038I Pass  43: suminf.    1.00894 (3) obj. -69.9953 iterations 3
Cbc0038I Pass  44: suminf.    1.12068 (3) obj. -69.9953 iterations 3
Cbc0038I Pass  45: suminf.    1.12068 (3) obj. -69.9953 iterations 0
Cbc0038I Pass  46: suminf.    1.14642 (3) obj. -69.9953 iterations 2
Cbc0038I Pass  47: suminf.    0.43299 (2) obj. -69.9953 iterations 2
Cbc0038I Pass  48: suminf.    0.43299 (2) obj. -69.9953 iterations 0
Cbc0038I Pass  49: suminf.    0.45190 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  50: suminf.    0.40259 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  51: suminf.    0.79086 (5) obj. -69.9953 iterations 7
Cbc0038I Pass  52: suminf.    0.78545 (5) obj. -69.9953 iterations 5
Cbc0038I Pass  53: suminf.    0.62306 (2) obj. -69.9953 iterations 6
Cbc0038I Pass  54: suminf.    0.42133 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  55: suminf.    0.87682 (2) obj. -69.9953 iterations 3
Cbc0038I Pass  56: suminf.    0.47649 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  57: suminf.    0.64747 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  58: suminf.    0.48749 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  59: suminf.    3.81008 (12) obj. -69.9953 iterations 10
Cbc0038I Pass  60: suminf.    1.12662 (4) obj. -69.9953 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 18 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -55 - took 0.02 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 32 rows 18 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -105.98359 to -52 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.3 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -55, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-23) rows, 41 (-19) columns and 280 (-332) elements
Clp1000I sum of infeasibilities 2.69403e-09 - average 6.90776e-11, 19 fixed columns
Coin0506I Presolve 9 (-30) rows, 11 (-30) columns and 39 (-241) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 120.13693
Clp0000I Optimal - objective value 120.13693
Coin0511I After Postsolve, objective 120.13693, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5153971 - largest nonzero change 2.9235226e-05 ( 0.0025942613%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 152.30995
Clp0000I Optimal - objective value 152.30995
Clp0000I Optimal - objective value 152.30995
Coin0511I After Postsolve, objective 152.30995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 152.3099546 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 42 columns (42 integer (42 of which binary)) and 284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.06473
Cbc0038I Pass   1: suminf.    1.73459 (9) obj. -48.1181 iterations 12
Cbc0038I Pass   2: suminf.    1.73459 (9) obj. -48.1181 iterations 2
Cbc0038I Solution found of 17
Cbc0038I Rounding solution of 12 is better than previous of 17

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 42 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 12 to -53 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.8527
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.23513 (14) obj. -60.8527 iterations 4
Cbc0038I Pass   4: suminf.    2.23513 (14) obj. -60.8527 iterations 0
Cbc0038I Pass   5: suminf.    0.42849 (1) obj. -60.8527 iterations 18
Cbc0038I Pass   6: suminf.    0.45161 (1) obj. -67.8065 iterations 1
Cbc0038I Pass   7: suminf.    1.45546 (5) obj. -60.8527 iterations 4
Cbc0038I Pass   8: suminf.    1.19447 (4) obj. -87.7373 iterations 1
Cbc0038I Pass   9: suminf.    2.29491 (8) obj. -82.4529 iterations 8
Cbc0038I Pass  10: suminf.    2.29491 (8) obj. -82.4529 iterations 2
Cbc0038I Pass  11: suminf.    0.81346 (2) obj. -60.8527 iterations 7
Cbc0038I Pass  12: suminf.    0.81346 (2) obj. -60.8527 iterations 0
Cbc0038I Pass  13: suminf.    0.83475 (2) obj. -60.8527 iterations 1
Cbc0038I Pass  14: suminf.    1.52971 (4) obj. -60.8527 iterations 4
Cbc0038I Pass  15: suminf.    1.52971 (4) obj. -60.8527 iterations 0
Cbc0038I Pass  16: suminf.    0.62733 (2) obj. -60.8527 iterations 3
Cbc0038I Pass  17: suminf.    0.62733 (2) obj. -60.8527 iterations 0
Cbc0038I Pass  18: suminf.    0.77012 (2) obj. -60.8527 iterations 1
Cbc0038I Pass  19: suminf.    1.60204 (7) obj. -60.8527 iterations 10
Cbc0038I Pass  20: suminf.    0.92976 (2) obj. -60.8527 iterations 8
Cbc0038I Pass  21: suminf.    0.85806 (2) obj. -62.6452 iterations 1
Cbc0038I Pass  22: suminf.    0.92976 (2) obj. -60.8527 iterations 1
Cbc0038I Pass  23: suminf.    2.16167 (8) obj. -60.8527 iterations 7
Cbc0038I Pass  24: suminf.    2.16167 (8) obj. -60.8527 iterations 0
Cbc0038I Pass  25: suminf.    3.26552 (18) obj. -60.8527 iterations 15
Cbc0038I Pass  26: suminf.    3.26552 (18) obj. -60.8527 iterations 2
Cbc0038I Pass  27: suminf.    0.92976 (2) obj. -60.8527 iterations 20
Cbc0038I Pass  28: suminf.    0.85806 (2) obj. -62.6452 iterations 1
Cbc0038I Pass  29: suminf.    2.22294 (7) obj. -60.8527 iterations 7
Cbc0038I Pass  30: suminf.    1.72529 (6) obj. -60.8527 iterations 2
Cbc0038I Pass  31: suminf.    1.35865 (3) obj. -60.8527 iterations 6
Cbc0038I Pass  32: suminf.    0.76352 (2) obj. -60.8527 iterations 1
Cbc0038I Rounding solution of -55 is better than previous of -53

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -73.1876
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.71997 (14) obj. -73.1876 iterations 0
Cbc0038I Pass  33: suminf.    2.71997 (14) obj. -73.1876 iterations 0
Cbc0038I Pass  34: suminf.    0.66686 (2) obj. -73.1876 iterations 17
Cbc0038I Pass  35: suminf.    0.66686 (2) obj. -73.1876 iterations 0
Cbc0038I Pass  36: suminf.    0.75877 (2) obj. -73.1876 iterations 1
Cbc0038I Pass  37: suminf.    1.29337 (4) obj. -73.1876 iterations 5
Cbc0038I Pass  38: suminf.    1.29337 (4) obj. -73.1876 iterations 0
Cbc0038I Pass  39: suminf.    0.49194 (1) obj. -73.4677 iterations 4
Cbc0038I Pass  40: suminf.    0.49676 (1) obj. -73.1876 iterations 1
Cbc0038I Pass  41: suminf.    1.18476 (3) obj. -73.1876 iterations 8
Cbc0038I Pass  42: suminf.    1.18476 (3) obj. -73.1876 iterations 3
Cbc0038I Pass  43: suminf.    0.92218 (2) obj. -73.1876 iterations 2
Cbc0038I Pass  44: suminf.    0.92073 (2) obj. -73.1876 iterations 1
Cbc0038I Pass  45: suminf.    2.17595 (6) obj. -73.1876 iterations 7
Cbc0038I Pass  46: suminf.    1.90018 (5) obj. -73.1876 iterations 1
Cbc0038I Pass  47: suminf.    1.12683 (3) obj. -73.1876 iterations 3
Cbc0038I Pass  48: suminf.    1.12683 (3) obj. -73.1876 iterations 0
Cbc0038I Pass  49: suminf.    1.22312 (3) obj. -77.4839 iterations 1
Cbc0038I Pass  50: suminf.    1.05127 (3) obj. -73.1876 iterations 1
Cbc0038I Pass  51: suminf.    1.88404 (5) obj. -73.1876 iterations 6
Cbc0038I Pass  52: suminf.    1.21127 (3) obj. -73.1876 iterations 5
Cbc0038I Pass  53: suminf.    1.25274 (3) obj. -73.1876 iterations 1
Cbc0038I Pass  54: suminf.    3.26330 (10) obj. -73.1876 iterations 6
Cbc0038I Pass  55: suminf.    3.26330 (10) obj. -73.1876 iterations 1
Cbc0038I Pass  56: suminf.    1.20855 (4) obj. -73.1876 iterations 9
Cbc0038I Pass  57: suminf.    1.20855 (4) obj. -73.1876 iterations 1
Cbc0038I Pass  58: suminf.    1.68186 (4) obj. -73.1876 iterations 1
Cbc0038I Pass  59: suminf.    1.68186 (4) obj. -73.1876 iterations 0
Cbc0038I Pass  60: suminf.    1.20855 (4) obj. -73.1876 iterations 1
Cbc0038I Pass  61: suminf.    1.70445 (4) obj. -73.1876 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 42 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -55 - took 0.03 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 3.6666667
Cbc0013I At root node, 3 cuts changed objective from -122.52753 to -74.873239 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.0 elements, 21 column cuts (21 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55, took 24 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 32 (-31) rows, 18 (-14) columns and 94 (-83) elements
Clp0000I Optimal - objective value 105.98359
Coin0511I After Postsolve, objective 105.98359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.9835947 - 17 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 32 rows, 18 columns (17 integer (17 of which binary)) and 94 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.655%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.73836
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -54 iterations 10
Cbc0038I Solution found of -54
Cbc0038I Relaxing continuous gives -54
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 18 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -54 to -55 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.9983
Cbc0038I Pass   2: suminf.    0.06929 (1) obj. -60.9983 iterations 1
Cbc0038I Pass   3: suminf.    0.21346 (1) obj. -60.9983 iterations 2
Cbc0038I Pass   4: suminf.    0.10342 (1) obj. -60.9983 iterations 2
Cbc0038I Pass   5: suminf.    0.37903 (1) obj. -60.9983 iterations 1
Cbc0038I Pass   6: suminf.    0.47234 (2) obj. -60.9983 iterations 5
Cbc0038I Pass   7: suminf.    1.66740 (6) obj. -60.9983 iterations 4
Cbc0038I Pass   8: suminf.    0.58911 (2) obj. -60.9983 iterations 3
Cbc0038I Pass   9: suminf.    0.46557 (2) obj. -60.9983 iterations 9
Cbc0038I Pass  10: suminf.    0.46557 (2) obj. -60.9983 iterations 3
Cbc0038I Pass  11: suminf.    0.61648 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  12: suminf.    0.54057 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  13: suminf.    0.46557 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  14: suminf.    0.46557 (2) obj. -60.9983 iterations 0
Cbc0038I Pass  15: suminf.    0.57889 (2) obj. -60.9983 iterations 2
Cbc0038I Pass  16: suminf.    0.43100 (1) obj. -60.9983 iterations 1
Cbc0038I Pass  17: suminf.    0.45161 (1) obj. -60.9983 iterations 1
Cbc0038I Pass  18: suminf.    1.12244 (3) obj. -60.9983 iterations 4
Cbc0038I Pass  19: suminf.    0.61061 (2) obj. -60.9983 iterations 3
Cbc0038I Pass  20: suminf.    0.62306 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  21: suminf.    0.57505 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  22: suminf.    0.61061 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  23: suminf.    0.81417 (4) obj. -60.9983 iterations 1
Cbc0038I Pass  24: suminf.    0.53427 (3) obj. -60.9983 iterations 1
Cbc0038I Pass  25: suminf.    0.58261 (2) obj. -60.9983 iterations 2
Cbc0038I Pass  26: suminf.    0.57505 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  27: suminf.    0.64436 (2) obj. -60.9983 iterations 1
Cbc0038I Pass  28: suminf.    0.64436 (2) obj. -60.9983 iterations 2
Cbc0038I Pass  29: suminf.    0.62443 (5) obj. -60.9983 iterations 2
Cbc0038I Pass  30: suminf.    0.45030 (2) obj. -60.9983 iterations 5
Cbc0038I Pass  31: suminf.    0.45030 (2) obj. -60.9983 iterations 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 18 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -69.9953
Cbc0038I Pass  31: suminf.    0.21001 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  32: suminf.    0.43134 (2) obj. -69.9953 iterations 2
Cbc0038I Pass  33: suminf.    0.31455 (1) obj. -69.9953 iterations 1
Cbc0038I Pass  34: suminf.    0.25854 (1) obj. -69.9953 iterations 2
Cbc0038I Pass  35: suminf.    0.37903 (1) obj. -69.9953 iterations 1
Cbc0038I Pass  36: suminf.    0.62538 (3) obj. -69.9953 iterations 5
Cbc0038I Pass  37: suminf.    0.62538 (3) obj. -69.9953 iterations 0
Cbc0038I Pass  38: suminf.    0.49235 (2) obj. -69.9953 iterations 2
Cbc0038I Pass  39: suminf.    0.40259 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  40: suminf.    0.27269 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  41: suminf.    0.27269 (2) obj. -69.9953 iterations 0
Cbc0038I Pass  42: suminf.    1.70407 (5) obj. -69.9953 iterations 7
Cbc0038I Pass  43: suminf.    1.00894 (3) obj. -69.9953 iterations 3
Cbc0038I Pass  44: suminf.    1.12068 (3) obj. -69.9953 iterations 3
Cbc0038I Pass  45: suminf.    1.12068 (3) obj. -69.9953 iterations 0
Cbc0038I Pass  46: suminf.    1.14642 (3) obj. -69.9953 iterations 2
Cbc0038I Pass  47: suminf.    0.43299 (2) obj. -69.9953 iterations 2
Cbc0038I Pass  48: suminf.    0.43299 (2) obj. -69.9953 iterations 0
Cbc0038I Pass  49: suminf.    0.45190 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  50: suminf.    0.40259 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  51: suminf.    0.79086 (5) obj. -69.9953 iterations 7
Cbc0038I Pass  52: suminf.    0.78545 (5) obj. -69.9953 iterations 5
Cbc0038I Pass  53: suminf.    0.62306 (2) obj. -69.9953 iterations 6
Cbc0038I Pass  54: suminf.    0.42133 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  55: suminf.    0.87682 (2) obj. -69.9953 iterations 3
Cbc0038I Pass  56: suminf.    0.47649 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  57: suminf.    0.64747 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  58: suminf.    0.48749 (2) obj. -69.9953 iterations 1
Cbc0038I Pass  59: suminf.    3.81008 (12) obj. -69.9953 iterations 10
Cbc0038I Pass  60: suminf.    1.12662 (4) obj. -69.9953 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 18 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -55 - took 0.02 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 32 rows 18 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -105.98359 to -52 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.3 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -55, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-24) rows, 41 (-20) columns and 280 (-333) elements
Clp1000I sum of infeasibilities 2.69403e-09 - average 6.90776e-11, 19 fixed columns
Coin0506I Presolve 9 (-30) rows, 11 (-30) columns and 39 (-241) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 120.13693
Clp0000I Optimal - objective value 120.13693
Coin0511I After Postsolve, objective 120.13693, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5153971 - largest nonzero change 2.9235226e-05 ( 0.0025942613%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 152.30995
Clp0000I Optimal - objective value 152.30995
Clp0000I Optimal - objective value 152.30995
Coin0511I After Postsolve, objective 152.30995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 152.3099546 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 42 columns (42 integer (42 of which binary)) and 284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.06473
Cbc0038I Pass   1: suminf.    1.73459 (9) obj. -48.1181 iterations 12
Cbc0038I Pass   2: suminf.    1.73459 (9) obj. -48.1181 iterations 2
Cbc0038I Solution found of 17
Cbc0038I Rounding solution of 12 is better than previous of 17

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 42 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 12 to -53 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.8527
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.23513 (14) obj. -60.8527 iterations 4
Cbc0038I Pass   4: suminf.    2.23513 (14) obj. -60.8527 iterations 0
Cbc0038I Pass   5: suminf.    0.42849 (1) obj. -60.8527 iterations 18
Cbc0038I Pass   6: suminf.    0.45161 (1) obj. -67.8065 iterations 1
Cbc0038I Pass   7: suminf.    1.45546 (5) obj. -60.8527 iterations 4
Cbc0038I Pass   8: suminf.    1.19447 (4) obj. -87.7373 iterations 1
Cbc0038I Pass   9: suminf.    2.29491 (8) obj. -82.4529 iterations 8
Cbc0038I Pass  10: suminf.    2.29491 (8) obj. -82.4529 iterations 2
Cbc0038I Pass  11: suminf.    0.81346 (2) obj. -60.8527 iterations 7
Cbc0038I Pass  12: suminf.    0.81346 (2) obj. -60.8527 iterations 0
Cbc0038I Pass  13: suminf.    0.83475 (2) obj. -60.8527 iterations 1
Cbc0038I Pass  14: suminf.    1.52971 (4) obj. -60.8527 iterations 4
Cbc0038I Pass  15: suminf.    1.52971 (4) obj. -60.8527 iterations 0
Cbc0038I Pass  16: suminf.    0.62733 (2) obj. -60.8527 iterations 3
Cbc0038I Pass  17: suminf.    0.62733 (2) obj. -60.8527 iterations 0
Cbc0038I Pass  18: suminf.    0.77012 (2) obj. -60.8527 iterations 1
Cbc0038I Pass  19: suminf.    1.60204 (7) obj. -60.8527 iterations 10
Cbc0038I Pass  20: suminf.    0.92976 (2) obj. -60.8527 iterations 8
Cbc0038I Pass  21: suminf.    0.85806 (2) obj. -62.6452 iterations 1
Cbc0038I Pass  22: suminf.    0.92976 (2) obj. -60.8527 iterations 1
Cbc0038I Pass  23: suminf.    2.16167 (8) obj. -60.8527 iterations 7
Cbc0038I Pass  24: suminf.    2.16167 (8) obj. -60.8527 iterations 0
Cbc0038I Pass  25: suminf.    3.26552 (18) obj. -60.8527 iterations 15
Cbc0038I Pass  26: suminf.    3.26552 (18) obj. -60.8527 iterations 2
Cbc0038I Pass  27: suminf.    0.92976 (2) obj. -60.8527 iterations 20
Cbc0038I Pass  28: suminf.    0.85806 (2) obj. -62.6452 iterations 1
Cbc0038I Pass  29: suminf.    2.22294 (7) obj. -60.8527 iterations 7
Cbc0038I Pass  30: suminf.    1.72529 (6) obj. -60.8527 iterations 2
Cbc0038I Pass  31: suminf.    1.35865 (3) obj. -60.8527 iterations 6
Cbc0038I Pass  32: suminf.    0.76352 (2) obj. -60.8527 iterations 1
Cbc0038I Rounding solution of -55 is better than previous of -53

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -73.1876
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.71997 (14) obj. -73.1876 iterations 0
Cbc0038I Pass  33: suminf.    2.71997 (14) obj. -73.1876 iterations 0
Cbc0038I Pass  34: suminf.    0.66686 (2) obj. -73.1876 iterations 17
Cbc0038I Pass  35: suminf.    0.66686 (2) obj. -73.1876 iterations 0
Cbc0038I Pass  36: suminf.    0.75877 (2) obj. -73.1876 iterations 1
Cbc0038I Pass  37: suminf.    1.29337 (4) obj. -73.1876 iterations 5
Cbc0038I Pass  38: suminf.    1.29337 (4) obj. -73.1876 iterations 0
Cbc0038I Pass  39: suminf.    0.49194 (1) obj. -73.4677 iterations 4
Cbc0038I Pass  40: suminf.    0.49676 (1) obj. -73.1876 iterations 1
Cbc0038I Pass  41: suminf.    1.18476 (3) obj. -73.1876 iterations 8
Cbc0038I Pass  42: suminf.    1.18476 (3) obj. -73.1876 iterations 3
Cbc0038I Pass  43: suminf.    0.92218 (2) obj. -73.1876 iterations 2
Cbc0038I Pass  44: suminf.    0.92073 (2) obj. -73.1876 iterations 1
Cbc0038I Pass  45: suminf.    2.17595 (6) obj. -73.1876 iterations 7
Cbc0038I Pass  46: suminf.    1.90018 (5) obj. -73.1876 iterations 1
Cbc0038I Pass  47: suminf.    1.12683 (3) obj. -73.1876 iterations 3
Cbc0038I Pass  48: suminf.    1.12683 (3) obj. -73.1876 iterations 0
Cbc0038I Pass  49: suminf.    1.22312 (3) obj. -77.4839 iterations 1
Cbc0038I Pass  50: suminf.    1.05127 (3) obj. -73.1876 iterations 1
Cbc0038I Pass  51: suminf.    1.88404 (5) obj. -73.1876 iterations 6
Cbc0038I Pass  52: suminf.    1.21127 (3) obj. -73.1876 iterations 5
Cbc0038I Pass  53: suminf.    1.25274 (3) obj. -73.1876 iterations 1
Cbc0038I Pass  54: suminf.    3.26330 (10) obj. -73.1876 iterations 6
Cbc0038I Pass  55: suminf.    3.26330 (10) obj. -73.1876 iterations 1
Cbc0038I Pass  56: suminf.    1.20855 (4) obj. -73.1876 iterations 9
Cbc0038I Pass  57: suminf.    1.20855 (4) obj. -73.1876 iterations 1
Cbc0038I Pass  58: suminf.    1.68186 (4) obj. -73.1876 iterations 1
Cbc0038I Pass  59: suminf.    1.68186 (4) obj. -73.1876 iterations 0
Cbc0038I Pass  60: suminf.    1.20855 (4) obj. -73.1876 iterations 1
Cbc0038I Pass  61: suminf.    1.70445 (4) obj. -73.1876 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 42 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -55 - took 0.03 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 3.6666667
Cbc0013I At root node, 3 cuts changed objective from -122.52753 to -74.873239 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.0 elements, 21 column cuts (21 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55, took 24 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

