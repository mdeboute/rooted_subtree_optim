Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 99 (-4) columns and 546 (-57) elements
Clp1000I sum of infeasibilities 6.72841e-05 - average 3.78001e-07, 26 fixed columns
Coin0506I Presolve 121 (-57) rows, 70 (-29) columns and 375 (-171) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.24139421 - largest nonzero change 0 ( 0%) - largest zero change 2.5849554e-05
Clp0000I Optimal - objective value 38.409555
Clp0000I Optimal - objective value 38.409555
Coin0511I After Postsolve, objective 38.409555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.409555
Clp0000I Optimal - objective value 38.409555
Clp0000I Optimal - objective value 38.409555
Coin0511I After Postsolve, objective 38.409555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.40955504 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.985%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.66153
Cbc0038I Solution found of 0.867195
Cbc0038I Relaxing continuous gives -5.30486
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 81 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -5.30486 to -17.1932 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.315
Cbc0038I Pass   1: suminf.    2.67390 (34) obj. -19.315 iterations 67
Cbc0038I Pass   2: suminf.    2.66428 (9) obj. -19.315 iterations 38
Cbc0038I Pass   3: suminf.    1.71582 (8) obj. -19.315 iterations 7
Cbc0038I Pass   4: suminf.    1.60678 (8) obj. -19.315 iterations 4
Cbc0038I Pass   5: suminf.    1.99600 (7) obj. -19.315 iterations 17
Cbc0038I Pass   6: suminf.    1.82171 (6) obj. -19.315 iterations 1
Cbc0038I Pass   7: suminf.    1.27495 (6) obj. -19.315 iterations 8
Cbc0038I Pass   8: suminf.    1.02985 (5) obj. -19.315 iterations 3
Cbc0038I Pass   9: suminf.    1.74219 (6) obj. -19.315 iterations 7
Cbc0038I Pass  10: suminf.    1.74219 (6) obj. -19.315 iterations 0
Cbc0038I Pass  11: suminf.    2.05193 (7) obj. -19.315 iterations 4
Cbc0038I Pass  12: suminf.    2.05193 (7) obj. -19.315 iterations 2
Cbc0038I Pass  13: suminf.    2.47859 (6) obj. -19.315 iterations 5
Cbc0038I Pass  14: suminf.    2.31099 (6) obj. -19.315 iterations 2
Cbc0038I Pass  15: suminf.    1.65752 (7) obj. -19.315 iterations 4
Cbc0038I Pass  16: suminf.    1.65752 (7) obj. -19.315 iterations 0
Cbc0038I Pass  17: suminf.    3.16683 (10) obj. -19.315 iterations 8
Cbc0038I Pass  18: suminf.    2.06709 (7) obj. -19.315 iterations 3
Cbc0038I Pass  19: suminf.    2.04376 (7) obj. -19.315 iterations 1
Cbc0038I Pass  20: suminf.    2.43878 (7) obj. -19.315 iterations 7
Cbc0038I Pass  21: suminf.    2.43878 (7) obj. -19.315 iterations 0
Cbc0038I Pass  22: suminf.    2.04376 (7) obj. -19.315 iterations 6
Cbc0038I Pass  23: suminf.    2.43050 (6) obj. -19.315 iterations 26
Cbc0038I Pass  24: suminf.    2.02828 (5) obj. -19.315 iterations 6
Cbc0038I Pass  25: suminf.    1.56347 (7) obj. -19.315 iterations 7
Cbc0038I Pass  26: suminf.    2.60611 (9) obj. -19.315 iterations 12
Cbc0038I Pass  27: suminf.    1.82861 (8) obj. -19.315 iterations 5
Cbc0038I Pass  28: suminf.    1.78097 (6) obj. -19.315 iterations 2
Cbc0038I Pass  29: suminf.    1.15856 (6) obj. -19.315 iterations 2
Cbc0038I Pass  30: suminf.    2.73364 (8) obj. -19.315 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 94 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -17.1932 - took 0.08 seconds
Cbc0012I Integer solution of -17.19324 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 81 rows 47 columns
Cbc0031I 23 added rows had average density of 61.304348
Cbc0013I At root node, 23 cuts changed objective from -38.409555 to -32.682652 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13039 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2673 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.19324 best solution, best possible -32.682652 (1.16 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 12 rows 12 columns
Cbc0001I Search completed - best objective -17.19324, took 9624 iterations and 80 nodes (1.49 seconds)
Cbc0032I Strong branching done 910 times (18781 iterations), fathomed 5 nodes and fixed 31 variables
Cbc0035I Maximum depth 32, 237 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       1.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-80) rows, 142 (-60) columns and 2490 (-3163) elements
Clp1000I sum of infeasibilities 2.23847e-07 - average 1.80522e-09, 49 fixed columns
Coin0506I Presolve 77 (-47) rows, 92 (-50) columns and 1223 (-1267) elements
Clp0006I 0  Obj 72.743757 Dual inf 8.4381061 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 1.8115264 - largest nonzero change 2.6923662e-05 ( 0.0025228206%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 79.454888
Clp0000I Optimal - objective value 79.454888
Coin0511I After Postsolve, objective 79.454888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 79.454888
Clp0000I Optimal - objective value 79.454888
Clp0000I Optimal - objective value 79.454888
Clp0000I Optimal - objective value 79.454888
Coin0511I After Postsolve, objective 79.454888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.45488758 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 142 columns (142 integer (142 of which binary)) and 2503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.775%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 13.0287
Cbc0038I Pass   1: suminf.    1.60934 (23) obj. -28.401 iterations 25
Cbc0038I Pass   2: suminf.    1.60934 (23) obj. -28.401 iterations 0
Cbc0038I Pass   3: suminf.    0.13000 (7) obj. -7.68665 iterations 18
Cbc0038I Solution found of 0.16611
Cbc0038I Rounding solution of -6.6192 is better than previous of 0.16611

Cbc0038I Before mini branch and bound, 107 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 142 columns, reduced to 15 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -6.6192 to -31.7571 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.2568
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.66294 (25) obj. -34.2568 iterations 22
Cbc0038I Pass   5: suminf.    1.34976 (24) obj. -34.2568 iterations 25
Cbc0038I Pass   6: suminf.    4.62043 (15) obj. -34.2568 iterations 34
Cbc0038I Pass   7: suminf.    4.49735 (15) obj. -34.2568 iterations 1
Cbc0038I Pass   8: suminf.    1.16777 (6) obj. -34.2568 iterations 20
Cbc0038I Pass   9: suminf.    0.27732 (1) obj. -34.2568 iterations 8
Cbc0038I Pass  10: suminf.    0.48387 (5) obj. -35.714 iterations 7
Cbc0038I Pass  11: suminf.    0.27732 (1) obj. -34.2568 iterations 4
Cbc0038I Pass  12: suminf.    4.73706 (16) obj. -34.2568 iterations 27
Cbc0038I Pass  13: suminf.    4.69670 (15) obj. -34.2568 iterations 3
Cbc0038I Pass  14: suminf.    1.21158 (8) obj. -34.2568 iterations 22
Cbc0038I Pass  15: suminf.    1.21158 (8) obj. -34.2568 iterations 1
Cbc0038I Pass  16: suminf.    0.73673 (6) obj. -34.2568 iterations 6
Cbc0038I Pass  17: suminf.    0.72379 (6) obj. -34.2568 iterations 1
Cbc0038I Pass  18: suminf.    0.68454 (6) obj. -34.2568 iterations 1
Cbc0038I Pass  19: suminf.    0.51088 (6) obj. -34.2568 iterations 4
Cbc0038I Pass  20: suminf.    0.72379 (6) obj. -34.2568 iterations 2
Cbc0038I Pass  21: suminf.    2.88191 (7) obj. -34.2568 iterations 19
Cbc0038I Pass  22: suminf.    2.69639 (7) obj. -34.2568 iterations 4
Cbc0038I Pass  23: suminf.    2.47234 (8) obj. -34.2568 iterations 11
Cbc0038I Pass  24: suminf.    0.90918 (5) obj. -34.2568 iterations 13
Cbc0038I Pass  25: suminf.    0.90491 (6) obj. -34.2568 iterations 6
Cbc0038I Pass  26: suminf.    1.34217 (6) obj. -34.2568 iterations 6
Cbc0038I Pass  27: suminf.    0.95532 (3) obj. -34.6963 iterations 16
Cbc0038I Pass  28: suminf.    0.96676 (5) obj. -34.2568 iterations 11
Cbc0038I Pass  29: suminf.    3.05250 (14) obj. -34.2568 iterations 35
Cbc0038I Pass  30: suminf.    3.05250 (14) obj. -34.2568 iterations 3
Cbc0038I Pass  31: suminf.    1.37258 (7) obj. -34.2568 iterations 21
Cbc0038I Pass  32: suminf.    1.30240 (6) obj. -34.2568 iterations 4
Cbc0038I Pass  33: suminf.    0.94612 (7) obj. -34.2568 iterations 9
Cbc0038I Rounding solution of -34.405 is better than previous of -31.7571

Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 142 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -38.8746
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.28636 (34) obj. -38.8746 iterations 2
Cbc0038I Pass  34: suminf.    3.65056 (40) obj. -38.8746 iterations 9
Cbc0038I Pass  35: suminf.    2.73267 (11) obj. -38.8746 iterations 37
Cbc0038I Pass  36: suminf.    2.65454 (10) obj. -38.8746 iterations 1
Cbc0038I Pass  37: suminf.    1.31630 (8) obj. -38.8746 iterations 13
Cbc0038I Pass  38: suminf.    1.31630 (8) obj. -38.8746 iterations 1
Cbc0038I Pass  39: suminf.    1.35294 (8) obj. -38.8746 iterations 3
Cbc0038I Pass  40: suminf.    1.35294 (8) obj. -38.8746 iterations 1
Cbc0038I Pass  41: suminf.    1.31630 (8) obj. -38.8746 iterations 2
Cbc0038I Pass  42: suminf.    3.33770 (12) obj. -38.8746 iterations 15
Cbc0038I Pass  43: suminf.    2.62500 (7) obj. -38.8746 iterations 19
Cbc0038I Pass  44: suminf.    1.33532 (5) obj. -38.8746 iterations 25
Cbc0038I Pass  45: suminf.    1.20815 (6) obj. -38.8746 iterations 12
Cbc0038I Pass  46: suminf.    1.34753 (5) obj. -38.8746 iterations 9
Cbc0038I Pass  47: suminf.    1.21543 (6) obj. -38.8746 iterations 8
Cbc0038I Pass  48: suminf.    1.33532 (5) obj. -38.8746 iterations 7
Cbc0038I Pass  49: suminf.    3.51637 (15) obj. -38.8746 iterations 19
Cbc0038I Pass  50: suminf.    3.34517 (9) obj. -38.8746 iterations 16
Cbc0038I Pass  51: suminf.    1.65124 (6) obj. -38.8746 iterations 25
Cbc0038I Pass  52: suminf.    1.51924 (7) obj. -38.8746 iterations 8
Cbc0038I Pass  53: suminf.    1.69739 (6) obj. -38.8746 iterations 7
Cbc0038I Pass  54: suminf.    1.57065 (7) obj. -38.8746 iterations 10
Cbc0038I Pass  55: suminf.    1.65124 (6) obj. -38.8746 iterations 9
Cbc0038I Pass  56: suminf.    3.50563 (9) obj. -38.8746 iterations 18
Cbc0038I Pass  57: suminf.    3.18557 (10) obj. -38.8746 iterations 21
Cbc0038I Pass  58: suminf.    1.65124 (6) obj. -38.8746 iterations 22
Cbc0038I Pass  59: suminf.    1.51924 (7) obj. -38.8746 iterations 8
Cbc0038I Pass  60: suminf.    1.69739 (6) obj. -38.8746 iterations 7
Cbc0038I Pass  61: suminf.    1.57065 (7) obj. -38.8746 iterations 10
Cbc0038I Pass  62: suminf.    1.65124 (6) obj. -38.8746 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 142 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -34.405 - took 0.05 seconds
Cbc0012I Integer solution of -34.40495 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 123 rows 142 columns, reduced to 15 rows 14 columns
Cbc0031I 15 added rows had average density of 19.933333
Cbc0013I At root node, 51 cuts changed objective from -56.75294 to -34.40495 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 555 row cuts average 10.1 elements, 32 column cuts (32 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 89.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 60.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -34.40495000000001, took 154 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 56 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 99 (-4) columns and 546 (-57) elements
Clp1000I sum of infeasibilities 6.72841e-05 - average 3.78001e-07, 26 fixed columns
Coin0506I Presolve 121 (-57) rows, 70 (-29) columns and 375 (-171) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.24139421 - largest nonzero change 0 ( 0%) - largest zero change 2.5849554e-05
Clp0000I Optimal - objective value 38.409555
Clp0000I Optimal - objective value 38.409555
Coin0511I After Postsolve, objective 38.409555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.409555
Clp0000I Optimal - objective value 38.409555
Clp0000I Optimal - objective value 38.409555
Coin0511I After Postsolve, objective 38.409555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.40955504 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.985%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.66153
Cbc0038I Solution found of 0.867195
Cbc0038I Relaxing continuous gives -5.30486
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 81 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -5.30486 to -17.1932 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.315
Cbc0038I Pass   1: suminf.    2.67390 (34) obj. -19.315 iterations 67
Cbc0038I Pass   2: suminf.    2.66428 (9) obj. -19.315 iterations 38
Cbc0038I Pass   3: suminf.    1.71582 (8) obj. -19.315 iterations 7
Cbc0038I Pass   4: suminf.    1.60678 (8) obj. -19.315 iterations 4
Cbc0038I Pass   5: suminf.    1.99600 (7) obj. -19.315 iterations 17
Cbc0038I Pass   6: suminf.    1.82171 (6) obj. -19.315 iterations 1
Cbc0038I Pass   7: suminf.    1.27495 (6) obj. -19.315 iterations 8
Cbc0038I Pass   8: suminf.    1.02985 (5) obj. -19.315 iterations 3
Cbc0038I Pass   9: suminf.    1.74219 (6) obj. -19.315 iterations 7
Cbc0038I Pass  10: suminf.    1.74219 (6) obj. -19.315 iterations 0
Cbc0038I Pass  11: suminf.    2.05193 (7) obj. -19.315 iterations 4
Cbc0038I Pass  12: suminf.    2.05193 (7) obj. -19.315 iterations 2
Cbc0038I Pass  13: suminf.    2.47859 (6) obj. -19.315 iterations 5
Cbc0038I Pass  14: suminf.    2.31099 (6) obj. -19.315 iterations 2
Cbc0038I Pass  15: suminf.    1.65752 (7) obj. -19.315 iterations 4
Cbc0038I Pass  16: suminf.    1.65752 (7) obj. -19.315 iterations 0
Cbc0038I Pass  17: suminf.    3.16683 (10) obj. -19.315 iterations 8
Cbc0038I Pass  18: suminf.    2.06709 (7) obj. -19.315 iterations 3
Cbc0038I Pass  19: suminf.    2.04376 (7) obj. -19.315 iterations 1
Cbc0038I Pass  20: suminf.    2.43878 (7) obj. -19.315 iterations 7
Cbc0038I Pass  21: suminf.    2.43878 (7) obj. -19.315 iterations 0
Cbc0038I Pass  22: suminf.    2.04376 (7) obj. -19.315 iterations 6
Cbc0038I Pass  23: suminf.    2.43050 (6) obj. -19.315 iterations 26
Cbc0038I Pass  24: suminf.    2.02828 (5) obj. -19.315 iterations 6
Cbc0038I Pass  25: suminf.    1.56347 (7) obj. -19.315 iterations 7
Cbc0038I Pass  26: suminf.    2.60611 (9) obj. -19.315 iterations 12
Cbc0038I Pass  27: suminf.    1.82861 (8) obj. -19.315 iterations 5
Cbc0038I Pass  28: suminf.    1.78097 (6) obj. -19.315 iterations 2
Cbc0038I Pass  29: suminf.    1.15856 (6) obj. -19.315 iterations 2
Cbc0038I Pass  30: suminf.    2.73364 (8) obj. -19.315 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 99 columns, reduced to 94 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -17.1932 - took 0.07 seconds
Cbc0012I Integer solution of -17.19324 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 81 rows 47 columns
Cbc0031I 23 added rows had average density of 61.304348
Cbc0013I At root node, 23 cuts changed objective from -38.409555 to -32.682652 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13039 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2673 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.19324 best solution, best possible -32.682652 (1.05 seconds)
Cbc0038I Full problem 178 rows 99 columns, reduced to 12 rows 12 columns
Cbc0001I Search completed - best objective -17.19324, took 9624 iterations and 80 nodes (1.37 seconds)
Cbc0032I Strong branching done 910 times (18781 iterations), fathomed 5 nodes and fixed 31 variables
Cbc0035I Maximum depth 32, 237 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-82) rows, 141 (-62) columns and 2455 (-3199) elements
Clp1000I sum of infeasibilities 4.61398e-07 - average 3.7512e-09, 37 fixed columns
Coin0506I Presolve 81 (-42) rows, 104 (-37) columns and 1480 (-975) elements
Clp0006I 0  Obj 45.5422 Dual inf 7.9944536 (104)
Clp0029I End of values pass after 104 iterations
Clp0014I Perturbing problem by 0.001% of 1.4278671 - largest nonzero change 1.9836599e-05 ( 0.0016324266%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 52.691862
Clp0000I Optimal - objective value 52.691862
Coin0511I After Postsolve, objective 52.691862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 52.691862 Dual inf 4.1356055 (1)
Clp0014I Perturbing problem by 0.001% of 1.3529118 - largest nonzero change 1.9615471e-05 ( 0.0016324266%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 52.691862
Clp0000I Optimal - objective value 52.691862
Clp0000I Optimal - objective value 52.691862
Coin0511I After Postsolve, objective 52.691862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.69186235 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 141 columns (141 integer (141 of which binary)) and 2467 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.761%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 3.08272
Cbc0038I Pass   1: suminf.    2.82948 (35) obj. -42.6582 iterations 11
Cbc0038I Pass   2: suminf.    0.11581 (6) obj. -14.2527 iterations 28
Cbc0038I Solution found of -7.38607
Cbc0038I Rounding solution of -12.5808 is better than previous of -7.38607

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -15.6748
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.82948 (35) obj. -42.6582 iterations 0
Cbc0038I Pass   4: suminf.    0.44660 (13) obj. -15.6748 iterations 32
Cbc0038I Pass   5: suminf.    0.90493 (7) obj. -15.6748 iterations 29
Cbc0038I Pass   6: suminf.    0.90493 (7) obj. -15.6748 iterations 0
Cbc0038I Pass   7: suminf.    1.02062 (7) obj. -15.6748 iterations 7
Cbc0038I Pass   8: suminf.    1.02062 (7) obj. -15.6748 iterations 5
Cbc0038I Pass   9: suminf.    0.90493 (7) obj. -15.6748 iterations 8
Cbc0038I Pass  10: suminf.    2.05879 (17) obj. -15.6748 iterations 33
Cbc0038I Pass  11: suminf.    1.70343 (17) obj. -15.6748 iterations 14
Cbc0038I Pass  12: suminf.    1.43885 (9) obj. -15.6748 iterations 25
Cbc0038I Pass  13: suminf.    1.44685 (9) obj. -15.6748 iterations 2
Cbc0038I Pass  14: suminf.    1.20900 (9) obj. -15.6748 iterations 7
Cbc0038I Pass  15: suminf.    0.80733 (9) obj. -15.6748 iterations 9
Cbc0038I Pass  16: suminf.    1.41351 (11) obj. -15.6748 iterations 13
Cbc0038I Pass  17: suminf.    1.65664 (14) obj. -15.6748 iterations 15
Cbc0038I Pass  18: suminf.    1.42748 (15) obj. -15.6748 iterations 11
Cbc0038I Pass  19: suminf.    1.44889 (11) obj. -15.6748 iterations 22
Cbc0038I Pass  20: suminf.    1.44889 (11) obj. -15.6748 iterations 0
Cbc0038I Pass  21: suminf.    1.58826 (10) obj. -15.6748 iterations 7
Cbc0038I Pass  22: suminf.    1.58826 (10) obj. -15.6748 iterations 3
Cbc0038I Pass  23: suminf.    1.61450 (10) obj. -15.6748 iterations 4
Cbc0038I Pass  24: suminf.    1.26361 (10) obj. -15.6748 iterations 7
Cbc0038I Pass  25: suminf.    1.58826 (10) obj. -15.6748 iterations 11
Cbc0038I Pass  26: suminf.    2.28533 (15) obj. -15.6748 iterations 25
Cbc0038I Pass  27: suminf.    0.91917 (12) obj. -17.6573 iterations 12
Cbc0038I Pass  28: suminf.    0.84087 (11) obj. -17.2417 iterations 1
Cbc0038I Pass  29: suminf.    0.86577 (13) obj. -15.6748 iterations 30
Cbc0038I Pass  30: suminf.    0.86569 (9) obj. -15.6748 iterations 4
Cbc0038I Pass  31: suminf.    1.61450 (10) obj. -15.6748 iterations 8
Cbc0038I Pass  32: suminf.    1.26361 (10) obj. -15.6748 iterations 3
Cbc0038I Rounding solution of -13.6284 is better than previous of -12.5808

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -21.2438
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.82948 (35) obj. -42.6582 iterations 0
Cbc0038I Pass  33: suminf.    0.60894 (10) obj. -21.2438 iterations 29
Cbc0038I Pass  34: suminf.    1.17510 (13) obj. -21.2438 iterations 22
Cbc0038I Pass  35: suminf.    0.63068 (12) obj. -21.2438 iterations 6
Cbc0038I Pass  36: suminf.    1.18607 (11) obj. -21.2438 iterations 22
Cbc0038I Pass  37: suminf.    1.18607 (11) obj. -21.2438 iterations 1
Cbc0038I Pass  38: suminf.    1.12976 (11) obj. -21.2438 iterations 14
Cbc0038I Pass  39: suminf.    1.12976 (11) obj. -21.2438 iterations 1
Cbc0038I Pass  40: suminf.    1.68258 (13) obj. -21.2438 iterations 6
Cbc0038I Pass  41: suminf.    1.50960 (13) obj. -21.2438 iterations 5
Cbc0038I Pass  42: suminf.    1.50085 (13) obj. -21.2438 iterations 6
Cbc0038I Pass  43: suminf.    1.50085 (13) obj. -21.2438 iterations 4
Cbc0038I Pass  44: suminf.    1.52375 (13) obj. -21.2438 iterations 6
Cbc0038I Pass  45: suminf.    1.52375 (13) obj. -21.2438 iterations 4
Cbc0038I Pass  46: suminf.    1.50085 (13) obj. -21.2438 iterations 5
Cbc0038I Pass  47: suminf.    2.97466 (27) obj. -21.2438 iterations 15
Cbc0038I Pass  48: suminf.    2.94309 (25) obj. -21.2438 iterations 3
Cbc0038I Pass  49: suminf.    1.59851 (16) obj. -21.2438 iterations 20
Cbc0038I Pass  50: suminf.    1.38900 (16) obj. -21.2438 iterations 6
Cbc0038I Pass  51: suminf.    1.59851 (16) obj. -21.2438 iterations 14
Cbc0038I Pass  52: suminf.    2.95571 (19) obj. -21.2438 iterations 28
Cbc0038I Pass  53: suminf.    1.65273 (19) obj. -21.2438 iterations 5
Cbc0038I Pass  54: suminf.    1.65273 (19) obj. -21.2438 iterations 0
Cbc0038I Pass  55: suminf.    1.65328 (18) obj. -21.2438 iterations 32
Cbc0038I Pass  56: suminf.    1.21415 (17) obj. -21.2438 iterations 11
Cbc0038I Pass  57: suminf.    2.28242 (15) obj. -21.2438 iterations 13
Cbc0038I Pass  58: suminf.    1.58995 (15) obj. -21.2438 iterations 8
Cbc0038I Pass  59: suminf.    1.70851 (17) obj. -21.2438 iterations 16
Cbc0038I Pass  60: suminf.    1.56809 (17) obj. -21.2438 iterations 3
Cbc0038I Pass  61: suminf.    2.28242 (15) obj. -21.2438 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -13.6284 - took 0.06 seconds
Cbc0012I Integer solution of -13.62844 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 3 rows 3 columns
Cbc0031I 62 added rows had average density of 30.951613
Cbc0013I At root node, 62 cuts changed objective from -43.519847 to -20.3061 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10804 row cuts average 13.6 elements, 3 column cuts (21 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1292 row cuts average 129.4 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 665 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 812 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 95.6 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 168 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.619 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.62844 best solution, best possible -20.3061 (2.47 seconds)
Cbc0010I After 5 nodes, 4 on tree, -13.62844 best solution, best possible -20.230148 (3.27 seconds)
Cbc0012I Integer solution of -15.03075 found by rounding after 4668 iterations and 9 nodes (3.46 seconds)
Cbc0012I Integer solution of -15.31788 found by rounding after 4697 iterations and 11 nodes (3.53 seconds)
Cbc0012I Integer solution of -16.45855 found by DiveCoefficient after 4697 iterations and 11 nodes (3.53 seconds)
Cbc0016I Integer solution of -16.60388 found by strong branching after 4721 iterations and 12 nodes (3.59 seconds)
Cbc0010I After 24 nodes, 11 on tree, -16.60388 best solution, best possible -20.230148 (4.00 seconds)
Cbc0016I Integer solution of -17.19324 found by strong branching after 5120 iterations and 26 nodes (4.09 seconds)
Cbc0001I Search completed - best objective -17.19324, took 5641 iterations and 38 nodes (4.20 seconds)
Cbc0032I Strong branching done 594 times (11467 iterations), fathomed 4 nodes and fixed 8 variables
Cbc0035I Maximum depth 16, 109 variables fixed on reduced cost
Total time (CPU seconds):       2.96   (Wallclock seconds):       4.23

