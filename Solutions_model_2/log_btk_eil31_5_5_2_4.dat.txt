Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 27 (-6) columns and 147 (-36) elements
Clp1000I sum of infeasibilities 2.22569e-06 - average 4.45138e-08, 3 fixed columns
Coin0506I Presolve 44 (-6) rows, 24 (-3) columns and 129 (-18) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Coin0511I After Postsolve, objective 121.87078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Coin0511I After Postsolve, objective 121.87078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.8707782 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 27 columns (26 integer (26 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.195%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.27533
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -73.8929 iterations 18
Cbc0038I Solution found of -73.8929
Cbc0038I Relaxing continuous gives -73.8929
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -73.8929 to -81.75 (0.01 seconds)
Cbc0038I Round again with cutoff of -84.4681
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.22295 (2) obj. -84.4681 iterations 1
Cbc0038I Pass   3: suminf.    0.12207 (2) obj. -84.4681 iterations 3
Cbc0038I Pass   4: suminf.    0.12207 (2) obj. -84.4681 iterations 0
Cbc0038I Pass   5: suminf.    0.75255 (3) obj. -84.4681 iterations 9
Cbc0038I Pass   6: suminf.    0.70033 (2) obj. -84.4681 iterations 1
Cbc0038I Pass   7: suminf.    0.74489 (2) obj. -84.4681 iterations 2
Cbc0038I Pass   8: suminf.    0.94534 (4) obj. -84.4681 iterations 6
Cbc0038I Pass   9: suminf.    0.63321 (3) obj. -84.4681 iterations 7
Cbc0038I Pass  10: suminf.    0.43272 (4) obj. -84.4681 iterations 5
Cbc0038I Pass  11: suminf.    0.37142 (4) obj. -84.4681 iterations 1
Cbc0038I Pass  12: suminf.    0.55976 (3) obj. -84.4681 iterations 4
Cbc0038I Pass  13: suminf.    0.55976 (3) obj. -84.4681 iterations 0
Cbc0038I Pass  14: suminf.    0.60765 (3) obj. -84.4681 iterations 2
Cbc0038I Pass  15: suminf.    0.58878 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  16: suminf.    1.45895 (6) obj. -84.4681 iterations 9
Cbc0038I Pass  17: suminf.    0.41984 (2) obj. -84.4681 iterations 4
Cbc0038I Pass  18: suminf.    0.40000 (1) obj. -84.4681 iterations 2
Cbc0038I Pass  19: suminf.    0.49551 (1) obj. -84.4681 iterations 1
Cbc0038I Pass  20: suminf.    1.04171 (3) obj. -84.4681 iterations 13
Cbc0038I Pass  21: suminf.    1.04171 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  22: suminf.    0.70033 (2) obj. -84.4681 iterations 7
Cbc0038I Pass  23: suminf.    0.74489 (2) obj. -84.4681 iterations 2
Cbc0038I Pass  24: suminf.    1.03465 (5) obj. -84.4681 iterations 6
Cbc0038I Pass  25: suminf.    0.55976 (3) obj. -84.4681 iterations 3
Cbc0038I Pass  26: suminf.    0.60765 (3) obj. -84.4681 iterations 2
Cbc0038I Pass  27: suminf.    0.58878 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  28: suminf.    0.55976 (3) obj. -84.4681 iterations 3
Cbc0038I Pass  29: suminf.    1.46514 (4) obj. -84.4681 iterations 3
Cbc0038I Pass  30: suminf.    0.71887 (3) obj. -84.4681 iterations 4
Cbc0038I Pass  31: suminf.    0.73467 (3) obj. -84.4681 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -81.75 to -85.8643 (0.03 seconds)
Cbc0038I Round again with cutoff of -90.4775
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.42579 (4) obj. -90.4775 iterations 1
Cbc0038I Pass  32: suminf.    0.65159 (4) obj. -90.4775 iterations 4
Cbc0038I Pass  33: suminf.    0.38750 (4) obj. -90.4775 iterations 3
Cbc0038I Pass  34: suminf.    0.94444 (3) obj. -98.2838 iterations 5
Cbc0038I Pass  35: suminf.    1.33157 (6) obj. -90.4775 iterations 7
Cbc0038I Pass  36: suminf.    0.76423 (5) obj. -90.4775 iterations 5
Cbc0038I Pass  37: suminf.    0.94682 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  38: suminf.    0.56833 (4) obj. -90.4775 iterations 3
Cbc0038I Pass  39: suminf.    1.25000 (3) obj. -92.3875 iterations 5
Cbc0038I Pass  40: suminf.    0.67322 (4) obj. -90.4775 iterations 5
Cbc0038I Pass  41: suminf.    1.94449 (7) obj. -90.4775 iterations 12
Cbc0038I Pass  42: suminf.    1.58667 (7) obj. -90.4775 iterations 6
Cbc0038I Pass  43: suminf.    1.35722 (10) obj. -90.4775 iterations 2
Cbc0038I Pass  44: suminf.    1.82928 (7) obj. -90.4775 iterations 13
Cbc0038I Pass  45: suminf.    1.56900 (6) obj. -90.4775 iterations 1
Cbc0038I Pass  46: suminf.    1.51070 (7) obj. -90.4775 iterations 2
Cbc0038I Pass  47: suminf.    1.77387 (6) obj. -90.4775 iterations 8
Cbc0038I Pass  48: suminf.    0.98561 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  49: suminf.    0.74065 (4) obj. -90.4775 iterations 4
Cbc0038I Pass  50: suminf.    0.73245 (5) obj. -90.4775 iterations 1
Cbc0038I Pass  51: suminf.    1.01162 (4) obj. -90.4775 iterations 8
Cbc0038I Pass  52: suminf.    0.46647 (2) obj. -90.4775 iterations 5
Cbc0038I Pass  53: suminf.    0.67663 (3) obj. -90.4775 iterations 4
Cbc0038I Pass  54: suminf.    0.54528 (2) obj. -90.4775 iterations 3
Cbc0038I Pass  55: suminf.    2.11770 (7) obj. -90.4775 iterations 11
Cbc0038I Pass  56: suminf.    1.03569 (4) obj. -90.4775 iterations 5
Cbc0038I Pass  57: suminf.    0.28503 (3) obj. -90.4775 iterations 15
Cbc0038I Pass  58: suminf.    0.28503 (3) obj. -90.4775 iterations 0
Cbc0038I Pass  59: suminf.    0.38750 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  60: suminf.    0.38750 (4) obj. -90.4775 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -85.8643 - took 0.06 seconds
Cbc0012I Integer solution of -85.86433 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 27 columns, reduced to 28 rows 16 columns
Cbc0031I 11 added rows had average density of 18.545455
Cbc0013I At root node, 11 cuts changed objective from -108.9299 to -99.096088 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1013 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 804 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -85.86433, took 2374 iterations and 12 nodes (0.21 seconds)
Cbc0032I Strong branching done 140 times (1213 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-16) rows, 50 (-12) columns and 456 (-192) elements
Clp1000I sum of infeasibilities 2.25929e-08 - average 4.70685e-10, 30 fixed columns
Coin0506I Presolve 18 (-30) rows, 20 (-30) columns and 71 (-385) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 1.9475461 - largest nonzero change 2.1808939e-05 ( 0.0015380202%) - largest zero change 2.8730075e-05
Clp0000I Optimal - objective value 100.83472
Clp0000I Optimal - objective value 100.83472
Coin0511I After Postsolve, objective 100.83472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4103125 - largest nonzero change 2.009619e-05 ( 0.0015380202%) - largest zero change 2.4640632e-05
Clp0000I Optimal - objective value 128.7553
Clp0000I Optimal - objective value 128.7553
Clp0000I Optimal - objective value 128.7553
Coin0511I After Postsolve, objective 128.7553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 128.7552984 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 47 columns (47 integer (47 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.779%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 7.57858
Cbc0038I Pass   1: suminf.    0.75020 (10) obj. -52.6211 iterations 13
Cbc0038I Pass   2: suminf.    0.75020 (10) obj. -52.6211 iterations 0
Cbc0038I Solution found of -38.7214
Cbc0038I Rounding solution of -66.5928 is better than previous of -38.7214

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -66.5928 to -74.25 (0.02 seconds)
Cbc0038I Round again with cutoff of -77.7777
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.63355 (17) obj. -77.7777 iterations 1
Cbc0038I Pass   4: suminf.    0.73205 (2) obj. -77.7777 iterations 22
Cbc0038I Pass   5: suminf.    0.73205 (2) obj. -77.7777 iterations 1
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -78.1369 iterations 2
Cbc0038I Pass   7: suminf.    0.16186 (1) obj. -77.7777 iterations 1
Cbc0038I Pass   8: suminf.    2.59564 (8) obj. -77.7777 iterations 6
Cbc0038I Pass   9: suminf.    0.42424 (2) obj. -79.8867 iterations 5
Cbc0038I Pass  10: suminf.    0.42424 (2) obj. -79.8867 iterations 0
Cbc0038I Pass  11: suminf.    0.36154 (2) obj. -77.7777 iterations 5
Cbc0038I Pass  12: suminf.    0.18182 (1) obj. -79.1292 iterations 3
Cbc0038I Pass  13: suminf.    0.18182 (1) obj. -79.1292 iterations 0
Cbc0038I Pass  14: suminf.    1.75752 (11) obj. -77.7777 iterations 13
Cbc0038I Pass  15: suminf.    0.80357 (3) obj. -77.7777 iterations 7
Cbc0038I Pass  16: suminf.    1.08673 (3) obj. -77.7777 iterations 5
Cbc0038I Pass  17: suminf.    1.08673 (3) obj. -77.7777 iterations 1
Cbc0038I Pass  18: suminf.    0.25128 (2) obj. -77.7777 iterations 3
Cbc0038I Pass  19: suminf.    0.21293 (3) obj. -77.7777 iterations 2
Cbc0038I Pass  20: suminf.    0.54435 (2) obj. -77.7777 iterations 3
Cbc0038I Pass  21: suminf.    0.42857 (1) obj. -79.1143 iterations 6
Cbc0038I Pass  22: suminf.    0.18641 (2) obj. -77.7777 iterations 4
Cbc0038I Pass  23: suminf.    0.42857 (1) obj. -79.1143 iterations 5
Cbc0038I Pass  24: suminf.    1.51906 (7) obj. -77.7777 iterations 5
Cbc0038I Pass  25: suminf.    0.86446 (3) obj. -77.7777 iterations 3
Cbc0038I Pass  26: suminf.    0.19994 (2) obj. -77.7777 iterations 3
Cbc0038I Pass  27: suminf.    1.37839 (6) obj. -82.4831 iterations 18
Cbc0038I Pass  28: suminf.    1.37839 (6) obj. -82.4831 iterations 0
Cbc0038I Pass  29: suminf.    0.32908 (2) obj. -77.7777 iterations 9
Cbc0038I Pass  30: suminf.    0.41584 (2) obj. -77.7777 iterations 1
Cbc0038I Pass  31: suminf.    1.11539 (8) obj. -77.7777 iterations 19
Cbc0038I Pass  32: suminf.    1.09869 (8) obj. -77.7777 iterations 4
Cbc0038I Rounding solution of -83.1928 is better than previous of -74.25

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 30 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -88.4596
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.06235 (17) obj. -88.4596 iterations 0
Cbc0038I Pass  33: suminf.    1.76931 (4) obj. -88.4596 iterations 27
Cbc0038I Pass  34: suminf.    1.32283 (4) obj. -88.4596 iterations 3
Cbc0038I Pass  35: suminf.    1.32283 (4) obj. -88.4596 iterations 1
Cbc0038I Pass  36: suminf.    1.57629 (5) obj. -88.4596 iterations 5
Cbc0038I Pass  37: suminf.    1.57629 (5) obj. -88.4596 iterations 0
Cbc0038I Pass  38: suminf.    0.79551 (3) obj. -88.4596 iterations 5
Cbc0038I Pass  39: suminf.    0.79551 (3) obj. -88.4596 iterations 2
Cbc0038I Pass  40: suminf.    0.95320 (3) obj. -88.4596 iterations 7
Cbc0038I Pass  41: suminf.    0.83885 (3) obj. -88.4596 iterations 4
Cbc0038I Pass  42: suminf.    0.95320 (3) obj. -88.4596 iterations 5
Cbc0038I Pass  43: suminf.    1.46072 (8) obj. -88.4596 iterations 12
Cbc0038I Pass  44: suminf.    1.46072 (8) obj. -88.4596 iterations 3
Cbc0038I Pass  45: suminf.    1.40245 (6) obj. -88.4596 iterations 12
Cbc0038I Pass  46: suminf.    1.76931 (4) obj. -88.4596 iterations 4
Cbc0038I Pass  47: suminf.    1.32283 (4) obj. -88.4596 iterations 4
Cbc0038I Pass  48: suminf.    1.32283 (4) obj. -88.4596 iterations 1
Cbc0038I Pass  49: suminf.    1.57629 (5) obj. -88.4596 iterations 5
Cbc0038I Pass  50: suminf.    1.57629 (5) obj. -88.4596 iterations 0
Cbc0038I Pass  51: suminf.    0.79551 (3) obj. -88.4596 iterations 5
Cbc0038I Pass  52: suminf.    0.79551 (3) obj. -88.4596 iterations 2
Cbc0038I Pass  53: suminf.    0.95320 (3) obj. -88.4596 iterations 7
Cbc0038I Pass  54: suminf.    0.83885 (3) obj. -88.4596 iterations 4
Cbc0038I Pass  55: suminf.    0.95320 (3) obj. -88.4596 iterations 5
Cbc0038I Pass  56: suminf.    1.51035 (9) obj. -88.4596 iterations 9
Cbc0038I Pass  57: suminf.    0.96918 (5) obj. -88.4596 iterations 5
Cbc0038I Pass  58: suminf.    1.86477 (6) obj. -88.4596 iterations 10
Cbc0038I Pass  59: suminf.    1.30065 (5) obj. -88.4596 iterations 3
Cbc0038I Pass  60: suminf.    1.30065 (5) obj. -88.4596 iterations 0
Cbc0038I Pass  61: suminf.    0.95320 (3) obj. -88.4596 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 35 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -83.1928 to -85.8643 (0.07 seconds)
Cbc0038I Round again with cutoff of -94.7796
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.31605 (17) obj. -94.7796 iterations 0
Cbc0038I Pass  62: suminf.    2.46390 (8) obj. -94.7796 iterations 22
Cbc0038I Pass  63: suminf.    2.46390 (8) obj. -94.7796 iterations 2
Cbc0038I Pass  64: suminf.    1.66185 (7) obj. -94.7796 iterations 8
Cbc0038I Pass  65: suminf.    1.65052 (8) obj. -94.7796 iterations 1
Cbc0038I Pass  66: suminf.    2.50952 (7) obj. -94.7796 iterations 8
Cbc0038I Pass  67: suminf.    2.16697 (7) obj. -94.7796 iterations 4
Cbc0038I Pass  68: suminf.    2.50952 (7) obj. -94.7796 iterations 5
Cbc0038I Pass  69: suminf.    3.45164 (12) obj. -94.7796 iterations 7
Cbc0038I Pass  70: suminf.    2.12080 (8) obj. -94.7796 iterations 7
Cbc0038I Pass  71: suminf.    2.12080 (8) obj. -94.7796 iterations 0
Cbc0038I Pass  72: suminf.    2.44980 (8) obj. -94.7796 iterations 6
Cbc0038I Pass  73: suminf.    2.44591 (8) obj. -94.7796 iterations 2
Cbc0038I Pass  74: suminf.    1.56148 (9) obj. -94.7796 iterations 7
Cbc0038I Pass  75: suminf.    1.56148 (9) obj. -94.7796 iterations 0
Cbc0038I Pass  76: suminf.    2.46084 (8) obj. -94.7796 iterations 8
Cbc0038I Pass  77: suminf.    2.46088 (8) obj. -94.7796 iterations 1
Cbc0038I Pass  78: suminf.    2.49345 (9) obj. -94.7796 iterations 2
Cbc0038I Pass  79: suminf.    2.35681 (8) obj. -94.7796 iterations 3
Cbc0038I Pass  80: suminf.    2.44980 (8) obj. -94.7796 iterations 9
Cbc0038I Pass  81: suminf.    2.44591 (8) obj. -94.7796 iterations 3
Cbc0038I Pass  82: suminf.    1.56148 (9) obj. -94.7796 iterations 7
Cbc0038I Pass  83: suminf.    1.56148 (9) obj. -94.7796 iterations 0
Cbc0038I Pass  84: suminf.    2.46084 (8) obj. -94.7796 iterations 8
Cbc0038I Pass  85: suminf.    2.46088 (8) obj. -94.7796 iterations 1
Cbc0038I Pass  86: suminf.    2.95860 (11) obj. -94.7796 iterations 6
Cbc0038I Pass  87: suminf.    2.22266 (8) obj. -94.7796 iterations 3
Cbc0038I Pass  88: suminf.    2.50952 (7) obj. -94.7796 iterations 7
Cbc0038I Pass  89: suminf.    2.16697 (7) obj. -94.7796 iterations 4
Cbc0038I Pass  90: suminf.    2.90308 (16) obj. -94.7796 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -85.8643 - took 0.06 seconds
Cbc0012I Integer solution of -85.8643 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 43 rows 47 columns, reduced to 33 rows 34 columns
Cbc0031I 22 added rows had average density of 14.5
Cbc0013I At root node, 22 cuts changed objective from -109.52627 to -91.633905 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1770 row cuts average 3.7 elements, 9 column cuts (9 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 414 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 98 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 131 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.708 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -85.8643 best solution, best possible -91.633905 (1.57 seconds)
Cbc0001I Search completed - best objective -85.8643, took 2367 iterations and 14 nodes (2.21 seconds)
Cbc0032I Strong branching done 274 times (2564 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 25 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       2.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 27 (-6) columns and 147 (-36) elements
Clp1000I sum of infeasibilities 2.22569e-06 - average 4.45138e-08, 3 fixed columns
Coin0506I Presolve 44 (-6) rows, 24 (-3) columns and 129 (-18) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Coin0511I After Postsolve, objective 121.87078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Clp0000I Optimal - objective value 121.87078
Coin0511I After Postsolve, objective 121.87078, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.8707782 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 27 columns (26 integer (26 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.195%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.27533
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -73.8929 iterations 18
Cbc0038I Solution found of -73.8929
Cbc0038I Relaxing continuous gives -73.8929
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -73.8929 to -81.75 (0.01 seconds)
Cbc0038I Round again with cutoff of -84.4681
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.22295 (2) obj. -84.4681 iterations 1
Cbc0038I Pass   3: suminf.    0.12207 (2) obj. -84.4681 iterations 3
Cbc0038I Pass   4: suminf.    0.12207 (2) obj. -84.4681 iterations 0
Cbc0038I Pass   5: suminf.    0.75255 (3) obj. -84.4681 iterations 9
Cbc0038I Pass   6: suminf.    0.70033 (2) obj. -84.4681 iterations 1
Cbc0038I Pass   7: suminf.    0.74489 (2) obj. -84.4681 iterations 2
Cbc0038I Pass   8: suminf.    0.94534 (4) obj. -84.4681 iterations 6
Cbc0038I Pass   9: suminf.    0.63321 (3) obj. -84.4681 iterations 7
Cbc0038I Pass  10: suminf.    0.43272 (4) obj. -84.4681 iterations 5
Cbc0038I Pass  11: suminf.    0.37142 (4) obj. -84.4681 iterations 1
Cbc0038I Pass  12: suminf.    0.55976 (3) obj. -84.4681 iterations 4
Cbc0038I Pass  13: suminf.    0.55976 (3) obj. -84.4681 iterations 0
Cbc0038I Pass  14: suminf.    0.60765 (3) obj. -84.4681 iterations 2
Cbc0038I Pass  15: suminf.    0.58878 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  16: suminf.    1.45895 (6) obj. -84.4681 iterations 9
Cbc0038I Pass  17: suminf.    0.41984 (2) obj. -84.4681 iterations 4
Cbc0038I Pass  18: suminf.    0.40000 (1) obj. -84.4681 iterations 2
Cbc0038I Pass  19: suminf.    0.49551 (1) obj. -84.4681 iterations 1
Cbc0038I Pass  20: suminf.    1.04171 (3) obj. -84.4681 iterations 13
Cbc0038I Pass  21: suminf.    1.04171 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  22: suminf.    0.70033 (2) obj. -84.4681 iterations 7
Cbc0038I Pass  23: suminf.    0.74489 (2) obj. -84.4681 iterations 2
Cbc0038I Pass  24: suminf.    1.03465 (5) obj. -84.4681 iterations 6
Cbc0038I Pass  25: suminf.    0.55976 (3) obj. -84.4681 iterations 3
Cbc0038I Pass  26: suminf.    0.60765 (3) obj. -84.4681 iterations 2
Cbc0038I Pass  27: suminf.    0.58878 (3) obj. -84.4681 iterations 1
Cbc0038I Pass  28: suminf.    0.55976 (3) obj. -84.4681 iterations 3
Cbc0038I Pass  29: suminf.    1.46514 (4) obj. -84.4681 iterations 3
Cbc0038I Pass  30: suminf.    0.71887 (3) obj. -84.4681 iterations 4
Cbc0038I Pass  31: suminf.    0.73467 (3) obj. -84.4681 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -81.75 to -85.8643 (0.03 seconds)
Cbc0038I Round again with cutoff of -90.4775
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.42579 (4) obj. -90.4775 iterations 1
Cbc0038I Pass  32: suminf.    0.65159 (4) obj. -90.4775 iterations 4
Cbc0038I Pass  33: suminf.    0.38750 (4) obj. -90.4775 iterations 3
Cbc0038I Pass  34: suminf.    0.94444 (3) obj. -98.2838 iterations 5
Cbc0038I Pass  35: suminf.    1.33157 (6) obj. -90.4775 iterations 7
Cbc0038I Pass  36: suminf.    0.76423 (5) obj. -90.4775 iterations 5
Cbc0038I Pass  37: suminf.    0.94682 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  38: suminf.    0.56833 (4) obj. -90.4775 iterations 3
Cbc0038I Pass  39: suminf.    1.25000 (3) obj. -92.3875 iterations 5
Cbc0038I Pass  40: suminf.    0.67322 (4) obj. -90.4775 iterations 5
Cbc0038I Pass  41: suminf.    1.94449 (7) obj. -90.4775 iterations 12
Cbc0038I Pass  42: suminf.    1.58667 (7) obj. -90.4775 iterations 6
Cbc0038I Pass  43: suminf.    1.35722 (10) obj. -90.4775 iterations 2
Cbc0038I Pass  44: suminf.    1.82928 (7) obj. -90.4775 iterations 13
Cbc0038I Pass  45: suminf.    1.56900 (6) obj. -90.4775 iterations 1
Cbc0038I Pass  46: suminf.    1.51070 (7) obj. -90.4775 iterations 2
Cbc0038I Pass  47: suminf.    1.77387 (6) obj. -90.4775 iterations 8
Cbc0038I Pass  48: suminf.    0.98561 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  49: suminf.    0.74065 (4) obj. -90.4775 iterations 4
Cbc0038I Pass  50: suminf.    0.73245 (5) obj. -90.4775 iterations 1
Cbc0038I Pass  51: suminf.    1.01162 (4) obj. -90.4775 iterations 8
Cbc0038I Pass  52: suminf.    0.46647 (2) obj. -90.4775 iterations 5
Cbc0038I Pass  53: suminf.    0.67663 (3) obj. -90.4775 iterations 4
Cbc0038I Pass  54: suminf.    0.54528 (2) obj. -90.4775 iterations 3
Cbc0038I Pass  55: suminf.    2.11770 (7) obj. -90.4775 iterations 11
Cbc0038I Pass  56: suminf.    1.03569 (4) obj. -90.4775 iterations 5
Cbc0038I Pass  57: suminf.    0.28503 (3) obj. -90.4775 iterations 15
Cbc0038I Pass  58: suminf.    0.28503 (3) obj. -90.4775 iterations 0
Cbc0038I Pass  59: suminf.    0.38750 (4) obj. -90.4775 iterations 6
Cbc0038I Pass  60: suminf.    0.38750 (4) obj. -90.4775 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 27 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -85.8643 - took 0.05 seconds
Cbc0012I Integer solution of -85.86433 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 27 columns, reduced to 28 rows 16 columns
Cbc0031I 11 added rows had average density of 18.545455
Cbc0013I At root node, 11 cuts changed objective from -108.9299 to -99.096088 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1013 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 804 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -85.86433, took 2374 iterations and 12 nodes (0.20 seconds)
Cbc0032I Strong branching done 140 times (1213 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 47 (-16) columns and 393 (-256) elements
Clp1000I sum of infeasibilities 2.51515e-08 - average 5.58922e-10, 26 fixed columns
Coin0506I Presolve 19 (-26) rows, 21 (-26) columns and 75 (-318) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 1.909132 - largest nonzero change 2.1808939e-05 ( 0.0015380202%) - largest zero change 2.8730075e-05
Clp0000I Optimal - objective value 100.83472
Clp0000I Optimal - objective value 100.83472
Coin0511I After Postsolve, objective 100.83472, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3925772 - largest nonzero change 2.9394864e-05 ( 0.0029394864%) - largest zero change 2.5137486e-05
Clp0000I Optimal - objective value 128.7553
Clp0000I Optimal - objective value 128.7553
Clp0000I Optimal - objective value 128.7553
Coin0511I After Postsolve, objective 128.7553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 128.7552984 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 47 columns (47 integer (47 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.53103
Cbc0038I Pass   1: suminf.    2.31940 (11) obj. -92.8519 iterations 14
Cbc0038I Pass   2: suminf.    2.31940 (11) obj. -92.8519 iterations 1
Cbc0038I Solution found of -45.1357
Cbc0038I Rounding solution of -78.0071 is better than previous of -45.1357

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -80.9352
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.31940 (11) obj. -92.8519 iterations 0
Cbc0038I Pass   4: suminf.    2.31940 (11) obj. -92.8519 iterations 1
Cbc0038I Pass   5: suminf.    0.36397 (1) obj. -80.9352 iterations 13
Cbc0038I Pass   6: suminf.    0.33750 (1) obj. -82.425 iterations 3
Cbc0038I Pass   7: suminf.    2.40366 (11) obj. -80.9352 iterations 16
Cbc0038I Pass   8: suminf.    1.49124 (7) obj. -80.9352 iterations 9
Cbc0038I Pass   9: suminf.    1.35088 (5) obj. -80.9352 iterations 15
Cbc0038I Pass  10: suminf.    0.67431 (2) obj. -80.9352 iterations 5
Cbc0038I Pass  11: suminf.    0.55396 (3) obj. -80.9352 iterations 2
Cbc0038I Pass  12: suminf.    0.05347 (2) obj. -80.9352 iterations 6
Cbc0038I Pass  13: suminf.    0.05347 (2) obj. -80.9352 iterations 0
Cbc0038I Pass  14: suminf.    0.56106 (2) obj. -80.9352 iterations 4
Cbc0038I Pass  15: suminf.    1.80959 (6) obj. -80.9352 iterations 13
Cbc0038I Pass  16: suminf.    1.23385 (4) obj. -87.3418 iterations 3
Cbc0038I Pass  17: suminf.    0.37107 (1) obj. -80.9352 iterations 5
Cbc0038I Pass  18: suminf.    0.36250 (1) obj. -81.4178 iterations 2
Cbc0038I Pass  19: suminf.    1.37644 (7) obj. -80.9352 iterations 8
Cbc0038I Pass  20: suminf.    1.26330 (5) obj. -80.9352 iterations 6
Cbc0038I Pass  21: suminf.    0.50140 (3) obj. -81.3743 iterations 6
Cbc0038I Pass  22: suminf.    0.43412 (3) obj. -80.9352 iterations 4
Cbc0038I Pass  23: suminf.    1.24624 (4) obj. -80.9352 iterations 6
Cbc0038I Pass  24: suminf.    0.61116 (3) obj. -80.9352 iterations 6
Cbc0038I Pass  25: suminf.    2.31493 (9) obj. -83.6086 iterations 13
Cbc0038I Pass  26: suminf.    0.86439 (4) obj. -80.9352 iterations 9
Cbc0038I Pass  27: suminf.    0.56150 (2) obj. -80.9352 iterations 6
Cbc0038I Pass  28: suminf.    0.36250 (1) obj. -81.4178 iterations 2
Cbc0038I Pass  29: suminf.    0.37107 (1) obj. -80.9352 iterations 2
Cbc0038I Pass  30: suminf.    2.96173 (11) obj. -80.9352 iterations 17
Cbc0038I Pass  31: suminf.    2.41556 (8) obj. -80.9352 iterations 8
Cbc0038I Pass  32: suminf.    0.32506 (2) obj. -80.9352 iterations 11
Cbc0038I Rounding solution of -79.8357 is better than previous of -78.0071

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 22 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -79.8357 to -81.75 (0.03 seconds)
Cbc0038I Round again with cutoff of -86.8576
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.31940 (11) obj. -92.8519 iterations 0
Cbc0038I Pass  33: suminf.    2.31940 (11) obj. -92.8519 iterations 1
Cbc0038I Pass  34: suminf.    1.29375 (10) obj. -86.8576 iterations 19
Cbc0038I Pass  35: suminf.    1.13946 (8) obj. -86.8576 iterations 2
Cbc0038I Pass  36: suminf.    0.82861 (3) obj. -86.8576 iterations 14
Cbc0038I Pass  37: suminf.    0.81321 (4) obj. -86.8576 iterations 1
Cbc0038I Pass  38: suminf.    0.83868 (5) obj. -86.8576 iterations 7
Cbc0038I Pass  39: suminf.    0.46774 (4) obj. -86.8576 iterations 7
Cbc0038I Pass  40: suminf.    1.13072 (4) obj. -86.8576 iterations 8
Cbc0038I Pass  41: suminf.    2.48894 (7) obj. -86.8576 iterations 12
Cbc0038I Pass  42: suminf.    2.21859 (7) obj. -86.8576 iterations 5
Cbc0038I Pass  43: suminf.    1.58131 (6) obj. -86.8576 iterations 6
Cbc0038I Pass  44: suminf.    1.18724 (5) obj. -86.8576 iterations 1
Cbc0038I Pass  45: suminf.    0.63995 (4) obj. -86.8576 iterations 9
Cbc0038I Pass  46: suminf.    0.46774 (4) obj. -86.8576 iterations 7
Cbc0038I Pass  47: suminf.    1.13072 (4) obj. -86.8576 iterations 8
Cbc0038I Pass  48: suminf.    2.24093 (5) obj. -86.8576 iterations 7
Cbc0038I Pass  49: suminf.    2.94915 (8) obj. -86.8576 iterations 15
Cbc0038I Pass  50: suminf.    2.53748 (7) obj. -86.8576 iterations 4
Cbc0038I Pass  51: suminf.    2.48012 (7) obj. -86.8576 iterations 2
Cbc0038I Pass  52: suminf.    1.57223 (5) obj. -86.8576 iterations 12
Cbc0038I Pass  53: suminf.    1.41490 (4) obj. -86.8576 iterations 6
Cbc0038I Pass  54: suminf.    1.39037 (4) obj. -86.8576 iterations 7
Cbc0038I Pass  55: suminf.    1.39037 (4) obj. -86.8576 iterations 3
Cbc0038I Pass  56: suminf.    1.51057 (4) obj. -86.8576 iterations 7
Cbc0038I Pass  57: suminf.    2.28088 (6) obj. -86.8576 iterations 8
Cbc0038I Pass  58: suminf.    1.61245 (5) obj. -86.8576 iterations 5
Cbc0038I Pass  59: suminf.    1.21572 (7) obj. -86.8576 iterations 7
Cbc0038I Pass  60: suminf.    1.17275 (7) obj. -86.8576 iterations 1
Cbc0038I Pass  61: suminf.    1.57069 (5) obj. -86.8576 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 33 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -81.75 - took 0.05 seconds
Cbc0012I Integer solution of -81.75 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 43 rows 47 columns, reduced to 11 rows 14 columns
Cbc0031I 19 added rows had average density of 14.578947
Cbc0013I At root node, 19 cuts changed objective from -107.28745 to -92.026988 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1676 row cuts average 3.6 elements, 8 column cuts (8 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 824 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 73 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 112 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 166 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.692 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -81.75 best solution, best possible -92.026988 (1.47 seconds)
Cbc0012I Integer solution of -82.19283 found by rounding after 1858 iterations and 12 nodes (1.55 seconds)
Cbc0012I Integer solution of -83.19283 found by rounding after 2283 iterations and 28 nodes (1.60 seconds)
Cbc0012I Integer solution of -85.86433 found by rounding after 2310 iterations and 29 nodes (1.60 seconds)
Cbc0001I Search completed - best objective -85.86433, took 2345 iterations and 30 nodes (1.61 seconds)
Cbc0032I Strong branching done 438 times (2974 iterations), fathomed 5 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 36 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.61

