Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 0.000132392 - average 3.48399e-06, 2 fixed columns
Coin0506I Presolve 34 (-4) rows, 20 (-2) columns and 101 (-11) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 67.247415
Clp0000I Optimal - objective value 67.247415
Coin0511I After Postsolve, objective 67.247415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.247415
Clp0000I Optimal - objective value 67.247415
Clp0000I Optimal - objective value 67.247415
Coin0511I After Postsolve, objective 67.247415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.24741537 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.63819
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.87021 iterations 15
Cbc0038I Solution found of 4.87021
Cbc0038I Relaxing continuous gives 4.87021
Cbc0038I Rounding solution of -3.04812 is better than previous of 4.87021

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3.04812 to -24.4894 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.7592
Cbc0038I Pass   2: suminf.    1.03827 (4) obj. -28.7592 iterations 5
Cbc0038I Pass   3: suminf.    0.77975 (3) obj. -28.7592 iterations 3
Cbc0038I Pass   4: suminf.    1.23010 (3) obj. -28.7592 iterations 2
Cbc0038I Pass   5: suminf.    0.91231 (3) obj. -28.7592 iterations 2
Cbc0038I Pass   6: suminf.    1.71275 (6) obj. -28.7592 iterations 7
Cbc0038I Pass   7: suminf.    0.93923 (3) obj. -28.7592 iterations 6
Cbc0038I Pass   8: suminf.    0.80696 (2) obj. -28.7592 iterations 4
Cbc0038I Pass   9: suminf.    0.86993 (3) obj. -28.7592 iterations 2
Cbc0038I Pass  10: suminf.    1.27544 (6) obj. -28.7592 iterations 6
Cbc0038I Pass  11: suminf.    0.97703 (4) obj. -28.7592 iterations 2
Cbc0038I Pass  12: suminf.    0.97682 (4) obj. -28.7592 iterations 1
Cbc0038I Pass  13: suminf.    1.06429 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  14: suminf.    0.57145 (2) obj. -28.7592 iterations 1
Cbc0038I Pass  15: suminf.    0.44314 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  16: suminf.    0.91730 (3) obj. -28.7592 iterations 2
Cbc0038I Pass  17: suminf.    0.91730 (3) obj. -28.7592 iterations 0
Cbc0038I Pass  18: suminf.    0.56333 (2) obj. -28.7592 iterations 4
Cbc0038I Pass  19: suminf.    2.53654 (7) obj. -28.7592 iterations 12
Cbc0038I Pass  20: suminf.    2.07711 (6) obj. -28.7592 iterations 7
Cbc0038I Pass  21: suminf.    1.48391 (4) obj. -28.7592 iterations 6
Cbc0038I Pass  22: suminf.    0.98914 (3) obj. -28.7592 iterations 1
Cbc0038I Pass  23: suminf.    0.98914 (3) obj. -28.7592 iterations 1
Cbc0038I Pass  24: suminf.    0.86993 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  25: suminf.    1.27544 (6) obj. -28.7592 iterations 6
Cbc0038I Pass  26: suminf.    0.97703 (4) obj. -28.7592 iterations 2
Cbc0038I Pass  27: suminf.    0.97682 (4) obj. -28.7592 iterations 1
Cbc0038I Pass  28: suminf.    1.06429 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  29: suminf.    0.57145 (2) obj. -28.7592 iterations 1
Cbc0038I Pass  30: suminf.    0.44314 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  31: suminf.    0.91730 (3) obj. -28.7592 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.4894 - took 0.02 seconds
Cbc0012I Integer solution of -24.489393 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 23 rows 15 columns
Cbc0031I 10 added rows had average density of 18.3
Cbc0013I At root node, 10 cuts changed objective from -67.186193 to -44.427427 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1357 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 817 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.48939250000001, took 2397 iterations and 6 nodes (0.16 seconds)
Cbc0032I Strong branching done 54 times (581 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-11) rows, 39 (-5) columns and 308 (-52) elements
Clp1000I sum of infeasibilities 1.09973e-08 - average 3.14208e-10, 7 fixed columns
Coin0506I Presolve 28 (-7) rows, 31 (-8) columns and 193 (-115) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 3.7540962 - largest nonzero change 0 ( 0%) - largest zero change 2.4222817e-05
Clp0000I Optimal - objective value 86.617061
Clp0000I Optimal - objective value 86.617061
Coin0511I After Postsolve, objective 86.617061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.617061
Clp0000I Optimal - objective value 86.617061
Clp0000I Optimal - objective value 86.617061
Coin0511I After Postsolve, objective 86.617061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.61706071 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 319 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.04574
Cbc0038I Pass   1: suminf.    0.44881 (6) obj. -21.7799 iterations 12
Cbc0038I Pass   2: suminf.    0.44881 (6) obj. -21.7799 iterations 1
Cbc0038I Solution found of 10.9732
Cbc0038I Rounding solution of -17.0475 is better than previous of 10.9732

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -17.0475 to -18.808 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.8372
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.76832 (14) obj. -23.8372 iterations 5
Cbc0038I Pass   4: suminf.    0.63229 (7) obj. -23.8372 iterations 3
Cbc0038I Pass   5: suminf.    0.57651 (11) obj. -23.8372 iterations 10
Cbc0038I Pass   6: suminf.    0.57651 (11) obj. -23.8372 iterations 0
Cbc0038I Pass   7: suminf.    0.62123 (2) obj. -23.8372 iterations 13
Cbc0038I Pass   8: suminf.    0.39850 (2) obj. -27.6237 iterations 1
Cbc0038I Pass   9: suminf.    0.62123 (2) obj. -23.8372 iterations 3
Cbc0038I Pass  10: suminf.    1.01628 (6) obj. -23.8372 iterations 8
Cbc0038I Pass  11: suminf.    0.89690 (5) obj. -23.8372 iterations 2
Cbc0038I Pass  12: suminf.    1.05093 (8) obj. -23.9407 iterations 8
Cbc0038I Pass  13: suminf.    1.05093 (8) obj. -23.9407 iterations 0
Cbc0038I Pass  14: suminf.    0.48970 (3) obj. -23.8372 iterations 8
Cbc0038I Pass  15: suminf.    0.48970 (3) obj. -23.8372 iterations 0
Cbc0038I Pass  16: suminf.    0.81566 (3) obj. -23.8372 iterations 3
Cbc0038I Pass  17: suminf.    0.70294 (2) obj. -23.8372 iterations 3
Cbc0038I Pass  18: suminf.    0.56391 (2) obj. -29.015 iterations 1
Cbc0038I Pass  19: suminf.    0.33187 (2) obj. -23.8372 iterations 1
Cbc0038I Pass  20: suminf.    0.70294 (2) obj. -23.8372 iterations 2
Cbc0038I Pass  21: suminf.    1.15305 (5) obj. -24.6261 iterations 5
Cbc0038I Pass  22: suminf.    0.92926 (4) obj. -23.8372 iterations 2
Cbc0038I Pass  23: suminf.    0.85512 (5) obj. -23.8372 iterations 11
Cbc0038I Pass  24: suminf.    0.75513 (5) obj. -25.537 iterations 1
Cbc0038I Pass  25: suminf.    0.89757 (5) obj. -23.8372 iterations 7
Cbc0038I Pass  26: suminf.    0.82605 (5) obj. -23.8372 iterations 2
Cbc0038I Pass  27: suminf.    0.95602 (3) obj. -23.8372 iterations 6
Cbc0038I Pass  28: suminf.    0.77370 (3) obj. -23.8372 iterations 1
Cbc0038I Pass  29: suminf.    1.50779 (8) obj. -23.8372 iterations 5
Cbc0038I Pass  30: suminf.    1.32566 (9) obj. -28.6824 iterations 15
Cbc0038I Pass  31: suminf.    1.32566 (9) obj. -28.6824 iterations 1
Cbc0038I Pass  32: suminf.    0.99643 (4) obj. -23.8372 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 21 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -18.808 to -24.4894 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.4115
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.00284 (14) obj. -33.4115 iterations 0
Cbc0038I Pass  33: suminf.    1.11852 (5) obj. -33.4115 iterations 17
Cbc0038I Pass  34: suminf.    0.98369 (5) obj. -33.4115 iterations 2
Cbc0038I Pass  35: suminf.    1.37391 (4) obj. -33.4115 iterations 6
Cbc0038I Pass  36: suminf.    0.94261 (3) obj. -33.4115 iterations 1
Cbc0038I Pass  37: suminf.    0.88507 (3) obj. -34.3898 iterations 1
Cbc0038I Pass  38: suminf.    0.66545 (3) obj. -33.4115 iterations 8
Cbc0038I Pass  39: suminf.    0.62022 (3) obj. -33.4115 iterations 7
Cbc0038I Pass  40: suminf.    0.83731 (3) obj. -33.4115 iterations 2
Cbc0038I Pass  41: suminf.    0.83731 (3) obj. -33.4115 iterations 0
Cbc0038I Pass  42: suminf.    0.62022 (3) obj. -33.4115 iterations 4
Cbc0038I Pass  43: suminf.    1.77698 (7) obj. -33.4115 iterations 8
Cbc0038I Pass  44: suminf.    1.57482 (6) obj. -33.4115 iterations 3
Cbc0038I Pass  45: suminf.    0.62022 (3) obj. -33.4115 iterations 8
Cbc0038I Pass  46: suminf.    0.62022 (3) obj. -33.4115 iterations 0
Cbc0038I Pass  47: suminf.    0.83731 (3) obj. -33.4115 iterations 2
Cbc0038I Pass  48: suminf.    0.83731 (3) obj. -33.4115 iterations 0
Cbc0038I Pass  49: suminf.    0.62022 (3) obj. -33.4115 iterations 4
Cbc0038I Pass  50: suminf.    1.87538 (5) obj. -33.4115 iterations 7
Cbc0038I Pass  51: suminf.    0.85281 (5) obj. -33.4115 iterations 4
Cbc0038I Pass  52: suminf.    0.85281 (5) obj. -33.4115 iterations 2
Cbc0038I Pass  53: suminf.    1.11335 (4) obj. -33.4115 iterations 4
Cbc0038I Pass  54: suminf.    0.97160 (3) obj. -33.4115 iterations 1
Cbc0038I Pass  55: suminf.    0.74084 (3) obj. -33.4115 iterations 1
Cbc0038I Pass  56: suminf.    1.11273 (3) obj. -33.4115 iterations 2
Cbc0038I Pass  57: suminf.    1.43672 (6) obj. -33.4115 iterations 5
Cbc0038I Pass  58: suminf.    1.43370 (5) obj. -33.4115 iterations 2
Cbc0038I Pass  59: suminf.    1.71927 (8) obj. -33.4115 iterations 6
Cbc0038I Pass  60: suminf.    1.24368 (6) obj. -33.4115 iterations 3
Cbc0038I Pass  61: suminf.    0.98847 (3) obj. -33.4115 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -24.4894 - took 0.03 seconds
Cbc0012I Integer solution of -24.489393 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 7 rows 8 columns
Cbc0031I 10 added rows had average density of 7.6
Cbc0013I At root node, 20 cuts changed objective from -69.099303 to -24.489392 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 2.3 elements, 14 column cuts (14 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.48939250000001, took 64 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 0.000132392 - average 3.48399e-06, 2 fixed columns
Coin0506I Presolve 34 (-4) rows, 20 (-2) columns and 101 (-11) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 67.247415
Clp0000I Optimal - objective value 67.247415
Coin0511I After Postsolve, objective 67.247415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.247415
Clp0000I Optimal - objective value 67.247415
Clp0000I Optimal - objective value 67.247415
Coin0511I After Postsolve, objective 67.247415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.24741537 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.63819
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.87021 iterations 15
Cbc0038I Solution found of 4.87021
Cbc0038I Relaxing continuous gives 4.87021
Cbc0038I Rounding solution of -3.04812 is better than previous of 4.87021

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3.04812 to -24.4894 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.7592
Cbc0038I Pass   2: suminf.    1.03827 (4) obj. -28.7592 iterations 5
Cbc0038I Pass   3: suminf.    0.77975 (3) obj. -28.7592 iterations 3
Cbc0038I Pass   4: suminf.    1.23010 (3) obj. -28.7592 iterations 2
Cbc0038I Pass   5: suminf.    0.91231 (3) obj. -28.7592 iterations 2
Cbc0038I Pass   6: suminf.    1.71275 (6) obj. -28.7592 iterations 7
Cbc0038I Pass   7: suminf.    0.93923 (3) obj. -28.7592 iterations 6
Cbc0038I Pass   8: suminf.    0.80696 (2) obj. -28.7592 iterations 4
Cbc0038I Pass   9: suminf.    0.86993 (3) obj. -28.7592 iterations 2
Cbc0038I Pass  10: suminf.    1.27544 (6) obj. -28.7592 iterations 6
Cbc0038I Pass  11: suminf.    0.97703 (4) obj. -28.7592 iterations 2
Cbc0038I Pass  12: suminf.    0.97682 (4) obj. -28.7592 iterations 1
Cbc0038I Pass  13: suminf.    1.06429 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  14: suminf.    0.57145 (2) obj. -28.7592 iterations 1
Cbc0038I Pass  15: suminf.    0.44314 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  16: suminf.    0.91730 (3) obj. -28.7592 iterations 2
Cbc0038I Pass  17: suminf.    0.91730 (3) obj. -28.7592 iterations 0
Cbc0038I Pass  18: suminf.    0.56333 (2) obj. -28.7592 iterations 4
Cbc0038I Pass  19: suminf.    2.53654 (7) obj. -28.7592 iterations 12
Cbc0038I Pass  20: suminf.    2.07711 (6) obj. -28.7592 iterations 7
Cbc0038I Pass  21: suminf.    1.48391 (4) obj. -28.7592 iterations 6
Cbc0038I Pass  22: suminf.    0.98914 (3) obj. -28.7592 iterations 1
Cbc0038I Pass  23: suminf.    0.98914 (3) obj. -28.7592 iterations 1
Cbc0038I Pass  24: suminf.    0.86993 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  25: suminf.    1.27544 (6) obj. -28.7592 iterations 6
Cbc0038I Pass  26: suminf.    0.97703 (4) obj. -28.7592 iterations 2
Cbc0038I Pass  27: suminf.    0.97682 (4) obj. -28.7592 iterations 1
Cbc0038I Pass  28: suminf.    1.06429 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  29: suminf.    0.57145 (2) obj. -28.7592 iterations 1
Cbc0038I Pass  30: suminf.    0.44314 (3) obj. -28.7592 iterations 5
Cbc0038I Pass  31: suminf.    0.91730 (3) obj. -28.7592 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.4894 - took 0.02 seconds
Cbc0012I Integer solution of -24.489393 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 23 rows 15 columns
Cbc0031I 10 added rows had average density of 18.3
Cbc0013I At root node, 10 cuts changed objective from -67.186193 to -44.427427 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1357 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 817 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.48939250000001, took 2397 iterations and 6 nodes (0.17 seconds)
Cbc0032I Strong branching done 54 times (581 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 39 (-6) columns and 308 (-53) elements
Clp1000I sum of infeasibilities 1.09973e-08 - average 3.14208e-10, 7 fixed columns
Coin0506I Presolve 28 (-7) rows, 31 (-8) columns and 193 (-115) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 3.7540962 - largest nonzero change 0 ( 0%) - largest zero change 2.4222817e-05
Clp0000I Optimal - objective value 86.617061
Clp0000I Optimal - objective value 86.617061
Coin0511I After Postsolve, objective 86.617061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.617061
Clp0000I Optimal - objective value 86.617061
Clp0000I Optimal - objective value 86.617061
Coin0511I After Postsolve, objective 86.617061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.61706071 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 319 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.04574
Cbc0038I Pass   1: suminf.    0.44881 (6) obj. -21.7799 iterations 12
Cbc0038I Pass   2: suminf.    0.44881 (6) obj. -21.7799 iterations 1
Cbc0038I Solution found of 10.9732
Cbc0038I Rounding solution of -17.0475 is better than previous of 10.9732

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -17.0475 to -18.808 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.8372
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.76832 (14) obj. -23.8372 iterations 5
Cbc0038I Pass   4: suminf.    0.63229 (7) obj. -23.8372 iterations 3
Cbc0038I Pass   5: suminf.    0.57651 (11) obj. -23.8372 iterations 10
Cbc0038I Pass   6: suminf.    0.57651 (11) obj. -23.8372 iterations 0
Cbc0038I Pass   7: suminf.    0.62123 (2) obj. -23.8372 iterations 13
Cbc0038I Pass   8: suminf.    0.39850 (2) obj. -27.6237 iterations 1
Cbc0038I Pass   9: suminf.    0.62123 (2) obj. -23.8372 iterations 3
Cbc0038I Pass  10: suminf.    1.01628 (6) obj. -23.8372 iterations 8
Cbc0038I Pass  11: suminf.    0.89690 (5) obj. -23.8372 iterations 2
Cbc0038I Pass  12: suminf.    1.05093 (8) obj. -23.9407 iterations 8
Cbc0038I Pass  13: suminf.    1.05093 (8) obj. -23.9407 iterations 0
Cbc0038I Pass  14: suminf.    0.48970 (3) obj. -23.8372 iterations 8
Cbc0038I Pass  15: suminf.    0.48970 (3) obj. -23.8372 iterations 0
Cbc0038I Pass  16: suminf.    0.81566 (3) obj. -23.8372 iterations 3
Cbc0038I Pass  17: suminf.    0.70294 (2) obj. -23.8372 iterations 3
Cbc0038I Pass  18: suminf.    0.56391 (2) obj. -29.015 iterations 1
Cbc0038I Pass  19: suminf.    0.33187 (2) obj. -23.8372 iterations 1
Cbc0038I Pass  20: suminf.    0.70294 (2) obj. -23.8372 iterations 2
Cbc0038I Pass  21: suminf.    1.15305 (5) obj. -24.6261 iterations 5
Cbc0038I Pass  22: suminf.    0.92926 (4) obj. -23.8372 iterations 2
Cbc0038I Pass  23: suminf.    0.85512 (5) obj. -23.8372 iterations 11
Cbc0038I Pass  24: suminf.    0.75513 (5) obj. -25.537 iterations 1
Cbc0038I Pass  25: suminf.    0.89757 (5) obj. -23.8372 iterations 7
Cbc0038I Pass  26: suminf.    0.82605 (5) obj. -23.8372 iterations 2
Cbc0038I Pass  27: suminf.    0.95602 (3) obj. -23.8372 iterations 6
Cbc0038I Pass  28: suminf.    0.77370 (3) obj. -23.8372 iterations 1
Cbc0038I Pass  29: suminf.    1.50779 (8) obj. -23.8372 iterations 5
Cbc0038I Pass  30: suminf.    1.32566 (9) obj. -28.6824 iterations 15
Cbc0038I Pass  31: suminf.    1.32566 (9) obj. -28.6824 iterations 1
Cbc0038I Pass  32: suminf.    0.99643 (4) obj. -23.8372 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 21 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -18.808 to -24.4894 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.4115
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.00284 (14) obj. -33.4115 iterations 0
Cbc0038I Pass  33: suminf.    1.11852 (5) obj. -33.4115 iterations 17
Cbc0038I Pass  34: suminf.    0.98369 (5) obj. -33.4115 iterations 2
Cbc0038I Pass  35: suminf.    1.37391 (4) obj. -33.4115 iterations 6
Cbc0038I Pass  36: suminf.    0.94261 (3) obj. -33.4115 iterations 1
Cbc0038I Pass  37: suminf.    0.88507 (3) obj. -34.3898 iterations 1
Cbc0038I Pass  38: suminf.    0.66545 (3) obj. -33.4115 iterations 8
Cbc0038I Pass  39: suminf.    0.62022 (3) obj. -33.4115 iterations 7
Cbc0038I Pass  40: suminf.    0.83731 (3) obj. -33.4115 iterations 2
Cbc0038I Pass  41: suminf.    0.83731 (3) obj. -33.4115 iterations 0
Cbc0038I Pass  42: suminf.    0.62022 (3) obj. -33.4115 iterations 4
Cbc0038I Pass  43: suminf.    1.77698 (7) obj. -33.4115 iterations 8
Cbc0038I Pass  44: suminf.    1.57482 (6) obj. -33.4115 iterations 3
Cbc0038I Pass  45: suminf.    0.62022 (3) obj. -33.4115 iterations 8
Cbc0038I Pass  46: suminf.    0.62022 (3) obj. -33.4115 iterations 0
Cbc0038I Pass  47: suminf.    0.83731 (3) obj. -33.4115 iterations 2
Cbc0038I Pass  48: suminf.    0.83731 (3) obj. -33.4115 iterations 0
Cbc0038I Pass  49: suminf.    0.62022 (3) obj. -33.4115 iterations 4
Cbc0038I Pass  50: suminf.    1.87538 (5) obj. -33.4115 iterations 7
Cbc0038I Pass  51: suminf.    0.85281 (5) obj. -33.4115 iterations 4
Cbc0038I Pass  52: suminf.    0.85281 (5) obj. -33.4115 iterations 2
Cbc0038I Pass  53: suminf.    1.11335 (4) obj. -33.4115 iterations 4
Cbc0038I Pass  54: suminf.    0.97160 (3) obj. -33.4115 iterations 1
Cbc0038I Pass  55: suminf.    0.74084 (3) obj. -33.4115 iterations 1
Cbc0038I Pass  56: suminf.    1.11273 (3) obj. -33.4115 iterations 2
Cbc0038I Pass  57: suminf.    1.43672 (6) obj. -33.4115 iterations 5
Cbc0038I Pass  58: suminf.    1.43370 (5) obj. -33.4115 iterations 2
Cbc0038I Pass  59: suminf.    1.71927 (8) obj. -33.4115 iterations 6
Cbc0038I Pass  60: suminf.    1.24368 (6) obj. -33.4115 iterations 3
Cbc0038I Pass  61: suminf.    0.98847 (3) obj. -33.4115 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -24.4894 - took 0.03 seconds
Cbc0012I Integer solution of -24.489393 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 7 rows 8 columns
Cbc0031I 10 added rows had average density of 7.6
Cbc0013I At root node, 20 cuts changed objective from -69.099303 to -24.489392 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 2.3 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 37 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.48939250000001, took 64 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

