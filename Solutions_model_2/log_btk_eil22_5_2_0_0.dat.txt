Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 7.42287e-06 - average 1.95339e-07, 2 fixed columns
Coin0506I Presolve 32 (-6) rows, 19 (-3) columns and 94 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 79.879007
Clp0000I Optimal - objective value 79.879007
Coin0511I After Postsolve, objective 79.879007, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.879007
Clp0000I Optimal - objective value 79.879007
Clp0000I Optimal - objective value 79.879007
Coin0511I After Postsolve, objective 79.879007, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.87900747 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.25111
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.478 iterations 13
Cbc0038I Solution found of -24.478
Cbc0038I Relaxing continuous gives -24.478
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -24.478 to -33.8377 (0.02 seconds)
Cbc0038I Round again with cutoff of -38.4419
Cbc0038I Pass   2: suminf.    0.36108 (2) obj. -38.4419 iterations 2
Cbc0038I Pass   3: suminf.    0.40000 (1) obj. -38.4419 iterations 2
Cbc0038I Pass   4: suminf.    0.15959 (1) obj. -38.4419 iterations 1
Cbc0038I Pass   5: suminf.    1.26840 (3) obj. -38.4419 iterations 5
Cbc0038I Pass   6: suminf.    0.84132 (2) obj. -38.4419 iterations 4
Cbc0038I Pass   7: suminf.    0.24000 (1) obj. -38.4419 iterations 2
Cbc0038I Pass   8: suminf.    0.41461 (1) obj. -38.4419 iterations 1
Cbc0038I Pass   9: suminf.    1.46152 (6) obj. -38.4419 iterations 6
Cbc0038I Pass  10: suminf.    0.97026 (3) obj. -38.4419 iterations 4
Cbc0038I Pass  11: suminf.    0.09524 (1) obj. -38.4419 iterations 5
Cbc0038I Pass  12: suminf.    0.09524 (1) obj. -38.4419 iterations 0
Cbc0038I Pass  13: suminf.    0.12596 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  14: suminf.    0.41461 (1) obj. -38.4419 iterations 4
Cbc0038I Pass  15: suminf.    0.24000 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  16: suminf.    0.41461 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  17: suminf.    1.23327 (4) obj. -38.4419 iterations 5
Cbc0038I Pass  18: suminf.    0.36108 (2) obj. -38.4419 iterations 3
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -38.4419 iterations 2
Cbc0038I Pass  20: suminf.    0.15959 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  21: suminf.    2.25908 (7) obj. -38.4419 iterations 11
Cbc0038I Pass  22: suminf.    0.36110 (2) obj. -38.4419 iterations 5
Cbc0038I Pass  23: suminf.    0.36110 (2) obj. -38.4419 iterations 0
Cbc0038I Pass  24: suminf.    0.30944 (1) obj. -38.4419 iterations 2
Cbc0038I Pass  25: suminf.    0.47876 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  26: suminf.    0.75641 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  27: suminf.    0.67260 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  28: suminf.    0.41461 (1) obj. -38.4419 iterations 2
Cbc0038I Pass  29: suminf.    0.24000 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  30: suminf.    0.57674 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  31: suminf.    0.57674 (2) obj. -38.4419 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -33.8377 to -37.6618 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.7293
Cbc0038I Pass  31: suminf.    0.64834 (2) obj. -46.7293 iterations 0
Cbc0038I Pass  32: suminf.    0.40000 (1) obj. -46.7293 iterations 2
Cbc0038I Pass  33: suminf.    0.44685 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  34: suminf.    0.96774 (2) obj. -46.7293 iterations 4
Cbc0038I Pass  35: suminf.    0.44685 (1) obj. -46.7293 iterations 4
Cbc0038I Pass  36: suminf.    2.90327 (8) obj. -46.7293 iterations 10
Cbc0038I Pass  37: suminf.    1.71378 (5) obj. -46.7293 iterations 5
Cbc0038I Pass  38: suminf.    0.64239 (3) obj. -46.7293 iterations 5
Cbc0038I Pass  39: suminf.    0.24000 (1) obj. -46.7293 iterations 3
Cbc0038I Pass  40: suminf.    0.29813 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  41: suminf.    0.54347 (3) obj. -46.7293 iterations 5
Cbc0038I Pass  42: suminf.    0.52566 (2) obj. -46.7293 iterations 1
Cbc0038I Pass  43: suminf.    1.04238 (3) obj. -46.7293 iterations 3
Cbc0038I Pass  44: suminf.    0.54347 (3) obj. -46.7293 iterations 2
Cbc0038I Pass  45: suminf.    1.00368 (3) obj. -46.7293 iterations 7
Cbc0038I Pass  46: suminf.    0.64751 (3) obj. -46.7293 iterations 3
Cbc0038I Pass  47: suminf.    0.57672 (3) obj. -46.7293 iterations 1
Cbc0038I Pass  48: suminf.    0.79102 (2) obj. -46.7293 iterations 4
Cbc0038I Pass  49: suminf.    0.73463 (2) obj. -46.7293 iterations 2
Cbc0038I Pass  50: suminf.    0.76869 (2) obj. -46.7293 iterations 1
Cbc0038I Pass  51: suminf.    0.44685 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  52: suminf.    0.40000 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  53: suminf.    1.13889 (5) obj. -46.7293 iterations 8
Cbc0038I Pass  54: suminf.    0.82314 (3) obj. -46.7293 iterations 3
Cbc0038I Pass  55: suminf.    2.50266 (7) obj. -46.7293 iterations 10
Cbc0038I Pass  56: suminf.    0.70625 (5) obj. -46.7293 iterations 3
Cbc0038I Pass  57: suminf.    0.63948 (5) obj. -46.7293 iterations 2
Cbc0038I Pass  58: suminf.    0.90361 (3) obj. -46.7293 iterations 5
Cbc0038I Pass  59: suminf.    0.51396 (2) obj. -46.7293 iterations 1
Cbc0038I Pass  60: suminf.    0.44685 (1) obj. -46.7293 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -37.6618 - took 0.03 seconds
Cbc0012I Integer solution of -37.66177 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 23 rows 16 columns
Cbc0031I 11 added rows had average density of 16.181818
Cbc0013I At root node, 11 cuts changed objective from -79.879007 to -56.849068 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1161 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 449 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 78 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.66176999999999, took 2197 iterations and 8 nodes (0.18 seconds)
Cbc0032I Strong branching done 84 times (737 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-9) rows, 41 (-3) columns and 311 (-49) elements
Clp1000I sum of infeasibilities 8.77984e-09 - average 2.37293e-10, 27 fixed columns
Coin0506I Presolve 11 (-26) rows, 14 (-27) columns and 45 (-266) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 2.8486375 - largest nonzero change 2.9040281e-05 ( 0.0016293615%) - largest zero change 1.9083824e-05
Clp0000I Optimal - objective value 4.757589
Clp0000I Optimal - objective value 4.757589
Coin0511I After Postsolve, objective 4.757589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7108571 - largest nonzero change 2.6476614e-05 ( 0.0016293615%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 99.59574
Clp0000I Optimal - objective value 99.59574
Clp0000I Optimal - objective value 99.59574
Coin0511I After Postsolve, objective 99.59574, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.5957396 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 314 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.199%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.5533
Cbc0038I Pass   1: suminf.    1.76905 (12) obj. -72.9049 iterations 2
Cbc0038I Solution found of -30.1144
Cbc0038I Rounding solution of -31.1508 is better than previous of -30.1144

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.2689
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.76905 (12) obj. -72.9049 iterations 0
Cbc0038I Pass   3: suminf.    0.21333 (1) obj. -36.2689 iterations 15
Cbc0038I Pass   4: suminf.    0.28000 (1) obj. -38.1924 iterations 1
Cbc0038I Pass   5: suminf.    0.81433 (6) obj. -36.2689 iterations 9
Cbc0038I Pass   6: suminf.    0.75259 (5) obj. -36.2689 iterations 3
Cbc0038I Pass   7: suminf.    0.81234 (4) obj. -36.2689 iterations 6
Cbc0038I Pass   8: suminf.    0.79449 (4) obj. -36.2689 iterations 1
Cbc0038I Pass   9: suminf.    0.93680 (3) obj. -36.2689 iterations 4
Cbc0038I Pass  10: suminf.    0.64599 (4) obj. -36.2689 iterations 1
Cbc0038I Pass  11: suminf.    0.96099 (5) obj. -36.2689 iterations 4
Cbc0038I Pass  12: suminf.    0.87333 (3) obj. -36.2689 iterations 1
Cbc0038I Pass  13: suminf.    0.65978 (2) obj. -36.2689 iterations 2
Cbc0038I Pass  14: suminf.    0.65978 (2) obj. -36.2689 iterations 0
Cbc0038I Pass  15: suminf.    0.50526 (2) obj. -42.5882 iterations 1
Cbc0038I Pass  16: suminf.    0.26776 (2) obj. -36.2689 iterations 1
Cbc0038I Pass  17: suminf.    2.16417 (9) obj. -36.2689 iterations 11
Cbc0038I Pass  18: suminf.    1.13069 (6) obj. -36.2689 iterations 1
Cbc0038I Pass  19: suminf.    0.91697 (5) obj. -36.2689 iterations 1
Cbc0038I Pass  20: suminf.    0.58579 (3) obj. -36.2689 iterations 5
Cbc0038I Pass  21: suminf.    0.55422 (3) obj. -36.2689 iterations 1
Cbc0038I Pass  22: suminf.    0.56781 (2) obj. -36.2689 iterations 3
Cbc0038I Pass  23: suminf.    0.56781 (2) obj. -36.2689 iterations 0
Cbc0038I Pass  24: suminf.    0.46972 (2) obj. -36.2689 iterations 1
Cbc0038I Pass  25: suminf.    0.35338 (2) obj. -40.5775 iterations 1
Cbc0038I Pass  26: suminf.    0.56781 (2) obj. -36.2689 iterations 2
Cbc0038I Pass  27: suminf.    0.71272 (2) obj. -36.2689 iterations 4
Cbc0038I Pass  28: suminf.    0.35338 (2) obj. -49.5775 iterations 2
Cbc0038I Pass  29: suminf.    0.13529 (1) obj. -36.2689 iterations 2
Cbc0038I Pass  30: suminf.    0.09524 (1) obj. -37.7078 iterations 1
Cbc0038I Pass  31: suminf.    0.95973 (5) obj. -51.7489 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.1508 - took 0.01 seconds
Cbc0012I Integer solution of -31.15078 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 23 added rows had average density of 12.043478
Cbc0013I At root node, 23 cuts changed objective from -82.330786 to -40.516992 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1530 row cuts average 4.9 elements, 4 column cuts (4 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 588 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 272 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.817 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.15078 best solution, best possible -40.516992 (1.63 seconds)
Cbc0012I Integer solution of -33.8377 found by rounding after 1531 iterations and 1 nodes (1.75 seconds)
Cbc0012I Integer solution of -35.032 found by rounding after 1547 iterations and 2 nodes (1.76 seconds)
Cbc0004I Integer solution of -37.66177 found after 1629 iterations and 3 nodes (1.84 seconds)
Cbc0001I Search completed - best objective -37.66176999999999, took 1662 iterations and 4 nodes (1.84 seconds)
Cbc0032I Strong branching done 72 times (886 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 7.42287e-06 - average 1.95339e-07, 2 fixed columns
Coin0506I Presolve 32 (-6) rows, 19 (-3) columns and 94 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 79.879007
Clp0000I Optimal - objective value 79.879007
Coin0511I After Postsolve, objective 79.879007, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.879007
Clp0000I Optimal - objective value 79.879007
Clp0000I Optimal - objective value 79.879007
Coin0511I After Postsolve, objective 79.879007, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.87900747 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.25111
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.478 iterations 13
Cbc0038I Solution found of -24.478
Cbc0038I Relaxing continuous gives -24.478
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -24.478 to -33.8377 (0.01 seconds)
Cbc0038I Round again with cutoff of -38.4419
Cbc0038I Pass   2: suminf.    0.36108 (2) obj. -38.4419 iterations 2
Cbc0038I Pass   3: suminf.    0.40000 (1) obj. -38.4419 iterations 2
Cbc0038I Pass   4: suminf.    0.15959 (1) obj. -38.4419 iterations 1
Cbc0038I Pass   5: suminf.    1.26840 (3) obj. -38.4419 iterations 5
Cbc0038I Pass   6: suminf.    0.84132 (2) obj. -38.4419 iterations 4
Cbc0038I Pass   7: suminf.    0.24000 (1) obj. -38.4419 iterations 2
Cbc0038I Pass   8: suminf.    0.41461 (1) obj. -38.4419 iterations 1
Cbc0038I Pass   9: suminf.    1.46152 (6) obj. -38.4419 iterations 6
Cbc0038I Pass  10: suminf.    0.97026 (3) obj. -38.4419 iterations 4
Cbc0038I Pass  11: suminf.    0.09524 (1) obj. -38.4419 iterations 5
Cbc0038I Pass  12: suminf.    0.09524 (1) obj. -38.4419 iterations 0
Cbc0038I Pass  13: suminf.    0.12596 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  14: suminf.    0.41461 (1) obj. -38.4419 iterations 4
Cbc0038I Pass  15: suminf.    0.24000 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  16: suminf.    0.41461 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  17: suminf.    1.23327 (4) obj. -38.4419 iterations 5
Cbc0038I Pass  18: suminf.    0.36108 (2) obj. -38.4419 iterations 3
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -38.4419 iterations 2
Cbc0038I Pass  20: suminf.    0.15959 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  21: suminf.    2.25908 (7) obj. -38.4419 iterations 11
Cbc0038I Pass  22: suminf.    0.36110 (2) obj. -38.4419 iterations 5
Cbc0038I Pass  23: suminf.    0.36110 (2) obj. -38.4419 iterations 0
Cbc0038I Pass  24: suminf.    0.30944 (1) obj. -38.4419 iterations 2
Cbc0038I Pass  25: suminf.    0.47876 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  26: suminf.    0.75641 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  27: suminf.    0.67260 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  28: suminf.    0.41461 (1) obj. -38.4419 iterations 2
Cbc0038I Pass  29: suminf.    0.24000 (1) obj. -38.4419 iterations 1
Cbc0038I Pass  30: suminf.    0.57674 (2) obj. -38.4419 iterations 2
Cbc0038I Pass  31: suminf.    0.57674 (2) obj. -38.4419 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -33.8377 to -37.6618 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.7293
Cbc0038I Pass  31: suminf.    0.64834 (2) obj. -46.7293 iterations 0
Cbc0038I Pass  32: suminf.    0.40000 (1) obj. -46.7293 iterations 2
Cbc0038I Pass  33: suminf.    0.44685 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  34: suminf.    0.96774 (2) obj. -46.7293 iterations 4
Cbc0038I Pass  35: suminf.    0.44685 (1) obj. -46.7293 iterations 4
Cbc0038I Pass  36: suminf.    2.90327 (8) obj. -46.7293 iterations 10
Cbc0038I Pass  37: suminf.    1.71378 (5) obj. -46.7293 iterations 5
Cbc0038I Pass  38: suminf.    0.64239 (3) obj. -46.7293 iterations 5
Cbc0038I Pass  39: suminf.    0.24000 (1) obj. -46.7293 iterations 3
Cbc0038I Pass  40: suminf.    0.29813 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  41: suminf.    0.54347 (3) obj. -46.7293 iterations 5
Cbc0038I Pass  42: suminf.    0.52566 (2) obj. -46.7293 iterations 1
Cbc0038I Pass  43: suminf.    1.04238 (3) obj. -46.7293 iterations 3
Cbc0038I Pass  44: suminf.    0.54347 (3) obj. -46.7293 iterations 2
Cbc0038I Pass  45: suminf.    1.00368 (3) obj. -46.7293 iterations 7
Cbc0038I Pass  46: suminf.    0.64751 (3) obj. -46.7293 iterations 3
Cbc0038I Pass  47: suminf.    0.57672 (3) obj. -46.7293 iterations 1
Cbc0038I Pass  48: suminf.    0.79102 (2) obj. -46.7293 iterations 4
Cbc0038I Pass  49: suminf.    0.73463 (2) obj. -46.7293 iterations 2
Cbc0038I Pass  50: suminf.    0.76869 (2) obj. -46.7293 iterations 1
Cbc0038I Pass  51: suminf.    0.44685 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  52: suminf.    0.40000 (1) obj. -46.7293 iterations 1
Cbc0038I Pass  53: suminf.    1.13889 (5) obj. -46.7293 iterations 8
Cbc0038I Pass  54: suminf.    0.82314 (3) obj. -46.7293 iterations 3
Cbc0038I Pass  55: suminf.    2.50266 (7) obj. -46.7293 iterations 10
Cbc0038I Pass  56: suminf.    0.70625 (5) obj. -46.7293 iterations 3
Cbc0038I Pass  57: suminf.    0.63948 (5) obj. -46.7293 iterations 2
Cbc0038I Pass  58: suminf.    0.90361 (3) obj. -46.7293 iterations 5
Cbc0038I Pass  59: suminf.    0.51396 (2) obj. -46.7293 iterations 1
Cbc0038I Pass  60: suminf.    0.44685 (1) obj. -46.7293 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -37.6618 - took 0.03 seconds
Cbc0012I Integer solution of -37.66177 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 23 rows 16 columns
Cbc0031I 11 added rows had average density of 16.181818
Cbc0013I At root node, 11 cuts changed objective from -79.879007 to -56.849068 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1161 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 449 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 78 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.66176999999999, took 2197 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 84 times (737 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 41 (-4) columns and 311 (-50) elements
Clp1000I sum of infeasibilities 8.77984e-09 - average 2.37293e-10, 27 fixed columns
Coin0506I Presolve 11 (-26) rows, 14 (-27) columns and 45 (-266) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 2.8486375 - largest nonzero change 2.9040281e-05 ( 0.0016293615%) - largest zero change 1.9083824e-05
Clp0000I Optimal - objective value 4.757589
Clp0000I Optimal - objective value 4.757589
Coin0511I After Postsolve, objective 4.757589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.7108571 - largest nonzero change 2.6476614e-05 ( 0.0016293615%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 99.59574
Clp0000I Optimal - objective value 99.59574
Clp0000I Optimal - objective value 99.59574
Coin0511I After Postsolve, objective 99.59574, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.5957396 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 314 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.199%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.5533
Cbc0038I Pass   1: suminf.    1.76905 (12) obj. -72.9049 iterations 2
Cbc0038I Solution found of -30.1144
Cbc0038I Rounding solution of -31.1508 is better than previous of -30.1144

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.2689
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.76905 (12) obj. -72.9049 iterations 0
Cbc0038I Pass   3: suminf.    0.21333 (1) obj. -36.2689 iterations 15
Cbc0038I Pass   4: suminf.    0.28000 (1) obj. -38.1924 iterations 1
Cbc0038I Pass   5: suminf.    0.81433 (6) obj. -36.2689 iterations 9
Cbc0038I Pass   6: suminf.    0.75259 (5) obj. -36.2689 iterations 3
Cbc0038I Pass   7: suminf.    0.81234 (4) obj. -36.2689 iterations 6
Cbc0038I Pass   8: suminf.    0.79449 (4) obj. -36.2689 iterations 1
Cbc0038I Pass   9: suminf.    0.93680 (3) obj. -36.2689 iterations 4
Cbc0038I Pass  10: suminf.    0.64599 (4) obj. -36.2689 iterations 1
Cbc0038I Pass  11: suminf.    0.96099 (5) obj. -36.2689 iterations 4
Cbc0038I Pass  12: suminf.    0.87333 (3) obj. -36.2689 iterations 1
Cbc0038I Pass  13: suminf.    0.65978 (2) obj. -36.2689 iterations 2
Cbc0038I Pass  14: suminf.    0.65978 (2) obj. -36.2689 iterations 0
Cbc0038I Pass  15: suminf.    0.50526 (2) obj. -42.5882 iterations 1
Cbc0038I Pass  16: suminf.    0.26776 (2) obj. -36.2689 iterations 1
Cbc0038I Pass  17: suminf.    2.16417 (9) obj. -36.2689 iterations 11
Cbc0038I Pass  18: suminf.    1.13069 (6) obj. -36.2689 iterations 1
Cbc0038I Pass  19: suminf.    0.91697 (5) obj. -36.2689 iterations 1
Cbc0038I Pass  20: suminf.    0.58579 (3) obj. -36.2689 iterations 5
Cbc0038I Pass  21: suminf.    0.55422 (3) obj. -36.2689 iterations 1
Cbc0038I Pass  22: suminf.    0.56781 (2) obj. -36.2689 iterations 3
Cbc0038I Pass  23: suminf.    0.56781 (2) obj. -36.2689 iterations 0
Cbc0038I Pass  24: suminf.    0.46972 (2) obj. -36.2689 iterations 1
Cbc0038I Pass  25: suminf.    0.35338 (2) obj. -40.5775 iterations 1
Cbc0038I Pass  26: suminf.    0.56781 (2) obj. -36.2689 iterations 2
Cbc0038I Pass  27: suminf.    0.71272 (2) obj. -36.2689 iterations 4
Cbc0038I Pass  28: suminf.    0.35338 (2) obj. -49.5775 iterations 2
Cbc0038I Pass  29: suminf.    0.13529 (1) obj. -36.2689 iterations 2
Cbc0038I Pass  30: suminf.    0.09524 (1) obj. -37.7078 iterations 1
Cbc0038I Pass  31: suminf.    0.95973 (5) obj. -51.7489 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -31.1508 - took 0.01 seconds
Cbc0012I Integer solution of -31.15078 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 23 added rows had average density of 12.043478
Cbc0013I At root node, 23 cuts changed objective from -82.330786 to -40.516992 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1530 row cuts average 4.9 elements, 4 column cuts (4 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 588 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 272 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.771 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.15078 best solution, best possible -40.516992 (1.56 seconds)
Cbc0012I Integer solution of -33.8377 found by rounding after 1531 iterations and 1 nodes (1.68 seconds)
Cbc0012I Integer solution of -35.032 found by rounding after 1547 iterations and 2 nodes (1.70 seconds)
Cbc0004I Integer solution of -37.66177 found after 1629 iterations and 3 nodes (1.78 seconds)
Cbc0001I Search completed - best objective -37.66176999999999, took 1662 iterations and 4 nodes (1.78 seconds)
Cbc0032I Strong branching done 72 times (886 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.79

