Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 76 (-2) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 3.59598e-05 - average 2.74502e-07, 10 fixed columns
Coin0506I Presolve 113 (-18) rows, 66 (-10) columns and 350 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 37.075118
Clp0000I Optimal - objective value 37.075118
Coin0511I After Postsolve, objective 37.075118, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.075118
Clp0000I Optimal - objective value 37.075118
Clp0000I Optimal - objective value 37.075118
Coin0511I After Postsolve, objective 37.075118, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.07511766 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 76 columns (75 integer (75 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 11.0034
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.2357 iterations 55
Cbc0038I Solution found of 10.2357
Cbc0038I Relaxing continuous gives 10.2357
Cbc0038I Rounding solution of 4.0391 is better than previous of 10.2357

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 87 rows 52 columns
Cbc0038I Mini branch and bound improved solution from 4.0391 to -2.70093 (0.06 seconds)
Cbc0038I Round again with cutoff of -6.13844
Cbc0038I Pass   2: suminf.    0.57013 (26) obj. -6.13844 iterations 28
Cbc0038I Pass   3: suminf.    0.54906 (40) obj. -6.13844 iterations 14
Cbc0038I Pass   4: suminf.    1.34990 (8) obj. -6.13844 iterations 48
Cbc0038I Pass   5: suminf.    1.00678 (8) obj. -6.13844 iterations 4
Cbc0038I Pass   6: suminf.    3.02824 (9) obj. -6.13844 iterations 16
Cbc0038I Pass   7: suminf.    1.86623 (10) obj. -6.13844 iterations 10
Cbc0038I Pass   8: suminf.    1.40894 (9) obj. -6.13844 iterations 3
Cbc0038I Pass   9: suminf.    2.02891 (7) obj. -6.13844 iterations 12
Cbc0038I Pass  10: suminf.    1.95915 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  11: suminf.    1.95915 (6) obj. -6.13844 iterations 0
Cbc0038I Pass  12: suminf.    2.00624 (6) obj. -6.13844 iterations 5
Cbc0038I Pass  13: suminf.    1.94687 (5) obj. -6.13844 iterations 1
Cbc0038I Pass  14: suminf.    1.94687 (5) obj. -6.13844 iterations 0
Cbc0038I Pass  15: suminf.    2.26152 (7) obj. -6.13844 iterations 4
Cbc0038I Pass  16: suminf.    2.22757 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  17: suminf.    2.25255 (8) obj. -6.13844 iterations 5
Cbc0038I Pass  18: suminf.    2.17932 (7) obj. -6.13844 iterations 1
Cbc0038I Pass  19: suminf.    2.39948 (6) obj. -6.13844 iterations 5
Cbc0038I Pass  20: suminf.    1.64708 (5) obj. -6.13844 iterations 4
Cbc0038I Pass  21: suminf.    1.51611 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  22: suminf.    2.26152 (7) obj. -6.13844 iterations 9
Cbc0038I Pass  23: suminf.    2.22757 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  24: suminf.    2.25255 (8) obj. -6.13844 iterations 5
Cbc0038I Pass  25: suminf.    2.17932 (7) obj. -6.13844 iterations 1
Cbc0038I Pass  26: suminf.    2.39948 (6) obj. -6.13844 iterations 5
Cbc0038I Pass  27: suminf.    1.64708 (5) obj. -6.13844 iterations 4
Cbc0038I Pass  28: suminf.    1.51611 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  29: suminf.    2.26152 (7) obj. -6.13844 iterations 9
Cbc0038I Pass  30: suminf.    2.22757 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  31: suminf.    2.25255 (8) obj. -6.13844 iterations 5
Cbc0038I Rounding solution of -3.79339 is better than previous of -2.70093

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -3.79339 to -4.41102 (0.13 seconds)
Cbc0038I Round again with cutoff of -12.3258
Cbc0038I Pass  31: suminf.    2.61227 (26) obj. -12.3258 iterations 0
Cbc0038I Pass  32: suminf.    2.51572 (40) obj. -12.3258 iterations 14
Cbc0038I Pass  33: suminf.    2.92224 (11) obj. -12.3258 iterations 33
Cbc0038I Pass  34: suminf.    2.19206 (10) obj. -12.3258 iterations 6
Cbc0038I Pass  35: suminf.    3.42017 (17) obj. -12.3258 iterations 23
Cbc0038I Pass  36: suminf.    3.30310 (11) obj. -12.3258 iterations 12
Cbc0038I Pass  37: suminf.    2.59097 (8) obj. -12.3258 iterations 3
Cbc0038I Pass  38: suminf.    3.30583 (11) obj. -12.3258 iterations 6
Cbc0038I Pass  39: suminf.    3.29988 (10) obj. -12.3258 iterations 1
Cbc0038I Pass  40: suminf.    3.06742 (9) obj. -12.3258 iterations 9
Cbc0038I Pass  41: suminf.    2.72931 (10) obj. -12.3258 iterations 1
Cbc0038I Pass  42: suminf.    2.72931 (10) obj. -12.3258 iterations 0
Cbc0038I Pass  43: suminf.    3.04827 (7) obj. -12.3258 iterations 8
Cbc0038I Pass  44: suminf.    2.31940 (7) obj. -12.3258 iterations 3
Cbc0038I Pass  45: suminf.    2.31940 (7) obj. -12.3258 iterations 0
Cbc0038I Pass  46: suminf.    2.60139 (7) obj. -12.3258 iterations 5
Cbc0038I Pass  47: suminf.    2.60020 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  48: suminf.    2.60020 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  49: suminf.    2.35157 (6) obj. -12.3258 iterations 2
Cbc0038I Pass  50: suminf.    2.19188 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  51: suminf.    2.19188 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  52: suminf.    2.60139 (7) obj. -12.3258 iterations 5
Cbc0038I Pass  53: suminf.    2.60020 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  54: suminf.    2.60020 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  55: suminf.    2.35157 (6) obj. -12.3258 iterations 2
Cbc0038I Pass  56: suminf.    2.19188 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  57: suminf.    2.19188 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  58: suminf.    2.60139 (7) obj. -12.3258 iterations 5
Cbc0038I Pass  59: suminf.    2.60020 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  60: suminf.    2.60020 (6) obj. -12.3258 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -4.41102 - took 0.16 seconds
Cbc0012I Integer solution of -4.41102 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 87 rows 52 columns
Cbc0031I 35 added rows had average density of 55.171429
Cbc0013I At root node, 35 cuts changed objective from -37.075118 to -27.140193 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14852 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1837 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.41102 best solution, best possible -27.140193 (1.11 seconds)
Cbc0012I Integer solution of -4.869196 found by rounding after 9673 iterations and 37 nodes (1.28 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 18 rows 15 columns
Cbc0038I Full problem 131 rows 76 columns, reduced to 14 rows 15 columns
Cbc0001I Search completed - best objective -4.869195999999995, took 12995 iterations and 130 nodes (1.60 seconds)
Cbc0032I Strong branching done 1482 times (19786 iterations), fathomed 9 nodes and fixed 113 variables
Cbc0035I Maximum depth 22, 439 variables fixed on reduced cost
Total time (CPU seconds):       1.55   (Wallclock seconds):       1.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-63) rows, 110 (-42) columns and 1764 (-1539) elements
Clp1000I sum of infeasibilities 7.48871e-08 - average 8.22936e-10, 21 fixed columns
Coin0506I Presolve 72 (-19) rows, 89 (-21) columns and 1250 (-514) elements
Clp0006I 0  Obj 38.391287 Dual inf 3.8244829 (89)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.0639232 - largest nonzero change 2.3587129e-05 ( 0.0014083952%) - largest zero change 2.9811023e-05
Clp0000I Optimal - objective value 47.949329
Clp0000I Optimal - objective value 47.949329
Coin0511I After Postsolve, objective 47.949329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.949329
Clp0000I Optimal - objective value 47.949329
Clp0000I Optimal - objective value 47.949329
Clp0000I Optimal - objective value 47.949329
Coin0511I After Postsolve, objective 47.949329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.94932861 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 112 columns (112 integer (112 of which binary)) and 1773 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.524%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.4803
Cbc0038I Pass   1: suminf.    3.41695 (30) obj. -26.0219 iterations 18
Cbc0038I Pass   2: suminf.    2.52547 (25) obj. -21.1305 iterations 7
Cbc0038I Pass   3: suminf.    0.27599 (4) obj. 2.94469 iterations 21
Cbc0038I Solution found of 8.50762
Cbc0038I Rounding solution of 5.00897 is better than previous of 8.50762

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 112 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 0.991934
Cbc0038I Pass   4: suminf.    3.41695 (30) obj. -26.0219 iterations 0
Cbc0038I Pass   5: suminf.    2.52547 (25) obj. -21.1305 iterations 8
Cbc0038I Pass   6: suminf.    0.57769 (6) obj. 0.991934 iterations 32
Cbc0038I Pass   7: suminf.    0.54058 (5) obj. -1.17862 iterations 1
Cbc0038I Pass   8: suminf.    0.76300 (2) obj. 0.991934 iterations 12
Cbc0038I Pass   9: suminf.    0.45472 (4) obj. 0.10357 iterations 5
Cbc0038I Pass  10: suminf.    0.76300 (2) obj. 0.991934 iterations 5
Cbc0038I Pass  11: suminf.    0.92131 (11) obj. 0.991934 iterations 27
Cbc0038I Pass  12: suminf.    0.85235 (10) obj. 0.991934 iterations 12
Cbc0038I Pass  13: suminf.    2.00599 (9) obj. 0.991934 iterations 16
Cbc0038I Pass  14: suminf.    1.06158 (7) obj. 0.991934 iterations 16
Cbc0038I Pass  15: suminf.    0.39842 (5) obj. 0.991934 iterations 9
Cbc0038I Pass  16: suminf.    0.73586 (6) obj. 0.991934 iterations 3
Cbc0038I Pass  17: suminf.    0.39764 (5) obj. 0.991934 iterations 3
Cbc0038I Pass  18: suminf.    0.72801 (6) obj. 0.991934 iterations 6
Cbc0038I Pass  19: suminf.    1.85111 (12) obj. 0.991934 iterations 39
Cbc0038I Pass  20: suminf.    0.93026 (9) obj. 0.991934 iterations 15
Cbc0038I Pass  21: suminf.    0.90113 (7) obj. 0.991934 iterations 17
Cbc0038I Pass  22: suminf.    0.56517 (6) obj. 0.991934 iterations 6
Cbc0038I Pass  23: suminf.    0.97102 (3) obj. 0.991934 iterations 8
Cbc0038I Pass  24: suminf.    0.50867 (4) obj. 0.991934 iterations 1
Cbc0038I Pass  25: suminf.    1.01095 (8) obj. 0.991934 iterations 9
Cbc0038I Pass  26: suminf.    1.01095 (8) obj. 0.991934 iterations 0
Cbc0038I Pass  27: suminf.    2.32213 (8) obj. 0.991934 iterations 5
Cbc0038I Pass  28: suminf.    2.32213 (8) obj. 0.991934 iterations 0
Cbc0038I Pass  29: suminf.    1.01095 (8) obj. 0.991934 iterations 10
Cbc0038I Pass  30: suminf.    2.02846 (14) obj. 0.991934 iterations 25
Cbc0038I Pass  31: suminf.    2.02846 (14) obj. 0.991934 iterations 4
Cbc0038I Pass  32: suminf.    2.42079 (14) obj. 0.991934 iterations 22
Cbc0038I Pass  33: suminf.    1.67949 (6) obj. 0.991934 iterations 5
Cbc0038I Rounding solution of 4.52544 is better than previous of 5.00897

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 112 columns, reduced to 53 rows 64 columns
Cbc0038I Mini branch and bound improved solution from 4.52544 to -4.41102 (0.09 seconds)
Cbc0038I Round again with cutoff of -10.561
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.41695 (30) obj. -26.0219 iterations 0
Cbc0038I Pass  34: suminf.    3.41695 (30) obj. -26.0219 iterations 1
Cbc0038I Pass  35: suminf.    2.30743 (14) obj. -10.561 iterations 37
Cbc0038I Pass  36: suminf.    2.08224 (17) obj. -10.561 iterations 4
Cbc0038I Pass  37: suminf.    2.94848 (14) obj. -10.561 iterations 23
Cbc0038I Pass  38: suminf.    2.01761 (11) obj. -10.561 iterations 5
Cbc0038I Pass  39: suminf.    2.90279 (11) obj. -10.561 iterations 12
Cbc0038I Pass  40: suminf.    1.97539 (11) obj. -10.561 iterations 8
Cbc0038I Pass  41: suminf.    2.90279 (11) obj. -10.561 iterations 13
Cbc0038I Pass  42: suminf.    2.55130 (15) obj. -10.561 iterations 22
Cbc0038I Pass  43: suminf.    2.03671 (12) obj. -10.561 iterations 8
Cbc0038I Pass  44: suminf.    1.82992 (12) obj. -10.561 iterations 19
Cbc0038I Pass  45: suminf.    1.82992 (12) obj. -10.561 iterations 1
Cbc0038I Pass  46: suminf.    2.24028 (14) obj. -10.561 iterations 8
Cbc0038I Pass  47: suminf.    1.77214 (12) obj. -10.561 iterations 5
Cbc0038I Pass  48: suminf.    2.24028 (14) obj. -10.561 iterations 7
Cbc0038I Pass  49: suminf.    2.43646 (12) obj. -10.561 iterations 14
Cbc0038I Pass  50: suminf.    1.47154 (11) obj. -10.561 iterations 8
Cbc0038I Pass  51: suminf.    1.57734 (12) obj. -10.561 iterations 10
Cbc0038I Pass  52: suminf.    1.57734 (12) obj. -10.561 iterations 1
Cbc0038I Pass  53: suminf.    2.69509 (14) obj. -10.561 iterations 9
Cbc0038I Pass  54: suminf.    1.66068 (12) obj. -10.561 iterations 6
Cbc0038I Pass  55: suminf.    2.69509 (14) obj. -10.561 iterations 8
Cbc0038I Pass  56: suminf.    2.68997 (15) obj. -10.561 iterations 24
Cbc0038I Pass  57: suminf.    1.82715 (16) obj. -10.561 iterations 8
Cbc0038I Pass  58: suminf.    1.79776 (13) obj. -10.561 iterations 12
Cbc0038I Pass  59: suminf.    1.59855 (13) obj. -10.561 iterations 7
Cbc0038I Pass  60: suminf.    2.13526 (13) obj. -10.561 iterations 5
Cbc0038I Pass  61: suminf.    3.09410 (15) obj. -10.561 iterations 25
Cbc0038I Pass  62: suminf.    2.84172 (18) obj. -10.561 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 112 columns, reduced to 52 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -4.41102 - took 0.14 seconds
Cbc0012I Integer solution of -4.41102 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 93 rows 112 columns, reduced to 43 rows 47 columns
Cbc0031I 52 added rows had average density of 39.288462
Cbc0013I At root node, 52 cuts changed objective from -35.160508 to -12.811332 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15444 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1381 row cuts average 106.5 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 613 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1408 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 367 row cuts average 56.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.656 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.41102 best solution, best possible -12.811332 (2.65 seconds)
Cbc0010I After 32 nodes, 1 on tree, -4.41102 best solution, best possible -9.8618895 (3.52 seconds)
Cbc0012I Integer solution of -4.526086 found by DiveCoefficient after 8118 iterations and 35 nodes (3.62 seconds)
Cbc0012I Integer solution of -4.869196 found by rounding after 8449 iterations and 44 nodes (3.68 seconds)
Cbc0038I Full problem 93 rows 112 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -4.869195999999995, took 8486 iterations and 48 nodes (3.69 seconds)
Cbc0032I Strong branching done 712 times (16806 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 14, 123 variables fixed on reduced cost
Total time (CPU seconds):       2.93   (Wallclock seconds):       3.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 76 (-2) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 3.59598e-05 - average 2.74502e-07, 10 fixed columns
Coin0506I Presolve 113 (-18) rows, 66 (-10) columns and 350 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 37.075118
Clp0000I Optimal - objective value 37.075118
Coin0511I After Postsolve, objective 37.075118, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.075118
Clp0000I Optimal - objective value 37.075118
Clp0000I Optimal - objective value 37.075118
Coin0511I After Postsolve, objective 37.075118, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.07511766 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 76 columns (75 integer (75 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 11.0034
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.2357 iterations 55
Cbc0038I Solution found of 10.2357
Cbc0038I Relaxing continuous gives 10.2357
Cbc0038I Rounding solution of 4.0391 is better than previous of 10.2357

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 87 rows 52 columns
Cbc0038I Mini branch and bound improved solution from 4.0391 to -2.70093 (0.06 seconds)
Cbc0038I Round again with cutoff of -6.13844
Cbc0038I Pass   2: suminf.    0.57013 (26) obj. -6.13844 iterations 28
Cbc0038I Pass   3: suminf.    0.54906 (40) obj. -6.13844 iterations 14
Cbc0038I Pass   4: suminf.    1.34990 (8) obj. -6.13844 iterations 48
Cbc0038I Pass   5: suminf.    1.00678 (8) obj. -6.13844 iterations 4
Cbc0038I Pass   6: suminf.    3.02824 (9) obj. -6.13844 iterations 16
Cbc0038I Pass   7: suminf.    1.86623 (10) obj. -6.13844 iterations 10
Cbc0038I Pass   8: suminf.    1.40894 (9) obj. -6.13844 iterations 3
Cbc0038I Pass   9: suminf.    2.02891 (7) obj. -6.13844 iterations 12
Cbc0038I Pass  10: suminf.    1.95915 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  11: suminf.    1.95915 (6) obj. -6.13844 iterations 0
Cbc0038I Pass  12: suminf.    2.00624 (6) obj. -6.13844 iterations 5
Cbc0038I Pass  13: suminf.    1.94687 (5) obj. -6.13844 iterations 1
Cbc0038I Pass  14: suminf.    1.94687 (5) obj. -6.13844 iterations 0
Cbc0038I Pass  15: suminf.    2.26152 (7) obj. -6.13844 iterations 4
Cbc0038I Pass  16: suminf.    2.22757 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  17: suminf.    2.25255 (8) obj. -6.13844 iterations 5
Cbc0038I Pass  18: suminf.    2.17932 (7) obj. -6.13844 iterations 1
Cbc0038I Pass  19: suminf.    2.39948 (6) obj. -6.13844 iterations 5
Cbc0038I Pass  20: suminf.    1.64708 (5) obj. -6.13844 iterations 4
Cbc0038I Pass  21: suminf.    1.51611 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  22: suminf.    2.26152 (7) obj. -6.13844 iterations 9
Cbc0038I Pass  23: suminf.    2.22757 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  24: suminf.    2.25255 (8) obj. -6.13844 iterations 5
Cbc0038I Pass  25: suminf.    2.17932 (7) obj. -6.13844 iterations 1
Cbc0038I Pass  26: suminf.    2.39948 (6) obj. -6.13844 iterations 5
Cbc0038I Pass  27: suminf.    1.64708 (5) obj. -6.13844 iterations 4
Cbc0038I Pass  28: suminf.    1.51611 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  29: suminf.    2.26152 (7) obj. -6.13844 iterations 9
Cbc0038I Pass  30: suminf.    2.22757 (6) obj. -6.13844 iterations 1
Cbc0038I Pass  31: suminf.    2.25255 (8) obj. -6.13844 iterations 5
Cbc0038I Rounding solution of -3.79339 is better than previous of -2.70093

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -3.79339 to -4.41102 (0.13 seconds)
Cbc0038I Round again with cutoff of -12.3258
Cbc0038I Pass  31: suminf.    2.61227 (26) obj. -12.3258 iterations 0
Cbc0038I Pass  32: suminf.    2.51572 (40) obj. -12.3258 iterations 14
Cbc0038I Pass  33: suminf.    2.92224 (11) obj. -12.3258 iterations 33
Cbc0038I Pass  34: suminf.    2.19206 (10) obj. -12.3258 iterations 6
Cbc0038I Pass  35: suminf.    3.42017 (17) obj. -12.3258 iterations 23
Cbc0038I Pass  36: suminf.    3.30310 (11) obj. -12.3258 iterations 12
Cbc0038I Pass  37: suminf.    2.59097 (8) obj. -12.3258 iterations 3
Cbc0038I Pass  38: suminf.    3.30583 (11) obj. -12.3258 iterations 6
Cbc0038I Pass  39: suminf.    3.29988 (10) obj. -12.3258 iterations 1
Cbc0038I Pass  40: suminf.    3.06742 (9) obj. -12.3258 iterations 9
Cbc0038I Pass  41: suminf.    2.72931 (10) obj. -12.3258 iterations 1
Cbc0038I Pass  42: suminf.    2.72931 (10) obj. -12.3258 iterations 0
Cbc0038I Pass  43: suminf.    3.04827 (7) obj. -12.3258 iterations 8
Cbc0038I Pass  44: suminf.    2.31940 (7) obj. -12.3258 iterations 3
Cbc0038I Pass  45: suminf.    2.31940 (7) obj. -12.3258 iterations 0
Cbc0038I Pass  46: suminf.    2.60139 (7) obj. -12.3258 iterations 5
Cbc0038I Pass  47: suminf.    2.60020 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  48: suminf.    2.60020 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  49: suminf.    2.35157 (6) obj. -12.3258 iterations 2
Cbc0038I Pass  50: suminf.    2.19188 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  51: suminf.    2.19188 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  52: suminf.    2.60139 (7) obj. -12.3258 iterations 5
Cbc0038I Pass  53: suminf.    2.60020 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  54: suminf.    2.60020 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  55: suminf.    2.35157 (6) obj. -12.3258 iterations 2
Cbc0038I Pass  56: suminf.    2.19188 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  57: suminf.    2.19188 (6) obj. -12.3258 iterations 0
Cbc0038I Pass  58: suminf.    2.60139 (7) obj. -12.3258 iterations 5
Cbc0038I Pass  59: suminf.    2.60020 (6) obj. -12.3258 iterations 1
Cbc0038I Pass  60: suminf.    2.60020 (6) obj. -12.3258 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -4.41102 - took 0.17 seconds
Cbc0012I Integer solution of -4.41102 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 87 rows 52 columns
Cbc0031I 35 added rows had average density of 55.171429
Cbc0013I At root node, 35 cuts changed objective from -37.075118 to -27.140193 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14852 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1837 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.41102 best solution, best possible -27.140193 (1.19 seconds)
Cbc0012I Integer solution of -4.869196 found by rounding after 9673 iterations and 37 nodes (1.39 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 18 rows 15 columns
Cbc0038I Full problem 131 rows 76 columns, reduced to 14 rows 15 columns
Cbc0001I Search completed - best objective -4.869195999999995, took 12995 iterations and 130 nodes (1.75 seconds)
Cbc0032I Strong branching done 1482 times (19786 iterations), fathomed 9 nodes and fixed 113 variables
Cbc0035I Maximum depth 22, 439 variables fixed on reduced cost
Total time (CPU seconds):       1.67   (Wallclock seconds):       1.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-64) rows, 110 (-43) columns and 1764 (-1540) elements
Clp1000I sum of infeasibilities 7.48871e-08 - average 8.22936e-10, 21 fixed columns
Coin0506I Presolve 72 (-19) rows, 89 (-21) columns and 1250 (-514) elements
Clp0006I 0  Obj 38.391287 Dual inf 3.8244829 (89)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.0639232 - largest nonzero change 2.3587129e-05 ( 0.0014083952%) - largest zero change 2.9811023e-05
Clp0000I Optimal - objective value 47.949329
Clp0000I Optimal - objective value 47.949329
Coin0511I After Postsolve, objective 47.949329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.949329
Clp0000I Optimal - objective value 47.949329
Clp0000I Optimal - objective value 47.949329
Clp0000I Optimal - objective value 47.949329
Coin0511I After Postsolve, objective 47.949329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.94932861 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 112 columns (112 integer (112 of which binary)) and 1773 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.524%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.4803
Cbc0038I Pass   1: suminf.    3.41695 (30) obj. -26.0219 iterations 18
Cbc0038I Pass   2: suminf.    2.52547 (25) obj. -21.1305 iterations 7
Cbc0038I Pass   3: suminf.    0.27599 (4) obj. 2.94469 iterations 21
Cbc0038I Solution found of 8.50762
Cbc0038I Rounding solution of 5.00897 is better than previous of 8.50762

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 112 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 0.991934
Cbc0038I Pass   4: suminf.    3.41695 (30) obj. -26.0219 iterations 0
Cbc0038I Pass   5: suminf.    2.52547 (25) obj. -21.1305 iterations 8
Cbc0038I Pass   6: suminf.    0.57769 (6) obj. 0.991934 iterations 32
Cbc0038I Pass   7: suminf.    0.54058 (5) obj. -1.17862 iterations 1
Cbc0038I Pass   8: suminf.    0.76300 (2) obj. 0.991934 iterations 12
Cbc0038I Pass   9: suminf.    0.45472 (4) obj. 0.10357 iterations 5
Cbc0038I Pass  10: suminf.    0.76300 (2) obj. 0.991934 iterations 5
Cbc0038I Pass  11: suminf.    0.92131 (11) obj. 0.991934 iterations 27
Cbc0038I Pass  12: suminf.    0.85235 (10) obj. 0.991934 iterations 12
Cbc0038I Pass  13: suminf.    2.00599 (9) obj. 0.991934 iterations 16
Cbc0038I Pass  14: suminf.    1.06158 (7) obj. 0.991934 iterations 16
Cbc0038I Pass  15: suminf.    0.39842 (5) obj. 0.991934 iterations 9
Cbc0038I Pass  16: suminf.    0.73586 (6) obj. 0.991934 iterations 3
Cbc0038I Pass  17: suminf.    0.39764 (5) obj. 0.991934 iterations 3
Cbc0038I Pass  18: suminf.    0.72801 (6) obj. 0.991934 iterations 6
Cbc0038I Pass  19: suminf.    1.85111 (12) obj. 0.991934 iterations 39
Cbc0038I Pass  20: suminf.    0.93026 (9) obj. 0.991934 iterations 15
Cbc0038I Pass  21: suminf.    0.90113 (7) obj. 0.991934 iterations 17
Cbc0038I Pass  22: suminf.    0.56517 (6) obj. 0.991934 iterations 6
Cbc0038I Pass  23: suminf.    0.97102 (3) obj. 0.991934 iterations 8
Cbc0038I Pass  24: suminf.    0.50867 (4) obj. 0.991934 iterations 1
Cbc0038I Pass  25: suminf.    1.01095 (8) obj. 0.991934 iterations 9
Cbc0038I Pass  26: suminf.    1.01095 (8) obj. 0.991934 iterations 0
Cbc0038I Pass  27: suminf.    2.32213 (8) obj. 0.991934 iterations 5
Cbc0038I Pass  28: suminf.    2.32213 (8) obj. 0.991934 iterations 0
Cbc0038I Pass  29: suminf.    1.01095 (8) obj. 0.991934 iterations 10
Cbc0038I Pass  30: suminf.    2.02846 (14) obj. 0.991934 iterations 25
Cbc0038I Pass  31: suminf.    2.02846 (14) obj. 0.991934 iterations 4
Cbc0038I Pass  32: suminf.    2.42079 (14) obj. 0.991934 iterations 22
Cbc0038I Pass  33: suminf.    1.67949 (6) obj. 0.991934 iterations 5
Cbc0038I Rounding solution of 4.52544 is better than previous of 5.00897

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 112 columns, reduced to 53 rows 64 columns
Cbc0038I Mini branch and bound improved solution from 4.52544 to -4.41102 (0.11 seconds)
Cbc0038I Round again with cutoff of -10.561
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.41695 (30) obj. -26.0219 iterations 0
Cbc0038I Pass  34: suminf.    3.41695 (30) obj. -26.0219 iterations 1
Cbc0038I Pass  35: suminf.    2.30743 (14) obj. -10.561 iterations 37
Cbc0038I Pass  36: suminf.    2.08224 (17) obj. -10.561 iterations 4
Cbc0038I Pass  37: suminf.    2.94848 (14) obj. -10.561 iterations 23
Cbc0038I Pass  38: suminf.    2.01761 (11) obj. -10.561 iterations 5
Cbc0038I Pass  39: suminf.    2.90279 (11) obj. -10.561 iterations 12
Cbc0038I Pass  40: suminf.    1.97539 (11) obj. -10.561 iterations 8
Cbc0038I Pass  41: suminf.    2.90279 (11) obj. -10.561 iterations 13
Cbc0038I Pass  42: suminf.    2.55130 (15) obj. -10.561 iterations 22
Cbc0038I Pass  43: suminf.    2.03671 (12) obj. -10.561 iterations 8
Cbc0038I Pass  44: suminf.    1.82992 (12) obj. -10.561 iterations 19
Cbc0038I Pass  45: suminf.    1.82992 (12) obj. -10.561 iterations 1
Cbc0038I Pass  46: suminf.    2.24028 (14) obj. -10.561 iterations 8
Cbc0038I Pass  47: suminf.    1.77214 (12) obj. -10.561 iterations 5
Cbc0038I Pass  48: suminf.    2.24028 (14) obj. -10.561 iterations 7
Cbc0038I Pass  49: suminf.    2.43646 (12) obj. -10.561 iterations 14
Cbc0038I Pass  50: suminf.    1.47154 (11) obj. -10.561 iterations 8
Cbc0038I Pass  51: suminf.    1.57734 (12) obj. -10.561 iterations 10
Cbc0038I Pass  52: suminf.    1.57734 (12) obj. -10.561 iterations 1
Cbc0038I Pass  53: suminf.    2.69509 (14) obj. -10.561 iterations 9
Cbc0038I Pass  54: suminf.    1.66068 (12) obj. -10.561 iterations 6
Cbc0038I Pass  55: suminf.    2.69509 (14) obj. -10.561 iterations 8
Cbc0038I Pass  56: suminf.    2.68997 (15) obj. -10.561 iterations 24
Cbc0038I Pass  57: suminf.    1.82715 (16) obj. -10.561 iterations 8
Cbc0038I Pass  58: suminf.    1.79776 (13) obj. -10.561 iterations 12
Cbc0038I Pass  59: suminf.    1.59855 (13) obj. -10.561 iterations 7
Cbc0038I Pass  60: suminf.    2.13526 (13) obj. -10.561 iterations 5
Cbc0038I Pass  61: suminf.    3.09410 (15) obj. -10.561 iterations 25
Cbc0038I Pass  62: suminf.    2.84172 (18) obj. -10.561 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 112 columns, reduced to 52 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -4.41102 - took 0.15 seconds
Cbc0012I Integer solution of -4.41102 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 93 rows 112 columns, reduced to 43 rows 47 columns
Cbc0031I 52 added rows had average density of 39.288462
Cbc0013I At root node, 52 cuts changed objective from -35.160508 to -12.811332 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15444 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1381 row cuts average 106.5 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 613 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1408 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 367 row cuts average 56.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.41102 best solution, best possible -12.811332 (2.96 seconds)
Cbc0010I After 20 nodes, 7 on tree, -4.41102 best solution, best possible -12.811332 (3.66 seconds)
Cbc0012I Integer solution of -4.526086 found by DiveCoefficient after 8118 iterations and 35 nodes (4.05 seconds)
Cbc0012I Integer solution of -4.869196 found by rounding after 8449 iterations and 44 nodes (4.12 seconds)
Cbc0038I Full problem 93 rows 112 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -4.869195999999995, took 8486 iterations and 48 nodes (4.13 seconds)
Cbc0032I Strong branching done 712 times (16806 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 14, 123 variables fixed on reduced cost
Total time (CPU seconds):       3.20   (Wallclock seconds):       4.14

