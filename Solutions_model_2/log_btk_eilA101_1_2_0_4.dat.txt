Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 152 (-53) rows, 84 (-19) columns and 465 (-138) elements
Clp1000I sum of infeasibilities 4.33738e-07 - average 2.85354e-09, 77 fixed columns
Coin0506I Presolve 5 (-147) rows, 6 (-78) columns and 18 (-447) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 28617.235
Clp0000I Optimal - objective value 28617.235
Coin0511I After Postsolve, objective 28617.235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.27266605 - largest nonzero change 0 ( 0%) - largest zero change 2.7423596e-05
Clp0000I Optimal - objective value 28617.235
Clp0000I Optimal - objective value 28617.235
Clp0000I Optimal - objective value 28617.235
Coin0511I After Postsolve, objective 28617.235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 28617.23505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 152 rows, 84 columns (83 integer (83 of which binary)) and 465 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.057%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.483923
Cbc0038I Pass   1: suminf.    0.22703 (2) obj. -28200 iterations 29
Cbc0038I Solution found of -20132.9
Cbc0038I Relaxing continuous gives -20132.9
Cbc0038I Rounding solution of -25277.1 is better than previous of -20132.9

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -25277.1 to -26647.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -26844.3
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.22703 (2) obj. -28200 iterations 0
Cbc0038I Pass   3: suminf.    0.38977 (1) obj. -26844.3 iterations 4
Cbc0038I Pass   4: suminf.    0.38977 (1) obj. -26844.3 iterations 0
Cbc0038I Pass   5: suminf.    0.87241 (5) obj. -26844.3 iterations 9
Cbc0038I Pass   6: suminf.    0.20989 (1) obj. -26844.3 iterations 17
Cbc0038I Pass   7: suminf.    0.22222 (1) obj. -26893.8 iterations 1
Cbc0038I Pass   8: suminf.    0.60775 (5) obj. -26844.3 iterations 16
Cbc0038I Pass   9: suminf.    0.46717 (2) obj. -26844.3 iterations 12
Cbc0038I Pass  10: suminf.    0.36585 (1) obj. -26898.8 iterations 11
Cbc0038I Pass  11: suminf.    0.37646 (1) obj. -26844.3 iterations 1
Cbc0038I Pass  12: suminf.    2.02830 (8) obj. -26844.3 iterations 20
Cbc0038I Pass  13: suminf.    1.80815 (6) obj. -26844.3 iterations 5
Cbc0038I Pass  14: suminf.    1.17379 (4) obj. -26844.3 iterations 13
Cbc0038I Pass  15: suminf.    1.80916 (5) obj. -26844.3 iterations 8
Cbc0038I Pass  16: suminf.    1.84322 (8) obj. -26844.3 iterations 15
Cbc0038I Pass  17: suminf.    1.44010 (5) obj. -26844.3 iterations 9
Cbc0038I Pass  18: suminf.    1.81792 (5) obj. -26844.3 iterations 6
Cbc0038I Pass  19: suminf.    1.49225 (3) obj. -26844.3 iterations 6
Cbc0038I Pass  20: suminf.    1.06701 (3) obj. -26844.3 iterations 4
Cbc0038I Pass  21: suminf.    1.04361 (4) obj. -26844.3 iterations 5
Cbc0038I Pass  22: suminf.    1.06925 (3) obj. -26844.3 iterations 12
Cbc0038I Pass  23: suminf.    0.96571 (6) obj. -26844.3 iterations 4
Cbc0038I Pass  24: suminf.    0.71035 (4) obj. -26844.3 iterations 14
Cbc0038I Pass  25: suminf.    0.71035 (4) obj. -26844.3 iterations 2
Cbc0038I Pass  26: suminf.    1.16133 (5) obj. -26844.3 iterations 13
Cbc0038I Pass  27: suminf.    1.16133 (5) obj. -26844.3 iterations 1
Cbc0038I Pass  28: suminf.    0.58763 (2) obj. -26844.3 iterations 9
Cbc0038I Pass  29: suminf.    0.36059 (3) obj. -27210.7 iterations 2
Cbc0038I Pass  30: suminf.    1.27422 (3) obj. -26844.3 iterations 6
Cbc0038I Pass  31: suminf.    1.27422 (3) obj. -26844.3 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -26647.3 to -26908.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -27250.1
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.22703 (2) obj. -28200 iterations 0
Cbc0038I Pass  32: suminf.    0.49072 (1) obj. -27250.1 iterations 4
Cbc0038I Pass  33: suminf.    0.49072 (1) obj. -27250.1 iterations 0
Cbc0038I Pass  34: suminf.    0.52424 (5) obj. -27250.1 iterations 14
Cbc0038I Pass  35: suminf.    0.28529 (1) obj. -27250.1 iterations 23
Cbc0038I Pass  36: suminf.    0.29630 (1) obj. -27294.4 iterations 1
Cbc0038I Pass  37: suminf.    1.36521 (6) obj. -27250.1 iterations 13
Cbc0038I Pass  38: suminf.    1.36521 (6) obj. -27250.1 iterations 6
Cbc0038I Pass  39: suminf.    1.48472 (6) obj. -27250.1 iterations 12
Cbc0038I Pass  40: suminf.    1.47914 (6) obj. -27250.1 iterations 6
Cbc0038I Pass  41: suminf.    0.57703 (3) obj. -27250.1 iterations 12
Cbc0038I Pass  42: suminf.    0.55443 (2) obj. -27250.1 iterations 9
Cbc0038I Pass  43: suminf.    0.88597 (6) obj. -27250.1 iterations 9
Cbc0038I Pass  44: suminf.    0.52117 (6) obj. -27250.1 iterations 6
Cbc0038I Pass  45: suminf.    1.72725 (4) obj. -27250.1 iterations 11
Cbc0038I Pass  46: suminf.    1.04175 (5) obj. -27250.1 iterations 8
Cbc0038I Pass  47: suminf.    0.52738 (3) obj. -27250.1 iterations 7
Cbc0038I Pass  48: suminf.    0.25926 (1) obj. -27711.2 iterations 7
Cbc0038I Pass  49: suminf.    0.37394 (1) obj. -27250.1 iterations 1
Cbc0038I Pass  50: suminf.    2.27520 (9) obj. -27250.1 iterations 16
Cbc0038I Pass  51: suminf.    2.27520 (9) obj. -27250.1 iterations 4
Cbc0038I Pass  52: suminf.    1.72678 (4) obj. -27250.1 iterations 14
Cbc0038I Pass  53: suminf.    0.91301 (5) obj. -27250.1 iterations 8
Cbc0038I Pass  54: suminf.    0.51520 (3) obj. -27250.1 iterations 7
Cbc0038I Pass  55: suminf.    0.18519 (1) obj. -27974.3 iterations 7
Cbc0038I Pass  56: suminf.    0.36530 (1) obj. -27250.1 iterations 1
Cbc0038I Pass  57: suminf.    0.88238 (5) obj. -27250.1 iterations 10
Cbc0038I Pass  58: suminf.    0.88238 (5) obj. -27250.1 iterations 4
Cbc0038I Pass  59: suminf.    0.22038 (3) obj. -27250.1 iterations 9
Cbc0038I Pass  60: suminf.    0.07407 (1) obj. -27580.6 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -26908.4 to -27348.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -27729.3
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.22703 (2) obj. -28200 iterations 0
Cbc0038I Pass  61: suminf.    0.38653 (2) obj. -27729.3 iterations 4
Cbc0038I Pass  62: suminf.    0.92636 (4) obj. -27729.3 iterations 10
Cbc0038I Pass  63: suminf.    0.92636 (4) obj. -27729.3 iterations 2
Cbc0038I Pass  64: suminf.    0.42198 (3) obj. -27729.3 iterations 19
Cbc0038I Pass  65: suminf.    2.48628 (8) obj. -27729.3 iterations 11
Cbc0038I Pass  66: suminf.    1.33699 (7) obj. -27729.3 iterations 6
Cbc0038I Pass  67: suminf.    1.42920 (4) obj. -27729.3 iterations 13
Cbc0038I Pass  68: suminf.    0.69574 (4) obj. -27729.3 iterations 11
Cbc0038I Pass  69: suminf.    1.03080 (3) obj. -27729.3 iterations 7
Cbc0038I Pass  70: suminf.    2.55540 (8) obj. -27729.3 iterations 15
Cbc0038I Pass  71: suminf.    2.01861 (6) obj. -27729.3 iterations 8
Cbc0038I Pass  72: suminf.    0.62698 (4) obj. -27729.3 iterations 7
Cbc0038I Pass  73: suminf.    0.62698 (4) obj. -27729.3 iterations 0
Cbc0038I Pass  74: suminf.    1.03080 (3) obj. -27729.3 iterations 7
Cbc0038I Pass  75: suminf.    0.69574 (4) obj. -27729.3 iterations 4
Cbc0038I Pass  76: suminf.    1.03080 (3) obj. -27729.3 iterations 6
Cbc0038I Pass  77: suminf.    0.44077 (4) obj. -27729.3 iterations 15
Cbc0038I Pass  78: suminf.    0.44077 (4) obj. -27729.3 iterations 3
Cbc0038I Pass  79: suminf.    2.18490 (5) obj. -27729.3 iterations 12
Cbc0038I Pass  80: suminf.    1.46429 (4) obj. -27729.3 iterations 5
Cbc0038I Pass  81: suminf.    0.80456 (3) obj. -27729.3 iterations 3
Cbc0038I Pass  82: suminf.    0.84944 (3) obj. -27729.3 iterations 3
Cbc0038I Pass  83: suminf.    1.07911 (5) obj. -27729.3 iterations 11
Cbc0038I Pass  84: suminf.    1.07911 (5) obj. -27729.3 iterations 2
Cbc0038I Pass  85: suminf.    1.03080 (3) obj. -27729.3 iterations 11
Cbc0038I Pass  86: suminf.    0.69574 (4) obj. -27729.3 iterations 4
Cbc0038I Pass  87: suminf.    1.03080 (3) obj. -27729.3 iterations 6
Cbc0038I Pass  88: suminf.    1.82069 (5) obj. -27729.3 iterations 8
Cbc0038I Pass  89: suminf.    1.81910 (5) obj. -27729.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -27348.8 - took 0.03 seconds
Cbc0012I Integer solution of -27348.76 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 152 rows 84 columns, reduced to 4 rows 5 columns
Cbc0031I 6 added rows had average density of 27.5
Cbc0013I At root node, 6 cuts changed objective from -28617.235 to -28057.341 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 10.1 elements, 15 column cuts (15 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.817 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27348.76 best solution, best possible -28057.325 (1.58 seconds)
Cbc0001I Search completed - best objective -27348.76, took 1023 iterations and 12 nodes (1.63 seconds)
Cbc0032I Strong branching done 84 times (433 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 83 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-95) rows, 123 (-79) columns and 1978 (-3675) elements
Clp1000I sum of infeasibilities 5.7286e-07 - average 5.2556e-09, 83 fixed columns
Coin0506I Presolve 35 (-74) rows, 37 (-86) columns and 241 (-1737) elements
Clp0006I 0  Obj 28643.113 Dual inf 442.16501 (34)
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 28653.169
Clp0000I Optimal - objective value 28653.169
Coin0511I After Postsolve, objective 28653.169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 28653.169 Dual inf 17593.947 (10)
Clp0014I Perturbing problem by 0.001% of 1.7197364 - largest nonzero change 2.1287554e-05 ( 0.0021287554%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 28660.152
Clp0000I Optimal - objective value 28660.152
Clp0000I Optimal - objective value 28660.152
Coin0511I After Postsolve, objective 28660.152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 28660.15249 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 124 columns (124 integer (124 of which binary)) and 1986 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.930%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 2.92059
Cbc0038I Pass   1: suminf.    2.56130 (28) obj. -28237.8 iterations 20
Cbc0038I Pass   2: suminf.    0.72669 (13) obj. -24168.8 iterations 16
Cbc0038I Solution found of -24153.7
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 124 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -24153.7 to -26077.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -26334.6
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.56130 (28) obj. -28237.8 iterations 0
Cbc0038I Pass   4: suminf.    1.06101 (12) obj. -26334.6 iterations 17
Cbc0038I Pass   5: suminf.    0.22703 (2) obj. -28200 iterations 13
Cbc0038I Pass   6: suminf.    0.26302 (1) obj. -26334.6 iterations 3
Cbc0038I Pass   7: suminf.    0.26302 (1) obj. -26334.6 iterations 0
Cbc0038I Pass   8: suminf.    1.83783 (12) obj. -26334.6 iterations 18
Cbc0038I Pass   9: suminf.    1.81150 (10) obj. -26521.7 iterations 7
Cbc0038I Pass  10: suminf.    1.38727 (3) obj. -26334.6 iterations 13
Cbc0038I Pass  11: suminf.    0.76769 (2) obj. -26686.9 iterations 5
Cbc0038I Pass  12: suminf.    0.80423 (2) obj. -26334.6 iterations 4
Cbc0038I Pass  13: suminf.    0.58003 (4) obj. -26334.6 iterations 5
Cbc0038I Pass  14: suminf.    0.89568 (9) obj. -26334.6 iterations 19
Cbc0038I Pass  15: suminf.    0.89568 (9) obj. -26334.6 iterations 3
Cbc0038I Pass  16: suminf.    1.32247 (3) obj. -26334.6 iterations 12
Cbc0038I Pass  17: suminf.    0.55227 (2) obj. -26494.9 iterations 4
Cbc0038I Pass  18: suminf.    0.29997 (4) obj. -26334.6 iterations 7
Cbc0038I Pass  19: suminf.    1.22710 (10) obj. -26334.6 iterations 20
Cbc0038I Pass  20: suminf.    1.22710 (10) obj. -26334.6 iterations 4
Cbc0038I Pass  21: suminf.    0.63844 (3) obj. -26334.6 iterations 24
Cbc0038I Pass  22: suminf.    0.33333 (1) obj. -26814.5 iterations 4
Cbc0038I Pass  23: suminf.    0.45268 (1) obj. -26334.6 iterations 1
Cbc0038I Pass  24: suminf.    0.98859 (6) obj. -26334.6 iterations 18
Cbc0038I Pass  25: suminf.    0.92383 (6) obj. -26334.6 iterations 12
Cbc0038I Pass  26: suminf.    0.83193 (5) obj. -26334.6 iterations 7
Cbc0038I Pass  27: suminf.    0.53800 (3) obj. -26334.6 iterations 9
Cbc0038I Pass  28: suminf.    0.07407 (1) obj. -27570.6 iterations 6
Cbc0038I Pass  29: suminf.    0.38147 (1) obj. -26334.6 iterations 1
Cbc0038I Pass  30: suminf.    1.31287 (11) obj. -26334.6 iterations 21
Cbc0038I Pass  31: suminf.    1.11838 (12) obj. -26334.6 iterations 8
Cbc0038I Pass  32: suminf.    1.24961 (3) obj. -26334.6 iterations 11
Cbc0038I Rounding solution of -26647.3 is better than previous of -26077.5

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 124 columns, reduced to 19 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -26647.3 to -27348.8 (0.06 seconds)
Cbc0038I Round again with cutoff of -27608.8
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.56130 (28) obj. -28237.8 iterations 0
Cbc0038I Pass  33: suminf.    0.47632 (1) obj. -27608.8 iterations 31
Cbc0038I Pass  34: suminf.    0.47632 (1) obj. -27608.8 iterations 0
Cbc0038I Pass  35: suminf.    0.22703 (2) obj. -28200 iterations 6
Cbc0038I Pass  36: suminf.    0.42009 (1) obj. -27608.8 iterations 2
Cbc0038I Pass  37: suminf.    1.27651 (8) obj. -27608.8 iterations 34
Cbc0038I Pass  38: suminf.    1.27651 (8) obj. -27608.8 iterations 8
Cbc0038I Pass  39: suminf.    0.41810 (1) obj. -27608.8 iterations 9
Cbc0038I Pass  40: suminf.    0.22703 (2) obj. -28192 iterations 2
Cbc0038I Pass  41: suminf.    0.41810 (1) obj. -27608.8 iterations 2
Cbc0038I Pass  42: suminf.    0.92168 (7) obj. -27608.8 iterations 18
Cbc0038I Pass  43: suminf.    0.70925 (5) obj. -27608.8 iterations 12
Cbc0038I Pass  44: suminf.    2.13204 (14) obj. -27608.8 iterations 20
Cbc0038I Pass  45: suminf.    1.82940 (15) obj. -27608.8 iterations 4
Cbc0038I Pass  46: suminf.    1.58844 (4) obj. -27608.8 iterations 20
Cbc0038I Pass  47: suminf.    0.69377 (2) obj. -27642.9 iterations 10
Cbc0038I Pass  48: suminf.    0.66546 (2) obj. -27608.8 iterations 4
Cbc0038I Pass  49: suminf.    0.54520 (4) obj. -27608.8 iterations 5
Cbc0038I Pass  50: suminf.    1.06781 (3) obj. -27608.8 iterations 6
Cbc0038I Pass  51: suminf.    3.03612 (15) obj. -27608.8 iterations 25
Cbc0038I Pass  52: suminf.    2.87167 (18) obj. -27608.8 iterations 5
Cbc0038I Pass  53: suminf.    1.09360 (4) obj. -27608.8 iterations 27
Cbc0038I Pass  54: suminf.    1.09360 (4) obj. -27608.8 iterations 1
Cbc0038I Pass  55: suminf.    1.61992 (5) obj. -27608.8 iterations 10
Cbc0038I Pass  56: suminf.    0.53816 (4) obj. -27608.8 iterations 6
Cbc0038I Pass  57: suminf.    0.53816 (4) obj. -27608.8 iterations 0
Cbc0038I Pass  58: suminf.    2.04436 (5) obj. -27608.8 iterations 10
Cbc0038I Pass  59: suminf.    1.74454 (4) obj. -27608.8 iterations 7
Cbc0038I Pass  60: suminf.    0.88820 (3) obj. -27608.8 iterations 4
Cbc0038I Pass  61: suminf.    0.77445 (3) obj. -27608.8 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 124 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -27348.8 - took 0.05 seconds
Cbc0012I Integer solution of -27348.76 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 110 rows 124 columns, reduced to 4 rows 5 columns
Cbc0031I 16 added rows had average density of 10.875
Cbc0013I At root node, 16 cuts changed objective from -28648.908 to -28220.631 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 149 row cuts average 2.7 elements, 23 column cuts (23 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 37.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 80.2 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27348.76 best solution, best possible -28219.618 (0.35 seconds)
Cbc0010I After 8 nodes, 1 on tree, -27348.76 best solution, best possible -27706.841 (1.18 seconds)
Cbc0001I Search completed - best objective -27348.76, took 755 iterations and 12 nodes (1.35 seconds)
Cbc0032I Strong branching done 164 times (1240 iterations), fathomed 4 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 78 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       1.35

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 152 (-53) rows, 84 (-19) columns and 465 (-138) elements
Clp1000I sum of infeasibilities 4.33738e-07 - average 2.85354e-09, 77 fixed columns
Coin0506I Presolve 5 (-147) rows, 6 (-78) columns and 18 (-447) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 28617.235
Clp0000I Optimal - objective value 28617.235
Coin0511I After Postsolve, objective 28617.235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.27266605 - largest nonzero change 0 ( 0%) - largest zero change 2.7423596e-05
Clp0000I Optimal - objective value 28617.235
Clp0000I Optimal - objective value 28617.235
Clp0000I Optimal - objective value 28617.235
Coin0511I After Postsolve, objective 28617.235, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 28617.23505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 152 rows, 84 columns (83 integer (83 of which binary)) and 465 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.057%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.483923
Cbc0038I Pass   1: suminf.    0.22703 (2) obj. -28200 iterations 29
Cbc0038I Solution found of -20132.9
Cbc0038I Relaxing continuous gives -20132.9
Cbc0038I Rounding solution of -25277.1 is better than previous of -20132.9

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -25277.1 to -26647.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -26844.3
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.22703 (2) obj. -28200 iterations 0
Cbc0038I Pass   3: suminf.    0.38977 (1) obj. -26844.3 iterations 4
Cbc0038I Pass   4: suminf.    0.38977 (1) obj. -26844.3 iterations 0
Cbc0038I Pass   5: suminf.    0.87241 (5) obj. -26844.3 iterations 9
Cbc0038I Pass   6: suminf.    0.20989 (1) obj. -26844.3 iterations 17
Cbc0038I Pass   7: suminf.    0.22222 (1) obj. -26893.8 iterations 1
Cbc0038I Pass   8: suminf.    0.60775 (5) obj. -26844.3 iterations 16
Cbc0038I Pass   9: suminf.    0.46717 (2) obj. -26844.3 iterations 12
Cbc0038I Pass  10: suminf.    0.36585 (1) obj. -26898.8 iterations 11
Cbc0038I Pass  11: suminf.    0.37646 (1) obj. -26844.3 iterations 1
Cbc0038I Pass  12: suminf.    2.02830 (8) obj. -26844.3 iterations 20
Cbc0038I Pass  13: suminf.    1.80815 (6) obj. -26844.3 iterations 5
Cbc0038I Pass  14: suminf.    1.17379 (4) obj. -26844.3 iterations 13
Cbc0038I Pass  15: suminf.    1.80916 (5) obj. -26844.3 iterations 8
Cbc0038I Pass  16: suminf.    1.84322 (8) obj. -26844.3 iterations 15
Cbc0038I Pass  17: suminf.    1.44010 (5) obj. -26844.3 iterations 9
Cbc0038I Pass  18: suminf.    1.81792 (5) obj. -26844.3 iterations 6
Cbc0038I Pass  19: suminf.    1.49225 (3) obj. -26844.3 iterations 6
Cbc0038I Pass  20: suminf.    1.06701 (3) obj. -26844.3 iterations 4
Cbc0038I Pass  21: suminf.    1.04361 (4) obj. -26844.3 iterations 5
Cbc0038I Pass  22: suminf.    1.06925 (3) obj. -26844.3 iterations 12
Cbc0038I Pass  23: suminf.    0.96571 (6) obj. -26844.3 iterations 4
Cbc0038I Pass  24: suminf.    0.71035 (4) obj. -26844.3 iterations 14
Cbc0038I Pass  25: suminf.    0.71035 (4) obj. -26844.3 iterations 2
Cbc0038I Pass  26: suminf.    1.16133 (5) obj. -26844.3 iterations 13
Cbc0038I Pass  27: suminf.    1.16133 (5) obj. -26844.3 iterations 1
Cbc0038I Pass  28: suminf.    0.58763 (2) obj. -26844.3 iterations 9
Cbc0038I Pass  29: suminf.    0.36059 (3) obj. -27210.7 iterations 2
Cbc0038I Pass  30: suminf.    1.27422 (3) obj. -26844.3 iterations 6
Cbc0038I Pass  31: suminf.    1.27422 (3) obj. -26844.3 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -26647.3 to -26908.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -27250.1
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.22703 (2) obj. -28200 iterations 0
Cbc0038I Pass  32: suminf.    0.49072 (1) obj. -27250.1 iterations 4
Cbc0038I Pass  33: suminf.    0.49072 (1) obj. -27250.1 iterations 0
Cbc0038I Pass  34: suminf.    0.52424 (5) obj. -27250.1 iterations 14
Cbc0038I Pass  35: suminf.    0.28529 (1) obj. -27250.1 iterations 23
Cbc0038I Pass  36: suminf.    0.29630 (1) obj. -27294.4 iterations 1
Cbc0038I Pass  37: suminf.    1.36521 (6) obj. -27250.1 iterations 13
Cbc0038I Pass  38: suminf.    1.36521 (6) obj. -27250.1 iterations 6
Cbc0038I Pass  39: suminf.    1.48472 (6) obj. -27250.1 iterations 12
Cbc0038I Pass  40: suminf.    1.47914 (6) obj. -27250.1 iterations 6
Cbc0038I Pass  41: suminf.    0.57703 (3) obj. -27250.1 iterations 12
Cbc0038I Pass  42: suminf.    0.55443 (2) obj. -27250.1 iterations 9
Cbc0038I Pass  43: suminf.    0.88597 (6) obj. -27250.1 iterations 9
Cbc0038I Pass  44: suminf.    0.52117 (6) obj. -27250.1 iterations 6
Cbc0038I Pass  45: suminf.    1.72725 (4) obj. -27250.1 iterations 11
Cbc0038I Pass  46: suminf.    1.04175 (5) obj. -27250.1 iterations 8
Cbc0038I Pass  47: suminf.    0.52738 (3) obj. -27250.1 iterations 7
Cbc0038I Pass  48: suminf.    0.25926 (1) obj. -27711.2 iterations 7
Cbc0038I Pass  49: suminf.    0.37394 (1) obj. -27250.1 iterations 1
Cbc0038I Pass  50: suminf.    2.27520 (9) obj. -27250.1 iterations 16
Cbc0038I Pass  51: suminf.    2.27520 (9) obj. -27250.1 iterations 4
Cbc0038I Pass  52: suminf.    1.72678 (4) obj. -27250.1 iterations 14
Cbc0038I Pass  53: suminf.    0.91301 (5) obj. -27250.1 iterations 8
Cbc0038I Pass  54: suminf.    0.51520 (3) obj. -27250.1 iterations 7
Cbc0038I Pass  55: suminf.    0.18519 (1) obj. -27974.3 iterations 7
Cbc0038I Pass  56: suminf.    0.36530 (1) obj. -27250.1 iterations 1
Cbc0038I Pass  57: suminf.    0.88238 (5) obj. -27250.1 iterations 10
Cbc0038I Pass  58: suminf.    0.88238 (5) obj. -27250.1 iterations 4
Cbc0038I Pass  59: suminf.    0.22038 (3) obj. -27250.1 iterations 9
Cbc0038I Pass  60: suminf.    0.07407 (1) obj. -27580.6 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -26908.4 to -27348.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -27729.3
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.22703 (2) obj. -28200 iterations 0
Cbc0038I Pass  61: suminf.    0.38653 (2) obj. -27729.3 iterations 4
Cbc0038I Pass  62: suminf.    0.92636 (4) obj. -27729.3 iterations 10
Cbc0038I Pass  63: suminf.    0.92636 (4) obj. -27729.3 iterations 2
Cbc0038I Pass  64: suminf.    0.42198 (3) obj. -27729.3 iterations 19
Cbc0038I Pass  65: suminf.    2.48628 (8) obj. -27729.3 iterations 11
Cbc0038I Pass  66: suminf.    1.33699 (7) obj. -27729.3 iterations 6
Cbc0038I Pass  67: suminf.    1.42920 (4) obj. -27729.3 iterations 13
Cbc0038I Pass  68: suminf.    0.69574 (4) obj. -27729.3 iterations 11
Cbc0038I Pass  69: suminf.    1.03080 (3) obj. -27729.3 iterations 7
Cbc0038I Pass  70: suminf.    2.55540 (8) obj. -27729.3 iterations 15
Cbc0038I Pass  71: suminf.    2.01861 (6) obj. -27729.3 iterations 8
Cbc0038I Pass  72: suminf.    0.62698 (4) obj. -27729.3 iterations 7
Cbc0038I Pass  73: suminf.    0.62698 (4) obj. -27729.3 iterations 0
Cbc0038I Pass  74: suminf.    1.03080 (3) obj. -27729.3 iterations 7
Cbc0038I Pass  75: suminf.    0.69574 (4) obj. -27729.3 iterations 4
Cbc0038I Pass  76: suminf.    1.03080 (3) obj. -27729.3 iterations 6
Cbc0038I Pass  77: suminf.    0.44077 (4) obj. -27729.3 iterations 15
Cbc0038I Pass  78: suminf.    0.44077 (4) obj. -27729.3 iterations 3
Cbc0038I Pass  79: suminf.    2.18490 (5) obj. -27729.3 iterations 12
Cbc0038I Pass  80: suminf.    1.46429 (4) obj. -27729.3 iterations 5
Cbc0038I Pass  81: suminf.    0.80456 (3) obj. -27729.3 iterations 3
Cbc0038I Pass  82: suminf.    0.84944 (3) obj. -27729.3 iterations 3
Cbc0038I Pass  83: suminf.    1.07911 (5) obj. -27729.3 iterations 11
Cbc0038I Pass  84: suminf.    1.07911 (5) obj. -27729.3 iterations 2
Cbc0038I Pass  85: suminf.    1.03080 (3) obj. -27729.3 iterations 11
Cbc0038I Pass  86: suminf.    0.69574 (4) obj. -27729.3 iterations 4
Cbc0038I Pass  87: suminf.    1.03080 (3) obj. -27729.3 iterations 6
Cbc0038I Pass  88: suminf.    1.82069 (5) obj. -27729.3 iterations 8
Cbc0038I Pass  89: suminf.    1.81910 (5) obj. -27729.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 84 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -27348.8 - took 0.03 seconds
Cbc0012I Integer solution of -27348.76 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 152 rows 84 columns, reduced to 4 rows 5 columns
Cbc0031I 6 added rows had average density of 27.5
Cbc0013I At root node, 6 cuts changed objective from -28617.235 to -28057.341 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 10.1 elements, 15 column cuts (15 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.769 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27348.76 best solution, best possible -28057.325 (1.53 seconds)
Cbc0001I Search completed - best objective -27348.76, took 1023 iterations and 12 nodes (1.57 seconds)
Cbc0032I Strong branching done 84 times (433 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 83 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-96) rows, 123 (-80) columns and 1978 (-3676) elements
Clp1000I sum of infeasibilities 5.7286e-07 - average 5.2556e-09, 83 fixed columns
Coin0506I Presolve 35 (-74) rows, 37 (-86) columns and 241 (-1737) elements
Clp0006I 0  Obj 28643.113 Dual inf 442.16501 (34)
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 28653.169
Clp0000I Optimal - objective value 28653.169
Coin0511I After Postsolve, objective 28653.169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 28653.169 Dual inf 17593.947 (10)
Clp0014I Perturbing problem by 0.001% of 1.7197364 - largest nonzero change 2.1287554e-05 ( 0.0021287554%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 28660.152
Clp0000I Optimal - objective value 28660.152
Clp0000I Optimal - objective value 28660.152
Coin0511I After Postsolve, objective 28660.152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 28660.15249 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 124 columns (124 integer (124 of which binary)) and 1986 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.930%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 2.92059
Cbc0038I Pass   1: suminf.    2.56130 (28) obj. -28237.8 iterations 20
Cbc0038I Pass   2: suminf.    0.72669 (13) obj. -24168.8 iterations 16
Cbc0038I Solution found of -24153.7
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 124 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -24153.7 to -26077.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -26334.6
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.56130 (28) obj. -28237.8 iterations 0
Cbc0038I Pass   4: suminf.    1.06101 (12) obj. -26334.6 iterations 17
Cbc0038I Pass   5: suminf.    0.22703 (2) obj. -28200 iterations 13
Cbc0038I Pass   6: suminf.    0.26302 (1) obj. -26334.6 iterations 3
Cbc0038I Pass   7: suminf.    0.26302 (1) obj. -26334.6 iterations 0
Cbc0038I Pass   8: suminf.    1.83783 (12) obj. -26334.6 iterations 18
Cbc0038I Pass   9: suminf.    1.81150 (10) obj. -26521.7 iterations 7
Cbc0038I Pass  10: suminf.    1.38727 (3) obj. -26334.6 iterations 13
Cbc0038I Pass  11: suminf.    0.76769 (2) obj. -26686.9 iterations 5
Cbc0038I Pass  12: suminf.    0.80423 (2) obj. -26334.6 iterations 4
Cbc0038I Pass  13: suminf.    0.58003 (4) obj. -26334.6 iterations 5
Cbc0038I Pass  14: suminf.    0.89568 (9) obj. -26334.6 iterations 19
Cbc0038I Pass  15: suminf.    0.89568 (9) obj. -26334.6 iterations 3
Cbc0038I Pass  16: suminf.    1.32247 (3) obj. -26334.6 iterations 12
Cbc0038I Pass  17: suminf.    0.55227 (2) obj. -26494.9 iterations 4
Cbc0038I Pass  18: suminf.    0.29997 (4) obj. -26334.6 iterations 7
Cbc0038I Pass  19: suminf.    1.22710 (10) obj. -26334.6 iterations 20
Cbc0038I Pass  20: suminf.    1.22710 (10) obj. -26334.6 iterations 4
Cbc0038I Pass  21: suminf.    0.63844 (3) obj. -26334.6 iterations 24
Cbc0038I Pass  22: suminf.    0.33333 (1) obj. -26814.5 iterations 4
Cbc0038I Pass  23: suminf.    0.45268 (1) obj. -26334.6 iterations 1
Cbc0038I Pass  24: suminf.    0.98859 (6) obj. -26334.6 iterations 18
Cbc0038I Pass  25: suminf.    0.92383 (6) obj. -26334.6 iterations 12
Cbc0038I Pass  26: suminf.    0.83193 (5) obj. -26334.6 iterations 7
Cbc0038I Pass  27: suminf.    0.53800 (3) obj. -26334.6 iterations 9
Cbc0038I Pass  28: suminf.    0.07407 (1) obj. -27570.6 iterations 6
Cbc0038I Pass  29: suminf.    0.38147 (1) obj. -26334.6 iterations 1
Cbc0038I Pass  30: suminf.    1.31287 (11) obj. -26334.6 iterations 21
Cbc0038I Pass  31: suminf.    1.11838 (12) obj. -26334.6 iterations 8
Cbc0038I Pass  32: suminf.    1.24961 (3) obj. -26334.6 iterations 11
Cbc0038I Rounding solution of -26647.3 is better than previous of -26077.5

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 124 columns, reduced to 19 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -26647.3 to -27348.8 (0.06 seconds)
Cbc0038I Round again with cutoff of -27608.8
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.56130 (28) obj. -28237.8 iterations 0
Cbc0038I Pass  33: suminf.    0.47632 (1) obj. -27608.8 iterations 31
Cbc0038I Pass  34: suminf.    0.47632 (1) obj. -27608.8 iterations 0
Cbc0038I Pass  35: suminf.    0.22703 (2) obj. -28200 iterations 6
Cbc0038I Pass  36: suminf.    0.42009 (1) obj. -27608.8 iterations 2
Cbc0038I Pass  37: suminf.    1.27651 (8) obj. -27608.8 iterations 34
Cbc0038I Pass  38: suminf.    1.27651 (8) obj. -27608.8 iterations 8
Cbc0038I Pass  39: suminf.    0.41810 (1) obj. -27608.8 iterations 9
Cbc0038I Pass  40: suminf.    0.22703 (2) obj. -28192 iterations 2
Cbc0038I Pass  41: suminf.    0.41810 (1) obj. -27608.8 iterations 2
Cbc0038I Pass  42: suminf.    0.92168 (7) obj. -27608.8 iterations 18
Cbc0038I Pass  43: suminf.    0.70925 (5) obj. -27608.8 iterations 12
Cbc0038I Pass  44: suminf.    2.13204 (14) obj. -27608.8 iterations 20
Cbc0038I Pass  45: suminf.    1.82940 (15) obj. -27608.8 iterations 4
Cbc0038I Pass  46: suminf.    1.58844 (4) obj. -27608.8 iterations 20
Cbc0038I Pass  47: suminf.    0.69377 (2) obj. -27642.9 iterations 10
Cbc0038I Pass  48: suminf.    0.66546 (2) obj. -27608.8 iterations 4
Cbc0038I Pass  49: suminf.    0.54520 (4) obj. -27608.8 iterations 5
Cbc0038I Pass  50: suminf.    1.06781 (3) obj. -27608.8 iterations 6
Cbc0038I Pass  51: suminf.    3.03612 (15) obj. -27608.8 iterations 25
Cbc0038I Pass  52: suminf.    2.87167 (18) obj. -27608.8 iterations 5
Cbc0038I Pass  53: suminf.    1.09360 (4) obj. -27608.8 iterations 27
Cbc0038I Pass  54: suminf.    1.09360 (4) obj. -27608.8 iterations 1
Cbc0038I Pass  55: suminf.    1.61992 (5) obj. -27608.8 iterations 10
Cbc0038I Pass  56: suminf.    0.53816 (4) obj. -27608.8 iterations 6
Cbc0038I Pass  57: suminf.    0.53816 (4) obj. -27608.8 iterations 0
Cbc0038I Pass  58: suminf.    2.04436 (5) obj. -27608.8 iterations 10
Cbc0038I Pass  59: suminf.    1.74454 (4) obj. -27608.8 iterations 7
Cbc0038I Pass  60: suminf.    0.88820 (3) obj. -27608.8 iterations 4
Cbc0038I Pass  61: suminf.    0.77445 (3) obj. -27608.8 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 124 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -27348.8 - took 0.05 seconds
Cbc0012I Integer solution of -27348.76 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 110 rows 124 columns, reduced to 4 rows 5 columns
Cbc0031I 16 added rows had average density of 10.875
Cbc0013I At root node, 16 cuts changed objective from -28648.908 to -28220.631 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 149 row cuts average 2.7 elements, 23 column cuts (23 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 37.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 80.2 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27348.76 best solution, best possible -28219.618 (0.33 seconds)
Cbc0010I After 7 nodes, 1 on tree, -27348.76 best solution, best possible -28219.618 (1.06 seconds)
Cbc0001I Search completed - best objective -27348.76, took 755 iterations and 12 nodes (1.53 seconds)
Cbc0032I Strong branching done 164 times (1240 iterations), fathomed 4 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 78 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       1.53

