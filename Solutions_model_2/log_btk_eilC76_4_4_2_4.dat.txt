Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 4.99915e-05 - average 3.75876e-07, 9 fixed columns
Coin0506I Presolve 116 (-17) rows, 67 (-9) columns and 359 (-51) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.6943092 - largest nonzero change 0 ( 0%) - largest zero change 1.7545919e-05
Clp0000I Optimal - objective value 35.423539
Clp0000I Optimal - objective value 35.423539
Coin0511I After Postsolve, objective 35.423539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.423539
Clp0000I Optimal - objective value 35.423539
Clp0000I Optimal - objective value 35.423539
Coin0511I After Postsolve, objective 35.423539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.42353863 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.09956
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.82874 iterations 65
Cbc0038I Solution found of 6.82874
Cbc0038I Relaxing continuous gives 6.82874
Cbc0038I Rounding solution of 1.41679 is better than previous of 6.82874

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 81 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 1.41679 to 1.06101 (0.04 seconds)
Cbc0038I Round again with cutoff of -2.58753
Cbc0038I Pass   2: suminf.    0.18693 (1) obj. -2.58753 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -2.58753 iterations 1
Cbc0038I Solution found of -2.58753
Cbc0038I Relaxing continuous gives -4.75236
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 81 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -4.75236 to -6.1295 (0.07 seconds)
Cbc0038I Round again with cutoff of -11.9884
Cbc0038I Pass   4: suminf.    2.11570 (23) obj. -11.9884 iterations 23
Cbc0038I Pass   5: suminf.    1.97160 (33) obj. -11.9884 iterations 18
Cbc0038I Pass   6: suminf.    2.70740 (9) obj. -11.9884 iterations 28
Cbc0038I Pass   7: suminf.    2.36070 (9) obj. -11.9884 iterations 3
Cbc0038I Pass   8: suminf.    2.37652 (17) obj. -11.9884 iterations 20
Cbc0038I Pass   9: suminf.    4.30438 (14) obj. -11.9884 iterations 33
Cbc0038I Pass  10: suminf.    2.48140 (10) obj. -11.9884 iterations 12
Cbc0038I Pass  11: suminf.    2.73125 (9) obj. -11.9884 iterations 11
Cbc0038I Pass  12: suminf.    2.55359 (10) obj. -11.9884 iterations 1
Cbc0038I Pass  13: suminf.    3.50867 (9) obj. -11.9884 iterations 7
Cbc0038I Pass  14: suminf.    2.14738 (9) obj. -11.9884 iterations 5
Cbc0038I Pass  15: suminf.    2.14738 (9) obj. -11.9884 iterations 0
Cbc0038I Pass  16: suminf.    2.10361 (22) obj. -11.9884 iterations 15
Cbc0038I Pass  17: suminf.    1.97160 (33) obj. -11.9884 iterations 12
Cbc0038I Pass  18: suminf.    4.63779 (13) obj. -11.9884 iterations 33
Cbc0038I Pass  19: suminf.    2.85250 (9) obj. -11.9884 iterations 7
Cbc0038I Pass  20: suminf.    2.83010 (9) obj. -11.9884 iterations 14
Cbc0038I Pass  21: suminf.    2.25612 (7) obj. -11.9884 iterations 10
Cbc0038I Pass  22: suminf.    2.20993 (10) obj. -11.9884 iterations 3
Cbc0038I Pass  23: suminf.    1.87799 (6) obj. -11.9884 iterations 15
Cbc0038I Pass  24: suminf.    1.77264 (6) obj. -11.9884 iterations 3
Cbc0038I Pass  25: suminf.    1.67741 (6) obj. -11.9884 iterations 2
Cbc0038I Pass  26: suminf.    2.69864 (7) obj. -11.9884 iterations 9
Cbc0038I Pass  27: suminf.    2.11155 (8) obj. -11.9884 iterations 1
Cbc0038I Pass  28: suminf.    2.86020 (8) obj. -11.9884 iterations 5
Cbc0038I Pass  29: suminf.    2.86020 (8) obj. -11.9884 iterations 1
Cbc0038I Pass  30: suminf.    2.12504 (8) obj. -11.9884 iterations 7
Cbc0038I Pass  31: suminf.    3.57032 (14) obj. -11.9884 iterations 22
Cbc0038I Pass  32: suminf.    2.37714 (7) obj. -11.9884 iterations 14
Cbc0038I Pass  33: suminf.    1.86266 (6) obj. -11.9884 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 94 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -6.1295 - took 0.13 seconds
Cbc0012I Integer solution of -6.1295 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 81 rows 48 columns
Cbc0031I 28 added rows had average density of 65.714286
Cbc0013I At root node, 28 cuts changed objective from -35.423539 to -28.591112 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13320 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2419 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 75.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.1295 best solution, best possible -28.591112 (1.11 seconds)
Cbc0004I Integer solution of -6.18424 found after 9463 iterations and 29 nodes (1.32 seconds)
Cbc0004I Integer solution of -6.40078 found after 9471 iterations and 30 nodes (1.32 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 70 rows 43 columns
Cbc0001I Search completed - best objective -6.400779999999997, took 10882 iterations and 74 nodes (1.50 seconds)
Cbc0032I Strong branching done 828 times (15509 iterations), fathomed 4 nodes and fixed 38 variables
Cbc0035I Maximum depth 22, 173 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       1.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 115 (-37) columns and 1763 (-1540) elements
Clp1000I sum of infeasibilities 2.57345e-08 - average 2.62597e-10, 24 fixed columns
Coin0506I Presolve 78 (-20) rows, 91 (-24) columns and 1146 (-617) elements
Clp0006I 0  Obj 33.150999 Primal inf 2.0552065e-07 (1) Dual inf 2.0896683e+10 (91)
Clp0014I Perturbing problem by 0.001% of 1.6968493 - largest nonzero change 1.4557059e-05 ( 0.0010393299%) - largest zero change 2.8890983e-05
Clp0000I Optimal - objective value 48.124542
Clp0000I Optimal - objective value 48.124542
Coin0511I After Postsolve, objective 48.124542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.124542
Clp0000I Optimal - objective value 48.124542
Clp0000I Optimal - objective value 48.124542
Clp0000I Optimal - objective value 48.124542
Coin0511I After Postsolve, objective 48.124542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.12454214 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 115 columns (115 integer (115 of which binary)) and 1767 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.151%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.19624
Cbc0038I Pass   1: suminf.    2.61087 (31) obj. -27.3786 iterations 12
Cbc0038I Pass   2: suminf.    2.61087 (31) obj. -27.3786 iterations 1
Cbc0038I Pass   3: suminf.    0.49985 (9) obj. 10.7983 iterations 22
Cbc0038I Solution found of 21.1596
Cbc0038I Rounding solution of 12.1479 is better than previous of 21.1596

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 115 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 12.1479 to 10.398 (0.03 seconds)
Cbc0038I Round again with cutoff of 5.11623
Cbc0038I Pass   4: suminf.    2.61087 (31) obj. -27.3786 iterations 0
Cbc0038I Pass   5: suminf.    2.61087 (31) obj. -27.3786 iterations 1
Cbc0038I Pass   6: suminf.    0.59460 (8) obj. 5.11623 iterations 34
Cbc0038I Pass   7: suminf.    0.59460 (8) obj. 5.11623 iterations 0
Cbc0038I Pass   8: suminf.    0.25437 (7) obj. 5.11623 iterations 16
Cbc0038I Pass   9: suminf.    0.25437 (7) obj. 5.11623 iterations 0
Cbc0038I Pass  10: suminf.    1.63955 (5) obj. 5.11623 iterations 11
Cbc0038I Pass  11: suminf.    1.63955 (5) obj. 5.11623 iterations 0
Cbc0038I Pass  12: suminf.    0.43389 (6) obj. 5.11623 iterations 5
Cbc0038I Pass  13: suminf.    0.43389 (6) obj. 5.11623 iterations 0
Cbc0038I Pass  14: suminf.    1.54944 (10) obj. 2.16336 iterations 26
Cbc0038I Pass  15: suminf.    0.71836 (8) obj. 5.11623 iterations 8
Cbc0038I Pass  16: suminf.    0.49090 (2) obj. 5.11623 iterations 9
Cbc0038I Pass  17: suminf.    0.39407 (2) obj. 2.97904 iterations 1
Cbc0038I Pass  18: suminf.    0.48464 (2) obj. 5.11623 iterations 4
Cbc0038I Pass  19: suminf.    0.48464 (2) obj. 5.11623 iterations 0
Cbc0038I Pass  20: suminf.    1.15010 (16) obj. 5.11623 iterations 34
Cbc0038I Pass  21: suminf.    1.10840 (12) obj. 5.11623 iterations 16
Cbc0038I Pass  22: suminf.    1.30336 (15) obj. 5.11623 iterations 27
Cbc0038I Pass  23: suminf.    1.30336 (15) obj. 5.11623 iterations 0
Cbc0038I Pass  24: suminf.    1.24210 (8) obj. 5.11623 iterations 17
Cbc0038I Pass  25: suminf.    0.89212 (7) obj. 5.11623 iterations 5
Cbc0038I Pass  26: suminf.    1.64162 (7) obj. 5.11623 iterations 11
Cbc0038I Pass  27: suminf.    1.64162 (7) obj. 5.11623 iterations 0
Cbc0038I Pass  28: suminf.    1.23064 (6) obj. 5.11623 iterations 12
Cbc0038I Pass  29: suminf.    0.42192 (4) obj. 5.11623 iterations 3
Cbc0038I Pass  30: suminf.    0.50948 (4) obj. 5.11623 iterations 4
Cbc0038I Pass  31: suminf.    2.98132 (15) obj. 4.51661 iterations 23
Cbc0038I Pass  32: suminf.    1.14821 (12) obj. 5.11623 iterations 8
Cbc0038I Pass  33: suminf.    1.02903 (11) obj. 4.32989 iterations 3
Cbc0038I Rounding solution of 8.65649 is better than previous of 10.398

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 115 columns, reduced to 59 rows 68 columns
Cbc0038I Mini branch and bound improved solution from 8.65649 to -2.10832 (0.11 seconds)
Cbc0038I Round again with cutoff of -10.1705
Cbc0038I Pass  33: suminf.    2.61087 (31) obj. -27.3786 iterations 0
Cbc0038I Pass  34: suminf.    2.61087 (31) obj. -27.3786 iterations 1
Cbc0038I Pass  35: suminf.    1.38736 (20) obj. -14.9733 iterations 11
Cbc0038I Pass  36: suminf.    2.76136 (18) obj. -10.1705 iterations 39
Cbc0038I Pass  37: suminf.    1.73776 (9) obj. -10.1705 iterations 12
Cbc0038I Pass  38: suminf.    2.39664 (13) obj. -10.1705 iterations 8
Cbc0038I Pass  39: suminf.    2.39664 (13) obj. -10.1705 iterations 0
Cbc0038I Pass  40: suminf.    1.61958 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  41: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  42: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  43: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  44: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I Pass  45: suminf.    3.13207 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  46: suminf.    1.61958 (10) obj. -10.1705 iterations 3
Cbc0038I Pass  47: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  48: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  49: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  50: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I Pass  51: suminf.    3.13207 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  52: suminf.    1.61958 (10) obj. -10.1705 iterations 3
Cbc0038I Pass  53: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  54: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  55: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  56: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I Pass  57: suminf.    3.13207 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  58: suminf.    1.61958 (10) obj. -10.1705 iterations 3
Cbc0038I Pass  59: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  60: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  61: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  62: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -2.10832 - took 0.12 seconds
Cbc0012I Integer solution of -2.10832 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 98 rows 115 columns, reduced to 43 rows 52 columns
Cbc0031I 54 added rows had average density of 30.962963
Cbc0013I At root node, 54 cuts changed objective from -42.418988 to -14.521519 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15595 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1848 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 588 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 975 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 320 row cuts average 64.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.638 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.10832 best solution, best possible -14.521519 (2.50 seconds)
Cbc0012I Integer solution of -4.63322 found by rounding after 6076 iterations and 1 nodes (2.50 seconds)
Cbc0004I Integer solution of -4.75236 found after 6107 iterations and 1 nodes (2.51 seconds)
Cbc0012I Integer solution of -5.24837 found by rounding after 6725 iterations and 4 nodes (2.85 seconds)
Cbc0010I After 12 nodes, 8 on tree, -5.24837 best solution, best possible -13.623575 (3.20 seconds)
Cbc0038I Full problem 98 rows 115 columns, reduced to 55 rows 66 columns
Cbc0012I Integer solution of -6.40078 found by RINS after 8628 iterations and 42 nodes (3.63 seconds)
Cbc0010I After 84 nodes, 21 on tree, -6.40078 best solution, best possible -13.623575 (3.91 seconds)
Cbc0038I Full problem 98 rows 115 columns, reduced to 50 rows 63 columns
Cbc0001I Search completed - best objective -6.400779999999997, took 14036 iterations and 198 nodes (4.54 seconds)
Cbc0032I Strong branching done 1978 times (37346 iterations), fathomed 16 nodes and fixed 28 variables
Cbc0035I Maximum depth 26, 403 variables fixed on reduced cost
Total time (CPU seconds):       3.87   (Wallclock seconds):       4.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 4.99915e-05 - average 3.75876e-07, 9 fixed columns
Coin0506I Presolve 116 (-17) rows, 67 (-9) columns and 359 (-51) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.6943092 - largest nonzero change 0 ( 0%) - largest zero change 1.7545919e-05
Clp0000I Optimal - objective value 35.423539
Clp0000I Optimal - objective value 35.423539
Coin0511I After Postsolve, objective 35.423539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.423539
Clp0000I Optimal - objective value 35.423539
Clp0000I Optimal - objective value 35.423539
Coin0511I After Postsolve, objective 35.423539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.42353863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.09956
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.82874 iterations 65
Cbc0038I Solution found of 6.82874
Cbc0038I Relaxing continuous gives 6.82874
Cbc0038I Rounding solution of 1.41679 is better than previous of 6.82874

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 81 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 1.41679 to 1.06101 (0.04 seconds)
Cbc0038I Round again with cutoff of -2.58753
Cbc0038I Pass   2: suminf.    0.18693 (1) obj. -2.58753 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -2.58753 iterations 1
Cbc0038I Solution found of -2.58753
Cbc0038I Relaxing continuous gives -4.75236
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 81 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -4.75236 to -6.1295 (0.08 seconds)
Cbc0038I Round again with cutoff of -11.9884
Cbc0038I Pass   4: suminf.    2.11570 (23) obj. -11.9884 iterations 23
Cbc0038I Pass   5: suminf.    1.97160 (33) obj. -11.9884 iterations 18
Cbc0038I Pass   6: suminf.    2.70740 (9) obj. -11.9884 iterations 28
Cbc0038I Pass   7: suminf.    2.36070 (9) obj. -11.9884 iterations 3
Cbc0038I Pass   8: suminf.    2.37652 (17) obj. -11.9884 iterations 20
Cbc0038I Pass   9: suminf.    4.30438 (14) obj. -11.9884 iterations 33
Cbc0038I Pass  10: suminf.    2.48140 (10) obj. -11.9884 iterations 12
Cbc0038I Pass  11: suminf.    2.73125 (9) obj. -11.9884 iterations 11
Cbc0038I Pass  12: suminf.    2.55359 (10) obj. -11.9884 iterations 1
Cbc0038I Pass  13: suminf.    3.50867 (9) obj. -11.9884 iterations 7
Cbc0038I Pass  14: suminf.    2.14738 (9) obj. -11.9884 iterations 5
Cbc0038I Pass  15: suminf.    2.14738 (9) obj. -11.9884 iterations 0
Cbc0038I Pass  16: suminf.    2.10361 (22) obj. -11.9884 iterations 15
Cbc0038I Pass  17: suminf.    1.97160 (33) obj. -11.9884 iterations 12
Cbc0038I Pass  18: suminf.    4.63779 (13) obj. -11.9884 iterations 33
Cbc0038I Pass  19: suminf.    2.85250 (9) obj. -11.9884 iterations 7
Cbc0038I Pass  20: suminf.    2.83010 (9) obj. -11.9884 iterations 14
Cbc0038I Pass  21: suminf.    2.25612 (7) obj. -11.9884 iterations 10
Cbc0038I Pass  22: suminf.    2.20993 (10) obj. -11.9884 iterations 3
Cbc0038I Pass  23: suminf.    1.87799 (6) obj. -11.9884 iterations 15
Cbc0038I Pass  24: suminf.    1.77264 (6) obj. -11.9884 iterations 3
Cbc0038I Pass  25: suminf.    1.67741 (6) obj. -11.9884 iterations 2
Cbc0038I Pass  26: suminf.    2.69864 (7) obj. -11.9884 iterations 9
Cbc0038I Pass  27: suminf.    2.11155 (8) obj. -11.9884 iterations 1
Cbc0038I Pass  28: suminf.    2.86020 (8) obj. -11.9884 iterations 5
Cbc0038I Pass  29: suminf.    2.86020 (8) obj. -11.9884 iterations 1
Cbc0038I Pass  30: suminf.    2.12504 (8) obj. -11.9884 iterations 7
Cbc0038I Pass  31: suminf.    3.57032 (14) obj. -11.9884 iterations 22
Cbc0038I Pass  32: suminf.    2.37714 (7) obj. -11.9884 iterations 14
Cbc0038I Pass  33: suminf.    1.86266 (6) obj. -11.9884 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 94 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -6.1295 - took 0.12 seconds
Cbc0012I Integer solution of -6.1295 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 81 rows 48 columns
Cbc0031I 28 added rows had average density of 65.714286
Cbc0013I At root node, 28 cuts changed objective from -35.423539 to -28.591112 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13320 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2419 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 75.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.1295 best solution, best possible -28.591112 (1.16 seconds)
Cbc0004I Integer solution of -6.18424 found after 9463 iterations and 29 nodes (1.37 seconds)
Cbc0004I Integer solution of -6.40078 found after 9471 iterations and 30 nodes (1.37 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 70 rows 43 columns
Cbc0001I Search completed - best objective -6.400779999999997, took 10882 iterations and 74 nodes (1.55 seconds)
Cbc0032I Strong branching done 828 times (15509 iterations), fathomed 4 nodes and fixed 38 variables
Cbc0035I Maximum depth 22, 173 variables fixed on reduced cost
Total time (CPU seconds):       1.50   (Wallclock seconds):       1.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 115 (-38) columns and 1763 (-1541) elements
Clp1000I sum of infeasibilities 2.57345e-08 - average 2.62597e-10, 24 fixed columns
Coin0506I Presolve 78 (-20) rows, 91 (-24) columns and 1146 (-617) elements
Clp0006I 0  Obj 33.150999 Primal inf 2.0552065e-07 (1) Dual inf 2.0896683e+10 (91)
Clp0014I Perturbing problem by 0.001% of 1.6968493 - largest nonzero change 1.4557059e-05 ( 0.0010393299%) - largest zero change 2.8890983e-05
Clp0000I Optimal - objective value 48.124542
Clp0000I Optimal - objective value 48.124542
Coin0511I After Postsolve, objective 48.124542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.124542
Clp0000I Optimal - objective value 48.124542
Clp0000I Optimal - objective value 48.124542
Clp0000I Optimal - objective value 48.124542
Coin0511I After Postsolve, objective 48.124542, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.12454214 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 115 columns (115 integer (115 of which binary)) and 1767 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.151%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.19624
Cbc0038I Pass   1: suminf.    2.61087 (31) obj. -27.3786 iterations 12
Cbc0038I Pass   2: suminf.    2.61087 (31) obj. -27.3786 iterations 1
Cbc0038I Pass   3: suminf.    0.49985 (9) obj. 10.7983 iterations 22
Cbc0038I Solution found of 21.1596
Cbc0038I Rounding solution of 12.1479 is better than previous of 21.1596

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 115 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 12.1479 to 10.398 (0.03 seconds)
Cbc0038I Round again with cutoff of 5.11623
Cbc0038I Pass   4: suminf.    2.61087 (31) obj. -27.3786 iterations 0
Cbc0038I Pass   5: suminf.    2.61087 (31) obj. -27.3786 iterations 1
Cbc0038I Pass   6: suminf.    0.59460 (8) obj. 5.11623 iterations 34
Cbc0038I Pass   7: suminf.    0.59460 (8) obj. 5.11623 iterations 0
Cbc0038I Pass   8: suminf.    0.25437 (7) obj. 5.11623 iterations 16
Cbc0038I Pass   9: suminf.    0.25437 (7) obj. 5.11623 iterations 0
Cbc0038I Pass  10: suminf.    1.63955 (5) obj. 5.11623 iterations 11
Cbc0038I Pass  11: suminf.    1.63955 (5) obj. 5.11623 iterations 0
Cbc0038I Pass  12: suminf.    0.43389 (6) obj. 5.11623 iterations 5
Cbc0038I Pass  13: suminf.    0.43389 (6) obj. 5.11623 iterations 0
Cbc0038I Pass  14: suminf.    1.54944 (10) obj. 2.16336 iterations 26
Cbc0038I Pass  15: suminf.    0.71836 (8) obj. 5.11623 iterations 8
Cbc0038I Pass  16: suminf.    0.49090 (2) obj. 5.11623 iterations 9
Cbc0038I Pass  17: suminf.    0.39407 (2) obj. 2.97904 iterations 1
Cbc0038I Pass  18: suminf.    0.48464 (2) obj. 5.11623 iterations 4
Cbc0038I Pass  19: suminf.    0.48464 (2) obj. 5.11623 iterations 0
Cbc0038I Pass  20: suminf.    1.15010 (16) obj. 5.11623 iterations 34
Cbc0038I Pass  21: suminf.    1.10840 (12) obj. 5.11623 iterations 16
Cbc0038I Pass  22: suminf.    1.30336 (15) obj. 5.11623 iterations 27
Cbc0038I Pass  23: suminf.    1.30336 (15) obj. 5.11623 iterations 0
Cbc0038I Pass  24: suminf.    1.24210 (8) obj. 5.11623 iterations 17
Cbc0038I Pass  25: suminf.    0.89212 (7) obj. 5.11623 iterations 5
Cbc0038I Pass  26: suminf.    1.64162 (7) obj. 5.11623 iterations 11
Cbc0038I Pass  27: suminf.    1.64162 (7) obj. 5.11623 iterations 0
Cbc0038I Pass  28: suminf.    1.23064 (6) obj. 5.11623 iterations 12
Cbc0038I Pass  29: suminf.    0.42192 (4) obj. 5.11623 iterations 3
Cbc0038I Pass  30: suminf.    0.50948 (4) obj. 5.11623 iterations 4
Cbc0038I Pass  31: suminf.    2.98132 (15) obj. 4.51661 iterations 23
Cbc0038I Pass  32: suminf.    1.14821 (12) obj. 5.11623 iterations 8
Cbc0038I Pass  33: suminf.    1.02903 (11) obj. 4.32989 iterations 3
Cbc0038I Rounding solution of 8.65649 is better than previous of 10.398

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 115 columns, reduced to 59 rows 68 columns
Cbc0038I Mini branch and bound improved solution from 8.65649 to -2.10832 (0.11 seconds)
Cbc0038I Round again with cutoff of -10.1705
Cbc0038I Pass  33: suminf.    2.61087 (31) obj. -27.3786 iterations 0
Cbc0038I Pass  34: suminf.    2.61087 (31) obj. -27.3786 iterations 1
Cbc0038I Pass  35: suminf.    1.38736 (20) obj. -14.9733 iterations 11
Cbc0038I Pass  36: suminf.    2.76136 (18) obj. -10.1705 iterations 39
Cbc0038I Pass  37: suminf.    1.73776 (9) obj. -10.1705 iterations 12
Cbc0038I Pass  38: suminf.    2.39664 (13) obj. -10.1705 iterations 8
Cbc0038I Pass  39: suminf.    2.39664 (13) obj. -10.1705 iterations 0
Cbc0038I Pass  40: suminf.    1.61958 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  41: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  42: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  43: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  44: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I Pass  45: suminf.    3.13207 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  46: suminf.    1.61958 (10) obj. -10.1705 iterations 3
Cbc0038I Pass  47: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  48: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  49: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  50: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I Pass  51: suminf.    3.13207 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  52: suminf.    1.61958 (10) obj. -10.1705 iterations 3
Cbc0038I Pass  53: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  54: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  55: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  56: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I Pass  57: suminf.    3.13207 (10) obj. -10.1705 iterations 11
Cbc0038I Pass  58: suminf.    1.61958 (10) obj. -10.1705 iterations 3
Cbc0038I Pass  59: suminf.    1.61958 (10) obj. -10.1705 iterations 0
Cbc0038I Pass  60: suminf.    3.76071 (12) obj. -10.1705 iterations 17
Cbc0038I Pass  61: suminf.    2.69317 (12) obj. -10.1705 iterations 2
Cbc0038I Pass  62: suminf.    2.00345 (12) obj. -10.1705 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -2.10832 - took 0.12 seconds
Cbc0012I Integer solution of -2.10832 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 98 rows 115 columns, reduced to 43 rows 52 columns
Cbc0031I 54 added rows had average density of 30.962963
Cbc0013I At root node, 54 cuts changed objective from -42.418988 to -14.521519 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15595 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1848 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 588 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 975 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 320 row cuts average 64.8 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.738 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.10832 best solution, best possible -14.521519 (3.08 seconds)
Cbc0012I Integer solution of -4.63322 found by rounding after 6076 iterations and 1 nodes (3.09 seconds)
Cbc0004I Integer solution of -4.75236 found after 6107 iterations and 1 nodes (3.10 seconds)
Cbc0012I Integer solution of -5.24837 found by rounding after 6725 iterations and 4 nodes (3.50 seconds)
Cbc0010I After 11 nodes, 8 on tree, -5.24837 best solution, best possible -13.623575 (3.81 seconds)
Cbc0038I Full problem 98 rows 115 columns, reduced to 55 rows 66 columns
Cbc0012I Integer solution of -6.40078 found by RINS after 8628 iterations and 42 nodes (4.40 seconds)
Cbc0010I After 56 nodes, 15 on tree, -6.40078 best solution, best possible -13.623575 (4.52 seconds)
Cbc0038I Full problem 98 rows 115 columns, reduced to 50 rows 63 columns
Cbc0010I After 139 nodes, 22 on tree, -6.40078 best solution, best possible -13.623575 (5.22 seconds)
Cbc0001I Search completed - best objective -6.400779999999997, took 14036 iterations and 198 nodes (5.42 seconds)
Cbc0032I Strong branching done 1978 times (37346 iterations), fathomed 16 nodes and fixed 28 variables
Cbc0035I Maximum depth 26, 403 variables fixed on reduced cost
Total time (CPU seconds):       4.44   (Wallclock seconds):       5.44

