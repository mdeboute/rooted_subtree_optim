Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 23 (-24) rows, 14 (-10) columns and 67 (-62) elements
Clp0000I Optimal - objective value 123.83438
Coin0511I After Postsolve, objective 123.83438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.8343839 - 12 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 14 columns (13 integer (13 of which binary)) and 67 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.172%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.87783
Cbc0038I Pass   1: suminf.    0.22222 (1) obj. -91.4444 iterations 6
Cbc0038I Solution found of -74
Cbc0038I Relaxing continuous gives -74
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -79.1663
Cbc0038I Pass   2: suminf.    0.22222 (1) obj. -91.4444 iterations 0
Cbc0038I Pass   3: suminf.    0.06581 (1) obj. -79.1663 iterations 1
Cbc0038I Pass   4: suminf.    0.56447 (3) obj. -79.1663 iterations 3
Cbc0038I Pass   5: suminf.    0.06581 (1) obj. -79.1663 iterations 4
Cbc0038I Pass   6: suminf.    0.54312 (2) obj. -79.1663 iterations 5
Cbc0038I Pass   7: suminf.    0.85820 (3) obj. -79.1663 iterations 3
Cbc0038I Pass   8: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass   9: suminf.    0.45834 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  10: suminf.    0.80231 (4) obj. -79.1663 iterations 2
Cbc0038I Pass  11: suminf.    3.39280 (8) obj. -79.1663 iterations 8
Cbc0038I Pass  12: suminf.    2.95634 (9) obj. -79.1663 iterations 1
Cbc0038I Pass  13: suminf.    2.93002 (9) obj. -79.1663 iterations 2
Cbc0038I Pass  14: suminf.    0.28252 (2) obj. -79.1663 iterations 10
Cbc0038I Pass  15: suminf.    0.21431 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -79.1663 iterations 3
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -79.1663 iterations 0
Cbc0038I Pass  18: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass  19: suminf.    0.32440 (2) obj. -79.1663 iterations 0
Cbc0038I Pass  20: suminf.    1.06668 (4) obj. -79.1663 iterations 2
Cbc0038I Pass  21: suminf.    0.32440 (2) obj. -79.1663 iterations 3
Cbc0038I Pass  22: suminf.    1.25705 (5) obj. -79.1663 iterations 5
Cbc0038I Pass  23: suminf.    0.85820 (3) obj. -79.1663 iterations 2
Cbc0038I Pass  24: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass  25: suminf.    0.45834 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  26: suminf.    3.09040 (8) obj. -79.1663 iterations 9
Cbc0038I Pass  27: suminf.    2.81634 (8) obj. -79.1663 iterations 2
Cbc0038I Pass  28: suminf.    0.22222 (2) obj. -79.1663 iterations 11
Cbc0038I Pass  29: suminf.    0.22222 (2) obj. -79.1663 iterations 0
Cbc0038I Pass  30: suminf.    0.69047 (2) obj. -79.1663 iterations 3
Cbc0038I Pass  31: suminf.    0.22222 (1) obj. -91.4444 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -74 - took 0.01 seconds
Cbc0012I Integer solution of -74 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 5 cuts changed objective from -121.16423 to -84.912734 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -74, took 17 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-15) rows, 34 (-10) columns and 225 (-135) elements
Clp1000I sum of infeasibilities 3.84484e-08 - average 1.24027e-09, 27 fixed columns
Coin0506I Presolve 8 (-23) rows, 7 (-27) columns and 26 (-199) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 87.800258
Clp0000I Optimal - objective value 87.800258
Coin0511I After Postsolve, objective 87.800258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.2060873 - largest nonzero change 1.8172422e-05 ( 0.0010292432%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 167.02844
Clp0000I Optimal - objective value 167.02844
Clp0000I Optimal - objective value 167.02844
Coin0511I After Postsolve, objective 167.02844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.0284397 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 33 columns (33 integer (33 of which binary)) and 191 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.32795
Cbc0038I Pass   1: suminf.    0.78333 (3) obj. -83.6667 iterations 15
Cbc0038I Solution found of -74
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 33 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -78.4868
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.78333 (3) obj. -83.6667 iterations 0
Cbc0038I Pass   3: suminf.    0.05716 (1) obj. -78.4868 iterations 4
Cbc0038I Pass   4: suminf.    0.22222 (1) obj. -91.4444 iterations 1
Cbc0038I Pass   5: suminf.    1.44220 (5) obj. -78.4868 iterations 7
Cbc0038I Pass   6: suminf.    0.33333 (1) obj. -82.3333 iterations 4
Cbc0038I Pass   7: suminf.    0.33012 (2) obj. -78.4868 iterations 2
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -82.3333 iterations 2
Cbc0038I Pass   9: suminf.    0.80138 (3) obj. -78.4868 iterations 4
Cbc0038I Pass  10: suminf.    0.80138 (3) obj. -78.4868 iterations 0
Cbc0038I Pass  11: suminf.    0.58333 (2) obj. -92.6667 iterations 3
Cbc0038I Pass  12: suminf.    2.17337 (7) obj. -78.4868 iterations 12
Cbc0038I Pass  13: suminf.    2.14754 (6) obj. -78.4868 iterations 3
Cbc0038I Pass  14: suminf.    0.33333 (1) obj. -81.3333 iterations 7
Cbc0038I Pass  15: suminf.    0.34798 (2) obj. -78.4868 iterations 2
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -81.3333 iterations 2
Cbc0038I Pass  17: suminf.    0.92792 (3) obj. -78.4868 iterations 6
Cbc0038I Pass  18: suminf.    0.76762 (2) obj. -78.4868 iterations 1
Cbc0038I Pass  19: suminf.    0.22222 (1) obj. -86.4444 iterations 3
Cbc0038I Pass  20: suminf.    0.12085 (1) obj. -78.4868 iterations 1
Cbc0038I Pass  21: suminf.    1.68788 (4) obj. -80.3576 iterations 6
Cbc0038I Pass  22: suminf.    1.68788 (4) obj. -80.3576 iterations 1
Cbc0038I Pass  23: suminf.    2.04621 (6) obj. -78.4868 iterations 8
Cbc0038I Pass  24: suminf.    0.68726 (3) obj. -78.4868 iterations 6
Cbc0038I Pass  25: suminf.    0.42349 (2) obj. -78.4868 iterations 3
Cbc0038I Pass  26: suminf.    0.40155 (2) obj. -78.4868 iterations 1
Cbc0038I Pass  27: suminf.    2.09039 (7) obj. -78.4868 iterations 13
Cbc0038I Pass  28: suminf.    1.67868 (6) obj. -78.4868 iterations 4
Cbc0038I Pass  29: suminf.    0.34323 (2) obj. -78.4868 iterations 10
Cbc0038I Pass  30: suminf.    0.58333 (2) obj. -88.6667 iterations 3
Cbc0038I Pass  31: suminf.    0.40155 (2) obj. -78.4868 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 33 columns, reduced to 17 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -74 - took 0.01 seconds
Cbc0012I Integer solution of -74 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 6
Cbc0013I At root node, 4 cuts changed objective from -114.36846 to -82.743483 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 5.3 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -74, took 23 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 23 (-24) rows, 14 (-10) columns and 67 (-62) elements
Clp0000I Optimal - objective value 123.83438
Coin0511I After Postsolve, objective 123.83438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.8343839 - 12 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 14 columns (13 integer (13 of which binary)) and 67 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.172%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.87783
Cbc0038I Pass   1: suminf.    0.22222 (1) obj. -91.4444 iterations 6
Cbc0038I Solution found of -74
Cbc0038I Relaxing continuous gives -74
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -79.1663
Cbc0038I Pass   2: suminf.    0.22222 (1) obj. -91.4444 iterations 0
Cbc0038I Pass   3: suminf.    0.06581 (1) obj. -79.1663 iterations 1
Cbc0038I Pass   4: suminf.    0.56447 (3) obj. -79.1663 iterations 3
Cbc0038I Pass   5: suminf.    0.06581 (1) obj. -79.1663 iterations 4
Cbc0038I Pass   6: suminf.    0.54312 (2) obj. -79.1663 iterations 5
Cbc0038I Pass   7: suminf.    0.85820 (3) obj. -79.1663 iterations 3
Cbc0038I Pass   8: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass   9: suminf.    0.45834 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  10: suminf.    0.80231 (4) obj. -79.1663 iterations 2
Cbc0038I Pass  11: suminf.    3.39280 (8) obj. -79.1663 iterations 8
Cbc0038I Pass  12: suminf.    2.95634 (9) obj. -79.1663 iterations 1
Cbc0038I Pass  13: suminf.    2.93002 (9) obj. -79.1663 iterations 2
Cbc0038I Pass  14: suminf.    0.28252 (2) obj. -79.1663 iterations 10
Cbc0038I Pass  15: suminf.    0.21431 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -79.1663 iterations 3
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -79.1663 iterations 0
Cbc0038I Pass  18: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass  19: suminf.    0.32440 (2) obj. -79.1663 iterations 0
Cbc0038I Pass  20: suminf.    1.06668 (4) obj. -79.1663 iterations 2
Cbc0038I Pass  21: suminf.    0.32440 (2) obj. -79.1663 iterations 3
Cbc0038I Pass  22: suminf.    1.25705 (5) obj. -79.1663 iterations 5
Cbc0038I Pass  23: suminf.    0.85820 (3) obj. -79.1663 iterations 2
Cbc0038I Pass  24: suminf.    0.32440 (2) obj. -79.1663 iterations 2
Cbc0038I Pass  25: suminf.    0.45834 (2) obj. -79.1663 iterations 1
Cbc0038I Pass  26: suminf.    3.09040 (8) obj. -79.1663 iterations 9
Cbc0038I Pass  27: suminf.    2.81634 (8) obj. -79.1663 iterations 2
Cbc0038I Pass  28: suminf.    0.22222 (2) obj. -79.1663 iterations 11
Cbc0038I Pass  29: suminf.    0.22222 (2) obj. -79.1663 iterations 0
Cbc0038I Pass  30: suminf.    0.69047 (2) obj. -79.1663 iterations 3
Cbc0038I Pass  31: suminf.    0.22222 (1) obj. -91.4444 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -74 - took 0.01 seconds
Cbc0012I Integer solution of -74 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 5 cuts changed objective from -121.16423 to -84.912734 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -74, took 17 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-18) rows, 32 (-13) columns and 186 (-175) elements
Clp1000I sum of infeasibilities 1.80949e-08 - average 6.23963e-10, 23 fixed columns
Coin0506I Presolve 7 (-22) rows, 9 (-23) columns and 27 (-159) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 82.230151
Clp0000I Optimal - objective value 82.230151
Coin0511I After Postsolve, objective 82.230151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5801319 - largest nonzero change 1.2080581e-05 ( 0.00073930911%) - largest zero change 1.8653502e-05
Clp0000I Optimal - objective value 160.50217
Clp0000I Optimal - objective value 160.50217
Clp0000I Optimal - objective value 160.50217
Coin0511I After Postsolve, objective 160.50217, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 160.5021714 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 33 columns (33 integer (33 of which binary)) and 192 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.960%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.33891
Cbc0038I Pass   1: suminf.    1.39280 (5) obj. -100.879 iterations 11
Cbc0038I Pass   2: suminf.    0.16667 (1) obj. -48.3333 iterations 2
Cbc0038I Solution found of -45
Cbc0038I Rounding solution of -74 is better than previous of -45

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -78.5985
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.39280 (5) obj. -100.879 iterations 0
Cbc0038I Pass   4: suminf.    0.55221 (2) obj. -78.5985 iterations 2
Cbc0038I Pass   5: suminf.    0.45455 (1) obj. -80.6818 iterations 2
Cbc0038I Pass   6: suminf.    0.42801 (1) obj. -78.5985 iterations 1
Cbc0038I Pass   7: suminf.    1.22252 (4) obj. -78.5985 iterations 8
Cbc0038I Pass   8: suminf.    0.53333 (2) obj. -86.3333 iterations 4
Cbc0038I Pass   9: suminf.    0.33212 (2) obj. -78.5985 iterations 3
Cbc0038I Pass  10: suminf.    0.33333 (1) obj. -82.3333 iterations 2
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -82.3333 iterations 0
Cbc0038I Pass  12: suminf.    0.72619 (2) obj. -79.9524 iterations 4
Cbc0038I Pass  13: suminf.    0.51069 (3) obj. -78.5985 iterations 2
Cbc0038I Pass  14: suminf.    0.46292 (2) obj. -78.5985 iterations 2
Cbc0038I Pass  15: suminf.    0.31426 (2) obj. -78.5985 iterations 1
Cbc0038I Pass  16: suminf.    1.56761 (6) obj. -78.5985 iterations 7
Cbc0038I Pass  17: suminf.    0.34997 (3) obj. -78.5985 iterations 5
Cbc0038I Pass  18: suminf.    0.28571 (1) obj. -79.5714 iterations 3
Cbc0038I Pass  19: suminf.    0.15355 (2) obj. -78.5985 iterations 2
Cbc0038I Pass  20: suminf.    0.70880 (4) obj. -78.5985 iterations 5
Cbc0038I Pass  21: suminf.    0.17140 (2) obj. -78.5985 iterations 4
Cbc0038I Pass  22: suminf.    0.28819 (2) obj. -78.5985 iterations 2
Cbc0038I Pass  23: suminf.    1.65819 (5) obj. -78.5985 iterations 5
Cbc0038I Pass  24: suminf.    1.63488 (4) obj. -78.5985 iterations 1
Cbc0038I Pass  25: suminf.    0.63959 (3) obj. -78.5985 iterations 3
Cbc0038I Pass  26: suminf.    0.18926 (2) obj. -78.5985 iterations 1
Cbc0038I Pass  27: suminf.    0.37956 (2) obj. -78.5985 iterations 2
Cbc0038I Pass  28: suminf.    1.25915 (4) obj. -78.5985 iterations 6
Cbc0038I Pass  29: suminf.    0.85890 (3) obj. -78.5985 iterations 1
Cbc0038I Pass  30: suminf.    0.27039 (2) obj. -78.5985 iterations 3
Cbc0038I Pass  31: suminf.    0.27039 (2) obj. -78.5985 iterations 0
Cbc0038I Pass  32: suminf.    0.22222 (1) obj. -87.4444 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 33 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -74 - took 0.01 seconds
Cbc0012I Integer solution of -74 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 6
Cbc0013I At root node, 4 cuts changed objective from -115.48623 to -82.743483 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 1.9 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -74, took 26 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

