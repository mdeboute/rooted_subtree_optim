Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 69 (-9) columns and 383 (-70) elements
Clp1000I sum of infeasibilities 1.93669e-06 - average 1.53705e-08, 58 fixed columns
Coin0506I Presolve 7 (-119) rows, 7 (-62) columns and 22 (-361) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 13064.526
Clp0000I Optimal - objective value 13064.526
Coin0511I After Postsolve, objective 13064.526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5826601 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 13064.526
Clp0000I Optimal - objective value 13064.526
Clp0000I Optimal - objective value 13064.526
Coin0511I After Postsolve, objective 13064.526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13064.52601 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 69 columns (68 integer (68 of which binary)) and 411 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.856%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.66419
Cbc0038I Pass   1: suminf.    0.31111 (2) obj. -12801.3 iterations 17
Cbc0038I Solution found of -7898.72
Cbc0038I Relaxing continuous gives -7898.72
Cbc0038I Rounding solution of -10922.9 is better than previous of -7898.72

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -11137.1
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.31111 (2) obj. -12801.3 iterations 0
Cbc0038I Pass   3: suminf.    0.06060 (1) obj. -11137.1 iterations 4
Cbc0038I Solution found of -11346
Cbc0038I Relaxing continuous gives -11346
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -11689.7
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.31111 (2) obj. -12801.3 iterations 0
Cbc0038I Pass   5: suminf.    0.10818 (3) obj. -11689.7 iterations 7
Cbc0038I Pass   6: suminf.    0.10818 (3) obj. -11689.7 iterations 0
Cbc0038I Pass   7: suminf.    0.66667 (2) obj. -12575.4 iterations 5
Cbc0038I Pass   8: suminf.    0.32143 (2) obj. -12921.9 iterations 12
Cbc0038I Pass   9: suminf.    0.32143 (2) obj. -12921.9 iterations 4
Cbc0038I Pass  10: suminf.    1.11065 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  11: suminf.    0.67574 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  12: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I Pass  13: suminf.    0.15881 (3) obj. -11689.7 iterations 6
Cbc0038I Pass  14: suminf.    1.07220 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  15: suminf.    1.07220 (3) obj. -11689.7 iterations 0
Cbc0038I Pass  16: suminf.    0.59100 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  17: suminf.    0.52168 (2) obj. -11689.7 iterations 1
Cbc0038I Pass  18: suminf.    0.67574 (3) obj. -11689.7 iterations 3
Cbc0038I Pass  19: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I Pass  20: suminf.    0.15881 (3) obj. -11689.7 iterations 6
Cbc0038I Pass  21: suminf.    1.07220 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  22: suminf.    1.07220 (3) obj. -11689.7 iterations 0
Cbc0038I Pass  23: suminf.    0.59100 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  24: suminf.    0.52168 (2) obj. -11689.7 iterations 1
Cbc0038I Pass  25: suminf.    0.67574 (3) obj. -11689.7 iterations 3
Cbc0038I Pass  26: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I Pass  27: suminf.    0.15881 (3) obj. -11689.7 iterations 6
Cbc0038I Pass  28: suminf.    1.07220 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  29: suminf.    1.07220 (3) obj. -11689.7 iterations 0
Cbc0038I Pass  30: suminf.    0.59100 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  31: suminf.    0.52168 (2) obj. -11689.7 iterations 1
Cbc0038I Pass  32: suminf.    0.67574 (3) obj. -11689.7 iterations 3
Cbc0038I Pass  33: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11346 to -11927.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -12268.8
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 4
Cbc0038I Pass  33: suminf.    0.31111 (2) obj. -12801.3 iterations 0
Cbc0038I Pass  34: suminf.    0.29045 (3) obj. -12268.8 iterations 5
Cbc0038I Pass  35: suminf.    0.29045 (3) obj. -12268.8 iterations 0
Cbc0038I Pass  36: suminf.    0.66667 (2) obj. -12575.4 iterations 3
Cbc0038I Pass  37: suminf.    0.93673 (3) obj. -12268.8 iterations 10
Cbc0038I Pass  38: suminf.    0.59678 (6) obj. -12268.8 iterations 15
Cbc0038I Pass  39: suminf.    0.44444 (1) obj. -12432.5 iterations 11
Cbc0038I Pass  40: suminf.    0.44444 (1) obj. -12432.5 iterations 1
Cbc0038I Pass  41: suminf.    0.49193 (1) obj. -12268.8 iterations 2
Cbc0038I Pass  42: suminf.    1.07852 (3) obj. -12268.8 iterations 18
Cbc0038I Pass  43: suminf.    1.07852 (3) obj. -12268.8 iterations 5
Cbc0038I Pass  44: suminf.    0.74287 (3) obj. -12268.8 iterations 3
Cbc0038I Pass  45: suminf.    0.74287 (3) obj. -12268.8 iterations 0
Cbc0038I Pass  46: suminf.    0.84811 (3) obj. -12268.8 iterations 2
Cbc0038I Pass  47: suminf.    1.11128 (4) obj. -12268.8 iterations 13
Cbc0038I Pass  48: suminf.    0.62372 (2) obj. -12268.8 iterations 7
Cbc0038I Pass  49: suminf.    0.92925 (2) obj. -12268.8 iterations 4
Cbc0038I Pass  50: suminf.    0.19565 (2) obj. -12576.1 iterations 8
Cbc0038I Pass  51: suminf.    0.08398 (2) obj. -12268.8 iterations 6
Cbc0038I Pass  52: suminf.    0.40256 (2) obj. -12400.3 iterations 4
Cbc0038I Pass  53: suminf.    0.85258 (10) obj. -12268.8 iterations 13
Cbc0038I Pass  54: suminf.    0.40256 (2) obj. -12400.3 iterations 14
Cbc0038I Pass  55: suminf.    0.21547 (5) obj. -12268.8 iterations 11
Cbc0038I Pass  56: suminf.    0.50385 (4) obj. -12268.8 iterations 8
Cbc0038I Pass  57: suminf.    1.17343 (5) obj. -12268.8 iterations 12
Cbc0038I Pass  58: suminf.    0.49193 (1) obj. -12268.8 iterations 13
Cbc0038I Pass  59: suminf.    0.44444 (1) obj. -12432.5 iterations 2
Cbc0038I Pass  60: suminf.    1.05083 (3) obj. -12268.8 iterations 11
Cbc0038I Pass  61: suminf.    1.05083 (3) obj. -12268.8 iterations 5
Cbc0038I Pass  62: suminf.    0.47825 (3) obj. -12268.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -11927.8 - took 0.02 seconds
Cbc0012I Integer solution of -11927.781 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 124 rows 69 columns, reduced to 8 rows 7 columns
Cbc0031I 8 added rows had average density of 24
Cbc0013I At root node, 8 cuts changed objective from -13064.526 to -12220.067 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 2.6 elements, 15 column cuts (15 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 67.3 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0001I Search completed - best objective -11927.781, took 171 iterations and 2 nodes (0.28 seconds)
Cbc0032I Strong branching done 18 times (101 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 109 (-43) columns and 1812 (-1491) elements
Clp1000I sum of infeasibilities 7.66189e-08 - average 7.73928e-10, 92 fixed columns
Coin0506I Presolve 12 (-87) rows, 17 (-92) columns and 54 (-1758) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 13037.526
Clp0000I Optimal - objective value 13037.526
Coin0511I After Postsolve, objective 13037.526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.685266 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 13098.475
Clp0000I Optimal - objective value 13098.475
Clp0000I Optimal - objective value 13098.475
Coin0511I After Postsolve, objective 13098.475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13098.47548 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 109 columns (109 integer (109 of which binary)) and 1848 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.373%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.0299
Cbc0038I Pass   1: suminf.    1.62977 (26) obj. -12828.5 iterations 31
Cbc0038I Pass   2: suminf.    0.16926 (7) obj. -7905.55 iterations 27
Cbc0038I Solution found of -7898.72
Cbc0038I Rounding solution of -10196.6 is better than previous of -7898.72

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 36 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -10196.6 to -10922.9 (0.05 seconds)
Cbc0038I Round again with cutoff of -11138.9
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.62977 (26) obj. -12828.5 iterations 0
Cbc0038I Pass   4: suminf.    0.10511 (3) obj. -11138.9 iterations 43
Cbc0038I Pass   5: suminf.    0.04447 (2) obj. -11347.9 iterations 1
Cbc0038I Solution found of -11346
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 36 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -11693.3
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass   6: suminf.    1.62977 (26) obj. -12828.5 iterations 0
Cbc0038I Pass   7: suminf.    0.15867 (3) obj. -11693.3 iterations 44
Cbc0038I Pass   8: suminf.    0.15867 (3) obj. -11693.3 iterations 0
Cbc0038I Pass   9: suminf.    0.37931 (1) obj. -12493.1 iterations 5
Cbc0038I Pass  10: suminf.    0.11485 (1) obj. -11693.3 iterations 3
Cbc0038I Pass  11: suminf.    1.65752 (10) obj. -11903.8 iterations 22
Cbc0038I Pass  12: suminf.    0.25126 (5) obj. -11693.3 iterations 11
Cbc0038I Pass  13: suminf.    0.37931 (1) obj. -12488.1 iterations 5
Cbc0038I Pass  14: suminf.    0.11650 (1) obj. -11693.3 iterations 2
Cbc0038I Pass  15: suminf.    1.22719 (13) obj. -11693.3 iterations 22
Cbc0038I Pass  16: suminf.    0.48814 (9) obj. -11693.3 iterations 10
Cbc0038I Pass  17: suminf.    0.37931 (1) obj. -12485.1 iterations 10
Cbc0038I Pass  18: suminf.    0.11749 (1) obj. -11693.3 iterations 2
Cbc0038I Pass  19: suminf.    1.23882 (7) obj. -11693.3 iterations 13
Cbc0038I Pass  20: suminf.    0.52743 (5) obj. -11693.3 iterations 7
Cbc0038I Pass  21: suminf.    0.39957 (5) obj. -12141.4 iterations 1
Cbc0038I Pass  22: suminf.    0.38813 (1) obj. -11693.3 iterations 5
Cbc0038I Pass  23: suminf.    0.25926 (1) obj. -12137.5 iterations 1
Cbc0038I Pass  24: suminf.    0.47906 (5) obj. -12547.3 iterations 16
Cbc0038I Pass  25: suminf.    0.47906 (5) obj. -12547.3 iterations 3
Cbc0038I Pass  26: suminf.    0.11650 (1) obj. -11693.3 iterations 8
Cbc0038I Pass  27: suminf.    0.11650 (1) obj. -11693.3 iterations 0
Cbc0038I Pass  28: suminf.    0.37931 (1) obj. -12488.1 iterations 2
Cbc0038I Pass  29: suminf.    1.46369 (5) obj. -11693.3 iterations 14
Cbc0038I Pass  30: suminf.    1.46369 (5) obj. -11693.3 iterations 2
Cbc0038I Pass  31: suminf.    0.11683 (1) obj. -11693.3 iterations 11
Cbc0038I Pass  32: suminf.    0.37931 (1) obj. -12487.1 iterations 2
Cbc0038I Pass  33: suminf.    1.37543 (12) obj. -12206.9 iterations 19
Cbc0038I Pass  34: suminf.    0.43174 (9) obj. -11693.3 iterations 18
Cbc0038I Pass  35: suminf.    0.37931 (1) obj. -12484.1 iterations 11
Cbc0038I Rounding solution of -11560.8 is better than previous of -11346

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 44 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -11560.8 to -11927.8 (0.08 seconds)
Cbc0038I Round again with cutoff of -12274.2
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  35: suminf.    1.62977 (26) obj. -12828.5 iterations 0
Cbc0038I Pass  36: suminf.    0.50141 (9) obj. -12274.2 iterations 25
Cbc0038I Pass  37: suminf.    0.50141 (9) obj. -12274.2 iterations 0
Cbc0038I Pass  38: suminf.    0.37931 (1) obj. -12493.1 iterations 9
Cbc0038I Pass  39: suminf.    0.30694 (1) obj. -12274.2 iterations 1
Cbc0038I Pass  40: suminf.    0.78787 (7) obj. -12274.2 iterations 14
Cbc0038I Pass  41: suminf.    0.64217 (7) obj. -12274.2 iterations 5
Cbc0038I Pass  42: suminf.    1.07607 (3) obj. -12274.2 iterations 9
Cbc0038I Pass  43: suminf.    0.65752 (3) obj. -12274.2 iterations 2
Cbc0038I Pass  44: suminf.    0.48606 (3) obj. -12274.2 iterations 3
Cbc0038I Pass  45: suminf.    0.49131 (2) obj. -12274.2 iterations 5
Cbc0038I Pass  46: suminf.    0.31111 (2) obj. -12797.3 iterations 1
Cbc0038I Pass  47: suminf.    0.30827 (1) obj. -12274.2 iterations 5
Cbc0038I Pass  48: suminf.    0.30827 (1) obj. -12274.2 iterations 0
Cbc0038I Pass  49: suminf.    0.37931 (1) obj. -12489.1 iterations 2
Cbc0038I Pass  50: suminf.    0.56462 (6) obj. -12274.2 iterations 17
Cbc0038I Pass  51: suminf.    0.33428 (5) obj. -12274.2 iterations 6
Cbc0038I Pass  52: suminf.    0.37931 (1) obj. -12490.1 iterations 5
Cbc0038I Pass  53: suminf.    0.30794 (1) obj. -12274.2 iterations 2
Cbc0038I Pass  54: suminf.    1.22498 (7) obj. -12274.2 iterations 19
Cbc0038I Pass  55: suminf.    0.64280 (5) obj. -12436.3 iterations 10
Cbc0038I Pass  56: suminf.    0.49007 (1) obj. -12274.2 iterations 5
Cbc0038I Pass  57: suminf.    0.44444 (1) obj. -12431.5 iterations 1
Cbc0038I Pass  58: suminf.    0.37812 (6) obj. -12299.9 iterations 15
Cbc0038I Pass  59: suminf.    0.37812 (6) obj. -12299.9 iterations 5
Cbc0038I Pass  60: suminf.    0.42752 (1) obj. -12274.2 iterations 11
Cbc0038I Pass  61: suminf.    0.38281 (2) obj. -12541.4 iterations 3
Cbc0038I Pass  62: suminf.    0.30959 (1) obj. -12274.2 iterations 5
Cbc0038I Pass  63: suminf.    0.30959 (1) obj. -12274.2 iterations 0
Cbc0038I Pass  64: suminf.    0.37931 (1) obj. -12485.1 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 109 columns, reduced to 39 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11927.8 - took 0.05 seconds
Cbc0012I Integer solution of -11927.781 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 97 rows 109 columns, reduced to 36 rows 17 columns
Cbc0031I 35 added rows had average density of 11.942857
Cbc0013I At root node, 35 cuts changed objective from -13078.984 to -12460.661 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 415 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 51 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 31 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11927.781 best solution, best possible -12460.661 (0.36 seconds)
Cbc0001I Search completed - best objective -11927.781, took 1075 iterations and 12 nodes (0.99 seconds)
Cbc0032I Strong branching done 202 times (1881 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       1.00

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 69 (-9) columns and 383 (-70) elements
Clp1000I sum of infeasibilities 1.93669e-06 - average 1.53705e-08, 58 fixed columns
Coin0506I Presolve 7 (-119) rows, 7 (-62) columns and 22 (-361) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 13064.526
Clp0000I Optimal - objective value 13064.526
Coin0511I After Postsolve, objective 13064.526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5826601 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 13064.526
Clp0000I Optimal - objective value 13064.526
Clp0000I Optimal - objective value 13064.526
Coin0511I After Postsolve, objective 13064.526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13064.52601 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 69 columns (68 integer (68 of which binary)) and 411 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.856%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.66419
Cbc0038I Pass   1: suminf.    0.31111 (2) obj. -12801.3 iterations 17
Cbc0038I Solution found of -7898.72
Cbc0038I Relaxing continuous gives -7898.72
Cbc0038I Rounding solution of -10922.9 is better than previous of -7898.72

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -11137.1
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.31111 (2) obj. -12801.3 iterations 0
Cbc0038I Pass   3: suminf.    0.06060 (1) obj. -11137.1 iterations 4
Cbc0038I Solution found of -11346
Cbc0038I Relaxing continuous gives -11346
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -11689.7
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.31111 (2) obj. -12801.3 iterations 0
Cbc0038I Pass   5: suminf.    0.10818 (3) obj. -11689.7 iterations 7
Cbc0038I Pass   6: suminf.    0.10818 (3) obj. -11689.7 iterations 0
Cbc0038I Pass   7: suminf.    0.66667 (2) obj. -12575.4 iterations 5
Cbc0038I Pass   8: suminf.    0.32143 (2) obj. -12921.9 iterations 12
Cbc0038I Pass   9: suminf.    0.32143 (2) obj. -12921.9 iterations 4
Cbc0038I Pass  10: suminf.    1.11065 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  11: suminf.    0.67574 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  12: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I Pass  13: suminf.    0.15881 (3) obj. -11689.7 iterations 6
Cbc0038I Pass  14: suminf.    1.07220 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  15: suminf.    1.07220 (3) obj. -11689.7 iterations 0
Cbc0038I Pass  16: suminf.    0.59100 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  17: suminf.    0.52168 (2) obj. -11689.7 iterations 1
Cbc0038I Pass  18: suminf.    0.67574 (3) obj. -11689.7 iterations 3
Cbc0038I Pass  19: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I Pass  20: suminf.    0.15881 (3) obj. -11689.7 iterations 6
Cbc0038I Pass  21: suminf.    1.07220 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  22: suminf.    1.07220 (3) obj. -11689.7 iterations 0
Cbc0038I Pass  23: suminf.    0.59100 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  24: suminf.    0.52168 (2) obj. -11689.7 iterations 1
Cbc0038I Pass  25: suminf.    0.67574 (3) obj. -11689.7 iterations 3
Cbc0038I Pass  26: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I Pass  27: suminf.    0.15881 (3) obj. -11689.7 iterations 6
Cbc0038I Pass  28: suminf.    1.07220 (3) obj. -11689.7 iterations 5
Cbc0038I Pass  29: suminf.    1.07220 (3) obj. -11689.7 iterations 0
Cbc0038I Pass  30: suminf.    0.59100 (3) obj. -11689.7 iterations 4
Cbc0038I Pass  31: suminf.    0.52168 (2) obj. -11689.7 iterations 1
Cbc0038I Pass  32: suminf.    0.67574 (3) obj. -11689.7 iterations 3
Cbc0038I Pass  33: suminf.    0.62794 (3) obj. -11689.7 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11346 to -11927.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -12268.8
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 4
Cbc0038I Pass  33: suminf.    0.31111 (2) obj. -12801.3 iterations 0
Cbc0038I Pass  34: suminf.    0.29045 (3) obj. -12268.8 iterations 5
Cbc0038I Pass  35: suminf.    0.29045 (3) obj. -12268.8 iterations 0
Cbc0038I Pass  36: suminf.    0.66667 (2) obj. -12575.4 iterations 3
Cbc0038I Pass  37: suminf.    0.93673 (3) obj. -12268.8 iterations 10
Cbc0038I Pass  38: suminf.    0.59678 (6) obj. -12268.8 iterations 15
Cbc0038I Pass  39: suminf.    0.44444 (1) obj. -12432.5 iterations 11
Cbc0038I Pass  40: suminf.    0.44444 (1) obj. -12432.5 iterations 1
Cbc0038I Pass  41: suminf.    0.49193 (1) obj. -12268.8 iterations 2
Cbc0038I Pass  42: suminf.    1.07852 (3) obj. -12268.8 iterations 18
Cbc0038I Pass  43: suminf.    1.07852 (3) obj. -12268.8 iterations 5
Cbc0038I Pass  44: suminf.    0.74287 (3) obj. -12268.8 iterations 3
Cbc0038I Pass  45: suminf.    0.74287 (3) obj. -12268.8 iterations 0
Cbc0038I Pass  46: suminf.    0.84811 (3) obj. -12268.8 iterations 2
Cbc0038I Pass  47: suminf.    1.11128 (4) obj. -12268.8 iterations 13
Cbc0038I Pass  48: suminf.    0.62372 (2) obj. -12268.8 iterations 7
Cbc0038I Pass  49: suminf.    0.92925 (2) obj. -12268.8 iterations 4
Cbc0038I Pass  50: suminf.    0.19565 (2) obj. -12576.1 iterations 8
Cbc0038I Pass  51: suminf.    0.08398 (2) obj. -12268.8 iterations 6
Cbc0038I Pass  52: suminf.    0.40256 (2) obj. -12400.3 iterations 4
Cbc0038I Pass  53: suminf.    0.85258 (10) obj. -12268.8 iterations 13
Cbc0038I Pass  54: suminf.    0.40256 (2) obj. -12400.3 iterations 14
Cbc0038I Pass  55: suminf.    0.21547 (5) obj. -12268.8 iterations 11
Cbc0038I Pass  56: suminf.    0.50385 (4) obj. -12268.8 iterations 8
Cbc0038I Pass  57: suminf.    1.17343 (5) obj. -12268.8 iterations 12
Cbc0038I Pass  58: suminf.    0.49193 (1) obj. -12268.8 iterations 13
Cbc0038I Pass  59: suminf.    0.44444 (1) obj. -12432.5 iterations 2
Cbc0038I Pass  60: suminf.    1.05083 (3) obj. -12268.8 iterations 11
Cbc0038I Pass  61: suminf.    1.05083 (3) obj. -12268.8 iterations 5
Cbc0038I Pass  62: suminf.    0.47825 (3) obj. -12268.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 69 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -11927.8 - took 0.02 seconds
Cbc0012I Integer solution of -11927.781 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 124 rows 69 columns, reduced to 8 rows 7 columns
Cbc0031I 8 added rows had average density of 24
Cbc0013I At root node, 8 cuts changed objective from -13064.526 to -12220.067 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 2.6 elements, 15 column cuts (15 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 67.3 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0001I Search completed - best objective -11927.781, took 171 iterations and 2 nodes (0.30 seconds)
Cbc0032I Strong branching done 18 times (101 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 108 (-45) columns and 1771 (-1533) elements
Clp1000I sum of infeasibilities 8.15447e-08 - average 8.32089e-10, 91 fixed columns
Coin0506I Presolve 12 (-86) rows, 17 (-91) columns and 54 (-1717) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 13037.526
Clp0000I Optimal - objective value 13037.526
Coin0511I After Postsolve, objective 13037.526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8313432 - largest nonzero change 0 ( 0%) - largest zero change 2.9826149e-05
Clp0000I Optimal - objective value 13098.475
Clp0000I Optimal - objective value 13098.475
Clp0000I Optimal - objective value 13098.475
Coin0511I After Postsolve, objective 13098.475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13098.47548 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 57 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 108 columns (108 integer (108 of which binary)) and 1803 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.318%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.0957
Cbc0038I Pass   1: suminf.    1.65678 (26) obj. -12828.5 iterations 29
Cbc0038I Pass   2: suminf.    0.38681 (14) obj. -7914.29 iterations 17
Cbc0038I Solution found of -7898.72
Cbc0038I Rounding solution of -10196.6 is better than previous of -7898.72

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 108 columns, reduced to 36 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -10196.6 to -10922.9 (0.05 seconds)
Cbc0038I Round again with cutoff of -11138.9
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.65678 (26) obj. -12828.5 iterations 0
Cbc0038I Pass   4: suminf.    0.05950 (1) obj. -11138.9 iterations 66
Cbc0038I Solution found of -11344
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 108 columns, reduced to 36 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -11344 to -11346 (0.05 seconds)
Cbc0038I Round again with cutoff of -11693.3
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 3
Cbc0038I Pass   5: suminf.    1.65678 (26) obj. -12828.5 iterations 0
Cbc0038I Pass   6: suminf.    0.43485 (12) obj. -11693.3 iterations 18
Cbc0038I Pass   7: suminf.    0.43485 (12) obj. -11693.3 iterations 0
Cbc0038I Pass   8: suminf.    0.37931 (1) obj. -12493.1 iterations 12
Cbc0038I Pass   9: suminf.    0.11484 (1) obj. -11693.3 iterations 3
Cbc0038I Pass  10: suminf.    0.31453 (7) obj. -11693.3 iterations 22
Cbc0038I Pass  11: suminf.    0.30587 (5) obj. -11693.3 iterations 10
Cbc0038I Pass  12: suminf.    0.37931 (1) obj. -12487.1 iterations 7
Cbc0038I Pass  13: suminf.    0.11683 (1) obj. -11693.3 iterations 3
Cbc0038I Pass  14: suminf.    1.75295 (10) obj. -11693.3 iterations 25
Cbc0038I Pass  15: suminf.    0.32316 (6) obj. -11693.3 iterations 12
Cbc0038I Pass  16: suminf.    0.37931 (1) obj. -12479.1 iterations 7
Cbc0038I Pass  17: suminf.    0.11947 (1) obj. -11693.3 iterations 2
Cbc0038I Pass  18: suminf.    1.04371 (7) obj. -11743.5 iterations 14
Cbc0038I Pass  19: suminf.    0.96272 (8) obj. -11693.3 iterations 7
Cbc0038I Pass  20: suminf.    0.22754 (1) obj. -11693.3 iterations 17
Cbc0038I Pass  21: suminf.    0.37931 (1) obj. -12479.1 iterations 2
Cbc0038I Pass  22: suminf.    0.11947 (1) obj. -11693.3 iterations 1
Cbc0038I Pass  23: suminf.    2.55490 (15) obj. -11693.3 iterations 20
Cbc0038I Pass  24: suminf.    0.33873 (6) obj. -11693.3 iterations 13
Cbc0038I Pass  25: suminf.    0.33873 (6) obj. -11693.3 iterations 0
Cbc0038I Pass  26: suminf.    0.37931 (1) obj. -12482.1 iterations 6
Cbc0038I Pass  27: suminf.    0.11848 (1) obj. -11693.3 iterations 1
Cbc0038I Pass  28: suminf.    0.49064 (11) obj. -11693.3 iterations 22
Cbc0038I Pass  29: suminf.    0.47052 (6) obj. -11693.3 iterations 7
Cbc0038I Pass  30: suminf.    0.47804 (2) obj. -12487.6 iterations 6
Cbc0038I Pass  31: suminf.    0.47804 (2) obj. -12487.6 iterations 0
Cbc0038I Pass  32: suminf.    0.15767 (1) obj. -11693.3 iterations 5
Cbc0038I Pass  33: suminf.    0.15767 (1) obj. -11693.3 iterations 0
Cbc0038I Pass  34: suminf.    0.42857 (1) obj. -12556.1 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 108 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -11346 to -11927.8 (0.09 seconds)
Cbc0038I Round again with cutoff of -12274.2
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 4
Cbc0038I Pass  34: suminf.    1.65678 (26) obj. -12828.5 iterations 0
Cbc0038I Pass  35: suminf.    0.45070 (7) obj. -12274.2 iterations 35
Cbc0038I Pass  36: suminf.    0.45070 (7) obj. -12274.2 iterations 0
Cbc0038I Pass  37: suminf.    0.37931 (1) obj. -12493.1 iterations 7
Cbc0038I Pass  38: suminf.    0.30693 (1) obj. -12274.2 iterations 1
Cbc0038I Pass  39: suminf.    1.22999 (11) obj. -12274.2 iterations 15
Cbc0038I Pass  40: suminf.    0.65218 (9) obj. -12274.2 iterations 6
Cbc0038I Pass  41: suminf.    0.37931 (1) obj. -12490.1 iterations 9
Cbc0038I Pass  42: suminf.    0.30793 (1) obj. -12274.2 iterations 1
Cbc0038I Pass  43: suminf.    1.37004 (12) obj. -12274.2 iterations 12
Cbc0038I Pass  44: suminf.    0.56770 (7) obj. -12274.2 iterations 6
Cbc0038I Pass  45: suminf.    0.37931 (1) obj. -12489.1 iterations 7
Cbc0038I Pass  46: suminf.    0.30826 (1) obj. -12274.2 iterations 1
Cbc0038I Pass  47: suminf.    0.95899 (7) obj. -12274.2 iterations 12
Cbc0038I Pass  48: suminf.    0.49346 (6) obj. -12274.2 iterations 5
Cbc0038I Pass  49: suminf.    0.94774 (10) obj. -12274.2 iterations 9
Cbc0038I Pass  50: suminf.    0.59173 (8) obj. -12274.2 iterations 7
Cbc0038I Pass  51: suminf.    0.37931 (1) obj. -12488.1 iterations 8
Cbc0038I Pass  52: suminf.    0.30859 (1) obj. -12274.2 iterations 1
Cbc0038I Pass  53: suminf.    0.82615 (8) obj. -12565.5 iterations 19
Cbc0038I Pass  54: suminf.    0.73467 (8) obj. -12274.2 iterations 3
Cbc0038I Pass  55: suminf.    0.42857 (1) obj. -12556.1 iterations 8
Cbc0038I Pass  56: suminf.    0.34006 (1) obj. -12274.2 iterations 2
Cbc0038I Pass  57: suminf.    0.83630 (7) obj. -12274.2 iterations 16
Cbc0038I Pass  58: suminf.    0.59017 (3) obj. -12274.2 iterations 5
Cbc0038I Pass  59: suminf.    0.54921 (3) obj. -12415.4 iterations 1
Cbc0038I Pass  60: suminf.    0.48486 (1) obj. -12274.2 iterations 3
Cbc0038I Pass  61: suminf.    0.44444 (1) obj. -12413.5 iterations 1
Cbc0038I Pass  62: suminf.    0.47369 (6) obj. -12553.6 iterations 13
Cbc0038I Pass  63: suminf.    0.39006 (6) obj. -12274.2 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 108 columns, reduced to 41 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -11927.8 - took 0.08 seconds
Cbc0012I Integer solution of -11927.781 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 96 rows 108 columns, reduced to 36 rows 17 columns
Cbc0031I 33 added rows had average density of 4.9393939
Cbc0013I At root node, 33 cuts changed objective from -13078.917 to -12485.199 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 265 row cuts average 3.0 elements, 13 column cuts (13 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 31 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11927.781 best solution, best possible -12485.199 (0.34 seconds)
Cbc0001I Search completed - best objective -11927.781, took 724 iterations and 8 nodes (0.83 seconds)
Cbc0032I Strong branching done 142 times (859 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.84

