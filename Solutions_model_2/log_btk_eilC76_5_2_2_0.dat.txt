Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000171539 - average 1.28014e-06, 10 fixed columns
Coin0506I Presolve 111 (-23) rows, 64 (-12) columns and 342 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Coin0511I After Postsolve, objective 44.732108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Coin0511I After Postsolve, objective 44.732108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.73210844 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.86548
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.44641 iterations 52
Cbc0038I Solution found of 3.44641
Cbc0038I Relaxing continuous gives 3.44641
Cbc0038I Rounding solution of 1.76311 is better than previous of 3.44641

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 1.76311 to -10.1104 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.5726
Cbc0038I Pass   2: suminf.    2.15414 (11) obj. -13.5726 iterations 20
Cbc0038I Pass   3: suminf.    0.86195 (3) obj. -13.5726 iterations 18
Cbc0038I Pass   4: suminf.    0.79895 (2) obj. -13.5726 iterations 1
Cbc0038I Pass   5: suminf.    0.72698 (3) obj. -13.5726 iterations 2
Cbc0038I Pass   6: suminf.    1.11168 (3) obj. -13.5726 iterations 2
Cbc0038I Pass   7: suminf.    1.06495 (4) obj. -13.5726 iterations 2
Cbc0038I Pass   8: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass   9: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  10: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  11: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  12: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  13: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  14: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  15: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  16: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  17: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  18: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  19: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  20: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  21: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  22: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  23: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  24: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  25: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  26: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  27: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  28: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  29: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  30: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  31: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -10.1104 - took 0.05 seconds
Cbc0012I Integer solution of -10.11036 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0031I 27 added rows had average density of 54.851852
Cbc0013I At root node, 27 cuts changed objective from -44.732108 to -32.664159 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9821 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2291 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.11036 best solution, best possible -32.664159 (0.77 seconds)
Cbc0012I Integer solution of -10.34819 found by rounding after 7162 iterations and 11 nodes (0.90 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -10.53725 found by rounding after 8175 iterations and 56 nodes (0.97 seconds)
Cbc0012I Integer solution of -10.88868 found by rounding after 9173 iterations and 83 nodes (1.02 seconds)
Cbc0001I Search completed - best objective -10.88868, took 9253 iterations and 88 nodes (1.02 seconds)
Cbc0032I Strong branching done 732 times (14488 iterations), fathomed 10 nodes and fixed 17 variables
Cbc0035I Maximum depth 18, 349 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 120 (-32) columns and 2106 (-1197) elements
Clp1000I sum of infeasibilities 2.04361e-07 - average 1.96501e-09, 18 fixed columns
Coin0506I Presolve 90 (-14) rows, 102 (-18) columns and 1583 (-523) elements
Clp0006I 0  Obj 54.282413 Dual inf 5.3260963 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 1.8013268 - largest nonzero change 1.3638954e-05 ( 0.00086296483%) - largest zero change 2.6218914e-05
Clp0000I Optimal - objective value 62.353166
Clp0000I Optimal - objective value 62.353166
Coin0511I After Postsolve, objective 62.353166, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.353166
Clp0000I Optimal - objective value 62.353166
Clp0000I Optimal - objective value 62.353166
Clp0000I Optimal - objective value 62.353166
Coin0511I After Postsolve, objective 62.353166, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.3531658 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 122 columns (122 integer (122 of which binary)) and 2117 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.634%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 5.64716
Cbc0038I Pass   1: suminf.    1.99820 (31) obj. -50.5195 iterations 18
Cbc0038I Pass   2: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass   3: suminf.    0.06155 (2) obj. 1.01886 iterations 29
Cbc0038I Solution found of 2.95731
Cbc0038I Rounding solution of -1.99388 is better than previous of 2.95731

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7.58566
Cbc0038I Pass   4: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass   5: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass   6: suminf.    0.67726 (15) obj. -14.2438 iterations 16
Cbc0038I Pass   7: suminf.    0.34106 (1) obj. -7.58566 iterations 16
Cbc0038I Pass   8: suminf.    0.10667 (1) obj. -11.336 iterations 1
Cbc0038I Pass   9: suminf.    0.93121 (8) obj. -7.58566 iterations 25
Cbc0038I Pass  10: suminf.    0.93121 (8) obj. -7.58566 iterations 4
Cbc0038I Pass  11: suminf.    0.94728 (5) obj. -7.58566 iterations 12
Cbc0038I Pass  12: suminf.    0.67058 (5) obj. -7.58566 iterations 2
Cbc0038I Pass  13: suminf.    0.49411 (4) obj. -7.58566 iterations 3
Cbc0038I Pass  14: suminf.    1.08473 (3) obj. -7.58566 iterations 5
Cbc0038I Pass  15: suminf.    0.59266 (2) obj. -10.046 iterations 1
Cbc0038I Pass  16: suminf.    0.40522 (2) obj. -7.58566 iterations 1
Cbc0038I Pass  17: suminf.    0.40522 (2) obj. -7.58566 iterations 0
Cbc0038I Pass  18: suminf.    0.69997 (2) obj. -7.58566 iterations 2
Cbc0038I Pass  19: suminf.    1.87538 (13) obj. -7.58566 iterations 33
Cbc0038I Pass  20: suminf.    1.41902 (8) obj. -7.58566 iterations 10
Cbc0038I Pass  21: suminf.    1.05395 (8) obj. -8.54072 iterations 4
Cbc0038I Pass  22: suminf.    0.50033 (4) obj. -7.58566 iterations 14
Cbc0038I Pass  23: suminf.    0.50033 (4) obj. -7.58566 iterations 0
Cbc0038I Pass  24: suminf.    0.61924 (5) obj. -7.58566 iterations 9
Cbc0038I Pass  25: suminf.    0.61924 (5) obj. -7.58566 iterations 0
Cbc0038I Pass  26: suminf.    0.79577 (2) obj. -7.58566 iterations 7
Cbc0038I Pass  27: suminf.    0.31972 (1) obj. -7.58566 iterations 1
Cbc0038I Pass  28: suminf.    0.13333 (1) obj. -10.5678 iterations 1
Cbc0038I Pass  29: suminf.    0.61400 (7) obj. -7.58566 iterations 22
Cbc0038I Pass  30: suminf.    0.58972 (6) obj. -7.64606 iterations 3
Cbc0038I Pass  31: suminf.    1.23943 (5) obj. -7.58566 iterations 8
Cbc0038I Pass  32: suminf.    0.30826 (4) obj. -7.58566 iterations 4
Cbc0038I Pass  33: suminf.    0.90992 (7) obj. -7.58566 iterations 6
Cbc0038I Rounding solution of -6.42527 is better than previous of -1.99388

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 56 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -6.42527 to -8.87908 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.6855
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  34: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  35: suminf.    1.10189 (21) obj. -19.8192 iterations 10
Cbc0038I Pass  36: suminf.    0.59653 (4) obj. -18.6855 iterations 34
Cbc0038I Pass  37: suminf.    0.28004 (3) obj. -19.386 iterations 6
Cbc0038I Pass  38: suminf.    1.30095 (13) obj. -18.6855 iterations 41
Cbc0038I Pass  39: suminf.    1.20690 (11) obj. -18.6855 iterations 4
Cbc0038I Pass  40: suminf.    2.46264 (8) obj. -18.6855 iterations 43
Cbc0038I Pass  41: suminf.    0.78597 (8) obj. -18.6855 iterations 8
Cbc0038I Pass  42: suminf.    0.56267 (5) obj. -18.6855 iterations 20
Cbc0038I Pass  43: suminf.    0.83048 (9) obj. -18.6855 iterations 10
Cbc0038I Pass  44: suminf.    0.55965 (5) obj. -18.6855 iterations 21
Cbc0038I Pass  45: suminf.    0.83352 (9) obj. -18.6855 iterations 10
Cbc0038I Pass  46: suminf.    2.93760 (19) obj. -18.6855 iterations 32
Cbc0038I Pass  47: suminf.    1.71926 (16) obj. -18.6855 iterations 5
Cbc0038I Pass  48: suminf.    1.35931 (14) obj. -19.1315 iterations 4
Cbc0038I Pass  49: suminf.    0.64991 (4) obj. -18.6855 iterations 22
Cbc0038I Pass  50: suminf.    0.47785 (5) obj. -18.6855 iterations 3
Cbc0038I Pass  51: suminf.    0.71499 (4) obj. -18.6855 iterations 2
Cbc0038I Pass  52: suminf.    0.87144 (11) obj. -27.5253 iterations 18
Cbc0038I Pass  53: suminf.    0.87144 (11) obj. -27.5253 iterations 7
Cbc0038I Pass  54: suminf.    0.53526 (5) obj. -18.6855 iterations 12
Cbc0038I Pass  55: suminf.    0.53526 (5) obj. -18.6855 iterations 1
Cbc0038I Pass  56: suminf.    0.54871 (5) obj. -18.6855 iterations 2
Cbc0038I Pass  57: suminf.    0.54871 (5) obj. -18.6855 iterations 1
Cbc0038I Pass  58: suminf.    0.53526 (5) obj. -18.6855 iterations 5
Cbc0038I Pass  59: suminf.    1.53043 (10) obj. -18.6855 iterations 17
Cbc0038I Pass  60: suminf.    1.04624 (10) obj. -18.6855 iterations 14
Cbc0038I Pass  61: suminf.    0.72364 (5) obj. -18.6855 iterations 13
Cbc0038I Pass  62: suminf.    0.58806 (6) obj. -18.6855 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -8.87908 to -9.66877 (0.10 seconds)
Cbc0038I Round again with cutoff of -30.4531
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  63: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  64: suminf.    1.12679 (18) obj. -30.4531 iterations 20
Cbc0038I Pass  65: suminf.    1.12679 (18) obj. -30.4531 iterations 0
Cbc0038I Pass  66: suminf.    0.89160 (9) obj. -30.4531 iterations 25
Cbc0038I Pass  67: suminf.    0.66479 (8) obj. -30.4531 iterations 24
Cbc0038I Pass  68: suminf.    1.57388 (10) obj. -30.4531 iterations 8
Cbc0038I Pass  69: suminf.    0.65722 (8) obj. -30.4531 iterations 27
Cbc0038I Pass  70: suminf.    1.57515 (10) obj. -30.4531 iterations 8
Cbc0038I Pass  71: suminf.    3.21908 (28) obj. -30.4531 iterations 37
Cbc0038I Pass  72: suminf.    1.69030 (15) obj. -30.4531 iterations 13
Cbc0038I Pass  73: suminf.    1.61947 (16) obj. -30.4531 iterations 7
Cbc0038I Pass  74: suminf.    2.09237 (10) obj. -30.4531 iterations 21
Cbc0038I Pass  75: suminf.    1.33220 (10) obj. -30.4531 iterations 7
Cbc0038I Pass  76: suminf.    1.27269 (9) obj. -30.4531 iterations 2
Cbc0038I Pass  77: suminf.    1.25381 (11) obj. -30.4531 iterations 11
Cbc0038I Pass  78: suminf.    1.24176 (8) obj. -30.4531 iterations 1
Cbc0038I Pass  79: suminf.    1.19149 (8) obj. -30.4531 iterations 5
Cbc0038I Pass  80: suminf.    0.83869 (9) obj. -30.4531 iterations 2
Cbc0038I Pass  81: suminf.    1.24176 (8) obj. -30.4531 iterations 4
Cbc0038I Pass  82: suminf.    1.70916 (20) obj. -30.4531 iterations 27
Cbc0038I Pass  83: suminf.    1.70159 (17) obj. -30.4531 iterations 3
Cbc0038I Pass  84: suminf.    1.33107 (10) obj. -30.4531 iterations 21
Cbc0038I Pass  85: suminf.    0.94438 (10) obj. -31.2954 iterations 7
Cbc0038I Pass  86: suminf.    1.36555 (10) obj. -30.4531 iterations 5
Cbc0038I Pass  87: suminf.    1.33428 (14) obj. -30.4531 iterations 24
Cbc0038I Pass  88: suminf.    1.21323 (13) obj. -31.0912 iterations 6
Cbc0038I Pass  89: suminf.    0.89399 (10) obj. -30.4531 iterations 9
Cbc0038I Pass  90: suminf.    0.89399 (10) obj. -30.4531 iterations 1
Cbc0038I Pass  91: suminf.    0.95040 (10) obj. -30.4531 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.66877 - took 0.09 seconds
Cbc0012I Integer solution of -9.66877 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 106 rows 122 columns, reduced to 15 rows 16 columns
Cbc0031I 47 added rows had average density of 36.234043
Cbc0013I At root node, 47 cuts changed objective from -57.910787 to -16.444513 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7875 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1670 row cuts average 111.0 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 839 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1440 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 414 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.634 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.66877 best solution, best possible -16.444513 (2.22 seconds)
Cbc0004I Integer solution of -9.88609 found after 4728 iterations and 27 nodes (2.66 seconds)
Cbc0012I Integer solution of -10.88868 found by rounding after 4787 iterations and 31 nodes (2.67 seconds)
Cbc0001I Search completed - best objective -10.88868, took 5576 iterations and 52 nodes (2.73 seconds)
Cbc0032I Strong branching done 608 times (10316 iterations), fathomed 5 nodes and fixed 14 variables
Cbc0035I Maximum depth 17, 146 variables fixed on reduced cost
Total time (CPU seconds):       2.08   (Wallclock seconds):       2.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000171539 - average 1.28014e-06, 10 fixed columns
Coin0506I Presolve 111 (-23) rows, 64 (-12) columns and 342 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Coin0511I After Postsolve, objective 44.732108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Clp0000I Optimal - objective value 44.732108
Coin0511I After Postsolve, objective 44.732108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.73210844 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.86548
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.44641 iterations 52
Cbc0038I Solution found of 3.44641
Cbc0038I Relaxing continuous gives 3.44641
Cbc0038I Rounding solution of 1.76311 is better than previous of 3.44641

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 1.76311 to -10.1104 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.5726
Cbc0038I Pass   2: suminf.    2.15414 (11) obj. -13.5726 iterations 20
Cbc0038I Pass   3: suminf.    0.86195 (3) obj. -13.5726 iterations 18
Cbc0038I Pass   4: suminf.    0.79895 (2) obj. -13.5726 iterations 1
Cbc0038I Pass   5: suminf.    0.72698 (3) obj. -13.5726 iterations 2
Cbc0038I Pass   6: suminf.    1.11168 (3) obj. -13.5726 iterations 2
Cbc0038I Pass   7: suminf.    1.06495 (4) obj. -13.5726 iterations 2
Cbc0038I Pass   8: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass   9: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  10: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  11: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  12: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  13: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  14: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  15: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  16: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  17: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  18: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  19: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  20: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  21: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  22: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  23: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  24: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  25: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  26: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I Pass  27: suminf.    1.06495 (4) obj. -13.5726 iterations 6
Cbc0038I Pass  28: suminf.    1.14821 (7) obj. -13.5726 iterations 7
Cbc0038I Pass  29: suminf.    1.14821 (7) obj. -13.5726 iterations 0
Cbc0038I Pass  30: suminf.    1.37470 (5) obj. -13.5726 iterations 9
Cbc0038I Pass  31: suminf.    1.37470 (5) obj. -13.5726 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -10.1104 - took 0.05 seconds
Cbc0012I Integer solution of -10.11036 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 60 rows 35 columns
Cbc0031I 27 added rows had average density of 54.851852
Cbc0013I At root node, 27 cuts changed objective from -44.732108 to -32.664159 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9821 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2291 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.11036 best solution, best possible -32.664159 (0.93 seconds)
Cbc0012I Integer solution of -10.34819 found by rounding after 7162 iterations and 11 nodes (1.08 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -10.53725 found by rounding after 8175 iterations and 56 nodes (1.16 seconds)
Cbc0012I Integer solution of -10.88868 found by rounding after 9173 iterations and 83 nodes (1.21 seconds)
Cbc0001I Search completed - best objective -10.88868, took 9253 iterations and 88 nodes (1.22 seconds)
Cbc0032I Strong branching done 732 times (14488 iterations), fathomed 10 nodes and fixed 17 variables
Cbc0035I Maximum depth 18, 349 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 120 (-33) columns and 2106 (-1198) elements
Clp1000I sum of infeasibilities 2.04361e-07 - average 1.96501e-09, 18 fixed columns
Coin0506I Presolve 90 (-14) rows, 102 (-18) columns and 1583 (-523) elements
Clp0006I 0  Obj 54.282413 Dual inf 5.3260963 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 1.8013268 - largest nonzero change 1.3638954e-05 ( 0.00086296483%) - largest zero change 2.6218914e-05
Clp0000I Optimal - objective value 62.353166
Clp0000I Optimal - objective value 62.353166
Coin0511I After Postsolve, objective 62.353166, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.353166
Clp0000I Optimal - objective value 62.353166
Clp0000I Optimal - objective value 62.353166
Clp0000I Optimal - objective value 62.353166
Coin0511I After Postsolve, objective 62.353166, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.3531658 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 122 columns (122 integer (122 of which binary)) and 2117 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.634%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 5.64716
Cbc0038I Pass   1: suminf.    1.99820 (31) obj. -50.5195 iterations 18
Cbc0038I Pass   2: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass   3: suminf.    0.06155 (2) obj. 1.01886 iterations 29
Cbc0038I Solution found of 2.95731
Cbc0038I Rounding solution of -1.99388 is better than previous of 2.95731

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7.58566
Cbc0038I Pass   4: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass   5: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass   6: suminf.    0.67726 (15) obj. -14.2438 iterations 16
Cbc0038I Pass   7: suminf.    0.34106 (1) obj. -7.58566 iterations 16
Cbc0038I Pass   8: suminf.    0.10667 (1) obj. -11.336 iterations 1
Cbc0038I Pass   9: suminf.    0.93121 (8) obj. -7.58566 iterations 25
Cbc0038I Pass  10: suminf.    0.93121 (8) obj. -7.58566 iterations 4
Cbc0038I Pass  11: suminf.    0.94728 (5) obj. -7.58566 iterations 12
Cbc0038I Pass  12: suminf.    0.67058 (5) obj. -7.58566 iterations 2
Cbc0038I Pass  13: suminf.    0.49411 (4) obj. -7.58566 iterations 3
Cbc0038I Pass  14: suminf.    1.08473 (3) obj. -7.58566 iterations 5
Cbc0038I Pass  15: suminf.    0.59266 (2) obj. -10.046 iterations 1
Cbc0038I Pass  16: suminf.    0.40522 (2) obj. -7.58566 iterations 1
Cbc0038I Pass  17: suminf.    0.40522 (2) obj. -7.58566 iterations 0
Cbc0038I Pass  18: suminf.    0.69997 (2) obj. -7.58566 iterations 2
Cbc0038I Pass  19: suminf.    1.87538 (13) obj. -7.58566 iterations 33
Cbc0038I Pass  20: suminf.    1.41902 (8) obj. -7.58566 iterations 10
Cbc0038I Pass  21: suminf.    1.05395 (8) obj. -8.54072 iterations 4
Cbc0038I Pass  22: suminf.    0.50033 (4) obj. -7.58566 iterations 14
Cbc0038I Pass  23: suminf.    0.50033 (4) obj. -7.58566 iterations 0
Cbc0038I Pass  24: suminf.    0.61924 (5) obj. -7.58566 iterations 9
Cbc0038I Pass  25: suminf.    0.61924 (5) obj. -7.58566 iterations 0
Cbc0038I Pass  26: suminf.    0.79577 (2) obj. -7.58566 iterations 7
Cbc0038I Pass  27: suminf.    0.31972 (1) obj. -7.58566 iterations 1
Cbc0038I Pass  28: suminf.    0.13333 (1) obj. -10.5678 iterations 1
Cbc0038I Pass  29: suminf.    0.61400 (7) obj. -7.58566 iterations 22
Cbc0038I Pass  30: suminf.    0.58972 (6) obj. -7.64606 iterations 3
Cbc0038I Pass  31: suminf.    1.23943 (5) obj. -7.58566 iterations 8
Cbc0038I Pass  32: suminf.    0.30826 (4) obj. -7.58566 iterations 4
Cbc0038I Pass  33: suminf.    0.90992 (7) obj. -7.58566 iterations 6
Cbc0038I Rounding solution of -6.42527 is better than previous of -1.99388

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 56 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -6.42527 to -8.87908 (0.06 seconds)
Cbc0038I Round again with cutoff of -18.6855
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  34: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  35: suminf.    1.10189 (21) obj. -19.8192 iterations 10
Cbc0038I Pass  36: suminf.    0.59653 (4) obj. -18.6855 iterations 34
Cbc0038I Pass  37: suminf.    0.28004 (3) obj. -19.386 iterations 6
Cbc0038I Pass  38: suminf.    1.30095 (13) obj. -18.6855 iterations 41
Cbc0038I Pass  39: suminf.    1.20690 (11) obj. -18.6855 iterations 4
Cbc0038I Pass  40: suminf.    2.46264 (8) obj. -18.6855 iterations 43
Cbc0038I Pass  41: suminf.    0.78597 (8) obj. -18.6855 iterations 8
Cbc0038I Pass  42: suminf.    0.56267 (5) obj. -18.6855 iterations 20
Cbc0038I Pass  43: suminf.    0.83048 (9) obj. -18.6855 iterations 10
Cbc0038I Pass  44: suminf.    0.55965 (5) obj. -18.6855 iterations 21
Cbc0038I Pass  45: suminf.    0.83352 (9) obj. -18.6855 iterations 10
Cbc0038I Pass  46: suminf.    2.93760 (19) obj. -18.6855 iterations 32
Cbc0038I Pass  47: suminf.    1.71926 (16) obj. -18.6855 iterations 5
Cbc0038I Pass  48: suminf.    1.35931 (14) obj. -19.1315 iterations 4
Cbc0038I Pass  49: suminf.    0.64991 (4) obj. -18.6855 iterations 22
Cbc0038I Pass  50: suminf.    0.47785 (5) obj. -18.6855 iterations 3
Cbc0038I Pass  51: suminf.    0.71499 (4) obj. -18.6855 iterations 2
Cbc0038I Pass  52: suminf.    0.87144 (11) obj. -27.5253 iterations 18
Cbc0038I Pass  53: suminf.    0.87144 (11) obj. -27.5253 iterations 7
Cbc0038I Pass  54: suminf.    0.53526 (5) obj. -18.6855 iterations 12
Cbc0038I Pass  55: suminf.    0.53526 (5) obj. -18.6855 iterations 1
Cbc0038I Pass  56: suminf.    0.54871 (5) obj. -18.6855 iterations 2
Cbc0038I Pass  57: suminf.    0.54871 (5) obj. -18.6855 iterations 1
Cbc0038I Pass  58: suminf.    0.53526 (5) obj. -18.6855 iterations 5
Cbc0038I Pass  59: suminf.    1.53043 (10) obj. -18.6855 iterations 17
Cbc0038I Pass  60: suminf.    1.04624 (10) obj. -18.6855 iterations 14
Cbc0038I Pass  61: suminf.    0.72364 (5) obj. -18.6855 iterations 13
Cbc0038I Pass  62: suminf.    0.58806 (6) obj. -18.6855 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -8.87908 to -9.66877 (0.10 seconds)
Cbc0038I Round again with cutoff of -30.4531
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  63: suminf.    1.99820 (31) obj. -50.5195 iterations 0
Cbc0038I Pass  64: suminf.    1.12679 (18) obj. -30.4531 iterations 20
Cbc0038I Pass  65: suminf.    1.12679 (18) obj. -30.4531 iterations 0
Cbc0038I Pass  66: suminf.    0.89160 (9) obj. -30.4531 iterations 25
Cbc0038I Pass  67: suminf.    0.66479 (8) obj. -30.4531 iterations 24
Cbc0038I Pass  68: suminf.    1.57388 (10) obj. -30.4531 iterations 8
Cbc0038I Pass  69: suminf.    0.65722 (8) obj. -30.4531 iterations 27
Cbc0038I Pass  70: suminf.    1.57515 (10) obj. -30.4531 iterations 8
Cbc0038I Pass  71: suminf.    3.21908 (28) obj. -30.4531 iterations 37
Cbc0038I Pass  72: suminf.    1.69030 (15) obj. -30.4531 iterations 13
Cbc0038I Pass  73: suminf.    1.61947 (16) obj. -30.4531 iterations 7
Cbc0038I Pass  74: suminf.    2.09237 (10) obj. -30.4531 iterations 21
Cbc0038I Pass  75: suminf.    1.33220 (10) obj. -30.4531 iterations 7
Cbc0038I Pass  76: suminf.    1.27269 (9) obj. -30.4531 iterations 2
Cbc0038I Pass  77: suminf.    1.25381 (11) obj. -30.4531 iterations 11
Cbc0038I Pass  78: suminf.    1.24176 (8) obj. -30.4531 iterations 1
Cbc0038I Pass  79: suminf.    1.19149 (8) obj. -30.4531 iterations 5
Cbc0038I Pass  80: suminf.    0.83869 (9) obj. -30.4531 iterations 2
Cbc0038I Pass  81: suminf.    1.24176 (8) obj. -30.4531 iterations 4
Cbc0038I Pass  82: suminf.    1.70916 (20) obj. -30.4531 iterations 27
Cbc0038I Pass  83: suminf.    1.70159 (17) obj. -30.4531 iterations 3
Cbc0038I Pass  84: suminf.    1.33107 (10) obj. -30.4531 iterations 21
Cbc0038I Pass  85: suminf.    0.94438 (10) obj. -31.2954 iterations 7
Cbc0038I Pass  86: suminf.    1.36555 (10) obj. -30.4531 iterations 5
Cbc0038I Pass  87: suminf.    1.33428 (14) obj. -30.4531 iterations 24
Cbc0038I Pass  88: suminf.    1.21323 (13) obj. -31.0912 iterations 6
Cbc0038I Pass  89: suminf.    0.89399 (10) obj. -30.4531 iterations 9
Cbc0038I Pass  90: suminf.    0.89399 (10) obj. -30.4531 iterations 1
Cbc0038I Pass  91: suminf.    0.95040 (10) obj. -30.4531 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 122 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -9.66877 - took 0.10 seconds
Cbc0012I Integer solution of -9.66877 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 106 rows 122 columns, reduced to 15 rows 16 columns
Cbc0031I 47 added rows had average density of 36.234043
Cbc0013I At root node, 47 cuts changed objective from -57.910787 to -16.444513 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7875 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1670 row cuts average 111.0 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 839 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1440 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 414 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.737 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.66877 best solution, best possible -16.444513 (2.68 seconds)
Cbc0004I Integer solution of -9.88609 found after 4728 iterations and 27 nodes (3.17 seconds)
Cbc0012I Integer solution of -10.88868 found by rounding after 4787 iterations and 31 nodes (3.18 seconds)
Cbc0001I Search completed - best objective -10.88868, took 5576 iterations and 52 nodes (3.26 seconds)
Cbc0032I Strong branching done 608 times (10316 iterations), fathomed 5 nodes and fixed 14 variables
Cbc0035I Maximum depth 17, 146 variables fixed on reduced cost
Total time (CPU seconds):       2.41   (Wallclock seconds):       3.28

