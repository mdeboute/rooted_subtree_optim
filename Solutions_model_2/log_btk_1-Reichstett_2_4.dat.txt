Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 281 (-212) rows, 142 (-105) columns and 699 (-756) elements
Clp0000I Optimal - objective value 115141.55
Coin0511I After Postsolve, objective 115141.55, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115141.5481 - 121 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 281 rows, 142 columns (141 integer (141 of which binary)) and 699 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.692%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 8.59401
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -27634.3 iterations 80
Cbc0038I Solution found of -27634.3
Cbc0038I Relaxing continuous gives -27634.3
Cbc0038I Rounding solution of -30761.6 is better than previous of -27634.3

Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 281 rows 142 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -30761.6 to -58452.6 (0.02 seconds)
Cbc0038I Round again with cutoff of -64121.5
Cbc0038I Pass   2: suminf.    0.73003 (2) obj. -64121.5 iterations 2
Cbc0038I Pass   3: suminf.    0.21858 (1) obj. -64121.5 iterations 3
Cbc0038I Pass   4: suminf.    0.44906 (2) obj. -64121.5 iterations 3
Cbc0038I Pass   5: suminf.    0.51055 (2) obj. -64121.5 iterations 3
Cbc0038I Pass   6: suminf.    4.47355 (11) obj. -64121.5 iterations 27
Cbc0038I Pass   7: suminf.    0.73314 (3) obj. -64121.5 iterations 16
Cbc0038I Pass   8: suminf.    0.73314 (3) obj. -64121.5 iterations 1
Cbc0038I Pass   9: suminf.    1.18126 (3) obj. -64121.5 iterations 1
Cbc0038I Pass  10: suminf.    0.73314 (3) obj. -64121.5 iterations 2
Cbc0038I Pass  11: suminf.    5.01098 (13) obj. -64121.5 iterations 40
Cbc0038I Pass  12: suminf.    2.24767 (14) obj. -64121.5 iterations 23
Cbc0038I Pass  13: suminf.    2.55244 (11) obj. -64121.5 iterations 16
Cbc0038I Pass  14: suminf.    2.55244 (11) obj. -64121.5 iterations 0
Cbc0038I Pass  15: suminf.    2.24767 (14) obj. -64121.5 iterations 14
Cbc0038I Pass  16: suminf.    3.43927 (14) obj. -64121.5 iterations 36
Cbc0038I Pass  17: suminf.    2.41233 (14) obj. -64121.5 iterations 11
Cbc0038I Pass  18: suminf.    2.41233 (14) obj. -64121.5 iterations 0
Cbc0038I Pass  19: suminf.    3.19375 (12) obj. -64121.5 iterations 15
Cbc0038I Pass  20: suminf.    1.89291 (14) obj. -64121.5 iterations 6
Cbc0038I Pass  21: suminf.    1.89291 (14) obj. -64121.5 iterations 0
Cbc0038I Pass  22: suminf.    2.21082 (11) obj. -64121.5 iterations 15
Cbc0038I Pass  23: suminf.    2.21082 (11) obj. -64121.5 iterations 0
Cbc0038I Pass  24: suminf.    2.49509 (13) obj. -64121.5 iterations 12
Cbc0038I Pass  25: suminf.    2.49509 (13) obj. -64121.5 iterations 2
Cbc0038I Pass  26: suminf.    1.78422 (15) obj. -64121.5 iterations 19
Cbc0038I Pass  27: suminf.    1.74990 (14) obj. -64121.5 iterations 2
Cbc0038I Pass  28: suminf.    2.07310 (11) obj. -64121.5 iterations 15
Cbc0038I Pass  29: suminf.    2.07310 (11) obj. -64121.5 iterations 0
Cbc0038I Pass  30: suminf.    1.74990 (14) obj. -64121.5 iterations 13
Cbc0038I Pass  31: suminf.    2.07667 (8) obj. -64121.5 iterations 27
Cbc0038I Rounding solution of -59430.3 is better than previous of -58452.6

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 281 rows 142 columns, reduced to 59 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -59430.3 to -60263.3 (0.08 seconds)
Cbc0038I Round again with cutoff of -74325.5
Cbc0038I Pass  31: suminf.    1.07342 (3) obj. -74325.5 iterations 2
Cbc0038I Pass  32: suminf.    0.75617 (2) obj. -74325.5 iterations 8
Cbc0038I Pass  33: suminf.    0.61896 (2) obj. -74325.5 iterations 4
Cbc0038I Pass  34: suminf.    0.75617 (2) obj. -74325.5 iterations 2
Cbc0038I Pass  35: suminf.    1.96863 (12) obj. -74325.5 iterations 22
Cbc0038I Pass  36: suminf.    1.74244 (14) obj. -74325.5 iterations 12
Cbc0038I Pass  37: suminf.    2.87120 (12) obj. -74325.5 iterations 12
Cbc0038I Pass  38: suminf.    2.73410 (11) obj. -74325.5 iterations 3
Cbc0038I Pass  39: suminf.    2.06976 (6) obj. -74325.5 iterations 16
Cbc0038I Pass  40: suminf.    3.63707 (15) obj. -74325.5 iterations 26
Cbc0038I Pass  41: suminf.    3.22909 (14) obj. -74325.5 iterations 15
Cbc0038I Pass  42: suminf.    3.44488 (14) obj. -74325.5 iterations 15
Cbc0038I Pass  43: suminf.    3.44488 (14) obj. -74325.5 iterations 0
Cbc0038I Pass  44: suminf.    2.95026 (15) obj. -74325.5 iterations 19
Cbc0038I Pass  45: suminf.    2.86084 (14) obj. -74325.5 iterations 4
Cbc0038I Pass  46: suminf.    2.95529 (12) obj. -74325.5 iterations 14
Cbc0038I Pass  47: suminf.    2.63332 (12) obj. -74325.5 iterations 1
Cbc0038I Pass  48: suminf.    2.86084 (14) obj. -74325.5 iterations 17
Cbc0038I Pass  49: suminf.    6.82857 (17) obj. -74325.5 iterations 32
Cbc0038I Pass  50: suminf.    5.02810 (16) obj. -74325.5 iterations 19
Cbc0038I Pass  51: suminf.    5.02810 (16) obj. -74325.5 iterations 0
Cbc0038I Pass  52: suminf.    3.91482 (15) obj. -74325.5 iterations 16
Cbc0038I Pass  53: suminf.    3.91482 (15) obj. -74325.5 iterations 0
Cbc0038I Pass  54: suminf.    3.82985 (15) obj. -74325.5 iterations 19
Cbc0038I Pass  55: suminf.    3.56835 (14) obj. -74325.5 iterations 6
Cbc0038I Pass  56: suminf.    3.91482 (15) obj. -74325.5 iterations 18
Cbc0038I Pass  57: suminf.    5.32142 (18) obj. -74325.5 iterations 31
Cbc0038I Pass  58: suminf.    3.63775 (15) obj. -74325.5 iterations 18
Cbc0038I Pass  59: suminf.    3.47031 (16) obj. -74325.5 iterations 1
Cbc0038I Pass  60: suminf.    3.59891 (14) obj. -74325.5 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Full problem 281 rows 142 columns, reduced to 50 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -60263.3 - took 0.12 seconds
Cbc0012I Integer solution of -60263.291 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 281 rows 142 columns, reduced to 42 rows 24 columns
Cbc0031I 18 added rows had average density of 7.8333333
Cbc0013I At root node, 18 cuts changed objective from -115141.55 to -60513.372 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 3602 row cuts average 3.4 elements, 22 column cuts (22 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 108 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 66 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -60263.29099999998, took 434 iterations and 2 nodes (0.25 seconds)
Cbc0032I Strong branching done 32 times (150 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 302 (-190) rows, 303 (-187) columns and 12047 (-19298) elements
Clp1000I sum of infeasibilities 0.000189778 - average 6.28403e-07, 203 fixed columns
Coin0506I Presolve 87 (-215) rows, 95 (-208) columns and 265 (-11782) elements
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 1.9623196 - largest nonzero change 2.9971473e-05 ( 0.0018194492%) - largest zero change 2.1747409e-05
Clp0000I Optimal - objective value -995.63336
Clp0000I Optimal - objective value -995.63336
Coin0511I After Postsolve, objective -995.63336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5918568 - largest nonzero change 2.9567633e-05 ( 0.0027814203%) - largest zero change 2.6894305e-05
Clp0000I Optimal - objective value 144483.1
Clp0000I Optimal - objective value 144483.1
Clp0000I Optimal - objective value 144483.1
Coin0511I After Postsolve, objective 144483.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144483.1007 - 0 iterations time 0.192, Presolve 0.01, Idiot 0.18

Starting MIP optimization
Cgl0004I processed model has 302 rows, 303 columns (303 integer (303 of which binary)) and 12047 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.476%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 156 integers unsatisfied sum - 52.3451
Cbc0038I Pass   1: suminf.    6.52421 (19) obj. -124167 iterations 175
Cbc0038I Pass   2: suminf.    0.07143 (1) obj. -32705.7 iterations 18
Cbc0038I Solution found of -28155.7
Cbc0038I Rounding solution of -34586.9 is better than previous of -28155.7

Cbc0038I Before mini branch and bound, 146 integers at bound fixed and 0 continuous
Cbc0038I Full problem 302 rows 303 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -44428.6
Cbc0038I Pass   3: suminf.    6.52421 (19) obj. -124167 iterations 0
Cbc0038I Pass   4: suminf.    0.30065 (1) obj. -44428.6 iterations 20
Cbc0038I Pass   5: suminf.    0.30000 (1) obj. -66043.2 iterations 1
Cbc0038I Pass   6: suminf.   10.76754 (29) obj. -44428.6 iterations 51
Cbc0038I Pass   7: suminf.    2.80428 (8) obj. -44428.6 iterations 30
Cbc0038I Pass   8: suminf.    0.79241 (2) obj. -44428.6 iterations 7
Cbc0038I Pass   9: suminf.    0.63333 (2) obj. -53038.7 iterations 1
Cbc0038I Pass  10: suminf.    0.56943 (2) obj. -44428.6 iterations 2
Cbc0038I Pass  11: suminf.    0.56943 (2) obj. -44428.6 iterations 0
Cbc0038I Pass  12: suminf.   12.11033 (31) obj. -44428.6 iterations 44
Cbc0038I Pass  13: suminf.    5.69463 (16) obj. -45507.9 iterations 20
Cbc0038I Pass  14: suminf.    1.16437 (4) obj. -44428.6 iterations 22
Cbc0038I Pass  15: suminf.    1.16437 (4) obj. -44428.6 iterations 0
Cbc0038I Pass  16: suminf.    0.79880 (4) obj. -44428.6 iterations 2
Cbc0038I Pass  17: suminf.    0.79880 (4) obj. -44428.6 iterations 0
Cbc0038I Pass  18: suminf.    1.16437 (4) obj. -44428.6 iterations 1
Cbc0038I Pass  19: suminf.   10.56114 (28) obj. -44428.6 iterations 45
Cbc0038I Pass  20: suminf.    8.19281 (22) obj. -44428.6 iterations 9
Cbc0038I Pass  21: suminf.    1.41144 (6) obj. -44428.6 iterations 22
Cbc0038I Pass  22: suminf.    1.19580 (6) obj. -46045.8 iterations 3
Cbc0038I Pass  23: suminf.    1.61843 (6) obj. -44428.6 iterations 4
Cbc0038I Pass  24: suminf.    1.61843 (6) obj. -44428.6 iterations 0
Cbc0038I Pass  25: suminf.    1.48864 (5) obj. -44428.6 iterations 6
Cbc0038I Pass  26: suminf.    1.48864 (5) obj. -44428.6 iterations 0
Cbc0038I Pass  27: suminf.    1.33294 (5) obj. -44428.6 iterations 3
Cbc0038I Pass  28: suminf.    1.12438 (5) obj. -47431.9 iterations 1
Cbc0038I Pass  29: suminf.   11.73581 (30) obj. -44428.6 iterations 53
Cbc0038I Pass  30: suminf.    3.18738 (9) obj. -44428.6 iterations 31
Cbc0038I Pass  31: suminf.    1.98052 (6) obj. -44428.6 iterations 5
Cbc0038I Pass  32: suminf.    1.98052 (6) obj. -44428.6 iterations 0
Cbc0038I Rounding solution of -40432.2 is better than previous of -34586.9

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 302 rows 303 columns, reduced to 188 rows 209 columns - 57 fixed gives 121, 140 - still too large
Cbc0038I Full problem 302 rows 303 columns, reduced to 17 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -40432.2 to -57322.7 (0.19 seconds)
Cbc0038I Round again with cutoff of -72458.8
Cbc0038I Pass  32: suminf.    6.52421 (19) obj. -124167 iterations 0
Cbc0038I Pass  33: suminf.    1.15828 (6) obj. -95047.9 iterations 13
Cbc0038I Pass  34: suminf.    0.59599 (2) obj. -72458.8 iterations 6
Cbc0038I Pass  35: suminf.    0.59599 (2) obj. -72458.8 iterations 0
Cbc0038I Pass  36: suminf.    0.78178 (2) obj. -72458.8 iterations 1
Cbc0038I Pass  37: suminf.    0.63333 (2) obj. -80493.2 iterations 1
Cbc0038I Pass  38: suminf.   16.89945 (40) obj. -72458.8 iterations 57
Cbc0038I Pass  39: suminf.    8.53037 (24) obj. -72458.8 iterations 31
Cbc0038I Pass  40: suminf.    8.32037 (23) obj. -74033.8 iterations 1
Cbc0038I Pass  41: suminf.    0.65999 (4) obj. -72458.8 iterations 21
Cbc0038I Pass  42: suminf.    0.65690 (4) obj. -72505.4 iterations 1
Cbc0038I Pass  43: suminf.    0.66014 (4) obj. -72458.8 iterations 1
Cbc0038I Pass  44: suminf.   12.21203 (34) obj. -72458.8 iterations 60
Cbc0038I Pass  45: suminf.    8.45739 (25) obj. -72458.8 iterations 16
Cbc0038I Pass  46: suminf.    3.30346 (12) obj. -72458.8 iterations 14
Cbc0038I Pass  47: suminf.    2.82440 (11) obj. -74710.3 iterations 3
Cbc0038I Pass  48: suminf.    0.74302 (4) obj. -72458.8 iterations 9
Cbc0038I Pass  49: suminf.    0.65690 (4) obj. -73756.9 iterations 1
Cbc0038I Pass  50: suminf.    0.74705 (4) obj. -72458.8 iterations 1
Cbc0038I Pass  51: suminf.    9.45226 (26) obj. -72458.8 iterations 44
Cbc0038I Pass  52: suminf.    7.64946 (22) obj. -74836.6 iterations 8
Cbc0038I Pass  53: suminf.    0.71357 (4) obj. -72458.8 iterations 20
Cbc0038I Pass  54: suminf.    0.65690 (4) obj. -73313 iterations 1
Cbc0038I Pass  55: suminf.    0.71622 (4) obj. -72458.8 iterations 1
Cbc0038I Pass  56: suminf.   11.55858 (42) obj. -72458.8 iterations 59
Cbc0038I Pass  57: suminf.   11.39454 (41) obj. -72458.8 iterations 5
Cbc0038I Pass  58: suminf.    3.31457 (18) obj. -72458.8 iterations 25
Cbc0038I Pass  59: suminf.    3.31457 (18) obj. -72458.8 iterations 0
Cbc0038I Pass  60: suminf.    1.08794 (5) obj. -72458.8 iterations 17
Cbc0038I Pass  61: suminf.    0.76216 (5) obj. -73770 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 302 rows 303 columns, reduced to 183 rows 203 columns - 200 fixed gives 1, 3 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -57322.7 - took 0.13 seconds
Cbc0012I Integer solution of -57322.716 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 302 rows 303 columns, reduced to 167 rows 172 columns - 155 fixed gives 12, 17 - ok now
Cbc0038I Full problem 302 rows 303 columns, reduced to 7 rows 10 columns
Cbc0012I Integer solution of -60263.291 found by DiveCoefficient after 673 iterations and 0 nodes (0.63 seconds)
Cbc0031I 149 added rows had average density of 3.0201342
Cbc0013I At root node, 149 cuts changed objective from -133003.03 to -60263.291 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 5333 row cuts average 5.5 elements, 123 column cuts (123 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 161 row cuts average 95.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 28 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 166 row cuts average 51.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 89.6 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -60263.29099999998, took 673 iterations and 0 nodes (0.63 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 281 (-212) rows, 142 (-105) columns and 699 (-756) elements
Clp0000I Optimal - objective value 115141.55
Coin0511I After Postsolve, objective 115141.55, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115141.5481 - 121 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 281 rows, 142 columns (141 integer (141 of which binary)) and 699 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.692%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 8.59401
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -27634.3 iterations 80
Cbc0038I Solution found of -27634.3
Cbc0038I Relaxing continuous gives -27634.3
Cbc0038I Rounding solution of -30761.6 is better than previous of -27634.3

Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 281 rows 142 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -30761.6 to -58452.6 (0.02 seconds)
Cbc0038I Round again with cutoff of -64121.5
Cbc0038I Pass   2: suminf.    0.73003 (2) obj. -64121.5 iterations 2
Cbc0038I Pass   3: suminf.    0.21858 (1) obj. -64121.5 iterations 3
Cbc0038I Pass   4: suminf.    0.44906 (2) obj. -64121.5 iterations 3
Cbc0038I Pass   5: suminf.    0.51055 (2) obj. -64121.5 iterations 3
Cbc0038I Pass   6: suminf.    4.47355 (11) obj. -64121.5 iterations 27
Cbc0038I Pass   7: suminf.    0.73314 (3) obj. -64121.5 iterations 16
Cbc0038I Pass   8: suminf.    0.73314 (3) obj. -64121.5 iterations 1
Cbc0038I Pass   9: suminf.    1.18126 (3) obj. -64121.5 iterations 1
Cbc0038I Pass  10: suminf.    0.73314 (3) obj. -64121.5 iterations 2
Cbc0038I Pass  11: suminf.    5.01098 (13) obj. -64121.5 iterations 40
Cbc0038I Pass  12: suminf.    2.24767 (14) obj. -64121.5 iterations 23
Cbc0038I Pass  13: suminf.    2.55244 (11) obj. -64121.5 iterations 16
Cbc0038I Pass  14: suminf.    2.55244 (11) obj. -64121.5 iterations 0
Cbc0038I Pass  15: suminf.    2.24767 (14) obj. -64121.5 iterations 14
Cbc0038I Pass  16: suminf.    3.43927 (14) obj. -64121.5 iterations 36
Cbc0038I Pass  17: suminf.    2.41233 (14) obj. -64121.5 iterations 11
Cbc0038I Pass  18: suminf.    2.41233 (14) obj. -64121.5 iterations 0
Cbc0038I Pass  19: suminf.    3.19375 (12) obj. -64121.5 iterations 15
Cbc0038I Pass  20: suminf.    1.89291 (14) obj. -64121.5 iterations 6
Cbc0038I Pass  21: suminf.    1.89291 (14) obj. -64121.5 iterations 0
Cbc0038I Pass  22: suminf.    2.21082 (11) obj. -64121.5 iterations 15
Cbc0038I Pass  23: suminf.    2.21082 (11) obj. -64121.5 iterations 0
Cbc0038I Pass  24: suminf.    2.49509 (13) obj. -64121.5 iterations 12
Cbc0038I Pass  25: suminf.    2.49509 (13) obj. -64121.5 iterations 2
Cbc0038I Pass  26: suminf.    1.78422 (15) obj. -64121.5 iterations 19
Cbc0038I Pass  27: suminf.    1.74990 (14) obj. -64121.5 iterations 2
Cbc0038I Pass  28: suminf.    2.07310 (11) obj. -64121.5 iterations 15
Cbc0038I Pass  29: suminf.    2.07310 (11) obj. -64121.5 iterations 0
Cbc0038I Pass  30: suminf.    1.74990 (14) obj. -64121.5 iterations 13
Cbc0038I Pass  31: suminf.    2.07667 (8) obj. -64121.5 iterations 27
Cbc0038I Rounding solution of -59430.3 is better than previous of -58452.6

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 281 rows 142 columns, reduced to 59 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -59430.3 to -60263.3 (0.08 seconds)
Cbc0038I Round again with cutoff of -74325.5
Cbc0038I Pass  31: suminf.    1.07342 (3) obj. -74325.5 iterations 2
Cbc0038I Pass  32: suminf.    0.75617 (2) obj. -74325.5 iterations 8
Cbc0038I Pass  33: suminf.    0.61896 (2) obj. -74325.5 iterations 4
Cbc0038I Pass  34: suminf.    0.75617 (2) obj. -74325.5 iterations 2
Cbc0038I Pass  35: suminf.    1.96863 (12) obj. -74325.5 iterations 22
Cbc0038I Pass  36: suminf.    1.74244 (14) obj. -74325.5 iterations 12
Cbc0038I Pass  37: suminf.    2.87120 (12) obj. -74325.5 iterations 12
Cbc0038I Pass  38: suminf.    2.73410 (11) obj. -74325.5 iterations 3
Cbc0038I Pass  39: suminf.    2.06976 (6) obj. -74325.5 iterations 16
Cbc0038I Pass  40: suminf.    3.63707 (15) obj. -74325.5 iterations 26
Cbc0038I Pass  41: suminf.    3.22909 (14) obj. -74325.5 iterations 15
Cbc0038I Pass  42: suminf.    3.44488 (14) obj. -74325.5 iterations 15
Cbc0038I Pass  43: suminf.    3.44488 (14) obj. -74325.5 iterations 0
Cbc0038I Pass  44: suminf.    2.95026 (15) obj. -74325.5 iterations 19
Cbc0038I Pass  45: suminf.    2.86084 (14) obj. -74325.5 iterations 4
Cbc0038I Pass  46: suminf.    2.95529 (12) obj. -74325.5 iterations 14
Cbc0038I Pass  47: suminf.    2.63332 (12) obj. -74325.5 iterations 1
Cbc0038I Pass  48: suminf.    2.86084 (14) obj. -74325.5 iterations 17
Cbc0038I Pass  49: suminf.    6.82857 (17) obj. -74325.5 iterations 32
Cbc0038I Pass  50: suminf.    5.02810 (16) obj. -74325.5 iterations 19
Cbc0038I Pass  51: suminf.    5.02810 (16) obj. -74325.5 iterations 0
Cbc0038I Pass  52: suminf.    3.91482 (15) obj. -74325.5 iterations 16
Cbc0038I Pass  53: suminf.    3.91482 (15) obj. -74325.5 iterations 0
Cbc0038I Pass  54: suminf.    3.82985 (15) obj. -74325.5 iterations 19
Cbc0038I Pass  55: suminf.    3.56835 (14) obj. -74325.5 iterations 6
Cbc0038I Pass  56: suminf.    3.91482 (15) obj. -74325.5 iterations 18
Cbc0038I Pass  57: suminf.    5.32142 (18) obj. -74325.5 iterations 31
Cbc0038I Pass  58: suminf.    3.63775 (15) obj. -74325.5 iterations 18
Cbc0038I Pass  59: suminf.    3.47031 (16) obj. -74325.5 iterations 1
Cbc0038I Pass  60: suminf.    3.59891 (14) obj. -74325.5 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Full problem 281 rows 142 columns, reduced to 50 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -60263.3 - took 0.12 seconds
Cbc0012I Integer solution of -60263.291 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 281 rows 142 columns, reduced to 42 rows 24 columns
Cbc0031I 18 added rows had average density of 7.8333333
Cbc0013I At root node, 18 cuts changed objective from -115141.55 to -60513.372 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 3602 row cuts average 3.4 elements, 22 column cuts (22 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 108 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 66 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -60263.29099999998, took 434 iterations and 2 nodes (0.22 seconds)
Cbc0032I Strong branching done 32 times (150 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 302 (-191) rows, 303 (-188) columns and 12047 (-19299) elements
Clp1000I sum of infeasibilities 0.000189778 - average 6.28403e-07, 203 fixed columns
Coin0506I Presolve 87 (-215) rows, 95 (-208) columns and 265 (-11782) elements
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 1.9623196 - largest nonzero change 2.9971473e-05 ( 0.0018194492%) - largest zero change 2.1747409e-05
Clp0000I Optimal - objective value -995.63336
Clp0000I Optimal - objective value -995.63336
Coin0511I After Postsolve, objective -995.63336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5918568 - largest nonzero change 2.9567633e-05 ( 0.0027814203%) - largest zero change 2.6894305e-05
Clp0000I Optimal - objective value 144483.1
Clp0000I Optimal - objective value 144483.1
Clp0000I Optimal - objective value 144483.1
Coin0511I After Postsolve, objective 144483.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144483.1007 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.16

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 302 rows, 303 columns (303 integer (303 of which binary)) and 12047 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.476%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 156 integers unsatisfied sum - 52.3451
Cbc0038I Pass   1: suminf.    6.52421 (19) obj. -124167 iterations 175
Cbc0038I Pass   2: suminf.    0.07143 (1) obj. -32705.7 iterations 18
Cbc0038I Solution found of -28155.7
Cbc0038I Rounding solution of -34586.9 is better than previous of -28155.7

Cbc0038I Before mini branch and bound, 146 integers at bound fixed and 0 continuous
Cbc0038I Full problem 302 rows 303 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -44428.6
Cbc0038I Pass   3: suminf.    6.52421 (19) obj. -124167 iterations 0
Cbc0038I Pass   4: suminf.    0.30065 (1) obj. -44428.6 iterations 20
Cbc0038I Pass   5: suminf.    0.30000 (1) obj. -66043.2 iterations 1
Cbc0038I Pass   6: suminf.   10.76754 (29) obj. -44428.6 iterations 51
Cbc0038I Pass   7: suminf.    2.80428 (8) obj. -44428.6 iterations 30
Cbc0038I Pass   8: suminf.    0.79241 (2) obj. -44428.6 iterations 7
Cbc0038I Pass   9: suminf.    0.63333 (2) obj. -53038.7 iterations 1
Cbc0038I Pass  10: suminf.    0.56943 (2) obj. -44428.6 iterations 2
Cbc0038I Pass  11: suminf.    0.56943 (2) obj. -44428.6 iterations 0
Cbc0038I Pass  12: suminf.   12.11033 (31) obj. -44428.6 iterations 44
Cbc0038I Pass  13: suminf.    5.69463 (16) obj. -45507.9 iterations 20
Cbc0038I Pass  14: suminf.    1.16437 (4) obj. -44428.6 iterations 22
Cbc0038I Pass  15: suminf.    1.16437 (4) obj. -44428.6 iterations 0
Cbc0038I Pass  16: suminf.    0.79880 (4) obj. -44428.6 iterations 2
Cbc0038I Pass  17: suminf.    0.79880 (4) obj. -44428.6 iterations 0
Cbc0038I Pass  18: suminf.    1.16437 (4) obj. -44428.6 iterations 1
Cbc0038I Pass  19: suminf.   10.56114 (28) obj. -44428.6 iterations 45
Cbc0038I Pass  20: suminf.    8.19281 (22) obj. -44428.6 iterations 9
Cbc0038I Pass  21: suminf.    1.41144 (6) obj. -44428.6 iterations 22
Cbc0038I Pass  22: suminf.    1.19580 (6) obj. -46045.8 iterations 3
Cbc0038I Pass  23: suminf.    1.61843 (6) obj. -44428.6 iterations 4
Cbc0038I Pass  24: suminf.    1.61843 (6) obj. -44428.6 iterations 0
Cbc0038I Pass  25: suminf.    1.48864 (5) obj. -44428.6 iterations 6
Cbc0038I Pass  26: suminf.    1.48864 (5) obj. -44428.6 iterations 0
Cbc0038I Pass  27: suminf.    1.33294 (5) obj. -44428.6 iterations 3
Cbc0038I Pass  28: suminf.    1.12438 (5) obj. -47431.9 iterations 1
Cbc0038I Pass  29: suminf.   11.73581 (30) obj. -44428.6 iterations 53
Cbc0038I Pass  30: suminf.    3.18738 (9) obj. -44428.6 iterations 31
Cbc0038I Pass  31: suminf.    1.98052 (6) obj. -44428.6 iterations 5
Cbc0038I Pass  32: suminf.    1.98052 (6) obj. -44428.6 iterations 0
Cbc0038I Rounding solution of -40432.2 is better than previous of -34586.9

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 302 rows 303 columns, reduced to 188 rows 209 columns - 57 fixed gives 121, 140 - still too large
Cbc0038I Full problem 302 rows 303 columns, reduced to 17 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -40432.2 to -57322.7 (0.18 seconds)
Cbc0038I Round again with cutoff of -72458.8
Cbc0038I Pass  32: suminf.    6.52421 (19) obj. -124167 iterations 0
Cbc0038I Pass  33: suminf.    1.15828 (6) obj. -95047.9 iterations 13
Cbc0038I Pass  34: suminf.    0.59599 (2) obj. -72458.8 iterations 6
Cbc0038I Pass  35: suminf.    0.59599 (2) obj. -72458.8 iterations 0
Cbc0038I Pass  36: suminf.    0.78178 (2) obj. -72458.8 iterations 1
Cbc0038I Pass  37: suminf.    0.63333 (2) obj. -80493.2 iterations 1
Cbc0038I Pass  38: suminf.   16.89945 (40) obj. -72458.8 iterations 57
Cbc0038I Pass  39: suminf.    8.53037 (24) obj. -72458.8 iterations 31
Cbc0038I Pass  40: suminf.    8.32037 (23) obj. -74033.8 iterations 1
Cbc0038I Pass  41: suminf.    0.65999 (4) obj. -72458.8 iterations 21
Cbc0038I Pass  42: suminf.    0.65690 (4) obj. -72505.4 iterations 1
Cbc0038I Pass  43: suminf.    0.66014 (4) obj. -72458.8 iterations 1
Cbc0038I Pass  44: suminf.   12.21203 (34) obj. -72458.8 iterations 60
Cbc0038I Pass  45: suminf.    8.45739 (25) obj. -72458.8 iterations 16
Cbc0038I Pass  46: suminf.    3.30346 (12) obj. -72458.8 iterations 14
Cbc0038I Pass  47: suminf.    2.82440 (11) obj. -74710.3 iterations 3
Cbc0038I Pass  48: suminf.    0.74302 (4) obj. -72458.8 iterations 9
Cbc0038I Pass  49: suminf.    0.65690 (4) obj. -73756.9 iterations 1
Cbc0038I Pass  50: suminf.    0.74705 (4) obj. -72458.8 iterations 1
Cbc0038I Pass  51: suminf.    9.45226 (26) obj. -72458.8 iterations 44
Cbc0038I Pass  52: suminf.    7.64946 (22) obj. -74836.6 iterations 8
Cbc0038I Pass  53: suminf.    0.71357 (4) obj. -72458.8 iterations 20
Cbc0038I Pass  54: suminf.    0.65690 (4) obj. -73313 iterations 1
Cbc0038I Pass  55: suminf.    0.71622 (4) obj. -72458.8 iterations 1
Cbc0038I Pass  56: suminf.   11.55858 (42) obj. -72458.8 iterations 59
Cbc0038I Pass  57: suminf.   11.39454 (41) obj. -72458.8 iterations 5
Cbc0038I Pass  58: suminf.    3.31457 (18) obj. -72458.8 iterations 25
Cbc0038I Pass  59: suminf.    3.31457 (18) obj. -72458.8 iterations 0
Cbc0038I Pass  60: suminf.    1.08794 (5) obj. -72458.8 iterations 17
Cbc0038I Pass  61: suminf.    0.76216 (5) obj. -73770 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 302 rows 303 columns, reduced to 183 rows 203 columns - 200 fixed gives 1, 3 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -57322.7 - took 0.12 seconds
Cbc0012I Integer solution of -57322.716 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 302 rows 303 columns, reduced to 167 rows 172 columns - 155 fixed gives 12, 17 - ok now
Cbc0038I Full problem 302 rows 303 columns, reduced to 7 rows 10 columns
Cbc0012I Integer solution of -60263.291 found by DiveCoefficient after 673 iterations and 0 nodes (0.60 seconds)
Cbc0031I 149 added rows had average density of 3.0201342
Cbc0013I At root node, 149 cuts changed objective from -133003.03 to -60263.291 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 5333 row cuts average 5.5 elements, 123 column cuts (123 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 161 row cuts average 95.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 28 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 166 row cuts average 51.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 89.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -60263.29099999998, took 673 iterations and 0 nodes (0.60 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.62

