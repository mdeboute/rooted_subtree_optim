Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 56 (-22) columns and 310 (-143) elements
Clp1000I sum of infeasibilities 4.94952e-05 - average 4.85247e-07, 19 fixed columns
Coin0506I Presolve 51 (-51) rows, 32 (-24) columns and 160 (-150) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 0.58695713 - largest nonzero change 2.6445655e-05 ( 0.0020584323%) - largest zero change 2.971114e-05
Clp0000I Optimal - objective value 150.53935
Clp0000I Optimal - objective value 150.53935
Coin0511I After Postsolve, objective 150.53935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 150.53935
Clp0000I Optimal - objective value 150.53935
Clp0000I Optimal - objective value 150.53935
Coin0511I After Postsolve, objective 150.53935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.5393539 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 102 rows, 56 columns (55 integer (55 of which binary)) and 310 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.80358
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -131.578 iterations 12
Cbc0038I Solution found of -131.578
Cbc0038I Relaxing continuous gives -131.578
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 56 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -133.474
Cbc0038I Pass   2: suminf.    0.05144 (2) obj. -133.474 iterations 2
Cbc0038I Pass   3: suminf.    0.30317 (2) obj. -133.474 iterations 3
Cbc0038I Pass   4: suminf.    0.37698 (2) obj. -133.474 iterations 5
Cbc0038I Pass   5: suminf.    0.37698 (2) obj. -133.474 iterations 0
Cbc0038I Pass   6: suminf.    0.28404 (3) obj. -133.474 iterations 4
Cbc0038I Pass   7: suminf.    0.46002 (3) obj. -133.474 iterations 7
Cbc0038I Pass   8: suminf.    0.26618 (2) obj. -133.474 iterations 1
Cbc0038I Pass   9: suminf.    3.28075 (14) obj. -133.474 iterations 12
Cbc0038I Pass  10: suminf.    0.28793 (3) obj. -133.474 iterations 12
Cbc0038I Pass  11: suminf.    0.28793 (3) obj. -133.474 iterations 0
Cbc0038I Pass  12: suminf.    0.59746 (4) obj. -133.474 iterations 7
Cbc0038I Pass  13: suminf.    0.28404 (3) obj. -133.474 iterations 3
Cbc0038I Pass  14: suminf.    0.46002 (3) obj. -133.474 iterations 7
Cbc0038I Pass  15: suminf.    0.26618 (2) obj. -133.474 iterations 1
Cbc0038I Pass  16: suminf.    2.28934 (7) obj. -133.474 iterations 12
Cbc0038I Pass  17: suminf.    1.18909 (7) obj. -133.474 iterations 3
Cbc0038I Pass  18: suminf.    0.79080 (5) obj. -133.474 iterations 13
Cbc0038I Pass  19: suminf.    1.58464 (5) obj. -133.474 iterations 11
Cbc0038I Pass  20: suminf.    1.58464 (5) obj. -133.474 iterations 0
Cbc0038I Pass  21: suminf.    1.02664 (6) obj. -133.474 iterations 4
Cbc0038I Pass  22: suminf.    0.69232 (5) obj. -133.474 iterations 1
Cbc0038I Pass  23: suminf.    0.63594 (10) obj. -133.474 iterations 10
Cbc0038I Pass  24: suminf.    0.54165 (10) obj. -133.474 iterations 1
Cbc0038I Pass  25: suminf.    1.89156 (9) obj. -133.474 iterations 15
Cbc0038I Pass  26: suminf.    1.77355 (9) obj. -133.474 iterations 1
Cbc0038I Pass  27: suminf.    0.63594 (10) obj. -133.474 iterations 15
Cbc0038I Pass  28: suminf.    1.98127 (9) obj. -133.474 iterations 14
Cbc0038I Pass  29: suminf.    0.57924 (5) obj. -133.474 iterations 8
Cbc0038I Pass  30: suminf.    1.33403 (5) obj. -133.474 iterations 6
Cbc0038I Pass  31: suminf.    0.20167 (2) obj. -133.474 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 56 columns, reduced to 41 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -131.578 to -134.632 (0.03 seconds)
Cbc0038I Round again with cutoff of -137.814
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.26773 (2) obj. -137.814 iterations 0
Cbc0038I Pass  32: suminf.    0.30383 (3) obj. -137.814 iterations 3
Cbc0038I Pass  33: suminf.    0.45170 (2) obj. -137.814 iterations 3
Cbc0038I Pass  34: suminf.    4.22035 (15) obj. -137.814 iterations 17
Cbc0038I Pass  35: suminf.    1.67592 (15) obj. -137.814 iterations 5
Cbc0038I Pass  36: suminf.    1.67592 (15) obj. -137.814 iterations 0
Cbc0038I Pass  37: suminf.    1.52070 (8) obj. -137.814 iterations 23
Cbc0038I Pass  38: suminf.    0.80700 (6) obj. -137.814 iterations 6
Cbc0038I Pass  39: suminf.    0.72603 (3) obj. -137.814 iterations 15
Cbc0038I Pass  40: suminf.    0.62188 (3) obj. -137.814 iterations 3
Cbc0038I Pass  41: suminf.    0.65011 (3) obj. -137.814 iterations 7
Cbc0038I Pass  42: suminf.    0.58960 (3) obj. -137.814 iterations 3
Cbc0038I Pass  43: suminf.    0.72603 (3) obj. -137.814 iterations 5
Cbc0038I Pass  44: suminf.    2.19556 (10) obj. -137.814 iterations 7
Cbc0038I Pass  45: suminf.    0.73308 (5) obj. -137.814 iterations 6
Cbc0038I Pass  46: suminf.    0.60618 (3) obj. -137.814 iterations 5
Cbc0038I Pass  47: suminf.    0.72603 (3) obj. -137.814 iterations 6
Cbc0038I Pass  48: suminf.    0.62188 (3) obj. -137.814 iterations 3
Cbc0038I Pass  49: suminf.    0.65011 (3) obj. -137.814 iterations 7
Cbc0038I Pass  50: suminf.    0.58960 (3) obj. -137.814 iterations 3
Cbc0038I Pass  51: suminf.    0.72603 (3) obj. -137.814 iterations 5
Cbc0038I Pass  52: suminf.    1.74249 (7) obj. -137.814 iterations 8
Cbc0038I Pass  53: suminf.    1.39028 (7) obj. -137.814 iterations 7
Cbc0038I Pass  54: suminf.    1.22967 (10) obj. -137.814 iterations 12
Cbc0038I Pass  55: suminf.    1.21252 (10) obj. -137.814 iterations 1
Cbc0038I Pass  56: suminf.    1.86837 (9) obj. -137.814 iterations 13
Cbc0038I Pass  57: suminf.    1.37367 (8) obj. -137.814 iterations 5
Cbc0038I Pass  58: suminf.    2.40985 (12) obj. -137.814 iterations 10
Cbc0038I Pass  59: suminf.    1.43284 (8) obj. -137.814 iterations 4
Cbc0038I Pass  60: suminf.    1.31694 (8) obj. -137.814 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 56 columns, reduced to 42 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -134.632 - took 0.03 seconds
Cbc0012I Integer solution of -134.6324 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 102 rows 56 columns, reduced to 16 rows 14 columns
Cbc0031I 8 added rows had average density of 23.875
Cbc0013I At root node, 8 cuts changed objective from -150.53935 to -140.48711 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 92 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -134.6324, took 343 iterations and 12 nodes (0.09 seconds)
Cbc0032I Strong branching done 94 times (579 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 96 (-56) columns and 1366 (-1937) elements
Clp1000I sum of infeasibilities 2.71726e-07 - average 3.08779e-09, 44 fixed columns
Coin0506I Presolve 44 (-44) rows, 52 (-44) columns and 188 (-1178) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.46100334 - largest nonzero change 1.3352764e-05 ( 0.0010393299%) - largest zero change 2.8096151e-05
Clp0000I Optimal - objective value 136.40804
Clp0000I Optimal - objective value 136.40804
Coin0511I After Postsolve, objective 136.40804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 6.1232959 - largest nonzero change 1.5689179e-05 ( 0.00089285843%) - largest zero change 2.7248753e-05
Clp0000I Optimal - objective value 187.1095
Clp0000I Optimal - objective value 187.1095
Clp0000I Optimal - objective value 187.1095
Coin0511I After Postsolve, objective 187.1095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 187.1094989 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 99 columns (99 integer (99 of which binary)) and 1374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.457%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 9.96024
Cbc0038I Pass   1: suminf.    1.65655 (27) obj. -105.204 iterations 17
Cbc0038I Pass   2: suminf.    1.65655 (27) obj. -105.204 iterations 0
Cbc0038I Solution found of -71.6021
Cbc0038I Rounding solution of -78.6274 is better than previous of -71.6021

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 99 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -78.6274 to -131.578 (0.03 seconds)
Cbc0038I Round again with cutoff of -136.351
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.30882 (36) obj. -136.351 iterations 1
Cbc0038I Pass   4: suminf.    3.09152 (33) obj. -136.351 iterations 9
Cbc0038I Pass   5: suminf.    1.09307 (13) obj. -136.351 iterations 40
Cbc0038I Pass   6: suminf.    1.44171 (13) obj. -136.351 iterations 24
Cbc0038I Pass   7: suminf.    1.44171 (13) obj. -136.351 iterations 0
Cbc0038I Pass   8: suminf.    1.94101 (7) obj. -136.351 iterations 16
Cbc0038I Pass   9: suminf.    1.61405 (6) obj. -136.351 iterations 6
Cbc0038I Pass  10: suminf.    1.33109 (7) obj. -136.351 iterations 6
Cbc0038I Pass  11: suminf.    0.41748 (1) obj. -136.351 iterations 14
Cbc0038I Pass  12: suminf.    0.30317 (2) obj. -137.774 iterations 5
Cbc0038I Pass  13: suminf.    0.41748 (1) obj. -136.351 iterations 3
Cbc0038I Pass  14: suminf.    1.73292 (10) obj. -136.351 iterations 19
Cbc0038I Pass  15: suminf.    1.33689 (7) obj. -136.351 iterations 5
Cbc0038I Pass  16: suminf.    0.80090 (3) obj. -136.809 iterations 12
Cbc0038I Pass  17: suminf.    0.89247 (3) obj. -136.351 iterations 5
Cbc0038I Pass  18: suminf.    4.25763 (18) obj. -136.351 iterations 26
Cbc0038I Pass  19: suminf.    2.94496 (16) obj. -136.351 iterations 8
Cbc0038I Pass  20: suminf.    1.36120 (7) obj. -136.351 iterations 15
Cbc0038I Pass  21: suminf.    0.90631 (6) obj. -138.171 iterations 8
Cbc0038I Pass  22: suminf.    1.41122 (4) obj. -136.351 iterations 10
Cbc0038I Pass  23: suminf.    0.68153 (4) obj. -136.351 iterations 3
Cbc0038I Pass  24: suminf.    1.10032 (4) obj. -136.351 iterations 9
Cbc0038I Pass  25: suminf.    0.85145 (4) obj. -136.351 iterations 2
Cbc0038I Pass  26: suminf.    1.11429 (4) obj. -136.351 iterations 6
Cbc0038I Pass  27: suminf.    1.56459 (6) obj. -136.351 iterations 12
Cbc0038I Pass  28: suminf.    1.56459 (6) obj. -136.351 iterations 2
Cbc0038I Pass  29: suminf.    1.11429 (4) obj. -136.351 iterations 5
Cbc0038I Pass  30: suminf.    0.85145 (4) obj. -136.351 iterations 6
Cbc0038I Pass  31: suminf.    1.11429 (4) obj. -136.351 iterations 6
Cbc0038I Pass  32: suminf.    1.75952 (9) obj. -136.351 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 99 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -131.578 to -134.632 (0.06 seconds)
Cbc0038I Round again with cutoff of -144.943
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.26250 (36) obj. -144.943 iterations 0
Cbc0038I Pass  33: suminf.    4.26250 (36) obj. -144.943 iterations 0
Cbc0038I Pass  34: suminf.    3.17152 (23) obj. -144.943 iterations 19
Cbc0038I Pass  35: suminf.    2.46899 (22) obj. -146.225 iterations 8
Cbc0038I Pass  36: suminf.    1.55403 (15) obj. -144.943 iterations 22
Cbc0038I Pass  37: suminf.    1.55403 (15) obj. -144.943 iterations 1
Cbc0038I Pass  38: suminf.    3.04619 (11) obj. -144.943 iterations 20
Cbc0038I Pass  39: suminf.    3.04619 (11) obj. -144.943 iterations 0
Cbc0038I Pass  40: suminf.    1.94809 (7) obj. -144.943 iterations 18
Cbc0038I Pass  41: suminf.    1.02468 (4) obj. -144.943 iterations 7
Cbc0038I Pass  42: suminf.    0.61481 (4) obj. -146.216 iterations 8
Cbc0038I Pass  43: suminf.    0.86938 (4) obj. -144.943 iterations 6
Cbc0038I Pass  44: suminf.    2.34746 (11) obj. -144.943 iterations 18
Cbc0038I Pass  45: suminf.    1.90950 (11) obj. -144.943 iterations 6
Cbc0038I Pass  46: suminf.    1.02468 (4) obj. -144.943 iterations 17
Cbc0038I Pass  47: suminf.    1.90667 (9) obj. -144.943 iterations 10
Cbc0038I Pass  48: suminf.    1.32762 (9) obj. -144.943 iterations 4
Cbc0038I Pass  49: suminf.    1.08736 (4) obj. -144.943 iterations 12
Cbc0038I Pass  50: suminf.    1.08736 (4) obj. -144.943 iterations 2
Cbc0038I Pass  51: suminf.    0.98612 (4) obj. -144.943 iterations 4
Cbc0038I Pass  52: suminf.    0.98612 (4) obj. -144.943 iterations 3
Cbc0038I Pass  53: suminf.    1.08736 (4) obj. -144.943 iterations 4
Cbc0038I Pass  54: suminf.    2.94847 (14) obj. -144.943 iterations 14
Cbc0038I Pass  55: suminf.    2.54227 (9) obj. -144.943 iterations 5
Cbc0038I Pass  56: suminf.    1.96762 (8) obj. -144.943 iterations 1
Cbc0038I Pass  57: suminf.    1.25901 (5) obj. -144.943 iterations 13
Cbc0038I Pass  58: suminf.    0.99021 (6) obj. -144.943 iterations 5
Cbc0038I Pass  59: suminf.    2.28851 (10) obj. -144.943 iterations 9
Cbc0038I Pass  60: suminf.    2.25106 (11) obj. -144.943 iterations 1
Cbc0038I Pass  61: suminf.    1.90973 (7) obj. -144.943 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 99 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -134.632 - took 0.05 seconds
Cbc0012I Integer solution of -134.6324 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 91 rows 99 columns, reduced to 9 rows 9 columns
Cbc0031I 29 added rows had average density of 8.862069
Cbc0013I At root node, 29 cuts changed objective from -179.31163 to -136.71726 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 348 row cuts average 2.3 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 31 row cuts average 35.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 70 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0001I Search completed - best objective -134.6324, took 307 iterations and 2 nodes (0.58 seconds)
Cbc0032I Strong branching done 26 times (170 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 56 (-22) columns and 310 (-143) elements
Clp1000I sum of infeasibilities 4.94952e-05 - average 4.85247e-07, 19 fixed columns
Coin0506I Presolve 51 (-51) rows, 32 (-24) columns and 160 (-150) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 0.58695713 - largest nonzero change 2.6445655e-05 ( 0.0020584323%) - largest zero change 2.971114e-05
Clp0000I Optimal - objective value 150.53935
Clp0000I Optimal - objective value 150.53935
Coin0511I After Postsolve, objective 150.53935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 150.53935
Clp0000I Optimal - objective value 150.53935
Clp0000I Optimal - objective value 150.53935
Coin0511I After Postsolve, objective 150.53935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.5393539 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 102 rows, 56 columns (55 integer (55 of which binary)) and 310 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.580%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.80358
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -131.578 iterations 12
Cbc0038I Solution found of -131.578
Cbc0038I Relaxing continuous gives -131.578
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 56 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -133.474
Cbc0038I Pass   2: suminf.    0.05144 (2) obj. -133.474 iterations 2
Cbc0038I Pass   3: suminf.    0.30317 (2) obj. -133.474 iterations 3
Cbc0038I Pass   4: suminf.    0.37698 (2) obj. -133.474 iterations 5
Cbc0038I Pass   5: suminf.    0.37698 (2) obj. -133.474 iterations 0
Cbc0038I Pass   6: suminf.    0.28404 (3) obj. -133.474 iterations 4
Cbc0038I Pass   7: suminf.    0.46002 (3) obj. -133.474 iterations 7
Cbc0038I Pass   8: suminf.    0.26618 (2) obj. -133.474 iterations 1
Cbc0038I Pass   9: suminf.    3.28075 (14) obj. -133.474 iterations 12
Cbc0038I Pass  10: suminf.    0.28793 (3) obj. -133.474 iterations 12
Cbc0038I Pass  11: suminf.    0.28793 (3) obj. -133.474 iterations 0
Cbc0038I Pass  12: suminf.    0.59746 (4) obj. -133.474 iterations 7
Cbc0038I Pass  13: suminf.    0.28404 (3) obj. -133.474 iterations 3
Cbc0038I Pass  14: suminf.    0.46002 (3) obj. -133.474 iterations 7
Cbc0038I Pass  15: suminf.    0.26618 (2) obj. -133.474 iterations 1
Cbc0038I Pass  16: suminf.    2.28934 (7) obj. -133.474 iterations 12
Cbc0038I Pass  17: suminf.    1.18909 (7) obj. -133.474 iterations 3
Cbc0038I Pass  18: suminf.    0.79080 (5) obj. -133.474 iterations 13
Cbc0038I Pass  19: suminf.    1.58464 (5) obj. -133.474 iterations 11
Cbc0038I Pass  20: suminf.    1.58464 (5) obj. -133.474 iterations 0
Cbc0038I Pass  21: suminf.    1.02664 (6) obj. -133.474 iterations 4
Cbc0038I Pass  22: suminf.    0.69232 (5) obj. -133.474 iterations 1
Cbc0038I Pass  23: suminf.    0.63594 (10) obj. -133.474 iterations 10
Cbc0038I Pass  24: suminf.    0.54165 (10) obj. -133.474 iterations 1
Cbc0038I Pass  25: suminf.    1.89156 (9) obj. -133.474 iterations 15
Cbc0038I Pass  26: suminf.    1.77355 (9) obj. -133.474 iterations 1
Cbc0038I Pass  27: suminf.    0.63594 (10) obj. -133.474 iterations 15
Cbc0038I Pass  28: suminf.    1.98127 (9) obj. -133.474 iterations 14
Cbc0038I Pass  29: suminf.    0.57924 (5) obj. -133.474 iterations 8
Cbc0038I Pass  30: suminf.    1.33403 (5) obj. -133.474 iterations 6
Cbc0038I Pass  31: suminf.    0.20167 (2) obj. -133.474 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 56 columns, reduced to 41 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -131.578 to -134.632 (0.03 seconds)
Cbc0038I Round again with cutoff of -137.814
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.26773 (2) obj. -137.814 iterations 0
Cbc0038I Pass  32: suminf.    0.30383 (3) obj. -137.814 iterations 3
Cbc0038I Pass  33: suminf.    0.45170 (2) obj. -137.814 iterations 3
Cbc0038I Pass  34: suminf.    4.22035 (15) obj. -137.814 iterations 17
Cbc0038I Pass  35: suminf.    1.67592 (15) obj. -137.814 iterations 5
Cbc0038I Pass  36: suminf.    1.67592 (15) obj. -137.814 iterations 0
Cbc0038I Pass  37: suminf.    1.52070 (8) obj. -137.814 iterations 23
Cbc0038I Pass  38: suminf.    0.80700 (6) obj. -137.814 iterations 6
Cbc0038I Pass  39: suminf.    0.72603 (3) obj. -137.814 iterations 15
Cbc0038I Pass  40: suminf.    0.62188 (3) obj. -137.814 iterations 3
Cbc0038I Pass  41: suminf.    0.65011 (3) obj. -137.814 iterations 7
Cbc0038I Pass  42: suminf.    0.58960 (3) obj. -137.814 iterations 3
Cbc0038I Pass  43: suminf.    0.72603 (3) obj. -137.814 iterations 5
Cbc0038I Pass  44: suminf.    2.19556 (10) obj. -137.814 iterations 7
Cbc0038I Pass  45: suminf.    0.73308 (5) obj. -137.814 iterations 6
Cbc0038I Pass  46: suminf.    0.60618 (3) obj. -137.814 iterations 5
Cbc0038I Pass  47: suminf.    0.72603 (3) obj. -137.814 iterations 6
Cbc0038I Pass  48: suminf.    0.62188 (3) obj. -137.814 iterations 3
Cbc0038I Pass  49: suminf.    0.65011 (3) obj. -137.814 iterations 7
Cbc0038I Pass  50: suminf.    0.58960 (3) obj. -137.814 iterations 3
Cbc0038I Pass  51: suminf.    0.72603 (3) obj. -137.814 iterations 5
Cbc0038I Pass  52: suminf.    1.74249 (7) obj. -137.814 iterations 8
Cbc0038I Pass  53: suminf.    1.39028 (7) obj. -137.814 iterations 7
Cbc0038I Pass  54: suminf.    1.22967 (10) obj. -137.814 iterations 12
Cbc0038I Pass  55: suminf.    1.21252 (10) obj. -137.814 iterations 1
Cbc0038I Pass  56: suminf.    1.86837 (9) obj. -137.814 iterations 13
Cbc0038I Pass  57: suminf.    1.37367 (8) obj. -137.814 iterations 5
Cbc0038I Pass  58: suminf.    2.40985 (12) obj. -137.814 iterations 10
Cbc0038I Pass  59: suminf.    1.43284 (8) obj. -137.814 iterations 4
Cbc0038I Pass  60: suminf.    1.31694 (8) obj. -137.814 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 56 columns, reduced to 42 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -134.632 - took 0.03 seconds
Cbc0012I Integer solution of -134.6324 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 102 rows 56 columns, reduced to 16 rows 14 columns
Cbc0031I 8 added rows had average density of 23.875
Cbc0013I At root node, 8 cuts changed objective from -150.53935 to -140.48711 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 92 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -134.6324, took 343 iterations and 12 nodes (0.09 seconds)
Cbc0032I Strong branching done 94 times (579 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 96 (-57) columns and 1366 (-1938) elements
Clp1000I sum of infeasibilities 2.71726e-07 - average 3.08779e-09, 44 fixed columns
Coin0506I Presolve 44 (-44) rows, 52 (-44) columns and 188 (-1178) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.46100334 - largest nonzero change 1.3352764e-05 ( 0.0010393299%) - largest zero change 2.8096151e-05
Clp0000I Optimal - objective value 136.40804
Clp0000I Optimal - objective value 136.40804
Coin0511I After Postsolve, objective 136.40804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 6.1232959 - largest nonzero change 1.5689179e-05 ( 0.00089285843%) - largest zero change 2.7248753e-05
Clp0000I Optimal - objective value 187.1095
Clp0000I Optimal - objective value 187.1095
Clp0000I Optimal - objective value 187.1095
Coin0511I After Postsolve, objective 187.1095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 187.1094989 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 99 columns (99 integer (99 of which binary)) and 1374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.457%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 9.96024
Cbc0038I Pass   1: suminf.    1.65655 (27) obj. -105.204 iterations 17
Cbc0038I Pass   2: suminf.    1.65655 (27) obj. -105.204 iterations 0
Cbc0038I Solution found of -71.6021
Cbc0038I Rounding solution of -78.6274 is better than previous of -71.6021

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 99 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -78.6274 to -131.578 (0.03 seconds)
Cbc0038I Round again with cutoff of -136.351
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.30882 (36) obj. -136.351 iterations 1
Cbc0038I Pass   4: suminf.    3.09152 (33) obj. -136.351 iterations 9
Cbc0038I Pass   5: suminf.    1.09307 (13) obj. -136.351 iterations 40
Cbc0038I Pass   6: suminf.    1.44171 (13) obj. -136.351 iterations 24
Cbc0038I Pass   7: suminf.    1.44171 (13) obj. -136.351 iterations 0
Cbc0038I Pass   8: suminf.    1.94101 (7) obj. -136.351 iterations 16
Cbc0038I Pass   9: suminf.    1.61405 (6) obj. -136.351 iterations 6
Cbc0038I Pass  10: suminf.    1.33109 (7) obj. -136.351 iterations 6
Cbc0038I Pass  11: suminf.    0.41748 (1) obj. -136.351 iterations 14
Cbc0038I Pass  12: suminf.    0.30317 (2) obj. -137.774 iterations 5
Cbc0038I Pass  13: suminf.    0.41748 (1) obj. -136.351 iterations 3
Cbc0038I Pass  14: suminf.    1.73292 (10) obj. -136.351 iterations 19
Cbc0038I Pass  15: suminf.    1.33689 (7) obj. -136.351 iterations 5
Cbc0038I Pass  16: suminf.    0.80090 (3) obj. -136.809 iterations 12
Cbc0038I Pass  17: suminf.    0.89247 (3) obj. -136.351 iterations 5
Cbc0038I Pass  18: suminf.    4.25763 (18) obj. -136.351 iterations 26
Cbc0038I Pass  19: suminf.    2.94496 (16) obj. -136.351 iterations 8
Cbc0038I Pass  20: suminf.    1.36120 (7) obj. -136.351 iterations 15
Cbc0038I Pass  21: suminf.    0.90631 (6) obj. -138.171 iterations 8
Cbc0038I Pass  22: suminf.    1.41122 (4) obj. -136.351 iterations 10
Cbc0038I Pass  23: suminf.    0.68153 (4) obj. -136.351 iterations 3
Cbc0038I Pass  24: suminf.    1.10032 (4) obj. -136.351 iterations 9
Cbc0038I Pass  25: suminf.    0.85145 (4) obj. -136.351 iterations 2
Cbc0038I Pass  26: suminf.    1.11429 (4) obj. -136.351 iterations 6
Cbc0038I Pass  27: suminf.    1.56459 (6) obj. -136.351 iterations 12
Cbc0038I Pass  28: suminf.    1.56459 (6) obj. -136.351 iterations 2
Cbc0038I Pass  29: suminf.    1.11429 (4) obj. -136.351 iterations 5
Cbc0038I Pass  30: suminf.    0.85145 (4) obj. -136.351 iterations 6
Cbc0038I Pass  31: suminf.    1.11429 (4) obj. -136.351 iterations 6
Cbc0038I Pass  32: suminf.    1.75952 (9) obj. -136.351 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 99 columns, reduced to 23 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -131.578 to -134.632 (0.06 seconds)
Cbc0038I Round again with cutoff of -144.943
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.26250 (36) obj. -144.943 iterations 0
Cbc0038I Pass  33: suminf.    4.26250 (36) obj. -144.943 iterations 0
Cbc0038I Pass  34: suminf.    3.17152 (23) obj. -144.943 iterations 19
Cbc0038I Pass  35: suminf.    2.46899 (22) obj. -146.225 iterations 8
Cbc0038I Pass  36: suminf.    1.55403 (15) obj. -144.943 iterations 22
Cbc0038I Pass  37: suminf.    1.55403 (15) obj. -144.943 iterations 1
Cbc0038I Pass  38: suminf.    3.04619 (11) obj. -144.943 iterations 20
Cbc0038I Pass  39: suminf.    3.04619 (11) obj. -144.943 iterations 0
Cbc0038I Pass  40: suminf.    1.94809 (7) obj. -144.943 iterations 18
Cbc0038I Pass  41: suminf.    1.02468 (4) obj. -144.943 iterations 7
Cbc0038I Pass  42: suminf.    0.61481 (4) obj. -146.216 iterations 8
Cbc0038I Pass  43: suminf.    0.86938 (4) obj. -144.943 iterations 6
Cbc0038I Pass  44: suminf.    2.34746 (11) obj. -144.943 iterations 18
Cbc0038I Pass  45: suminf.    1.90950 (11) obj. -144.943 iterations 6
Cbc0038I Pass  46: suminf.    1.02468 (4) obj. -144.943 iterations 17
Cbc0038I Pass  47: suminf.    1.90667 (9) obj. -144.943 iterations 10
Cbc0038I Pass  48: suminf.    1.32762 (9) obj. -144.943 iterations 4
Cbc0038I Pass  49: suminf.    1.08736 (4) obj. -144.943 iterations 12
Cbc0038I Pass  50: suminf.    1.08736 (4) obj. -144.943 iterations 2
Cbc0038I Pass  51: suminf.    0.98612 (4) obj. -144.943 iterations 4
Cbc0038I Pass  52: suminf.    0.98612 (4) obj. -144.943 iterations 3
Cbc0038I Pass  53: suminf.    1.08736 (4) obj. -144.943 iterations 4
Cbc0038I Pass  54: suminf.    2.94847 (14) obj. -144.943 iterations 14
Cbc0038I Pass  55: suminf.    2.54227 (9) obj. -144.943 iterations 5
Cbc0038I Pass  56: suminf.    1.96762 (8) obj. -144.943 iterations 1
Cbc0038I Pass  57: suminf.    1.25901 (5) obj. -144.943 iterations 13
Cbc0038I Pass  58: suminf.    0.99021 (6) obj. -144.943 iterations 5
Cbc0038I Pass  59: suminf.    2.28851 (10) obj. -144.943 iterations 9
Cbc0038I Pass  60: suminf.    2.25106 (11) obj. -144.943 iterations 1
Cbc0038I Pass  61: suminf.    1.90973 (7) obj. -144.943 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 99 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -134.632 - took 0.05 seconds
Cbc0012I Integer solution of -134.6324 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 91 rows 99 columns, reduced to 9 rows 9 columns
Cbc0031I 29 added rows had average density of 8.862069
Cbc0013I At root node, 29 cuts changed objective from -179.31163 to -136.71726 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 348 row cuts average 2.3 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 31 row cuts average 35.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 70 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0001I Search completed - best objective -134.6324, took 307 iterations and 2 nodes (0.58 seconds)
Cbc0032I Strong branching done 26 times (170 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.58

