Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 27 (-5) columns and 140 (-37) elements
Clp1000I sum of infeasibilities 1.41693e-05 - average 3.01474e-07, 2 fixed columns
Coin0506I Presolve 37 (-10) rows, 25 (-2) columns and 116 (-24) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Coin0511I After Postsolve, objective 74.766767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Coin0511I After Postsolve, objective 74.766767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.76676728 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 47 rows, 27 columns (26 integer (26 of which binary)) and 140 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.50122
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.47079 iterations 22
Cbc0038I Solution found of -5.47079
Cbc0038I Relaxing continuous gives -5.47079
Cbc0038I Rounding solution of -5.52225 is better than previous of -5.47079

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 27 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -5.52225 to -23.9191 (0.01 seconds)
Cbc0038I Round again with cutoff of -29.004
Cbc0038I Pass   2: suminf.    0.41127 (2) obj. -29.004 iterations 3
Cbc0038I Pass   3: suminf.    0.41129 (1) obj. -29.004 iterations 2
Cbc0038I Pass   4: suminf.    0.24614 (2) obj. -29.004 iterations 2
Cbc0038I Pass   5: suminf.    0.33871 (1) obj. -29.004 iterations 2
Cbc0038I Pass   6: suminf.    0.41172 (2) obj. -29.004 iterations 2
Cbc0038I Pass   7: suminf.    2.45929 (6) obj. -29.004 iterations 5
Cbc0038I Pass   8: suminf.    0.65779 (2) obj. -29.004 iterations 2
Cbc0038I Pass   9: suminf.    1.54970 (5) obj. -29.004 iterations 8
Cbc0038I Pass  10: suminf.    0.86921 (4) obj. -29.004 iterations 2
Cbc0038I Pass  11: suminf.    0.57360 (3) obj. -29.004 iterations 7
Cbc0038I Pass  12: suminf.    0.98371 (5) obj. -29.004 iterations 6
Cbc0038I Pass  13: suminf.    0.72311 (4) obj. -29.004 iterations 2
Cbc0038I Pass  14: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  15: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  16: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  17: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  18: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  19: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  20: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  21: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  22: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  23: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  24: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  25: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  26: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  27: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  28: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  29: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  30: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  31: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 27 columns, reduced to 35 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.9191 - took 0.04 seconds
Cbc0012I Integer solution of -23.919115 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 27 columns, reduced to 31 rows 21 columns
Cbc0031I 13 added rows had average density of 15.230769
Cbc0013I At root node, 13 cuts changed objective from -74.766767 to -37.016282 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1971 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1141 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 165 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -24.02014 found by DiveCoefficient after 2228 iterations and 1 nodes (0.17 seconds)
Cbc0001I Search completed - best objective -24.02014, took 2491 iterations and 4 nodes (0.19 seconds)
Cbc0032I Strong branching done 50 times (555 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-16) rows, 51 (-9) columns and 433 (-179) elements
Clp1000I sum of infeasibilities 0 - average 0, 30 fixed columns
Coin0506I Presolve 15 (-31) rows, 19 (-32) columns and 83 (-350) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 76.80561
Clp0000I Optimal - objective value 76.80561
Coin0511I After Postsolve, objective 76.80561, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1682222 - largest nonzero change 2.5115664e-05 ( 0.0025115664%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 107.55333
Clp0000I Optimal - objective value 107.55333
Clp0000I Optimal - objective value 107.55333
Coin0511I After Postsolve, objective 107.55333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.5533295 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 51 columns (51 integer (51 of which binary)) and 437 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.01534
Cbc0038I Pass   1: suminf.    3.43376 (13) obj. -70.1825 iterations 9
Cbc0038I Pass   2: suminf.    3.43376 (13) obj. -70.1825 iterations 1
Cbc0038I Solution found of -16.3148
Cbc0038I Rounding solution of -23.9191 is better than previous of -16.3148

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 51 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.3321
Cbc0038I Pass   3: suminf.    3.43376 (13) obj. -70.1825 iterations 0
Cbc0038I Pass   4: suminf.    3.43376 (13) obj. -70.1825 iterations 1
Cbc0038I Pass   5: suminf.    0.67167 (2) obj. -30.3321 iterations 16
Cbc0038I Pass   6: suminf.    0.56048 (2) obj. -32.8306 iterations 2
Cbc0038I Pass   7: suminf.    0.47247 (2) obj. -30.3321 iterations 1
Cbc0038I Pass   8: suminf.    0.67167 (2) obj. -30.3321 iterations 2
Cbc0038I Pass   9: suminf.    1.47259 (7) obj. -42.4828 iterations 13
Cbc0038I Pass  10: suminf.    0.98077 (3) obj. -35.2252 iterations 10
Cbc0038I Pass  11: suminf.    0.59823 (2) obj. -30.3321 iterations 7
Cbc0038I Pass  12: suminf.    0.53875 (2) obj. -30.3321 iterations 2
Cbc0038I Pass  13: suminf.    0.59823 (2) obj. -30.3321 iterations 2
Cbc0038I Pass  14: suminf.    2.37965 (8) obj. -30.3321 iterations 20
Cbc0038I Pass  15: suminf.    1.28651 (6) obj. -30.919 iterations 7
Cbc0038I Pass  16: suminf.    1.57025 (7) obj. -30.3321 iterations 10
Cbc0038I Pass  17: suminf.    1.57025 (7) obj. -30.3321 iterations 2
Cbc0038I Pass  18: suminf.    0.83710 (3) obj. -30.3321 iterations 8
Cbc0038I Pass  19: suminf.    0.82765 (3) obj. -30.3321 iterations 3
Cbc0038I Pass  20: suminf.    0.83999 (3) obj. -30.3321 iterations 4
Cbc0038I Pass  21: suminf.    2.91452 (9) obj. -30.3321 iterations 16
Cbc0038I Pass  22: suminf.    2.45733 (8) obj. -33.67 iterations 4
Cbc0038I Pass  23: suminf.    1.12092 (4) obj. -30.3321 iterations 10
Cbc0038I Pass  24: suminf.    1.12092 (4) obj. -30.3321 iterations 0
Cbc0038I Pass  25: suminf.    1.17842 (4) obj. -30.3321 iterations 5
Cbc0038I Pass  26: suminf.    1.17842 (4) obj. -30.3321 iterations 0
Cbc0038I Pass  27: suminf.    1.12092 (4) obj. -30.3321 iterations 5
Cbc0038I Pass  28: suminf.    2.97029 (10) obj. -35.9637 iterations 16
Cbc0038I Pass  29: suminf.    2.97029 (10) obj. -35.9637 iterations 0
Cbc0038I Pass  30: suminf.    1.18850 (3) obj. -30.3321 iterations 14
Cbc0038I Pass  31: suminf.    0.56042 (2) obj. -32.214 iterations 3
Cbc0038I Pass  32: suminf.    0.63503 (2) obj. -30.3321 iterations 5
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 51 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -41.8752
Cbc0038I Pass  32: suminf.    3.43376 (13) obj. -70.1825 iterations 0
Cbc0038I Pass  33: suminf.    3.43376 (13) obj. -70.1825 iterations 1
Cbc0038I Pass  34: suminf.    1.15483 (6) obj. -41.8752 iterations 16
Cbc0038I Pass  35: suminf.    1.15483 (6) obj. -41.8752 iterations 0
Cbc0038I Pass  36: suminf.    0.99215 (3) obj. -41.8752 iterations 7
Cbc0038I Pass  37: suminf.    0.99215 (3) obj. -41.8752 iterations 0
Cbc0038I Pass  38: suminf.    1.04385 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  39: suminf.    1.04389 (4) obj. -41.8752 iterations 1
Cbc0038I Pass  40: suminf.    1.09967 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  41: suminf.    1.09967 (4) obj. -41.8752 iterations 1
Cbc0038I Pass  42: suminf.    1.04385 (4) obj. -41.8752 iterations 3
Cbc0038I Pass  43: suminf.    3.60300 (11) obj. -41.8752 iterations 21
Cbc0038I Pass  44: suminf.    2.48369 (8) obj. -41.8752 iterations 9
Cbc0038I Pass  45: suminf.    0.96700 (4) obj. -41.8752 iterations 11
Cbc0038I Pass  46: suminf.    0.76208 (4) obj. -41.8752 iterations 1
Cbc0038I Pass  47: suminf.    1.17686 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  48: suminf.    0.79720 (4) obj. -41.8752 iterations 3
Cbc0038I Pass  49: suminf.    1.17686 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  50: suminf.    1.51021 (6) obj. -41.8752 iterations 12
Cbc0038I Pass  51: suminf.    1.24221 (5) obj. -41.8752 iterations 3
Cbc0038I Pass  52: suminf.    1.53735 (5) obj. -41.8752 iterations 5
Cbc0038I Pass  53: suminf.    1.17487 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  54: suminf.    1.20833 (5) obj. -41.8752 iterations 3
Cbc0038I Pass  55: suminf.    1.20833 (5) obj. -41.8752 iterations 0
Cbc0038I Pass  56: suminf.    1.17487 (4) obj. -41.8752 iterations 7
Cbc0038I Pass  57: suminf.    2.18398 (8) obj. -41.8752 iterations 12
Cbc0038I Pass  58: suminf.    1.72728 (6) obj. -44.0952 iterations 4
Cbc0038I Pass  59: suminf.    1.41240 (6) obj. -41.8752 iterations 2
Cbc0038I Pass  60: suminf.    1.51141 (7) obj. -41.8752 iterations 6
Cbc0038I Pass  61: suminf.    1.38959 (6) obj. -41.8752 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 51 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.9191 - took 0.02 seconds
Cbc0012I Integer solution of -23.919115 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 51 columns, reduced to 7 rows 8 columns
Cbc0031I 30 added rows had average density of 11.433333
Cbc0013I At root node, 30 cuts changed objective from -88.04785 to -28.117739 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2617 row cuts average 6.3 elements, 3 column cuts (3 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 656 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 87 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 270 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 269 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.919115 best solution, best possible -28.117739 (1.58 seconds)
Cbc0012I Integer solution of -24.02014 found by rounding after 1484 iterations and 1 nodes (1.58 seconds)
Cbc0001I Search completed - best objective -24.02014, took 1805 iterations and 4 nodes (1.82 seconds)
Cbc0032I Strong branching done 70 times (585 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.82

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 27 (-5) columns and 140 (-37) elements
Clp1000I sum of infeasibilities 1.41693e-05 - average 3.01474e-07, 2 fixed columns
Coin0506I Presolve 37 (-10) rows, 25 (-2) columns and 116 (-24) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Coin0511I After Postsolve, objective 74.766767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Clp0000I Optimal - objective value 74.766767
Coin0511I After Postsolve, objective 74.766767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.76676728 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 47 rows, 27 columns (26 integer (26 of which binary)) and 140 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.50122
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.47079 iterations 22
Cbc0038I Solution found of -5.47079
Cbc0038I Relaxing continuous gives -5.47079
Cbc0038I Rounding solution of -5.52225 is better than previous of -5.47079

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 27 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -5.52225 to -23.9191 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.004
Cbc0038I Pass   2: suminf.    0.41127 (2) obj. -29.004 iterations 3
Cbc0038I Pass   3: suminf.    0.41129 (1) obj. -29.004 iterations 2
Cbc0038I Pass   4: suminf.    0.24614 (2) obj. -29.004 iterations 2
Cbc0038I Pass   5: suminf.    0.33871 (1) obj. -29.004 iterations 2
Cbc0038I Pass   6: suminf.    0.41172 (2) obj. -29.004 iterations 2
Cbc0038I Pass   7: suminf.    2.45929 (6) obj. -29.004 iterations 5
Cbc0038I Pass   8: suminf.    0.65779 (2) obj. -29.004 iterations 2
Cbc0038I Pass   9: suminf.    1.54970 (5) obj. -29.004 iterations 8
Cbc0038I Pass  10: suminf.    0.86921 (4) obj. -29.004 iterations 2
Cbc0038I Pass  11: suminf.    0.57360 (3) obj. -29.004 iterations 7
Cbc0038I Pass  12: suminf.    0.98371 (5) obj. -29.004 iterations 6
Cbc0038I Pass  13: suminf.    0.72311 (4) obj. -29.004 iterations 2
Cbc0038I Pass  14: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  15: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  16: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  17: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  18: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  19: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  20: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  21: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  22: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  23: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  24: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  25: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  26: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I Pass  27: suminf.    0.43631 (2) obj. -29.004 iterations 3
Cbc0038I Pass  28: suminf.    0.75215 (2) obj. -29.004 iterations 4
Cbc0038I Pass  29: suminf.    0.47031 (2) obj. -29.004 iterations 4
Cbc0038I Pass  30: suminf.    0.24772 (2) obj. -29.004 iterations 1
Cbc0038I Pass  31: suminf.    0.57413 (3) obj. -29.004 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 27 columns, reduced to 35 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23.9191 - took 0.03 seconds
Cbc0012I Integer solution of -23.919115 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 27 columns, reduced to 31 rows 21 columns
Cbc0031I 13 added rows had average density of 15.230769
Cbc0013I At root node, 13 cuts changed objective from -74.766767 to -37.016282 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1971 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1141 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 165 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0012I Integer solution of -24.02014 found by DiveCoefficient after 2228 iterations and 1 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -24.02014, took 2491 iterations and 4 nodes (0.24 seconds)
Cbc0032I Strong branching done 50 times (555 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 51 (-10) columns and 433 (-180) elements
Clp1000I sum of infeasibilities 0 - average 0, 30 fixed columns
Coin0506I Presolve 15 (-31) rows, 19 (-32) columns and 83 (-350) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 76.80561
Clp0000I Optimal - objective value 76.80561
Coin0511I After Postsolve, objective 76.80561, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1682222 - largest nonzero change 2.5115664e-05 ( 0.0025115664%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 107.55333
Clp0000I Optimal - objective value 107.55333
Clp0000I Optimal - objective value 107.55333
Coin0511I After Postsolve, objective 107.55333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.5533295 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 51 columns (51 integer (51 of which binary)) and 437 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.01534
Cbc0038I Pass   1: suminf.    3.43376 (13) obj. -70.1825 iterations 9
Cbc0038I Pass   2: suminf.    3.43376 (13) obj. -70.1825 iterations 1
Cbc0038I Solution found of -16.3148
Cbc0038I Rounding solution of -23.9191 is better than previous of -16.3148

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 51 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.3321
Cbc0038I Pass   3: suminf.    3.43376 (13) obj. -70.1825 iterations 0
Cbc0038I Pass   4: suminf.    3.43376 (13) obj. -70.1825 iterations 1
Cbc0038I Pass   5: suminf.    0.67167 (2) obj. -30.3321 iterations 16
Cbc0038I Pass   6: suminf.    0.56048 (2) obj. -32.8306 iterations 2
Cbc0038I Pass   7: suminf.    0.47247 (2) obj. -30.3321 iterations 1
Cbc0038I Pass   8: suminf.    0.67167 (2) obj. -30.3321 iterations 2
Cbc0038I Pass   9: suminf.    1.47259 (7) obj. -42.4828 iterations 13
Cbc0038I Pass  10: suminf.    0.98077 (3) obj. -35.2252 iterations 10
Cbc0038I Pass  11: suminf.    0.59823 (2) obj. -30.3321 iterations 7
Cbc0038I Pass  12: suminf.    0.53875 (2) obj. -30.3321 iterations 2
Cbc0038I Pass  13: suminf.    0.59823 (2) obj. -30.3321 iterations 2
Cbc0038I Pass  14: suminf.    2.37965 (8) obj. -30.3321 iterations 20
Cbc0038I Pass  15: suminf.    1.28651 (6) obj. -30.919 iterations 7
Cbc0038I Pass  16: suminf.    1.57025 (7) obj. -30.3321 iterations 10
Cbc0038I Pass  17: suminf.    1.57025 (7) obj. -30.3321 iterations 2
Cbc0038I Pass  18: suminf.    0.83710 (3) obj. -30.3321 iterations 8
Cbc0038I Pass  19: suminf.    0.82765 (3) obj. -30.3321 iterations 3
Cbc0038I Pass  20: suminf.    0.83999 (3) obj. -30.3321 iterations 4
Cbc0038I Pass  21: suminf.    2.91452 (9) obj. -30.3321 iterations 16
Cbc0038I Pass  22: suminf.    2.45733 (8) obj. -33.67 iterations 4
Cbc0038I Pass  23: suminf.    1.12092 (4) obj. -30.3321 iterations 10
Cbc0038I Pass  24: suminf.    1.12092 (4) obj. -30.3321 iterations 0
Cbc0038I Pass  25: suminf.    1.17842 (4) obj. -30.3321 iterations 5
Cbc0038I Pass  26: suminf.    1.17842 (4) obj. -30.3321 iterations 0
Cbc0038I Pass  27: suminf.    1.12092 (4) obj. -30.3321 iterations 5
Cbc0038I Pass  28: suminf.    2.97029 (10) obj. -35.9637 iterations 16
Cbc0038I Pass  29: suminf.    2.97029 (10) obj. -35.9637 iterations 0
Cbc0038I Pass  30: suminf.    1.18850 (3) obj. -30.3321 iterations 14
Cbc0038I Pass  31: suminf.    0.56042 (2) obj. -32.214 iterations 3
Cbc0038I Pass  32: suminf.    0.63503 (2) obj. -30.3321 iterations 5
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 51 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -41.8752
Cbc0038I Pass  32: suminf.    3.43376 (13) obj. -70.1825 iterations 0
Cbc0038I Pass  33: suminf.    3.43376 (13) obj. -70.1825 iterations 1
Cbc0038I Pass  34: suminf.    1.15483 (6) obj. -41.8752 iterations 16
Cbc0038I Pass  35: suminf.    1.15483 (6) obj. -41.8752 iterations 0
Cbc0038I Pass  36: suminf.    0.99215 (3) obj. -41.8752 iterations 7
Cbc0038I Pass  37: suminf.    0.99215 (3) obj. -41.8752 iterations 0
Cbc0038I Pass  38: suminf.    1.04385 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  39: suminf.    1.04389 (4) obj. -41.8752 iterations 1
Cbc0038I Pass  40: suminf.    1.09967 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  41: suminf.    1.09967 (4) obj. -41.8752 iterations 1
Cbc0038I Pass  42: suminf.    1.04385 (4) obj. -41.8752 iterations 3
Cbc0038I Pass  43: suminf.    3.60300 (11) obj. -41.8752 iterations 21
Cbc0038I Pass  44: suminf.    2.48369 (8) obj. -41.8752 iterations 9
Cbc0038I Pass  45: suminf.    0.96700 (4) obj. -41.8752 iterations 11
Cbc0038I Pass  46: suminf.    0.76208 (4) obj. -41.8752 iterations 1
Cbc0038I Pass  47: suminf.    1.17686 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  48: suminf.    0.79720 (4) obj. -41.8752 iterations 3
Cbc0038I Pass  49: suminf.    1.17686 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  50: suminf.    1.51021 (6) obj. -41.8752 iterations 12
Cbc0038I Pass  51: suminf.    1.24221 (5) obj. -41.8752 iterations 3
Cbc0038I Pass  52: suminf.    1.53735 (5) obj. -41.8752 iterations 5
Cbc0038I Pass  53: suminf.    1.17487 (4) obj. -41.8752 iterations 2
Cbc0038I Pass  54: suminf.    1.20833 (5) obj. -41.8752 iterations 3
Cbc0038I Pass  55: suminf.    1.20833 (5) obj. -41.8752 iterations 0
Cbc0038I Pass  56: suminf.    1.17487 (4) obj. -41.8752 iterations 7
Cbc0038I Pass  57: suminf.    2.18398 (8) obj. -41.8752 iterations 12
Cbc0038I Pass  58: suminf.    1.72728 (6) obj. -44.0952 iterations 4
Cbc0038I Pass  59: suminf.    1.41240 (6) obj. -41.8752 iterations 2
Cbc0038I Pass  60: suminf.    1.51141 (7) obj. -41.8752 iterations 6
Cbc0038I Pass  61: suminf.    1.38959 (6) obj. -41.8752 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 51 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.9191 - took 0.02 seconds
Cbc0012I Integer solution of -23.919115 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 51 columns, reduced to 7 rows 8 columns
Cbc0031I 30 added rows had average density of 11.433333
Cbc0013I At root node, 30 cuts changed objective from -88.04785 to -28.117739 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2617 row cuts average 6.3 elements, 3 column cuts (3 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 656 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 87 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 270 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 269 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.919115 best solution, best possible -28.117739 (1.58 seconds)
Cbc0012I Integer solution of -24.02014 found by rounding after 1484 iterations and 1 nodes (1.58 seconds)
Cbc0001I Search completed - best objective -24.02014, took 1805 iterations and 4 nodes (1.86 seconds)
Cbc0032I Strong branching done 70 times (585 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.86

