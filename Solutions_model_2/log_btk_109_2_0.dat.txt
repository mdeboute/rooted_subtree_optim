Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 213 (-7) rows, 109 (-2) columns and 532 (-12) elements
Clp1000I sum of infeasibilities 0.000138135 - average 6.48521e-07, 6 fixed columns
Coin0506I Presolve 197 (-16) rows, 103 (-6) columns and 494 (-38) elements
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 0.20868702 - largest nonzero change 0 ( 0%) - largest zero change 2.4743033e-05
Clp0000I Optimal - objective value 12816.032
Clp0000I Optimal - objective value 12816.032
Coin0511I After Postsolve, objective 12816.032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 12816.032
Clp0000I Optimal - objective value 12816.032
Clp0000I Optimal - objective value 12816.032
Coin0511I After Postsolve, objective 12816.032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12816.03167 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 213 rows, 109 columns (108 integer (108 of which binary)) and 532 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 99 integers unsatisfied sum - 26.0187
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4765.76 iterations 90
Cbc0038I Solution found of 4765.76
Cbc0038I Relaxing continuous gives 4765.76
Cbc0038I Rounding solution of 2832.13 is better than previous of 4765.76

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 213 rows 109 columns, reduced to 193 rows 100 columns - 1 fixed gives 181, 97 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1267.31
Cbc0038I Pass   2: suminf.    1.01831 (4) obj. 1267.31 iterations 14
Cbc0038I Pass   3: suminf.    0.40081 (4) obj. 1267.31 iterations 24
Cbc0038I Pass   4: suminf.    1.53718 (4) obj. 1267.31 iterations 4
Cbc0038I Pass   5: suminf.    1.48594 (4) obj. 1267.31 iterations 3
Cbc0038I Pass   6: suminf.    1.15767 (3) obj. 1267.31 iterations 16
Cbc0038I Pass   7: suminf.    3.47557 (16) obj. 1267.31 iterations 33
Cbc0038I Pass   8: suminf.    1.60743 (9) obj. 1267.31 iterations 20
Cbc0038I Pass   9: suminf.    1.60743 (9) obj. 1267.31 iterations 0
Cbc0038I Pass  10: suminf.    0.68342 (18) obj. 1267.31 iterations 20
Cbc0038I Pass  11: suminf.    1.57324 (6) obj. 1267.31 iterations 16
Cbc0038I Pass  12: suminf.    1.44760 (4) obj. 1267.31 iterations 14
Cbc0038I Pass  13: suminf.    1.41099 (4) obj. 1267.31 iterations 9
Cbc0038I Pass  14: suminf.    1.44035 (5) obj. 1267.31 iterations 12
Cbc0038I Pass  15: suminf.    0.99931 (4) obj. 1267.31 iterations 15
Cbc0038I Pass  16: suminf.    0.40081 (4) obj. 1267.31 iterations 4
Cbc0038I Pass  17: suminf.    1.53718 (4) obj. 1267.31 iterations 3
Cbc0038I Pass  18: suminf.    1.48594 (4) obj. 1267.31 iterations 2
Cbc0038I Pass  19: suminf.    1.15767 (3) obj. 1267.31 iterations 16
Cbc0038I Pass  20: suminf.    1.04333 (7) obj. 1267.31 iterations 40
Cbc0038I Pass  21: suminf.    0.56902 (3) obj. 1267.31 iterations 10
Cbc0038I Pass  22: suminf.    0.02920 (1) obj. 1267.31 iterations 5
Cbc0038I Pass  23: suminf.    0.00313 (1) obj. 1267.31 iterations 2
Cbc0038I Pass  24: suminf.    0.07187 (3) obj. 1267.31 iterations 4
Cbc0038I Pass  25: suminf.    0.06271 (2) obj. 1267.31 iterations 5
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 1267.31 iterations 2
Cbc0038I Solution found of 1267.31
Cbc0038I Relaxing continuous gives 834.226
Cbc0038I Rounding solution of -1843.46 is better than previous of 834.226

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 213 rows 109 columns, reduced to 199 rows 104 columns - 4 fixed gives 185, 100 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4037.97
Cbc0038I Pass  27: suminf.    5.38569 (25) obj. -4037.97 iterations 8
Cbc0038I Pass  28: suminf.    5.35252 (23) obj. -4037.97 iterations 3
Cbc0038I Pass  29: suminf.    5.66090 (16) obj. -4037.97 iterations 19
Cbc0038I Pass  30: suminf.    5.61257 (17) obj. -4037.97 iterations 3
Cbc0038I Pass  31: suminf.    3.19237 (8) obj. -4037.97 iterations 23
Cbc0038I Pass  32: suminf.    3.54904 (11) obj. -4037.97 iterations 15
Cbc0038I Pass  33: suminf.    2.81558 (8) obj. -4037.97 iterations 14
Cbc0038I Pass  34: suminf.    2.81558 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  35: suminf.    3.35149 (10) obj. -4037.97 iterations 20
Cbc0038I Pass  36: suminf.    2.68027 (9) obj. -4037.97 iterations 8
Cbc0038I Pass  37: suminf.    3.03850 (10) obj. -4037.97 iterations 12
Cbc0038I Pass  38: suminf.    3.03060 (11) obj. -4037.97 iterations 3
Cbc0038I Pass  39: suminf.    3.83896 (10) obj. -4037.97 iterations 11
Cbc0038I Pass  40: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  41: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  42: suminf.    3.76104 (10) obj. -4037.97 iterations 9
Cbc0038I Pass  43: suminf.    3.13289 (10) obj. -4037.97 iterations 3
Cbc0038I Pass  44: suminf.    3.83896 (10) obj. -4037.97 iterations 10
Cbc0038I Pass  45: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  46: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  47: suminf.    3.76104 (10) obj. -4037.97 iterations 9
Cbc0038I Pass  48: suminf.    3.13289 (10) obj. -4037.97 iterations 3
Cbc0038I Pass  49: suminf.    3.83896 (10) obj. -4037.97 iterations 10
Cbc0038I Pass  50: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  51: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  52: suminf.    3.76104 (10) obj. -4037.97 iterations 9
Cbc0038I Pass  53: suminf.    3.13289 (10) obj. -4037.97 iterations 3
Cbc0038I Pass  54: suminf.    3.83896 (10) obj. -4037.97 iterations 10
Cbc0038I Pass  55: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  56: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 213 rows 109 columns, reduced to 195 rows 101 columns - 4 fixed gives 181, 97 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1843.46 - took 0.02 seconds
Cbc0012I Integer solution of -2276.5438 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 20 added rows had average density of 76.45
Cbc0013I At root node, 20 cuts changed objective from -12816.032 to -9244.4709 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30723 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2260 row cuts average 105.8 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2276.5438 best solution, best possible -9244.4709 (1.67 seconds)
Cbc0012I Integer solution of -2277.6658 found by rounding after 10606 iterations and 31 nodes (2.03 seconds)
Cbc0038I Full problem 213 rows 109 columns, reduced to 66 rows 43 columns
Cbc0012I Integer solution of -2291.845 found by DiveCoefficient after 11380 iterations and 53 nodes (2.12 seconds)
Cbc0012I Integer solution of -4110.981 found by DiveCoefficient after 11463 iterations and 54 nodes (2.14 seconds)
Cbc0001I Search completed - best objective -4110.981000000003, took 12014 iterations and 68 nodes (2.17 seconds)
Cbc0032I Strong branching done 824 times (20807 iterations), fathomed 8 nodes and fixed 22 variables
Cbc0035I Maximum depth 16, 108 variables fixed on reduced cost
Total time (CPU seconds):       2.14   (Wallclock seconds):       2.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 170 (-49) rows, 173 (-45) columns and 3642 (-2788) elements
Clp1000I sum of infeasibilities 2.25702e-06 - average 1.32766e-08, 92 fixed columns
Coin0506I Presolve 75 (-95) rows, 81 (-92) columns and 229 (-3413) elements
Clp0006I 0  Obj -6860.8668 Dual inf 278.27765 (65)
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 1.9345964 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value -4450.6968
Clp0000I Optimal - objective value -4450.6968
Coin0511I After Postsolve, objective -4450.6968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4450.6968 Dual inf 30730.103 (74)
Clp0014I Perturbing problem by 0.001% of 2.010228 - largest nonzero change 2.9914327e-05 ( 0.0027270429%) - largest zero change 2.9741158e-05
Clp0000I Optimal - objective value 16402.906
Clp0000I Optimal - objective value 16402.906
Clp0000I Optimal - objective value 16402.906
Coin0511I After Postsolve, objective 16402.906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16402.90643 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0004I processed model has 170 rows, 173 columns (173 integer (173 of which binary)) and 3642 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.894%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.83587
Cbc0038I Pass   1: suminf.    3.88503 (40) obj. -16207.7 iterations 46
Cbc0038I Pass   2: suminf.    0.61471 (17) obj. -5542.4 iterations 23
Cbc0038I Pass   3: suminf.    0.12368 (6) obj. -3143.78 iterations 11
Cbc0038I Solution found of -2335.71
Cbc0038I Rounding solution of -2592.95 is better than previous of -2335.71

Cbc0038I Before mini branch and bound, 131 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3973.95
Cbc0038I Pass   4: suminf.    3.88503 (40) obj. -16207.7 iterations 0
Cbc0038I Pass   5: suminf.    1.13180 (23) obj. -6660.26 iterations 17
Cbc0038I Pass   6: suminf.    0.33032 (6) obj. -3973.95 iterations 19
Cbc0038I Pass   7: suminf.    0.24074 (1) obj. -5657.47 iterations 6
Cbc0038I Pass   8: suminf.    0.37445 (1) obj. -3973.95 iterations 1
Cbc0038I Pass   9: suminf.    4.18159 (23) obj. -3973.95 iterations 76
Cbc0038I Pass  10: suminf.    2.55702 (19) obj. -4277.16 iterations 13
Cbc0038I Pass  11: suminf.    1.76242 (6) obj. -3973.95 iterations 25
Cbc0038I Pass  12: suminf.    0.98035 (5) obj. -3973.95 iterations 3
Cbc0038I Pass  13: suminf.    1.54914 (5) obj. -3973.95 iterations 5
Cbc0038I Pass  14: suminf.    1.54914 (5) obj. -3973.95 iterations 0
Cbc0038I Pass  15: suminf.    0.90435 (5) obj. -3973.95 iterations 3
Cbc0038I Pass  16: suminf.    0.90430 (5) obj. -3973.95 iterations 1
Cbc0038I Pass  17: suminf.    1.58759 (5) obj. -3973.95 iterations 4
Cbc0038I Pass  18: suminf.    0.90430 (5) obj. -3973.95 iterations 5
Cbc0038I Pass  19: suminf.    5.37933 (20) obj. -3973.95 iterations 31
Cbc0038I Pass  20: suminf.    1.80307 (10) obj. -3973.95 iterations 30
Cbc0038I Pass  21: suminf.    1.34791 (9) obj. -4534.48 iterations 1
Cbc0038I Pass  22: suminf.    1.36768 (5) obj. -3973.95 iterations 7
Cbc0038I Pass  23: suminf.    1.08817 (5) obj. -4289.82 iterations 2
Cbc0038I Pass  24: suminf.    2.74705 (19) obj. -3973.95 iterations 41
Cbc0038I Pass  25: suminf.    2.26352 (17) obj. -4956.87 iterations 13
Cbc0038I Pass  26: suminf.    1.68946 (12) obj. -3973.95 iterations 11
Cbc0038I Pass  27: suminf.    1.40259 (11) obj. -4196.27 iterations 4
Cbc0038I Pass  28: suminf.    1.69843 (8) obj. -3973.95 iterations 19
Cbc0038I Pass  29: suminf.    1.69843 (8) obj. -3973.95 iterations 9
Cbc0038I Pass  30: suminf.    1.78005 (8) obj. -3973.95 iterations 9
Cbc0038I Pass  31: suminf.    1.46071 (8) obj. -4205.47 iterations 4
Cbc0038I Pass  32: suminf.    3.59487 (19) obj. -3973.95 iterations 40
Cbc0038I Pass  33: suminf.    1.78785 (12) obj. -4496.21 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 173 columns, reduced to 51 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -2335.71 to -4110.98 (0.07 seconds)
Cbc0038I Round again with cutoff of -6569.37
Cbc0038I Pass  33: suminf.    3.88503 (40) obj. -16207.7 iterations 0
Cbc0038I Pass  34: suminf.    0.84944 (18) obj. -6569.37 iterations 23
Cbc0038I Pass  35: suminf.    0.41040 (9) obj. -6660.97 iterations 10
Cbc0038I Pass  36: suminf.    0.60081 (2) obj. -6569.37 iterations 24
Cbc0038I Pass  37: suminf.    0.44662 (2) obj. -6789.09 iterations 2
Cbc0038I Pass  38: suminf.    1.88248 (13) obj. -6569.37 iterations 86
Cbc0038I Pass  39: suminf.    1.29125 (10) obj. -6645.71 iterations 15
Cbc0038I Pass  40: suminf.    1.15122 (4) obj. -6569.37 iterations 20
Cbc0038I Pass  41: suminf.    0.94323 (4) obj. -6829.36 iterations 1
Cbc0038I Pass  42: suminf.    1.47910 (8) obj. -6569.37 iterations 43
Cbc0038I Pass  43: suminf.    1.46886 (7) obj. -6577.04 iterations 13
Cbc0038I Pass  44: suminf.    1.36890 (5) obj. -6569.37 iterations 7
Cbc0038I Pass  45: suminf.    1.06360 (4) obj. -6790.71 iterations 4
Cbc0038I Pass  46: suminf.    1.24068 (4) obj. -6569.37 iterations 3
Cbc0038I Pass  47: suminf.    3.41433 (17) obj. -6569.37 iterations 39
Cbc0038I Pass  48: suminf.    1.78981 (14) obj. -6964.82 iterations 13
Cbc0038I Pass  49: suminf.    1.70713 (9) obj. -6893.25 iterations 1
Cbc0038I Pass  50: suminf.    1.55745 (10) obj. -6569.37 iterations 16
Cbc0038I Pass  51: suminf.    1.28839 (5) obj. -6635.73 iterations 8
Cbc0038I Pass  52: suminf.    3.48645 (16) obj. -6569.37 iterations 21
Cbc0038I Pass  53: suminf.    2.30520 (11) obj. -6569.37 iterations 6
Cbc0038I Pass  54: suminf.    1.91868 (11) obj. -6569.37 iterations 17
Cbc0038I Pass  55: suminf.    1.91868 (11) obj. -6569.37 iterations 1
Cbc0038I Pass  56: suminf.    1.85137 (6) obj. -6569.37 iterations 14
Cbc0038I Pass  57: suminf.    1.57306 (6) obj. -6569.37 iterations 6
Cbc0038I Pass  58: suminf.    4.20318 (32) obj. -6569.37 iterations 35
Cbc0038I Pass  59: suminf.    2.54235 (13) obj. -6569.37 iterations 30
Cbc0038I Pass  60: suminf.    2.43537 (13) obj. -6569.37 iterations 11
Cbc0038I Pass  61: suminf.    1.72321 (7) obj. -6569.37 iterations 16
Cbc0038I Pass  62: suminf.    1.72321 (7) obj. -6569.37 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 173 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -4110.98 - took 0.07 seconds
Cbc0012I Integer solution of -4110.981 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 170 rows 173 columns, reduced to 15 rows 18 columns
Cbc0031I 74 added rows had average density of 49.918919
Cbc0013I At root node, 74 cuts changed objective from -16402.906 to -6110.2999 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28290 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2520 row cuts average 165.2 elements, 0 column cuts (0 active)  in 0.378 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1407 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.550 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 771 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 100.3 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.748 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4110.981 best solution, best possible -6110.2999 (4.00 seconds)
Cbc0010I After 1 nodes, 2 on tree, -4110.981 best solution, best possible -6110.2999 (5.46 seconds)
Cbc0010I After 4 nodes, 1 on tree, -4110.981 best solution, best possible -5616.9251 (6.29 seconds)
Cbc0010I After 13 nodes, 2 on tree, -4110.981 best solution, best possible -5616.9251 (7.02 seconds)
Cbc0010I After 16 nodes, 5 on tree, -4110.981 best solution, best possible -5616.9251 (8.01 seconds)
Cbc0001I Search completed - best objective -4110.981000000003, took 10420 iterations and 22 nodes (8.06 seconds)
Cbc0032I Strong branching done 604 times (24087 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 6, 5 variables fixed on reduced cost
Total time (CPU seconds):       7.91   (Wallclock seconds):       8.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 213 (-7) rows, 109 (-2) columns and 532 (-12) elements
Clp1000I sum of infeasibilities 0.000138135 - average 6.48521e-07, 6 fixed columns
Coin0506I Presolve 197 (-16) rows, 103 (-6) columns and 494 (-38) elements
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 0.20868702 - largest nonzero change 0 ( 0%) - largest zero change 2.4743033e-05
Clp0000I Optimal - objective value 12816.032
Clp0000I Optimal - objective value 12816.032
Coin0511I After Postsolve, objective 12816.032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 12816.032
Clp0000I Optimal - objective value 12816.032
Clp0000I Optimal - objective value 12816.032
Coin0511I After Postsolve, objective 12816.032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12816.03167 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 213 rows, 109 columns (108 integer (108 of which binary)) and 532 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 99 integers unsatisfied sum - 26.0187
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4765.76 iterations 90
Cbc0038I Solution found of 4765.76
Cbc0038I Relaxing continuous gives 4765.76
Cbc0038I Rounding solution of 2832.13 is better than previous of 4765.76

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 213 rows 109 columns, reduced to 193 rows 100 columns - 1 fixed gives 181, 97 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1267.31
Cbc0038I Pass   2: suminf.    1.01831 (4) obj. 1267.31 iterations 14
Cbc0038I Pass   3: suminf.    0.40081 (4) obj. 1267.31 iterations 24
Cbc0038I Pass   4: suminf.    1.53718 (4) obj. 1267.31 iterations 4
Cbc0038I Pass   5: suminf.    1.48594 (4) obj. 1267.31 iterations 3
Cbc0038I Pass   6: suminf.    1.15767 (3) obj. 1267.31 iterations 16
Cbc0038I Pass   7: suminf.    3.47557 (16) obj. 1267.31 iterations 33
Cbc0038I Pass   8: suminf.    1.60743 (9) obj. 1267.31 iterations 20
Cbc0038I Pass   9: suminf.    1.60743 (9) obj. 1267.31 iterations 0
Cbc0038I Pass  10: suminf.    0.68342 (18) obj. 1267.31 iterations 20
Cbc0038I Pass  11: suminf.    1.57324 (6) obj. 1267.31 iterations 16
Cbc0038I Pass  12: suminf.    1.44760 (4) obj. 1267.31 iterations 14
Cbc0038I Pass  13: suminf.    1.41099 (4) obj. 1267.31 iterations 9
Cbc0038I Pass  14: suminf.    1.44035 (5) obj. 1267.31 iterations 12
Cbc0038I Pass  15: suminf.    0.99931 (4) obj. 1267.31 iterations 15
Cbc0038I Pass  16: suminf.    0.40081 (4) obj. 1267.31 iterations 4
Cbc0038I Pass  17: suminf.    1.53718 (4) obj. 1267.31 iterations 3
Cbc0038I Pass  18: suminf.    1.48594 (4) obj. 1267.31 iterations 2
Cbc0038I Pass  19: suminf.    1.15767 (3) obj. 1267.31 iterations 16
Cbc0038I Pass  20: suminf.    1.04333 (7) obj. 1267.31 iterations 40
Cbc0038I Pass  21: suminf.    0.56902 (3) obj. 1267.31 iterations 10
Cbc0038I Pass  22: suminf.    0.02920 (1) obj. 1267.31 iterations 5
Cbc0038I Pass  23: suminf.    0.00313 (1) obj. 1267.31 iterations 2
Cbc0038I Pass  24: suminf.    0.07187 (3) obj. 1267.31 iterations 4
Cbc0038I Pass  25: suminf.    0.06271 (2) obj. 1267.31 iterations 5
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 1267.31 iterations 2
Cbc0038I Solution found of 1267.31
Cbc0038I Relaxing continuous gives 834.226
Cbc0038I Rounding solution of -1843.46 is better than previous of 834.226

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 213 rows 109 columns, reduced to 199 rows 104 columns - 4 fixed gives 185, 100 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4037.97
Cbc0038I Pass  27: suminf.    5.38569 (25) obj. -4037.97 iterations 8
Cbc0038I Pass  28: suminf.    5.35252 (23) obj. -4037.97 iterations 3
Cbc0038I Pass  29: suminf.    5.66090 (16) obj. -4037.97 iterations 19
Cbc0038I Pass  30: suminf.    5.61257 (17) obj. -4037.97 iterations 3
Cbc0038I Pass  31: suminf.    3.19237 (8) obj. -4037.97 iterations 23
Cbc0038I Pass  32: suminf.    3.54904 (11) obj. -4037.97 iterations 15
Cbc0038I Pass  33: suminf.    2.81558 (8) obj. -4037.97 iterations 14
Cbc0038I Pass  34: suminf.    2.81558 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  35: suminf.    3.35149 (10) obj. -4037.97 iterations 20
Cbc0038I Pass  36: suminf.    2.68027 (9) obj. -4037.97 iterations 8
Cbc0038I Pass  37: suminf.    3.03850 (10) obj. -4037.97 iterations 12
Cbc0038I Pass  38: suminf.    3.03060 (11) obj. -4037.97 iterations 3
Cbc0038I Pass  39: suminf.    3.83896 (10) obj. -4037.97 iterations 11
Cbc0038I Pass  40: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  41: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  42: suminf.    3.76104 (10) obj. -4037.97 iterations 9
Cbc0038I Pass  43: suminf.    3.13289 (10) obj. -4037.97 iterations 3
Cbc0038I Pass  44: suminf.    3.83896 (10) obj. -4037.97 iterations 10
Cbc0038I Pass  45: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  46: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  47: suminf.    3.76104 (10) obj. -4037.97 iterations 9
Cbc0038I Pass  48: suminf.    3.13289 (10) obj. -4037.97 iterations 3
Cbc0038I Pass  49: suminf.    3.83896 (10) obj. -4037.97 iterations 10
Cbc0038I Pass  50: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  51: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I Pass  52: suminf.    3.76104 (10) obj. -4037.97 iterations 9
Cbc0038I Pass  53: suminf.    3.13289 (10) obj. -4037.97 iterations 3
Cbc0038I Pass  54: suminf.    3.83896 (10) obj. -4037.97 iterations 10
Cbc0038I Pass  55: suminf.    3.11329 (8) obj. -4037.97 iterations 5
Cbc0038I Pass  56: suminf.    3.11329 (8) obj. -4037.97 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 213 rows 109 columns, reduced to 195 rows 101 columns - 4 fixed gives 181, 97 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1843.46 - took 0.02 seconds
Cbc0012I Integer solution of -2276.5438 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 20 added rows had average density of 76.45
Cbc0013I At root node, 20 cuts changed objective from -12816.032 to -9244.4709 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30723 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2260 row cuts average 105.8 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2276.5438 best solution, best possible -9244.4709 (1.68 seconds)
Cbc0012I Integer solution of -2277.6658 found by rounding after 10606 iterations and 31 nodes (2.04 seconds)
Cbc0038I Full problem 213 rows 109 columns, reduced to 66 rows 43 columns
Cbc0012I Integer solution of -2291.845 found by DiveCoefficient after 11380 iterations and 53 nodes (2.13 seconds)
Cbc0012I Integer solution of -4110.981 found by DiveCoefficient after 11463 iterations and 54 nodes (2.14 seconds)
Cbc0001I Search completed - best objective -4110.981000000003, took 12014 iterations and 68 nodes (2.18 seconds)
Cbc0032I Strong branching done 824 times (20807 iterations), fathomed 8 nodes and fixed 22 variables
Cbc0035I Maximum depth 16, 108 variables fixed on reduced cost
Total time (CPU seconds):       2.15   (Wallclock seconds):       2.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 170 (-50) rows, 173 (-46) columns and 3642 (-2789) elements
Clp1000I sum of infeasibilities 2.25702e-06 - average 1.32766e-08, 92 fixed columns
Coin0506I Presolve 75 (-95) rows, 81 (-92) columns and 229 (-3413) elements
Clp0006I 0  Obj -6860.8668 Dual inf 278.27765 (65)
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 1.9345964 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value -4450.6968
Clp0000I Optimal - objective value -4450.6968
Coin0511I After Postsolve, objective -4450.6968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4450.6968 Dual inf 30730.103 (74)
Clp0014I Perturbing problem by 0.001% of 2.010228 - largest nonzero change 2.9914327e-05 ( 0.0027270429%) - largest zero change 2.9741158e-05
Clp0000I Optimal - objective value 16402.906
Clp0000I Optimal - objective value 16402.906
Clp0000I Optimal - objective value 16402.906
Coin0511I After Postsolve, objective 16402.906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16402.90643 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 170 rows, 173 columns (173 integer (173 of which binary)) and 3642 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.894%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.83587
Cbc0038I Pass   1: suminf.    3.88503 (40) obj. -16207.7 iterations 46
Cbc0038I Pass   2: suminf.    0.61471 (17) obj. -5542.4 iterations 23
Cbc0038I Pass   3: suminf.    0.12368 (6) obj. -3143.78 iterations 11
Cbc0038I Solution found of -2335.71
Cbc0038I Rounding solution of -2592.95 is better than previous of -2335.71

Cbc0038I Before mini branch and bound, 131 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3973.95
Cbc0038I Pass   4: suminf.    3.88503 (40) obj. -16207.7 iterations 0
Cbc0038I Pass   5: suminf.    1.13180 (23) obj. -6660.26 iterations 17
Cbc0038I Pass   6: suminf.    0.33032 (6) obj. -3973.95 iterations 19
Cbc0038I Pass   7: suminf.    0.24074 (1) obj. -5657.47 iterations 6
Cbc0038I Pass   8: suminf.    0.37445 (1) obj. -3973.95 iterations 1
Cbc0038I Pass   9: suminf.    4.18159 (23) obj. -3973.95 iterations 76
Cbc0038I Pass  10: suminf.    2.55702 (19) obj. -4277.16 iterations 13
Cbc0038I Pass  11: suminf.    1.76242 (6) obj. -3973.95 iterations 25
Cbc0038I Pass  12: suminf.    0.98035 (5) obj. -3973.95 iterations 3
Cbc0038I Pass  13: suminf.    1.54914 (5) obj. -3973.95 iterations 5
Cbc0038I Pass  14: suminf.    1.54914 (5) obj. -3973.95 iterations 0
Cbc0038I Pass  15: suminf.    0.90435 (5) obj. -3973.95 iterations 3
Cbc0038I Pass  16: suminf.    0.90430 (5) obj. -3973.95 iterations 1
Cbc0038I Pass  17: suminf.    1.58759 (5) obj. -3973.95 iterations 4
Cbc0038I Pass  18: suminf.    0.90430 (5) obj. -3973.95 iterations 5
Cbc0038I Pass  19: suminf.    5.37933 (20) obj. -3973.95 iterations 31
Cbc0038I Pass  20: suminf.    1.80307 (10) obj. -3973.95 iterations 30
Cbc0038I Pass  21: suminf.    1.34791 (9) obj. -4534.48 iterations 1
Cbc0038I Pass  22: suminf.    1.36768 (5) obj. -3973.95 iterations 7
Cbc0038I Pass  23: suminf.    1.08817 (5) obj. -4289.82 iterations 2
Cbc0038I Pass  24: suminf.    2.74705 (19) obj. -3973.95 iterations 41
Cbc0038I Pass  25: suminf.    2.26352 (17) obj. -4956.87 iterations 13
Cbc0038I Pass  26: suminf.    1.68946 (12) obj. -3973.95 iterations 11
Cbc0038I Pass  27: suminf.    1.40259 (11) obj. -4196.27 iterations 4
Cbc0038I Pass  28: suminf.    1.69843 (8) obj. -3973.95 iterations 19
Cbc0038I Pass  29: suminf.    1.69843 (8) obj. -3973.95 iterations 9
Cbc0038I Pass  30: suminf.    1.78005 (8) obj. -3973.95 iterations 9
Cbc0038I Pass  31: suminf.    1.46071 (8) obj. -4205.47 iterations 4
Cbc0038I Pass  32: suminf.    3.59487 (19) obj. -3973.95 iterations 40
Cbc0038I Pass  33: suminf.    1.78785 (12) obj. -4496.21 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 173 columns, reduced to 51 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -2335.71 to -4110.98 (0.07 seconds)
Cbc0038I Round again with cutoff of -6569.37
Cbc0038I Pass  33: suminf.    3.88503 (40) obj. -16207.7 iterations 0
Cbc0038I Pass  34: suminf.    0.84944 (18) obj. -6569.37 iterations 23
Cbc0038I Pass  35: suminf.    0.41040 (9) obj. -6660.97 iterations 10
Cbc0038I Pass  36: suminf.    0.60081 (2) obj. -6569.37 iterations 24
Cbc0038I Pass  37: suminf.    0.44662 (2) obj. -6789.09 iterations 2
Cbc0038I Pass  38: suminf.    1.88248 (13) obj. -6569.37 iterations 86
Cbc0038I Pass  39: suminf.    1.29125 (10) obj. -6645.71 iterations 15
Cbc0038I Pass  40: suminf.    1.15122 (4) obj. -6569.37 iterations 20
Cbc0038I Pass  41: suminf.    0.94323 (4) obj. -6829.36 iterations 1
Cbc0038I Pass  42: suminf.    1.47910 (8) obj. -6569.37 iterations 43
Cbc0038I Pass  43: suminf.    1.46886 (7) obj. -6577.04 iterations 13
Cbc0038I Pass  44: suminf.    1.36890 (5) obj. -6569.37 iterations 7
Cbc0038I Pass  45: suminf.    1.06360 (4) obj. -6790.71 iterations 4
Cbc0038I Pass  46: suminf.    1.24068 (4) obj. -6569.37 iterations 3
Cbc0038I Pass  47: suminf.    3.41433 (17) obj. -6569.37 iterations 39
Cbc0038I Pass  48: suminf.    1.78981 (14) obj. -6964.82 iterations 13
Cbc0038I Pass  49: suminf.    1.70713 (9) obj. -6893.25 iterations 1
Cbc0038I Pass  50: suminf.    1.55745 (10) obj. -6569.37 iterations 16
Cbc0038I Pass  51: suminf.    1.28839 (5) obj. -6635.73 iterations 8
Cbc0038I Pass  52: suminf.    3.48645 (16) obj. -6569.37 iterations 21
Cbc0038I Pass  53: suminf.    2.30520 (11) obj. -6569.37 iterations 6
Cbc0038I Pass  54: suminf.    1.91868 (11) obj. -6569.37 iterations 17
Cbc0038I Pass  55: suminf.    1.91868 (11) obj. -6569.37 iterations 1
Cbc0038I Pass  56: suminf.    1.85137 (6) obj. -6569.37 iterations 14
Cbc0038I Pass  57: suminf.    1.57306 (6) obj. -6569.37 iterations 6
Cbc0038I Pass  58: suminf.    4.20318 (32) obj. -6569.37 iterations 35
Cbc0038I Pass  59: suminf.    2.54235 (13) obj. -6569.37 iterations 30
Cbc0038I Pass  60: suminf.    2.43537 (13) obj. -6569.37 iterations 11
Cbc0038I Pass  61: suminf.    1.72321 (7) obj. -6569.37 iterations 16
Cbc0038I Pass  62: suminf.    1.72321 (7) obj. -6569.37 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 173 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -4110.98 - took 0.07 seconds
Cbc0012I Integer solution of -4110.981 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 170 rows 173 columns, reduced to 15 rows 18 columns
Cbc0031I 74 added rows had average density of 49.918919
Cbc0013I At root node, 74 cuts changed objective from -16402.906 to -6110.2999 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28290 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.240 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2520 row cuts average 165.2 elements, 0 column cuts (0 active)  in 0.381 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1407 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.550 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 771 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.243 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 100.3 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4110.981 best solution, best possible -6110.2999 (3.99 seconds)
Cbc0010I After 1 nodes, 2 on tree, -4110.981 best solution, best possible -6110.2999 (5.45 seconds)
Cbc0010I After 4 nodes, 1 on tree, -4110.981 best solution, best possible -5616.9251 (6.29 seconds)
Cbc0010I After 13 nodes, 2 on tree, -4110.981 best solution, best possible -5616.9251 (7.02 seconds)
Cbc0010I After 16 nodes, 5 on tree, -4110.981 best solution, best possible -5616.9251 (8.02 seconds)
Cbc0001I Search completed - best objective -4110.981000000003, took 10420 iterations and 22 nodes (8.07 seconds)
Cbc0032I Strong branching done 604 times (24087 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 6, 5 variables fixed on reduced cost
Total time (CPU seconds):       7.91   (Wallclock seconds):       8.10

