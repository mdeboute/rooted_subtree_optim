Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 70 (-8) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 3.77187e-06 - average 2.92393e-08, 19 fixed columns
Coin0506I Presolve 94 (-35) rows, 51 (-19) columns and 282 (-108) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 63.300937
Clp0000I Optimal - objective value 63.300937
Coin0511I After Postsolve, objective 63.300937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22827713 - largest nonzero change 0 ( 0%) - largest zero change 2.9102505e-05
Clp0000I Optimal - objective value 63.300937
Clp0000I Optimal - objective value 63.300937
Clp0000I Optimal - objective value 63.300937
Coin0511I After Postsolve, objective 63.300937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.30093685 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 70 columns (69 integer (69 of which binary)) and 438 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.199%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.1073
Cbc0038I Solution found of -2.53559
Cbc0038I Relaxing continuous gives -7.7645
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 62 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -7.7645 to -42.2102 (0.04 seconds)
Cbc0038I Round again with cutoff of -44.2414
Cbc0038I Pass   1: suminf.    2.70173 (19) obj. -44.2414 iterations 41
Cbc0038I Pass   2: suminf.    1.97314 (5) obj. -44.2414 iterations 27
Cbc0038I Pass   3: suminf.    1.42986 (3) obj. -44.2414 iterations 3
Cbc0038I Pass   4: suminf.    1.14059 (9) obj. -44.2414 iterations 14
Cbc0038I Pass   5: suminf.    2.09604 (7) obj. -44.2414 iterations 13
Cbc0038I Pass   6: suminf.    1.45122 (4) obj. -44.2414 iterations 5
Cbc0038I Pass   7: suminf.    1.31222 (5) obj. -44.2414 iterations 6
Cbc0038I Pass   8: suminf.    1.11436 (6) obj. -44.2414 iterations 8
Cbc0038I Pass   9: suminf.    1.04004 (4) obj. -44.2414 iterations 11
Cbc0038I Pass  10: suminf.    0.58037 (3) obj. -44.2414 iterations 1
Cbc0038I Pass  11: suminf.    0.23423 (2) obj. -44.2414 iterations 5
Cbc0038I Pass  12: suminf.    0.96586 (3) obj. -44.2414 iterations 13
Cbc0038I Pass  13: suminf.    0.96059 (5) obj. -44.2414 iterations 2
Cbc0038I Pass  14: suminf.    0.83499 (5) obj. -44.2414 iterations 12
Cbc0038I Pass  15: suminf.    0.35126 (3) obj. -44.2414 iterations 6
Cbc0038I Pass  16: suminf.    1.44444 (4) obj. -44.2414 iterations 4
Cbc0038I Pass  17: suminf.    0.93442 (4) obj. -44.2414 iterations 7
Cbc0038I Pass  18: suminf.    1.14165 (4) obj. -44.2414 iterations 4
Cbc0038I Pass  19: suminf.    1.93643 (7) obj. -44.2414 iterations 13
Cbc0038I Pass  20: suminf.    1.14977 (3) obj. -44.2414 iterations 13
Cbc0038I Pass  21: suminf.    1.27023 (3) obj. -44.2414 iterations 5
Cbc0038I Pass  22: suminf.    0.99715 (5) obj. -44.2414 iterations 5
Cbc0038I Pass  23: suminf.    0.99064 (4) obj. -44.2414 iterations 3
Cbc0038I Pass  24: suminf.    1.29574 (3) obj. -44.2414 iterations 5
Cbc0038I Pass  25: suminf.    0.80865 (3) obj. -44.2414 iterations 5
Cbc0038I Pass  26: suminf.    1.51939 (5) obj. -44.2414 iterations 4
Cbc0038I Pass  27: suminf.    1.06667 (4) obj. -44.2414 iterations 11
Cbc0038I Pass  28: suminf.    0.88745 (3) obj. -44.2414 iterations 8
Cbc0038I Pass  29: suminf.    0.87026 (4) obj. -44.2414 iterations 5
Cbc0038I Pass  30: suminf.    1.29574 (3) obj. -44.2414 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 70 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -42.2102 - took 0.05 seconds
Cbc0012I Integer solution of -42.21024 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 126 rows 70 columns, reduced to 62 rows 32 columns
Cbc0031I 20 added rows had average density of 35.1
Cbc0013I At root node, 20 cuts changed objective from -62.521328 to -54.466512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5773 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1455 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -42.21024, took 5967 iterations and 36 nodes (0.61 seconds)
Cbc0032I Strong branching done 396 times (6165 iterations), fathomed 4 nodes and fixed 21 variables
Cbc0035I Maximum depth 6, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-41) rows, 122 (-30) columns and 2053 (-1250) elements
Clp1000I sum of infeasibilities 4.49289e-09 - average 3.97601e-11, 115 fixed columns
Coin0506I Presolve 7 (-106) rows, 7 (-115) columns and 23 (-2030) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 123.89803
Clp0000I Optimal - objective value 123.89803
Coin0511I After Postsolve, objective 123.89803, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3793869 - largest nonzero change 2.6950882e-05 ( 0.0020584323%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 193.23421
Clp0000I Optimal - objective value 193.23421
Clp0000I Optimal - objective value 193.23421
Coin0511I After Postsolve, objective 193.23421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.2342076 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 76 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 2105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.761%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 9.45563
Cbc0038I Pass   1: suminf.    0.60924 (26) obj. -53.958 iterations 19
Cbc0038I Pass   2: suminf.    0.60924 (26) obj. -53.958 iterations 0
Cbc0038I Solution found of -23.6734
Cbc0038I Rounding solution of -44.8383 is better than previous of -23.6734

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 46 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -44.8383 to -84.6734 (0.05 seconds)
Cbc0038I Round again with cutoff of -93.1653
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.70666 (35) obj. -93.1653 iterations 1
Cbc0038I Pass   4: suminf.    1.70666 (35) obj. -93.1653 iterations 0
Cbc0038I Pass   5: suminf.    0.76717 (18) obj. -93.1653 iterations 19
Cbc0038I Pass   6: suminf.    0.76717 (18) obj. -93.1653 iterations 0
Cbc0038I Pass   7: suminf.    0.18919 (1) obj. -112.7 iterations 27
Cbc0038I Pass   8: suminf.    0.47400 (1) obj. -93.1653 iterations 1
Cbc0038I Pass   9: suminf.    0.87606 (8) obj. -95.4799 iterations 14
Cbc0038I Pass  10: suminf.    0.87606 (8) obj. -95.4799 iterations 2
Cbc0038I Pass  11: suminf.    0.38779 (1) obj. -93.1653 iterations 19
Cbc0038I Pass  12: suminf.    0.18919 (1) obj. -117.7 iterations 1
Cbc0038I Pass  13: suminf.    1.84541 (11) obj. -93.1653 iterations 22
Cbc0038I Pass  14: suminf.    0.73286 (6) obj. -93.3036 iterations 10
Cbc0038I Pass  15: suminf.    0.73017 (6) obj. -93.1653 iterations 1
Cbc0038I Pass  16: suminf.    0.18919 (1) obj. -102.469 iterations 6
Cbc0038I Pass  17: suminf.    0.34960 (1) obj. -93.1653 iterations 1
Cbc0038I Pass  18: suminf.    0.75973 (14) obj. -93.1653 iterations 17
Cbc0038I Pass  19: suminf.    0.70399 (10) obj. -93.1653 iterations 6
Cbc0038I Pass  20: suminf.    0.40541 (1) obj. -93.6779 iterations 10
Cbc0038I Pass  21: suminf.    0.39657 (1) obj. -93.1653 iterations 1
Cbc0038I Pass  22: suminf.    1.52752 (12) obj. -93.1653 iterations 19
Cbc0038I Pass  23: suminf.    0.86438 (10) obj. -93.1653 iterations 9
Cbc0038I Pass  24: suminf.    1.50235 (14) obj. -93.1653 iterations 13
Cbc0038I Pass  25: suminf.    1.14132 (13) obj. -93.1653 iterations 3
Cbc0038I Pass  26: suminf.    0.77400 (3) obj. -93.1653 iterations 14
Cbc0038I Pass  27: suminf.    0.55316 (5) obj. -93.1653 iterations 1
Cbc0038I Pass  28: suminf.    0.45455 (1) obj. -95.8008 iterations 4
Cbc0038I Pass  29: suminf.    0.43057 (1) obj. -93.1653 iterations 2
Cbc0038I Pass  30: suminf.    0.48387 (1) obj. -97.0031 iterations 1
Cbc0038I Pass  31: suminf.    1.05377 (9) obj. -93.1653 iterations 23
Cbc0038I Pass  32: suminf.    0.76137 (7) obj. -93.1653 iterations 6
Cbc0038I Rounding solution of -91.6346 is better than previous of -84.6734

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 57 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -108.451
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.77707 (36) obj. -108.451 iterations 1
Cbc0038I Pass  33: suminf.    1.77707 (36) obj. -108.451 iterations 0
Cbc0038I Pass  34: suminf.    0.85405 (10) obj. -108.451 iterations 37
Cbc0038I Pass  35: suminf.    0.63221 (10) obj. -125.001 iterations 1
Cbc0038I Pass  36: suminf.    0.26246 (1) obj. -108.451 iterations 12
Cbc0038I Pass  37: suminf.    0.18919 (1) obj. -112.7 iterations 1
Cbc0038I Pass  38: suminf.    1.57479 (10) obj. -108.451 iterations 14
Cbc0038I Pass  39: suminf.    0.75046 (8) obj. -117.977 iterations 8
Cbc0038I Pass  40: suminf.    0.21074 (1) obj. -108.451 iterations 8
Cbc0038I Pass  41: suminf.    0.18919 (1) obj. -109.7 iterations 1
Cbc0038I Pass  42: suminf.    0.85178 (9) obj. -108.451 iterations 10
Cbc0038I Pass  43: suminf.    0.48175 (5) obj. -114.344 iterations 7
Cbc0038I Pass  44: suminf.    2.06767 (16) obj. -108.451 iterations 17
Cbc0038I Pass  45: suminf.    1.26663 (13) obj. -108.451 iterations 3
Cbc0038I Pass  46: suminf.    1.13313 (13) obj. -121.393 iterations 1
Cbc0038I Pass  47: suminf.    0.37676 (4) obj. -108.451 iterations 16
Cbc0038I Pass  48: suminf.    0.37676 (4) obj. -108.451 iterations 1
Cbc0038I Pass  49: suminf.    0.04167 (1) obj. -126.673 iterations 11
Cbc0038I Pass  50: suminf.    0.04167 (1) obj. -126.673 iterations 0
Cbc0038I Pass  51: suminf.    0.29476 (1) obj. -108.451 iterations 1
Cbc0038I Pass  52: suminf.    1.06725 (11) obj. -108.451 iterations 13
Cbc0038I Pass  53: suminf.    0.61606 (6) obj. -112.123 iterations 6
Cbc0038I Pass  54: suminf.    0.27836 (2) obj. -108.451 iterations 6
Cbc0038I Pass  55: suminf.    0.27836 (2) obj. -108.451 iterations 1
Cbc0038I Pass  56: suminf.    1.21838 (4) obj. -108.451 iterations 4
Cbc0038I Pass  57: suminf.    1.83278 (7) obj. -108.451 iterations 5
Cbc0038I Pass  58: suminf.    0.28476 (2) obj. -108.451 iterations 8
Cbc0038I Pass  59: suminf.    0.24775 (2) obj. -110.642 iterations 1
Cbc0038I Pass  60: suminf.    0.21074 (1) obj. -108.451 iterations 2
Cbc0038I Pass  61: suminf.    0.18919 (1) obj. -109.7 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 52 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -91.6346 - took 0.06 seconds
Cbc0012I Integer solution of -91.6346 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 43 rows 47 columns
Cbc0012I Integer solution of -95.01274 found by DiveCoefficient after 622 iterations and 0 nodes (0.44 seconds)
Cbc0031I 36 added rows had average density of 5.3611111
Cbc0013I At root node, 36 cuts changed objective from -169.59154 to -95.01274 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 1091 row cuts average 6.3 elements, 53 column cuts (53 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 84 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 198 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 47 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 142 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 242 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0001I Search completed - best objective -95.01273999999998, took 622 iterations and 0 nodes (0.44 seconds)
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.45

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 70 (-8) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 3.77187e-06 - average 2.92393e-08, 19 fixed columns
Coin0506I Presolve 94 (-35) rows, 51 (-19) columns and 282 (-108) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 63.300937
Clp0000I Optimal - objective value 63.300937
Coin0511I After Postsolve, objective 63.300937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22827713 - largest nonzero change 0 ( 0%) - largest zero change 2.9102505e-05
Clp0000I Optimal - objective value 63.300937
Clp0000I Optimal - objective value 63.300937
Clp0000I Optimal - objective value 63.300937
Coin0511I After Postsolve, objective 63.300937, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.30093685 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 70 columns (69 integer (69 of which binary)) and 438 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.199%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.1073
Cbc0038I Solution found of -2.53559
Cbc0038I Relaxing continuous gives -7.7645
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 62 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -7.7645 to -42.2102 (0.05 seconds)
Cbc0038I Round again with cutoff of -44.2414
Cbc0038I Pass   1: suminf.    2.70173 (19) obj. -44.2414 iterations 41
Cbc0038I Pass   2: suminf.    1.97314 (5) obj. -44.2414 iterations 27
Cbc0038I Pass   3: suminf.    1.42986 (3) obj. -44.2414 iterations 3
Cbc0038I Pass   4: suminf.    1.14059 (9) obj. -44.2414 iterations 14
Cbc0038I Pass   5: suminf.    2.09604 (7) obj. -44.2414 iterations 13
Cbc0038I Pass   6: suminf.    1.45122 (4) obj. -44.2414 iterations 5
Cbc0038I Pass   7: suminf.    1.31222 (5) obj. -44.2414 iterations 6
Cbc0038I Pass   8: suminf.    1.11436 (6) obj. -44.2414 iterations 8
Cbc0038I Pass   9: suminf.    1.04004 (4) obj. -44.2414 iterations 11
Cbc0038I Pass  10: suminf.    0.58037 (3) obj. -44.2414 iterations 1
Cbc0038I Pass  11: suminf.    0.23423 (2) obj. -44.2414 iterations 5
Cbc0038I Pass  12: suminf.    0.96586 (3) obj. -44.2414 iterations 13
Cbc0038I Pass  13: suminf.    0.96059 (5) obj. -44.2414 iterations 2
Cbc0038I Pass  14: suminf.    0.83499 (5) obj. -44.2414 iterations 12
Cbc0038I Pass  15: suminf.    0.35126 (3) obj. -44.2414 iterations 6
Cbc0038I Pass  16: suminf.    1.44444 (4) obj. -44.2414 iterations 4
Cbc0038I Pass  17: suminf.    0.93442 (4) obj. -44.2414 iterations 7
Cbc0038I Pass  18: suminf.    1.14165 (4) obj. -44.2414 iterations 4
Cbc0038I Pass  19: suminf.    1.93643 (7) obj. -44.2414 iterations 13
Cbc0038I Pass  20: suminf.    1.14977 (3) obj. -44.2414 iterations 13
Cbc0038I Pass  21: suminf.    1.27023 (3) obj. -44.2414 iterations 5
Cbc0038I Pass  22: suminf.    0.99715 (5) obj. -44.2414 iterations 5
Cbc0038I Pass  23: suminf.    0.99064 (4) obj. -44.2414 iterations 3
Cbc0038I Pass  24: suminf.    1.29574 (3) obj. -44.2414 iterations 5
Cbc0038I Pass  25: suminf.    0.80865 (3) obj. -44.2414 iterations 5
Cbc0038I Pass  26: suminf.    1.51939 (5) obj. -44.2414 iterations 4
Cbc0038I Pass  27: suminf.    1.06667 (4) obj. -44.2414 iterations 11
Cbc0038I Pass  28: suminf.    0.88745 (3) obj. -44.2414 iterations 8
Cbc0038I Pass  29: suminf.    0.87026 (4) obj. -44.2414 iterations 5
Cbc0038I Pass  30: suminf.    1.29574 (3) obj. -44.2414 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 70 columns, reduced to 70 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -42.2102 - took 0.06 seconds
Cbc0012I Integer solution of -42.21024 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 126 rows 70 columns, reduced to 62 rows 32 columns
Cbc0031I 20 added rows had average density of 35.1
Cbc0013I At root node, 20 cuts changed objective from -62.521328 to -54.466512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5773 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1455 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 7 nodes, 7 on tree, -42.21024 best solution, best possible -54.466512 (0.68 seconds)
Cbc0001I Search completed - best objective -42.21024, took 5967 iterations and 36 nodes (0.73 seconds)
Cbc0032I Strong branching done 396 times (6165 iterations), fathomed 4 nodes and fixed 21 variables
Cbc0035I Maximum depth 6, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 116 (-37) columns and 1797 (-1507) elements
Clp1000I sum of infeasibilities 1.01308e-07 - average 9.46801e-10, 15 fixed columns
Coin0506I Presolve 93 (-14) rows, 101 (-15) columns and 1395 (-402) elements
Clp0006I 0  Obj 67.917391 Dual inf 13.580393 (101)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.5348439 - largest nonzero change 1.3544024e-05 ( 0.00089285843%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 74.0923
Clp0000I Optimal - objective value 74.0923
Coin0511I After Postsolve, objective 74.0923, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 74.0923
Clp0000I Optimal - objective value 74.0923
Clp0000I Optimal - objective value 74.0923
Clp0000I Optimal - objective value 74.0923
Coin0511I After Postsolve, objective 74.0923, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.09230041 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 116 columns (116 integer (116 of which binary)) and 1838 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.471%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.56582
Cbc0038I Pass   1: suminf.    1.06011 (25) obj. -42.2399 iterations 18
Cbc0038I Pass   2: suminf.    1.06011 (25) obj. -42.2399 iterations 1
Cbc0038I Solution found of -4.07776
Cbc0038I Rounding solution of -13.5327 is better than previous of -4.07776

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 116 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -13.5327 to -18.6092 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.1339
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.06011 (25) obj. -42.2399 iterations 0
Cbc0038I Pass   4: suminf.    1.06011 (25) obj. -42.2399 iterations 1
Cbc0038I Pass   5: suminf.    1.37570 (14) obj. -23.1339 iterations 47
Cbc0038I Pass   6: suminf.    0.94050 (4) obj. -23.5092 iterations 14
Cbc0038I Pass   7: suminf.    0.75060 (2) obj. -23.1339 iterations 5
Cbc0038I Pass   8: suminf.    0.79703 (2) obj. -23.2042 iterations 3
Cbc0038I Pass   9: suminf.    0.78851 (3) obj. -23.1339 iterations 2
Cbc0038I Pass  10: suminf.    0.76715 (3) obj. -23.1339 iterations 1
Cbc0038I Pass  11: suminf.    1.77864 (11) obj. -30.6969 iterations 19
Cbc0038I Pass  12: suminf.    0.86039 (10) obj. -23.1339 iterations 9
Cbc0038I Pass  13: suminf.    1.27280 (3) obj. -23.1339 iterations 18
Cbc0038I Pass  14: suminf.    1.11082 (7) obj. -23.1339 iterations 7
Cbc0038I Pass  15: suminf.    1.17186 (5) obj. -23.3367 iterations 7
Cbc0038I Pass  16: suminf.    0.96102 (12) obj. -23.1339 iterations 24
Cbc0038I Pass  17: suminf.    0.93840 (14) obj. -23.1339 iterations 9
Cbc0038I Pass  18: suminf.    0.14281 (4) obj. -23.1339 iterations 19
Cbc0038I Pass  19: suminf.    0.13275 (3) obj. -23.1339 iterations 4
Cbc0038I Pass  20: suminf.    0.82241 (4) obj. -23.1339 iterations 7
Cbc0038I Pass  21: suminf.    0.82730 (4) obj. -23.1918 iterations 3
Cbc0038I Pass  22: suminf.    0.69375 (10) obj. -26.1548 iterations 35
Cbc0038I Pass  23: suminf.    0.69375 (10) obj. -26.1548 iterations 3
Cbc0038I Pass  24: suminf.    1.43759 (6) obj. -23.1339 iterations 28
Cbc0038I Pass  25: suminf.    1.43759 (6) obj. -23.1339 iterations 0
Cbc0038I Pass  26: suminf.    1.12289 (4) obj. -23.8829 iterations 7
Cbc0038I Pass  27: suminf.    0.93719 (5) obj. -23.1339 iterations 4
Cbc0038I Pass  28: suminf.    1.87618 (6) obj. -23.1339 iterations 22
Cbc0038I Pass  29: suminf.    1.87618 (6) obj. -23.1339 iterations 0
Cbc0038I Pass  30: suminf.    1.64748 (5) obj. -23.6632 iterations 6
Cbc0038I Pass  31: suminf.    1.27914 (5) obj. -23.1339 iterations 11
Cbc0038I Pass  32: suminf.    1.69782 (5) obj. -23.1339 iterations 4
Cbc0038I Rounding solution of -19.5204 is better than previous of -18.6092

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 116 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -19.5204 to -41.2138 (0.08 seconds)
Cbc0038I Round again with cutoff of -45.7423
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.58658 (36) obj. -45.7423 iterations 5
Cbc0038I Pass  33: suminf.    1.30617 (27) obj. -45.7423 iterations 3
Cbc0038I Pass  34: suminf.    2.46460 (23) obj. -45.7423 iterations 25
Cbc0038I Pass  35: suminf.    2.38895 (23) obj. -45.7423 iterations 3
Cbc0038I Pass  36: suminf.    2.07175 (20) obj. -45.7423 iterations 17
Cbc0038I Pass  37: suminf.    1.31668 (20) obj. -45.7423 iterations 4
Cbc0038I Pass  38: suminf.    1.02431 (16) obj. -45.7801 iterations 7
Cbc0038I Pass  39: suminf.    3.41340 (21) obj. -45.7423 iterations 33
Cbc0038I Pass  40: suminf.    1.25234 (18) obj. -45.7423 iterations 9
Cbc0038I Pass  41: suminf.    1.25000 (18) obj. -45.7423 iterations 5
Cbc0038I Pass  42: suminf.    1.22479 (18) obj. -45.7423 iterations 6
Cbc0038I Pass  43: suminf.    1.22479 (18) obj. -45.7423 iterations 0
Cbc0038I Pass  44: suminf.    1.24023 (18) obj. -45.7423 iterations 2
Cbc0038I Pass  45: suminf.    1.24023 (18) obj. -45.7423 iterations 0
Cbc0038I Pass  46: suminf.    1.26476 (19) obj. -45.7423 iterations 6
Cbc0038I Pass  47: suminf.    1.25000 (18) obj. -45.7423 iterations 2
Cbc0038I Pass  48: suminf.    2.89115 (19) obj. -45.7423 iterations 23
Cbc0038I Pass  49: suminf.    1.61165 (18) obj. -45.7423 iterations 4
Cbc0038I Pass  50: suminf.    1.52488 (19) obj. -45.7423 iterations 6
Cbc0038I Pass  51: suminf.    2.56257 (20) obj. -45.7423 iterations 13
Cbc0038I Pass  52: suminf.    1.97803 (19) obj. -45.7423 iterations 8
Cbc0038I Pass  53: suminf.    2.44824 (20) obj. -45.7423 iterations 12
Cbc0038I Pass  54: suminf.    1.24499 (18) obj. -45.7423 iterations 11
Cbc0038I Pass  55: suminf.    1.24265 (18) obj. -45.7423 iterations 6
Cbc0038I Pass  56: suminf.    2.89850 (19) obj. -45.7423 iterations 14
Cbc0038I Pass  57: suminf.    1.61165 (18) obj. -45.7423 iterations 3
Cbc0038I Pass  58: suminf.    1.51534 (19) obj. -45.7423 iterations 5
Cbc0038I Pass  59: suminf.    2.45930 (20) obj. -45.7423 iterations 11
Cbc0038I Pass  60: suminf.    1.25234 (18) obj. -45.7423 iterations 10
Cbc0038I Pass  61: suminf.    1.25000 (18) obj. -45.7423 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -41.2138 - took 0.06 seconds
Cbc0012I Integer solution of -41.21384 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 104 rows 116 columns, reduced to 21 rows 23 columns
Cbc0031I 51 added rows had average density of 24.764706
Cbc0013I At root node, 51 cuts changed objective from -63.855607 to -47.257405 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9722 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1025 row cuts average 98.3 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1032 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1533 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 330 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 184 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.709 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -41.21384 best solution, best possible -47.257405 (2.49 seconds)
Cbc0004I Integer solution of -42.21024 found after 4774 iterations and 1 nodes (2.49 seconds)
Cbc0010I After 7 nodes, 6 on tree, -42.21024 best solution, best possible -47.226246 (3.25 seconds)
Cbc0010I After 28 nodes, 7 on tree, -42.21024 best solution, best possible -47.226246 (4.01 seconds)
Cbc0038I Full problem 104 rows 116 columns, reduced to 56 rows 60 columns
Cbc0010I After 41 nodes, 6 on tree, -42.21024 best solution, best possible -47.226246 (4.74 seconds)
Cbc0001I Search completed - best objective -42.21024, took 7476 iterations and 54 nodes (5.14 seconds)
Cbc0032I Strong branching done 660 times (15408 iterations), fathomed 4 nodes and fixed 2 variables
Cbc0035I Maximum depth 13, 149 variables fixed on reduced cost
Total time (CPU seconds):       3.61   (Wallclock seconds):       5.15

