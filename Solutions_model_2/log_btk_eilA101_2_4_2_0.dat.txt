Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 99 (-4) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 6.2232e-05 - average 3.36389e-07, 7 fixed columns
Coin0506I Presolve 170 (-15) rows, 91 (-8) columns and 514 (-46) elements
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 0.25564297 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 38.067338
Clp0000I Optimal - objective value 38.067338
Coin0511I After Postsolve, objective 38.067338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.067338
Clp0000I Optimal - objective value 38.067338
Clp0000I Optimal - objective value 38.067338
Coin0511I After Postsolve, objective 38.067338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.06733771 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 99 columns (98 integer (98 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.929%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 63 integers unsatisfied sum - 14.685
Cbc0038I Solution found of 7.92286
Cbc0038I Relaxing continuous gives -1.14693
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 99 columns, reduced to 119 rows 64 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4.83906
Cbc0038I Pass   1: suminf.    1.18632 (47) obj. -4.83906 iterations 66
Cbc0038I Pass   2: suminf.    1.71026 (4) obj. -6.32052 iterations 53
Cbc0038I Pass   3: suminf.    1.29394 (6) obj. -8.12912 iterations 3
Cbc0038I Pass   4: suminf.    1.13504 (3) obj. -4.83906 iterations 11
Cbc0038I Pass   5: suminf.    1.07533 (3) obj. -4.83906 iterations 6
Cbc0038I Pass   6: suminf.    0.92059 (5) obj. -4.83906 iterations 1
Cbc0038I Pass   7: suminf.    0.94894 (3) obj. -4.83906 iterations 6
Cbc0038I Pass   8: suminf.    0.42812 (3) obj. -4.83906 iterations 3
Cbc0038I Pass   9: suminf.    0.61216 (2) obj. -4.83906 iterations 4
Cbc0038I Pass  10: suminf.    0.61010 (2) obj. -4.83906 iterations 1
Cbc0038I Pass  11: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  12: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  13: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  14: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  15: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Pass  16: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  17: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  18: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  19: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  20: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Pass  21: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  22: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  23: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  24: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  25: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Pass  26: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  27: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  28: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  29: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  30: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Rounding solution of -11.7219 is better than previous of -1.14693

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 99 columns, reduced to 138 rows 74 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -16.9911
Cbc0038I Pass  30: suminf.    4.94471 (47) obj. -16.9911 iterations 0
Cbc0038I Pass  31: suminf.    4.35212 (32) obj. -16.9911 iterations 27
Cbc0038I Pass  32: suminf.    4.35299 (23) obj. -16.9911 iterations 8
Cbc0038I Pass  33: suminf.    3.07460 (11) obj. -16.9911 iterations 26
Cbc0038I Pass  34: suminf.    2.62722 (10) obj. -16.9911 iterations 7
Cbc0038I Pass  35: suminf.    2.33335 (9) obj. -16.9911 iterations 16
Cbc0038I Pass  36: suminf.    2.33335 (9) obj. -16.9911 iterations 0
Cbc0038I Pass  37: suminf.    2.35383 (7) obj. -16.9911 iterations 11
Cbc0038I Pass  38: suminf.    1.67865 (6) obj. -16.9911 iterations 3
Cbc0038I Pass  39: suminf.    1.68784 (6) obj. -16.9911 iterations 10
Cbc0038I Pass  40: suminf.    1.68784 (6) obj. -16.9911 iterations 0
Cbc0038I Pass  41: suminf.    1.78650 (7) obj. -16.9911 iterations 15
Cbc0038I Pass  42: suminf.    1.78276 (7) obj. -16.9911 iterations 4
Cbc0038I Pass  43: suminf.    1.87731 (5) obj. -16.9911 iterations 8
Cbc0038I Pass  44: suminf.    1.86016 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  45: suminf.    1.78287 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  46: suminf.    1.78287 (5) obj. -16.9911 iterations 0
Cbc0038I Pass  47: suminf.    1.46799 (5) obj. -16.9911 iterations 4
Cbc0038I Pass  48: suminf.    1.33688 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  49: suminf.    1.79418 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  50: suminf.    1.78276 (7) obj. -16.9911 iterations 3
Cbc0038I Pass  51: suminf.    1.87731 (5) obj. -16.9911 iterations 8
Cbc0038I Pass  52: suminf.    1.86016 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  53: suminf.    1.78287 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  54: suminf.    1.78287 (5) obj. -16.9911 iterations 0
Cbc0038I Pass  55: suminf.    1.46799 (5) obj. -16.9911 iterations 4
Cbc0038I Pass  56: suminf.    1.33688 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  57: suminf.    1.79418 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  58: suminf.    1.78276 (7) obj. -16.9911 iterations 3
Cbc0038I Pass  59: suminf.    1.87731 (5) obj. -16.9911 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 99 columns, reduced to 138 rows 74 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -11.7219 - took 0.03 seconds
Cbc0012I Integer solution of -11.721894 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 185 rows 99 columns, reduced to 123 rows 67 columns - 5 fixed gives 96, 62 - ok now
Cbc0038I Full problem 185 rows 99 columns, reduced to 96 rows 62 columns
Cbc0012I Integer solution of -12.607169 found by RINS after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 34 added rows had average density of 46.470588
Cbc0013I At root node, 34 cuts changed objective from -38.067338 to -30.877491 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23796 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3097 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.607169 best solution, best possible -30.877491 (1.75 seconds)
Cbc0038I Full problem 185 rows 99 columns, reduced to 12 rows 16 columns
Cbc0016I Integer solution of -13.266125 found by strong branching after 14292 iterations and 46 nodes (2.11 seconds)
Cbc0004I Integer solution of -13.304465 found after 14412 iterations and 54 nodes (2.12 seconds)
Cbc0038I Full problem 185 rows 99 columns, reduced to 36 rows 27 columns
Cbc0012I Integer solution of -13.70687 found by RINS after 15212 iterations and 91 nodes (2.25 seconds)
Cbc0012I Integer solution of -13.893829 found by rounding after 17172 iterations and 160 nodes (2.43 seconds)
Cbc0010I After 177 nodes, 8 on tree, -13.893829 best solution, best possible -30.877491 (2.46 seconds)
Cbc0001I Search completed - best objective -13.893829, took 18569 iterations and 186 nodes (2.49 seconds)
Cbc0032I Strong branching done 1780 times (31511 iterations), fathomed 19 nodes and fixed 84 variables
Cbc0035I Maximum depth 41, 354 variables fixed on reduced cost
Total time (CPU seconds):       2.40   (Wallclock seconds):       2.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-65) rows, 150 (-52) columns and 2954 (-2699) elements
Clp1000I sum of infeasibilities 2.58855e-07 - average 1.86227e-09, 33 fixed columns
Coin0506I Presolve 106 (-33) rows, 114 (-36) columns and 1785 (-1169) elements
Clp0006I 0  Obj 41.702892 Dual inf 6.2688957 (113)
Clp0029I End of values pass after 114 iterations
Clp0014I Perturbing problem by 0.001% of 2.1342654 - largest nonzero change 2.1033435e-05 ( 0.0017128079%) - largest zero change 2.8980166e-05
Clp0000I Optimal - objective value 53.443416
Clp0000I Optimal - objective value 53.443416
Coin0511I After Postsolve, objective 53.443416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.443416
Clp0000I Optimal - objective value 53.443416
Clp0000I Optimal - objective value 53.443416
Clp0000I Optimal - objective value 53.443416
Coin0511I After Postsolve, objective 53.443416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.44341558 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 150 columns (150 integer (150 of which binary)) and 2956 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 8.06474
Cbc0038I Pass   1: suminf.    2.51093 (31) obj. -34.3474 iterations 19
Cbc0038I Pass   2: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass   3: suminf.    1.04750 (17) obj. -17.3544 iterations 14
Cbc0038I Pass   4: suminf.    0.12366 (4) obj. -3.44613 iterations 13
Cbc0038I Solution found of 2.34688
Cbc0038I Rounding solution of -5.10768 is better than previous of 2.34688

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -9.67031
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass   6: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass   7: suminf.    0.37917 (5) obj. -9.67031 iterations 31
Cbc0038I Pass   8: suminf.    0.36732 (5) obj. -9.70587 iterations 2
Cbc0038I Pass   9: suminf.    1.05407 (17) obj. -9.67031 iterations 5
Cbc0038I Pass  10: suminf.    0.67689 (4) obj. -9.67031 iterations 2
Cbc0038I Pass  11: suminf.    0.35557 (4) obj. -10.6343 iterations 1
Cbc0038I Pass  12: suminf.    1.70841 (17) obj. -9.67031 iterations 35
Cbc0038I Pass  13: suminf.    1.50882 (29) obj. -9.67031 iterations 11
Cbc0038I Pass  14: suminf.    2.39344 (18) obj. -9.67031 iterations 17
Cbc0038I Pass  15: suminf.    2.30367 (17) obj. -9.67031 iterations 6
Cbc0038I Pass  16: suminf.    1.92702 (13) obj. -9.67031 iterations 33
Cbc0038I Pass  17: suminf.    1.92702 (13) obj. -9.67031 iterations 2
Cbc0038I Pass  18: suminf.    2.73106 (13) obj. -9.67031 iterations 14
Cbc0038I Pass  19: suminf.    2.19433 (12) obj. -9.67031 iterations 8
Cbc0038I Pass  20: suminf.    2.88323 (15) obj. -9.67031 iterations 15
Cbc0038I Pass  21: suminf.    2.29433 (12) obj. -9.67031 iterations 14
Cbc0038I Pass  22: suminf.    2.88323 (15) obj. -9.67031 iterations 16
Cbc0038I Pass  23: suminf.    2.04708 (12) obj. -9.67031 iterations 13
Cbc0038I Pass  24: suminf.    2.76279 (20) obj. -9.67031 iterations 41
Cbc0038I Pass  25: suminf.    2.27640 (18) obj. -9.67031 iterations 7
Cbc0038I Pass  26: suminf.    2.27321 (18) obj. -14.2505 iterations 1
Cbc0038I Pass  27: suminf.    1.62717 (12) obj. -9.67031 iterations 22
Cbc0038I Pass  28: suminf.    1.62717 (12) obj. -9.67031 iterations 1
Cbc0038I Pass  29: suminf.    1.74283 (12) obj. -9.67031 iterations 12
Cbc0038I Pass  30: suminf.    1.74283 (12) obj. -9.67031 iterations 4
Cbc0038I Pass  31: suminf.    1.62717 (12) obj. -9.67031 iterations 5
Cbc0038I Pass  32: suminf.    2.96813 (20) obj. -9.67031 iterations 24
Cbc0038I Pass  33: suminf.    2.01253 (16) obj. -9.67031 iterations 9
Cbc0038I Pass  34: suminf.    1.93201 (13) obj. -9.67031 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 12 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 2.34688 to -5.16125 (0.07 seconds)
Cbc0038I Round again with cutoff of -17.8829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass  35: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass  36: suminf.    0.83542 (12) obj. -17.8829 iterations 24
Cbc0038I Pass  37: suminf.    0.69964 (12) obj. -18.2902 iterations 2
Cbc0038I Pass  38: suminf.    2.82939 (24) obj. -17.8829 iterations 14
Cbc0038I Pass  39: suminf.    2.82939 (24) obj. -17.8829 iterations 0
Cbc0038I Pass  40: suminf.    2.17146 (20) obj. -17.8829 iterations 24
Cbc0038I Pass  41: suminf.    2.17146 (20) obj. -17.8829 iterations 1
Cbc0038I Pass  42: suminf.    2.22037 (17) obj. -17.8829 iterations 17
Cbc0038I Pass  43: suminf.    2.22037 (17) obj. -17.8829 iterations 1
Cbc0038I Pass  44: suminf.    2.84350 (17) obj. -17.8829 iterations 18
Cbc0038I Pass  45: suminf.    2.79335 (19) obj. -17.8829 iterations 4
Cbc0038I Pass  46: suminf.    2.84989 (21) obj. -17.8829 iterations 16
Cbc0038I Pass  47: suminf.    2.75125 (19) obj. -17.8829 iterations 2
Cbc0038I Pass  48: suminf.    2.75125 (19) obj. -17.8829 iterations 5
Cbc0038I Pass  49: suminf.    5.35218 (21) obj. -17.8829 iterations 20
Cbc0038I Pass  50: suminf.    4.88013 (21) obj. -17.8829 iterations 6
Cbc0038I Pass  51: suminf.    3.58446 (20) obj. -17.8829 iterations 11
Cbc0038I Pass  52: suminf.    2.75125 (19) obj. -17.8829 iterations 9
Cbc0038I Pass  53: suminf.    2.75125 (19) obj. -17.8829 iterations 5
Cbc0038I Pass  54: suminf.    5.35218 (21) obj. -17.8829 iterations 19
Cbc0038I Pass  55: suminf.    4.88013 (21) obj. -17.8829 iterations 6
Cbc0038I Pass  56: suminf.    3.55446 (21) obj. -17.8829 iterations 10
Cbc0038I Pass  57: suminf.    2.34821 (17) obj. -17.8829 iterations 10
Cbc0038I Pass  58: suminf.    2.34821 (17) obj. -17.8829 iterations 1
Cbc0038I Pass  59: suminf.    2.79335 (19) obj. -17.8829 iterations 12
Cbc0038I Pass  60: suminf.    2.79335 (19) obj. -17.8829 iterations 2
Cbc0038I Pass  61: suminf.    4.81159 (21) obj. -17.8829 iterations 18
Cbc0038I Pass  62: suminf.    4.81159 (21) obj. -17.8829 iterations 0
Cbc0038I Pass  63: suminf.    3.55446 (21) obj. -17.8829 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.16125 - took 0.06 seconds
Cbc0012I Integer solution of -5.161245 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 10 rows 13 columns
Cbc0031I 67 added rows had average density of 32.880597
Cbc0013I At root node, 67 cuts changed objective from -50.733054 to -18.658124 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10039 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1836 row cuts average 137.1 elements, 0 column cuts (0 active)  in 0.228 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 798 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1380 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.367 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.161245 best solution, best possible -18.658124 (2.40 seconds)
Cbc0012I Integer solution of -10.383724 found by rounding after 4715 iterations and 1 nodes (2.41 seconds)
Cbc0012I Integer solution of -12.583029 found by DiveCoefficient after 4715 iterations and 1 nodes (2.41 seconds)
Cbc0016I Integer solution of -13.893829 found by strong branching after 4815 iterations and 1 nodes (2.43 seconds)
Cbc0010I After 12 nodes, 9 on tree, -13.893829 best solution, best possible -18.212177 (3.13 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 49 rows 61 columns
Cbc0010I After 42 nodes, 5 on tree, -13.893829 best solution, best possible -18.212177 (3.83 seconds)
Cbc0010I After 81 nodes, 2 on tree, -13.893829 best solution, best possible -18.212177 (4.56 seconds)
Cbc0001I Search completed - best objective -13.893829, took 9888 iterations and 84 nodes (4.57 seconds)
Cbc0032I Strong branching done 1232 times (26423 iterations), fathomed 10 nodes and fixed 18 variables
Cbc0035I Maximum depth 18, 237 variables fixed on reduced cost
Total time (CPU seconds):       3.98   (Wallclock seconds):       4.60

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 99 (-4) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 6.2232e-05 - average 3.36389e-07, 7 fixed columns
Coin0506I Presolve 170 (-15) rows, 91 (-8) columns and 514 (-46) elements
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 0.25564297 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 38.067338
Clp0000I Optimal - objective value 38.067338
Coin0511I After Postsolve, objective 38.067338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.067338
Clp0000I Optimal - objective value 38.067338
Clp0000I Optimal - objective value 38.067338
Coin0511I After Postsolve, objective 38.067338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.06733771 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 99 columns (98 integer (98 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.929%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 63 integers unsatisfied sum - 14.685
Cbc0038I Solution found of 7.92286
Cbc0038I Relaxing continuous gives -1.14693
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 99 columns, reduced to 119 rows 64 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4.83906
Cbc0038I Pass   1: suminf.    1.18632 (47) obj. -4.83906 iterations 66
Cbc0038I Pass   2: suminf.    1.71026 (4) obj. -6.32052 iterations 53
Cbc0038I Pass   3: suminf.    1.29394 (6) obj. -8.12912 iterations 3
Cbc0038I Pass   4: suminf.    1.13504 (3) obj. -4.83906 iterations 11
Cbc0038I Pass   5: suminf.    1.07533 (3) obj. -4.83906 iterations 6
Cbc0038I Pass   6: suminf.    0.92059 (5) obj. -4.83906 iterations 1
Cbc0038I Pass   7: suminf.    0.94894 (3) obj. -4.83906 iterations 6
Cbc0038I Pass   8: suminf.    0.42812 (3) obj. -4.83906 iterations 3
Cbc0038I Pass   9: suminf.    0.61216 (2) obj. -4.83906 iterations 4
Cbc0038I Pass  10: suminf.    0.61010 (2) obj. -4.83906 iterations 1
Cbc0038I Pass  11: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  12: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  13: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  14: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  15: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Pass  16: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  17: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  18: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  19: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  20: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Pass  21: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  22: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  23: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  24: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  25: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Pass  26: suminf.    0.47132 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  27: suminf.    0.47132 (3) obj. -4.83906 iterations 0
Cbc0038I Pass  28: suminf.    1.18557 (3) obj. -4.83906 iterations 5
Cbc0038I Pass  29: suminf.    0.85230 (3) obj. -4.83906 iterations 2
Cbc0038I Pass  30: suminf.    0.61010 (2) obj. -4.83906 iterations 2
Cbc0038I Rounding solution of -11.7219 is better than previous of -1.14693

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 99 columns, reduced to 138 rows 74 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -16.9911
Cbc0038I Pass  30: suminf.    4.94471 (47) obj. -16.9911 iterations 0
Cbc0038I Pass  31: suminf.    4.35212 (32) obj. -16.9911 iterations 27
Cbc0038I Pass  32: suminf.    4.35299 (23) obj. -16.9911 iterations 8
Cbc0038I Pass  33: suminf.    3.07460 (11) obj. -16.9911 iterations 26
Cbc0038I Pass  34: suminf.    2.62722 (10) obj. -16.9911 iterations 7
Cbc0038I Pass  35: suminf.    2.33335 (9) obj. -16.9911 iterations 16
Cbc0038I Pass  36: suminf.    2.33335 (9) obj. -16.9911 iterations 0
Cbc0038I Pass  37: suminf.    2.35383 (7) obj. -16.9911 iterations 11
Cbc0038I Pass  38: suminf.    1.67865 (6) obj. -16.9911 iterations 3
Cbc0038I Pass  39: suminf.    1.68784 (6) obj. -16.9911 iterations 10
Cbc0038I Pass  40: suminf.    1.68784 (6) obj. -16.9911 iterations 0
Cbc0038I Pass  41: suminf.    1.78650 (7) obj. -16.9911 iterations 15
Cbc0038I Pass  42: suminf.    1.78276 (7) obj. -16.9911 iterations 4
Cbc0038I Pass  43: suminf.    1.87731 (5) obj. -16.9911 iterations 8
Cbc0038I Pass  44: suminf.    1.86016 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  45: suminf.    1.78287 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  46: suminf.    1.78287 (5) obj. -16.9911 iterations 0
Cbc0038I Pass  47: suminf.    1.46799 (5) obj. -16.9911 iterations 4
Cbc0038I Pass  48: suminf.    1.33688 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  49: suminf.    1.79418 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  50: suminf.    1.78276 (7) obj. -16.9911 iterations 3
Cbc0038I Pass  51: suminf.    1.87731 (5) obj. -16.9911 iterations 8
Cbc0038I Pass  52: suminf.    1.86016 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  53: suminf.    1.78287 (5) obj. -16.9911 iterations 3
Cbc0038I Pass  54: suminf.    1.78287 (5) obj. -16.9911 iterations 0
Cbc0038I Pass  55: suminf.    1.46799 (5) obj. -16.9911 iterations 4
Cbc0038I Pass  56: suminf.    1.33688 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  57: suminf.    1.79418 (6) obj. -16.9911 iterations 4
Cbc0038I Pass  58: suminf.    1.78276 (7) obj. -16.9911 iterations 3
Cbc0038I Pass  59: suminf.    1.87731 (5) obj. -16.9911 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 99 columns, reduced to 138 rows 74 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -11.7219 - took 0.02 seconds
Cbc0012I Integer solution of -11.721894 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 185 rows 99 columns, reduced to 123 rows 67 columns - 5 fixed gives 96, 62 - ok now
Cbc0038I Full problem 185 rows 99 columns, reduced to 96 rows 62 columns
Cbc0012I Integer solution of -12.607169 found by RINS after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 34 added rows had average density of 46.470588
Cbc0013I At root node, 34 cuts changed objective from -38.067338 to -30.877491 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23796 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3097 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.607169 best solution, best possible -30.877491 (1.56 seconds)
Cbc0038I Full problem 185 rows 99 columns, reduced to 12 rows 16 columns
Cbc0016I Integer solution of -13.266125 found by strong branching after 14292 iterations and 46 nodes (1.89 seconds)
Cbc0004I Integer solution of -13.304465 found after 14412 iterations and 54 nodes (1.90 seconds)
Cbc0038I Full problem 185 rows 99 columns, reduced to 36 rows 27 columns
Cbc0012I Integer solution of -13.70687 found by RINS after 15212 iterations and 91 nodes (2.02 seconds)
Cbc0012I Integer solution of -13.893829 found by rounding after 17172 iterations and 160 nodes (2.18 seconds)
Cbc0001I Search completed - best objective -13.893829, took 18569 iterations and 186 nodes (2.24 seconds)
Cbc0032I Strong branching done 1780 times (31511 iterations), fathomed 19 nodes and fixed 84 variables
Cbc0035I Maximum depth 41, 354 variables fixed on reduced cost
Total time (CPU seconds):       2.20   (Wallclock seconds):       2.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-66) rows, 150 (-53) columns and 2954 (-2700) elements
Clp1000I sum of infeasibilities 2.58855e-07 - average 1.86227e-09, 33 fixed columns
Coin0506I Presolve 106 (-33) rows, 114 (-36) columns and 1785 (-1169) elements
Clp0006I 0  Obj 41.702892 Dual inf 6.2688957 (113)
Clp0029I End of values pass after 114 iterations
Clp0014I Perturbing problem by 0.001% of 2.1342654 - largest nonzero change 2.1033435e-05 ( 0.0017128079%) - largest zero change 2.8980166e-05
Clp0000I Optimal - objective value 53.443416
Clp0000I Optimal - objective value 53.443416
Coin0511I After Postsolve, objective 53.443416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.443416
Clp0000I Optimal - objective value 53.443416
Clp0000I Optimal - objective value 53.443416
Clp0000I Optimal - objective value 53.443416
Coin0511I After Postsolve, objective 53.443416, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.44341558 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 150 columns (150 integer (150 of which binary)) and 2956 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 8.06474
Cbc0038I Pass   1: suminf.    2.51093 (31) obj. -34.3474 iterations 19
Cbc0038I Pass   2: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass   3: suminf.    1.04750 (17) obj. -17.3544 iterations 14
Cbc0038I Pass   4: suminf.    0.12366 (4) obj. -3.44613 iterations 13
Cbc0038I Solution found of 2.34688
Cbc0038I Rounding solution of -5.10768 is better than previous of 2.34688

Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -9.67031
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass   6: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass   7: suminf.    0.37917 (5) obj. -9.67031 iterations 31
Cbc0038I Pass   8: suminf.    0.36732 (5) obj. -9.70587 iterations 2
Cbc0038I Pass   9: suminf.    1.05407 (17) obj. -9.67031 iterations 5
Cbc0038I Pass  10: suminf.    0.67689 (4) obj. -9.67031 iterations 2
Cbc0038I Pass  11: suminf.    0.35557 (4) obj. -10.6343 iterations 1
Cbc0038I Pass  12: suminf.    1.70841 (17) obj. -9.67031 iterations 35
Cbc0038I Pass  13: suminf.    1.50882 (29) obj. -9.67031 iterations 11
Cbc0038I Pass  14: suminf.    2.39344 (18) obj. -9.67031 iterations 17
Cbc0038I Pass  15: suminf.    2.30367 (17) obj. -9.67031 iterations 6
Cbc0038I Pass  16: suminf.    1.92702 (13) obj. -9.67031 iterations 33
Cbc0038I Pass  17: suminf.    1.92702 (13) obj. -9.67031 iterations 2
Cbc0038I Pass  18: suminf.    2.73106 (13) obj. -9.67031 iterations 14
Cbc0038I Pass  19: suminf.    2.19433 (12) obj. -9.67031 iterations 8
Cbc0038I Pass  20: suminf.    2.88323 (15) obj. -9.67031 iterations 15
Cbc0038I Pass  21: suminf.    2.29433 (12) obj. -9.67031 iterations 14
Cbc0038I Pass  22: suminf.    2.88323 (15) obj. -9.67031 iterations 16
Cbc0038I Pass  23: suminf.    2.04708 (12) obj. -9.67031 iterations 13
Cbc0038I Pass  24: suminf.    2.76279 (20) obj. -9.67031 iterations 41
Cbc0038I Pass  25: suminf.    2.27640 (18) obj. -9.67031 iterations 7
Cbc0038I Pass  26: suminf.    2.27321 (18) obj. -14.2505 iterations 1
Cbc0038I Pass  27: suminf.    1.62717 (12) obj. -9.67031 iterations 22
Cbc0038I Pass  28: suminf.    1.62717 (12) obj. -9.67031 iterations 1
Cbc0038I Pass  29: suminf.    1.74283 (12) obj. -9.67031 iterations 12
Cbc0038I Pass  30: suminf.    1.74283 (12) obj. -9.67031 iterations 4
Cbc0038I Pass  31: suminf.    1.62717 (12) obj. -9.67031 iterations 5
Cbc0038I Pass  32: suminf.    2.96813 (20) obj. -9.67031 iterations 24
Cbc0038I Pass  33: suminf.    2.01253 (16) obj. -9.67031 iterations 9
Cbc0038I Pass  34: suminf.    1.93201 (13) obj. -9.67031 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 150 columns, reduced to 12 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 2.34688 to -5.16125 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.8829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass  35: suminf.    2.51093 (31) obj. -34.3474 iterations 0
Cbc0038I Pass  36: suminf.    0.83542 (12) obj. -17.8829 iterations 24
Cbc0038I Pass  37: suminf.    0.69964 (12) obj. -18.2902 iterations 2
Cbc0038I Pass  38: suminf.    2.82939 (24) obj. -17.8829 iterations 14
Cbc0038I Pass  39: suminf.    2.82939 (24) obj. -17.8829 iterations 0
Cbc0038I Pass  40: suminf.    2.17146 (20) obj. -17.8829 iterations 24
Cbc0038I Pass  41: suminf.    2.17146 (20) obj. -17.8829 iterations 1
Cbc0038I Pass  42: suminf.    2.22037 (17) obj. -17.8829 iterations 17
Cbc0038I Pass  43: suminf.    2.22037 (17) obj. -17.8829 iterations 1
Cbc0038I Pass  44: suminf.    2.84350 (17) obj. -17.8829 iterations 18
Cbc0038I Pass  45: suminf.    2.79335 (19) obj. -17.8829 iterations 4
Cbc0038I Pass  46: suminf.    2.84989 (21) obj. -17.8829 iterations 16
Cbc0038I Pass  47: suminf.    2.75125 (19) obj. -17.8829 iterations 2
Cbc0038I Pass  48: suminf.    2.75125 (19) obj. -17.8829 iterations 5
Cbc0038I Pass  49: suminf.    5.35218 (21) obj. -17.8829 iterations 20
Cbc0038I Pass  50: suminf.    4.88013 (21) obj. -17.8829 iterations 6
Cbc0038I Pass  51: suminf.    3.58446 (20) obj. -17.8829 iterations 11
Cbc0038I Pass  52: suminf.    2.75125 (19) obj. -17.8829 iterations 9
Cbc0038I Pass  53: suminf.    2.75125 (19) obj. -17.8829 iterations 5
Cbc0038I Pass  54: suminf.    5.35218 (21) obj. -17.8829 iterations 19
Cbc0038I Pass  55: suminf.    4.88013 (21) obj. -17.8829 iterations 6
Cbc0038I Pass  56: suminf.    3.55446 (21) obj. -17.8829 iterations 10
Cbc0038I Pass  57: suminf.    2.34821 (17) obj. -17.8829 iterations 10
Cbc0038I Pass  58: suminf.    2.34821 (17) obj. -17.8829 iterations 1
Cbc0038I Pass  59: suminf.    2.79335 (19) obj. -17.8829 iterations 12
Cbc0038I Pass  60: suminf.    2.79335 (19) obj. -17.8829 iterations 2
Cbc0038I Pass  61: suminf.    4.81159 (21) obj. -17.8829 iterations 18
Cbc0038I Pass  62: suminf.    4.81159 (21) obj. -17.8829 iterations 0
Cbc0038I Pass  63: suminf.    3.55446 (21) obj. -17.8829 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.16125 - took 0.06 seconds
Cbc0012I Integer solution of -5.161245 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 10 rows 13 columns
Cbc0031I 67 added rows had average density of 32.880597
Cbc0013I At root node, 67 cuts changed objective from -50.733054 to -18.658124 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10039 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1836 row cuts average 137.1 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 798 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1380 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.380 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.161245 best solution, best possible -18.658124 (2.31 seconds)
Cbc0012I Integer solution of -10.383724 found by rounding after 4715 iterations and 1 nodes (2.32 seconds)
Cbc0012I Integer solution of -12.583029 found by DiveCoefficient after 4715 iterations and 1 nodes (2.32 seconds)
Cbc0016I Integer solution of -13.893829 found by strong branching after 4815 iterations and 1 nodes (2.33 seconds)
Cbc0010I After 16 nodes, 8 on tree, -13.893829 best solution, best possible -18.212177 (3.01 seconds)
Cbc0038I Full problem 139 rows 150 columns, reduced to 49 rows 61 columns
Cbc0010I After 50 nodes, 7 on tree, -13.893829 best solution, best possible -18.212177 (3.71 seconds)
Cbc0001I Search completed - best objective -13.893829, took 9888 iterations and 84 nodes (4.35 seconds)
Cbc0032I Strong branching done 1232 times (26423 iterations), fathomed 10 nodes and fixed 18 variables
Cbc0035I Maximum depth 18, 237 variables fixed on reduced cost
Total time (CPU seconds):       3.81   (Wallclock seconds):       4.38

