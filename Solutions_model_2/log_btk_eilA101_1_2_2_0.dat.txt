Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 176 (-29) rows, 99 (-4) columns and 542 (-61) elements
Clp1000I sum of infeasibilities 4.38387e-05 - average 2.49084e-07, 11 fixed columns
Coin0506I Presolve 154 (-22) rows, 88 (-11) columns and 476 (-66) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.26277924 - largest nonzero change 0 ( 0%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value 37.102379
Clp0000I Optimal - objective value 37.102379
Coin0511I After Postsolve, objective 37.102379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.102379
Clp0000I Optimal - objective value 37.102379
Clp0000I Optimal - objective value 37.102379
Coin0511I After Postsolve, objective 37.102379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.10237861 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 176 rows, 99 columns (98 integer (98 of which binary)) and 542 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 14.7018
Cbc0038I Solution found of 8.42566
Cbc0038I Relaxing continuous gives -3.10937
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 99 columns, reduced to 114 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -6.50876
Cbc0038I Pass   1: suminf.    1.25524 (51) obj. -6.50876 iterations 61
Cbc0038I Pass   2: suminf.    1.84566 (11) obj. -6.50876 iterations 54
Cbc0038I Pass   3: suminf.    1.74850 (10) obj. -6.50876 iterations 1
Cbc0038I Pass   4: suminf.    3.40095 (13) obj. -6.50876 iterations 28
Cbc0038I Pass   5: suminf.    1.80105 (6) obj. -6.50876 iterations 23
Cbc0038I Pass   6: suminf.    1.77927 (6) obj. -6.50876 iterations 4
Cbc0038I Pass   7: suminf.    1.55556 (8) obj. -6.50876 iterations 6
Cbc0038I Pass   8: suminf.    1.55556 (8) obj. -6.50876 iterations 0
Cbc0038I Pass   9: suminf.    1.90222 (8) obj. -6.50876 iterations 10
Cbc0038I Pass  10: suminf.    2.68538 (9) obj. -6.50876 iterations 21
Cbc0038I Pass  11: suminf.    2.40547 (8) obj. -6.50876 iterations 6
Cbc0038I Pass  12: suminf.    1.25682 (5) obj. -6.50876 iterations 13
Cbc0038I Pass  13: suminf.    1.24983 (5) obj. -6.50876 iterations 2
Cbc0038I Pass  14: suminf.    1.43990 (5) obj. -6.50876 iterations 10
Cbc0038I Pass  15: suminf.    1.41103 (7) obj. -6.50876 iterations 1
Cbc0038I Pass  16: suminf.    1.25077 (7) obj. -6.50876 iterations 1
Cbc0038I Pass  17: suminf.    2.50104 (10) obj. -6.50876 iterations 6
Cbc0038I Pass  18: suminf.    2.30873 (12) obj. -6.50876 iterations 3
Cbc0038I Pass  19: suminf.    2.70339 (7) obj. -6.50876 iterations 21
Cbc0038I Pass  20: suminf.    1.70080 (7) obj. -6.50876 iterations 6
Cbc0038I Pass  21: suminf.    1.70084 (7) obj. -6.50876 iterations 1
Cbc0038I Pass  22: suminf.    1.46897 (5) obj. -6.50876 iterations 7
Cbc0038I Pass  23: suminf.    1.27622 (4) obj. -6.50876 iterations 4
Cbc0038I Pass  24: suminf.    1.55627 (6) obj. -6.50876 iterations 11
Cbc0038I Pass  25: suminf.    1.46429 (9) obj. -6.50876 iterations 3
Cbc0038I Pass  26: suminf.    2.30243 (7) obj. -6.50876 iterations 16
Cbc0038I Pass  27: suminf.    2.03080 (7) obj. -6.50876 iterations 3
Cbc0038I Pass  28: suminf.    2.03080 (7) obj. -6.50876 iterations 0
Cbc0038I Pass  29: suminf.    1.47895 (7) obj. -6.50876 iterations 7
Cbc0038I Pass  30: suminf.    1.31090 (6) obj. -6.50876 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 99 columns, reduced to 135 rows 78 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -3.10937 - took 0.07 seconds
Cbc0012I Integer solution of -3.10937 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 176 rows 99 columns, reduced to 114 rows 66 columns
Cbc0012I Integer solution of -3.23358 found by RINS after 0 iterations and 0 nodes (0.15 seconds)
Cbc0031I 49 added rows had average density of 54.693878
Cbc0013I At root node, 49 cuts changed objective from -37.102379 to -28.760757 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24979 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3310 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.23358 best solution, best possible -28.760757 (1.88 seconds)
Cbc0012I Integer solution of -5.218247 found by rounding after 13930 iterations and 17 nodes (2.09 seconds)
Cbc0012I Integer solution of -5.39476 found by rounding after 14150 iterations and 25 nodes (2.10 seconds)
Cbc0012I Integer solution of -5.99823 found by rounding after 14326 iterations and 44 nodes (2.12 seconds)
Cbc0038I Full problem 176 rows 99 columns, reduced to 28 rows 28 columns
Cbc0001I Search completed - best objective -5.998229999999992, took 17021 iterations and 100 nodes (2.35 seconds)
Cbc0032I Strong branching done 1226 times (23760 iterations), fathomed 10 nodes and fixed 99 variables
Cbc0035I Maximum depth 18, 178 variables fixed on reduced cost
Total time (CPU seconds):       2.29   (Wallclock seconds):       2.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-74) rows, 150 (-52) columns and 2826 (-2827) elements
Clp1000I sum of infeasibilities 3.63262e-08 - average 2.79433e-10, 25 fixed columns
Coin0506I Presolve 109 (-21) rows, 125 (-25) columns and 2080 (-746) elements
Clp0006I 0  Obj 37.213492 Dual inf 6.4299819 (125)
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 1.8462787 - largest nonzero change 2.9639875e-05 ( 0.0026945801%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 53.387552
Clp0000I Optimal - objective value 53.387552
Coin0511I After Postsolve, objective 53.387552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.387552
Clp0000I Optimal - objective value 53.387552
Clp0000I Optimal - objective value 53.387552
Clp0000I Optimal - objective value 53.387552
Coin0511I After Postsolve, objective 53.387552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.38755223 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 150 columns (150 integer (150 of which binary)) and 2828 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.878%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.0494
Cbc0038I Pass   1: suminf.    3.63799 (39) obj. -30.8521 iterations 20
Cbc0038I Pass   2: suminf.    3.63799 (39) obj. -30.8521 iterations 1
Cbc0038I Pass   3: suminf.    1.90578 (25) obj. -14.2342 iterations 14
Cbc0038I Pass   4: suminf.    0.72416 (12) obj. -2.41581 iterations 13
Cbc0038I Pass   5: suminf.    0.08893 (2) obj. 9.77071 iterations 10
Cbc0038I Solution found of 12.6383
Cbc0038I Rounding solution of 10.502 is better than previous of 12.6383

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 150 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 5.38732
Cbc0038I Pass   6: suminf.    3.63799 (39) obj. -30.8521 iterations 0
Cbc0038I Pass   7: suminf.    3.63799 (39) obj. -30.8521 iterations 1
Cbc0038I Pass   8: suminf.    2.01689 (26) obj. -16.012 iterations 13
Cbc0038I Pass   9: suminf.    0.57956 (10) obj. -0.56041 iterations 16
Cbc0038I Pass  10: suminf.    0.80483 (9) obj. 5.38732 iterations 18
Cbc0038I Pass  11: suminf.    0.80483 (9) obj. 5.38732 iterations 0
Cbc0038I Pass  12: suminf.    1.06038 (6) obj. 5.38732 iterations 14
Cbc0038I Pass  13: suminf.    0.62328 (8) obj. 5.38732 iterations 5
Cbc0038I Pass  14: suminf.    0.67221 (7) obj. 5.38732 iterations 14
Cbc0038I Pass  15: suminf.    0.67221 (7) obj. 5.38732 iterations 1
Cbc0038I Pass  16: suminf.    1.17850 (4) obj. 5.38732 iterations 10
Cbc0038I Pass  17: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I Pass  18: suminf.    0.74527 (3) obj. 5.38732 iterations 6
Cbc0038I Pass  19: suminf.    0.71290 (3) obj. 5.2902 iterations 2
Cbc0038I Pass  20: suminf.    0.67221 (7) obj. 5.38732 iterations 8
Cbc0038I Pass  21: suminf.    0.67221 (7) obj. 5.38732 iterations 0
Cbc0038I Pass  22: suminf.    1.17850 (4) obj. 5.38732 iterations 11
Cbc0038I Pass  23: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I Pass  24: suminf.    0.74527 (3) obj. 5.38732 iterations 5
Cbc0038I Pass  25: suminf.    0.71290 (3) obj. 5.2902 iterations 2
Cbc0038I Pass  26: suminf.    0.67221 (7) obj. 5.38732 iterations 8
Cbc0038I Pass  27: suminf.    0.67221 (7) obj. 5.38732 iterations 0
Cbc0038I Pass  28: suminf.    1.17850 (4) obj. 5.38732 iterations 10
Cbc0038I Pass  29: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I Pass  30: suminf.    0.74527 (3) obj. 5.38732 iterations 5
Cbc0038I Pass  31: suminf.    0.71290 (3) obj. 5.2902 iterations 2
Cbc0038I Pass  32: suminf.    0.67221 (7) obj. 5.38732 iterations 8
Cbc0038I Pass  33: suminf.    0.67221 (7) obj. 5.38732 iterations 0
Cbc0038I Pass  34: suminf.    1.17850 (4) obj. 5.38732 iterations 10
Cbc0038I Pass  35: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 150 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 12.6383 to 9.22874 (0.06 seconds)
Cbc0038I Round again with cutoff of -3.81894
Cbc0038I Pass  35: suminf.    3.63799 (39) obj. -30.8521 iterations 0
Cbc0038I Pass  36: suminf.    3.63799 (39) obj. -30.8521 iterations 1
Cbc0038I Pass  37: suminf.    1.12694 (18) obj. -3.81894 iterations 37
Cbc0038I Pass  38: suminf.    1.53607 (11) obj. -3.81894 iterations 25
Cbc0038I Pass  39: suminf.    1.53607 (11) obj. -3.81894 iterations 0
Cbc0038I Pass  40: suminf.    1.15833 (8) obj. -3.81894 iterations 11
Cbc0038I Pass  41: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  42: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  43: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  44: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  45: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  46: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I Pass  47: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  48: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  49: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  50: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  51: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  52: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I Pass  53: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  54: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  55: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  56: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  57: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  58: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I Pass  59: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  60: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  61: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  62: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  63: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  64: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 9.22874 - took 0.05 seconds
Cbc0012I Integer solution of 9.228745 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 130 rows 150 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of 9.160895 found by DiveCoefficient after 7145 iterations and 0 nodes (2.25 seconds)
Cbc0031I 82 added rows had average density of 36.853659
Cbc0013I At root node, 82 cuts changed objective from -40.643968 to -9.3203659 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16492 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2235 row cuts average 143.8 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1020 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1447 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 83.8 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 94 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.297 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 9.160895 best solution, best possible -9.3203659 (2.43 seconds)
Cbc0012I Integer solution of -5.027195 found by rounding after 7243 iterations and 1 nodes (2.45 seconds)
Cbc0012I Integer solution of -5.218247 found by rounding after 7347 iterations and 2 nodes (2.46 seconds)
Cbc0012I Integer solution of -5.36319 found by DiveCoefficient after 7347 iterations and 2 nodes (2.46 seconds)
Cbc0012I Integer solution of -5.39476 found by DiveCoefficient after 7347 iterations and 2 nodes (2.46 seconds)
Cbc0010I After 23 nodes, 6 on tree, -5.39476 best solution, best possible -9.074235 (3.16 seconds)
Cbc0012I Integer solution of -5.99823 found by rounding after 8982 iterations and 35 nodes (3.32 seconds)
Cbc0001I Search completed - best objective -5.998229999999992, took 9251 iterations and 42 nodes (3.34 seconds)
Cbc0032I Strong branching done 582 times (15439 iterations), fathomed 6 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.09   (Wallclock seconds):       3.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 176 (-29) rows, 99 (-4) columns and 542 (-61) elements
Clp1000I sum of infeasibilities 4.38387e-05 - average 2.49084e-07, 11 fixed columns
Coin0506I Presolve 154 (-22) rows, 88 (-11) columns and 476 (-66) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.26277924 - largest nonzero change 0 ( 0%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value 37.102379
Clp0000I Optimal - objective value 37.102379
Coin0511I After Postsolve, objective 37.102379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.102379
Clp0000I Optimal - objective value 37.102379
Clp0000I Optimal - objective value 37.102379
Coin0511I After Postsolve, objective 37.102379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.10237861 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 176 rows, 99 columns (98 integer (98 of which binary)) and 542 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 14.7018
Cbc0038I Solution found of 8.42566
Cbc0038I Relaxing continuous gives -3.10937
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 99 columns, reduced to 114 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -6.50876
Cbc0038I Pass   1: suminf.    1.25524 (51) obj. -6.50876 iterations 61
Cbc0038I Pass   2: suminf.    1.84566 (11) obj. -6.50876 iterations 54
Cbc0038I Pass   3: suminf.    1.74850 (10) obj. -6.50876 iterations 1
Cbc0038I Pass   4: suminf.    3.40095 (13) obj. -6.50876 iterations 28
Cbc0038I Pass   5: suminf.    1.80105 (6) obj. -6.50876 iterations 23
Cbc0038I Pass   6: suminf.    1.77927 (6) obj. -6.50876 iterations 4
Cbc0038I Pass   7: suminf.    1.55556 (8) obj. -6.50876 iterations 6
Cbc0038I Pass   8: suminf.    1.55556 (8) obj. -6.50876 iterations 0
Cbc0038I Pass   9: suminf.    1.90222 (8) obj. -6.50876 iterations 10
Cbc0038I Pass  10: suminf.    2.68538 (9) obj. -6.50876 iterations 21
Cbc0038I Pass  11: suminf.    2.40547 (8) obj. -6.50876 iterations 6
Cbc0038I Pass  12: suminf.    1.25682 (5) obj. -6.50876 iterations 13
Cbc0038I Pass  13: suminf.    1.24983 (5) obj. -6.50876 iterations 2
Cbc0038I Pass  14: suminf.    1.43990 (5) obj. -6.50876 iterations 10
Cbc0038I Pass  15: suminf.    1.41103 (7) obj. -6.50876 iterations 1
Cbc0038I Pass  16: suminf.    1.25077 (7) obj. -6.50876 iterations 1
Cbc0038I Pass  17: suminf.    2.50104 (10) obj. -6.50876 iterations 6
Cbc0038I Pass  18: suminf.    2.30873 (12) obj. -6.50876 iterations 3
Cbc0038I Pass  19: suminf.    2.70339 (7) obj. -6.50876 iterations 21
Cbc0038I Pass  20: suminf.    1.70080 (7) obj. -6.50876 iterations 6
Cbc0038I Pass  21: suminf.    1.70084 (7) obj. -6.50876 iterations 1
Cbc0038I Pass  22: suminf.    1.46897 (5) obj. -6.50876 iterations 7
Cbc0038I Pass  23: suminf.    1.27622 (4) obj. -6.50876 iterations 4
Cbc0038I Pass  24: suminf.    1.55627 (6) obj. -6.50876 iterations 11
Cbc0038I Pass  25: suminf.    1.46429 (9) obj. -6.50876 iterations 3
Cbc0038I Pass  26: suminf.    2.30243 (7) obj. -6.50876 iterations 16
Cbc0038I Pass  27: suminf.    2.03080 (7) obj. -6.50876 iterations 3
Cbc0038I Pass  28: suminf.    2.03080 (7) obj. -6.50876 iterations 0
Cbc0038I Pass  29: suminf.    1.47895 (7) obj. -6.50876 iterations 7
Cbc0038I Pass  30: suminf.    1.31090 (6) obj. -6.50876 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 99 columns, reduced to 135 rows 78 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -3.10937 - took 0.07 seconds
Cbc0012I Integer solution of -3.10937 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 176 rows 99 columns, reduced to 114 rows 66 columns
Cbc0012I Integer solution of -3.23358 found by RINS after 0 iterations and 0 nodes (0.15 seconds)
Cbc0031I 49 added rows had average density of 54.693878
Cbc0013I At root node, 49 cuts changed objective from -37.102379 to -28.760757 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24979 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3310 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.23358 best solution, best possible -28.760757 (2.06 seconds)
Cbc0012I Integer solution of -5.218247 found by rounding after 13930 iterations and 17 nodes (2.29 seconds)
Cbc0012I Integer solution of -5.39476 found by rounding after 14150 iterations and 25 nodes (2.30 seconds)
Cbc0012I Integer solution of -5.99823 found by rounding after 14326 iterations and 44 nodes (2.32 seconds)
Cbc0038I Full problem 176 rows 99 columns, reduced to 28 rows 28 columns
Cbc0001I Search completed - best objective -5.998229999999992, took 17021 iterations and 100 nodes (2.59 seconds)
Cbc0032I Strong branching done 1226 times (23760 iterations), fathomed 10 nodes and fixed 99 variables
Cbc0035I Maximum depth 18, 178 variables fixed on reduced cost
Total time (CPU seconds):       2.50   (Wallclock seconds):       2.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-75) rows, 150 (-53) columns and 2826 (-2828) elements
Clp1000I sum of infeasibilities 3.63262e-08 - average 2.79433e-10, 25 fixed columns
Coin0506I Presolve 109 (-21) rows, 125 (-25) columns and 2080 (-746) elements
Clp0006I 0  Obj 37.213492 Dual inf 6.4299819 (125)
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 1.8462787 - largest nonzero change 2.9639875e-05 ( 0.0026945801%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 53.387552
Clp0000I Optimal - objective value 53.387552
Coin0511I After Postsolve, objective 53.387552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.387552
Clp0000I Optimal - objective value 53.387552
Clp0000I Optimal - objective value 53.387552
Clp0000I Optimal - objective value 53.387552
Coin0511I After Postsolve, objective 53.387552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.38755223 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 150 columns (150 integer (150 of which binary)) and 2828 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.878%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.0494
Cbc0038I Pass   1: suminf.    3.63799 (39) obj. -30.8521 iterations 20
Cbc0038I Pass   2: suminf.    3.63799 (39) obj. -30.8521 iterations 1
Cbc0038I Pass   3: suminf.    1.90578 (25) obj. -14.2342 iterations 14
Cbc0038I Pass   4: suminf.    0.72416 (12) obj. -2.41581 iterations 13
Cbc0038I Pass   5: suminf.    0.08893 (2) obj. 9.77071 iterations 10
Cbc0038I Solution found of 12.6383
Cbc0038I Rounding solution of 10.502 is better than previous of 12.6383

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 150 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 5.38732
Cbc0038I Pass   6: suminf.    3.63799 (39) obj. -30.8521 iterations 0
Cbc0038I Pass   7: suminf.    3.63799 (39) obj. -30.8521 iterations 1
Cbc0038I Pass   8: suminf.    2.01689 (26) obj. -16.012 iterations 13
Cbc0038I Pass   9: suminf.    0.57956 (10) obj. -0.56041 iterations 16
Cbc0038I Pass  10: suminf.    0.80483 (9) obj. 5.38732 iterations 18
Cbc0038I Pass  11: suminf.    0.80483 (9) obj. 5.38732 iterations 0
Cbc0038I Pass  12: suminf.    1.06038 (6) obj. 5.38732 iterations 14
Cbc0038I Pass  13: suminf.    0.62328 (8) obj. 5.38732 iterations 5
Cbc0038I Pass  14: suminf.    0.67221 (7) obj. 5.38732 iterations 14
Cbc0038I Pass  15: suminf.    0.67221 (7) obj. 5.38732 iterations 1
Cbc0038I Pass  16: suminf.    1.17850 (4) obj. 5.38732 iterations 10
Cbc0038I Pass  17: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I Pass  18: suminf.    0.74527 (3) obj. 5.38732 iterations 6
Cbc0038I Pass  19: suminf.    0.71290 (3) obj. 5.2902 iterations 2
Cbc0038I Pass  20: suminf.    0.67221 (7) obj. 5.38732 iterations 8
Cbc0038I Pass  21: suminf.    0.67221 (7) obj. 5.38732 iterations 0
Cbc0038I Pass  22: suminf.    1.17850 (4) obj. 5.38732 iterations 11
Cbc0038I Pass  23: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I Pass  24: suminf.    0.74527 (3) obj. 5.38732 iterations 5
Cbc0038I Pass  25: suminf.    0.71290 (3) obj. 5.2902 iterations 2
Cbc0038I Pass  26: suminf.    0.67221 (7) obj. 5.38732 iterations 8
Cbc0038I Pass  27: suminf.    0.67221 (7) obj. 5.38732 iterations 0
Cbc0038I Pass  28: suminf.    1.17850 (4) obj. 5.38732 iterations 10
Cbc0038I Pass  29: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I Pass  30: suminf.    0.74527 (3) obj. 5.38732 iterations 5
Cbc0038I Pass  31: suminf.    0.71290 (3) obj. 5.2902 iterations 2
Cbc0038I Pass  32: suminf.    0.67221 (7) obj. 5.38732 iterations 8
Cbc0038I Pass  33: suminf.    0.67221 (7) obj. 5.38732 iterations 0
Cbc0038I Pass  34: suminf.    1.17850 (4) obj. 5.38732 iterations 10
Cbc0038I Pass  35: suminf.    0.51951 (4) obj. 5.38732 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 150 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 12.6383 to 9.22874 (0.07 seconds)
Cbc0038I Round again with cutoff of -3.81894
Cbc0038I Pass  35: suminf.    3.63799 (39) obj. -30.8521 iterations 0
Cbc0038I Pass  36: suminf.    3.63799 (39) obj. -30.8521 iterations 1
Cbc0038I Pass  37: suminf.    1.12694 (18) obj. -3.81894 iterations 37
Cbc0038I Pass  38: suminf.    1.53607 (11) obj. -3.81894 iterations 25
Cbc0038I Pass  39: suminf.    1.53607 (11) obj. -3.81894 iterations 0
Cbc0038I Pass  40: suminf.    1.15833 (8) obj. -3.81894 iterations 11
Cbc0038I Pass  41: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  42: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  43: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  44: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  45: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  46: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I Pass  47: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  48: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  49: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  50: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  51: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  52: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I Pass  53: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  54: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  55: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  56: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  57: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  58: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I Pass  59: suminf.    1.15550 (8) obj. -3.8246 iterations 3
Cbc0038I Pass  60: suminf.    1.86803 (11) obj. -3.81894 iterations 12
Cbc0038I Pass  61: suminf.    1.86803 (11) obj. -3.81894 iterations 2
Cbc0038I Pass  62: suminf.    1.64097 (9) obj. -3.81894 iterations 9
Cbc0038I Pass  63: suminf.    1.64097 (9) obj. -3.81894 iterations 2
Cbc0038I Pass  64: suminf.    1.15833 (8) obj. -3.81894 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of 9.22874 - took 0.06 seconds
Cbc0012I Integer solution of 9.228745 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 150 columns, reduced to 12 rows 13 columns
Cbc0012I Integer solution of 9.160895 found by DiveCoefficient after 7145 iterations and 0 nodes (2.50 seconds)
Cbc0031I 82 added rows had average density of 36.853659
Cbc0013I At root node, 82 cuts changed objective from -40.643968 to -9.3203659 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16492 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2235 row cuts average 143.8 elements, 0 column cuts (0 active)  in 0.256 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1020 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1447 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 83.8 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 94 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.310 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 9.160895 best solution, best possible -9.3203659 (2.68 seconds)
Cbc0012I Integer solution of -5.027195 found by rounding after 7243 iterations and 1 nodes (2.69 seconds)
Cbc0012I Integer solution of -5.218247 found by rounding after 7347 iterations and 2 nodes (2.70 seconds)
Cbc0012I Integer solution of -5.36319 found by DiveCoefficient after 7347 iterations and 2 nodes (2.70 seconds)
Cbc0012I Integer solution of -5.39476 found by DiveCoefficient after 7347 iterations and 2 nodes (2.70 seconds)
Cbc0010I After 23 nodes, 6 on tree, -5.39476 best solution, best possible -9.074235 (3.40 seconds)
Cbc0012I Integer solution of -5.99823 found by rounding after 8982 iterations and 35 nodes (3.56 seconds)
Cbc0001I Search completed - best objective -5.998229999999992, took 9251 iterations and 42 nodes (3.58 seconds)
Cbc0032I Strong branching done 582 times (15439 iterations), fathomed 6 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.25   (Wallclock seconds):       3.61

