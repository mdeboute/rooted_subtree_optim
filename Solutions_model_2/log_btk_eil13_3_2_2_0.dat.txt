Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 13 (-2) columns and 57 (-18) elements
Clp1000I sum of infeasibilities 1.55615e-07 - average 8.19026e-09, 0 fixed columns
Coin0506I Presolve 19 (0) rows, 13 (0) columns and 57 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 1.244368 - largest nonzero change 0 ( 0%) - largest zero change 1.8387668e-05
Clp0000I Optimal - objective value 33.324214
Clp0000I Optimal - objective value 33.324214
Coin0511I After Postsolve, objective 33.324214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.324214
Clp0000I Optimal - objective value 33.324214
Clp0000I Optimal - objective value 33.324214
Coin0511I After Postsolve, objective 33.324214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.3242144 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.413%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.11645
Cbc0038I Pass   1: suminf.    0.22222 (1) obj. -14.3944 iterations 4
Cbc0038I Solution found of -1.6
Cbc0038I Relaxing continuous gives -1.6
Cbc0038I Rounding solution of -5.2 is better than previous of -1.6

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -5.2 to -8.1 (0.00 seconds)
Cbc0038I Round again with cutoff of -10.5
Cbc0038I Pass   2: suminf.    0.22222 (1) obj. -14.3944 iterations 0
Cbc0038I Pass   3: suminf.    0.51462 (3) obj. -10.5 iterations 3
Cbc0038I Pass   4: suminf.    0.52290 (2) obj. -10.5 iterations 3
Cbc0038I Pass   5: suminf.    0.52290 (2) obj. -10.5 iterations 0
Cbc0038I Pass   6: suminf.    0.11111 (1) obj. -11.2722 iterations 2
Cbc0038I Pass   7: suminf.    0.70445 (3) obj. -10.5 iterations 3
Cbc0038I Pass   8: suminf.    0.40196 (1) obj. -10.5 iterations 2
Cbc0038I Pass   9: suminf.    0.39231 (1) obj. -10.5 iterations 1
Cbc0038I Pass  10: suminf.    0.29350 (3) obj. -10.5 iterations 5
Cbc0038I Pass  11: suminf.    0.29308 (3) obj. -10.5 iterations 2
Cbc0038I Pass  12: suminf.    0.72165 (4) obj. -10.5 iterations 3
Cbc0038I Pass  13: suminf.    0.29308 (3) obj. -10.5 iterations 3
Cbc0038I Pass  14: suminf.    0.72165 (4) obj. -10.5 iterations 3
Cbc0038I Pass  15: suminf.    0.39231 (1) obj. -10.5 iterations 5
Cbc0038I Pass  16: suminf.    0.58697 (3) obj. -10.5 iterations 1
Cbc0038I Pass  17: suminf.    0.70445 (3) obj. -10.5 iterations 4
Cbc0038I Pass  18: suminf.    0.35223 (3) obj. -10.5 iterations 2
Cbc0038I Pass  19: suminf.    0.09412 (1) obj. -10.5 iterations 2
Cbc0038I Pass  20: suminf.    0.27385 (1) obj. -10.5 iterations 1
Cbc0038I Pass  21: suminf.    0.82302 (5) obj. -10.5 iterations 5
Cbc0038I Pass  22: suminf.    0.82302 (5) obj. -10.5 iterations 0
Cbc0038I Pass  23: suminf.    0.57565 (6) obj. -10.5 iterations 5
Cbc0038I Pass  24: suminf.    0.57565 (6) obj. -10.5 iterations 0
Cbc0038I Pass  25: suminf.    0.15296 (3) obj. -10.5 iterations 7
Cbc0038I Pass  26: suminf.    0.09412 (1) obj. -10.5 iterations 2
Cbc0038I Pass  27: suminf.    0.27385 (1) obj. -10.5 iterations 1
Cbc0038I Pass  28: suminf.    1.27095 (5) obj. -10.5 iterations 4
Cbc0038I Pass  29: suminf.    0.27385 (1) obj. -10.5 iterations 4
Cbc0038I Pass  30: suminf.    0.82302 (5) obj. -10.5 iterations 4
Cbc0038I Pass  31: suminf.    0.57565 (6) obj. -10.5 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.1 - took 0.01 seconds
Cbc0012I Integer solution of -8.1 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 10 rows 7 columns
Cbc0031I 6 added rows had average density of 7.3333333
Cbc0013I At root node, 6 cuts changed objective from -31.436169 to -10.183142 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 216 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 288 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 84 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8.099999999999994, took 775 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 30 times (110 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-11) rows, 22 (-4) columns and 112 (-41) elements
Clp1000I sum of infeasibilities 6.33791e-09 - average 3.72818e-10, 13 fixed columns
Coin0506I Presolve 5 (-12) rows, 9 (-13) columns and 23 (-89) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 11.552857
Clp0000I Optimal - objective value 11.552857
Coin0511I After Postsolve, objective 11.552857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8389601 - largest nonzero change 1.6142768e-05 ( 0.001339149%) - largest zero change 2.1218653e-05
Clp0000I Optimal - objective value 48.115616
Clp0000I Optimal - objective value 48.115616
Clp0000I Optimal - objective value 48.115616
Coin0511I After Postsolve, objective 48.115616, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.11561648 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.798%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.20147
Cbc0038I Pass   1: suminf.    0.68159 (5) obj. -8.40376 iterations 2
Cbc0038I Pass   2: suminf.    0.68159 (5) obj. -8.40376 iterations 0
Cbc0038I Solution found of 13.85
Cbc0038I Rounding solution of 2.25 is better than previous of 13.85

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -1.35
Cbc0038I Pass   3: suminf.    0.68159 (5) obj. -8.40376 iterations 0
Cbc0038I Pass   4: suminf.    0.68159 (5) obj. -8.40376 iterations 0
Cbc0038I Pass   5: suminf.    0.94200 (6) obj. -1.35 iterations 7
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -4.35 iterations 6
Cbc0038I Pass   7: suminf.    0.21364 (1) obj. -1.35 iterations 1
Cbc0038I Pass   8: suminf.    1.02273 (3) obj. -11.8864 iterations 5
Cbc0038I Pass   9: suminf.    1.02273 (3) obj. -11.8864 iterations 0
Cbc0038I Pass  10: suminf.    0.05000 (1) obj. -1.35 iterations 4
Cbc0038I Pass  11: suminf.    0.09302 (1) obj. -2.29651 iterations 1
Cbc0038I Pass  12: suminf.    0.82468 (3) obj. -5.09805 iterations 7
Cbc0038I Pass  13: suminf.    0.82468 (3) obj. -5.09805 iterations 0
Cbc0038I Pass  14: suminf.    0.21364 (1) obj. -1.35 iterations 4
Cbc0038I Pass  15: suminf.    0.35000 (1) obj. -4.35 iterations 1
Cbc0038I Pass  16: suminf.    0.28434 (2) obj. -1.35 iterations 2
Cbc0038I Pass  17: suminf.    0.35000 (1) obj. -4.35 iterations 2
Cbc0038I Pass  18: suminf.    1.43323 (4) obj. -9.36661 iterations 6
Cbc0038I Pass  19: suminf.    1.43323 (4) obj. -9.36661 iterations 0
Cbc0038I Pass  20: suminf.    0.53441 (2) obj. -1.35 iterations 7
Cbc0038I Pass  21: suminf.    0.04651 (1) obj. -9.12326 iterations 2
Cbc0038I Solution found of -8.1
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  22: suminf.    1.16812 (10) obj. -13.2 iterations 1
Cbc0038I Pass  23: suminf.    1.09603 (10) obj. -13.2 iterations 1
Cbc0038I Pass  24: suminf.    0.35208 (2) obj. -13.2 iterations 12
Cbc0038I Pass  25: suminf.    0.35208 (2) obj. -13.2 iterations 0
Cbc0038I Pass  26: suminf.    0.72979 (3) obj. -13.2 iterations 2
Cbc0038I Pass  27: suminf.    0.35208 (2) obj. -13.2 iterations 2
Cbc0038I Pass  28: suminf.    1.17927 (5) obj. -13.2 iterations 5
Cbc0038I Pass  29: suminf.    0.87374 (3) obj. -18.4591 iterations 3
Cbc0038I Pass  30: suminf.    1.12018 (3) obj. -13.2 iterations 5
Cbc0038I Pass  31: suminf.    0.31111 (2) obj. -17.6722 iterations 2
Cbc0038I Pass  32: suminf.    0.31111 (2) obj. -17.6722 iterations 0
Cbc0038I Pass  33: suminf.    1.20803 (5) obj. -13.2 iterations 5
Cbc0038I Pass  34: suminf.    0.35208 (2) obj. -13.2 iterations 6
Cbc0038I Pass  35: suminf.    0.35208 (2) obj. -13.2 iterations 0
Cbc0038I Pass  36: suminf.    0.72979 (3) obj. -13.2 iterations 2
Cbc0038I Pass  37: suminf.    1.00227 (3) obj. -13.2 iterations 4
Cbc0038I Pass  38: suminf.    1.00227 (3) obj. -13.2 iterations 1
Cbc0038I Pass  39: suminf.    0.80264 (5) obj. -13.2 iterations 2
Cbc0038I Pass  40: suminf.    0.38780 (3) obj. -13.2 iterations 7
Cbc0038I Pass  41: suminf.    0.38780 (3) obj. -13.2 iterations 0
Cbc0038I Pass  42: suminf.    1.41630 (6) obj. -13.2 iterations 7
Cbc0038I Pass  43: suminf.    0.35208 (2) obj. -13.2 iterations 9
Cbc0038I Pass  44: suminf.    0.35208 (2) obj. -13.2 iterations 0
Cbc0038I Pass  45: suminf.    0.72979 (3) obj. -13.2 iterations 2
Cbc0038I Pass  46: suminf.    0.90753 (6) obj. -13.2 iterations 7
Cbc0038I Pass  47: suminf.    0.86632 (5) obj. -13.2 iterations 3
Cbc0038I Pass  48: suminf.    0.80264 (5) obj. -13.2 iterations 6
Cbc0038I Pass  49: suminf.    1.43863 (5) obj. -13.2 iterations 10
Cbc0038I Pass  50: suminf.    1.13750 (5) obj. -13.2 iterations 4
Cbc0038I Pass  51: suminf.    1.07707 (3) obj. -13.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.1 - took 0.01 seconds
Cbc0012I Integer solution of -8.1 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 3.3333333
Cbc0013I At root node, 3 cuts changed objective from -33.245246 to -12.566667 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 4.7 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8.099999999999994, took 11 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 13 (-2) columns and 57 (-18) elements
Clp1000I sum of infeasibilities 1.55615e-07 - average 8.19026e-09, 0 fixed columns
Coin0506I Presolve 19 (0) rows, 13 (0) columns and 57 (0) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 1.244368 - largest nonzero change 0 ( 0%) - largest zero change 1.8387668e-05
Clp0000I Optimal - objective value 33.324214
Clp0000I Optimal - objective value 33.324214
Coin0511I After Postsolve, objective 33.324214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.324214
Clp0000I Optimal - objective value 33.324214
Clp0000I Optimal - objective value 33.324214
Coin0511I After Postsolve, objective 33.324214, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.3242144 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.413%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.11645
Cbc0038I Pass   1: suminf.    0.22222 (1) obj. -14.3944 iterations 4
Cbc0038I Solution found of -1.6
Cbc0038I Relaxing continuous gives -1.6
Cbc0038I Rounding solution of -5.2 is better than previous of -1.6

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -5.2 to -8.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -10.5
Cbc0038I Pass   2: suminf.    0.22222 (1) obj. -14.3944 iterations 0
Cbc0038I Pass   3: suminf.    0.51462 (3) obj. -10.5 iterations 3
Cbc0038I Pass   4: suminf.    0.52290 (2) obj. -10.5 iterations 3
Cbc0038I Pass   5: suminf.    0.52290 (2) obj. -10.5 iterations 0
Cbc0038I Pass   6: suminf.    0.11111 (1) obj. -11.2722 iterations 2
Cbc0038I Pass   7: suminf.    0.70445 (3) obj. -10.5 iterations 3
Cbc0038I Pass   8: suminf.    0.40196 (1) obj. -10.5 iterations 2
Cbc0038I Pass   9: suminf.    0.39231 (1) obj. -10.5 iterations 1
Cbc0038I Pass  10: suminf.    0.29350 (3) obj. -10.5 iterations 5
Cbc0038I Pass  11: suminf.    0.29308 (3) obj. -10.5 iterations 2
Cbc0038I Pass  12: suminf.    0.72165 (4) obj. -10.5 iterations 3
Cbc0038I Pass  13: suminf.    0.29308 (3) obj. -10.5 iterations 3
Cbc0038I Pass  14: suminf.    0.72165 (4) obj. -10.5 iterations 3
Cbc0038I Pass  15: suminf.    0.39231 (1) obj. -10.5 iterations 5
Cbc0038I Pass  16: suminf.    0.58697 (3) obj. -10.5 iterations 1
Cbc0038I Pass  17: suminf.    0.70445 (3) obj. -10.5 iterations 4
Cbc0038I Pass  18: suminf.    0.35223 (3) obj. -10.5 iterations 2
Cbc0038I Pass  19: suminf.    0.09412 (1) obj. -10.5 iterations 2
Cbc0038I Pass  20: suminf.    0.27385 (1) obj. -10.5 iterations 1
Cbc0038I Pass  21: suminf.    0.82302 (5) obj. -10.5 iterations 5
Cbc0038I Pass  22: suminf.    0.82302 (5) obj. -10.5 iterations 0
Cbc0038I Pass  23: suminf.    0.57565 (6) obj. -10.5 iterations 5
Cbc0038I Pass  24: suminf.    0.57565 (6) obj. -10.5 iterations 0
Cbc0038I Pass  25: suminf.    0.15296 (3) obj. -10.5 iterations 7
Cbc0038I Pass  26: suminf.    0.09412 (1) obj. -10.5 iterations 2
Cbc0038I Pass  27: suminf.    0.27385 (1) obj. -10.5 iterations 1
Cbc0038I Pass  28: suminf.    1.27095 (5) obj. -10.5 iterations 4
Cbc0038I Pass  29: suminf.    0.27385 (1) obj. -10.5 iterations 4
Cbc0038I Pass  30: suminf.    0.82302 (5) obj. -10.5 iterations 4
Cbc0038I Pass  31: suminf.    0.57565 (6) obj. -10.5 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.1 - took 0.01 seconds
Cbc0012I Integer solution of -8.1 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 10 rows 7 columns
Cbc0031I 6 added rows had average density of 7.3333333
Cbc0013I At root node, 6 cuts changed objective from -31.436169 to -10.183142 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 216 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 288 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 84 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8.099999999999994, took 775 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 30 times (110 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 22 (-5) columns and 112 (-42) elements
Clp1000I sum of infeasibilities 6.33791e-09 - average 3.72818e-10, 13 fixed columns
Coin0506I Presolve 5 (-12) rows, 9 (-13) columns and 23 (-89) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 11.552857
Clp0000I Optimal - objective value 11.552857
Coin0511I After Postsolve, objective 11.552857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8389601 - largest nonzero change 1.6142768e-05 ( 0.001339149%) - largest zero change 2.1218653e-05
Clp0000I Optimal - objective value 48.115616
Clp0000I Optimal - objective value 48.115616
Clp0000I Optimal - objective value 48.115616
Coin0511I After Postsolve, objective 48.115616, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.11561648 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.798%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.20147
Cbc0038I Pass   1: suminf.    0.68159 (5) obj. -8.40376 iterations 2
Cbc0038I Pass   2: suminf.    0.68159 (5) obj. -8.40376 iterations 0
Cbc0038I Solution found of 13.85
Cbc0038I Rounding solution of 2.25 is better than previous of 13.85

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -1.35
Cbc0038I Pass   3: suminf.    0.68159 (5) obj. -8.40376 iterations 0
Cbc0038I Pass   4: suminf.    0.68159 (5) obj. -8.40376 iterations 0
Cbc0038I Pass   5: suminf.    0.94200 (6) obj. -1.35 iterations 7
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -4.35 iterations 6
Cbc0038I Pass   7: suminf.    0.21364 (1) obj. -1.35 iterations 1
Cbc0038I Pass   8: suminf.    1.02273 (3) obj. -11.8864 iterations 5
Cbc0038I Pass   9: suminf.    1.02273 (3) obj. -11.8864 iterations 0
Cbc0038I Pass  10: suminf.    0.05000 (1) obj. -1.35 iterations 4
Cbc0038I Pass  11: suminf.    0.09302 (1) obj. -2.29651 iterations 1
Cbc0038I Pass  12: suminf.    0.82468 (3) obj. -5.09805 iterations 7
Cbc0038I Pass  13: suminf.    0.82468 (3) obj. -5.09805 iterations 0
Cbc0038I Pass  14: suminf.    0.21364 (1) obj. -1.35 iterations 4
Cbc0038I Pass  15: suminf.    0.35000 (1) obj. -4.35 iterations 1
Cbc0038I Pass  16: suminf.    0.28434 (2) obj. -1.35 iterations 2
Cbc0038I Pass  17: suminf.    0.35000 (1) obj. -4.35 iterations 2
Cbc0038I Pass  18: suminf.    1.43323 (4) obj. -9.36661 iterations 6
Cbc0038I Pass  19: suminf.    1.43323 (4) obj. -9.36661 iterations 0
Cbc0038I Pass  20: suminf.    0.53441 (2) obj. -1.35 iterations 7
Cbc0038I Pass  21: suminf.    0.04651 (1) obj. -9.12326 iterations 2
Cbc0038I Solution found of -8.1
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  22: suminf.    1.16812 (10) obj. -13.2 iterations 1
Cbc0038I Pass  23: suminf.    1.09603 (10) obj. -13.2 iterations 1
Cbc0038I Pass  24: suminf.    0.35208 (2) obj. -13.2 iterations 12
Cbc0038I Pass  25: suminf.    0.35208 (2) obj. -13.2 iterations 0
Cbc0038I Pass  26: suminf.    0.72979 (3) obj. -13.2 iterations 2
Cbc0038I Pass  27: suminf.    0.35208 (2) obj. -13.2 iterations 2
Cbc0038I Pass  28: suminf.    1.17927 (5) obj. -13.2 iterations 5
Cbc0038I Pass  29: suminf.    0.87374 (3) obj. -18.4591 iterations 3
Cbc0038I Pass  30: suminf.    1.12018 (3) obj. -13.2 iterations 5
Cbc0038I Pass  31: suminf.    0.31111 (2) obj. -17.6722 iterations 2
Cbc0038I Pass  32: suminf.    0.31111 (2) obj. -17.6722 iterations 0
Cbc0038I Pass  33: suminf.    1.20803 (5) obj. -13.2 iterations 5
Cbc0038I Pass  34: suminf.    0.35208 (2) obj. -13.2 iterations 6
Cbc0038I Pass  35: suminf.    0.35208 (2) obj. -13.2 iterations 0
Cbc0038I Pass  36: suminf.    0.72979 (3) obj. -13.2 iterations 2
Cbc0038I Pass  37: suminf.    1.00227 (3) obj. -13.2 iterations 4
Cbc0038I Pass  38: suminf.    1.00227 (3) obj. -13.2 iterations 1
Cbc0038I Pass  39: suminf.    0.80264 (5) obj. -13.2 iterations 2
Cbc0038I Pass  40: suminf.    0.38780 (3) obj. -13.2 iterations 7
Cbc0038I Pass  41: suminf.    0.38780 (3) obj. -13.2 iterations 0
Cbc0038I Pass  42: suminf.    1.41630 (6) obj. -13.2 iterations 7
Cbc0038I Pass  43: suminf.    0.35208 (2) obj. -13.2 iterations 9
Cbc0038I Pass  44: suminf.    0.35208 (2) obj. -13.2 iterations 0
Cbc0038I Pass  45: suminf.    0.72979 (3) obj. -13.2 iterations 2
Cbc0038I Pass  46: suminf.    0.90753 (6) obj. -13.2 iterations 7
Cbc0038I Pass  47: suminf.    0.86632 (5) obj. -13.2 iterations 3
Cbc0038I Pass  48: suminf.    0.80264 (5) obj. -13.2 iterations 6
Cbc0038I Pass  49: suminf.    1.43863 (5) obj. -13.2 iterations 10
Cbc0038I Pass  50: suminf.    1.13750 (5) obj. -13.2 iterations 4
Cbc0038I Pass  51: suminf.    1.07707 (3) obj. -13.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.1 - took 0.01 seconds
Cbc0012I Integer solution of -8.1 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 3.3333333
Cbc0013I At root node, 3 cuts changed objective from -33.245246 to -12.566667 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 4.7 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8.099999999999994, took 11 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

