Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 94 (-9) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 9.89363e-06 - average 5.55822e-08, 22 fixed columns
Coin0506I Presolve 130 (-48) rows, 72 (-22) columns and 398 (-140) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.1857321 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Coin0511I After Postsolve, objective 77.227371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Coin0511I After Postsolve, objective 77.227371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.22737069 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 94 columns (93 integer (93 of which binary)) and 538 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.991%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 10.4385
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.19218 iterations 57
Cbc0038I Solution found of -9.19218
Cbc0038I Relaxing continuous gives -9.19218
Cbc0038I Rounding solution of -17.9507 is better than previous of -9.19218

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 94 columns, reduced to 75 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.9507 to -46.1856 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.2898
Cbc0038I Pass   2: suminf.    4.34827 (14) obj. -49.2898 iterations 34
Cbc0038I Pass   3: suminf.    3.57717 (11) obj. -49.2898 iterations 5
Cbc0038I Pass   4: suminf.    2.43153 (7) obj. -49.2898 iterations 20
Cbc0038I Pass   5: suminf.    2.43153 (7) obj. -49.2898 iterations 0
Cbc0038I Pass   6: suminf.    2.35308 (7) obj. -49.2898 iterations 12
Cbc0038I Pass   7: suminf.    1.31686 (4) obj. -49.2898 iterations 10
Cbc0038I Pass   8: suminf.    1.23608 (3) obj. -49.2898 iterations 4
Cbc0038I Pass   9: suminf.    1.23608 (3) obj. -49.2898 iterations 0
Cbc0038I Pass  10: suminf.    0.63463 (2) obj. -49.2898 iterations 4
Cbc0038I Pass  11: suminf.    0.57292 (3) obj. -49.2898 iterations 1
Cbc0038I Pass  12: suminf.    2.91081 (12) obj. -49.2898 iterations 22
Cbc0038I Pass  13: suminf.    2.29248 (8) obj. -49.2898 iterations 16
Cbc0038I Pass  14: suminf.    1.88118 (7) obj. -49.2898 iterations 2
Cbc0038I Pass  15: suminf.    1.21860 (5) obj. -49.2898 iterations 12
Cbc0038I Pass  16: suminf.    1.90735 (6) obj. -49.2898 iterations 8
Cbc0038I Pass  17: suminf.    1.90735 (6) obj. -49.2898 iterations 0
Cbc0038I Pass  18: suminf.    1.87254 (6) obj. -49.2898 iterations 5
Cbc0038I Pass  19: suminf.    1.66071 (6) obj. -49.2898 iterations 3
Cbc0038I Pass  20: suminf.    2.88134 (11) obj. -49.2898 iterations 17
Cbc0038I Pass  21: suminf.    2.88134 (11) obj. -49.2898 iterations 0
Cbc0038I Pass  22: suminf.    3.32740 (9) obj. -49.2898 iterations 10
Cbc0038I Pass  23: suminf.    2.11116 (8) obj. -49.2898 iterations 14
Cbc0038I Pass  24: suminf.    2.10596 (6) obj. -49.2898 iterations 1
Cbc0038I Pass  25: suminf.    1.72028 (7) obj. -49.2898 iterations 12
Cbc0038I Pass  26: suminf.    1.72028 (7) obj. -49.2898 iterations 0
Cbc0038I Pass  27: suminf.    2.39376 (7) obj. -49.2898 iterations 15
Cbc0038I Pass  28: suminf.    2.39376 (7) obj. -49.2898 iterations 2
Cbc0038I Pass  29: suminf.    2.39195 (8) obj. -49.2898 iterations 6
Cbc0038I Pass  30: suminf.    2.36511 (10) obj. -49.2898 iterations 2
Cbc0038I Pass  31: suminf.    2.05710 (7) obj. -49.2898 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 94 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -46.1856 - took 0.07 seconds
Cbc0012I Integer solution of -46.185563 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 178 rows 94 columns, reduced to 75 rows 43 columns
Cbc0031I 17 added rows had average density of 51.529412
Cbc0013I At root node, 17 cuts changed objective from -77.227371 to -60.729898 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5014 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 823 row cuts average 94.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -46.185563 best solution, best possible -60.729898 (0.69 seconds)
Cbc0001I Search completed - best objective -46.185563, took 4416 iterations and 48 nodes (0.78 seconds)
Cbc0032I Strong branching done 412 times (8142 iterations), fathomed 5 nodes and fixed 20 variables
Cbc0035I Maximum depth 15, 163 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 142 (-62) rows, 150 (-52) columns and 3232 (-2421) elements
Clp1000I sum of infeasibilities 1.46338e-07 - average 1.03055e-09, 66 fixed columns
Coin0506I Presolve 76 (-66) rows, 83 (-67) columns and 314 (-2918) elements
Clp0006I 0  Obj 17.014684 Dual inf 5.662168 (79)
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 1.5221784 - largest nonzero change 2.5430659e-05 ( 0.0013165956%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 18.568164
Clp0000I Optimal - objective value 18.568164
Coin0511I After Postsolve, objective 18.568164, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 18.568164 Dual inf 75.72798 (57)
Clp0014I Perturbing problem by 0.001% of 2.0745933 - largest nonzero change 2.0639063e-05 ( 0.0015823696%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 94.719882
Clp0000I Optimal - objective value 94.719882
Clp0000I Optimal - objective value 94.719882
Coin0511I After Postsolve, objective 94.719882, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.71988166 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 142 rows, 150 columns (150 integer (150 of which binary)) and 3234 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.769%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 8.07238
Cbc0038I Pass   1: suminf.    4.52093 (46) obj. -82.3964 iterations 40
Cbc0038I Pass   2: suminf.    3.70796 (44) obj. -79.6804 iterations 4
Cbc0038I Pass   3: suminf.    2.12181 (30) obj. -65.4862 iterations 14
Cbc0038I Pass   4: suminf.    1.00378 (17) obj. -51.7797 iterations 13
Cbc0038I Pass   5: suminf.    0.33924 (7) obj. -38.7127 iterations 10
Cbc0038I Solution found of -31.089
Cbc0038I Rounding solution of -31.2696 is better than previous of -31.089

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 150 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -31.2696 to -31.921 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.7189
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.    4.52093 (46) obj. -82.3964 iterations 0
Cbc0038I Pass   7: suminf.    3.70796 (44) obj. -79.6804 iterations 2
Cbc0038I Pass   8: suminf.    2.22571 (31) obj. -66.3823 iterations 13
Cbc0038I Pass   9: suminf.    0.85605 (15) obj. -49.0001 iterations 16
Cbc0038I Pass  10: suminf.    0.88563 (5) obj. -37.7189 iterations 42
Cbc0038I Pass  11: suminf.    0.66667 (2) obj. -40.4797 iterations 13
Cbc0038I Pass  12: suminf.    0.35361 (2) obj. -37.7189 iterations 5
Cbc0038I Pass  13: suminf.    2.64570 (23) obj. -37.7189 iterations 59
Cbc0038I Pass  14: suminf.    2.44085 (20) obj. -37.7189 iterations 12
Cbc0038I Pass  15: suminf.    1.58723 (11) obj. -37.7189 iterations 22
Cbc0038I Pass  16: suminf.    2.28731 (8) obj. -37.7189 iterations 32
Cbc0038I Pass  17: suminf.    1.97028 (6) obj. -37.7189 iterations 12
Cbc0038I Pass  18: suminf.    1.38147 (3) obj. -37.7189 iterations 24
Cbc0038I Pass  19: suminf.    0.58040 (2) obj. -37.7189 iterations 11
Cbc0038I Pass  20: suminf.    0.66667 (2) obj. -38.4797 iterations 6
Cbc0038I Pass  21: suminf.    1.64594 (14) obj. -37.7189 iterations 38
Cbc0038I Pass  22: suminf.    1.57721 (12) obj. -37.7189 iterations 14
Cbc0038I Pass  23: suminf.    2.16599 (14) obj. -37.7189 iterations 35
Cbc0038I Pass  24: suminf.    1.08804 (5) obj. -37.7189 iterations 14
Cbc0038I Pass  25: suminf.    0.58040 (2) obj. -37.7189 iterations 24
Cbc0038I Pass  26: suminf.    0.66667 (2) obj. -38.4797 iterations 6
Cbc0038I Pass  27: suminf.    2.37855 (14) obj. -37.7189 iterations 54
Cbc0038I Pass  28: suminf.    1.94094 (13) obj. -37.7189 iterations 10
Cbc0038I Pass  29: suminf.    0.78627 (3) obj. -37.7189 iterations 34
Cbc0038I Pass  30: suminf.    0.70897 (10) obj. -37.7189 iterations 11
Cbc0038I Pass  31: suminf.    1.28014 (7) obj. -37.7189 iterations 27
Cbc0038I Pass  32: suminf.    0.83931 (7) obj. -37.7189 iterations 11
Cbc0038I Pass  33: suminf.    1.28014 (7) obj. -37.7189 iterations 13
Cbc0038I Pass  34: suminf.    1.66062 (15) obj. -37.7189 iterations 42
Cbc0038I Pass  35: suminf.    1.63890 (14) obj. -37.7189 iterations 2
Cbc0038I Rounding solution of -35.3967 is better than previous of -31.921

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 150 columns, reduced to 49 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -35.3967 to -45.3752 (0.12 seconds)
Cbc0038I Round again with cutoff of -54.2801
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  35: suminf.    4.52093 (46) obj. -82.3964 iterations 0
Cbc0038I Pass  36: suminf.    3.70796 (44) obj. -79.6804 iterations 2
Cbc0038I Pass  37: suminf.    1.75182 (26) obj. -60.9471 iterations 18
Cbc0038I Pass  38: suminf.    2.15375 (19) obj. -54.2801 iterations 37
Cbc0038I Pass  39: suminf.    2.03037 (11) obj. -54.2801 iterations 49
Cbc0038I Pass  40: suminf.    1.76646 (10) obj. -54.2801 iterations 18
Cbc0038I Pass  41: suminf.    1.38266 (10) obj. -54.2801 iterations 17
Cbc0038I Pass  42: suminf.    1.76646 (10) obj. -54.2801 iterations 22
Cbc0038I Pass  43: suminf.    3.29099 (18) obj. -54.2801 iterations 25
Cbc0038I Pass  44: suminf.    2.07607 (15) obj. -54.2801 iterations 6
Cbc0038I Pass  45: suminf.    1.91505 (22) obj. -54.2801 iterations 12
Cbc0038I Pass  46: suminf.    2.11454 (18) obj. -54.2801 iterations 32
Cbc0038I Pass  47: suminf.    1.99785 (18) obj. -54.2801 iterations 14
Cbc0038I Pass  48: suminf.    2.55327 (19) obj. -54.2801 iterations 12
Cbc0038I Pass  49: suminf.    2.58596 (24) obj. -54.2801 iterations 33
Cbc0038I Pass  50: suminf.    2.35834 (22) obj. -54.2801 iterations 20
Cbc0038I Pass  51: suminf.    2.11454 (18) obj. -54.2801 iterations 30
Cbc0038I Pass  52: suminf.    3.51176 (24) obj. -54.2801 iterations 23
Cbc0038I Pass  53: suminf.    3.21886 (23) obj. -54.2801 iterations 7
Cbc0038I Pass  54: suminf.    3.70716 (24) obj. -54.2801 iterations 31
Cbc0038I Pass  55: suminf.    2.20307 (25) obj. -54.2801 iterations 5
Cbc0038I Pass  56: suminf.    2.20307 (25) obj. -54.2801 iterations 0
Cbc0038I Pass  57: suminf.    2.21758 (20) obj. -54.2801 iterations 10
Cbc0038I Pass  58: suminf.    3.70099 (26) obj. -54.2801 iterations 21
Cbc0038I Pass  59: suminf.    3.48731 (25) obj. -54.2801 iterations 7
Cbc0038I Pass  60: suminf.    2.48413 (22) obj. -54.2801 iterations 43
Cbc0038I Pass  61: suminf.    2.12715 (25) obj. -54.2801 iterations 4
Cbc0038I Pass  62: suminf.    2.12803 (20) obj. -54.2801 iterations 7
Cbc0038I Pass  63: suminf.    2.56653 (17) obj. -54.2801 iterations 32
Cbc0038I Pass  64: suminf.    2.33136 (20) obj. -54.2801 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -45.3752 - took 0.10 seconds
Cbc0012I Integer solution of -45.375247 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 142 rows 150 columns, reduced to 41 rows 45 columns
Cbc0031I 67 added rows had average density of 40.41791
Cbc0013I At root node, 67 cuts changed objective from -89.898989 to -51.722063 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18683 row cuts average 10.0 elements, 5 column cuts (18 active)  in 0.292 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1560 row cuts average 127.6 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 442 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1086 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.192 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 421 row cuts average 78.8 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.479 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -45.375247 best solution, best possible -51.722063 (3.31 seconds)
Cbc0012I Integer solution of -45.727117 found by DiveCoefficient after 5856 iterations and 5 nodes (3.66 seconds)
Cbc0012I Integer solution of -45.907739 found by rounding after 5880 iterations and 6 nodes (3.68 seconds)
Cbc0012I Integer solution of -46.185563 found by DiveCoefficient after 6105 iterations and 14 nodes (3.72 seconds)
Cbc0010I After 33 nodes, 6 on tree, -46.185563 best solution, best possible -51.722063 (4.02 seconds)
Cbc0038I Full problem 142 rows 150 columns, reduced to 46 rows 51 columns
Cbc0001I Search completed - best objective -46.185563, took 7706 iterations and 52 nodes (4.26 seconds)
Cbc0032I Strong branching done 870 times (17424 iterations), fathomed 10 nodes and fixed 9 variables
Cbc0035I Maximum depth 12, 140 variables fixed on reduced cost
Total time (CPU seconds):       3.51   (Wallclock seconds):       4.28

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 94 (-9) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 9.89363e-06 - average 5.55822e-08, 22 fixed columns
Coin0506I Presolve 130 (-48) rows, 72 (-22) columns and 398 (-140) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.1857321 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Coin0511I After Postsolve, objective 77.227371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Clp0000I Optimal - objective value 77.227371
Coin0511I After Postsolve, objective 77.227371, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.22737069 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 94 columns (93 integer (93 of which binary)) and 538 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.991%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 10.4385
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.19218 iterations 57
Cbc0038I Solution found of -9.19218
Cbc0038I Relaxing continuous gives -9.19218
Cbc0038I Rounding solution of -17.9507 is better than previous of -9.19218

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 94 columns, reduced to 75 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.9507 to -46.1856 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.2898
Cbc0038I Pass   2: suminf.    4.34827 (14) obj. -49.2898 iterations 34
Cbc0038I Pass   3: suminf.    3.57717 (11) obj. -49.2898 iterations 5
Cbc0038I Pass   4: suminf.    2.43153 (7) obj. -49.2898 iterations 20
Cbc0038I Pass   5: suminf.    2.43153 (7) obj. -49.2898 iterations 0
Cbc0038I Pass   6: suminf.    2.35308 (7) obj. -49.2898 iterations 12
Cbc0038I Pass   7: suminf.    1.31686 (4) obj. -49.2898 iterations 10
Cbc0038I Pass   8: suminf.    1.23608 (3) obj. -49.2898 iterations 4
Cbc0038I Pass   9: suminf.    1.23608 (3) obj. -49.2898 iterations 0
Cbc0038I Pass  10: suminf.    0.63463 (2) obj. -49.2898 iterations 4
Cbc0038I Pass  11: suminf.    0.57292 (3) obj. -49.2898 iterations 1
Cbc0038I Pass  12: suminf.    2.91081 (12) obj. -49.2898 iterations 22
Cbc0038I Pass  13: suminf.    2.29248 (8) obj. -49.2898 iterations 16
Cbc0038I Pass  14: suminf.    1.88118 (7) obj. -49.2898 iterations 2
Cbc0038I Pass  15: suminf.    1.21860 (5) obj. -49.2898 iterations 12
Cbc0038I Pass  16: suminf.    1.90735 (6) obj. -49.2898 iterations 8
Cbc0038I Pass  17: suminf.    1.90735 (6) obj. -49.2898 iterations 0
Cbc0038I Pass  18: suminf.    1.87254 (6) obj. -49.2898 iterations 5
Cbc0038I Pass  19: suminf.    1.66071 (6) obj. -49.2898 iterations 3
Cbc0038I Pass  20: suminf.    2.88134 (11) obj. -49.2898 iterations 17
Cbc0038I Pass  21: suminf.    2.88134 (11) obj. -49.2898 iterations 0
Cbc0038I Pass  22: suminf.    3.32740 (9) obj. -49.2898 iterations 10
Cbc0038I Pass  23: suminf.    2.11116 (8) obj. -49.2898 iterations 14
Cbc0038I Pass  24: suminf.    2.10596 (6) obj. -49.2898 iterations 1
Cbc0038I Pass  25: suminf.    1.72028 (7) obj. -49.2898 iterations 12
Cbc0038I Pass  26: suminf.    1.72028 (7) obj. -49.2898 iterations 0
Cbc0038I Pass  27: suminf.    2.39376 (7) obj. -49.2898 iterations 15
Cbc0038I Pass  28: suminf.    2.39376 (7) obj. -49.2898 iterations 2
Cbc0038I Pass  29: suminf.    2.39195 (8) obj. -49.2898 iterations 6
Cbc0038I Pass  30: suminf.    2.36511 (10) obj. -49.2898 iterations 2
Cbc0038I Pass  31: suminf.    2.05710 (7) obj. -49.2898 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 94 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -46.1856 - took 0.08 seconds
Cbc0012I Integer solution of -46.185563 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 178 rows 94 columns, reduced to 75 rows 43 columns
Cbc0031I 17 added rows had average density of 51.529412
Cbc0013I At root node, 17 cuts changed objective from -77.227371 to -60.729898 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5014 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 823 row cuts average 94.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -46.185563 best solution, best possible -60.729898 (0.69 seconds)
Cbc0001I Search completed - best objective -46.185563, took 4416 iterations and 48 nodes (0.84 seconds)
Cbc0032I Strong branching done 412 times (8142 iterations), fathomed 5 nodes and fixed 20 variables
Cbc0035I Maximum depth 15, 163 variables fixed on reduced cost
Total time (CPU seconds):       0.80   (Wallclock seconds):       0.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 142 (-63) rows, 150 (-53) columns and 3232 (-2422) elements
Clp1000I sum of infeasibilities 1.46338e-07 - average 1.03055e-09, 66 fixed columns
Coin0506I Presolve 76 (-66) rows, 83 (-67) columns and 314 (-2918) elements
Clp0006I 0  Obj 17.014684 Dual inf 5.662168 (79)
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 1.5221784 - largest nonzero change 2.5430659e-05 ( 0.0013165956%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 18.568164
Clp0000I Optimal - objective value 18.568164
Coin0511I After Postsolve, objective 18.568164, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 18.568164 Dual inf 75.72798 (57)
Clp0014I Perturbing problem by 0.001% of 2.0745933 - largest nonzero change 2.0639063e-05 ( 0.0015823696%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 94.719882
Clp0000I Optimal - objective value 94.719882
Clp0000I Optimal - objective value 94.719882
Coin0511I After Postsolve, objective 94.719882, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.71988166 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 142 rows, 150 columns (150 integer (150 of which binary)) and 3234 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.769%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 8.07238
Cbc0038I Pass   1: suminf.    4.52093 (46) obj. -82.3964 iterations 40
Cbc0038I Pass   2: suminf.    3.70796 (44) obj. -79.6804 iterations 4
Cbc0038I Pass   3: suminf.    2.12181 (30) obj. -65.4862 iterations 14
Cbc0038I Pass   4: suminf.    1.00378 (17) obj. -51.7797 iterations 13
Cbc0038I Pass   5: suminf.    0.33924 (7) obj. -38.7127 iterations 10
Cbc0038I Solution found of -31.089
Cbc0038I Rounding solution of -31.2696 is better than previous of -31.089

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 150 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -31.2696 to -31.921 (0.05 seconds)
Cbc0038I Round again with cutoff of -37.7189
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.    4.52093 (46) obj. -82.3964 iterations 0
Cbc0038I Pass   7: suminf.    3.70796 (44) obj. -79.6804 iterations 2
Cbc0038I Pass   8: suminf.    2.22571 (31) obj. -66.3823 iterations 13
Cbc0038I Pass   9: suminf.    0.85605 (15) obj. -49.0001 iterations 16
Cbc0038I Pass  10: suminf.    0.88563 (5) obj. -37.7189 iterations 42
Cbc0038I Pass  11: suminf.    0.66667 (2) obj. -40.4797 iterations 13
Cbc0038I Pass  12: suminf.    0.35361 (2) obj. -37.7189 iterations 5
Cbc0038I Pass  13: suminf.    2.64570 (23) obj. -37.7189 iterations 59
Cbc0038I Pass  14: suminf.    2.44085 (20) obj. -37.7189 iterations 12
Cbc0038I Pass  15: suminf.    1.58723 (11) obj. -37.7189 iterations 22
Cbc0038I Pass  16: suminf.    2.28731 (8) obj. -37.7189 iterations 32
Cbc0038I Pass  17: suminf.    1.97028 (6) obj. -37.7189 iterations 12
Cbc0038I Pass  18: suminf.    1.38147 (3) obj. -37.7189 iterations 24
Cbc0038I Pass  19: suminf.    0.58040 (2) obj. -37.7189 iterations 11
Cbc0038I Pass  20: suminf.    0.66667 (2) obj. -38.4797 iterations 6
Cbc0038I Pass  21: suminf.    1.64594 (14) obj. -37.7189 iterations 38
Cbc0038I Pass  22: suminf.    1.57721 (12) obj. -37.7189 iterations 14
Cbc0038I Pass  23: suminf.    2.16599 (14) obj. -37.7189 iterations 35
Cbc0038I Pass  24: suminf.    1.08804 (5) obj. -37.7189 iterations 14
Cbc0038I Pass  25: suminf.    0.58040 (2) obj. -37.7189 iterations 24
Cbc0038I Pass  26: suminf.    0.66667 (2) obj. -38.4797 iterations 6
Cbc0038I Pass  27: suminf.    2.37855 (14) obj. -37.7189 iterations 54
Cbc0038I Pass  28: suminf.    1.94094 (13) obj. -37.7189 iterations 10
Cbc0038I Pass  29: suminf.    0.78627 (3) obj. -37.7189 iterations 34
Cbc0038I Pass  30: suminf.    0.70897 (10) obj. -37.7189 iterations 11
Cbc0038I Pass  31: suminf.    1.28014 (7) obj. -37.7189 iterations 27
Cbc0038I Pass  32: suminf.    0.83931 (7) obj. -37.7189 iterations 11
Cbc0038I Pass  33: suminf.    1.28014 (7) obj. -37.7189 iterations 13
Cbc0038I Pass  34: suminf.    1.66062 (15) obj. -37.7189 iterations 42
Cbc0038I Pass  35: suminf.    1.63890 (14) obj. -37.7189 iterations 2
Cbc0038I Rounding solution of -35.3967 is better than previous of -31.921

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 150 columns, reduced to 49 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -35.3967 to -45.3752 (0.12 seconds)
Cbc0038I Round again with cutoff of -54.2801
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  35: suminf.    4.52093 (46) obj. -82.3964 iterations 0
Cbc0038I Pass  36: suminf.    3.70796 (44) obj. -79.6804 iterations 2
Cbc0038I Pass  37: suminf.    1.75182 (26) obj. -60.9471 iterations 18
Cbc0038I Pass  38: suminf.    2.15375 (19) obj. -54.2801 iterations 37
Cbc0038I Pass  39: suminf.    2.03037 (11) obj. -54.2801 iterations 49
Cbc0038I Pass  40: suminf.    1.76646 (10) obj. -54.2801 iterations 18
Cbc0038I Pass  41: suminf.    1.38266 (10) obj. -54.2801 iterations 17
Cbc0038I Pass  42: suminf.    1.76646 (10) obj. -54.2801 iterations 22
Cbc0038I Pass  43: suminf.    3.29099 (18) obj. -54.2801 iterations 25
Cbc0038I Pass  44: suminf.    2.07607 (15) obj. -54.2801 iterations 6
Cbc0038I Pass  45: suminf.    1.91505 (22) obj. -54.2801 iterations 12
Cbc0038I Pass  46: suminf.    2.11454 (18) obj. -54.2801 iterations 32
Cbc0038I Pass  47: suminf.    1.99785 (18) obj. -54.2801 iterations 14
Cbc0038I Pass  48: suminf.    2.55327 (19) obj. -54.2801 iterations 12
Cbc0038I Pass  49: suminf.    2.58596 (24) obj. -54.2801 iterations 33
Cbc0038I Pass  50: suminf.    2.35834 (22) obj. -54.2801 iterations 20
Cbc0038I Pass  51: suminf.    2.11454 (18) obj. -54.2801 iterations 30
Cbc0038I Pass  52: suminf.    3.51176 (24) obj. -54.2801 iterations 23
Cbc0038I Pass  53: suminf.    3.21886 (23) obj. -54.2801 iterations 7
Cbc0038I Pass  54: suminf.    3.70716 (24) obj. -54.2801 iterations 31
Cbc0038I Pass  55: suminf.    2.20307 (25) obj. -54.2801 iterations 5
Cbc0038I Pass  56: suminf.    2.20307 (25) obj. -54.2801 iterations 0
Cbc0038I Pass  57: suminf.    2.21758 (20) obj. -54.2801 iterations 10
Cbc0038I Pass  58: suminf.    3.70099 (26) obj. -54.2801 iterations 21
Cbc0038I Pass  59: suminf.    3.48731 (25) obj. -54.2801 iterations 7
Cbc0038I Pass  60: suminf.    2.48413 (22) obj. -54.2801 iterations 43
Cbc0038I Pass  61: suminf.    2.12715 (25) obj. -54.2801 iterations 4
Cbc0038I Pass  62: suminf.    2.12803 (20) obj. -54.2801 iterations 7
Cbc0038I Pass  63: suminf.    2.56653 (17) obj. -54.2801 iterations 32
Cbc0038I Pass  64: suminf.    2.33136 (20) obj. -54.2801 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -45.3752 - took 0.11 seconds
Cbc0012I Integer solution of -45.375247 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 142 rows 150 columns, reduced to 41 rows 45 columns
Cbc0031I 67 added rows had average density of 40.41791
Cbc0013I At root node, 67 cuts changed objective from -89.898989 to -51.722063 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18683 row cuts average 10.0 elements, 5 column cuts (18 active)  in 0.284 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1560 row cuts average 127.6 elements, 0 column cuts (0 active)  in 0.283 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 442 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1086 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 421 row cuts average 78.8 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.478 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -45.375247 best solution, best possible -51.722063 (3.17 seconds)
Cbc0012I Integer solution of -45.727117 found by DiveCoefficient after 5856 iterations and 5 nodes (3.53 seconds)
Cbc0012I Integer solution of -45.907739 found by rounding after 5880 iterations and 6 nodes (3.54 seconds)
Cbc0012I Integer solution of -46.185563 found by DiveCoefficient after 6105 iterations and 14 nodes (3.59 seconds)
Cbc0010I After 33 nodes, 6 on tree, -46.185563 best solution, best possible -51.722063 (3.88 seconds)
Cbc0038I Full problem 142 rows 150 columns, reduced to 46 rows 51 columns
Cbc0001I Search completed - best objective -46.185563, took 7706 iterations and 52 nodes (4.11 seconds)
Cbc0032I Strong branching done 870 times (17424 iterations), fathomed 10 nodes and fixed 9 variables
Cbc0035I Maximum depth 12, 140 variables fixed on reduced cost
Total time (CPU seconds):       3.48   (Wallclock seconds):       4.13

