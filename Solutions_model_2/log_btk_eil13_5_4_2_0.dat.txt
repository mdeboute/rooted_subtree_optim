Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 13 (-2) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 16 (-1) rows, 12 (-1) columns and 48 (-4) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 80.222276
Clp0000I Optimal - objective value 80.222276
Coin0511I After Postsolve, objective 80.222276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.222276
Clp0000I Optimal - objective value 80.222276
Clp0000I Optimal - objective value 80.222276
Coin0511I After Postsolve, objective 80.222276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.22227582 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 13 columns (12 integer (12 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.558%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.60612
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -32.6072 iterations 8
Cbc0038I Solution found of -32.6072
Cbc0038I Relaxing continuous gives -32.6072
Cbc0038I Rounding solution of -37.8929 is better than previous of -32.6072

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 13 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -37.8929 to -53.7262 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.3507
Cbc0038I Pass   2: suminf.    0.88698 (3) obj. -56.3507 iterations 3
Cbc0038I Pass   3: suminf.    0.47050 (1) obj. -56.3507 iterations 2
Cbc0038I Pass   4: suminf.    0.38889 (1) obj. -56.3507 iterations 1
Cbc0038I Pass   5: suminf.    0.64493 (2) obj. -56.3507 iterations 2
Cbc0038I Pass   6: suminf.    0.48859 (2) obj. -56.3507 iterations 2
Cbc0038I Pass   7: suminf.    0.34286 (2) obj. -56.3507 iterations 3
Cbc0038I Pass   8: suminf.    0.88698 (3) obj. -56.3507 iterations 6
Cbc0038I Pass   9: suminf.    0.47050 (1) obj. -56.3507 iterations 2
Cbc0038I Pass  10: suminf.    0.38889 (1) obj. -56.3507 iterations 1
Cbc0038I Pass  11: suminf.    0.08633 (3) obj. -56.3507 iterations 5
Cbc0038I Pass  12: suminf.    0.07210 (3) obj. -56.3507 iterations 2
Cbc0038I Pass  13: suminf.    1.70303 (9) obj. -56.3507 iterations 10
Cbc0038I Pass  14: suminf.    0.47059 (1) obj. -58.6751 iterations 8
Cbc0038I Pass  15: suminf.    0.32354 (2) obj. -56.3507 iterations 4
Cbc0038I Pass  16: suminf.    0.41837 (3) obj. -56.3507 iterations 3
Cbc0038I Pass  17: suminf.    0.82353 (2) obj. -56.3507 iterations 1
Cbc0038I Pass  18: suminf.    0.42815 (2) obj. -56.3507 iterations 3
Cbc0038I Pass  19: suminf.    1.13724 (4) obj. -56.3507 iterations 6
Cbc0038I Pass  20: suminf.    0.91312 (4) obj. -56.3507 iterations 2
Cbc0038I Pass  21: suminf.    0.79450 (3) obj. -56.3507 iterations 2
Cbc0038I Pass  22: suminf.    0.79450 (3) obj. -56.3507 iterations 0
Cbc0038I Pass  23: suminf.    1.23983 (3) obj. -56.3507 iterations 2
Cbc0038I Pass  24: suminf.    0.94259 (3) obj. -56.3507 iterations 4
Cbc0038I Pass  25: suminf.    1.29819 (4) obj. -56.3507 iterations 3
Cbc0038I Pass  26: suminf.    0.48782 (3) obj. -56.3507 iterations 5
Cbc0038I Pass  27: suminf.    0.41837 (3) obj. -56.3507 iterations 3
Cbc0038I Pass  28: suminf.    0.82353 (2) obj. -56.3507 iterations 1
Cbc0038I Pass  29: suminf.    0.42815 (2) obj. -56.3507 iterations 3
Cbc0038I Pass  30: suminf.    1.26230 (3) obj. -56.3507 iterations 3
Cbc0038I Pass  31: suminf.    0.60492 (2) obj. -56.3507 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 13 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53.7262 - took 0.02 seconds
Cbc0012I Integer solution of -53.7262 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 13 columns, reduced to 13 rows 10 columns
Cbc0031I 9 added rows had average density of 12.111111
Cbc0013I At root node, 9 cuts changed objective from -79.970194 to -63.445812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 581 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 431 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 243 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -53.72620000000001, took 1376 iterations and 2 nodes (0.08 seconds)
Cbc0032I Strong branching done 18 times (141 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-12) rows, 23 (-3) columns and 110 (-43) elements
Clp1000I sum of infeasibilities 0 - average 0, 6 fixed columns
Coin0506I Presolve 9 (-7) rows, 14 (-9) columns and 66 (-44) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 82.081871
Clp0000I Optimal - objective value 82.081871
Coin0511I After Postsolve, objective 82.081871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8192762 - largest nonzero change 0 ( 0%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value 83.705212
Clp0000I Optimal - objective value 83.705212
Clp0000I Optimal - objective value 83.705212
Coin0511I After Postsolve, objective 83.705212, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.70521158 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 23 columns (23 integer (23 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.066%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.44183
Cbc0038I Pass   1: suminf.    1.39318 (7) obj. -72.524 iterations 4
Cbc0038I Solution found of -35.1905
Cbc0038I Rounding solution of -44.1905 is better than previous of -35.1905

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 23 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -47.0526
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.39318 (7) obj. -72.524 iterations 0
Cbc0038I Pass   3: suminf.    0.43769 (1) obj. -47.0526 iterations 10
Cbc0038I Pass   4: suminf.    0.05882 (1) obj. -54.8396 iterations 3
Cbc0038I Pass   5: suminf.    0.37558 (1) obj. -47.0526 iterations 1
Cbc0038I Pass   6: suminf.    0.21720 (2) obj. -47.0526 iterations 4
Cbc0038I Pass   7: suminf.    0.16667 (1) obj. -48.3572 iterations 1
Cbc0038I Pass   8: suminf.    0.38917 (2) obj. -47.0526 iterations 4
Cbc0038I Pass   9: suminf.    0.34286 (2) obj. -48.0855 iterations 2
Cbc0038I Pass  10: suminf.    0.34286 (2) obj. -48.0855 iterations 0
Cbc0038I Pass  11: suminf.    0.38917 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  12: suminf.    0.75478 (3) obj. -47.0526 iterations 6
Cbc0038I Pass  13: suminf.    0.42105 (1) obj. -50.6798 iterations 4
Cbc0038I Pass  14: suminf.    0.38917 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  15: suminf.    0.34286 (2) obj. -48.0855 iterations 2
Cbc0038I Pass  16: suminf.    0.34286 (2) obj. -48.0855 iterations 0
Cbc0038I Pass  17: suminf.    0.38917 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  18: suminf.    0.72139 (6) obj. -47.0526 iterations 3
Cbc0038I Pass  19: suminf.    0.97742 (5) obj. -47.0526 iterations 7
Cbc0038I Pass  20: suminf.    0.53551 (6) obj. -47.0526 iterations 3
Cbc0038I Pass  21: suminf.    0.87891 (4) obj. -47.0526 iterations 4
Cbc0038I Pass  22: suminf.    0.87891 (4) obj. -47.0526 iterations 0
Cbc0038I Pass  23: suminf.    0.92199 (3) obj. -47.0526 iterations 3
Cbc0038I Pass  24: suminf.    0.78519 (3) obj. -49.152 iterations 2
Cbc0038I Pass  25: suminf.    0.58692 (2) obj. -47.0526 iterations 3
Cbc0038I Pass  26: suminf.    0.58692 (2) obj. -47.0526 iterations 0
Cbc0038I Pass  27: suminf.    0.34649 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  28: suminf.    0.27451 (2) obj. -48.4671 iterations 2
Cbc0038I Pass  29: suminf.    0.44050 (2) obj. -47.0526 iterations 3
Cbc0038I Pass  30: suminf.    0.32099 (2) obj. -48.3673 iterations 1
Cbc0038I Pass  31: suminf.    1.71143 (7) obj. -47.0526 iterations 10
Cbc0038I Rounding solution of -53.7262 is better than previous of -44.1905

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 23 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -57.5431
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.39318 (7) obj. -72.524 iterations 0
Cbc0038I Pass  32: suminf.    0.37956 (2) obj. -57.5431 iterations 8
Cbc0038I Pass  33: suminf.    0.29314 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  34: suminf.    0.54744 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  35: suminf.    0.27451 (2) obj. -63.4671 iterations 2
Cbc0038I Pass  36: suminf.    0.30460 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  37: suminf.    0.66924 (3) obj. -57.5431 iterations 2
Cbc0038I Pass  38: suminf.    0.35294 (2) obj. -62.8873 iterations 2
Cbc0038I Pass  39: suminf.    0.22222 (1) obj. -60.139 iterations 1
Cbc0038I Pass  40: suminf.    0.39652 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  41: suminf.    0.47191 (2) obj. -57.5431 iterations 1
Cbc0038I Pass  42: suminf.    0.39652 (2) obj. -57.5431 iterations 1
Cbc0038I Pass  43: suminf.    1.31742 (6) obj. -57.5431 iterations 5
Cbc0038I Pass  44: suminf.    1.16390 (4) obj. -57.5431 iterations 2
Cbc0038I Pass  45: suminf.    0.35294 (2) obj. -58.8873 iterations 3
Cbc0038I Pass  46: suminf.    0.28901 (2) obj. -57.5431 iterations 1
Cbc0038I Pass  47: suminf.    1.31433 (3) obj. -57.5431 iterations 3
Cbc0038I Pass  48: suminf.    0.98099 (7) obj. -57.5431 iterations 4
Cbc0038I Pass  49: suminf.    0.66889 (3) obj. -57.5431 iterations 3
Cbc0038I Pass  50: suminf.    0.92307 (3) obj. -57.5431 iterations 2
Cbc0038I Pass  51: suminf.    0.65185 (3) obj. -60.7408 iterations 2
Cbc0038I Pass  52: suminf.    0.82081 (4) obj. -57.5431 iterations 5
Cbc0038I Pass  53: suminf.    0.70223 (3) obj. -57.5431 iterations 3
Cbc0038I Pass  54: suminf.    0.36919 (2) obj. -57.5431 iterations 3
Cbc0038I Pass  55: suminf.    0.27451 (2) obj. -59.4671 iterations 2
Cbc0038I Pass  56: suminf.    0.44941 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  57: suminf.    1.01854 (6) obj. -57.5431 iterations 8
Cbc0038I Pass  58: suminf.    1.01854 (6) obj. -57.5431 iterations 0
Cbc0038I Pass  59: suminf.    0.32463 (2) obj. -57.5431 iterations 5
Cbc0038I Pass  60: suminf.    0.27451 (2) obj. -58.4671 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 23 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53.7262 - took 0.01 seconds
Cbc0012I Integer solution of -53.7262 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 11 added rows had average density of 7.6363636
Cbc0013I At root node, 44 cuts changed objective from -72.810442 to -53.7262 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 2.5 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0001I Search completed - best objective -53.72620000000001, took 66 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-12) rows, 13 (-2) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 1 fixed columns
Coin0506I Presolve 16 (-1) rows, 12 (-1) columns and 48 (-4) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 80.222276
Clp0000I Optimal - objective value 80.222276
Coin0511I After Postsolve, objective 80.222276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.222276
Clp0000I Optimal - objective value 80.222276
Clp0000I Optimal - objective value 80.222276
Coin0511I After Postsolve, objective 80.222276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.22227582 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 13 columns (12 integer (12 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.558%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.60612
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -32.6072 iterations 8
Cbc0038I Solution found of -32.6072
Cbc0038I Relaxing continuous gives -32.6072
Cbc0038I Rounding solution of -37.8929 is better than previous of -32.6072

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 13 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -37.8929 to -53.7262 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.3507
Cbc0038I Pass   2: suminf.    0.88698 (3) obj. -56.3507 iterations 3
Cbc0038I Pass   3: suminf.    0.47050 (1) obj. -56.3507 iterations 2
Cbc0038I Pass   4: suminf.    0.38889 (1) obj. -56.3507 iterations 1
Cbc0038I Pass   5: suminf.    0.64493 (2) obj. -56.3507 iterations 2
Cbc0038I Pass   6: suminf.    0.48859 (2) obj. -56.3507 iterations 2
Cbc0038I Pass   7: suminf.    0.34286 (2) obj. -56.3507 iterations 3
Cbc0038I Pass   8: suminf.    0.88698 (3) obj. -56.3507 iterations 6
Cbc0038I Pass   9: suminf.    0.47050 (1) obj. -56.3507 iterations 2
Cbc0038I Pass  10: suminf.    0.38889 (1) obj. -56.3507 iterations 1
Cbc0038I Pass  11: suminf.    0.08633 (3) obj. -56.3507 iterations 5
Cbc0038I Pass  12: suminf.    0.07210 (3) obj. -56.3507 iterations 2
Cbc0038I Pass  13: suminf.    1.70303 (9) obj. -56.3507 iterations 10
Cbc0038I Pass  14: suminf.    0.47059 (1) obj. -58.6751 iterations 8
Cbc0038I Pass  15: suminf.    0.32354 (2) obj. -56.3507 iterations 4
Cbc0038I Pass  16: suminf.    0.41837 (3) obj. -56.3507 iterations 3
Cbc0038I Pass  17: suminf.    0.82353 (2) obj. -56.3507 iterations 1
Cbc0038I Pass  18: suminf.    0.42815 (2) obj. -56.3507 iterations 3
Cbc0038I Pass  19: suminf.    1.13724 (4) obj. -56.3507 iterations 6
Cbc0038I Pass  20: suminf.    0.91312 (4) obj. -56.3507 iterations 2
Cbc0038I Pass  21: suminf.    0.79450 (3) obj. -56.3507 iterations 2
Cbc0038I Pass  22: suminf.    0.79450 (3) obj. -56.3507 iterations 0
Cbc0038I Pass  23: suminf.    1.23983 (3) obj. -56.3507 iterations 2
Cbc0038I Pass  24: suminf.    0.94259 (3) obj. -56.3507 iterations 4
Cbc0038I Pass  25: suminf.    1.29819 (4) obj. -56.3507 iterations 3
Cbc0038I Pass  26: suminf.    0.48782 (3) obj. -56.3507 iterations 5
Cbc0038I Pass  27: suminf.    0.41837 (3) obj. -56.3507 iterations 3
Cbc0038I Pass  28: suminf.    0.82353 (2) obj. -56.3507 iterations 1
Cbc0038I Pass  29: suminf.    0.42815 (2) obj. -56.3507 iterations 3
Cbc0038I Pass  30: suminf.    1.26230 (3) obj. -56.3507 iterations 3
Cbc0038I Pass  31: suminf.    0.60492 (2) obj. -56.3507 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 13 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53.7262 - took 0.02 seconds
Cbc0012I Integer solution of -53.7262 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 13 columns, reduced to 13 rows 10 columns
Cbc0031I 9 added rows had average density of 12.111111
Cbc0013I At root node, 9 cuts changed objective from -79.970194 to -63.445812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 581 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 431 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 243 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -53.72620000000001, took 1376 iterations and 2 nodes (0.08 seconds)
Cbc0032I Strong branching done 18 times (141 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 23 (-4) columns and 110 (-44) elements
Clp1000I sum of infeasibilities 0 - average 0, 6 fixed columns
Coin0506I Presolve 9 (-7) rows, 14 (-9) columns and 66 (-44) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 82.081871
Clp0000I Optimal - objective value 82.081871
Coin0511I After Postsolve, objective 82.081871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8192762 - largest nonzero change 0 ( 0%) - largest zero change 1.896476e-05
Clp0000I Optimal - objective value 83.705212
Clp0000I Optimal - objective value 83.705212
Clp0000I Optimal - objective value 83.705212
Coin0511I After Postsolve, objective 83.705212, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.70521158 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 23 columns (23 integer (23 of which binary)) and 113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.066%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.44183
Cbc0038I Pass   1: suminf.    1.39318 (7) obj. -72.524 iterations 4
Cbc0038I Solution found of -35.1905
Cbc0038I Rounding solution of -44.1905 is better than previous of -35.1905

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 23 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -47.0526
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.39318 (7) obj. -72.524 iterations 0
Cbc0038I Pass   3: suminf.    0.43769 (1) obj. -47.0526 iterations 10
Cbc0038I Pass   4: suminf.    0.05882 (1) obj. -54.8396 iterations 3
Cbc0038I Pass   5: suminf.    0.37558 (1) obj. -47.0526 iterations 1
Cbc0038I Pass   6: suminf.    0.21720 (2) obj. -47.0526 iterations 4
Cbc0038I Pass   7: suminf.    0.16667 (1) obj. -48.3572 iterations 1
Cbc0038I Pass   8: suminf.    0.38917 (2) obj. -47.0526 iterations 4
Cbc0038I Pass   9: suminf.    0.34286 (2) obj. -48.0855 iterations 2
Cbc0038I Pass  10: suminf.    0.34286 (2) obj. -48.0855 iterations 0
Cbc0038I Pass  11: suminf.    0.38917 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  12: suminf.    0.75478 (3) obj. -47.0526 iterations 6
Cbc0038I Pass  13: suminf.    0.42105 (1) obj. -50.6798 iterations 4
Cbc0038I Pass  14: suminf.    0.38917 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  15: suminf.    0.34286 (2) obj. -48.0855 iterations 2
Cbc0038I Pass  16: suminf.    0.34286 (2) obj. -48.0855 iterations 0
Cbc0038I Pass  17: suminf.    0.38917 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  18: suminf.    0.72139 (6) obj. -47.0526 iterations 3
Cbc0038I Pass  19: suminf.    0.97742 (5) obj. -47.0526 iterations 7
Cbc0038I Pass  20: suminf.    0.53551 (6) obj. -47.0526 iterations 3
Cbc0038I Pass  21: suminf.    0.87891 (4) obj. -47.0526 iterations 4
Cbc0038I Pass  22: suminf.    0.87891 (4) obj. -47.0526 iterations 0
Cbc0038I Pass  23: suminf.    0.92199 (3) obj. -47.0526 iterations 3
Cbc0038I Pass  24: suminf.    0.78519 (3) obj. -49.152 iterations 2
Cbc0038I Pass  25: suminf.    0.58692 (2) obj. -47.0526 iterations 3
Cbc0038I Pass  26: suminf.    0.58692 (2) obj. -47.0526 iterations 0
Cbc0038I Pass  27: suminf.    0.34649 (2) obj. -47.0526 iterations 2
Cbc0038I Pass  28: suminf.    0.27451 (2) obj. -48.4671 iterations 2
Cbc0038I Pass  29: suminf.    0.44050 (2) obj. -47.0526 iterations 3
Cbc0038I Pass  30: suminf.    0.32099 (2) obj. -48.3673 iterations 1
Cbc0038I Pass  31: suminf.    1.71143 (7) obj. -47.0526 iterations 10
Cbc0038I Rounding solution of -53.7262 is better than previous of -44.1905

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 23 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -57.5431
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.39318 (7) obj. -72.524 iterations 0
Cbc0038I Pass  32: suminf.    0.37956 (2) obj. -57.5431 iterations 8
Cbc0038I Pass  33: suminf.    0.29314 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  34: suminf.    0.54744 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  35: suminf.    0.27451 (2) obj. -63.4671 iterations 2
Cbc0038I Pass  36: suminf.    0.30460 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  37: suminf.    0.66924 (3) obj. -57.5431 iterations 2
Cbc0038I Pass  38: suminf.    0.35294 (2) obj. -62.8873 iterations 2
Cbc0038I Pass  39: suminf.    0.22222 (1) obj. -60.139 iterations 1
Cbc0038I Pass  40: suminf.    0.39652 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  41: suminf.    0.47191 (2) obj. -57.5431 iterations 1
Cbc0038I Pass  42: suminf.    0.39652 (2) obj. -57.5431 iterations 1
Cbc0038I Pass  43: suminf.    1.31742 (6) obj. -57.5431 iterations 5
Cbc0038I Pass  44: suminf.    1.16390 (4) obj. -57.5431 iterations 2
Cbc0038I Pass  45: suminf.    0.35294 (2) obj. -58.8873 iterations 3
Cbc0038I Pass  46: suminf.    0.28901 (2) obj. -57.5431 iterations 1
Cbc0038I Pass  47: suminf.    1.31433 (3) obj. -57.5431 iterations 3
Cbc0038I Pass  48: suminf.    0.98099 (7) obj. -57.5431 iterations 4
Cbc0038I Pass  49: suminf.    0.66889 (3) obj. -57.5431 iterations 3
Cbc0038I Pass  50: suminf.    0.92307 (3) obj. -57.5431 iterations 2
Cbc0038I Pass  51: suminf.    0.65185 (3) obj. -60.7408 iterations 2
Cbc0038I Pass  52: suminf.    0.82081 (4) obj. -57.5431 iterations 5
Cbc0038I Pass  53: suminf.    0.70223 (3) obj. -57.5431 iterations 3
Cbc0038I Pass  54: suminf.    0.36919 (2) obj. -57.5431 iterations 3
Cbc0038I Pass  55: suminf.    0.27451 (2) obj. -59.4671 iterations 2
Cbc0038I Pass  56: suminf.    0.44941 (2) obj. -57.5431 iterations 2
Cbc0038I Pass  57: suminf.    1.01854 (6) obj. -57.5431 iterations 8
Cbc0038I Pass  58: suminf.    1.01854 (6) obj. -57.5431 iterations 0
Cbc0038I Pass  59: suminf.    0.32463 (2) obj. -57.5431 iterations 5
Cbc0038I Pass  60: suminf.    0.27451 (2) obj. -58.4671 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 23 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53.7262 - took 0.01 seconds
Cbc0012I Integer solution of -53.7262 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 11 added rows had average density of 7.6363636
Cbc0013I At root node, 44 cuts changed objective from -72.810442 to -53.7262 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 2.5 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0001I Search completed - best objective -53.72620000000001, took 66 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

