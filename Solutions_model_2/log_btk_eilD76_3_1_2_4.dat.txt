Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 1.71158e-05 - average 1.2773e-07, 11 fixed columns
Coin0506I Presolve 114 (-20) rows, 65 (-11) columns and 350 (-62) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 2.2783693 - largest nonzero change 0 ( 0%) - largest zero change 2.8733339e-05
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Coin0511I After Postsolve, objective 62.863772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Coin0511I After Postsolve, objective 62.863772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.86377226 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.21327
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.5073 iterations 51
Cbc0038I Solution found of -10.5073
Cbc0038I Relaxing continuous gives -10.5073
Cbc0038I Rounding solution of -15.2736 is better than previous of -10.5073

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -15.2736 to -35.1497 (0.06 seconds)
Cbc0038I Round again with cutoff of -37.9212
Cbc0038I Pass   2: suminf.    3.42353 (12) obj. -37.9212 iterations 26
Cbc0038I Pass   3: suminf.    1.77314 (9) obj. -37.9212 iterations 7
Cbc0038I Pass   4: suminf.    1.69648 (8) obj. -37.9212 iterations 1
Cbc0038I Pass   5: suminf.    1.62473 (5) obj. -37.9212 iterations 17
Cbc0038I Pass   6: suminf.    1.60907 (6) obj. -37.9212 iterations 6
Cbc0038I Pass   7: suminf.    1.33647 (6) obj. -37.9212 iterations 10
Cbc0038I Pass   8: suminf.    1.11088 (4) obj. -37.9212 iterations 7
Cbc0038I Pass   9: suminf.    1.06876 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  10: suminf.    1.23414 (5) obj. -37.9212 iterations 17
Cbc0038I Pass  11: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  12: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  13: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  14: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  15: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  16: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  17: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  18: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  19: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  20: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  21: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  22: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  23: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  24: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  25: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  26: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  27: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  28: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  29: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  30: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  31: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.1497 to -36.2811 (0.09 seconds)
Cbc0038I Round again with cutoff of -42.9097
Cbc0038I Pass  31: suminf.    4.13965 (16) obj. -42.9097 iterations 1
Cbc0038I Pass  32: suminf.    2.28498 (10) obj. -42.9097 iterations 12
Cbc0038I Pass  33: suminf.    1.45302 (7) obj. -42.9097 iterations 13
Cbc0038I Pass  34: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  35: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  36: suminf.    1.45461 (7) obj. -42.9097 iterations 10
Cbc0038I Pass  37: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  38: suminf.    3.76841 (11) obj. -42.9097 iterations 18
Cbc0038I Pass  39: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  40: suminf.    1.45302 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  41: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  42: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  43: suminf.    1.45461 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  44: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  45: suminf.    3.76841 (11) obj. -42.9097 iterations 17
Cbc0038I Pass  46: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  47: suminf.    1.45302 (7) obj. -42.9097 iterations 11
Cbc0038I Pass  48: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  49: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  50: suminf.    1.45461 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  51: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  52: suminf.    3.76841 (11) obj. -42.9097 iterations 17
Cbc0038I Pass  53: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  54: suminf.    1.45302 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  55: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  56: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  57: suminf.    1.45461 (7) obj. -42.9097 iterations 10
Cbc0038I Pass  58: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  59: suminf.    3.76841 (11) obj. -42.9097 iterations 18
Cbc0038I Pass  60: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -36.2811 - took 0.10 seconds
Cbc0012I Integer solution of -36.28106 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0031I 27 added rows had average density of 52.555556
Cbc0013I At root node, 27 cuts changed objective from -62.863772 to -55.071086 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14832 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2812 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.28106 best solution, best possible -55.071086 (1.02 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 28 rows 20 columns
Cbc0012I Integer solution of -37.233 found by RINS after 10027 iterations and 41 nodes (1.29 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 31 rows 25 columns
Cbc0001I Search completed - best objective -37.23299999999999, took 12189 iterations and 126 nodes (1.45 seconds)
Cbc0032I Strong branching done 1344 times (18840 iterations), fathomed 17 nodes and fixed 91 variables
Cbc0035I Maximum depth 22, 434 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 114 (-38) columns and 1883 (-1420) elements
Clp1000I sum of infeasibilities 4.94003e-08 - average 5.04085e-10, 48 fixed columns
Coin0506I Presolve 52 (-46) rows, 66 (-48) columns and 231 (-1652) elements
Clp0006I 0  Obj 16.209086 Dual inf 1.4332226 (65)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 3.1683659 - largest nonzero change 2.7163744e-05 ( 0.00089819337%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 16.824021
Clp0000I Optimal - objective value 16.824021
Coin0511I After Postsolve, objective 16.824021, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 16.824021 Dual inf 31.042073 (39)
Clp0014I Perturbing problem by 0.001% of 2.0700063 - largest nonzero change 2.9932708e-05 ( 0.0022879966%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 74.418916
Clp0000I Optimal - objective value 74.418916
Clp0000I Optimal - objective value 74.418916
Coin0511I After Postsolve, objective 74.418916, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.41891566 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 114 columns (114 integer (114 of which binary)) and 1885 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.715%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.9074
Cbc0038I Pass   1: suminf.    3.58318 (33) obj. -53.8281 iterations 13
Cbc0038I Pass   2: suminf.    1.95557 (20) obj. -35.4581 iterations 13
Cbc0038I Pass   3: suminf.    0.77282 (9) obj. -25.6409 iterations 11
Cbc0038I Solution found of -14.6673
Cbc0038I Rounding solution of -24.9868 is better than previous of -14.6673

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -24.9868 to -27.204 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.0922
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.58318 (33) obj. -53.8281 iterations 0
Cbc0038I Pass   5: suminf.    1.95557 (20) obj. -35.4581 iterations 13
Cbc0038I Pass   6: suminf.    1.33584 (11) obj. -31.0922 iterations 12
Cbc0038I Pass   7: suminf.    0.87038 (10) obj. -35.0532 iterations 1
Cbc0038I Pass   8: suminf.    1.00869 (5) obj. -31.0922 iterations 22
Cbc0038I Pass   9: suminf.    1.00869 (5) obj. -31.0922 iterations 0
Cbc0038I Pass  10: suminf.    0.71291 (7) obj. -31.0922 iterations 9
Cbc0038I Pass  11: suminf.    0.56992 (6) obj. -31.0922 iterations 4
Cbc0038I Pass  12: suminf.    1.55707 (6) obj. -31.0922 iterations 5
Cbc0038I Pass  13: suminf.    0.71291 (7) obj. -31.0922 iterations 4
Cbc0038I Pass  14: suminf.    1.82000 (14) obj. -31.0922 iterations 30
Cbc0038I Pass  15: suminf.    1.55211 (12) obj. -32.0803 iterations 10
Cbc0038I Pass  16: suminf.    1.20716 (7) obj. -31.0922 iterations 21
Cbc0038I Pass  17: suminf.    1.07991 (7) obj. -31.0922 iterations 1
Cbc0038I Pass  18: suminf.    1.18497 (6) obj. -31.0922 iterations 10
Cbc0038I Pass  19: suminf.    0.82432 (5) obj. -31.1417 iterations 3
Cbc0038I Pass  20: suminf.    1.32836 (6) obj. -31.0922 iterations 5
Cbc0038I Pass  21: suminf.    1.22043 (6) obj. -31.0922 iterations 3
Cbc0038I Pass  22: suminf.    1.85543 (7) obj. -31.0922 iterations 12
Cbc0038I Pass  23: suminf.    0.71291 (7) obj. -31.0922 iterations 4
Cbc0038I Pass  24: suminf.    0.56992 (6) obj. -31.0922 iterations 4
Cbc0038I Pass  25: suminf.    1.55707 (6) obj. -31.0922 iterations 5
Cbc0038I Pass  26: suminf.    0.71291 (7) obj. -31.0922 iterations 4
Cbc0038I Pass  27: suminf.    3.34632 (20) obj. -31.0922 iterations 44
Cbc0038I Pass  28: suminf.    1.63037 (12) obj. -32.4671 iterations 7
Cbc0038I Pass  29: suminf.    1.27607 (10) obj. -32.2305 iterations 2
Cbc0038I Pass  30: suminf.    1.20317 (7) obj. -31.0922 iterations 21
Cbc0038I Pass  31: suminf.    1.20317 (7) obj. -31.0922 iterations 2
Cbc0038I Pass  32: suminf.    0.97612 (6) obj. -31.0922 iterations 11
Cbc0038I Pass  33: suminf.    0.77277 (5) obj. -31.1717 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 36 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -27.204 to -34.9994 (0.06 seconds)
Cbc0038I Round again with cutoff of -41.2166
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.58318 (33) obj. -53.8281 iterations 0
Cbc0038I Pass  34: suminf.    2.83112 (21) obj. -41.2166 iterations 28
Cbc0038I Pass  35: suminf.    2.88267 (14) obj. -41.2166 iterations 23
Cbc0038I Pass  36: suminf.    2.06612 (12) obj. -41.2166 iterations 3
Cbc0038I Pass  37: suminf.    1.90990 (12) obj. -41.2166 iterations 1
Cbc0038I Pass  38: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  39: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  40: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  41: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  42: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  43: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  44: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  45: suminf.    2.96271 (13) obj. -41.2166 iterations 8
Cbc0038I Pass  46: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  47: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  48: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  49: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  50: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  51: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  52: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  53: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  54: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  55: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  56: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  57: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  58: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  59: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  60: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  61: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  62: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -34.9994 - took 0.08 seconds
Cbc0012I Integer solution of -34.99945 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 26 rows 32 columns
Cbc0031I 54 added rows had average density of 30.314815
Cbc0013I At root node, 54 cuts changed objective from -66.084794 to -41.256343 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9933 row cuts average 6.3 elements, 1 column cuts (1 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1479 row cuts average 104.6 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 554 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1195 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 295 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.651 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.99945 best solution, best possible -41.256343 (2.39 seconds)
Cbc0012I Integer solution of -37.05709 found by rounding after 5073 iterations and 11 nodes (2.81 seconds)
Cbc0016I Integer solution of -37.22965 found by strong branching after 5402 iterations and 20 nodes (2.87 seconds)
Cbc0016I Integer solution of -37.233 found by strong branching after 5466 iterations and 22 nodes (2.89 seconds)
Cbc0010I After 33 nodes, 6 on tree, -37.233 best solution, best possible -41.256343 (3.12 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 31 rows 45 columns
Cbc0001I Search completed - best objective -37.23299999999999, took 7339 iterations and 54 nodes (3.52 seconds)
Cbc0032I Strong branching done 812 times (8514 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 14, 125 variables fixed on reduced cost
Total time (CPU seconds):       2.77   (Wallclock seconds):       3.53

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 1.71158e-05 - average 1.2773e-07, 11 fixed columns
Coin0506I Presolve 114 (-20) rows, 65 (-11) columns and 350 (-62) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 2.2783693 - largest nonzero change 0 ( 0%) - largest zero change 2.8733339e-05
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Coin0511I After Postsolve, objective 62.863772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Clp0000I Optimal - objective value 62.863772
Coin0511I After Postsolve, objective 62.863772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.86377226 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.21327
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.5073 iterations 51
Cbc0038I Solution found of -10.5073
Cbc0038I Relaxing continuous gives -10.5073
Cbc0038I Rounding solution of -15.2736 is better than previous of -10.5073

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -15.2736 to -35.1497 (0.06 seconds)
Cbc0038I Round again with cutoff of -37.9212
Cbc0038I Pass   2: suminf.    3.42353 (12) obj. -37.9212 iterations 26
Cbc0038I Pass   3: suminf.    1.77314 (9) obj. -37.9212 iterations 7
Cbc0038I Pass   4: suminf.    1.69648 (8) obj. -37.9212 iterations 1
Cbc0038I Pass   5: suminf.    1.62473 (5) obj. -37.9212 iterations 17
Cbc0038I Pass   6: suminf.    1.60907 (6) obj. -37.9212 iterations 6
Cbc0038I Pass   7: suminf.    1.33647 (6) obj. -37.9212 iterations 10
Cbc0038I Pass   8: suminf.    1.11088 (4) obj. -37.9212 iterations 7
Cbc0038I Pass   9: suminf.    1.06876 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  10: suminf.    1.23414 (5) obj. -37.9212 iterations 17
Cbc0038I Pass  11: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  12: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  13: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  14: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  15: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  16: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  17: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  18: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  19: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  20: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  21: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  22: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  23: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  24: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  25: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I Pass  26: suminf.    1.02856 (4) obj. -37.9212 iterations 1
Cbc0038I Pass  27: suminf.    0.93784 (4) obj. -37.9212 iterations 3
Cbc0038I Pass  28: suminf.    1.23414 (5) obj. -37.9212 iterations 5
Cbc0038I Pass  29: suminf.    1.01004 (4) obj. -37.9212 iterations 7
Cbc0038I Pass  30: suminf.    2.32899 (7) obj. -37.9212 iterations 12
Cbc0038I Pass  31: suminf.    1.14411 (5) obj. -37.9212 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.1497 to -36.2811 (0.10 seconds)
Cbc0038I Round again with cutoff of -42.9097
Cbc0038I Pass  31: suminf.    4.13965 (16) obj. -42.9097 iterations 1
Cbc0038I Pass  32: suminf.    2.28498 (10) obj. -42.9097 iterations 12
Cbc0038I Pass  33: suminf.    1.45302 (7) obj. -42.9097 iterations 13
Cbc0038I Pass  34: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  35: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  36: suminf.    1.45461 (7) obj. -42.9097 iterations 10
Cbc0038I Pass  37: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  38: suminf.    3.76841 (11) obj. -42.9097 iterations 18
Cbc0038I Pass  39: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  40: suminf.    1.45302 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  41: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  42: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  43: suminf.    1.45461 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  44: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  45: suminf.    3.76841 (11) obj. -42.9097 iterations 17
Cbc0038I Pass  46: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  47: suminf.    1.45302 (7) obj. -42.9097 iterations 11
Cbc0038I Pass  48: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  49: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  50: suminf.    1.45461 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  51: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  52: suminf.    3.76841 (11) obj. -42.9097 iterations 17
Cbc0038I Pass  53: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  54: suminf.    1.45302 (7) obj. -42.9097 iterations 9
Cbc0038I Pass  55: suminf.    1.45302 (7) obj. -42.9097 iterations 0
Cbc0038I Pass  56: suminf.    1.96892 (10) obj. -42.9097 iterations 11
Cbc0038I Pass  57: suminf.    1.45461 (7) obj. -42.9097 iterations 10
Cbc0038I Pass  58: suminf.    1.35753 (6) obj. -42.9097 iterations 3
Cbc0038I Pass  59: suminf.    3.76841 (11) obj. -42.9097 iterations 18
Cbc0038I Pass  60: suminf.    1.87336 (7) obj. -42.9097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -36.2811 - took 0.11 seconds
Cbc0012I Integer solution of -36.28106 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 68 rows 41 columns
Cbc0031I 27 added rows had average density of 52.555556
Cbc0013I At root node, 27 cuts changed objective from -62.863772 to -55.071086 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14832 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2812 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.28106 best solution, best possible -55.071086 (1.04 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 28 rows 20 columns
Cbc0012I Integer solution of -37.233 found by RINS after 10027 iterations and 41 nodes (1.31 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 31 rows 25 columns
Cbc0001I Search completed - best objective -37.23299999999999, took 12189 iterations and 126 nodes (1.48 seconds)
Cbc0032I Strong branching done 1344 times (18840 iterations), fathomed 17 nodes and fixed 91 variables
Cbc0035I Maximum depth 22, 434 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       1.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 114 (-39) columns and 1883 (-1421) elements
Clp1000I sum of infeasibilities 4.94003e-08 - average 5.04085e-10, 48 fixed columns
Coin0506I Presolve 52 (-46) rows, 66 (-48) columns and 231 (-1652) elements
Clp0006I 0  Obj 16.209086 Dual inf 1.4332226 (65)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 3.1683659 - largest nonzero change 2.7163744e-05 ( 0.00089819337%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 16.824021
Clp0000I Optimal - objective value 16.824021
Coin0511I After Postsolve, objective 16.824021, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 16.824021 Dual inf 31.042073 (39)
Clp0014I Perturbing problem by 0.001% of 2.0700063 - largest nonzero change 2.9932708e-05 ( 0.0022879966%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 74.418916
Clp0000I Optimal - objective value 74.418916
Clp0000I Optimal - objective value 74.418916
Coin0511I After Postsolve, objective 74.418916, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.41891566 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 114 columns (114 integer (114 of which binary)) and 1885 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.715%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.9074
Cbc0038I Pass   1: suminf.    3.58318 (33) obj. -53.8281 iterations 13
Cbc0038I Pass   2: suminf.    1.95557 (20) obj. -35.4581 iterations 13
Cbc0038I Pass   3: suminf.    0.77282 (9) obj. -25.6409 iterations 11
Cbc0038I Solution found of -14.6673
Cbc0038I Rounding solution of -24.9868 is better than previous of -14.6673

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -24.9868 to -27.204 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.0922
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.58318 (33) obj. -53.8281 iterations 0
Cbc0038I Pass   5: suminf.    1.95557 (20) obj. -35.4581 iterations 13
Cbc0038I Pass   6: suminf.    1.33584 (11) obj. -31.0922 iterations 12
Cbc0038I Pass   7: suminf.    0.87038 (10) obj. -35.0532 iterations 1
Cbc0038I Pass   8: suminf.    1.00869 (5) obj. -31.0922 iterations 22
Cbc0038I Pass   9: suminf.    1.00869 (5) obj. -31.0922 iterations 0
Cbc0038I Pass  10: suminf.    0.71291 (7) obj. -31.0922 iterations 9
Cbc0038I Pass  11: suminf.    0.56992 (6) obj. -31.0922 iterations 4
Cbc0038I Pass  12: suminf.    1.55707 (6) obj. -31.0922 iterations 5
Cbc0038I Pass  13: suminf.    0.71291 (7) obj. -31.0922 iterations 4
Cbc0038I Pass  14: suminf.    1.82000 (14) obj. -31.0922 iterations 30
Cbc0038I Pass  15: suminf.    1.55211 (12) obj. -32.0803 iterations 10
Cbc0038I Pass  16: suminf.    1.20716 (7) obj. -31.0922 iterations 21
Cbc0038I Pass  17: suminf.    1.07991 (7) obj. -31.0922 iterations 1
Cbc0038I Pass  18: suminf.    1.18497 (6) obj. -31.0922 iterations 10
Cbc0038I Pass  19: suminf.    0.82432 (5) obj. -31.1417 iterations 3
Cbc0038I Pass  20: suminf.    1.32836 (6) obj. -31.0922 iterations 5
Cbc0038I Pass  21: suminf.    1.22043 (6) obj. -31.0922 iterations 3
Cbc0038I Pass  22: suminf.    1.85543 (7) obj. -31.0922 iterations 12
Cbc0038I Pass  23: suminf.    0.71291 (7) obj. -31.0922 iterations 4
Cbc0038I Pass  24: suminf.    0.56992 (6) obj. -31.0922 iterations 4
Cbc0038I Pass  25: suminf.    1.55707 (6) obj. -31.0922 iterations 5
Cbc0038I Pass  26: suminf.    0.71291 (7) obj. -31.0922 iterations 4
Cbc0038I Pass  27: suminf.    3.34632 (20) obj. -31.0922 iterations 44
Cbc0038I Pass  28: suminf.    1.63037 (12) obj. -32.4671 iterations 7
Cbc0038I Pass  29: suminf.    1.27607 (10) obj. -32.2305 iterations 2
Cbc0038I Pass  30: suminf.    1.20317 (7) obj. -31.0922 iterations 21
Cbc0038I Pass  31: suminf.    1.20317 (7) obj. -31.0922 iterations 2
Cbc0038I Pass  32: suminf.    0.97612 (6) obj. -31.0922 iterations 11
Cbc0038I Pass  33: suminf.    0.77277 (5) obj. -31.1717 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 36 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -27.204 to -34.9994 (0.07 seconds)
Cbc0038I Round again with cutoff of -41.2166
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.58318 (33) obj. -53.8281 iterations 0
Cbc0038I Pass  34: suminf.    2.83112 (21) obj. -41.2166 iterations 28
Cbc0038I Pass  35: suminf.    2.88267 (14) obj. -41.2166 iterations 23
Cbc0038I Pass  36: suminf.    2.06612 (12) obj. -41.2166 iterations 3
Cbc0038I Pass  37: suminf.    1.90990 (12) obj. -41.2166 iterations 1
Cbc0038I Pass  38: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  39: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  40: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  41: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  42: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  43: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  44: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  45: suminf.    2.96271 (13) obj. -41.2166 iterations 8
Cbc0038I Pass  46: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  47: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  48: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  49: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  50: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  51: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  52: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  53: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  54: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  55: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  56: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  57: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I Pass  58: suminf.    3.07375 (15) obj. -41.2166 iterations 15
Cbc0038I Pass  59: suminf.    3.07375 (15) obj. -41.2166 iterations 1
Cbc0038I Pass  60: suminf.    2.96271 (13) obj. -41.2166 iterations 7
Cbc0038I Pass  61: suminf.    1.99432 (11) obj. -41.2166 iterations 3
Cbc0038I Pass  62: suminf.    1.93833 (11) obj. -41.2166 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -34.9994 - took 0.08 seconds
Cbc0012I Integer solution of -34.99945 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 26 rows 32 columns
Cbc0031I 54 added rows had average density of 30.314815
Cbc0013I At root node, 54 cuts changed objective from -66.084794 to -41.256343 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9933 row cuts average 6.3 elements, 1 column cuts (1 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1479 row cuts average 104.6 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 554 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1195 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 295 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.666 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.99945 best solution, best possible -41.256343 (2.46 seconds)
Cbc0012I Integer solution of -37.05709 found by rounding after 5073 iterations and 11 nodes (2.91 seconds)
Cbc0016I Integer solution of -37.22965 found by strong branching after 5402 iterations and 20 nodes (2.98 seconds)
Cbc0016I Integer solution of -37.233 found by strong branching after 5466 iterations and 22 nodes (2.99 seconds)
Cbc0010I After 30 nodes, 5 on tree, -37.233 best solution, best possible -41.256343 (3.17 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 31 rows 45 columns
Cbc0001I Search completed - best objective -37.23299999999999, took 7339 iterations and 54 nodes (3.68 seconds)
Cbc0032I Strong branching done 812 times (8514 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 14, 125 variables fixed on reduced cost
Total time (CPU seconds):       2.88   (Wallclock seconds):       3.70

