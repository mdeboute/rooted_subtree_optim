Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 7.10787e-05 - average 5.18823e-07, 19 fixed columns
Coin0506I Presolve 100 (-37) rows, 56 (-19) columns and 304 (-112) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 2.167029 - largest nonzero change 0 ( 0%) - largest zero change 1.9498817e-05
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Coin0511I After Postsolve, objective 38.540995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Coin0511I After Postsolve, objective 38.540995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.54099525 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.307%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.82357
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.27084 iterations 42
Cbc0038I Solution found of -0.27084
Cbc0038I Relaxing continuous gives -0.27084
Cbc0038I Rounding solution of -7.72516 is better than previous of -0.27084

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 52 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.72516 to -13.8188 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.2812
Cbc0038I Pass   2: suminf.    1.70638 (9) obj. -16.2812 iterations 12
Cbc0038I Pass   3: suminf.    1.52541 (6) obj. -16.2812 iterations 13
Cbc0038I Pass   4: suminf.    1.25763 (5) obj. -16.2812 iterations 6
Cbc0038I Pass   5: suminf.    2.22670 (6) obj. -16.2812 iterations 16
Cbc0038I Pass   6: suminf.    1.68731 (6) obj. -16.2812 iterations 1
Cbc0038I Pass   7: suminf.    1.68731 (6) obj. -16.2812 iterations 0
Cbc0038I Pass   8: suminf.    1.72144 (5) obj. -16.2812 iterations 5
Cbc0038I Pass   9: suminf.    1.13398 (5) obj. -16.2812 iterations 7
Cbc0038I Pass  10: suminf.    0.85834 (3) obj. -16.2812 iterations 6
Cbc0038I Pass  11: suminf.    1.65388 (6) obj. -16.2812 iterations 8
Cbc0038I Pass  12: suminf.    1.39697 (4) obj. -16.2812 iterations 6
Cbc0038I Pass  13: suminf.    1.00607 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  14: suminf.    0.99923 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  15: suminf.    2.21826 (6) obj. -16.2812 iterations 25
Cbc0038I Pass  16: suminf.    1.41423 (5) obj. -16.2812 iterations 9
Cbc0038I Pass  17: suminf.    1.24294 (5) obj. -16.2812 iterations 6
Cbc0038I Pass  18: suminf.    1.92180 (9) obj. -16.2812 iterations 11
Cbc0038I Pass  19: suminf.    1.92180 (9) obj. -16.2812 iterations 0
Cbc0038I Pass  20: suminf.    1.03555 (5) obj. -16.2812 iterations 15
Cbc0038I Pass  21: suminf.    0.85834 (3) obj. -16.2812 iterations 2
Cbc0038I Pass  22: suminf.    1.65388 (6) obj. -16.2812 iterations 7
Cbc0038I Pass  23: suminf.    1.39697 (4) obj. -16.2812 iterations 5
Cbc0038I Pass  24: suminf.    1.00607 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  25: suminf.    0.99923 (4) obj. -16.2812 iterations 1
Cbc0038I Pass  26: suminf.    1.67372 (7) obj. -16.2812 iterations 18
Cbc0038I Pass  27: suminf.    1.21112 (6) obj. -16.2812 iterations 9
Cbc0038I Pass  28: suminf.    1.45706 (5) obj. -16.2812 iterations 15
Cbc0038I Pass  29: suminf.    1.38878 (8) obj. -16.2812 iterations 5
Cbc0038I Pass  30: suminf.    1.43914 (5) obj. -16.2812 iterations 14
Cbc0038I Pass  31: suminf.    1.25926 (6) obj. -16.2812 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 59 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13.8188 - took 0.04 seconds
Cbc0012I Integer solution of -13.81878 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 52 rows 31 columns
Cbc0031I 18 added rows had average density of 59.055556
Cbc0013I At root node, 18 cuts changed objective from -38.442175 to -30.089853 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7010 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1588 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0016I Integer solution of -15.44523 found by strong branching after 6027 iterations and 16 nodes (0.67 seconds)
Cbc0001I Search completed - best objective -15.44523, took 6416 iterations and 26 nodes (0.68 seconds)
Cbc0032I Strong branching done 410 times (7055 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 11, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.66   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-47) rows, 118 (-34) columns and 2108 (-1195) elements
Clp1000I sum of infeasibilities 1.31501e-07 - average 1.22898e-09, 85 fixed columns
Coin0506I Presolve 25 (-82) rows, 33 (-85) columns and 111 (-1997) elements
Clp0006I 0  Obj -20.220289 Dual inf 8.4489271 (33)
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 0.42436666 - largest nonzero change 2.9555761e-05 ( 0.0023005115%) - largest zero change 2.3197996e-05
Clp0000I Optimal - objective value -19.68697
Clp0000I Optimal - objective value -19.68697
Coin0511I After Postsolve, objective -19.68697, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -19.68697 Dual inf 60.731233 (44)
Clp0014I Perturbing problem by 0.001% of 1.6941622 - largest nonzero change 1.2891843e-05 ( 0.00076683715%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.743639
Clp0000I Optimal - objective value 49.743639
Clp0000I Optimal - objective value 49.743639
Coin0511I After Postsolve, objective 49.743639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.74363882 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 118 columns (118 integer (118 of which binary)) and 2116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.03428
Cbc0038I Pass   1: suminf.    3.11103 (37) obj. -41.9032 iterations 14
Cbc0038I Pass   2: suminf.    1.88234 (33) obj. -36.3218 iterations 8
Cbc0038I Pass   3: suminf.    1.12228 (23) obj. -22.457 iterations 10
Cbc0038I Solution found of 4.14869
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 4.14869 to -1.3136 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.51194
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.11103 (37) obj. -41.9032 iterations 0
Cbc0038I Pass   5: suminf.    1.88234 (33) obj. -36.3218 iterations 12
Cbc0038I Pass   6: suminf.    0.61914 (6) obj. -5.51194 iterations 35
Cbc0038I Pass   7: suminf.    1.08269 (4) obj. -5.51194 iterations 14
Cbc0038I Pass   8: suminf.    0.56757 (3) obj. -5.51194 iterations 7
Cbc0038I Pass   9: suminf.    0.95762 (3) obj. -5.51194 iterations 8
Cbc0038I Pass  10: suminf.    2.38451 (16) obj. -5.51194 iterations 17
Cbc0038I Pass  11: suminf.    0.90276 (14) obj. -5.51194 iterations 12
Cbc0038I Pass  12: suminf.    0.90276 (14) obj. -5.51194 iterations 0
Cbc0038I Pass  13: suminf.    0.96531 (6) obj. -5.51194 iterations 26
Cbc0038I Pass  14: suminf.    0.41574 (6) obj. -5.51194 iterations 15
Cbc0038I Pass  15: suminf.    0.52493 (5) obj. -5.51194 iterations 10
Cbc0038I Pass  16: suminf.    1.31287 (13) obj. -5.51194 iterations 32
Cbc0038I Pass  17: suminf.    0.50959 (11) obj. -5.51194 iterations 12
Cbc0038I Pass  18: suminf.    0.92364 (7) obj. -5.51194 iterations 23
Cbc0038I Pass  19: suminf.    0.92364 (7) obj. -5.51194 iterations 3
Cbc0038I Pass  20: suminf.    0.60415 (7) obj. -5.51194 iterations 14
Cbc0038I Pass  21: suminf.    0.60415 (7) obj. -5.51194 iterations 2
Cbc0038I Pass  22: suminf.    2.70340 (11) obj. -5.51194 iterations 15
Cbc0038I Pass  23: suminf.    1.68184 (7) obj. -5.51194 iterations 1
Cbc0038I Pass  24: suminf.    1.23445 (7) obj. -5.51194 iterations 7
Cbc0038I Pass  25: suminf.    2.71201 (11) obj. -5.51194 iterations 10
Cbc0038I Pass  26: suminf.    1.68184 (7) obj. -5.51194 iterations 1
Cbc0038I Pass  27: suminf.    1.56953 (15) obj. -5.51194 iterations 33
Cbc0038I Pass  28: suminf.    0.74840 (11) obj. -5.51194 iterations 7
Cbc0038I Pass  29: suminf.    1.06497 (10) obj. -5.51194 iterations 19
Cbc0038I Pass  30: suminf.    1.06497 (10) obj. -5.51194 iterations 1
Cbc0038I Pass  31: suminf.    0.79482 (7) obj. -5.51194 iterations 17
Cbc0038I Pass  32: suminf.    0.60102 (7) obj. -5.89954 iterations 7
Cbc0038I Pass  33: suminf.    1.67262 (12) obj. -5.51194 iterations 15
Cbc0038I Rounding solution of -1.81802 is better than previous of -1.3136

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -1.81802 to -8.26112 (0.08 seconds)
Cbc0038I Round again with cutoff of -15.2682
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.11103 (37) obj. -41.9032 iterations 0
Cbc0038I Pass  34: suminf.    1.88234 (33) obj. -36.3218 iterations 12
Cbc0038I Pass  35: suminf.    1.12228 (23) obj. -22.457 iterations 10
Cbc0038I Pass  36: suminf.    1.41360 (14) obj. -15.2682 iterations 21
Cbc0038I Pass  37: suminf.    0.88094 (14) obj. -15.2682 iterations 3
Cbc0038I Pass  38: suminf.    1.72761 (10) obj. -15.2682 iterations 27
Cbc0038I Pass  39: suminf.    1.47717 (11) obj. -15.2682 iterations 7
Cbc0038I Pass  40: suminf.    1.00297 (11) obj. -15.2682 iterations 10
Cbc0038I Pass  41: suminf.    0.87544 (16) obj. -15.2682 iterations 4
Cbc0038I Pass  42: suminf.    1.26586 (10) obj. -15.2682 iterations 12
Cbc0038I Pass  43: suminf.    0.70974 (8) obj. -15.2682 iterations 11
Cbc0038I Pass  44: suminf.    0.90226 (8) obj. -15.2682 iterations 9
Cbc0038I Pass  45: suminf.    1.21843 (12) obj. -15.2682 iterations 13
Cbc0038I Pass  46: suminf.    0.86852 (10) obj. -15.2682 iterations 8
Cbc0038I Pass  47: suminf.    0.90226 (9) obj. -15.2682 iterations 13
Cbc0038I Pass  48: suminf.    0.79776 (9) obj. -15.2682 iterations 7
Cbc0038I Pass  49: suminf.    0.95243 (14) obj. -15.2682 iterations 24
Cbc0038I Pass  50: suminf.    0.78881 (14) obj. -15.2682 iterations 3
Cbc0038I Pass  51: suminf.    1.20294 (13) obj. -15.2682 iterations 18
Cbc0038I Pass  52: suminf.    0.79776 (9) obj. -15.2682 iterations 7
Cbc0038I Pass  53: suminf.    0.90226 (9) obj. -15.2682 iterations 6
Cbc0038I Pass  54: suminf.    1.32382 (12) obj. -15.2682 iterations 15
Cbc0038I Pass  55: suminf.    1.20621 (15) obj. -15.2682 iterations 5
Cbc0038I Pass  56: suminf.    1.25884 (11) obj. -15.2682 iterations 10
Cbc0038I Pass  57: suminf.    1.14137 (14) obj. -15.2682 iterations 6
Cbc0038I Pass  58: suminf.    1.33337 (13) obj. -15.2682 iterations 13
Cbc0038I Pass  59: suminf.    1.29925 (13) obj. -15.2682 iterations 4
Cbc0038I Pass  60: suminf.    2.26738 (13) obj. -15.2682 iterations 6
Cbc0038I Pass  61: suminf.    2.26738 (13) obj. -15.2682 iterations 0
Cbc0038I Pass  62: suminf.    2.84497 (17) obj. -15.2682 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -8.26112 - took 0.10 seconds
Cbc0012I Integer solution of -8.26112 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 107 rows 118 columns, reduced to 15 rows 17 columns
Cbc0031I 59 added rows had average density of 33.118644
Cbc0013I At root node, 59 cuts changed objective from -43.29613 to -18.603234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7870 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 107.5 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 604 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 9 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 580 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 165 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.643 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.26112 best solution, best possible -18.603234 (2.15 seconds)
Cbc0012I Integer solution of -12.53734 found by rounding after 3615 iterations and 1 nodes (2.15 seconds)
Cbc0004I Integer solution of -15.44523 found after 3639 iterations and 1 nodes (2.21 seconds)
Cbc0010I After 6 nodes, 5 on tree, -15.44523 best solution, best possible -18.134848 (2.86 seconds)
Cbc0001I Search completed - best objective -15.44523, took 4972 iterations and 24 nodes (3.41 seconds)
Cbc0032I Strong branching done 608 times (13568 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 66 variables fixed on reduced cost
Total time (CPU seconds):       2.52   (Wallclock seconds):       3.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 7.10787e-05 - average 5.18823e-07, 19 fixed columns
Coin0506I Presolve 100 (-37) rows, 56 (-19) columns and 304 (-112) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 2.167029 - largest nonzero change 0 ( 0%) - largest zero change 1.9498817e-05
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Coin0511I After Postsolve, objective 38.540995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Clp0000I Optimal - objective value 38.540995
Coin0511I After Postsolve, objective 38.540995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.54099525 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.307%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.82357
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.27084 iterations 42
Cbc0038I Solution found of -0.27084
Cbc0038I Relaxing continuous gives -0.27084
Cbc0038I Rounding solution of -7.72516 is better than previous of -0.27084

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 52 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.72516 to -13.8188 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.2812
Cbc0038I Pass   2: suminf.    1.70638 (9) obj. -16.2812 iterations 12
Cbc0038I Pass   3: suminf.    1.52541 (6) obj. -16.2812 iterations 13
Cbc0038I Pass   4: suminf.    1.25763 (5) obj. -16.2812 iterations 6
Cbc0038I Pass   5: suminf.    2.22670 (6) obj. -16.2812 iterations 16
Cbc0038I Pass   6: suminf.    1.68731 (6) obj. -16.2812 iterations 1
Cbc0038I Pass   7: suminf.    1.68731 (6) obj. -16.2812 iterations 0
Cbc0038I Pass   8: suminf.    1.72144 (5) obj. -16.2812 iterations 5
Cbc0038I Pass   9: suminf.    1.13398 (5) obj. -16.2812 iterations 7
Cbc0038I Pass  10: suminf.    0.85834 (3) obj. -16.2812 iterations 6
Cbc0038I Pass  11: suminf.    1.65388 (6) obj. -16.2812 iterations 8
Cbc0038I Pass  12: suminf.    1.39697 (4) obj. -16.2812 iterations 6
Cbc0038I Pass  13: suminf.    1.00607 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  14: suminf.    0.99923 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  15: suminf.    2.21826 (6) obj. -16.2812 iterations 25
Cbc0038I Pass  16: suminf.    1.41423 (5) obj. -16.2812 iterations 9
Cbc0038I Pass  17: suminf.    1.24294 (5) obj. -16.2812 iterations 6
Cbc0038I Pass  18: suminf.    1.92180 (9) obj. -16.2812 iterations 11
Cbc0038I Pass  19: suminf.    1.92180 (9) obj. -16.2812 iterations 0
Cbc0038I Pass  20: suminf.    1.03555 (5) obj. -16.2812 iterations 15
Cbc0038I Pass  21: suminf.    0.85834 (3) obj. -16.2812 iterations 2
Cbc0038I Pass  22: suminf.    1.65388 (6) obj. -16.2812 iterations 7
Cbc0038I Pass  23: suminf.    1.39697 (4) obj. -16.2812 iterations 5
Cbc0038I Pass  24: suminf.    1.00607 (4) obj. -16.2812 iterations 2
Cbc0038I Pass  25: suminf.    0.99923 (4) obj. -16.2812 iterations 1
Cbc0038I Pass  26: suminf.    1.67372 (7) obj. -16.2812 iterations 18
Cbc0038I Pass  27: suminf.    1.21112 (6) obj. -16.2812 iterations 9
Cbc0038I Pass  28: suminf.    1.45706 (5) obj. -16.2812 iterations 15
Cbc0038I Pass  29: suminf.    1.38878 (8) obj. -16.2812 iterations 5
Cbc0038I Pass  30: suminf.    1.43914 (5) obj. -16.2812 iterations 14
Cbc0038I Pass  31: suminf.    1.25926 (6) obj. -16.2812 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 59 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -13.8188 - took 0.04 seconds
Cbc0012I Integer solution of -13.81878 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 52 rows 31 columns
Cbc0031I 18 added rows had average density of 59.055556
Cbc0013I At root node, 18 cuts changed objective from -38.442175 to -30.089853 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7010 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1588 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0016I Integer solution of -15.44523 found by strong branching after 6027 iterations and 16 nodes (0.66 seconds)
Cbc0001I Search completed - best objective -15.44523, took 6416 iterations and 26 nodes (0.67 seconds)
Cbc0032I Strong branching done 410 times (7055 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 11, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 118 (-35) columns and 2108 (-1196) elements
Clp1000I sum of infeasibilities 1.31501e-07 - average 1.22898e-09, 85 fixed columns
Coin0506I Presolve 25 (-82) rows, 33 (-85) columns and 111 (-1997) elements
Clp0006I 0  Obj -20.220289 Dual inf 8.4489271 (33)
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 0.42436666 - largest nonzero change 2.9555761e-05 ( 0.0023005115%) - largest zero change 2.3197996e-05
Clp0000I Optimal - objective value -19.68697
Clp0000I Optimal - objective value -19.68697
Coin0511I After Postsolve, objective -19.68697, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -19.68697 Dual inf 60.731233 (44)
Clp0014I Perturbing problem by 0.001% of 1.6941622 - largest nonzero change 1.2891843e-05 ( 0.00076683715%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.743639
Clp0000I Optimal - objective value 49.743639
Clp0000I Optimal - objective value 49.743639
Coin0511I After Postsolve, objective 49.743639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.74363882 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 118 columns (118 integer (118 of which binary)) and 2116 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.03428
Cbc0038I Pass   1: suminf.    3.11103 (37) obj. -41.9032 iterations 14
Cbc0038I Pass   2: suminf.    1.88234 (33) obj. -36.3218 iterations 8
Cbc0038I Pass   3: suminf.    1.12228 (23) obj. -22.457 iterations 10
Cbc0038I Solution found of 4.14869
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 4.14869 to -1.3136 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.51194
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.11103 (37) obj. -41.9032 iterations 0
Cbc0038I Pass   5: suminf.    1.88234 (33) obj. -36.3218 iterations 12
Cbc0038I Pass   6: suminf.    0.61914 (6) obj. -5.51194 iterations 35
Cbc0038I Pass   7: suminf.    1.08269 (4) obj. -5.51194 iterations 14
Cbc0038I Pass   8: suminf.    0.56757 (3) obj. -5.51194 iterations 7
Cbc0038I Pass   9: suminf.    0.95762 (3) obj. -5.51194 iterations 8
Cbc0038I Pass  10: suminf.    2.38451 (16) obj. -5.51194 iterations 17
Cbc0038I Pass  11: suminf.    0.90276 (14) obj. -5.51194 iterations 12
Cbc0038I Pass  12: suminf.    0.90276 (14) obj. -5.51194 iterations 0
Cbc0038I Pass  13: suminf.    0.96531 (6) obj. -5.51194 iterations 26
Cbc0038I Pass  14: suminf.    0.41574 (6) obj. -5.51194 iterations 15
Cbc0038I Pass  15: suminf.    0.52493 (5) obj. -5.51194 iterations 10
Cbc0038I Pass  16: suminf.    1.31287 (13) obj. -5.51194 iterations 32
Cbc0038I Pass  17: suminf.    0.50959 (11) obj. -5.51194 iterations 12
Cbc0038I Pass  18: suminf.    0.92364 (7) obj. -5.51194 iterations 23
Cbc0038I Pass  19: suminf.    0.92364 (7) obj. -5.51194 iterations 3
Cbc0038I Pass  20: suminf.    0.60415 (7) obj. -5.51194 iterations 14
Cbc0038I Pass  21: suminf.    0.60415 (7) obj. -5.51194 iterations 2
Cbc0038I Pass  22: suminf.    2.70340 (11) obj. -5.51194 iterations 15
Cbc0038I Pass  23: suminf.    1.68184 (7) obj. -5.51194 iterations 1
Cbc0038I Pass  24: suminf.    1.23445 (7) obj. -5.51194 iterations 7
Cbc0038I Pass  25: suminf.    2.71201 (11) obj. -5.51194 iterations 10
Cbc0038I Pass  26: suminf.    1.68184 (7) obj. -5.51194 iterations 1
Cbc0038I Pass  27: suminf.    1.56953 (15) obj. -5.51194 iterations 33
Cbc0038I Pass  28: suminf.    0.74840 (11) obj. -5.51194 iterations 7
Cbc0038I Pass  29: suminf.    1.06497 (10) obj. -5.51194 iterations 19
Cbc0038I Pass  30: suminf.    1.06497 (10) obj. -5.51194 iterations 1
Cbc0038I Pass  31: suminf.    0.79482 (7) obj. -5.51194 iterations 17
Cbc0038I Pass  32: suminf.    0.60102 (7) obj. -5.89954 iterations 7
Cbc0038I Pass  33: suminf.    1.67262 (12) obj. -5.51194 iterations 15
Cbc0038I Rounding solution of -1.81802 is better than previous of -1.3136

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -1.81802 to -8.26112 (0.08 seconds)
Cbc0038I Round again with cutoff of -15.2682
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.11103 (37) obj. -41.9032 iterations 0
Cbc0038I Pass  34: suminf.    1.88234 (33) obj. -36.3218 iterations 12
Cbc0038I Pass  35: suminf.    1.12228 (23) obj. -22.457 iterations 10
Cbc0038I Pass  36: suminf.    1.41360 (14) obj. -15.2682 iterations 21
Cbc0038I Pass  37: suminf.    0.88094 (14) obj. -15.2682 iterations 3
Cbc0038I Pass  38: suminf.    1.72761 (10) obj. -15.2682 iterations 27
Cbc0038I Pass  39: suminf.    1.47717 (11) obj. -15.2682 iterations 7
Cbc0038I Pass  40: suminf.    1.00297 (11) obj. -15.2682 iterations 10
Cbc0038I Pass  41: suminf.    0.87544 (16) obj. -15.2682 iterations 4
Cbc0038I Pass  42: suminf.    1.26586 (10) obj. -15.2682 iterations 12
Cbc0038I Pass  43: suminf.    0.70974 (8) obj. -15.2682 iterations 11
Cbc0038I Pass  44: suminf.    0.90226 (8) obj. -15.2682 iterations 9
Cbc0038I Pass  45: suminf.    1.21843 (12) obj. -15.2682 iterations 13
Cbc0038I Pass  46: suminf.    0.86852 (10) obj. -15.2682 iterations 8
Cbc0038I Pass  47: suminf.    0.90226 (9) obj. -15.2682 iterations 13
Cbc0038I Pass  48: suminf.    0.79776 (9) obj. -15.2682 iterations 7
Cbc0038I Pass  49: suminf.    0.95243 (14) obj. -15.2682 iterations 24
Cbc0038I Pass  50: suminf.    0.78881 (14) obj. -15.2682 iterations 3
Cbc0038I Pass  51: suminf.    1.20294 (13) obj. -15.2682 iterations 18
Cbc0038I Pass  52: suminf.    0.79776 (9) obj. -15.2682 iterations 7
Cbc0038I Pass  53: suminf.    0.90226 (9) obj. -15.2682 iterations 6
Cbc0038I Pass  54: suminf.    1.32382 (12) obj. -15.2682 iterations 15
Cbc0038I Pass  55: suminf.    1.20621 (15) obj. -15.2682 iterations 5
Cbc0038I Pass  56: suminf.    1.25884 (11) obj. -15.2682 iterations 10
Cbc0038I Pass  57: suminf.    1.14137 (14) obj. -15.2682 iterations 6
Cbc0038I Pass  58: suminf.    1.33337 (13) obj. -15.2682 iterations 13
Cbc0038I Pass  59: suminf.    1.29925 (13) obj. -15.2682 iterations 4
Cbc0038I Pass  60: suminf.    2.26738 (13) obj. -15.2682 iterations 6
Cbc0038I Pass  61: suminf.    2.26738 (13) obj. -15.2682 iterations 0
Cbc0038I Pass  62: suminf.    2.84497 (17) obj. -15.2682 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -8.26112 - took 0.10 seconds
Cbc0012I Integer solution of -8.26112 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 107 rows 118 columns, reduced to 15 rows 17 columns
Cbc0031I 59 added rows had average density of 33.118644
Cbc0013I At root node, 59 cuts changed objective from -43.29613 to -18.603234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7870 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 107.5 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 604 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 9 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 580 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 315 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 165 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.643 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.26112 best solution, best possible -18.603234 (2.15 seconds)
Cbc0012I Integer solution of -12.53734 found by rounding after 3615 iterations and 1 nodes (2.16 seconds)
Cbc0004I Integer solution of -15.44523 found after 3639 iterations and 1 nodes (2.21 seconds)
Cbc0010I After 7 nodes, 6 on tree, -15.44523 best solution, best possible -18.134848 (2.91 seconds)
Cbc0001I Search completed - best objective -15.44523, took 4972 iterations and 24 nodes (3.42 seconds)
Cbc0032I Strong branching done 608 times (13568 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 66 variables fixed on reduced cost
Total time (CPU seconds):       2.50   (Wallclock seconds):       3.44

