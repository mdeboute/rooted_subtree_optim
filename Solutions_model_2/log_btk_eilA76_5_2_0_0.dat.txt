Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 74 (-4) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 5.55179e-05 - average 4.14312e-07, 21 fixed columns
Coin0506I Presolve 88 (-46) rows, 50 (-24) columns and 269 (-139) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 0.39652927 - largest nonzero change 0 ( 0%) - largest zero change 2.8096151e-05
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Coin0511I After Postsolve, objective 72.226291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24361995 - largest nonzero change 0 ( 0%) - largest zero change 2.9354183e-05
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Coin0511I After Postsolve, objective 72.226291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.22629074 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 74 columns (73 integer (73 of which binary)) and 447 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.950%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.03995
Cbc0038I Solution found of -9.95248
Cbc0038I Relaxing continuous gives -18.9647
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -18.9647 to -41.1491 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.1811
Cbc0038I Pass   1: suminf.    2.50857 (21) obj. -44.1811 iterations 40
Cbc0038I Pass   2: suminf.    1.38757 (4) obj. -44.1811 iterations 26
Cbc0038I Pass   3: suminf.    1.38757 (4) obj. -44.1811 iterations 0
Cbc0038I Pass   4: suminf.    0.83008 (2) obj. -44.1811 iterations 7
Cbc0038I Pass   5: suminf.    0.31305 (2) obj. -44.1811 iterations 4
Cbc0038I Pass   6: suminf.    1.22827 (7) obj. -44.1811 iterations 12
Cbc0038I Pass   7: suminf.    0.88164 (4) obj. -44.1811 iterations 8
Cbc0038I Pass   8: suminf.    0.88373 (5) obj. -44.1811 iterations 4
Cbc0038I Pass   9: suminf.    0.88373 (5) obj. -44.1811 iterations 1
Cbc0038I Pass  10: suminf.    1.07818 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  11: suminf.    0.67865 (2) obj. -44.1811 iterations 4
Cbc0038I Pass  12: suminf.    0.60770 (2) obj. -44.1811 iterations 2
Cbc0038I Pass  13: suminf.    0.86610 (2) obj. -44.1811 iterations 3
Cbc0038I Pass  14: suminf.    1.11382 (4) obj. -44.1811 iterations 12
Cbc0038I Pass  15: suminf.    0.38398 (3) obj. -44.1811 iterations 8
Cbc0038I Pass  16: suminf.    0.38398 (3) obj. -44.1811 iterations 3
Cbc0038I Pass  17: suminf.    1.37608 (5) obj. -44.1811 iterations 10
Cbc0038I Pass  18: suminf.    0.65629 (4) obj. -44.1811 iterations 4
Cbc0038I Pass  19: suminf.    1.45000 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  20: suminf.    3.17048 (11) obj. -44.1811 iterations 20
Cbc0038I Pass  21: suminf.    1.20304 (5) obj. -44.1811 iterations 15
Cbc0038I Pass  22: suminf.    1.14387 (5) obj. -44.1811 iterations 3
Cbc0038I Pass  23: suminf.    0.72523 (4) obj. -44.1811 iterations 15
Cbc0038I Pass  24: suminf.    0.35639 (2) obj. -44.1811 iterations 6
Cbc0038I Pass  25: suminf.    0.72523 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  26: suminf.    2.19507 (8) obj. -44.1811 iterations 19
Cbc0038I Pass  27: suminf.    1.12123 (4) obj. -44.1811 iterations 11
Cbc0038I Pass  28: suminf.    1.10327 (5) obj. -44.1811 iterations 2
Cbc0038I Pass  29: suminf.    0.72523 (4) obj. -44.1811 iterations 20
Cbc0038I Pass  30: suminf.    0.35639 (2) obj. -44.1811 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -41.1491 to -43.3547 (0.07 seconds)
Cbc0038I Round again with cutoff of -49.6385
Cbc0038I Pass  30: suminf.    3.05148 (21) obj. -49.6385 iterations 0
Cbc0038I Pass  31: suminf.    4.38446 (11) obj. -49.6385 iterations 27
Cbc0038I Pass  32: suminf.    1.01537 (4) obj. -49.6385 iterations 11
Cbc0038I Pass  33: suminf.    1.01537 (4) obj. -49.6385 iterations 4
Cbc0038I Pass  34: suminf.    0.84720 (5) obj. -49.6385 iterations 7
Cbc0038I Pass  35: suminf.    0.84720 (5) obj. -49.6385 iterations 3
Cbc0038I Pass  36: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  37: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I Pass  38: suminf.    0.62109 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  39: suminf.    0.49394 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  40: suminf.    2.61105 (10) obj. -49.6385 iterations 15
Cbc0038I Pass  41: suminf.    1.29061 (4) obj. -49.6385 iterations 5
Cbc0038I Pass  42: suminf.    1.29061 (4) obj. -49.6385 iterations 0
Cbc0038I Pass  43: suminf.    1.11498 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  44: suminf.    0.84720 (5) obj. -49.6385 iterations 5
Cbc0038I Pass  45: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  46: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I Pass  47: suminf.    0.62109 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  48: suminf.    0.49394 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  49: suminf.    2.64449 (8) obj. -49.6385 iterations 12
Cbc0038I Pass  50: suminf.    0.76327 (3) obj. -49.6385 iterations 11
Cbc0038I Pass  51: suminf.    0.76327 (3) obj. -49.6385 iterations 1
Cbc0038I Pass  52: suminf.    1.14862 (3) obj. -49.6385 iterations 3
Cbc0038I Pass  53: suminf.    0.76327 (3) obj. -49.6385 iterations 3
Cbc0038I Pass  54: suminf.    1.81656 (6) obj. -49.6385 iterations 16
Cbc0038I Pass  55: suminf.    1.75943 (6) obj. -49.6385 iterations 7
Cbc0038I Pass  56: suminf.    1.23161 (4) obj. -49.6385 iterations 10
Cbc0038I Pass  57: suminf.    0.84720 (5) obj. -49.6385 iterations 6
Cbc0038I Pass  58: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  59: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 80 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -43.3547 - took 0.08 seconds
Cbc0012I Integer solution of -43.35467 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 129 rows 74 columns, reduced to 64 rows 35 columns
Cbc0031I 17 added rows had average density of 53.823529
Cbc0013I At root node, 17 cuts changed objective from -71.468124 to -60.873765 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8200 row cuts average 4.7 elements, 2 column cuts (2 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1420 row cuts average 62.5 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 56.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0010I After 7 nodes, 8 on tree, -43.35467 best solution, best possible -60.873765 (0.69 seconds)
Cbc0001I Search completed - best objective -43.35467, took 7596 iterations and 36 nodes (0.76 seconds)
Cbc0032I Strong branching done 500 times (8388 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 14, 147 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-44) rows, 122 (-30) columns and 2030 (-1273) elements
Clp1000I sum of infeasibilities 8.15266e-07 - average 7.41151e-09, 66 fixed columns
Coin0506I Presolve 56 (-54) rows, 56 (-66) columns and 376 (-1654) elements
Clp0006I 0  Obj 159.658 Dual inf 2.9979237 (56)
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 183.77049
Clp0000I Optimal - objective value 183.77049
Coin0511I After Postsolve, objective 183.77049, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 183.77049 Dual inf 12.941519 (3)
Clp0014I Perturbing problem by 0.001% of 1.5708491 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 185.69684
Clp0000I Optimal - objective value 185.69684
Clp0000I Optimal - objective value 185.69684
Coin0511I After Postsolve, objective 185.69684, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 185.6968436 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 121 columns (121 integer (121 of which binary)) and 2009 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 12.1196
Cbc0038I Pass   1: suminf.    1.21626 (31) obj. -22.0838 iterations 23
Cbc0038I Pass   2: suminf.    1.21626 (31) obj. -22.0838 iterations 1
Cbc0038I Pass   3: suminf.    0.66571 (19) obj. -8.72264 iterations 12
Cbc0038I Solution found of 18.2719
Cbc0038I Rounding solution of 7.15669 is better than previous of 18.2719

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 7.15669 to -52.2868 (0.05 seconds)
Cbc0038I Round again with cutoff of -57.6122
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.91991 (47) obj. -57.6122 iterations 17
Cbc0038I Pass   5: suminf.    2.17542 (48) obj. -57.6122 iterations 3
Cbc0038I Pass   6: suminf.    2.08656 (49) obj. -57.6122 iterations 3
Cbc0038I Pass   7: suminf.    3.63632 (35) obj. -57.6122 iterations 21
Cbc0038I Pass   8: suminf.    3.63632 (35) obj. -57.6122 iterations 0
Cbc0038I Pass   9: suminf.    0.91109 (11) obj. -57.6122 iterations 28
Cbc0038I Pass  10: suminf.    0.46486 (7) obj. -63.4297 iterations 6
Cbc0038I Pass  11: suminf.    0.26887 (2) obj. -57.6122 iterations 13
Cbc0038I Pass  12: suminf.    0.26887 (2) obj. -57.6122 iterations 0
Cbc0038I Pass  13: suminf.    0.82348 (2) obj. -57.6122 iterations 1
Cbc0038I Pass  14: suminf.    0.52619 (2) obj. -59.0987 iterations 3
Cbc0038I Pass  15: suminf.    3.85020 (18) obj. -57.6122 iterations 16
Cbc0038I Pass  16: suminf.    3.24434 (17) obj. -57.6122 iterations 4
Cbc0038I Pass  17: suminf.    1.10542 (8) obj. -57.6122 iterations 25
Cbc0038I Pass  18: suminf.    0.43182 (4) obj. -58.0712 iterations 4
Cbc0038I Pass  19: suminf.    0.42628 (7) obj. -57.6122 iterations 2
Cbc0038I Pass  20: suminf.    0.42628 (7) obj. -57.6122 iterations 0
Cbc0038I Pass  21: suminf.    0.30461 (7) obj. -57.6122 iterations 2
Cbc0038I Pass  22: suminf.    0.26887 (2) obj. -57.6122 iterations 4
Cbc0038I Pass  23: suminf.    0.82348 (2) obj. -57.6122 iterations 1
Cbc0038I Pass  24: suminf.    0.52619 (2) obj. -59.0987 iterations 3
Cbc0038I Pass  25: suminf.    0.26887 (2) obj. -57.6122 iterations 6
Cbc0038I Pass  26: suminf.    4.31977 (17) obj. -57.6122 iterations 21
Cbc0038I Pass  27: suminf.    4.03446 (15) obj. -57.6122 iterations 12
Cbc0038I Pass  28: suminf.    0.42628 (7) obj. -57.6122 iterations 24
Cbc0038I Pass  29: suminf.    0.42628 (7) obj. -57.6122 iterations 1
Cbc0038I Pass  30: suminf.    0.30461 (7) obj. -57.6122 iterations 2
Cbc0038I Pass  31: suminf.    0.26887 (2) obj. -57.6122 iterations 4
Cbc0038I Pass  32: suminf.    0.82348 (2) obj. -57.6122 iterations 1
Cbc0038I Pass  33: suminf.    0.52619 (2) obj. -59.0987 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 24 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -52.2868 - took 0.02 seconds
Cbc0012I Integer solution of -52.28676 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 105 rows 121 columns, reduced to 21 rows 20 columns
Cbc0031I 49 added rows had average density of 27.938776
Cbc0013I At root node, 49 cuts changed objective from -105.54065 to -58.508816 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 868 row cuts average 7.3 elements, 12 column cuts (12 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 35.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 176 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 384 row cuts average 51.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -52.28676 best solution, best possible -58.508816 (0.34 seconds)
Cbc0012I Integer solution of -54.37109 found by DiveCoefficient after 588 iterations and 4 nodes (0.47 seconds)
Cbc0001I Search completed - best objective -54.37109000000001, took 865 iterations and 10 nodes (0.50 seconds)
Cbc0032I Strong branching done 300 times (5702 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.51

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 74 (-4) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 5.55179e-05 - average 4.14312e-07, 21 fixed columns
Coin0506I Presolve 88 (-46) rows, 50 (-24) columns and 269 (-139) elements
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 0.39652927 - largest nonzero change 0 ( 0%) - largest zero change 2.8096151e-05
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Coin0511I After Postsolve, objective 72.226291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24361995 - largest nonzero change 0 ( 0%) - largest zero change 2.9354183e-05
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Clp0000I Optimal - objective value 72.226291
Coin0511I After Postsolve, objective 72.226291, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.22629074 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 74 columns (73 integer (73 of which binary)) and 447 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.950%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.03995
Cbc0038I Solution found of -9.95248
Cbc0038I Relaxing continuous gives -18.9647
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -18.9647 to -41.1491 (0.04 seconds)
Cbc0038I Round again with cutoff of -44.1811
Cbc0038I Pass   1: suminf.    2.50857 (21) obj. -44.1811 iterations 40
Cbc0038I Pass   2: suminf.    1.38757 (4) obj. -44.1811 iterations 26
Cbc0038I Pass   3: suminf.    1.38757 (4) obj. -44.1811 iterations 0
Cbc0038I Pass   4: suminf.    0.83008 (2) obj. -44.1811 iterations 7
Cbc0038I Pass   5: suminf.    0.31305 (2) obj. -44.1811 iterations 4
Cbc0038I Pass   6: suminf.    1.22827 (7) obj. -44.1811 iterations 12
Cbc0038I Pass   7: suminf.    0.88164 (4) obj. -44.1811 iterations 8
Cbc0038I Pass   8: suminf.    0.88373 (5) obj. -44.1811 iterations 4
Cbc0038I Pass   9: suminf.    0.88373 (5) obj. -44.1811 iterations 1
Cbc0038I Pass  10: suminf.    1.07818 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  11: suminf.    0.67865 (2) obj. -44.1811 iterations 4
Cbc0038I Pass  12: suminf.    0.60770 (2) obj. -44.1811 iterations 2
Cbc0038I Pass  13: suminf.    0.86610 (2) obj. -44.1811 iterations 3
Cbc0038I Pass  14: suminf.    1.11382 (4) obj. -44.1811 iterations 12
Cbc0038I Pass  15: suminf.    0.38398 (3) obj. -44.1811 iterations 8
Cbc0038I Pass  16: suminf.    0.38398 (3) obj. -44.1811 iterations 3
Cbc0038I Pass  17: suminf.    1.37608 (5) obj. -44.1811 iterations 10
Cbc0038I Pass  18: suminf.    0.65629 (4) obj. -44.1811 iterations 4
Cbc0038I Pass  19: suminf.    1.45000 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  20: suminf.    3.17048 (11) obj. -44.1811 iterations 20
Cbc0038I Pass  21: suminf.    1.20304 (5) obj. -44.1811 iterations 15
Cbc0038I Pass  22: suminf.    1.14387 (5) obj. -44.1811 iterations 3
Cbc0038I Pass  23: suminf.    0.72523 (4) obj. -44.1811 iterations 15
Cbc0038I Pass  24: suminf.    0.35639 (2) obj. -44.1811 iterations 6
Cbc0038I Pass  25: suminf.    0.72523 (4) obj. -44.1811 iterations 8
Cbc0038I Pass  26: suminf.    2.19507 (8) obj. -44.1811 iterations 19
Cbc0038I Pass  27: suminf.    1.12123 (4) obj. -44.1811 iterations 11
Cbc0038I Pass  28: suminf.    1.10327 (5) obj. -44.1811 iterations 2
Cbc0038I Pass  29: suminf.    0.72523 (4) obj. -44.1811 iterations 20
Cbc0038I Pass  30: suminf.    0.35639 (2) obj. -44.1811 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -41.1491 to -43.3547 (0.09 seconds)
Cbc0038I Round again with cutoff of -49.6385
Cbc0038I Pass  30: suminf.    3.05148 (21) obj. -49.6385 iterations 0
Cbc0038I Pass  31: suminf.    4.38446 (11) obj. -49.6385 iterations 27
Cbc0038I Pass  32: suminf.    1.01537 (4) obj. -49.6385 iterations 11
Cbc0038I Pass  33: suminf.    1.01537 (4) obj. -49.6385 iterations 4
Cbc0038I Pass  34: suminf.    0.84720 (5) obj. -49.6385 iterations 7
Cbc0038I Pass  35: suminf.    0.84720 (5) obj. -49.6385 iterations 3
Cbc0038I Pass  36: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  37: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I Pass  38: suminf.    0.62109 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  39: suminf.    0.49394 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  40: suminf.    2.61105 (10) obj. -49.6385 iterations 15
Cbc0038I Pass  41: suminf.    1.29061 (4) obj. -49.6385 iterations 5
Cbc0038I Pass  42: suminf.    1.29061 (4) obj. -49.6385 iterations 0
Cbc0038I Pass  43: suminf.    1.11498 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  44: suminf.    0.84720 (5) obj. -49.6385 iterations 5
Cbc0038I Pass  45: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  46: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I Pass  47: suminf.    0.62109 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  48: suminf.    0.49394 (2) obj. -49.6385 iterations 1
Cbc0038I Pass  49: suminf.    2.64449 (8) obj. -49.6385 iterations 12
Cbc0038I Pass  50: suminf.    0.76327 (3) obj. -49.6385 iterations 11
Cbc0038I Pass  51: suminf.    0.76327 (3) obj. -49.6385 iterations 1
Cbc0038I Pass  52: suminf.    1.14862 (3) obj. -49.6385 iterations 3
Cbc0038I Pass  53: suminf.    0.76327 (3) obj. -49.6385 iterations 3
Cbc0038I Pass  54: suminf.    1.81656 (6) obj. -49.6385 iterations 16
Cbc0038I Pass  55: suminf.    1.75943 (6) obj. -49.6385 iterations 7
Cbc0038I Pass  56: suminf.    1.23161 (4) obj. -49.6385 iterations 10
Cbc0038I Pass  57: suminf.    0.84720 (5) obj. -49.6385 iterations 6
Cbc0038I Pass  58: suminf.    1.00552 (3) obj. -49.6385 iterations 10
Cbc0038I Pass  59: suminf.    0.62126 (2) obj. -49.6385 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 80 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -43.3547 - took 0.09 seconds
Cbc0012I Integer solution of -43.35467 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 129 rows 74 columns, reduced to 64 rows 35 columns
Cbc0031I 17 added rows had average density of 53.823529
Cbc0013I At root node, 17 cuts changed objective from -71.468124 to -60.873765 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8200 row cuts average 4.7 elements, 2 column cuts (2 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1420 row cuts average 62.5 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 56.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -43.35467 best solution, best possible -60.873765 (0.71 seconds)
Cbc0001I Search completed - best objective -43.35467, took 7596 iterations and 36 nodes (0.90 seconds)
Cbc0032I Strong branching done 500 times (8388 iterations), fathomed 4 nodes and fixed 12 variables
Cbc0035I Maximum depth 14, 147 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 117 (-36) columns and 1920 (-1384) elements
Clp1000I sum of infeasibilities 2.37131e-08 - average 2.25839e-10, 17 fixed columns
Coin0506I Presolve 91 (-14) rows, 100 (-17) columns and 1526 (-394) elements
Clp0006I 0  Obj 76.468306 Dual inf 9.0055553 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.4214895 - largest nonzero change 0 ( 0%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 85.367187
Clp0000I Optimal - objective value 85.367187
Coin0511I After Postsolve, objective 85.367187, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 85.367187
Clp0000I Optimal - objective value 85.367187
Clp0000I Optimal - objective value 85.367187
Clp0000I Optimal - objective value 85.367187
Coin0511I After Postsolve, objective 85.367187, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.36718719 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 119 columns (119 integer (119 of which binary)) and 1954 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.498%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 3.81004
Cbc0038I Pass   1: suminf.    1.87210 (35) obj. -61.7754 iterations 24
Cbc0038I Pass   2: suminf.    0.99124 (32) obj. -59.4077 iterations 4
Cbc0038I Pass   3: suminf.    0.07375 (4) obj. -9.38078 iterations 28
Cbc0038I Solution found of -4.47377
Cbc0038I Rounding solution of -19.0361 is better than previous of -4.47377

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 119 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -19.0361 to -19.2649 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.7223
Cbc0038I Pass   4: suminf.    1.87210 (35) obj. -61.7754 iterations 0
Cbc0038I Pass   5: suminf.    0.99124 (32) obj. -59.4077 iterations 7
Cbc0038I Pass   6: suminf.    0.43943 (18) obj. -29.8303 iterations 14
Cbc0038I Pass   7: suminf.    0.67673 (5) obj. -23.7223 iterations 33
Cbc0038I Pass   8: suminf.    0.67673 (5) obj. -23.7223 iterations 0
Cbc0038I Pass   9: suminf.    0.59103 (4) obj. -23.7223 iterations 10
Cbc0038I Pass  10: suminf.    0.30541 (13) obj. -23.7223 iterations 13
Cbc0038I Pass  11: suminf.    0.30541 (13) obj. -23.7223 iterations 0
Cbc0038I Pass  12: suminf.    0.86681 (7) obj. -23.7223 iterations 17
Cbc0038I Pass  13: suminf.    0.71876 (7) obj. -23.7223 iterations 2
Cbc0038I Pass  14: suminf.    1.04021 (7) obj. -23.7223 iterations 15
Cbc0038I Pass  15: suminf.    1.04021 (7) obj. -23.7223 iterations 6
Cbc0038I Pass  16: suminf.    1.14908 (7) obj. -23.7223 iterations 10
Cbc0038I Pass  17: suminf.    0.72678 (4) obj. -23.991 iterations 8
Cbc0038I Pass  18: suminf.    0.86112 (4) obj. -23.7223 iterations 6
Cbc0038I Pass  19: suminf.    1.35228 (12) obj. -23.7223 iterations 29
Cbc0038I Pass  20: suminf.    1.10016 (11) obj. -23.7223 iterations 7
Cbc0038I Pass  21: suminf.    0.99114 (11) obj. -25.8877 iterations 1
Cbc0038I Pass  22: suminf.    1.11809 (7) obj. -23.7223 iterations 24
Cbc0038I Pass  23: suminf.    0.96458 (8) obj. -23.7223 iterations 8
Cbc0038I Pass  24: suminf.    1.04021 (7) obj. -23.7223 iterations 10
Cbc0038I Pass  25: suminf.    1.04021 (7) obj. -23.7223 iterations 0
Cbc0038I Pass  26: suminf.    1.14908 (7) obj. -23.7223 iterations 10
Cbc0038I Pass  27: suminf.    0.72678 (4) obj. -23.991 iterations 8
Cbc0038I Pass  28: suminf.    0.86112 (4) obj. -23.7223 iterations 6
Cbc0038I Pass  29: suminf.    1.81070 (15) obj. -23.7223 iterations 22
Cbc0038I Pass  30: suminf.    0.73224 (7) obj. -23.7223 iterations 26
Cbc0038I Pass  31: suminf.    0.80636 (8) obj. -23.7223 iterations 15
Cbc0038I Pass  32: suminf.    0.45946 (9) obj. -23.7223 iterations 6
Cbc0038I Pass  33: suminf.    0.83223 (4) obj. -23.7223 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 119 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -19.2649 to -41.1491 (0.08 seconds)
Cbc0038I Round again with cutoff of -45.6869
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.87210 (35) obj. -61.7754 iterations 0
Cbc0038I Pass  34: suminf.    0.99124 (32) obj. -59.4077 iterations 5
Cbc0038I Pass  35: suminf.    1.50983 (20) obj. -45.6869 iterations 35
Cbc0038I Pass  36: suminf.    0.78984 (24) obj. -45.6869 iterations 2
Cbc0038I Pass  37: suminf.    2.40990 (19) obj. -45.6869 iterations 37
Cbc0038I Pass  38: suminf.    1.81927 (17) obj. -45.6869 iterations 8
Cbc0038I Pass  39: suminf.    2.43647 (23) obj. -45.6869 iterations 17
Cbc0038I Pass  40: suminf.    2.31668 (17) obj. -45.6869 iterations 7
Cbc0038I Pass  41: suminf.    1.52656 (17) obj. -45.6869 iterations 9
Cbc0038I Pass  42: suminf.    1.48367 (17) obj. -45.6869 iterations 5
Cbc0038I Pass  43: suminf.    2.18597 (16) obj. -45.6869 iterations 14
Cbc0038I Pass  44: suminf.    1.85007 (17) obj. -45.6869 iterations 9
Cbc0038I Pass  45: suminf.    2.43647 (23) obj. -45.6869 iterations 14
Cbc0038I Pass  46: suminf.    2.31668 (17) obj. -45.6869 iterations 7
Cbc0038I Pass  47: suminf.    1.52656 (17) obj. -45.6869 iterations 9
Cbc0038I Pass  48: suminf.    1.48367 (17) obj. -45.6869 iterations 5
Cbc0038I Pass  49: suminf.    2.18597 (16) obj. -45.6869 iterations 11
Cbc0038I Pass  50: suminf.    1.81927 (17) obj. -45.6869 iterations 9
Cbc0038I Pass  51: suminf.    2.43647 (23) obj. -45.6869 iterations 13
Cbc0038I Pass  52: suminf.    2.31668 (17) obj. -45.6869 iterations 7
Cbc0038I Pass  53: suminf.    1.52656 (17) obj. -45.6869 iterations 9
Cbc0038I Pass  54: suminf.    1.48367 (17) obj. -45.6869 iterations 5
Cbc0038I Pass  55: suminf.    2.18597 (16) obj. -45.6869 iterations 14
Cbc0038I Pass  56: suminf.    1.85007 (17) obj. -45.6869 iterations 9
Cbc0038I Pass  57: suminf.    2.43647 (23) obj. -45.6869 iterations 14
Cbc0038I Pass  58: suminf.    2.31668 (17) obj. -45.6869 iterations 7
Cbc0038I Pass  59: suminf.    1.52656 (17) obj. -45.6869 iterations 9
Cbc0038I Pass  60: suminf.    1.48367 (17) obj. -45.6869 iterations 5
Cbc0038I Pass  61: suminf.    2.18597 (16) obj. -45.6869 iterations 15
Cbc0038I Pass  62: suminf.    1.85007 (17) obj. -45.6869 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -41.1491 - took 0.06 seconds
Cbc0012I Integer solution of -41.14908 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 102 rows 119 columns, reduced to 30 rows 33 columns
Cbc0031I 58 added rows had average density of 24.034483
Cbc0013I At root node, 58 cuts changed objective from -63.838006 to -48.131606 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20394 row cuts average 9.4 elements, 6 column cuts (6 active)  in 0.263 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1419 row cuts average 100.1 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 125 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 648 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1358 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 690 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 403 row cuts average 63.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 188 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -41.14908 best solution, best possible -48.131606 (3.03 seconds)
Cbc0010I After 3 nodes, 2 on tree, -41.14908 best solution, best possible -45.460101 (3.75 seconds)
Cbc0016I Integer solution of -43.35467 found by strong branching after 4198 iterations and 7 nodes (4.10 seconds)
Cbc0001I Search completed - best objective -43.35467, took 4507 iterations and 12 nodes (4.11 seconds)
Cbc0032I Strong branching done 336 times (9703 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 10 variables fixed on reduced cost
Total time (CPU seconds):       3.01   (Wallclock seconds):       4.14

