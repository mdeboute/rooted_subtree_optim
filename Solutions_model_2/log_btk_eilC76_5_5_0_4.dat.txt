Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 59 (-19) columns and 325 (-128) elements
Clp1000I sum of infeasibilities 1.56594e-05 - average 1.46349e-07, 37 fixed columns
Coin0506I Presolve 34 (-73) rows, 20 (-39) columns and 102 (-223) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Coin0511I After Postsolve, objective 148.80281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31342519 - largest nonzero change 1.4622327e-05 ( 0.0012557832%) - largest zero change 2.7340943e-05
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Coin0511I After Postsolve, objective 148.80281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.8028108 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 107 rows, 59 columns (58 integer (58 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.04131
Cbc0038I Pass   1: suminf.    1.27363 (3) obj. -137.036 iterations 13
Cbc0038I Solution found of -95.978
Cbc0038I Relaxing continuous gives -95.978
Cbc0038I Rounding solution of -118.284 is better than previous of -95.978

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -118.284 to -119.745 (0.01 seconds)
Cbc0038I Round again with cutoff of -122.651
Cbc0038I Pass   2: suminf.    1.27363 (3) obj. -137.036 iterations 0
Cbc0038I Pass   3: suminf.    0.98511 (2) obj. -122.651 iterations 4
Cbc0038I Pass   4: suminf.    0.46154 (1) obj. -131.493 iterations 5
Cbc0038I Pass   5: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass   6: suminf.    0.79922 (4) obj. -122.651 iterations 12
Cbc0038I Pass   7: suminf.    0.58718 (3) obj. -122.651 iterations 10
Cbc0038I Pass   8: suminf.    0.53026 (4) obj. -122.651 iterations 4
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -123.842 iterations 2
Cbc0038I Pass  10: suminf.    0.14481 (1) obj. -122.651 iterations 4
Cbc0038I Pass  11: suminf.    0.46154 (1) obj. -122.651 iterations 2
Cbc0038I Pass  12: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass  13: suminf.    0.96600 (8) obj. -122.651 iterations 12
Cbc0038I Pass  14: suminf.    0.68346 (4) obj. -122.651 iterations 9
Cbc0038I Pass  15: suminf.    1.02903 (5) obj. -122.651 iterations 18
Cbc0038I Pass  16: suminf.    2.01686 (13) obj. -122.651 iterations 21
Cbc0038I Pass  17: suminf.    0.54112 (3) obj. -122.651 iterations 19
Cbc0038I Pass  18: suminf.    0.14481 (1) obj. -122.651 iterations 3
Cbc0038I Pass  19: suminf.    0.46154 (1) obj. -122.651 iterations 2
Cbc0038I Pass  20: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass  21: suminf.    1.89246 (7) obj. -122.651 iterations 12
Cbc0038I Pass  22: suminf.    0.21416 (1) obj. -122.651 iterations 14
Cbc0038I Pass  23: suminf.    0.03846 (1) obj. -129.141 iterations 1
Cbc0038I Pass  24: suminf.    2.41217 (9) obj. -122.651 iterations 13
Cbc0038I Pass  25: suminf.    1.78860 (5) obj. -122.651 iterations 6
Cbc0038I Pass  26: suminf.    0.63829 (4) obj. -122.651 iterations 6
Cbc0038I Pass  27: suminf.    0.14538 (2) obj. -122.651 iterations 4
Cbc0038I Pass  28: suminf.    0.14538 (2) obj. -122.651 iterations 0
Cbc0038I Pass  29: suminf.    0.46552 (3) obj. -122.651 iterations 4
Cbc0038I Pass  30: suminf.    0.14538 (2) obj. -122.651 iterations 8
Cbc0038I Pass  31: suminf.    0.98387 (5) obj. -122.651 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -119.745 to -132.813 (0.03 seconds)
Cbc0038I Round again with cutoff of -136.011
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.27363 (3) obj. -137.036 iterations 0
Cbc0038I Pass  32: suminf.    1.35506 (4) obj. -136.011 iterations 2
Cbc0038I Pass  33: suminf.    0.54792 (6) obj. -136.011 iterations 5
Cbc0038I Pass  34: suminf.    0.85322 (5) obj. -136.011 iterations 10
Cbc0038I Pass  35: suminf.    0.56612 (5) obj. -136.011 iterations 6
Cbc0038I Pass  36: suminf.    1.55150 (7) obj. -136.011 iterations 7
Cbc0038I Pass  37: suminf.    0.66165 (5) obj. -136.011 iterations 8
Cbc0038I Pass  38: suminf.    0.62477 (6) obj. -136.011 iterations 12
Cbc0038I Pass  39: suminf.    0.54792 (6) obj. -136.011 iterations 5
Cbc0038I Pass  40: suminf.    0.85322 (5) obj. -136.011 iterations 11
Cbc0038I Pass  41: suminf.    0.56612 (5) obj. -136.011 iterations 5
Cbc0038I Pass  42: suminf.    1.55150 (7) obj. -136.011 iterations 6
Cbc0038I Pass  43: suminf.    0.66165 (5) obj. -136.011 iterations 10
Cbc0038I Pass  44: suminf.    1.92313 (9) obj. -136.011 iterations 11
Cbc0038I Pass  45: suminf.    1.42473 (8) obj. -136.011 iterations 5
Cbc0038I Pass  46: suminf.    1.28619 (8) obj. -136.011 iterations 11
Cbc0038I Pass  47: suminf.    0.75938 (6) obj. -136.011 iterations 7
Cbc0038I Pass  48: suminf.    0.53462 (4) obj. -136.011 iterations 5
Cbc0038I Pass  49: suminf.    2.55797 (6) obj. -136.011 iterations 6
Cbc0038I Pass  50: suminf.    2.55797 (6) obj. -136.011 iterations 0
Cbc0038I Pass  51: suminf.    1.53611 (9) obj. -136.011 iterations 7
Cbc0038I Pass  52: suminf.    1.42473 (8) obj. -136.011 iterations 3
Cbc0038I Pass  53: suminf.    1.28619 (8) obj. -136.011 iterations 12
Cbc0038I Pass  54: suminf.    0.75938 (6) obj. -136.011 iterations 7
Cbc0038I Pass  55: suminf.    0.53462 (4) obj. -136.011 iterations 6
Cbc0038I Pass  56: suminf.    2.55797 (6) obj. -136.011 iterations 7
Cbc0038I Pass  57: suminf.    2.55797 (6) obj. -136.011 iterations 0
Cbc0038I Pass  58: suminf.    1.53611 (9) obj. -136.011 iterations 8
Cbc0038I Pass  59: suminf.    1.42473 (8) obj. -136.011 iterations 3
Cbc0038I Pass  60: suminf.    1.28619 (8) obj. -136.011 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -132.813 - took 0.03 seconds
Cbc0012I Integer solution of -132.81301 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 107 rows 59 columns, reduced to 14 rows 13 columns
Cbc0031I 7 added rows had average density of 29.142857
Cbc0013I At root node, 7 cuts changed objective from -148.80281 to -139.56974 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 4.4 elements, 13 column cuts (13 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 72 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0001I Search completed - best objective -132.81301, took 122 iterations and 2 nodes (0.27 seconds)
Cbc0032I Strong branching done 26 times (189 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-65) rows, 98 (-54) columns and 1442 (-1861) elements
Clp1000I sum of infeasibilities 1.81448e-07 - average 2.03874e-09, 30 fixed columns
Coin0506I Presolve 55 (-34) rows, 58 (-40) columns and 569 (-873) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.1454949 - largest nonzero change 1.5898952e-05 ( 0.0010393299%) - largest zero change 2.5632185e-05
Clp0000I Optimal - objective value 189.10596
Clp0000I Optimal - objective value 189.10596
Coin0511I After Postsolve, objective 189.10596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.790408 - largest nonzero change 2.2195358e-05 ( 0.0016580886%) - largest zero change 2.9081593e-05
Clp0000I Optimal - objective value 189.10596
Clp0000I Optimal - objective value 189.10596
Clp0000I Optimal - objective value 189.10596
Coin0511I After Postsolve, objective 189.10596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 189.1059586 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 98 columns (98 integer (98 of which binary)) and 1444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.930%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.98461
Cbc0038I Pass   1: suminf.    2.89433 (29) obj. -140.713 iterations 12
Cbc0038I Pass   2: suminf.    2.89433 (29) obj. -140.713 iterations 1
Cbc0038I Pass   3: suminf.    0.30587 (4) obj. -108.485 iterations 25
Cbc0038I Solution found of -104.791
Cbc0038I Rounding solution of -112.178 is better than previous of -104.791

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 98 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -112.178 to -131.235 (0.02 seconds)
Cbc0038I Round again with cutoff of -136.245
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.89433 (29) obj. -140.713 iterations 0
Cbc0038I Pass   5: suminf.    2.89433 (29) obj. -140.713 iterations 1
Cbc0038I Pass   6: suminf.    1.10879 (10) obj. -136.245 iterations 27
Cbc0038I Pass   7: suminf.    1.03891 (9) obj. -141.029 iterations 1
Cbc0038I Pass   8: suminf.    0.25777 (2) obj. -136.245 iterations 11
Cbc0038I Pass   9: suminf.    0.67338 (3) obj. -140.324 iterations 4
Cbc0038I Pass  10: suminf.    1.59193 (8) obj. -136.245 iterations 20
Cbc0038I Pass  11: suminf.    1.37967 (8) obj. -136.245 iterations 5
Cbc0038I Pass  12: suminf.    1.14229 (4) obj. -136.245 iterations 10
Cbc0038I Pass  13: suminf.    0.49956 (4) obj. -136.245 iterations 4
Cbc0038I Pass  14: suminf.    0.48694 (3) obj. -136.245 iterations 3
Cbc0038I Pass  15: suminf.    0.96711 (4) obj. -136.245 iterations 3
Cbc0038I Pass  16: suminf.    0.96711 (4) obj. -136.245 iterations 0
Cbc0038I Pass  17: suminf.    1.42650 (4) obj. -140.424 iterations 5
Cbc0038I Pass  18: suminf.    1.32366 (3) obj. -136.245 iterations 2
Cbc0038I Pass  19: suminf.    1.27363 (3) obj. -137.036 iterations 1
Cbc0038I Pass  20: suminf.    3.84250 (18) obj. -136.245 iterations 24
Cbc0038I Pass  21: suminf.    3.84250 (18) obj. -136.245 iterations 0
Cbc0038I Pass  22: suminf.    1.71357 (5) obj. -136.245 iterations 20
Cbc0038I Pass  23: suminf.    0.71215 (6) obj. -136.245 iterations 5
Cbc0038I Pass  24: suminf.    1.71357 (5) obj. -136.245 iterations 8
Cbc0038I Pass  25: suminf.    1.45320 (11) obj. -136.245 iterations 11
Cbc0038I Pass  26: suminf.    1.18056 (7) obj. -136.245 iterations 5
Cbc0038I Pass  27: suminf.    1.00234 (9) obj. -136.245 iterations 17
Cbc0038I Pass  28: suminf.    1.41165 (9) obj. -136.245 iterations 13
Cbc0038I Pass  29: suminf.    1.31574 (10) obj. -136.245 iterations 2
Cbc0038I Pass  30: suminf.    2.01663 (7) obj. -136.245 iterations 10
Cbc0038I Pass  31: suminf.    1.25348 (8) obj. -136.245 iterations 5
Cbc0038I Pass  32: suminf.    0.90817 (5) obj. -136.245 iterations 6
Cbc0038I Pass  33: suminf.    1.31687 (10) obj. -136.245 iterations 9
Cbc0038I Rounding solution of -132.813 is better than previous of -131.235

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 98 columns, reduced to 46 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -145.263
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.22927 (33) obj. -145.263 iterations 3
Cbc0038I Pass  34: suminf.    3.21832 (31) obj. -145.263 iterations 1
Cbc0038I Pass  35: suminf.    2.21533 (15) obj. -145.263 iterations 25
Cbc0038I Pass  36: suminf.    1.70904 (5) obj. -145.263 iterations 16
Cbc0038I Pass  37: suminf.    0.71362 (6) obj. -145.263 iterations 2
Cbc0038I Pass  38: suminf.    1.70904 (5) obj. -145.263 iterations 5
Cbc0038I Pass  39: suminf.    2.37152 (12) obj. -145.263 iterations 12
Cbc0038I Pass  40: suminf.    2.26016 (12) obj. -145.263 iterations 2
Cbc0038I Pass  41: suminf.    1.82668 (7) obj. -145.263 iterations 12
Cbc0038I Pass  42: suminf.    1.24668 (8) obj. -145.263 iterations 1
Cbc0038I Pass  43: suminf.    1.77116 (7) obj. -145.263 iterations 6
Cbc0038I Pass  44: suminf.    1.18722 (8) obj. -145.263 iterations 2
Cbc0038I Pass  45: suminf.    1.82668 (7) obj. -145.263 iterations 6
Cbc0038I Pass  46: suminf.    2.68260 (14) obj. -145.263 iterations 8
Cbc0038I Pass  47: suminf.    2.68260 (14) obj. -145.263 iterations 0
Cbc0038I Pass  48: suminf.    1.84181 (8) obj. -145.263 iterations 7
Cbc0038I Pass  49: suminf.    1.31978 (9) obj. -145.263 iterations 2
Cbc0038I Pass  50: suminf.    1.82668 (7) obj. -145.263 iterations 9
Cbc0038I Pass  51: suminf.    1.24668 (8) obj. -145.263 iterations 2
Cbc0038I Pass  52: suminf.    1.77116 (7) obj. -145.263 iterations 6
Cbc0038I Pass  53: suminf.    1.18722 (8) obj. -145.263 iterations 2
Cbc0038I Pass  54: suminf.    1.82668 (7) obj. -145.263 iterations 6
Cbc0038I Pass  55: suminf.    1.22782 (13) obj. -145.263 iterations 10
Cbc0038I Pass  56: suminf.    0.86510 (9) obj. -145.351 iterations 10
Cbc0038I Pass  57: suminf.    0.57272 (11) obj. -145.263 iterations 13
Cbc0038I Pass  58: suminf.    0.57272 (11) obj. -145.263 iterations 1
Cbc0038I Pass  59: suminf.    1.24668 (8) obj. -145.263 iterations 7
Cbc0038I Pass  60: suminf.    1.24668 (8) obj. -145.263 iterations 2
Cbc0038I Pass  61: suminf.    1.77116 (7) obj. -145.263 iterations 8
Cbc0038I Pass  62: suminf.    1.18722 (8) obj. -145.263 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 98 columns, reduced to 45 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -132.813 - took 0.05 seconds
Cbc0012I Integer solution of -132.81301 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 11 added rows had average density of 11.818182
Cbc0013I At root node, 11 cuts changed objective from -181.33533 to -133.20102 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 249 row cuts average 2.4 elements, 29 column cuts (29 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0001I Search completed - best objective -132.81301, took 181 iterations and 0 nodes (0.23 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 59 (-19) columns and 325 (-128) elements
Clp1000I sum of infeasibilities 1.56594e-05 - average 1.46349e-07, 37 fixed columns
Coin0506I Presolve 34 (-73) rows, 20 (-39) columns and 102 (-223) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Coin0511I After Postsolve, objective 148.80281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31342519 - largest nonzero change 1.4622327e-05 ( 0.0012557832%) - largest zero change 2.7340943e-05
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Clp0000I Optimal - objective value 148.80281
Coin0511I After Postsolve, objective 148.80281, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.8028108 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 107 rows, 59 columns (58 integer (58 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.04131
Cbc0038I Pass   1: suminf.    1.27363 (3) obj. -137.036 iterations 13
Cbc0038I Solution found of -95.978
Cbc0038I Relaxing continuous gives -95.978
Cbc0038I Rounding solution of -118.284 is better than previous of -95.978

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -118.284 to -119.745 (0.01 seconds)
Cbc0038I Round again with cutoff of -122.651
Cbc0038I Pass   2: suminf.    1.27363 (3) obj. -137.036 iterations 0
Cbc0038I Pass   3: suminf.    0.98511 (2) obj. -122.651 iterations 4
Cbc0038I Pass   4: suminf.    0.46154 (1) obj. -131.493 iterations 5
Cbc0038I Pass   5: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass   6: suminf.    0.79922 (4) obj. -122.651 iterations 12
Cbc0038I Pass   7: suminf.    0.58718 (3) obj. -122.651 iterations 10
Cbc0038I Pass   8: suminf.    0.53026 (4) obj. -122.651 iterations 4
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -123.842 iterations 2
Cbc0038I Pass  10: suminf.    0.14481 (1) obj. -122.651 iterations 4
Cbc0038I Pass  11: suminf.    0.46154 (1) obj. -122.651 iterations 2
Cbc0038I Pass  12: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass  13: suminf.    0.96600 (8) obj. -122.651 iterations 12
Cbc0038I Pass  14: suminf.    0.68346 (4) obj. -122.651 iterations 9
Cbc0038I Pass  15: suminf.    1.02903 (5) obj. -122.651 iterations 18
Cbc0038I Pass  16: suminf.    2.01686 (13) obj. -122.651 iterations 21
Cbc0038I Pass  17: suminf.    0.54112 (3) obj. -122.651 iterations 19
Cbc0038I Pass  18: suminf.    0.14481 (1) obj. -122.651 iterations 3
Cbc0038I Pass  19: suminf.    0.46154 (1) obj. -122.651 iterations 2
Cbc0038I Pass  20: suminf.    0.29911 (1) obj. -122.651 iterations 1
Cbc0038I Pass  21: suminf.    1.89246 (7) obj. -122.651 iterations 12
Cbc0038I Pass  22: suminf.    0.21416 (1) obj. -122.651 iterations 14
Cbc0038I Pass  23: suminf.    0.03846 (1) obj. -129.141 iterations 1
Cbc0038I Pass  24: suminf.    2.41217 (9) obj. -122.651 iterations 13
Cbc0038I Pass  25: suminf.    1.78860 (5) obj. -122.651 iterations 6
Cbc0038I Pass  26: suminf.    0.63829 (4) obj. -122.651 iterations 6
Cbc0038I Pass  27: suminf.    0.14538 (2) obj. -122.651 iterations 4
Cbc0038I Pass  28: suminf.    0.14538 (2) obj. -122.651 iterations 0
Cbc0038I Pass  29: suminf.    0.46552 (3) obj. -122.651 iterations 4
Cbc0038I Pass  30: suminf.    0.14538 (2) obj. -122.651 iterations 8
Cbc0038I Pass  31: suminf.    0.98387 (5) obj. -122.651 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -119.745 to -132.813 (0.03 seconds)
Cbc0038I Round again with cutoff of -136.011
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.27363 (3) obj. -137.036 iterations 0
Cbc0038I Pass  32: suminf.    1.35506 (4) obj. -136.011 iterations 2
Cbc0038I Pass  33: suminf.    0.54792 (6) obj. -136.011 iterations 5
Cbc0038I Pass  34: suminf.    0.85322 (5) obj. -136.011 iterations 10
Cbc0038I Pass  35: suminf.    0.56612 (5) obj. -136.011 iterations 6
Cbc0038I Pass  36: suminf.    1.55150 (7) obj. -136.011 iterations 7
Cbc0038I Pass  37: suminf.    0.66165 (5) obj. -136.011 iterations 8
Cbc0038I Pass  38: suminf.    0.62477 (6) obj. -136.011 iterations 12
Cbc0038I Pass  39: suminf.    0.54792 (6) obj. -136.011 iterations 5
Cbc0038I Pass  40: suminf.    0.85322 (5) obj. -136.011 iterations 11
Cbc0038I Pass  41: suminf.    0.56612 (5) obj. -136.011 iterations 5
Cbc0038I Pass  42: suminf.    1.55150 (7) obj. -136.011 iterations 6
Cbc0038I Pass  43: suminf.    0.66165 (5) obj. -136.011 iterations 10
Cbc0038I Pass  44: suminf.    1.92313 (9) obj. -136.011 iterations 11
Cbc0038I Pass  45: suminf.    1.42473 (8) obj. -136.011 iterations 5
Cbc0038I Pass  46: suminf.    1.28619 (8) obj. -136.011 iterations 11
Cbc0038I Pass  47: suminf.    0.75938 (6) obj. -136.011 iterations 7
Cbc0038I Pass  48: suminf.    0.53462 (4) obj. -136.011 iterations 5
Cbc0038I Pass  49: suminf.    2.55797 (6) obj. -136.011 iterations 6
Cbc0038I Pass  50: suminf.    2.55797 (6) obj. -136.011 iterations 0
Cbc0038I Pass  51: suminf.    1.53611 (9) obj. -136.011 iterations 7
Cbc0038I Pass  52: suminf.    1.42473 (8) obj. -136.011 iterations 3
Cbc0038I Pass  53: suminf.    1.28619 (8) obj. -136.011 iterations 12
Cbc0038I Pass  54: suminf.    0.75938 (6) obj. -136.011 iterations 7
Cbc0038I Pass  55: suminf.    0.53462 (4) obj. -136.011 iterations 6
Cbc0038I Pass  56: suminf.    2.55797 (6) obj. -136.011 iterations 7
Cbc0038I Pass  57: suminf.    2.55797 (6) obj. -136.011 iterations 0
Cbc0038I Pass  58: suminf.    1.53611 (9) obj. -136.011 iterations 8
Cbc0038I Pass  59: suminf.    1.42473 (8) obj. -136.011 iterations 3
Cbc0038I Pass  60: suminf.    1.28619 (8) obj. -136.011 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 59 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -132.813 - took 0.03 seconds
Cbc0012I Integer solution of -132.81301 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 107 rows 59 columns, reduced to 14 rows 13 columns
Cbc0031I 7 added rows had average density of 29.142857
Cbc0013I At root node, 7 cuts changed objective from -148.80281 to -139.56974 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 4.4 elements, 13 column cuts (13 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 72 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0001I Search completed - best objective -132.81301, took 122 iterations and 2 nodes (0.28 seconds)
Cbc0032I Strong branching done 26 times (189 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-66) rows, 98 (-55) columns and 1442 (-1862) elements
Clp1000I sum of infeasibilities 1.81448e-07 - average 2.03874e-09, 30 fixed columns
Coin0506I Presolve 55 (-34) rows, 58 (-40) columns and 569 (-873) elements
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 2.1454949 - largest nonzero change 1.5898952e-05 ( 0.0010393299%) - largest zero change 2.5632185e-05
Clp0000I Optimal - objective value 189.10596
Clp0000I Optimal - objective value 189.10596
Coin0511I After Postsolve, objective 189.10596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.790408 - largest nonzero change 2.2195358e-05 ( 0.0016580886%) - largest zero change 2.9081593e-05
Clp0000I Optimal - objective value 189.10596
Clp0000I Optimal - objective value 189.10596
Clp0000I Optimal - objective value 189.10596
Coin0511I After Postsolve, objective 189.10596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 189.1059586 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 98 columns (98 integer (98 of which binary)) and 1444 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.930%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.98461
Cbc0038I Pass   1: suminf.    2.89433 (29) obj. -140.713 iterations 12
Cbc0038I Pass   2: suminf.    2.89433 (29) obj. -140.713 iterations 1
Cbc0038I Pass   3: suminf.    0.30587 (4) obj. -108.485 iterations 25
Cbc0038I Solution found of -104.791
Cbc0038I Rounding solution of -112.178 is better than previous of -104.791

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 98 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -112.178 to -131.235 (0.03 seconds)
Cbc0038I Round again with cutoff of -136.245
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.89433 (29) obj. -140.713 iterations 0
Cbc0038I Pass   5: suminf.    2.89433 (29) obj. -140.713 iterations 1
Cbc0038I Pass   6: suminf.    1.10879 (10) obj. -136.245 iterations 27
Cbc0038I Pass   7: suminf.    1.03891 (9) obj. -141.029 iterations 1
Cbc0038I Pass   8: suminf.    0.25777 (2) obj. -136.245 iterations 11
Cbc0038I Pass   9: suminf.    0.67338 (3) obj. -140.324 iterations 4
Cbc0038I Pass  10: suminf.    1.59193 (8) obj. -136.245 iterations 20
Cbc0038I Pass  11: suminf.    1.37967 (8) obj. -136.245 iterations 5
Cbc0038I Pass  12: suminf.    1.14229 (4) obj. -136.245 iterations 10
Cbc0038I Pass  13: suminf.    0.49956 (4) obj. -136.245 iterations 4
Cbc0038I Pass  14: suminf.    0.48694 (3) obj. -136.245 iterations 3
Cbc0038I Pass  15: suminf.    0.96711 (4) obj. -136.245 iterations 3
Cbc0038I Pass  16: suminf.    0.96711 (4) obj. -136.245 iterations 0
Cbc0038I Pass  17: suminf.    1.42650 (4) obj. -140.424 iterations 5
Cbc0038I Pass  18: suminf.    1.32366 (3) obj. -136.245 iterations 2
Cbc0038I Pass  19: suminf.    1.27363 (3) obj. -137.036 iterations 1
Cbc0038I Pass  20: suminf.    3.84250 (18) obj. -136.245 iterations 24
Cbc0038I Pass  21: suminf.    3.84250 (18) obj. -136.245 iterations 0
Cbc0038I Pass  22: suminf.    1.71357 (5) obj. -136.245 iterations 20
Cbc0038I Pass  23: suminf.    0.71215 (6) obj. -136.245 iterations 5
Cbc0038I Pass  24: suminf.    1.71357 (5) obj. -136.245 iterations 8
Cbc0038I Pass  25: suminf.    1.45320 (11) obj. -136.245 iterations 11
Cbc0038I Pass  26: suminf.    1.18056 (7) obj. -136.245 iterations 5
Cbc0038I Pass  27: suminf.    1.00234 (9) obj. -136.245 iterations 17
Cbc0038I Pass  28: suminf.    1.41165 (9) obj. -136.245 iterations 13
Cbc0038I Pass  29: suminf.    1.31574 (10) obj. -136.245 iterations 2
Cbc0038I Pass  30: suminf.    2.01663 (7) obj. -136.245 iterations 10
Cbc0038I Pass  31: suminf.    1.25348 (8) obj. -136.245 iterations 5
Cbc0038I Pass  32: suminf.    0.90817 (5) obj. -136.245 iterations 6
Cbc0038I Pass  33: suminf.    1.31687 (10) obj. -136.245 iterations 9
Cbc0038I Rounding solution of -132.813 is better than previous of -131.235

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 98 columns, reduced to 46 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -145.263
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.22927 (33) obj. -145.263 iterations 3
Cbc0038I Pass  34: suminf.    3.21832 (31) obj. -145.263 iterations 1
Cbc0038I Pass  35: suminf.    2.21533 (15) obj. -145.263 iterations 25
Cbc0038I Pass  36: suminf.    1.70904 (5) obj. -145.263 iterations 16
Cbc0038I Pass  37: suminf.    0.71362 (6) obj. -145.263 iterations 2
Cbc0038I Pass  38: suminf.    1.70904 (5) obj. -145.263 iterations 5
Cbc0038I Pass  39: suminf.    2.37152 (12) obj. -145.263 iterations 12
Cbc0038I Pass  40: suminf.    2.26016 (12) obj. -145.263 iterations 2
Cbc0038I Pass  41: suminf.    1.82668 (7) obj. -145.263 iterations 12
Cbc0038I Pass  42: suminf.    1.24668 (8) obj. -145.263 iterations 1
Cbc0038I Pass  43: suminf.    1.77116 (7) obj. -145.263 iterations 6
Cbc0038I Pass  44: suminf.    1.18722 (8) obj. -145.263 iterations 2
Cbc0038I Pass  45: suminf.    1.82668 (7) obj. -145.263 iterations 6
Cbc0038I Pass  46: suminf.    2.68260 (14) obj. -145.263 iterations 8
Cbc0038I Pass  47: suminf.    2.68260 (14) obj. -145.263 iterations 0
Cbc0038I Pass  48: suminf.    1.84181 (8) obj. -145.263 iterations 7
Cbc0038I Pass  49: suminf.    1.31978 (9) obj. -145.263 iterations 2
Cbc0038I Pass  50: suminf.    1.82668 (7) obj. -145.263 iterations 9
Cbc0038I Pass  51: suminf.    1.24668 (8) obj. -145.263 iterations 2
Cbc0038I Pass  52: suminf.    1.77116 (7) obj. -145.263 iterations 6
Cbc0038I Pass  53: suminf.    1.18722 (8) obj. -145.263 iterations 2
Cbc0038I Pass  54: suminf.    1.82668 (7) obj. -145.263 iterations 6
Cbc0038I Pass  55: suminf.    1.22782 (13) obj. -145.263 iterations 10
Cbc0038I Pass  56: suminf.    0.86510 (9) obj. -145.351 iterations 10
Cbc0038I Pass  57: suminf.    0.57272 (11) obj. -145.263 iterations 13
Cbc0038I Pass  58: suminf.    0.57272 (11) obj. -145.263 iterations 1
Cbc0038I Pass  59: suminf.    1.24668 (8) obj. -145.263 iterations 7
Cbc0038I Pass  60: suminf.    1.24668 (8) obj. -145.263 iterations 2
Cbc0038I Pass  61: suminf.    1.77116 (7) obj. -145.263 iterations 8
Cbc0038I Pass  62: suminf.    1.18722 (8) obj. -145.263 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 98 columns, reduced to 45 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -132.813 - took 0.05 seconds
Cbc0012I Integer solution of -132.81301 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 11 added rows had average density of 11.818182
Cbc0013I At root node, 11 cuts changed objective from -181.33533 to -133.20102 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 249 row cuts average 2.4 elements, 29 column cuts (29 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0001I Search completed - best objective -132.81301, took 181 iterations and 0 nodes (0.24 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.25

