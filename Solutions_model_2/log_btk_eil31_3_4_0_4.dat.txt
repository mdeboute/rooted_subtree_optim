Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-40) rows, 15 (-18) columns and 73 (-110) elements
Clp1000I sum of infeasibilities 1.43412e-06 - average 5.73647e-08, 12 fixed columns
Coin0506I Presolve 0 (-25) rows, 0 (-15) columns and 0 (-73) elements
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Coin0511I After Postsolve, objective 4866.4702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1922829 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Coin0511I After Postsolve, objective 4866.4702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4866.470244 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.758642
Cbc0038I Solution found of -3511
Cbc0038I Relaxing continuous gives -3511
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -3645.76
Cbc0038I Pass   1: suminf.    0.07640 (2) obj. -3645.76 iterations 7
Cbc0038I Pass   2: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass   3: suminf.    0.79070 (2) obj. -3885.17 iterations 4
Cbc0038I Pass   4: suminf.    0.79070 (2) obj. -3885.17 iterations 1
Cbc0038I Pass   5: suminf.    0.92643 (2) obj. -3645.76 iterations 4
Cbc0038I Pass   6: suminf.    0.44444 (2) obj. -3920.73 iterations 7
Cbc0038I Pass   7: suminf.    0.06710 (2) obj. -3645.76 iterations 5
Cbc0038I Pass   8: suminf.    0.38422 (2) obj. -4653.59 iterations 2
Cbc0038I Pass   9: suminf.    0.37302 (1) obj. -4634.78 iterations 1
Cbc0038I Pass  10: suminf.    0.81689 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  11: suminf.    0.81689 (2) obj. -3645.76 iterations 1
Cbc0038I Pass  12: suminf.    0.71779 (3) obj. -3645.76 iterations 3
Cbc0038I Pass  13: suminf.    0.71779 (3) obj. -3645.76 iterations 0
Cbc0038I Pass  14: suminf.    0.75950 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  15: suminf.    0.23091 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  16: suminf.    0.23091 (2) obj. -3645.76 iterations 0
Cbc0038I Pass  17: suminf.    0.23091 (2) obj. -3645.76 iterations 0
Cbc0038I Pass  18: suminf.    0.06358 (2) obj. -3645.76 iterations 4
Cbc0038I Pass  19: suminf.    0.55000 (2) obj. -4327.78 iterations 2
Cbc0038I Pass  20: suminf.    0.55000 (2) obj. -4327.78 iterations 0
Cbc0038I Pass  21: suminf.    1.07109 (3) obj. -3645.76 iterations 3
Cbc0038I Pass  22: suminf.    0.76056 (4) obj. -3645.76 iterations 5
Cbc0038I Pass  23: suminf.    0.07119 (2) obj. -3645.76 iterations 8
Cbc0038I Pass  24: suminf.    0.15504 (2) obj. -3793.66 iterations 1
Cbc0038I Pass  25: suminf.    0.07459 (2) obj. -3645.76 iterations 10
Cbc0038I Pass  26: suminf.    0.52713 (2) obj. -4443.96 iterations 1
Cbc0038I Pass  27: suminf.    0.07459 (2) obj. -3645.76 iterations 5
Cbc0038I Pass  28: suminf.    0.96668 (3) obj. -3645.76 iterations 4
Cbc0038I Pass  29: suminf.    0.96668 (3) obj. -3645.76 iterations 0
Cbc0038I Pass  30: suminf.    0.06706 (2) obj. -3645.76 iterations 7
Cbc0038I Rounding solution of -3533.6 is better than previous of -3511

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -3533.6 to -3535 (0.01 seconds)
Cbc0038I Round again with cutoff of -3887.96
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.21372 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  31: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass  32: suminf.    1.21788 (4) obj. -3887.96 iterations 2
Cbc0038I Pass  33: suminf.    1.09409 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  34: suminf.    0.55917 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  35: suminf.    0.73850 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  36: suminf.    0.73850 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  37: suminf.    0.78730 (2) obj. -3887.96 iterations 7
Cbc0038I Pass  38: suminf.    0.77519 (2) obj. -3909.31 iterations 1
Cbc0038I Pass  39: suminf.    0.78730 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  40: suminf.    1.06559 (4) obj. -3887.96 iterations 11
Cbc0038I Pass  41: suminf.    0.48465 (2) obj. -3887.96 iterations 3
Cbc0038I Pass  42: suminf.    0.78329 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  43: suminf.    0.88409 (3) obj. -3887.96 iterations 2
Cbc0038I Pass  44: suminf.    0.87959 (3) obj. -3887.96 iterations 5
Cbc0038I Pass  45: suminf.    0.20839 (2) obj. -3887.96 iterations 4
Cbc0038I Pass  46: suminf.    0.27907 (2) obj. -4012.62 iterations 1
Cbc0038I Pass  47: suminf.    0.90925 (3) obj. -3887.96 iterations 5
Cbc0038I Pass  48: suminf.    0.90925 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  49: suminf.    0.26984 (1) obj. -3990.79 iterations 2
Cbc0038I Pass  50: suminf.    0.21191 (2) obj. -3887.96 iterations 2
Cbc0038I Pass  51: suminf.    0.52713 (2) obj. -4443.96 iterations 1
Cbc0038I Pass  52: suminf.    0.72574 (3) obj. -3887.96 iterations 7
Cbc0038I Pass  53: suminf.    0.72574 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  54: suminf.    0.26951 (2) obj. -3887.96 iterations 3
Cbc0038I Pass  55: suminf.    0.26951 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  56: suminf.    0.79481 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  57: suminf.    0.48677 (2) obj. -4435.77 iterations 1
Cbc0038I Pass  58: suminf.    0.79227 (3) obj. -3887.96 iterations 2
Cbc0038I Pass  59: suminf.    0.79227 (3) obj. -3887.96 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3535 - took 0.02 seconds
Cbc0012I Integer solution of -3535 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 5 columns
Cbc0031I 2 added rows had average density of 2.5
Cbc0013I At root node, 5 cuts changed objective from -4856.78 to -3535 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3535, took 4 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-17) rows, 50 (-12) columns and 440 (-208) elements
Clp1000I sum of infeasibilities 8.84085e-06 - average 1.88103e-07, 48 fixed columns
Coin0506I Presolve 0 (-47) rows, 0 (-50) columns and 0 (-440) elements
Clp0000I Optimal - objective value 4861.4702
Clp0000I Optimal - objective value 4861.4702
Coin0511I After Postsolve, objective 4861.4702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2639627 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 4895.7939
Clp0000I Optimal - objective value 4895.7939
Clp0000I Optimal - objective value 4895.7939
Coin0511I After Postsolve, objective 4895.7939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4895.793923 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 13 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 37 columns (37 integer (37 of which binary)) and 224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.180%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.19863
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1749 iterations 30
Cbc0038I Solution found of -1749
Cbc0038I Rounding solution of -1772.2 is better than previous of -1749

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 37 columns, reduced to 14 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -1772.2 to -3527.4 (0.01 seconds)
Cbc0038I Round again with cutoff of -3624.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.95467 (3) obj. -3624.4 iterations 2
Cbc0038I Pass   3: suminf.    0.95467 (3) obj. -3624.4 iterations 0
Cbc0038I Pass   4: suminf.    0.05497 (2) obj. -3624.4 iterations 5
Cbc0038I Pass   5: suminf.    1.20077 (3) obj. -4160.59 iterations 3
Cbc0038I Pass   6: suminf.    0.25074 (2) obj. -3928.43 iterations 1
Cbc0038I Pass   7: suminf.    2.20070 (7) obj. -3624.4 iterations 7
Cbc0038I Pass   8: suminf.    1.60798 (5) obj. -3624.4 iterations 2
Cbc0038I Pass   9: suminf.    0.97507 (3) obj. -3624.4 iterations 5
Cbc0038I Pass  10: suminf.    0.43609 (2) obj. -3790.21 iterations 2
Cbc0038I Pass  11: suminf.    0.29826 (2) obj. -3624.4 iterations 1
Cbc0038I Pass  12: suminf.    0.80200 (3) obj. -3624.4 iterations 4
Cbc0038I Pass  13: suminf.    0.97880 (3) obj. -3624.4 iterations 3
Cbc0038I Pass  14: suminf.    0.43609 (2) obj. -3784.21 iterations 2
Cbc0038I Pass  15: suminf.    0.30324 (2) obj. -3624.4 iterations 1
Cbc0038I Pass  16: suminf.    1.95891 (5) obj. -3624.4 iterations 13
Cbc0038I Pass  17: suminf.    0.68892 (2) obj. -3624.4 iterations 5
Cbc0038I Pass  18: suminf.    0.87707 (2) obj. -3624.4 iterations 1
Cbc0038I Pass  19: suminf.    1.05780 (4) obj. -3624.4 iterations 5
Cbc0038I Pass  20: suminf.    1.05780 (4) obj. -3624.4 iterations 0
Cbc0038I Pass  21: suminf.    1.20077 (3) obj. -4154.59 iterations 5
Cbc0038I Pass  22: suminf.    0.25074 (2) obj. -3922.43 iterations 1
Cbc0038I Pass  23: suminf.    0.05837 (2) obj. -3624.4 iterations 3
Cbc0038I Pass  24: suminf.    1.92558 (6) obj. -3624.4 iterations 11
Cbc0038I Pass  25: suminf.    1.65286 (5) obj. -3624.4 iterations 2
Cbc0038I Pass  26: suminf.    0.86851 (3) obj. -3923.16 iterations 4
Cbc0038I Pass  27: suminf.    0.21731 (2) obj. -3624.4 iterations 4
Cbc0038I Pass  28: suminf.    0.76870 (2) obj. -3624.4 iterations 1
Cbc0038I Pass  29: suminf.    2.47546 (8) obj. -3624.4 iterations 10
Cbc0038I Pass  30: suminf.    1.78665 (6) obj. -3907.3 iterations 4
Cbc0038I Pass  31: suminf.    0.93389 (2) obj. -3624.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 37 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -3527.4 to -3535 (0.02 seconds)
Cbc0038I Round again with cutoff of -3798.63
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.05264 (3) obj. -3798.63 iterations 0
Cbc0038I Pass  32: suminf.    1.05264 (3) obj. -3798.63 iterations 0
Cbc0038I Pass  33: suminf.    0.15358 (2) obj. -3798.63 iterations 5
Cbc0038I Pass  34: suminf.    1.20077 (3) obj. -4160.59 iterations 3
Cbc0038I Pass  35: suminf.    0.25074 (2) obj. -3928.43 iterations 1
Cbc0038I Pass  36: suminf.    3.15811 (11) obj. -3798.63 iterations 17
Cbc0038I Pass  37: suminf.    0.92980 (3) obj. -3798.63 iterations 7
Cbc0038I Pass  38: suminf.    0.93487 (3) obj. -3798.63 iterations 2
Cbc0038I Pass  39: suminf.    0.15236 (2) obj. -3798.63 iterations 5
Cbc0038I Pass  40: suminf.    1.14093 (3) obj. -4146.09 iterations 2
Cbc0038I Pass  41: suminf.    1.44060 (6) obj. -3798.63 iterations 7
Cbc0038I Pass  42: suminf.    1.17307 (5) obj. -3798.63 iterations 2
Cbc0038I Pass  43: suminf.    0.25000 (1) obj. -3957.8 iterations 12
Cbc0038I Pass  44: suminf.    0.16183 (2) obj. -3798.63 iterations 3
Cbc0038I Pass  45: suminf.    0.81551 (3) obj. -4277.44 iterations 2
Cbc0038I Pass  46: suminf.    2.01103 (6) obj. -3798.63 iterations 5
Cbc0038I Pass  47: suminf.    1.37401 (5) obj. -3798.63 iterations 3
Cbc0038I Pass  48: suminf.    1.37401 (5) obj. -3798.63 iterations 1
Cbc0038I Pass  49: suminf.    0.25000 (1) obj. -3956.8 iterations 8
Cbc0038I Pass  50: suminf.    0.16240 (2) obj. -3798.63 iterations 3
Cbc0038I Pass  51: suminf.    0.81551 (3) obj. -4276.44 iterations 2
Cbc0038I Pass  52: suminf.    0.98555 (5) obj. -3798.63 iterations 12
Cbc0038I Pass  53: suminf.    0.83333 (2) obj. -3816 iterations 5
Cbc0038I Pass  54: suminf.    0.40396 (2) obj. -3798.63 iterations 2
Cbc0038I Pass  55: suminf.    0.25000 (1) obj. -3953.8 iterations 5
Cbc0038I Pass  56: suminf.    0.16410 (2) obj. -3798.63 iterations 3
Cbc0038I Pass  57: suminf.    0.81551 (3) obj. -4273.44 iterations 2
Cbc0038I Pass  58: suminf.    2.31241 (7) obj. -3798.63 iterations 9
Cbc0038I Pass  59: suminf.    1.19889 (5) obj. -3798.63 iterations 4
Cbc0038I Pass  60: suminf.    1.12009 (5) obj. -3798.63 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 37 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3535 - took 0.02 seconds
Cbc0012I Integer solution of -3535 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 37 columns, reduced to 15 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -4053.1931 to -4053.1931 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3535, took 14 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-40) rows, 15 (-18) columns and 73 (-110) elements
Clp1000I sum of infeasibilities 1.43412e-06 - average 5.73647e-08, 12 fixed columns
Coin0506I Presolve 0 (-25) rows, 0 (-15) columns and 0 (-73) elements
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Coin0511I After Postsolve, objective 4866.4702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1922829 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Clp0000I Optimal - objective value 4866.4702
Coin0511I After Postsolve, objective 4866.4702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4866.470244 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 15 columns (14 integer (14 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.758642
Cbc0038I Solution found of -3511
Cbc0038I Relaxing continuous gives -3511
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -3645.76
Cbc0038I Pass   1: suminf.    0.07640 (2) obj. -3645.76 iterations 7
Cbc0038I Pass   2: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass   3: suminf.    0.79070 (2) obj. -3885.17 iterations 4
Cbc0038I Pass   4: suminf.    0.79070 (2) obj. -3885.17 iterations 1
Cbc0038I Pass   5: suminf.    0.92643 (2) obj. -3645.76 iterations 4
Cbc0038I Pass   6: suminf.    0.44444 (2) obj. -3920.73 iterations 7
Cbc0038I Pass   7: suminf.    0.06710 (2) obj. -3645.76 iterations 5
Cbc0038I Pass   8: suminf.    0.38422 (2) obj. -4653.59 iterations 2
Cbc0038I Pass   9: suminf.    0.37302 (1) obj. -4634.78 iterations 1
Cbc0038I Pass  10: suminf.    0.81689 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  11: suminf.    0.81689 (2) obj. -3645.76 iterations 1
Cbc0038I Pass  12: suminf.    0.71779 (3) obj. -3645.76 iterations 3
Cbc0038I Pass  13: suminf.    0.71779 (3) obj. -3645.76 iterations 0
Cbc0038I Pass  14: suminf.    0.75950 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  15: suminf.    0.23091 (2) obj. -3645.76 iterations 2
Cbc0038I Pass  16: suminf.    0.23091 (2) obj. -3645.76 iterations 0
Cbc0038I Pass  17: suminf.    0.23091 (2) obj. -3645.76 iterations 0
Cbc0038I Pass  18: suminf.    0.06358 (2) obj. -3645.76 iterations 4
Cbc0038I Pass  19: suminf.    0.55000 (2) obj. -4327.78 iterations 2
Cbc0038I Pass  20: suminf.    0.55000 (2) obj. -4327.78 iterations 0
Cbc0038I Pass  21: suminf.    1.07109 (3) obj. -3645.76 iterations 3
Cbc0038I Pass  22: suminf.    0.76056 (4) obj. -3645.76 iterations 5
Cbc0038I Pass  23: suminf.    0.07119 (2) obj. -3645.76 iterations 8
Cbc0038I Pass  24: suminf.    0.15504 (2) obj. -3793.66 iterations 1
Cbc0038I Pass  25: suminf.    0.07459 (2) obj. -3645.76 iterations 10
Cbc0038I Pass  26: suminf.    0.52713 (2) obj. -4443.96 iterations 1
Cbc0038I Pass  27: suminf.    0.07459 (2) obj. -3645.76 iterations 5
Cbc0038I Pass  28: suminf.    0.96668 (3) obj. -3645.76 iterations 4
Cbc0038I Pass  29: suminf.    0.96668 (3) obj. -3645.76 iterations 0
Cbc0038I Pass  30: suminf.    0.06706 (2) obj. -3645.76 iterations 7
Cbc0038I Rounding solution of -3533.6 is better than previous of -3511

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -3533.6 to -3535 (0.01 seconds)
Cbc0038I Round again with cutoff of -3887.96
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.21372 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  31: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass  32: suminf.    1.21788 (4) obj. -3887.96 iterations 2
Cbc0038I Pass  33: suminf.    1.09409 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  34: suminf.    0.55917 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  35: suminf.    0.73850 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  36: suminf.    0.73850 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  37: suminf.    0.78730 (2) obj. -3887.96 iterations 7
Cbc0038I Pass  38: suminf.    0.77519 (2) obj. -3909.31 iterations 1
Cbc0038I Pass  39: suminf.    0.78730 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  40: suminf.    1.06559 (4) obj. -3887.96 iterations 11
Cbc0038I Pass  41: suminf.    0.48465 (2) obj. -3887.96 iterations 3
Cbc0038I Pass  42: suminf.    0.78329 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  43: suminf.    0.88409 (3) obj. -3887.96 iterations 2
Cbc0038I Pass  44: suminf.    0.87959 (3) obj. -3887.96 iterations 5
Cbc0038I Pass  45: suminf.    0.20839 (2) obj. -3887.96 iterations 4
Cbc0038I Pass  46: suminf.    0.27907 (2) obj. -4012.62 iterations 1
Cbc0038I Pass  47: suminf.    0.90925 (3) obj. -3887.96 iterations 5
Cbc0038I Pass  48: suminf.    0.90925 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  49: suminf.    0.26984 (1) obj. -3990.79 iterations 2
Cbc0038I Pass  50: suminf.    0.21191 (2) obj. -3887.96 iterations 2
Cbc0038I Pass  51: suminf.    0.52713 (2) obj. -4443.96 iterations 1
Cbc0038I Pass  52: suminf.    0.72574 (3) obj. -3887.96 iterations 7
Cbc0038I Pass  53: suminf.    0.72574 (3) obj. -3887.96 iterations 1
Cbc0038I Pass  54: suminf.    0.26951 (2) obj. -3887.96 iterations 3
Cbc0038I Pass  55: suminf.    0.26951 (2) obj. -3887.96 iterations 0
Cbc0038I Pass  56: suminf.    0.79481 (2) obj. -3887.96 iterations 1
Cbc0038I Pass  57: suminf.    0.48677 (2) obj. -4435.77 iterations 1
Cbc0038I Pass  58: suminf.    0.79227 (3) obj. -3887.96 iterations 2
Cbc0038I Pass  59: suminf.    0.79227 (3) obj. -3887.96 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 15 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3535 - took 0.01 seconds
Cbc0012I Integer solution of -3535 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 15 columns, reduced to 4 rows 5 columns
Cbc0031I 2 added rows had average density of 2.5
Cbc0013I At root node, 5 cuts changed objective from -4856.78 to -3535 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3535, took 4 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 37 (-26) columns and 222 (-427) elements
Clp1000I sum of infeasibilities 8.7045e-07 - average 2.56015e-08, 15 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-37) columns and 0 (-222) elements
Clp0000I Optimal - objective value 4895.7939
Clp0000I Optimal - objective value 4895.7939
Coin0511I After Postsolve, objective 4895.7939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5624904 - largest nonzero change 1.0767134e-05 ( 0.0010767134%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4895.7939
Clp0000I Optimal - objective value 4895.7939
Clp0000I Optimal - objective value 4895.7939
Coin0511I After Postsolve, objective 4895.7939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4895.793923 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 37 columns (37 integer (37 of which binary)) and 227 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.27465
Cbc0038I Solution found of -3511
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3646.48
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.07681 (2) obj. -3646.48 iterations 29
Cbc0038I Pass   2: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass   3: suminf.    1.82104 (6) obj. -3646.48 iterations 7
Cbc0038I Pass   4: suminf.    1.82104 (6) obj. -3646.48 iterations 0
Cbc0038I Pass   5: suminf.    0.07143 (2) obj. -3646.48 iterations 7
Cbc0038I Pass   6: suminf.    0.07143 (2) obj. -3646.48 iterations 0
Cbc0038I Pass   7: suminf.    0.52892 (2) obj. -4351.58 iterations 2
Cbc0038I Pass   8: suminf.    0.52892 (2) obj. -4351.58 iterations 0
Cbc0038I Pass   9: suminf.    0.97102 (3) obj. -3646.48 iterations 2
Cbc0038I Pass  10: suminf.    0.97102 (3) obj. -3646.48 iterations 0
Cbc0038I Pass  11: suminf.    0.07143 (2) obj. -3646.48 iterations 5
Cbc0038I Pass  12: suminf.    0.52892 (2) obj. -4351.58 iterations 2
Cbc0038I Pass  13: suminf.    0.52892 (2) obj. -4351.58 iterations 0
Cbc0038I Pass  14: suminf.    0.97102 (3) obj. -3646.48 iterations 2
Cbc0038I Pass  15: suminf.    0.97102 (3) obj. -3646.48 iterations 0
Cbc0038I Pass  16: suminf.    0.07143 (2) obj. -3646.48 iterations 5
Cbc0038I Pass  17: suminf.    0.52892 (2) obj. -4351.58 iterations 2
Cbc0038I Pass  18: suminf.    0.52892 (2) obj. -4351.58 iterations 0
Cbc0038I Pass  19: suminf.    0.97102 (3) obj. -3646.48 iterations 2
Cbc0038I Pass  20: suminf.    0.97102 (3) obj. -3646.48 iterations 0
Cbc0038I Pass  21: suminf.    0.07143 (2) obj. -3646.48 iterations 5
Cbc0038I Pass  22: suminf.    0.52892 (2) obj. -4351.58 iterations 2
Cbc0038I Pass  23: suminf.    0.52892 (2) obj. -4351.58 iterations 0
Cbc0038I Pass  24: suminf.    0.97102 (3) obj. -3646.48 iterations 2
Cbc0038I Pass  25: suminf.    0.97102 (3) obj. -3646.48 iterations 0
Cbc0038I Pass  26: suminf.    0.07143 (2) obj. -3646.48 iterations 5
Cbc0038I Pass  27: suminf.    0.52892 (2) obj. -4351.58 iterations 2
Cbc0038I Pass  28: suminf.    0.52892 (2) obj. -4351.58 iterations 0
Cbc0038I Pass  29: suminf.    0.97102 (3) obj. -3646.48 iterations 2
Cbc0038I Pass  30: suminf.    0.97102 (3) obj. -3646.48 iterations 0
Cbc0038I Rounding solution of -3527.4 is better than previous of -3511

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 37 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -3889.99
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.21487 (2) obj. -3889.99 iterations 0
Cbc0038I Pass  31: suminf.    0.54264 (2) obj. -4468.1 iterations 1
Cbc0038I Pass  32: suminf.    3.64262 (11) obj. -3889.99 iterations 11
Cbc0038I Pass  33: suminf.    0.54507 (3) obj. -3889.99 iterations 8
Cbc0038I Pass  34: suminf.    0.21192 (2) obj. -3889.99 iterations 1
Cbc0038I Pass  35: suminf.    0.29457 (2) obj. -4035.77 iterations 1
Cbc0038I Pass  36: suminf.    0.45590 (3) obj. -3889.99 iterations 7
Cbc0038I Pass  37: suminf.    0.45590 (3) obj. -3889.99 iterations 0
Cbc0038I Pass  38: suminf.    0.55000 (2) obj. -4319.78 iterations 3
Cbc0038I Pass  39: suminf.    0.20632 (2) obj. -3889.99 iterations 3
Cbc0038I Pass  40: suminf.    1.38924 (6) obj. -3889.99 iterations 7
Cbc0038I Pass  41: suminf.    0.55000 (2) obj. -4321.78 iterations 6
Cbc0038I Pass  42: suminf.    0.20519 (2) obj. -3889.99 iterations 3
Cbc0038I Pass  43: suminf.    1.54857 (6) obj. -3889.99 iterations 7
Cbc0038I Pass  44: suminf.    1.11606 (5) obj. -3889.99 iterations 1
Cbc0038I Pass  45: suminf.    0.38422 (2) obj. -4647.59 iterations 4
Cbc0038I Pass  46: suminf.    0.37302 (1) obj. -4628.78 iterations 1
Cbc0038I Pass  47: suminf.    0.20891 (2) obj. -3889.99 iterations 2
Cbc0038I Pass  48: suminf.    2.29982 (9) obj. -3889.99 iterations 13
Cbc0038I Pass  49: suminf.    2.29036 (8) obj. -3889.99 iterations 3
Cbc0038I Pass  50: suminf.    0.99205 (4) obj. -3889.99 iterations 8
Cbc0038I Pass  51: suminf.    0.52892 (2) obj. -4357.58 iterations 5
Cbc0038I Pass  52: suminf.    1.10457 (3) obj. -3889.99 iterations 2
Cbc0038I Pass  53: suminf.    1.10457 (3) obj. -3889.99 iterations 0
Cbc0038I Pass  54: suminf.    0.21961 (2) obj. -3889.99 iterations 2
Cbc0038I Pass  55: suminf.    0.79185 (2) obj. -3889.99 iterations 1
Cbc0038I Pass  56: suminf.    0.52892 (2) obj. -4357.58 iterations 1
Cbc0038I Pass  57: suminf.    1.10457 (3) obj. -3889.99 iterations 2
Cbc0038I Pass  58: suminf.    1.10457 (3) obj. -3889.99 iterations 0
Cbc0038I Pass  59: suminf.    0.21961 (2) obj. -3889.99 iterations 2
Cbc0038I Rounding solution of -3533.6 is better than previous of -3527.4

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 37 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4182.19
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.37932 (2) obj. -4182.19 iterations 2
Cbc0038I Pass  60: suminf.    0.75864 (2) obj. -4856.78 iterations 1
Cbc0038I Pass  61: suminf.    1.56533 (7) obj. -4182.19 iterations 12
Cbc0038I Pass  62: suminf.    1.51177 (5) obj. -4353.19 iterations 3
Cbc0038I Pass  63: suminf.    0.62361 (2) obj. -4182.19 iterations 4
Cbc0038I Pass  64: suminf.    0.52892 (2) obj. -4350.58 iterations 1
Cbc0038I Pass  65: suminf.    1.97632 (5) obj. -4182.19 iterations 4
Cbc0038I Pass  66: suminf.    1.97632 (5) obj. -4182.19 iterations 0
Cbc0038I Pass  67: suminf.    0.62417 (2) obj. -4182.19 iterations 3
Cbc0038I Pass  68: suminf.    0.52892 (2) obj. -4351.58 iterations 1
Cbc0038I Pass  69: suminf.    0.62417 (2) obj. -4182.19 iterations 1
Cbc0038I Pass  70: suminf.    1.11305 (4) obj. -4182.19 iterations 4
Cbc0038I Pass  71: suminf.    0.62642 (2) obj. -4182.19 iterations 3
Cbc0038I Pass  72: suminf.    0.52892 (2) obj. -4355.58 iterations 1
Cbc0038I Pass  73: suminf.    0.62642 (2) obj. -4182.19 iterations 1
Cbc0038I Pass  74: suminf.    1.78499 (8) obj. -4182.19 iterations 7
Cbc0038I Pass  75: suminf.    1.74511 (5) obj. -4355.36 iterations 3
Cbc0038I Pass  76: suminf.    0.62529 (2) obj. -4182.19 iterations 4
Cbc0038I Pass  77: suminf.    0.52892 (2) obj. -4353.58 iterations 1
Cbc0038I Pass  78: suminf.    1.24368 (4) obj. -4182.19 iterations 3
Cbc0038I Pass  79: suminf.    0.86226 (3) obj. -4351.58 iterations 3
Cbc0038I Pass  80: suminf.    0.62304 (2) obj. -4182.19 iterations 2
Cbc0038I Pass  81: suminf.    0.52892 (2) obj. -4349.58 iterations 1
Cbc0038I Pass  82: suminf.    0.92578 (5) obj. -4182.19 iterations 4
Cbc0038I Pass  83: suminf.    0.86226 (3) obj. -4353.58 iterations 2
Cbc0038I Pass  84: suminf.    0.62417 (2) obj. -4182.19 iterations 2
Cbc0038I Pass  85: suminf.    0.52892 (2) obj. -4351.58 iterations 1
Cbc0038I Pass  86: suminf.    0.87302 (3) obj. -4631.95 iterations 6
Cbc0038I Pass  87: suminf.    0.87302 (3) obj. -4631.95 iterations 0
Cbc0038I Pass  88: suminf.    0.37357 (1) obj. -4182.19 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 37 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3533.6 - took 0.02 seconds
Cbc0012I Integer solution of -3533.6 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 37 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -3535 found by DiveCoefficient after 16 iterations and 0 nodes (0.08 seconds)
Cbc0031I 1 added rows had average density of 4
Cbc0013I At root node, 1 cuts changed objective from -4864.0091 to -3535 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 2.1 elements, 21 column cuts (21 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3535, took 16 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

