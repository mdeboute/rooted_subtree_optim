Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 9.71972e-05 - average 1.9247e-07, 99 fixed columns
Coin0506I Presolve 302 (-203) rows, 160 (-102) columns and 900 (-602) elements
Clp0029I End of values pass after 160 iterations
Clp0014I Perturbing problem by 0.001% of 0.15751615 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Coin0511I After Postsolve, objective 167.44005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13520951 - largest nonzero change 0 ( 0%) - largest zero change 2.9776396e-05
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Coin0511I After Postsolve, objective 167.44005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.4400477 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 90 integers unsatisfied sum - 11.6219
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.6741 iterations 249
Cbc0038I Solution found of -13.6741
Cbc0038I Relaxing continuous gives -13.6741
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 168 rows 91 columns
Cbc0038I Mini branch and bound improved solution from -13.6741 to -89.2106 (0.09 seconds)
Cbc0038I Round again with cutoff of -97.0337
Cbc0038I Pass   2: suminf.    4.09937 (30) obj. -97.0337 iterations 85
Cbc0038I Pass   3: suminf.    2.90814 (10) obj. -97.0337 iterations 68
Cbc0038I Pass   4: suminf.    2.01885 (8) obj. -97.0337 iterations 29
Cbc0038I Pass   5: suminf.    1.81000 (8) obj. -97.0337 iterations 7
Cbc0038I Pass   6: suminf.    2.44565 (9) obj. -97.0337 iterations 29
Cbc0038I Pass   7: suminf.    2.26448 (9) obj. -97.0337 iterations 16
Cbc0038I Pass   8: suminf.    2.17986 (8) obj. -97.0337 iterations 14
Cbc0038I Pass   9: suminf.    1.91784 (7) obj. -97.0337 iterations 23
Cbc0038I Pass  10: suminf.    3.19124 (9) obj. -97.0337 iterations 33
Cbc0038I Pass  11: suminf.    2.31226 (9) obj. -97.0337 iterations 9
Cbc0038I Pass  12: suminf.    2.18390 (10) obj. -97.0337 iterations 20
Cbc0038I Pass  13: suminf.    2.20421 (8) obj. -97.0337 iterations 33
Cbc0038I Pass  14: suminf.    2.20421 (8) obj. -97.0337 iterations 2
Cbc0038I Pass  15: suminf.    3.08430 (8) obj. -97.0337 iterations 22
Cbc0038I Pass  16: suminf.    1.77488 (7) obj. -97.0337 iterations 12
Cbc0038I Pass  17: suminf.    1.64452 (7) obj. -97.0337 iterations 15
Cbc0038I Pass  18: suminf.    2.29183 (9) obj. -97.0337 iterations 28
Cbc0038I Pass  19: suminf.    2.29323 (8) obj. -97.0337 iterations 5
Cbc0038I Pass  20: suminf.    2.54071 (9) obj. -97.0337 iterations 40
Cbc0038I Pass  21: suminf.    2.18308 (8) obj. -97.0337 iterations 18
Cbc0038I Pass  22: suminf.    2.18308 (8) obj. -97.0337 iterations 1
Cbc0038I Pass  23: suminf.    3.04181 (8) obj. -97.0337 iterations 25
Cbc0038I Pass  24: suminf.    1.77488 (7) obj. -97.0337 iterations 11
Cbc0038I Pass  25: suminf.    1.64452 (7) obj. -97.0337 iterations 15
Cbc0038I Pass  26: suminf.    2.29183 (9) obj. -97.0337 iterations 28
Cbc0038I Pass  27: suminf.    2.29323 (8) obj. -97.0337 iterations 5
Cbc0038I Pass  28: suminf.    2.54071 (9) obj. -97.0337 iterations 40
Cbc0038I Pass  29: suminf.    2.18308 (8) obj. -97.0337 iterations 18
Cbc0038I Pass  30: suminf.    2.18308 (8) obj. -97.0337 iterations 1
Cbc0038I Pass  31: suminf.    3.04181 (8) obj. -97.0337 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 197 rows 106 columns
Cbc0038I Mini branch and bound improved solution from -89.2106 to -89.9609 (0.18 seconds)
Cbc0038I Round again with cutoff of -111.115
Cbc0038I Pass  31: suminf.    4.86937 (46) obj. -111.115 iterations 6
Cbc0038I Pass  32: suminf.    4.59454 (11) obj. -111.115 iterations 66
Cbc0038I Pass  33: suminf.    3.05358 (10) obj. -111.115 iterations 42
Cbc0038I Pass  34: suminf.    3.05358 (10) obj. -111.115 iterations 3
Cbc0038I Pass  35: suminf.    3.34901 (9) obj. -111.115 iterations 26
Cbc0038I Pass  36: suminf.    3.04148 (9) obj. -111.115 iterations 16
Cbc0038I Pass  37: suminf.    3.62766 (10) obj. -111.115 iterations 25
Cbc0038I Pass  38: suminf.    2.82434 (10) obj. -111.115 iterations 23
Cbc0038I Pass  39: suminf.    2.50010 (9) obj. -111.115 iterations 20
Cbc0038I Pass  40: suminf.    3.43423 (10) obj. -111.115 iterations 35
Cbc0038I Pass  41: suminf.    1.93720 (7) obj. -111.115 iterations 17
Cbc0038I Pass  42: suminf.    1.90548 (8) obj. -111.115 iterations 17
Cbc0038I Pass  43: suminf.    2.89552 (8) obj. -111.115 iterations 23
Cbc0038I Pass  44: suminf.    2.09467 (8) obj. -111.115 iterations 20
Cbc0038I Pass  45: suminf.    5.85618 (16) obj. -111.115 iterations 48
Cbc0038I Pass  46: suminf.    2.95410 (11) obj. -111.115 iterations 25
Cbc0038I Pass  47: suminf.    2.60073 (8) obj. -111.115 iterations 67
Cbc0038I Pass  48: suminf.    2.03518 (9) obj. -111.115 iterations 31
Cbc0038I Pass  49: suminf.    2.02643 (8) obj. -111.115 iterations 6
Cbc0038I Pass  50: suminf.    2.64973 (8) obj. -111.115 iterations 28
Cbc0038I Pass  51: suminf.    2.14280 (7) obj. -111.115 iterations 11
Cbc0038I Pass  52: suminf.    1.99596 (7) obj. -111.115 iterations 19
Cbc0038I Pass  53: suminf.    2.75322 (9) obj. -111.115 iterations 25
Cbc0038I Pass  54: suminf.    2.51116 (7) obj. -111.115 iterations 10
Cbc0038I Pass  55: suminf.    2.28955 (8) obj. -111.115 iterations 22
Cbc0038I Pass  56: suminf.    3.30905 (12) obj. -111.115 iterations 30
Cbc0038I Pass  57: suminf.    2.96934 (10) obj. -111.115 iterations 19
Cbc0038I Pass  58: suminf.    3.70983 (14) obj. -111.115 iterations 39
Cbc0038I Pass  59: suminf.    3.22032 (14) obj. -111.115 iterations 17
Cbc0038I Pass  60: suminf.    3.08275 (12) obj. -111.115 iterations 33
Cbc0038I Rounding solution of -92.8869 is better than previous of -89.9609

Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 224 rows 120 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I Round again with cutoff of -128.012
Cbc0038I Pass  60: suminf.    5.80491 (47) obj. -128.012 iterations 2
Cbc0038I Pass  61: suminf.    5.05069 (14) obj. -128.012 iterations 76
Cbc0038I Pass  62: suminf.    4.48725 (19) obj. -128.012 iterations 21
Cbc0038I Pass  63: suminf.    4.55866 (14) obj. -128.012 iterations 41
Cbc0038I Pass  64: suminf.    4.46199 (14) obj. -128.012 iterations 19
Cbc0038I Pass  65: suminf.    5.87100 (15) obj. -128.012 iterations 43
Cbc0038I Pass  66: suminf.    5.14202 (14) obj. -128.012 iterations 21
Cbc0038I Pass  67: suminf.    4.41024 (14) obj. -128.012 iterations 46
Cbc0038I Pass  68: suminf.    3.71759 (13) obj. -128.012 iterations 16
Cbc0038I Pass  69: suminf.    3.60158 (13) obj. -128.012 iterations 5
Cbc0038I Pass  70: suminf.    5.89714 (15) obj. -128.012 iterations 62
Cbc0038I Pass  71: suminf.    4.77260 (15) obj. -128.012 iterations 36
Cbc0038I Pass  72: suminf.    4.78547 (15) obj. -128.012 iterations 40
Cbc0038I Pass  73: suminf.    4.14823 (14) obj. -128.012 iterations 25
Cbc0038I Pass  74: suminf.    4.15227 (13) obj. -128.012 iterations 9
Cbc0038I Pass  75: suminf.    6.14434 (17) obj. -128.012 iterations 47
Cbc0038I Pass  76: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  77: suminf.    4.55469 (14) obj. -128.012 iterations 28
Cbc0038I Pass  78: suminf.    4.53825 (14) obj. -128.012 iterations 2
Cbc0038I Pass  79: suminf.    4.28121 (13) obj. -128.012 iterations 41
Cbc0038I Pass  80: suminf.    4.15227 (13) obj. -128.012 iterations 14
Cbc0038I Pass  81: suminf.    6.14434 (17) obj. -128.012 iterations 51
Cbc0038I Pass  82: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  83: suminf.    4.55469 (14) obj. -128.012 iterations 28
Cbc0038I Pass  84: suminf.    4.53825 (14) obj. -128.012 iterations 2
Cbc0038I Pass  85: suminf.    4.28121 (13) obj. -128.012 iterations 41
Cbc0038I Pass  86: suminf.    4.15227 (13) obj. -128.012 iterations 14
Cbc0038I Pass  87: suminf.    6.14434 (17) obj. -128.012 iterations 49
Cbc0038I Pass  88: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  89: suminf.    4.55469 (14) obj. -128.012 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 219 rows 118 columns
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting with objective of -92.8869 - took 0.40 seconds
Cbc0012I Integer solution of -92.88693 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 175 rows 95 columns
Cbc0031I 45 added rows had average density of 166.24444
Cbc0013I At root node, 45 cuts changed objective from -167.44005 to -153.53092 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 53103 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.563 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3736 row cuts average 257.1 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.831 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.247 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.88693 best solution, best possible -153.53092 (7.51 seconds)
Cbc0010I After 9 nodes, 10 on tree, -92.88693 best solution, best possible -153.53092 (8.25 seconds)
Cbc0012I Integer solution of -93.79987 found by rounding after 24652 iterations and 13 nodes (8.37 seconds)
Cbc0012I Integer solution of -97.13281 found by rounding after 24792 iterations and 16 nodes (8.39 seconds)
Cbc0012I Integer solution of -99.39846 found by rounding after 27668 iterations and 43 nodes (8.74 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 35 rows 26 columns
Cbc0012I Integer solution of -101.27688 found by RINS after 27668 iterations and 43 nodes (8.75 seconds)
Cbc0010I After 57 nodes, 15 on tree, -101.27688 best solution, best possible -153.53092 (8.96 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 168 rows 89 columns
Cbc0012I Integer solution of -102.34863 found by rounding after 32622 iterations and 123 nodes (9.58 seconds)
Cbc0010I After 147 nodes, 24 on tree, -102.34863 best solution, best possible -153.53092 (9.66 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 9 columns
Cbc0012I Integer solution of -102.71606 found by rounding after 40387 iterations and 345 nodes (10.36 seconds)
Cbc0010I After 345 nodes, 20 on tree, -102.71606 best solution, best possible -153.53092 (10.36 seconds)
Cbc0012I Integer solution of -104.9194 found by rounding after 41636 iterations and 400 nodes (10.48 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -104.9194, took 43123 iterations and 416 nodes (10.56 seconds)
Cbc0032I Strong branching done 3254 times (77825 iterations), fathomed 88 nodes and fixed 279 variables
Cbc0035I Maximum depth 80, 1900 variables fixed on reduced cost
Total time (CPU seconds):       10.37   (Wallclock seconds):       10.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 357 (-169) rows, 374 (-150) columns and 16391 (-19345) elements
Clp1000I sum of infeasibilities 5.80915e-06 - average 1.62721e-08, 156 fixed columns
Coin0506I Presolve 203 (-154) rows, 218 (-156) columns and 819 (-15572) elements
Clp0006I 0  Obj 37.803571 Primal inf 9.1277764e-06 (1) Dual inf 1.0100001e+11 (213)
Clp0029I End of values pass after 149 iterations
Clp0014I Perturbing problem by 0.001% of 0.139855 - largest nonzero change 2.0671057e-05 ( 0.001879187%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 42.255618
Clp0000I Optimal - objective value 42.255618
Coin0511I After Postsolve, objective 42.255618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 42.255618 Dual inf 182.62762 (114)
Clp0014I Perturbing problem by 0.001% of 1.6461726 - largest nonzero change 2.8055528e-05 ( 0.0025543869%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 215.70116
Clp0000I Optimal - objective value 215.70116
Clp0000I Optimal - objective value 215.70116
Coin0511I After Postsolve, objective 215.70116, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215.7011632 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0004I processed model has 357 rows, 374 columns (374 integer (374 of which binary)) and 16391 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.681%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 109 integers unsatisfied sum - 7.15324
Cbc0038I Pass   1: suminf.    4.87429 (93) obj. -177.729 iterations 52
Cbc0038I Pass   2: suminf.    4.87429 (93) obj. -177.729 iterations 1
Cbc0038I Pass   3: suminf.    3.32628 (67) obj. -139.149 iterations 26
Cbc0038I Pass   4: suminf.    2.23186 (47) obj. -113.623 iterations 20
Cbc0038I Pass   5: suminf.    1.29257 (29) obj. -85.1821 iterations 18
Cbc0038I Pass   6: suminf.    0.46477 (12) obj. -53.8135 iterations 17
Cbc0038I Solution found of -42.2783
Cbc0038I Rounding solution of -63.05 is better than previous of -42.2783

Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 374 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -78.3152
Cbc0038I Pass   7: suminf.    4.87429 (93) obj. -177.729 iterations 0
Cbc0038I Pass   8: suminf.    4.87429 (93) obj. -177.729 iterations 1
Cbc0038I Pass   9: suminf.    3.38236 (68) obj. -140.093 iterations 25
Cbc0038I Pass  10: suminf.    2.71814 (56) obj. -127.812 iterations 12
Cbc0038I Pass  11: suminf.    1.54775 (34) obj. -97.5179 iterations 22
Cbc0038I Pass  12: suminf.    1.14032 (21) obj. -78.3152 iterations 37
Cbc0038I Pass  13: suminf.    1.12763 (21) obj. -78.3152 iterations 11
Cbc0038I Pass  14: suminf.    1.48939 (23) obj. -78.3152 iterations 23
Cbc0038I Pass  15: suminf.    1.05074 (12) obj. -78.3152 iterations 8
Cbc0038I Pass  16: suminf.    0.72375 (11) obj. -81.7552 iterations 6
Cbc0038I Pass  17: suminf.    1.21958 (15) obj. -78.3152 iterations 24
Cbc0038I Pass  18: suminf.    1.21958 (15) obj. -78.3152 iterations 6
Cbc0038I Pass  19: suminf.    0.30378 (3) obj. -78.3152 iterations 23
Cbc0038I Pass  20: suminf.    0.30378 (3) obj. -78.3152 iterations 0
Cbc0038I Pass  21: suminf.    0.63859 (3) obj. -78.3152 iterations 10
Cbc0038I Pass  22: suminf.    2.39432 (22) obj. -78.3152 iterations 62
Cbc0038I Pass  23: suminf.    1.91123 (20) obj. -78.3152 iterations 15
Cbc0038I Pass  24: suminf.    1.17861 (6) obj. -78.3152 iterations 36
Cbc0038I Pass  25: suminf.    0.75247 (5) obj. -78.3152 iterations 6
Cbc0038I Pass  26: suminf.    0.54767 (4) obj. -78.3152 iterations 8
Cbc0038I Pass  27: suminf.    0.33734 (4) obj. -78.3152 iterations 7
Cbc0038I Pass  28: suminf.    0.59443 (4) obj. -78.3152 iterations 7
Cbc0038I Pass  29: suminf.    0.58805 (3) obj. -78.3152 iterations 3
Cbc0038I Pass  30: suminf.    0.37401 (4) obj. -78.3152 iterations 11
Cbc0038I Pass  31: suminf.    1.54261 (24) obj. -78.3152 iterations 69
Cbc0038I Pass  32: suminf.    1.45589 (21) obj. -79.0509 iterations 19
Cbc0038I Pass  33: suminf.    0.46618 (6) obj. -78.3152 iterations 31
Cbc0038I Pass  34: suminf.    0.45197 (6) obj. -78.3152 iterations 5
Cbc0038I Pass  35: suminf.    0.68586 (5) obj. -78.3152 iterations 27
Cbc0038I Pass  36: suminf.    0.33481 (5) obj. -78.3152 iterations 10
Cbc0038I Rounding solution of -63.7381 is better than previous of -63.05

Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 374 columns, reduced to 118 rows 129 columns - 29 fixed gives 88, 99 - ok now
Cbc0038I Full problem 357 rows 374 columns, reduced to 26 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -63.7381 to -68.2272 (0.22 seconds)
Cbc0038I Round again with cutoff of -105.792
Cbc0038I Pass  36: suminf.    4.87429 (93) obj. -177.729 iterations 0
Cbc0038I Pass  37: suminf.    4.87429 (93) obj. -177.729 iterations 1
Cbc0038I Pass  38: suminf.    3.60805 (72) obj. -143.867 iterations 21
Cbc0038I Pass  39: suminf.    2.66375 (55) obj. -125.921 iterations 17
Cbc0038I Pass  40: suminf.    1.91669 (40) obj. -105.792 iterations 18
Cbc0038I Pass  41: suminf.    2.29996 (30) obj. -105.792 iterations 49
Cbc0038I Pass  42: suminf.    2.07036 (29) obj. -105.792 iterations 3
Cbc0038I Pass  43: suminf.    1.27144 (15) obj. -105.792 iterations 52
Cbc0038I Pass  44: suminf.    0.92459 (15) obj. -105.792 iterations 9
Cbc0038I Pass  45: suminf.    1.11926 (8) obj. -105.792 iterations 55
Cbc0038I Pass  46: suminf.    1.11926 (8) obj. -105.792 iterations 18
Cbc0038I Pass  47: suminf.    1.11645 (8) obj. -105.792 iterations 29
Cbc0038I Pass  48: suminf.    1.11645 (8) obj. -105.792 iterations 18
Cbc0038I Pass  49: suminf.    1.11926 (8) obj. -105.792 iterations 33
Cbc0038I Pass  50: suminf.    2.43790 (27) obj. -105.792 iterations 68
Cbc0038I Pass  51: suminf.    1.92022 (25) obj. -110.342 iterations 13
Cbc0038I Pass  52: suminf.    1.58495 (13) obj. -105.792 iterations 55
Cbc0038I Pass  53: suminf.    1.41928 (14) obj. -105.792 iterations 14
Cbc0038I Pass  54: suminf.    1.27025 (13) obj. -105.792 iterations 28
Cbc0038I Pass  55: suminf.    1.27025 (13) obj. -105.792 iterations 13
Cbc0038I Pass  56: suminf.    1.08928 (11) obj. -105.792 iterations 19
Cbc0038I Pass  57: suminf.    0.91739 (14) obj. -105.792 iterations 15
Cbc0038I Pass  58: suminf.    1.08928 (11) obj. -105.792 iterations 22
Cbc0038I Pass  59: suminf.    2.57734 (26) obj. -105.792 iterations 77
Cbc0038I Pass  60: suminf.    2.16970 (23) obj. -105.792 iterations 13
Cbc0038I Pass  61: suminf.    1.54285 (22) obj. -105.792 iterations 10
Cbc0038I Pass  62: suminf.    1.74447 (18) obj. -105.792 iterations 35
Cbc0038I Pass  63: suminf.    1.43210 (19) obj. -105.792 iterations 10
Cbc0038I Pass  64: suminf.    1.84242 (12) obj. -105.792 iterations 36
Cbc0038I Pass  65: suminf.    1.26722 (12) obj. -105.792 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 374 columns, reduced to 33 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -68.2272 - took 0.21 seconds
Cbc0012I Integer solution of -68.2272 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -70.2272 found by RINS after 0 iterations and 0 nodes (0.36 seconds)
Cbc0031I 151 added rows had average density of 94.218543
Cbc0013I At root node, 151 cuts changed objective from -215.70116 to -127.35561 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32006 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.485 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3226 row cuts average 353.1 elements, 0 column cuts (0 active)  in 1.197 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 329 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5539 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.749 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2055 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.854 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 217.6 elements, 0 column cuts (0 active)  in 0.240 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 350 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.760 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -70.2272 best solution, best possible -127.35561 (9.55 seconds)
Cbc0010I After 2 nodes, 1 on tree, -70.2272 best solution, best possible -125.09226 (10.35 seconds)
Cbc0010I After 4 nodes, 3 on tree, -70.2272 best solution, best possible -125.09226 (11.24 seconds)
Cbc0012I Integer solution of -76.91971 found by DiveCoefficient after 17585 iterations and 6 nodes (11.51 seconds)
Cbc0012I Integer solution of -81.87735 found by DiveCoefficient after 17866 iterations and 6 nodes (11.61 seconds)
Cbc0012I Integer solution of -97.58353 found by rounding after 18161 iterations and 11 nodes (11.78 seconds)
Cbc0012I Integer solution of -98.70163 found by DiveCoefficient after 18197 iterations and 11 nodes (11.80 seconds)
Cbc0012I Integer solution of -98.78335 found by DiveCoefficient after 18244 iterations and 13 nodes (11.84 seconds)
Cbc0012I Integer solution of -101.23053 found by rounding after 18380 iterations and 15 nodes (11.91 seconds)
Cbc0012I Integer solution of -102.34863 found by rounding after 18440 iterations and 19 nodes (11.94 seconds)
Cbc0010I After 19 nodes, 9 on tree, -102.34863 best solution, best possible -125.09226 (11.94 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 14 rows 20 columns
Cbc0012I Integer solution of -104.9194 found by rounding after 19798 iterations and 72 nodes (12.63 seconds)
Cbc0010I After 74 nodes, 12 on tree, -104.9194 best solution, best possible -125.09226 (12.65 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 86 rows 97 columns
Cbc0010I After 92 nodes, 5 on tree, -104.9194 best solution, best possible -125.09226 (13.56 seconds)
Cbc0010I After 96 nodes, 7 on tree, -104.9194 best solution, best possible -125.09226 (14.41 seconds)
Cbc0010I After 107 nodes, 10 on tree, -104.9194 best solution, best possible -125.09226 (15.14 seconds)
Cbc0010I After 134 nodes, 12 on tree, -104.9194 best solution, best possible -125.09226 (15.98 seconds)
Cbc0010I After 185 nodes, 12 on tree, -104.9194 best solution, best possible -125.09226 (16.83 seconds)
Cbc0010I After 219 nodes, 2 on tree, -104.9194 best solution, best possible -125.09226 (17.59 seconds)
Cbc0010I After 221 nodes, 4 on tree, -104.9194 best solution, best possible -125.09226 (18.56 seconds)
Cbc0010I After 224 nodes, 6 on tree, -104.9194 best solution, best possible -125.09226 (19.56 seconds)
Cbc0010I After 231 nodes, 8 on tree, -104.9194 best solution, best possible -125.09226 (20.29 seconds)
Cbc0010I After 258 nodes, 8 on tree, -104.9194 best solution, best possible -125.09226 (21.01 seconds)
Cbc0010I After 289 nodes, 9 on tree, -104.9194 best solution, best possible -125.09226 (21.75 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 136 rows 161 columns
Cbc0010I After 305 nodes, 10 on tree, -104.9194 best solution, best possible -125.09226 (22.47 seconds)
Cbc0001I Search completed - best objective -104.9194, took 44722 iterations and 332 nodes (22.83 seconds)
Cbc0032I Strong branching done 2602 times (53798 iterations), fathomed 15 nodes and fixed 37 variables
Cbc0035I Maximum depth 21, 2278 variables fixed on reduced cost
Total time (CPU seconds):       22.33   (Wallclock seconds):       22.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 9.71972e-05 - average 1.9247e-07, 99 fixed columns
Coin0506I Presolve 302 (-203) rows, 160 (-102) columns and 900 (-602) elements
Clp0029I End of values pass after 160 iterations
Clp0014I Perturbing problem by 0.001% of 0.15751615 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Coin0511I After Postsolve, objective 167.44005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13520951 - largest nonzero change 0 ( 0%) - largest zero change 2.9776396e-05
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Clp0000I Optimal - objective value 167.44005
Coin0511I After Postsolve, objective 167.44005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.4400477 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 90 integers unsatisfied sum - 11.6219
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.6741 iterations 249
Cbc0038I Solution found of -13.6741
Cbc0038I Relaxing continuous gives -13.6741
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 168 rows 91 columns
Cbc0038I Mini branch and bound improved solution from -13.6741 to -89.2106 (0.08 seconds)
Cbc0038I Round again with cutoff of -97.0337
Cbc0038I Pass   2: suminf.    4.09937 (30) obj. -97.0337 iterations 85
Cbc0038I Pass   3: suminf.    2.90814 (10) obj. -97.0337 iterations 68
Cbc0038I Pass   4: suminf.    2.01885 (8) obj. -97.0337 iterations 29
Cbc0038I Pass   5: suminf.    1.81000 (8) obj. -97.0337 iterations 7
Cbc0038I Pass   6: suminf.    2.44565 (9) obj. -97.0337 iterations 29
Cbc0038I Pass   7: suminf.    2.26448 (9) obj. -97.0337 iterations 16
Cbc0038I Pass   8: suminf.    2.17986 (8) obj. -97.0337 iterations 14
Cbc0038I Pass   9: suminf.    1.91784 (7) obj. -97.0337 iterations 23
Cbc0038I Pass  10: suminf.    3.19124 (9) obj. -97.0337 iterations 33
Cbc0038I Pass  11: suminf.    2.31226 (9) obj. -97.0337 iterations 9
Cbc0038I Pass  12: suminf.    2.18390 (10) obj. -97.0337 iterations 20
Cbc0038I Pass  13: suminf.    2.20421 (8) obj. -97.0337 iterations 33
Cbc0038I Pass  14: suminf.    2.20421 (8) obj. -97.0337 iterations 2
Cbc0038I Pass  15: suminf.    3.08430 (8) obj. -97.0337 iterations 22
Cbc0038I Pass  16: suminf.    1.77488 (7) obj. -97.0337 iterations 12
Cbc0038I Pass  17: suminf.    1.64452 (7) obj. -97.0337 iterations 15
Cbc0038I Pass  18: suminf.    2.29183 (9) obj. -97.0337 iterations 28
Cbc0038I Pass  19: suminf.    2.29323 (8) obj. -97.0337 iterations 5
Cbc0038I Pass  20: suminf.    2.54071 (9) obj. -97.0337 iterations 40
Cbc0038I Pass  21: suminf.    2.18308 (8) obj. -97.0337 iterations 18
Cbc0038I Pass  22: suminf.    2.18308 (8) obj. -97.0337 iterations 1
Cbc0038I Pass  23: suminf.    3.04181 (8) obj. -97.0337 iterations 25
Cbc0038I Pass  24: suminf.    1.77488 (7) obj. -97.0337 iterations 11
Cbc0038I Pass  25: suminf.    1.64452 (7) obj. -97.0337 iterations 15
Cbc0038I Pass  26: suminf.    2.29183 (9) obj. -97.0337 iterations 28
Cbc0038I Pass  27: suminf.    2.29323 (8) obj. -97.0337 iterations 5
Cbc0038I Pass  28: suminf.    2.54071 (9) obj. -97.0337 iterations 40
Cbc0038I Pass  29: suminf.    2.18308 (8) obj. -97.0337 iterations 18
Cbc0038I Pass  30: suminf.    2.18308 (8) obj. -97.0337 iterations 1
Cbc0038I Pass  31: suminf.    3.04181 (8) obj. -97.0337 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 197 rows 106 columns
Cbc0038I Mini branch and bound improved solution from -89.2106 to -89.9609 (0.18 seconds)
Cbc0038I Round again with cutoff of -111.115
Cbc0038I Pass  31: suminf.    4.86937 (46) obj. -111.115 iterations 6
Cbc0038I Pass  32: suminf.    4.59454 (11) obj. -111.115 iterations 66
Cbc0038I Pass  33: suminf.    3.05358 (10) obj. -111.115 iterations 42
Cbc0038I Pass  34: suminf.    3.05358 (10) obj. -111.115 iterations 3
Cbc0038I Pass  35: suminf.    3.34901 (9) obj. -111.115 iterations 26
Cbc0038I Pass  36: suminf.    3.04148 (9) obj. -111.115 iterations 16
Cbc0038I Pass  37: suminf.    3.62766 (10) obj. -111.115 iterations 25
Cbc0038I Pass  38: suminf.    2.82434 (10) obj. -111.115 iterations 23
Cbc0038I Pass  39: suminf.    2.50010 (9) obj. -111.115 iterations 20
Cbc0038I Pass  40: suminf.    3.43423 (10) obj. -111.115 iterations 35
Cbc0038I Pass  41: suminf.    1.93720 (7) obj. -111.115 iterations 17
Cbc0038I Pass  42: suminf.    1.90548 (8) obj. -111.115 iterations 17
Cbc0038I Pass  43: suminf.    2.89552 (8) obj. -111.115 iterations 23
Cbc0038I Pass  44: suminf.    2.09467 (8) obj. -111.115 iterations 20
Cbc0038I Pass  45: suminf.    5.85618 (16) obj. -111.115 iterations 48
Cbc0038I Pass  46: suminf.    2.95410 (11) obj. -111.115 iterations 25
Cbc0038I Pass  47: suminf.    2.60073 (8) obj. -111.115 iterations 67
Cbc0038I Pass  48: suminf.    2.03518 (9) obj. -111.115 iterations 31
Cbc0038I Pass  49: suminf.    2.02643 (8) obj. -111.115 iterations 6
Cbc0038I Pass  50: suminf.    2.64973 (8) obj. -111.115 iterations 28
Cbc0038I Pass  51: suminf.    2.14280 (7) obj. -111.115 iterations 11
Cbc0038I Pass  52: suminf.    1.99596 (7) obj. -111.115 iterations 19
Cbc0038I Pass  53: suminf.    2.75322 (9) obj. -111.115 iterations 25
Cbc0038I Pass  54: suminf.    2.51116 (7) obj. -111.115 iterations 10
Cbc0038I Pass  55: suminf.    2.28955 (8) obj. -111.115 iterations 22
Cbc0038I Pass  56: suminf.    3.30905 (12) obj. -111.115 iterations 30
Cbc0038I Pass  57: suminf.    2.96934 (10) obj. -111.115 iterations 19
Cbc0038I Pass  58: suminf.    3.70983 (14) obj. -111.115 iterations 39
Cbc0038I Pass  59: suminf.    3.22032 (14) obj. -111.115 iterations 17
Cbc0038I Pass  60: suminf.    3.08275 (12) obj. -111.115 iterations 33
Cbc0038I Rounding solution of -92.8869 is better than previous of -89.9609

Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 224 rows 120 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I Round again with cutoff of -128.012
Cbc0038I Pass  60: suminf.    5.80491 (47) obj. -128.012 iterations 2
Cbc0038I Pass  61: suminf.    5.05069 (14) obj. -128.012 iterations 76
Cbc0038I Pass  62: suminf.    4.48725 (19) obj. -128.012 iterations 21
Cbc0038I Pass  63: suminf.    4.55866 (14) obj. -128.012 iterations 41
Cbc0038I Pass  64: suminf.    4.46199 (14) obj. -128.012 iterations 19
Cbc0038I Pass  65: suminf.    5.87100 (15) obj. -128.012 iterations 43
Cbc0038I Pass  66: suminf.    5.14202 (14) obj. -128.012 iterations 21
Cbc0038I Pass  67: suminf.    4.41024 (14) obj. -128.012 iterations 46
Cbc0038I Pass  68: suminf.    3.71759 (13) obj. -128.012 iterations 16
Cbc0038I Pass  69: suminf.    3.60158 (13) obj. -128.012 iterations 5
Cbc0038I Pass  70: suminf.    5.89714 (15) obj. -128.012 iterations 62
Cbc0038I Pass  71: suminf.    4.77260 (15) obj. -128.012 iterations 36
Cbc0038I Pass  72: suminf.    4.78547 (15) obj. -128.012 iterations 40
Cbc0038I Pass  73: suminf.    4.14823 (14) obj. -128.012 iterations 25
Cbc0038I Pass  74: suminf.    4.15227 (13) obj. -128.012 iterations 9
Cbc0038I Pass  75: suminf.    6.14434 (17) obj. -128.012 iterations 47
Cbc0038I Pass  76: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  77: suminf.    4.55469 (14) obj. -128.012 iterations 28
Cbc0038I Pass  78: suminf.    4.53825 (14) obj. -128.012 iterations 2
Cbc0038I Pass  79: suminf.    4.28121 (13) obj. -128.012 iterations 41
Cbc0038I Pass  80: suminf.    4.15227 (13) obj. -128.012 iterations 14
Cbc0038I Pass  81: suminf.    6.14434 (17) obj. -128.012 iterations 51
Cbc0038I Pass  82: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  83: suminf.    4.55469 (14) obj. -128.012 iterations 28
Cbc0038I Pass  84: suminf.    4.53825 (14) obj. -128.012 iterations 2
Cbc0038I Pass  85: suminf.    4.28121 (13) obj. -128.012 iterations 41
Cbc0038I Pass  86: suminf.    4.15227 (13) obj. -128.012 iterations 14
Cbc0038I Pass  87: suminf.    6.14434 (17) obj. -128.012 iterations 49
Cbc0038I Pass  88: suminf.    4.82514 (15) obj. -128.012 iterations 25
Cbc0038I Pass  89: suminf.    4.55469 (14) obj. -128.012 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 219 rows 118 columns
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I After 0.44 seconds - Feasibility pump exiting with objective of -92.8869 - took 0.41 seconds
Cbc0012I Integer solution of -92.88693 found by feasibility pump after 0 iterations and 0 nodes (0.44 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 175 rows 95 columns
Cbc0031I 45 added rows had average density of 166.24444
Cbc0013I At root node, 45 cuts changed objective from -167.44005 to -153.53092 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 53103 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.560 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3736 row cuts average 257.1 elements, 0 column cuts (0 active)  in 0.641 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.840 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.88693 best solution, best possible -153.53092 (7.55 seconds)
Cbc0010I After 9 nodes, 10 on tree, -92.88693 best solution, best possible -153.53092 (8.29 seconds)
Cbc0012I Integer solution of -93.79987 found by rounding after 24652 iterations and 13 nodes (8.41 seconds)
Cbc0012I Integer solution of -97.13281 found by rounding after 24792 iterations and 16 nodes (8.44 seconds)
Cbc0012I Integer solution of -99.39846 found by rounding after 27668 iterations and 43 nodes (8.80 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 35 rows 26 columns
Cbc0012I Integer solution of -101.27688 found by RINS after 27668 iterations and 43 nodes (8.81 seconds)
Cbc0010I After 56 nodes, 14 on tree, -101.27688 best solution, best possible -153.53092 (9.00 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 168 rows 89 columns
Cbc0012I Integer solution of -102.34863 found by rounding after 32622 iterations and 123 nodes (9.64 seconds)
Cbc0010I After 143 nodes, 26 on tree, -102.34863 best solution, best possible -153.53092 (9.70 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 10 rows 9 columns
Cbc0010I After 340 nodes, 22 on tree, -102.34863 best solution, best possible -153.53092 (10.40 seconds)
Cbc0012I Integer solution of -102.71606 found by rounding after 40387 iterations and 345 nodes (10.41 seconds)
Cbc0012I Integer solution of -104.9194 found by rounding after 41636 iterations and 400 nodes (10.54 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -104.9194, took 43123 iterations and 416 nodes (10.62 seconds)
Cbc0032I Strong branching done 3254 times (77825 iterations), fathomed 88 nodes and fixed 279 variables
Cbc0035I Maximum depth 80, 1900 variables fixed on reduced cost
Total time (CPU seconds):       10.43   (Wallclock seconds):       10.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 357 (-170) rows, 374 (-151) columns and 16391 (-19346) elements
Clp1000I sum of infeasibilities 5.80915e-06 - average 1.62721e-08, 156 fixed columns
Coin0506I Presolve 203 (-154) rows, 218 (-156) columns and 819 (-15572) elements
Clp0006I 0  Obj 37.803571 Primal inf 9.1277764e-06 (1) Dual inf 1.0100001e+11 (213)
Clp0029I End of values pass after 149 iterations
Clp0014I Perturbing problem by 0.001% of 0.139855 - largest nonzero change 2.0671057e-05 ( 0.001879187%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 42.255618
Clp0000I Optimal - objective value 42.255618
Coin0511I After Postsolve, objective 42.255618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 42.255618 Dual inf 182.62762 (114)
Clp0014I Perturbing problem by 0.001% of 1.6461726 - largest nonzero change 2.8055528e-05 ( 0.0025543869%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 215.70116
Clp0000I Optimal - objective value 215.70116
Clp0000I Optimal - objective value 215.70116
Coin0511I After Postsolve, objective 215.70116, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215.7011632 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 357 rows, 374 columns (374 integer (374 of which binary)) and 16391 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.681%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 109 integers unsatisfied sum - 7.15324
Cbc0038I Pass   1: suminf.    4.87429 (93) obj. -177.729 iterations 52
Cbc0038I Pass   2: suminf.    4.87429 (93) obj. -177.729 iterations 1
Cbc0038I Pass   3: suminf.    3.32628 (67) obj. -139.149 iterations 26
Cbc0038I Pass   4: suminf.    2.23186 (47) obj. -113.623 iterations 20
Cbc0038I Pass   5: suminf.    1.29257 (29) obj. -85.1821 iterations 18
Cbc0038I Pass   6: suminf.    0.46477 (12) obj. -53.8135 iterations 17
Cbc0038I Solution found of -42.2783
Cbc0038I Rounding solution of -63.05 is better than previous of -42.2783

Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 374 columns, reduced to 15 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -78.3152
Cbc0038I Pass   7: suminf.    4.87429 (93) obj. -177.729 iterations 0
Cbc0038I Pass   8: suminf.    4.87429 (93) obj. -177.729 iterations 1
Cbc0038I Pass   9: suminf.    3.38236 (68) obj. -140.093 iterations 25
Cbc0038I Pass  10: suminf.    2.71814 (56) obj. -127.812 iterations 12
Cbc0038I Pass  11: suminf.    1.54775 (34) obj. -97.5179 iterations 22
Cbc0038I Pass  12: suminf.    1.14032 (21) obj. -78.3152 iterations 37
Cbc0038I Pass  13: suminf.    1.12763 (21) obj. -78.3152 iterations 11
Cbc0038I Pass  14: suminf.    1.48939 (23) obj. -78.3152 iterations 23
Cbc0038I Pass  15: suminf.    1.05074 (12) obj. -78.3152 iterations 8
Cbc0038I Pass  16: suminf.    0.72375 (11) obj. -81.7552 iterations 6
Cbc0038I Pass  17: suminf.    1.21958 (15) obj. -78.3152 iterations 24
Cbc0038I Pass  18: suminf.    1.21958 (15) obj. -78.3152 iterations 6
Cbc0038I Pass  19: suminf.    0.30378 (3) obj. -78.3152 iterations 23
Cbc0038I Pass  20: suminf.    0.30378 (3) obj. -78.3152 iterations 0
Cbc0038I Pass  21: suminf.    0.63859 (3) obj. -78.3152 iterations 10
Cbc0038I Pass  22: suminf.    2.39432 (22) obj. -78.3152 iterations 62
Cbc0038I Pass  23: suminf.    1.91123 (20) obj. -78.3152 iterations 15
Cbc0038I Pass  24: suminf.    1.17861 (6) obj. -78.3152 iterations 36
Cbc0038I Pass  25: suminf.    0.75247 (5) obj. -78.3152 iterations 6
Cbc0038I Pass  26: suminf.    0.54767 (4) obj. -78.3152 iterations 8
Cbc0038I Pass  27: suminf.    0.33734 (4) obj. -78.3152 iterations 7
Cbc0038I Pass  28: suminf.    0.59443 (4) obj. -78.3152 iterations 7
Cbc0038I Pass  29: suminf.    0.58805 (3) obj. -78.3152 iterations 3
Cbc0038I Pass  30: suminf.    0.37401 (4) obj. -78.3152 iterations 11
Cbc0038I Pass  31: suminf.    1.54261 (24) obj. -78.3152 iterations 69
Cbc0038I Pass  32: suminf.    1.45589 (21) obj. -79.0509 iterations 19
Cbc0038I Pass  33: suminf.    0.46618 (6) obj. -78.3152 iterations 31
Cbc0038I Pass  34: suminf.    0.45197 (6) obj. -78.3152 iterations 5
Cbc0038I Pass  35: suminf.    0.68586 (5) obj. -78.3152 iterations 27
Cbc0038I Pass  36: suminf.    0.33481 (5) obj. -78.3152 iterations 10
Cbc0038I Rounding solution of -63.7381 is better than previous of -63.05

Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 374 columns, reduced to 118 rows 129 columns - 29 fixed gives 88, 99 - ok now
Cbc0038I Full problem 357 rows 374 columns, reduced to 26 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -63.7381 to -68.2272 (0.22 seconds)
Cbc0038I Round again with cutoff of -105.792
Cbc0038I Pass  36: suminf.    4.87429 (93) obj. -177.729 iterations 0
Cbc0038I Pass  37: suminf.    4.87429 (93) obj. -177.729 iterations 1
Cbc0038I Pass  38: suminf.    3.60805 (72) obj. -143.867 iterations 21
Cbc0038I Pass  39: suminf.    2.66375 (55) obj. -125.921 iterations 17
Cbc0038I Pass  40: suminf.    1.91669 (40) obj. -105.792 iterations 18
Cbc0038I Pass  41: suminf.    2.29996 (30) obj. -105.792 iterations 49
Cbc0038I Pass  42: suminf.    2.07036 (29) obj. -105.792 iterations 3
Cbc0038I Pass  43: suminf.    1.27144 (15) obj. -105.792 iterations 52
Cbc0038I Pass  44: suminf.    0.92459 (15) obj. -105.792 iterations 9
Cbc0038I Pass  45: suminf.    1.11926 (8) obj. -105.792 iterations 55
Cbc0038I Pass  46: suminf.    1.11926 (8) obj. -105.792 iterations 18
Cbc0038I Pass  47: suminf.    1.11645 (8) obj. -105.792 iterations 29
Cbc0038I Pass  48: suminf.    1.11645 (8) obj. -105.792 iterations 18
Cbc0038I Pass  49: suminf.    1.11926 (8) obj. -105.792 iterations 33
Cbc0038I Pass  50: suminf.    2.43790 (27) obj. -105.792 iterations 68
Cbc0038I Pass  51: suminf.    1.92022 (25) obj. -110.342 iterations 13
Cbc0038I Pass  52: suminf.    1.58495 (13) obj. -105.792 iterations 55
Cbc0038I Pass  53: suminf.    1.41928 (14) obj. -105.792 iterations 14
Cbc0038I Pass  54: suminf.    1.27025 (13) obj. -105.792 iterations 28
Cbc0038I Pass  55: suminf.    1.27025 (13) obj. -105.792 iterations 13
Cbc0038I Pass  56: suminf.    1.08928 (11) obj. -105.792 iterations 19
Cbc0038I Pass  57: suminf.    0.91739 (14) obj. -105.792 iterations 15
Cbc0038I Pass  58: suminf.    1.08928 (11) obj. -105.792 iterations 22
Cbc0038I Pass  59: suminf.    2.57734 (26) obj. -105.792 iterations 77
Cbc0038I Pass  60: suminf.    2.16970 (23) obj. -105.792 iterations 13
Cbc0038I Pass  61: suminf.    1.54285 (22) obj. -105.792 iterations 10
Cbc0038I Pass  62: suminf.    1.74447 (18) obj. -105.792 iterations 35
Cbc0038I Pass  63: suminf.    1.43210 (19) obj. -105.792 iterations 10
Cbc0038I Pass  64: suminf.    1.84242 (12) obj. -105.792 iterations 36
Cbc0038I Pass  65: suminf.    1.26722 (12) obj. -105.792 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 374 columns, reduced to 33 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -68.2272 - took 0.22 seconds
Cbc0012I Integer solution of -68.2272 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -70.2272 found by RINS after 0 iterations and 0 nodes (0.38 seconds)
Cbc0031I 151 added rows had average density of 94.218543
Cbc0013I At root node, 151 cuts changed objective from -215.70116 to -127.35561 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 32006 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.482 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3226 row cuts average 353.1 elements, 0 column cuts (0 active)  in 1.201 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 329 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5539 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.748 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2055 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.858 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 217.6 elements, 0 column cuts (0 active)  in 0.238 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 350 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.766 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -70.2272 best solution, best possible -127.35561 (9.58 seconds)
Cbc0010I After 2 nodes, 1 on tree, -70.2272 best solution, best possible -125.09226 (10.33 seconds)
Cbc0010I After 4 nodes, 3 on tree, -70.2272 best solution, best possible -125.09226 (11.22 seconds)
Cbc0012I Integer solution of -76.91971 found by DiveCoefficient after 17585 iterations and 6 nodes (11.48 seconds)
Cbc0012I Integer solution of -81.87735 found by DiveCoefficient after 17866 iterations and 6 nodes (11.58 seconds)
Cbc0012I Integer solution of -97.58353 found by rounding after 18161 iterations and 11 nodes (11.74 seconds)
Cbc0012I Integer solution of -98.70163 found by DiveCoefficient after 18197 iterations and 11 nodes (11.76 seconds)
Cbc0012I Integer solution of -98.78335 found by DiveCoefficient after 18244 iterations and 13 nodes (11.80 seconds)
Cbc0012I Integer solution of -101.23053 found by rounding after 18380 iterations and 15 nodes (11.86 seconds)
Cbc0012I Integer solution of -102.34863 found by rounding after 18440 iterations and 19 nodes (11.89 seconds)
Cbc0010I After 22 nodes, 8 on tree, -102.34863 best solution, best possible -125.09226 (11.93 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 14 rows 20 columns
Cbc0012I Integer solution of -104.9194 found by rounding after 19798 iterations and 72 nodes (12.56 seconds)
Cbc0010I After 88 nodes, 6 on tree, -104.9194 best solution, best possible -125.09226 (12.63 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 86 rows 97 columns
Cbc0010I After 92 nodes, 5 on tree, -104.9194 best solution, best possible -125.09226 (13.50 seconds)
Cbc0010I After 96 nodes, 7 on tree, -104.9194 best solution, best possible -125.09226 (14.35 seconds)
Cbc0010I After 107 nodes, 10 on tree, -104.9194 best solution, best possible -125.09226 (15.07 seconds)
Cbc0010I After 134 nodes, 12 on tree, -104.9194 best solution, best possible -125.09226 (15.92 seconds)
Cbc0010I After 185 nodes, 12 on tree, -104.9194 best solution, best possible -125.09226 (16.75 seconds)
Cbc0010I After 219 nodes, 2 on tree, -104.9194 best solution, best possible -125.09226 (17.52 seconds)
Cbc0010I After 221 nodes, 4 on tree, -104.9194 best solution, best possible -125.09226 (18.48 seconds)
Cbc0010I After 224 nodes, 6 on tree, -104.9194 best solution, best possible -125.09226 (19.49 seconds)
Cbc0010I After 231 nodes, 8 on tree, -104.9194 best solution, best possible -125.09226 (20.23 seconds)
Cbc0010I After 258 nodes, 8 on tree, -104.9194 best solution, best possible -125.09226 (20.94 seconds)
Cbc0010I After 289 nodes, 9 on tree, -104.9194 best solution, best possible -125.09226 (21.66 seconds)
Cbc0038I Full problem 357 rows 374 columns, reduced to 136 rows 161 columns
Cbc0010I After 305 nodes, 10 on tree, -104.9194 best solution, best possible -125.09226 (22.36 seconds)
Cbc0001I Search completed - best objective -104.9194, took 44722 iterations and 332 nodes (22.74 seconds)
Cbc0032I Strong branching done 2602 times (53798 iterations), fathomed 15 nodes and fixed 37 variables
Cbc0035I Maximum depth 21, 2278 variables fixed on reduced cost
Total time (CPU seconds):       22.24   (Wallclock seconds):       22.84

