Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 68 (-10) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 2.92455e-05 - average 2.41698e-07, 14 fixed columns
Coin0506I Presolve 95 (-26) rows, 54 (-14) columns and 290 (-80) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 41.756769
Clp0000I Optimal - objective value 41.756769
Coin0511I After Postsolve, objective 41.756769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.756769
Clp0000I Optimal - objective value 41.756769
Clp0000I Optimal - objective value 41.756769
Coin0511I After Postsolve, objective 41.756769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.75676861 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 68 columns (67 integer (67 of which binary)) and 429 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.555%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.43005
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.20903 iterations 26
Cbc0038I Solution found of 3.20903
Cbc0038I Relaxing continuous gives 3.20903
Cbc0038I Rounding solution of -7.85099 is better than previous of 3.20903

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -7.85099 to -18.7926 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.0277
Cbc0038I Pass   2: suminf.    1.62542 (5) obj. -21.0277 iterations 12
Cbc0038I Pass   3: suminf.    1.20010 (4) obj. -21.0277 iterations 1
Cbc0038I Pass   4: suminf.    1.20010 (4) obj. -21.0277 iterations 0
Cbc0038I Pass   5: suminf.    0.64080 (2) obj. -21.0277 iterations 8
Cbc0038I Pass   6: suminf.    0.16245 (2) obj. -21.0277 iterations 2
Cbc0038I Pass   7: suminf.    0.78890 (2) obj. -21.0277 iterations 3
Cbc0038I Pass   8: suminf.    0.30003 (1) obj. -21.0277 iterations 1
Cbc0038I Pass   9: suminf.    1.10061 (10) obj. -21.0277 iterations 12
Cbc0038I Pass  10: suminf.    0.30103 (1) obj. -21.0277 iterations 8
Cbc0038I Pass  11: suminf.    0.18150 (2) obj. -21.0277 iterations 3
Cbc0038I Pass  12: suminf.    1.01915 (4) obj. -21.0277 iterations 5
Cbc0038I Pass  13: suminf.    2.64988 (7) obj. -21.0277 iterations 15
Cbc0038I Pass  14: suminf.    1.35053 (4) obj. -21.0277 iterations 18
Cbc0038I Pass  15: suminf.    1.12241 (3) obj. -21.0277 iterations 1
Cbc0038I Pass  16: suminf.    0.64080 (2) obj. -21.0277 iterations 4
Cbc0038I Pass  17: suminf.    0.16245 (2) obj. -21.0277 iterations 2
Cbc0038I Pass  18: suminf.    0.78890 (2) obj. -21.0277 iterations 3
Cbc0038I Pass  19: suminf.    0.30003 (1) obj. -21.0277 iterations 1
Cbc0038I Pass  20: suminf.    4.50451 (12) obj. -21.0277 iterations 18
Cbc0038I Pass  21: suminf.    1.69605 (5) obj. -21.0277 iterations 16
Cbc0038I Pass  22: suminf.    1.46778 (6) obj. -21.0277 iterations 2
Cbc0038I Pass  23: suminf.    1.44144 (5) obj. -21.0277 iterations 4
Cbc0038I Pass  24: suminf.    1.30971 (5) obj. -21.0277 iterations 7
Cbc0038I Pass  25: suminf.    1.20010 (4) obj. -21.0277 iterations 1
Cbc0038I Pass  26: suminf.    0.64080 (2) obj. -21.0277 iterations 6
Cbc0038I Pass  27: suminf.    0.16245 (2) obj. -21.0277 iterations 1
Cbc0038I Pass  28: suminf.    0.78890 (2) obj. -21.0277 iterations 2
Cbc0038I Pass  29: suminf.    0.30003 (1) obj. -21.0277 iterations 1
Cbc0038I Pass  30: suminf.    4.38314 (16) obj. -21.0277 iterations 29
Cbc0038I Pass  31: suminf.    1.62542 (5) obj. -21.0277 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 75 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -18.7926 - took 0.03 seconds
Cbc0012I Integer solution of -18.792637 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 117 rows 68 columns, reduced to 35 rows 22 columns
Cbc0031I 13 added rows had average density of 43.769231
Cbc0013I At root node, 13 cuts changed objective from -41.142107 to -30.548466 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3399 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 905 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -18.7926373, took 3946 iterations and 16 nodes (0.41 seconds)
Cbc0032I Strong branching done 302 times (4823 iterations), fathomed 1 nodes and fixed 15 variables
Cbc0035I Maximum depth 7, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.40   (Wallclock seconds):       0.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 115 (-37) columns and 1820 (-1483) elements
Clp1000I sum of infeasibilities 5.08477e-08 - average 4.98507e-10, 51 fixed columns
Coin0506I Presolve 58 (-44) rows, 63 (-52) columns and 527 (-1293) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 8.8621075 - largest nonzero change 0 ( 0%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 148.15548
Clp0000I Optimal - objective value 148.15548
Coin0511I After Postsolve, objective 148.15548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 148.15548
Clp0000I Optimal - objective value 148.15548
Clp0000I Optimal - objective value 148.15548
Coin0511I After Postsolve, objective 148.15548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.1554768 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 94 rows, 112 columns (112 integer (112 of which binary)) and 1757 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.714%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 12.1515
Cbc0038I Pass   1: suminf.    1.41700 (27) obj. -30.5588 iterations 16
Cbc0038I Pass   2: suminf.    1.41700 (27) obj. -30.5588 iterations 0
Cbc0038I Pass   3: suminf.    0.21810 (6) obj. 2.44945 iterations 21
Cbc0038I Solution found of 11.1234
Cbc0038I Rounding solution of 9.24047 is better than previous of 11.1234

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 21 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 1.7649
Cbc0038I Pass   4: suminf.    1.41700 (27) obj. -30.5588 iterations 0
Cbc0038I Pass   5: suminf.    1.41700 (27) obj. -30.5588 iterations 0
Cbc0038I Pass   6: suminf.    0.63855 (4) obj. 1.7649 iterations 39
Cbc0038I Pass   7: suminf.    1.00582 (4) obj. 1.7649 iterations 6
Cbc0038I Pass   8: suminf.    1.00582 (4) obj. 1.7649 iterations 3
Cbc0038I Pass   9: suminf.    0.52381 (4) obj. -19.5988 iterations 7
Cbc0038I Pass  10: suminf.    0.52381 (4) obj. -19.5988 iterations 0
Cbc0038I Pass  11: suminf.    1.93938 (4) obj. 1.7649 iterations 4
Cbc0038I Pass  12: suminf.    1.20741 (13) obj. 1.7649 iterations 23
Cbc0038I Pass  13: suminf.    0.80143 (10) obj. 1.7649 iterations 9
Cbc0038I Pass  14: suminf.    0.23802 (4) obj. 1.7649 iterations 12
Cbc0038I Pass  15: suminf.    1.56573 (6) obj. -18.1095 iterations 7
Cbc0038I Pass  16: suminf.    0.52381 (4) obj. -17.5988 iterations 3
Cbc0038I Pass  17: suminf.    1.91675 (4) obj. 1.7649 iterations 4
Cbc0038I Pass  18: suminf.    1.35376 (16) obj. 1.7649 iterations 35
Cbc0038I Pass  19: suminf.    0.91179 (11) obj. -0.767352 iterations 22
Cbc0038I Pass  20: suminf.    0.64207 (17) obj. 1.7649 iterations 37
Cbc0038I Pass  21: suminf.    0.40090 (2) obj. 1.7649 iterations 5
Cbc0038I Pass  22: suminf.    0.43506 (2) obj. -5.07652 iterations 6
Cbc0038I Pass  23: suminf.    0.46852 (5) obj. 1.7649 iterations 6
Cbc0038I Pass  24: suminf.    0.03030 (1) obj. -0.33574 iterations 6
Cbc0038I Pass  25: suminf.    0.29781 (4) obj. 1.7649 iterations 6
Cbc0038I Pass  26: suminf.    2.00400 (5) obj. -17.3303 iterations 6
Cbc0038I Pass  27: suminf.    0.79094 (9) obj. -4.13857 iterations 21
Cbc0038I Pass  28: suminf.    0.79094 (9) obj. -4.13857 iterations 2
Cbc0038I Pass  29: suminf.    1.54781 (4) obj. 1.7649 iterations 20
Cbc0038I Pass  30: suminf.    1.34615 (3) obj. -7.53302 iterations 9
Cbc0038I Pass  31: suminf.    0.91548 (2) obj. 1.7649 iterations 5
Cbc0038I Pass  32: suminf.    0.52381 (4) obj. -18.5988 iterations 4
Cbc0038I Pass  33: suminf.    1.98868 (4) obj. 1.7649 iterations 4
Cbc0038I Rounding solution of -6.88042 is better than previous of 9.24047

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -6.88042 to -9.90405 (0.06 seconds)
Cbc0038I Round again with cutoff of -21.0262
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.41700 (27) obj. -30.5588 iterations 0
Cbc0038I Pass  34: suminf.    1.41700 (27) obj. -30.5588 iterations 0
Cbc0038I Pass  35: suminf.    2.98050 (19) obj. -21.0262 iterations 41
Cbc0038I Pass  36: suminf.    1.09468 (19) obj. -21.0262 iterations 2
Cbc0038I Pass  37: suminf.    1.07227 (6) obj. -21.0262 iterations 3
Cbc0038I Pass  38: suminf.    1.12579 (7) obj. -21.0262 iterations 7
Cbc0038I Pass  39: suminf.    0.90747 (20) obj. -21.0262 iterations 7
Cbc0038I Pass  40: suminf.    3.40831 (12) obj. -21.0262 iterations 17
Cbc0038I Pass  41: suminf.    2.18828 (10) obj. -21.0262 iterations 3
Cbc0038I Pass  42: suminf.    1.74025 (9) obj. -21.0262 iterations 3
Cbc0038I Pass  43: suminf.    0.85669 (5) obj. -21.0262 iterations 9
Cbc0038I Pass  44: suminf.    0.81521 (5) obj. -21.0262 iterations 1
Cbc0038I Pass  45: suminf.    1.27143 (5) obj. -21.0262 iterations 2
Cbc0038I Pass  46: suminf.    1.13842 (5) obj. -21.0262 iterations 2
Cbc0038I Pass  47: suminf.    4.03245 (14) obj. -21.0262 iterations 16
Cbc0038I Pass  48: suminf.    3.89213 (13) obj. -21.0262 iterations 2
Cbc0038I Pass  49: suminf.    3.89213 (13) obj. -21.0262 iterations 0
Cbc0038I Pass  50: suminf.    1.63089 (6) obj. -21.0262 iterations 13
Cbc0038I Pass  51: suminf.    0.81521 (5) obj. -21.0262 iterations 5
Cbc0038I Pass  52: suminf.    1.27143 (5) obj. -21.0262 iterations 2
Cbc0038I Pass  53: suminf.    1.13842 (5) obj. -21.0262 iterations 2
Cbc0038I Pass  54: suminf.    0.85669 (5) obj. -21.0262 iterations 5
Cbc0038I Pass  55: suminf.    3.11898 (12) obj. -21.0262 iterations 11
Cbc0038I Pass  56: suminf.    2.75918 (11) obj. -21.0262 iterations 2
Cbc0038I Pass  57: suminf.    2.26694 (10) obj. -21.0262 iterations 4
Cbc0038I Pass  58: suminf.    0.17293 (5) obj. -21.0262 iterations 9
Cbc0038I Pass  59: suminf.    0.13831 (5) obj. -21.0262 iterations 1
Cbc0038I Pass  60: suminf.    0.60343 (5) obj. -21.0262 iterations 2
Cbc0038I Pass  61: suminf.    3.98831 (14) obj. -21.0262 iterations 19
Cbc0038I Pass  62: suminf.    3.33942 (13) obj. -21.0262 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -9.90405 to -17.53 (0.10 seconds)
Cbc0038I Round again with cutoff of -34.3726
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.89804 (29) obj. -34.3726 iterations 6
Cbc0038I Pass  63: suminf.    1.89804 (29) obj. -34.3726 iterations 0
Cbc0038I Pass  64: suminf.    1.62370 (20) obj. -34.3726 iterations 29
Cbc0038I Pass  65: suminf.    1.38963 (19) obj. -34.3726 iterations 4
Cbc0038I Pass  66: suminf.    5.19171 (20) obj. -34.3726 iterations 28
Cbc0038I Pass  67: suminf.    4.26644 (21) obj. -34.3726 iterations 3
Cbc0038I Pass  68: suminf.    4.08443 (21) obj. -34.3726 iterations 5
Cbc0038I Pass  69: suminf.    3.95777 (13) obj. -34.3726 iterations 22
Cbc0038I Pass  70: suminf.    3.95777 (13) obj. -34.3726 iterations 1
Cbc0038I Pass  71: suminf.    4.06525 (12) obj. -34.3726 iterations 2
Cbc0038I Pass  72: suminf.    3.62380 (12) obj. -34.3726 iterations 3
Cbc0038I Pass  73: suminf.    3.76742 (12) obj. -34.3726 iterations 6
Cbc0038I Pass  74: suminf.    3.76742 (12) obj. -34.3726 iterations 1
Cbc0038I Pass  75: suminf.    6.58077 (19) obj. -34.3726 iterations 15
Cbc0038I Pass  76: suminf.    6.58077 (19) obj. -34.3726 iterations 2
Cbc0038I Pass  77: suminf.    3.76742 (12) obj. -34.3726 iterations 15
Cbc0038I Pass  78: suminf.    4.73327 (15) obj. -34.3726 iterations 14
Cbc0038I Pass  79: suminf.    4.58310 (16) obj. -34.3726 iterations 5
Cbc0038I Pass  80: suminf.    4.57695 (16) obj. -34.3726 iterations 1
Cbc0038I Pass  81: suminf.    3.97996 (12) obj. -34.3726 iterations 15
Cbc0038I Pass  82: suminf.    3.97996 (12) obj. -34.3726 iterations 0
Cbc0038I Pass  83: suminf.    4.19721 (12) obj. -34.3726 iterations 5
Cbc0038I Pass  84: suminf.    4.19721 (12) obj. -34.3726 iterations 0
Cbc0038I Pass  85: suminf.    3.76742 (12) obj. -34.3726 iterations 2
Cbc0038I Pass  86: suminf.    3.76742 (12) obj. -34.3726 iterations 1
Cbc0038I Pass  87: suminf.    4.19721 (12) obj. -34.3726 iterations 4
Cbc0038I Pass  88: suminf.    4.01694 (16) obj. -34.3726 iterations 20
Cbc0038I Pass  89: suminf.    3.45343 (15) obj. -34.3726 iterations 2
Cbc0038I Pass  90: suminf.    3.71096 (12) obj. -34.3726 iterations 12
Cbc0038I Pass  91: suminf.    3.71096 (12) obj. -34.3726 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -17.53 - took 0.08 seconds
Cbc0012I Integer solution of -17.529997 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 94 rows 112 columns, reduced to 23 rows 22 columns
Cbc0031I 45 added rows had average density of 34.844444
Cbc0013I At root node, 45 cuts changed objective from -65.51434 to -33.519916 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6021 row cuts average 2.5 elements, 0 column cuts (25 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1970 row cuts average 101.5 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 743 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 912 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1042 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 477 row cuts average 42.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.653 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.529997 best solution, best possible -33.519916 (2.18 seconds)
Cbc0012I Integer solution of -18.792637 found by rounding after 3852 iterations and 11 nodes (2.47 seconds)
Cbc0001I Search completed - best objective -18.7926373, took 4199 iterations and 18 nodes (2.48 seconds)
Cbc0032I Strong branching done 362 times (7746 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 112 variables fixed on reduced cost
Total time (CPU seconds):       1.84   (Wallclock seconds):       2.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 68 (-10) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 2.92455e-05 - average 2.41698e-07, 14 fixed columns
Coin0506I Presolve 95 (-26) rows, 54 (-14) columns and 290 (-80) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 41.756769
Clp0000I Optimal - objective value 41.756769
Coin0511I After Postsolve, objective 41.756769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.756769
Clp0000I Optimal - objective value 41.756769
Clp0000I Optimal - objective value 41.756769
Coin0511I After Postsolve, objective 41.756769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.75676861 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 68 columns (67 integer (67 of which binary)) and 429 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.555%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.43005
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.20903 iterations 26
Cbc0038I Solution found of 3.20903
Cbc0038I Relaxing continuous gives 3.20903
Cbc0038I Rounding solution of -7.85099 is better than previous of 3.20903

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -7.85099 to -18.7926 (0.02 seconds)
Cbc0038I Round again with cutoff of -21.0277
Cbc0038I Pass   2: suminf.    1.62542 (5) obj. -21.0277 iterations 12
Cbc0038I Pass   3: suminf.    1.20010 (4) obj. -21.0277 iterations 1
Cbc0038I Pass   4: suminf.    1.20010 (4) obj. -21.0277 iterations 0
Cbc0038I Pass   5: suminf.    0.64080 (2) obj. -21.0277 iterations 8
Cbc0038I Pass   6: suminf.    0.16245 (2) obj. -21.0277 iterations 2
Cbc0038I Pass   7: suminf.    0.78890 (2) obj. -21.0277 iterations 3
Cbc0038I Pass   8: suminf.    0.30003 (1) obj. -21.0277 iterations 1
Cbc0038I Pass   9: suminf.    1.10061 (10) obj. -21.0277 iterations 12
Cbc0038I Pass  10: suminf.    0.30103 (1) obj. -21.0277 iterations 8
Cbc0038I Pass  11: suminf.    0.18150 (2) obj. -21.0277 iterations 3
Cbc0038I Pass  12: suminf.    1.01915 (4) obj. -21.0277 iterations 5
Cbc0038I Pass  13: suminf.    2.64988 (7) obj. -21.0277 iterations 15
Cbc0038I Pass  14: suminf.    1.35053 (4) obj. -21.0277 iterations 18
Cbc0038I Pass  15: suminf.    1.12241 (3) obj. -21.0277 iterations 1
Cbc0038I Pass  16: suminf.    0.64080 (2) obj. -21.0277 iterations 4
Cbc0038I Pass  17: suminf.    0.16245 (2) obj. -21.0277 iterations 2
Cbc0038I Pass  18: suminf.    0.78890 (2) obj. -21.0277 iterations 3
Cbc0038I Pass  19: suminf.    0.30003 (1) obj. -21.0277 iterations 1
Cbc0038I Pass  20: suminf.    4.50451 (12) obj. -21.0277 iterations 18
Cbc0038I Pass  21: suminf.    1.69605 (5) obj. -21.0277 iterations 16
Cbc0038I Pass  22: suminf.    1.46778 (6) obj. -21.0277 iterations 2
Cbc0038I Pass  23: suminf.    1.44144 (5) obj. -21.0277 iterations 4
Cbc0038I Pass  24: suminf.    1.30971 (5) obj. -21.0277 iterations 7
Cbc0038I Pass  25: suminf.    1.20010 (4) obj. -21.0277 iterations 1
Cbc0038I Pass  26: suminf.    0.64080 (2) obj. -21.0277 iterations 6
Cbc0038I Pass  27: suminf.    0.16245 (2) obj. -21.0277 iterations 1
Cbc0038I Pass  28: suminf.    0.78890 (2) obj. -21.0277 iterations 2
Cbc0038I Pass  29: suminf.    0.30003 (1) obj. -21.0277 iterations 1
Cbc0038I Pass  30: suminf.    4.38314 (16) obj. -21.0277 iterations 29
Cbc0038I Pass  31: suminf.    1.62542 (5) obj. -21.0277 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 68 columns, reduced to 75 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -18.7926 - took 0.03 seconds
Cbc0012I Integer solution of -18.792637 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 117 rows 68 columns, reduced to 35 rows 22 columns
Cbc0031I 13 added rows had average density of 43.769231
Cbc0013I At root node, 13 cuts changed objective from -41.142107 to -30.548466 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3399 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 905 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -18.7926373, took 3946 iterations and 16 nodes (0.46 seconds)
Cbc0032I Strong branching done 302 times (4823 iterations), fathomed 1 nodes and fixed 15 variables
Cbc0035I Maximum depth 7, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 110 (-43) columns and 1638 (-1666) elements
Clp1000I sum of infeasibilities 1.86583e-07 - average 1.92353e-09, 29 fixed columns
Coin0506I Presolve 73 (-24) rows, 80 (-30) columns and 985 (-653) elements
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 1.9387897 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 63.607387
Clp0000I Optimal - objective value 63.607387
Coin0511I After Postsolve, objective 63.607387, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.607387
Clp0000I Optimal - objective value 63.607387
Clp0000I Optimal - objective value 63.607387
Coin0511I After Postsolve, objective 63.607387, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.60738691 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 110 columns (110 integer (110 of which binary)) and 1685 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.643%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.27101
Cbc0038I Pass   1: suminf.    1.62561 (26) obj. -35.5608 iterations 27
Cbc0038I Solution found of 2.90482
Cbc0038I Rounding solution of -1.71893 is better than previous of 2.90482

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 110 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -1.71893 to -3.53145 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.4292
Cbc0038I Pass   2: suminf.    1.62561 (26) obj. -35.5608 iterations 0
Cbc0038I Pass   3: suminf.    0.65762 (6) obj. -8.4292 iterations 26
Cbc0038I Pass   4: suminf.    0.45946 (1) obj. -12.3599 iterations 8
Cbc0038I Pass   5: suminf.    0.25489 (1) obj. -8.4292 iterations 1
Cbc0038I Pass   6: suminf.    3.42993 (14) obj. -8.4292 iterations 50
Cbc0038I Pass   7: suminf.    0.99288 (9) obj. -8.4292 iterations 15
Cbc0038I Pass   8: suminf.    0.99288 (9) obj. -8.4292 iterations 0
Cbc0038I Pass   9: suminf.    0.60428 (2) obj. -8.4292 iterations 12
Cbc0038I Pass  10: suminf.    0.41102 (1) obj. -8.4292 iterations 1
Cbc0038I Pass  11: suminf.    0.45946 (1) obj. -9.35991 iterations 1
Cbc0038I Pass  12: suminf.    1.14507 (11) obj. -13.0415 iterations 41
Cbc0038I Pass  13: suminf.    0.66998 (12) obj. -8.4292 iterations 6
Cbc0038I Pass  14: suminf.    1.08009 (4) obj. -8.4292 iterations 13
Cbc0038I Pass  15: suminf.    1.02250 (4) obj. -8.4292 iterations 1
Cbc0038I Pass  16: suminf.    1.01471 (3) obj. -8.4292 iterations 5
Cbc0038I Pass  17: suminf.    0.54483 (2) obj. -9.93306 iterations 3
Cbc0038I Pass  18: suminf.    0.46181 (2) obj. -8.4292 iterations 1
Cbc0038I Pass  19: suminf.    0.84560 (2) obj. -8.4292 iterations 3
Cbc0038I Pass  20: suminf.    0.95842 (6) obj. -8.4292 iterations 20
Cbc0038I Pass  21: suminf.    0.70867 (5) obj. -8.4292 iterations 4
Cbc0038I Pass  22: suminf.    0.45149 (7) obj. -8.4292 iterations 10
Cbc0038I Pass  23: suminf.    0.45149 (7) obj. -8.4292 iterations 4
Cbc0038I Pass  24: suminf.    2.03021 (6) obj. -8.4292 iterations 17
Cbc0038I Pass  25: suminf.    2.03021 (6) obj. -8.4292 iterations 6
Cbc0038I Pass  26: suminf.    2.03718 (6) obj. -8.4292 iterations 7
Cbc0038I Pass  27: suminf.    2.03718 (6) obj. -8.4292 iterations 6
Cbc0038I Pass  28: suminf.    2.03021 (6) obj. -8.4292 iterations 7
Cbc0038I Pass  29: suminf.    2.03718 (13) obj. -8.4292 iterations 14
Cbc0038I Pass  30: suminf.    1.30875 (9) obj. -8.4292 iterations 7
Cbc0038I Pass  31: suminf.    0.88766 (7) obj. -8.4292 iterations 3
Cbc0038I Rounding solution of -9.90405 is better than previous of -3.53145

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 110 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -9.90405 to -18.7926 (0.07 seconds)
Cbc0038I Round again with cutoff of -25.5358
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.62561 (26) obj. -35.5608 iterations 0
Cbc0038I Pass  32: suminf.    1.01607 (18) obj. -25.5358 iterations 12
Cbc0038I Pass  33: suminf.    1.26742 (8) obj. -25.5358 iterations 30
Cbc0038I Pass  34: suminf.    1.00635 (8) obj. -25.5358 iterations 6
Cbc0038I Pass  35: suminf.    1.49654 (18) obj. -25.5358 iterations 18
Cbc0038I Pass  36: suminf.    0.81251 (18) obj. -25.5358 iterations 2
Cbc0038I Pass  37: suminf.    2.34117 (14) obj. -25.5358 iterations 25
Cbc0038I Pass  38: suminf.    2.26680 (14) obj. -25.5358 iterations 5
Cbc0038I Pass  39: suminf.    1.56116 (14) obj. -25.5358 iterations 12
Cbc0038I Pass  40: suminf.    0.92733 (11) obj. -25.5358 iterations 13
Cbc0038I Pass  41: suminf.    1.24539 (11) obj. -25.5358 iterations 9
Cbc0038I Pass  42: suminf.    1.18621 (12) obj. -25.5358 iterations 2
Cbc0038I Pass  43: suminf.    2.40793 (15) obj. -25.5358 iterations 17
Cbc0038I Pass  44: suminf.    2.32260 (15) obj. -25.5358 iterations 2
Cbc0038I Pass  45: suminf.    2.34117 (14) obj. -25.5358 iterations 9
Cbc0038I Pass  46: suminf.    2.26680 (14) obj. -25.5358 iterations 5
Cbc0038I Pass  47: suminf.    1.59112 (19) obj. -25.5358 iterations 10
Cbc0038I Pass  48: suminf.    1.32051 (15) obj. -25.5358 iterations 4
Cbc0038I Pass  49: suminf.    1.36785 (14) obj. -25.5358 iterations 16
Cbc0038I Pass  50: suminf.    1.14322 (14) obj. -25.5358 iterations 4
Cbc0038I Pass  51: suminf.    2.34117 (14) obj. -25.5358 iterations 5
Cbc0038I Pass  52: suminf.    2.26680 (14) obj. -25.5358 iterations 4
Cbc0038I Pass  53: suminf.    3.03423 (20) obj. -25.5358 iterations 10
Cbc0038I Pass  54: suminf.    2.62059 (19) obj. -25.5358 iterations 3
Cbc0038I Pass  55: suminf.    1.77374 (14) obj. -25.5358 iterations 5
Cbc0038I Pass  56: suminf.    1.32501 (13) obj. -26.4753 iterations 4
Cbc0038I Pass  57: suminf.    1.25820 (13) obj. -25.5358 iterations 1
Cbc0038I Pass  58: suminf.    1.50913 (14) obj. -25.5358 iterations 14
Cbc0038I Pass  59: suminf.    1.50913 (14) obj. -25.5358 iterations 1
Cbc0038I Pass  60: suminf.    2.34117 (14) obj. -25.5358 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -18.7926 - took 0.10 seconds
Cbc0012I Integer solution of -18.792637 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 93 rows 110 columns, reduced to 24 rows 27 columns
Cbc0031I 56 added rows had average density of 17.946429
Cbc0013I At root node, 56 cuts changed objective from -52.508071 to -21.165645 in 28 passes
Cbc0014I Cut generator 0 (Probing) - 2070 row cuts average 7.2 elements, 2 column cuts (2 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 67.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 94 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 142 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 303 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 46.0 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.792637 best solution, best possible -21.149332 (0.73 seconds)
Cbc0001I Search completed - best objective -18.7926373, took 855 iterations and 6 nodes (1.06 seconds)
Cbc0032I Strong branching done 224 times (4549 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       1.06

