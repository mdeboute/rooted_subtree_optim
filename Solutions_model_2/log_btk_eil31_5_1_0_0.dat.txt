Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 2.33156e-06 - average 4.48377e-08, 20 fixed columns
Coin0506I Presolve 14 (-38) rows, 8 (-20) columns and 37 (-116) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Coin0511I After Postsolve, objective 1394.1353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0273433 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Coin0511I After Postsolve, objective 1394.1353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1394.135304 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.02171
Cbc0038I Pass   1: suminf.    0.27778 (1) obj. -904.828 iterations 8
Cbc0038I Solution found of -348.695
Cbc0038I Relaxing continuous gives -348.695
Cbc0038I Rounding solution of -614.304 is better than previous of -348.695

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -614.304 to -817.154 (0.01 seconds)
Cbc0038I Round again with cutoff of -839.751
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27778 (1) obj. -904.828 iterations 0
Cbc0038I Pass   3: suminf.    0.36229 (1) obj. -839.751 iterations 2
Cbc0038I Pass   4: suminf.    0.16250 (1) obj. -850.413 iterations 9
Cbc0038I Pass   5: suminf.    0.14865 (1) obj. -839.751 iterations 5
Cbc0038I Pass   6: suminf.    0.16250 (1) obj. -850.413 iterations 2
Cbc0038I Pass   7: suminf.    0.64493 (4) obj. -839.751 iterations 8
Cbc0038I Pass   8: suminf.    0.38249 (2) obj. -839.751 iterations 4
Cbc0038I Pass   9: suminf.    0.42105 (2) obj. -886.737 iterations 2
Cbc0038I Pass  10: suminf.    0.29902 (2) obj. -839.751 iterations 3
Cbc0038I Pass  11: suminf.    0.51519 (3) obj. -839.751 iterations 3
Cbc0038I Pass  12: suminf.    1.08447 (4) obj. -839.751 iterations 6
Cbc0038I Pass  13: suminf.    0.86889 (3) obj. -839.751 iterations 2
Cbc0038I Pass  14: suminf.    0.63068 (4) obj. -839.751 iterations 6
Cbc0038I Pass  15: suminf.    0.63068 (4) obj. -839.751 iterations 2
Cbc0038I Pass  16: suminf.    1.05978 (3) obj. -839.751 iterations 12
Cbc0038I Pass  17: suminf.    0.10000 (1) obj. -964.214 iterations 4
Cbc0038I Pass  18: suminf.    0.10000 (1) obj. -964.214 iterations 0
Cbc0038I Pass  19: suminf.    0.35519 (1) obj. -839.751 iterations 3
Cbc0038I Pass  20: suminf.    0.35772 (1) obj. -841.81 iterations 1
Cbc0038I Pass  21: suminf.    0.58430 (3) obj. -839.751 iterations 6
Cbc0038I Pass  22: suminf.    0.52593 (2) obj. -839.751 iterations 3
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -885.761 iterations 1
Cbc0038I Pass  24: suminf.    0.15328 (1) obj. -839.751 iterations 1
Cbc0038I Pass  25: suminf.    0.75927 (3) obj. -839.751 iterations 3
Cbc0038I Pass  26: suminf.    0.15328 (1) obj. -839.751 iterations 5
Cbc0038I Pass  27: suminf.    0.56826 (2) obj. -839.751 iterations 10
Cbc0038I Pass  28: suminf.    0.25641 (1) obj. -885.424 iterations 2
Cbc0038I Pass  29: suminf.    0.14103 (1) obj. -839.751 iterations 3
Cbc0038I Pass  30: suminf.    0.23577 (1) obj. -916.645 iterations 1
Cbc0038I Pass  31: suminf.    0.55254 (7) obj. -839.751 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -817.154 to -869.558 (0.02 seconds)
Cbc0038I Round again with cutoff of -904.272
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27778 (1) obj. -904.828 iterations 0
Cbc0038I Pass  32: suminf.    0.27850 (1) obj. -904.272 iterations 1
Cbc0038I Pass  33: suminf.    1.49363 (6) obj. -904.272 iterations 14
Cbc0038I Pass  34: suminf.    1.26295 (4) obj. -904.272 iterations 7
Cbc0038I Pass  35: suminf.    0.66102 (3) obj. -904.272 iterations 3
Cbc0038I Pass  36: suminf.    0.88180 (3) obj. -904.272 iterations 5
Cbc0038I Pass  37: suminf.    0.88180 (3) obj. -904.272 iterations 0
Cbc0038I Pass  38: suminf.    1.49236 (4) obj. -904.272 iterations 5
Cbc0038I Pass  39: suminf.    0.32907 (2) obj. -904.272 iterations 5
Cbc0038I Pass  40: suminf.    1.20103 (4) obj. -904.272 iterations 5
Cbc0038I Pass  41: suminf.    1.20103 (4) obj. -904.272 iterations 3
Cbc0038I Pass  42: suminf.    1.54649 (4) obj. -904.272 iterations 4
Cbc0038I Pass  43: suminf.    0.55685 (3) obj. -904.272 iterations 8
Cbc0038I Pass  44: suminf.    0.55685 (3) obj. -904.272 iterations 0
Cbc0038I Pass  45: suminf.    0.10000 (1) obj. -964.214 iterations 5
Cbc0038I Pass  46: suminf.    0.10000 (1) obj. -964.214 iterations 0
Cbc0038I Pass  47: suminf.    0.23632 (1) obj. -904.272 iterations 1
Cbc0038I Pass  48: suminf.    0.64921 (4) obj. -918.527 iterations 9
Cbc0038I Pass  49: suminf.    0.62976 (2) obj. -912.014 iterations 1
Cbc0038I Pass  50: suminf.    0.62843 (2) obj. -904.272 iterations 6
Cbc0038I Pass  51: suminf.    0.82315 (2) obj. -952.56 iterations 1
Cbc0038I Pass  52: suminf.    0.49109 (2) obj. -904.272 iterations 2
Cbc0038I Pass  53: suminf.    0.74452 (2) obj. -904.272 iterations 3
Cbc0038I Pass  54: suminf.    0.35806 (3) obj. -968.901 iterations 5
Cbc0038I Pass  55: suminf.    0.76680 (3) obj. -904.272 iterations 7
Cbc0038I Pass  56: suminf.    0.76680 (3) obj. -904.272 iterations 0
Cbc0038I Pass  57: suminf.    1.03782 (4) obj. -904.272 iterations 5
Cbc0038I Pass  58: suminf.    0.12710 (3) obj. -904.272 iterations 3
Cbc0038I Pass  59: suminf.    0.12710 (3) obj. -904.272 iterations 2
Cbc0038I Pass  60: suminf.    0.39747 (2) obj. -904.272 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -869.558 - took 0.03 seconds
Cbc0012I Integer solution of -869.5582 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 28 columns, reduced to 9 rows 8 columns
Cbc0031I 5 added rows had average density of 18.2
Cbc0013I At root node, 5 cuts changed objective from -1043.1252 to -940.56648 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 361 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 323 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.747 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -869.5582 best solution, best possible -940.56648 (1.45 seconds)
Cbc0001I Search completed - best objective -869.5581999999999, took 1605 iterations and 10 nodes (1.47 seconds)
Cbc0032I Strong branching done 102 times (528 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       1.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-16) rows, 50 (-12) columns and 427 (-221) elements
Clp1000I sum of infeasibilities 9.72018e-08 - average 2.02504e-09, 28 fixed columns
Coin0506I Presolve 15 (-33) rows, 15 (-35) columns and 62 (-365) elements
Clp0006I 0  Obj 1409.1736 Dual inf 17.922286 (14)
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 1416.5085
Clp0000I Optimal - objective value 1416.5085
Coin0511I After Postsolve, objective 1416.5085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1416.5085 Dual inf 246.92222 (4)
Clp0014I Perturbing problem by 0.001% of 1.3377481 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 1419.6606
Clp0000I Optimal - objective value 1419.6606
Clp0000I Optimal - objective value 1419.6606
Coin0511I After Postsolve, objective 1419.6606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1419.660558 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 47 columns (47 integer (47 of which binary)) and 379 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 6.11421
Cbc0038I Pass   1: suminf.    0.39028 (3) obj. -906.716 iterations 18
Cbc0038I Solution found of -348.695
Cbc0038I Rounding solution of -614.304 is better than previous of -348.695

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -614.304 to -725.284 (0.02 seconds)
Cbc0038I Round again with cutoff of -756.673
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.39028 (3) obj. -906.716 iterations 0
Cbc0038I Pass   3: suminf.    0.47018 (1) obj. -756.673 iterations 3
Cbc0038I Pass   4: suminf.    0.27778 (1) obj. -904.828 iterations 1
Cbc0038I Pass   5: suminf.    1.42710 (4) obj. -756.673 iterations 5
Cbc0038I Pass   6: suminf.    1.27983 (4) obj. -756.673 iterations 5
Cbc0038I Pass   7: suminf.    0.23333 (1) obj. -823.014 iterations 4
Cbc0038I Pass   8: suminf.    0.14718 (1) obj. -756.673 iterations 1
Cbc0038I Pass   9: suminf.    1.08704 (9) obj. -756.673 iterations 11
Cbc0038I Pass  10: suminf.    1.06129 (8) obj. -756.673 iterations 2
Cbc0038I Pass  11: suminf.    0.43750 (1) obj. -885.712 iterations 9
Cbc0038I Pass  12: suminf.    0.26992 (1) obj. -756.673 iterations 1
Cbc0038I Pass  13: suminf.    0.61549 (4) obj. -756.673 iterations 9
Cbc0038I Pass  14: suminf.    0.58084 (2) obj. -756.673 iterations 3
Cbc0038I Pass  15: suminf.    0.30000 (1) obj. -796.341 iterations 2
Cbc0038I Pass  16: suminf.    0.24849 (1) obj. -756.673 iterations 1
Cbc0038I Pass  17: suminf.    2.02095 (7) obj. -756.673 iterations 13
Cbc0038I Pass  18: suminf.    0.46022 (3) obj. -780.394 iterations 9
Cbc0038I Pass  19: suminf.    0.59423 (2) obj. -756.673 iterations 4
Cbc0038I Pass  20: suminf.    0.71471 (2) obj. -832.807 iterations 1
Cbc0038I Pass  21: suminf.    2.63349 (10) obj. -756.673 iterations 15
Cbc0038I Pass  22: suminf.    1.19770 (5) obj. -756.673 iterations 12
Cbc0038I Pass  23: suminf.    0.63178 (2) obj. -756.673 iterations 6
Cbc0038I Pass  24: suminf.    0.49857 (2) obj. -756.673 iterations 1
Cbc0038I Pass  25: suminf.    0.30928 (2) obj. -824.343 iterations 2
Cbc0038I Pass  26: suminf.    0.13352 (2) obj. -756.673 iterations 1
Cbc0038I Pass  27: suminf.    1.79898 (10) obj. -756.673 iterations 18
Cbc0038I Pass  28: suminf.    1.32252 (6) obj. -756.673 iterations 6
Cbc0038I Pass  29: suminf.    0.35772 (1) obj. -810.81 iterations 6
Cbc0038I Pass  30: suminf.    0.29102 (1) obj. -756.673 iterations 1
Cbc0038I Pass  31: suminf.    0.95425 (4) obj. -756.673 iterations 6
Cbc0038I Rounding solution of -771.454 is better than previous of -725.284

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 34 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -771.454 to -869.558 (0.03 seconds)
Cbc0038I Round again with cutoff of -903.483
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39028 (3) obj. -906.716 iterations 0
Cbc0038I Pass  32: suminf.    0.27953 (1) obj. -903.483 iterations 3
Cbc0038I Pass  33: suminf.    0.27778 (1) obj. -904.828 iterations 1
Cbc0038I Pass  34: suminf.    0.57632 (3) obj. -911.036 iterations 6
Cbc0038I Pass  35: suminf.    0.33503 (3) obj. -903.483 iterations 3
Cbc0038I Pass  36: suminf.    0.07006 (1) obj. -903.483 iterations 4
Cbc0038I Pass  37: suminf.    0.02500 (1) obj. -938.183 iterations 1
Cbc0038I Pass  38: suminf.    0.15000 (3) obj. -909.969 iterations 6
Cbc0038I Pass  39: suminf.    0.08172 (2) obj. -903.483 iterations 4
Cbc0038I Pass  40: suminf.    0.33872 (3) obj. -903.483 iterations 4
Cbc0038I Pass  41: suminf.    0.33872 (3) obj. -903.483 iterations 2
Cbc0038I Pass  42: suminf.    0.60406 (2) obj. -903.483 iterations 5
Cbc0038I Pass  43: suminf.    0.09048 (2) obj. -903.483 iterations 2
Cbc0038I Pass  44: suminf.    0.08172 (2) obj. -903.483 iterations 1
Cbc0038I Pass  45: suminf.    0.33872 (3) obj. -903.483 iterations 4
Cbc0038I Pass  46: suminf.    0.33872 (3) obj. -903.483 iterations 2
Cbc0038I Pass  47: suminf.    0.60406 (2) obj. -903.483 iterations 5
Cbc0038I Pass  48: suminf.    0.09048 (2) obj. -903.483 iterations 2
Cbc0038I Pass  49: suminf.    0.08172 (2) obj. -903.483 iterations 1
Cbc0038I Pass  50: suminf.    0.33872 (3) obj. -903.483 iterations 4
Cbc0038I Pass  51: suminf.    0.33872 (3) obj. -903.483 iterations 2
Cbc0038I Pass  52: suminf.    0.60406 (2) obj. -903.483 iterations 5
Cbc0038I Pass  53: suminf.    0.09048 (2) obj. -903.483 iterations 2
Cbc0038I Pass  54: suminf.    0.08172 (2) obj. -903.483 iterations 1
Cbc0038I Pass  55: suminf.    0.33872 (3) obj. -903.483 iterations 4
Cbc0038I Pass  56: suminf.    0.33872 (3) obj. -903.483 iterations 2
Cbc0038I Pass  57: suminf.    0.60406 (2) obj. -903.483 iterations 6
Cbc0038I Pass  58: suminf.    0.09048 (2) obj. -903.483 iterations 3
Cbc0038I Pass  59: suminf.    0.08172 (2) obj. -903.483 iterations 1
Cbc0038I Pass  60: suminf.    0.33872 (3) obj. -903.483 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -869.558 - took 0.02 seconds
Cbc0012I Integer solution of -869.5582 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 47 columns, reduced to 19 rows 20 columns
Cbc0031I 18 added rows had average density of 15.666667
Cbc0013I At root node, 18 cuts changed objective from -1039.1803 to -939.70955 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 897 row cuts average 3.1 elements, 8 column cuts (8 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 608 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 261 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.674 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -869.5582 best solution, best possible -939.70955 (1.38 seconds)
Cbc0001I Search completed - best objective -869.5581999999999, took 1815 iterations and 10 nodes (1.44 seconds)
Cbc0032I Strong branching done 186 times (1588 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       1.44

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 2.33156e-06 - average 4.48377e-08, 20 fixed columns
Coin0506I Presolve 14 (-38) rows, 8 (-20) columns and 37 (-116) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Coin0511I After Postsolve, objective 1394.1353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0273433 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Clp0000I Optimal - objective value 1394.1353
Coin0511I After Postsolve, objective 1394.1353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1394.135304 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.02171
Cbc0038I Pass   1: suminf.    0.27778 (1) obj. -904.828 iterations 8
Cbc0038I Solution found of -348.695
Cbc0038I Relaxing continuous gives -348.695
Cbc0038I Rounding solution of -614.304 is better than previous of -348.695

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -614.304 to -817.154 (0.01 seconds)
Cbc0038I Round again with cutoff of -839.751
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27778 (1) obj. -904.828 iterations 0
Cbc0038I Pass   3: suminf.    0.36229 (1) obj. -839.751 iterations 2
Cbc0038I Pass   4: suminf.    0.16250 (1) obj. -850.413 iterations 9
Cbc0038I Pass   5: suminf.    0.14865 (1) obj. -839.751 iterations 5
Cbc0038I Pass   6: suminf.    0.16250 (1) obj. -850.413 iterations 2
Cbc0038I Pass   7: suminf.    0.64493 (4) obj. -839.751 iterations 8
Cbc0038I Pass   8: suminf.    0.38249 (2) obj. -839.751 iterations 4
Cbc0038I Pass   9: suminf.    0.42105 (2) obj. -886.737 iterations 2
Cbc0038I Pass  10: suminf.    0.29902 (2) obj. -839.751 iterations 3
Cbc0038I Pass  11: suminf.    0.51519 (3) obj. -839.751 iterations 3
Cbc0038I Pass  12: suminf.    1.08447 (4) obj. -839.751 iterations 6
Cbc0038I Pass  13: suminf.    0.86889 (3) obj. -839.751 iterations 2
Cbc0038I Pass  14: suminf.    0.63068 (4) obj. -839.751 iterations 6
Cbc0038I Pass  15: suminf.    0.63068 (4) obj. -839.751 iterations 2
Cbc0038I Pass  16: suminf.    1.05978 (3) obj. -839.751 iterations 12
Cbc0038I Pass  17: suminf.    0.10000 (1) obj. -964.214 iterations 4
Cbc0038I Pass  18: suminf.    0.10000 (1) obj. -964.214 iterations 0
Cbc0038I Pass  19: suminf.    0.35519 (1) obj. -839.751 iterations 3
Cbc0038I Pass  20: suminf.    0.35772 (1) obj. -841.81 iterations 1
Cbc0038I Pass  21: suminf.    0.58430 (3) obj. -839.751 iterations 6
Cbc0038I Pass  22: suminf.    0.52593 (2) obj. -839.751 iterations 3
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -885.761 iterations 1
Cbc0038I Pass  24: suminf.    0.15328 (1) obj. -839.751 iterations 1
Cbc0038I Pass  25: suminf.    0.75927 (3) obj. -839.751 iterations 3
Cbc0038I Pass  26: suminf.    0.15328 (1) obj. -839.751 iterations 5
Cbc0038I Pass  27: suminf.    0.56826 (2) obj. -839.751 iterations 10
Cbc0038I Pass  28: suminf.    0.25641 (1) obj. -885.424 iterations 2
Cbc0038I Pass  29: suminf.    0.14103 (1) obj. -839.751 iterations 3
Cbc0038I Pass  30: suminf.    0.23577 (1) obj. -916.645 iterations 1
Cbc0038I Pass  31: suminf.    0.55254 (7) obj. -839.751 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -817.154 to -869.558 (0.02 seconds)
Cbc0038I Round again with cutoff of -904.272
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27778 (1) obj. -904.828 iterations 0
Cbc0038I Pass  32: suminf.    0.27850 (1) obj. -904.272 iterations 1
Cbc0038I Pass  33: suminf.    1.49363 (6) obj. -904.272 iterations 14
Cbc0038I Pass  34: suminf.    1.26295 (4) obj. -904.272 iterations 7
Cbc0038I Pass  35: suminf.    0.66102 (3) obj. -904.272 iterations 3
Cbc0038I Pass  36: suminf.    0.88180 (3) obj. -904.272 iterations 5
Cbc0038I Pass  37: suminf.    0.88180 (3) obj. -904.272 iterations 0
Cbc0038I Pass  38: suminf.    1.49236 (4) obj. -904.272 iterations 5
Cbc0038I Pass  39: suminf.    0.32907 (2) obj. -904.272 iterations 5
Cbc0038I Pass  40: suminf.    1.20103 (4) obj. -904.272 iterations 5
Cbc0038I Pass  41: suminf.    1.20103 (4) obj. -904.272 iterations 3
Cbc0038I Pass  42: suminf.    1.54649 (4) obj. -904.272 iterations 4
Cbc0038I Pass  43: suminf.    0.55685 (3) obj. -904.272 iterations 8
Cbc0038I Pass  44: suminf.    0.55685 (3) obj. -904.272 iterations 0
Cbc0038I Pass  45: suminf.    0.10000 (1) obj. -964.214 iterations 5
Cbc0038I Pass  46: suminf.    0.10000 (1) obj. -964.214 iterations 0
Cbc0038I Pass  47: suminf.    0.23632 (1) obj. -904.272 iterations 1
Cbc0038I Pass  48: suminf.    0.64921 (4) obj. -918.527 iterations 9
Cbc0038I Pass  49: suminf.    0.62976 (2) obj. -912.014 iterations 1
Cbc0038I Pass  50: suminf.    0.62843 (2) obj. -904.272 iterations 6
Cbc0038I Pass  51: suminf.    0.82315 (2) obj. -952.56 iterations 1
Cbc0038I Pass  52: suminf.    0.49109 (2) obj. -904.272 iterations 2
Cbc0038I Pass  53: suminf.    0.74452 (2) obj. -904.272 iterations 3
Cbc0038I Pass  54: suminf.    0.35806 (3) obj. -968.901 iterations 5
Cbc0038I Pass  55: suminf.    0.76680 (3) obj. -904.272 iterations 7
Cbc0038I Pass  56: suminf.    0.76680 (3) obj. -904.272 iterations 0
Cbc0038I Pass  57: suminf.    1.03782 (4) obj. -904.272 iterations 5
Cbc0038I Pass  58: suminf.    0.12710 (3) obj. -904.272 iterations 3
Cbc0038I Pass  59: suminf.    0.12710 (3) obj. -904.272 iterations 2
Cbc0038I Pass  60: suminf.    0.39747 (2) obj. -904.272 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -869.558 - took 0.02 seconds
Cbc0012I Integer solution of -869.5582 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 51 rows 28 columns, reduced to 9 rows 8 columns
Cbc0031I 5 added rows had average density of 18.2
Cbc0013I At root node, 5 cuts changed objective from -1043.1252 to -940.56648 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 361 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 323 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.781 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -869.5582 best solution, best possible -940.56648 (1.51 seconds)
Cbc0001I Search completed - best objective -869.5581999999999, took 1605 iterations and 10 nodes (1.55 seconds)
Cbc0032I Strong branching done 102 times (528 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 47 (-16) columns and 367 (-282) elements
Clp1000I sum of infeasibilities 8.9287e-08 - average 1.98416e-09, 25 fixed columns
Coin0506I Presolve 15 (-30) rows, 15 (-32) columns and 62 (-305) elements
Clp0006I 0  Obj 1409.1735 Dual inf 17.922286 (14)
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 1416.5085
Clp0000I Optimal - objective value 1416.5085
Coin0511I After Postsolve, objective 1416.5085, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1416.5085 Dual inf 236.72305 (4)
Clp0014I Perturbing problem by 0.001% of 1.3161665 - largest nonzero change 1.387768e-05 ( 0.001387768%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 1419.6606
Clp0000I Optimal - objective value 1419.6606
Clp0000I Optimal - objective value 1419.6606
Coin0511I After Postsolve, objective 1419.6606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1419.660558 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 47 columns (47 integer (47 of which binary)) and 379 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.82824
Cbc0038I Pass   1: suminf.    0.39910 (3) obj. -906.707 iterations 15
Cbc0038I Solution found of -348.695
Cbc0038I Rounding solution of -614.304 is better than previous of -348.695

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -614.304 to -725.284 (0.01 seconds)
Cbc0038I Round again with cutoff of -756.75
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.39910 (3) obj. -906.707 iterations 0
Cbc0038I Pass   3: suminf.    0.47008 (1) obj. -756.75 iterations 3
Cbc0038I Pass   4: suminf.    0.27778 (1) obj. -904.828 iterations 1
Cbc0038I Pass   5: suminf.    1.42318 (4) obj. -756.75 iterations 6
Cbc0038I Pass   6: suminf.    1.28125 (4) obj. -756.75 iterations 4
Cbc0038I Pass   7: suminf.    0.23333 (1) obj. -823.014 iterations 4
Cbc0038I Pass   8: suminf.    0.14728 (1) obj. -756.75 iterations 1
Cbc0038I Pass   9: suminf.    1.20269 (9) obj. -756.75 iterations 10
Cbc0038I Pass  10: suminf.    1.14824 (8) obj. -756.75 iterations 2
Cbc0038I Pass  11: suminf.    0.43750 (1) obj. -885.712 iterations 9
Cbc0038I Pass  12: suminf.    0.27002 (1) obj. -756.75 iterations 1
Cbc0038I Pass  13: suminf.    0.99980 (6) obj. -756.75 iterations 7
Cbc0038I Pass  14: suminf.    0.59112 (2) obj. -756.75 iterations 4
Cbc0038I Pass  15: suminf.    0.30000 (1) obj. -796.341 iterations 2
Cbc0038I Pass  16: suminf.    0.24859 (1) obj. -756.75 iterations 1
Cbc0038I Pass  17: suminf.    2.03425 (7) obj. -756.75 iterations 14
Cbc0038I Pass  18: suminf.    0.47169 (3) obj. -780.359 iterations 7
Cbc0038I Pass  19: suminf.    0.59435 (2) obj. -756.75 iterations 4
Cbc0038I Pass  20: suminf.    0.71471 (2) obj. -832.807 iterations 1
Cbc0038I Pass  21: suminf.    2.11274 (10) obj. -756.75 iterations 13
Cbc0038I Pass  22: suminf.    0.60573 (5) obj. -756.75 iterations 11
Cbc0038I Pass  23: suminf.    0.63249 (2) obj. -756.75 iterations 5
Cbc0038I Pass  24: suminf.    0.49914 (2) obj. -756.75 iterations 1
Cbc0038I Pass  25: suminf.    0.30928 (2) obj. -824.343 iterations 2
Cbc0038I Pass  26: suminf.    0.13372 (2) obj. -756.75 iterations 1
Cbc0038I Pass  27: suminf.    1.25604 (12) obj. -756.75 iterations 19
Cbc0038I Pass  28: suminf.    0.93128 (5) obj. -756.75 iterations 4
Cbc0038I Pass  29: suminf.    0.69761 (2) obj. -756.75 iterations 5
Cbc0038I Pass  30: suminf.    0.48792 (1) obj. -756.75 iterations 2
Cbc0038I Pass  31: suminf.    0.46250 (1) obj. -794.925 iterations 2
Cbc0038I Rounding solution of -771.454 is better than previous of -725.284

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 37 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -771.454 to -869.558 (0.04 seconds)
Cbc0038I Round again with cutoff of -903.635
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39910 (3) obj. -906.707 iterations 0
Cbc0038I Pass  32: suminf.    0.27933 (1) obj. -903.635 iterations 3
Cbc0038I Pass  33: suminf.    0.27778 (1) obj. -904.828 iterations 1
Cbc0038I Pass  34: suminf.    0.31436 (2) obj. -903.635 iterations 6
Cbc0038I Pass  35: suminf.    0.31436 (2) obj. -903.635 iterations 1
Cbc0038I Pass  36: suminf.    0.05428 (1) obj. -903.635 iterations 4
Cbc0038I Pass  37: suminf.    0.02500 (1) obj. -926.183 iterations 1
Cbc0038I Pass  38: suminf.    0.31579 (2) obj. -926.721 iterations 8
Cbc0038I Pass  39: suminf.    0.16667 (1) obj. -919.966 iterations 1
Cbc0038I Pass  40: suminf.    0.18787 (1) obj. -903.635 iterations 1
Cbc0038I Pass  41: suminf.    1.49269 (5) obj. -903.635 iterations 5
Cbc0038I Pass  42: suminf.    0.87831 (5) obj. -903.635 iterations 2
Cbc0038I Pass  43: suminf.    1.12168 (3) obj. -903.635 iterations 3
Cbc0038I Pass  44: suminf.    0.80023 (2) obj. -903.635 iterations 2
Cbc0038I Pass  45: suminf.    0.93321 (2) obj. -903.635 iterations 1
Cbc0038I Pass  46: suminf.    1.70935 (5) obj. -903.635 iterations 6
Cbc0038I Pass  47: suminf.    1.32743 (4) obj. -903.635 iterations 5
Cbc0038I Pass  48: suminf.    0.93321 (2) obj. -903.635 iterations 3
Cbc0038I Pass  49: suminf.    0.80023 (2) obj. -903.635 iterations 1
Cbc0038I Pass  50: suminf.    1.22093 (7) obj. -903.635 iterations 10
Cbc0038I Pass  51: suminf.    0.47496 (6) obj. -903.635 iterations 11
Cbc0038I Pass  52: suminf.    0.39544 (2) obj. -903.635 iterations 6
Cbc0038I Pass  53: suminf.    0.30586 (2) obj. -903.635 iterations 2
Cbc0038I Pass  54: suminf.    0.72494 (2) obj. -903.635 iterations 13
Cbc0038I Pass  55: suminf.    0.72494 (2) obj. -903.635 iterations 0
Cbc0038I Pass  56: suminf.    0.42664 (2) obj. -903.635 iterations 6
Cbc0038I Pass  57: suminf.    0.23241 (2) obj. -903.635 iterations 3
Cbc0038I Pass  58: suminf.    0.23241 (2) obj. -903.635 iterations 0
Cbc0038I Pass  59: suminf.    0.42664 (2) obj. -903.635 iterations 2
Cbc0038I Pass  60: suminf.    1.02673 (5) obj. -903.635 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 30 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -869.558 - took 0.03 seconds
Cbc0012I Integer solution of -869.5582 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 44 rows 47 columns, reduced to 19 rows 20 columns
Cbc0031I 15 added rows had average density of 12.533333
Cbc0013I At root node, 15 cuts changed objective from -1039.9437 to -942.61195 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 990 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 640 row cuts average 29.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 196 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.710 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -869.5582 best solution, best possible -942.61195 (1.54 seconds)
Cbc0001I Search completed - best objective -869.5581999999999, took 1779 iterations and 10 nodes (1.89 seconds)
Cbc0032I Strong branching done 196 times (1519 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 27 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.89

