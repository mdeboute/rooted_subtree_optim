Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 6.49261e-07 - average 4.88166e-09, 31 fixed columns
Coin0506I Presolve 70 (-63) rows, 43 (-31) columns and 219 (-187) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.9415929 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Coin0511I After Postsolve, objective 64.579065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22127761 - largest nonzero change 0 ( 0%) - largest zero change 2.893666e-05
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Coin0511I After Postsolve, objective 64.579065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.57906482 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.569%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.28941
Cbc0038I Solution found of -21.3406
Cbc0038I Relaxing continuous gives -23.3041
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -23.3041 to -40.5019 (0.02 seconds)
Cbc0038I Round again with cutoff of -42.8829
Cbc0038I Pass   1: suminf.    1.18002 (9) obj. -42.8829 iterations 44
Cbc0038I Pass   2: suminf.    2.03188 (6) obj. -42.8829 iterations 15
Cbc0038I Pass   3: suminf.    1.22024 (3) obj. -42.8829 iterations 2
Cbc0038I Pass   4: suminf.    0.72905 (3) obj. -42.8829 iterations 2
Cbc0038I Pass   5: suminf.    1.52237 (4) obj. -42.8829 iterations 3
Cbc0038I Pass   6: suminf.    0.68348 (3) obj. -42.8829 iterations 5
Cbc0038I Pass   7: suminf.    0.94280 (3) obj. -42.8829 iterations 4
Cbc0038I Pass   8: suminf.    0.94280 (3) obj. -42.8829 iterations 0
Cbc0038I Pass   9: suminf.    0.80166 (3) obj. -42.8829 iterations 2
Cbc0038I Pass  10: suminf.    2.92249 (10) obj. -42.8829 iterations 21
Cbc0038I Pass  11: suminf.    0.53010 (4) obj. -42.8829 iterations 23
Cbc0038I Pass  12: suminf.    0.53010 (4) obj. -42.8829 iterations 0
Cbc0038I Pass  13: suminf.    1.23172 (4) obj. -42.8829 iterations 6
Cbc0038I Pass  14: suminf.    1.45209 (6) obj. -42.8829 iterations 14
Cbc0038I Pass  15: suminf.    0.60421 (3) obj. -42.8829 iterations 14
Cbc0038I Pass  16: suminf.    0.80178 (3) obj. -42.8829 iterations 4
Cbc0038I Pass  17: suminf.    2.67959 (10) obj. -42.8829 iterations 23
Cbc0038I Pass  18: suminf.    0.26370 (2) obj. -42.8829 iterations 18
Cbc0038I Pass  19: suminf.    0.26370 (2) obj. -42.8829 iterations 0
Cbc0038I Pass  20: suminf.    0.44042 (2) obj. -42.8829 iterations 2
Cbc0038I Pass  21: suminf.    1.33186 (5) obj. -42.8829 iterations 11
Cbc0038I Pass  22: suminf.    0.68348 (3) obj. -42.8829 iterations 14
Cbc0038I Pass  23: suminf.    0.94280 (3) obj. -42.8829 iterations 4
Cbc0038I Pass  24: suminf.    0.94280 (3) obj. -42.8829 iterations 0
Cbc0038I Pass  25: suminf.    0.80166 (3) obj. -42.8829 iterations 2
Cbc0038I Pass  26: suminf.    3.29527 (14) obj. -42.8829 iterations 16
Cbc0038I Pass  27: suminf.    0.47627 (4) obj. -42.8829 iterations 15
Cbc0038I Pass  28: suminf.    0.47627 (4) obj. -42.8829 iterations 0
Cbc0038I Pass  29: suminf.    1.20748 (4) obj. -42.8829 iterations 3
Cbc0038I Pass  30: suminf.    0.94648 (3) obj. -42.8829 iterations 3
Cbc0038I Rounding solution of -40.5139 is better than previous of -40.5019

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -40.5139 to -40.5151 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.1685
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.47434 (13) obj. -47.1685 iterations 2
Cbc0038I Pass  31: suminf.    2.08879 (8) obj. -47.1685 iterations 15
Cbc0038I Pass  32: suminf.    1.31286 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  33: suminf.    1.60795 (5) obj. -47.1685 iterations 7
Cbc0038I Pass  34: suminf.    1.52758 (6) obj. -47.1685 iterations 2
Cbc0038I Pass  35: suminf.    0.77313 (4) obj. -47.1685 iterations 10
Cbc0038I Pass  36: suminf.    0.76328 (5) obj. -47.1685 iterations 1
Cbc0038I Pass  37: suminf.    1.79196 (5) obj. -47.1685 iterations 3
Cbc0038I Pass  38: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  39: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  40: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  41: suminf.    1.76199 (7) obj. -47.1685 iterations 12
Cbc0038I Pass  42: suminf.    1.14561 (6) obj. -47.1685 iterations 6
Cbc0038I Pass  43: suminf.    0.95174 (5) obj. -47.1685 iterations 2
Cbc0038I Pass  44: suminf.    1.72011 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  45: suminf.    1.60682 (6) obj. -47.1685 iterations 3
Cbc0038I Pass  46: suminf.    1.06605 (6) obj. -47.1685 iterations 5
Cbc0038I Pass  47: suminf.    1.96174 (6) obj. -47.1685 iterations 6
Cbc0038I Pass  48: suminf.    2.20757 (6) obj. -47.1685 iterations 10
Cbc0038I Pass  49: suminf.    1.98178 (7) obj. -47.1685 iterations 7
Cbc0038I Pass  50: suminf.    1.79196 (5) obj. -47.1685 iterations 6
Cbc0038I Pass  51: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  52: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  53: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  54: suminf.    2.19719 (10) obj. -47.1685 iterations 8
Cbc0038I Pass  55: suminf.    1.07218 (6) obj. -47.1685 iterations 11
Cbc0038I Pass  56: suminf.    1.79196 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  57: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  58: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  59: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -40.5151 - took 0.07 seconds
Cbc0012I Integer solution of -40.51512 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 54 rows 32 columns
Cbc0031I 16 added rows had average density of 44.4375
Cbc0013I At root node, 16 cuts changed objective from -64.311039 to -55.079188 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4195 row cuts average 3.4 elements, 4 column cuts (4 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 992 row cuts average 58.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0001I Search completed - best objective -40.51512, took 5191 iterations and 32 nodes (0.55 seconds)
Cbc0032I Strong branching done 444 times (7038 iterations), fathomed 2 nodes and fixed 23 variables
Cbc0035I Maximum depth 14, 79 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-45) rows, 122 (-30) columns and 2189 (-1114) elements
Clp1000I sum of infeasibilities 3.41419e-07 - average 3.13228e-09, 95 fixed columns
Coin0506I Presolve 18 (-91) rows, 27 (-95) columns and 84 (-2105) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 3.3830393 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 93.118904
Clp0000I Optimal - objective value 93.118904
Coin0511I After Postsolve, objective 93.118904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5530261 - largest nonzero change 2.2907883e-05 ( 0.0022907883%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 154.44548
Clp0000I Optimal - objective value 154.44548
Clp0000I Optimal - objective value 154.44548
Coin0511I After Postsolve, objective 154.44548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.4454796 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 122 columns (122 integer (122 of which binary)) and 2204 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.979%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.56438
Cbc0038I Pass   1: suminf.    0.84825 (34) obj. -20.5308 iterations 18
Cbc0038I Pass   2: suminf.    0.84825 (34) obj. -20.5308 iterations 0
Cbc0038I Pass   3: suminf.    0.07469 (5) obj. 15.5175 iterations 29
Cbc0038I Solution found of 22.4129
Cbc0038I Rounding solution of -3.20694 is better than previous of 22.4129

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 122 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -3.20694 to -84.5871 (0.04 seconds)
Cbc0038I Round again with cutoff of -91.0741
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.25145 (45) obj. -91.0741 iterations 6
Cbc0038I Pass   5: suminf.    2.79093 (43) obj. -91.0741 iterations 1
Cbc0038I Pass   6: suminf.    2.25733 (43) obj. -91.0741 iterations 1
Cbc0038I Pass   7: suminf.    1.27250 (17) obj. -91.0741 iterations 29
Cbc0038I Pass   8: suminf.    1.27250 (17) obj. -91.0741 iterations 0
Cbc0038I Pass   9: suminf.    0.88823 (7) obj. -91.0741 iterations 12
Cbc0038I Pass  10: suminf.    0.26907 (1) obj. -91.0741 iterations 6
Cbc0038I Pass  11: suminf.    0.26907 (1) obj. -91.0741 iterations 0
Cbc0038I Pass  12: suminf.    0.44444 (1) obj. -95.3021 iterations 3
Cbc0038I Pass  13: suminf.    2.46663 (15) obj. -91.0741 iterations 16
Cbc0038I Pass  14: suminf.    2.23097 (14) obj. -91.0741 iterations 2
Cbc0038I Pass  15: suminf.    2.43617 (21) obj. -91.0741 iterations 25
Cbc0038I Pass  16: suminf.    2.12584 (20) obj. -91.0741 iterations 5
Cbc0038I Pass  17: suminf.    0.55294 (2) obj. -91.0741 iterations 21
Cbc0038I Pass  18: suminf.    0.55294 (2) obj. -91.0741 iterations 1
Cbc0038I Pass  19: suminf.    0.83353 (2) obj. -91.0741 iterations 2
Cbc0038I Pass  20: suminf.    0.59012 (3) obj. -91.0741 iterations 2
Cbc0038I Pass  21: suminf.    1.59198 (12) obj. -91.0741 iterations 12
Cbc0038I Pass  22: suminf.    1.46862 (10) obj. -91.0741 iterations 5
Cbc0038I Pass  23: suminf.    0.55294 (2) obj. -91.0741 iterations 10
Cbc0038I Pass  24: suminf.    0.55294 (2) obj. -91.0741 iterations 1
Cbc0038I Pass  25: suminf.    0.83353 (2) obj. -91.0741 iterations 2
Cbc0038I Pass  26: suminf.    0.59012 (3) obj. -91.0741 iterations 2
Cbc0038I Pass  27: suminf.    1.32124 (12) obj. -91.0741 iterations 8
Cbc0038I Pass  28: suminf.    1.21126 (10) obj. -91.0741 iterations 1
Cbc0038I Pass  29: suminf.    0.55294 (2) obj. -91.0741 iterations 10
Cbc0038I Pass  30: suminf.    0.55294 (2) obj. -91.0741 iterations 1
Cbc0038I Pass  31: suminf.    0.83353 (2) obj. -91.0741 iterations 2
Cbc0038I Pass  32: suminf.    0.59012 (3) obj. -91.0741 iterations 2
Cbc0038I Pass  33: suminf.    1.33896 (11) obj. -91.0741 iterations 8
Cbc0038I Rounding solution of -84.5879 is better than previous of -84.5871

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 122 columns, reduced to 49 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -102.751
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.03054 (45) obj. -102.751 iterations 0
Cbc0038I Pass  34: suminf.    2.42192 (45) obj. -102.751 iterations 1
Cbc0038I Pass  35: suminf.    2.42192 (45) obj. -102.751 iterations 0
Cbc0038I Pass  36: suminf.    1.74761 (24) obj. -102.751 iterations 21
Cbc0038I Pass  37: suminf.    1.48311 (16) obj. -102.751 iterations 10
Cbc0038I Pass  38: suminf.    0.79784 (3) obj. -102.751 iterations 20
Cbc0038I Pass  39: suminf.    0.79626 (3) obj. -102.751 iterations 4
Cbc0038I Pass  40: suminf.    0.79784 (3) obj. -102.751 iterations 5
Cbc0038I Pass  41: suminf.    1.97859 (13) obj. -102.751 iterations 18
Cbc0038I Pass  42: suminf.    1.24484 (11) obj. -102.751 iterations 7
Cbc0038I Pass  43: suminf.    1.14957 (4) obj. -102.751 iterations 15
Cbc0038I Pass  44: suminf.    1.14041 (4) obj. -102.751 iterations 1
Cbc0038I Pass  45: suminf.    1.40062 (12) obj. -102.751 iterations 17
Cbc0038I Pass  46: suminf.    1.22661 (9) obj. -102.751 iterations 8
Cbc0038I Pass  47: suminf.    2.39572 (16) obj. -102.751 iterations 14
Cbc0038I Pass  48: suminf.    1.42983 (13) obj. -102.751 iterations 6
Cbc0038I Pass  49: suminf.    0.79784 (3) obj. -102.751 iterations 16
Cbc0038I Pass  50: suminf.    0.79626 (3) obj. -102.751 iterations 3
Cbc0038I Pass  51: suminf.    0.79784 (3) obj. -102.751 iterations 5
Cbc0038I Pass  52: suminf.    2.30198 (16) obj. -102.751 iterations 26
Cbc0038I Pass  53: suminf.    2.11723 (14) obj. -102.751 iterations 11
Cbc0038I Pass  54: suminf.    1.50042 (7) obj. -102.751 iterations 13
Cbc0038I Pass  55: suminf.    1.50042 (7) obj. -102.751 iterations 0
Cbc0038I Pass  56: suminf.    1.62431 (5) obj. -102.751 iterations 10
Cbc0038I Pass  57: suminf.    1.00446 (5) obj. -102.751 iterations 3
Cbc0038I Pass  58: suminf.    1.13158 (4) obj. -102.751 iterations 6
Cbc0038I Pass  59: suminf.    0.82862 (4) obj. -102.751 iterations 4
Cbc0038I Pass  60: suminf.    2.10481 (11) obj. -102.751 iterations 21
Cbc0038I Pass  61: suminf.    2.10481 (11) obj. -102.751 iterations 3
Cbc0038I Pass  62: suminf.    1.00807 (4) obj. -102.751 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 122 columns, reduced to 46 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -84.5879 - took 0.05 seconds
Cbc0012I Integer solution of -84.587944 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0012I Integer solution of -89.26164 found by DiveCoefficient after 407 iterations and 0 nodes (0.79 seconds)
Cbc0031I 43 added rows had average density of 3.6046512
Cbc0013I At root node, 43 cuts changed objective from -149.45625 to -89.261699 in 51 passes
Cbc0014I Cut generator 0 (Probing) - 425 row cuts average 2.9 elements, 21 column cuts (21 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 138 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 51.7 elements, 0 column cuts (0 active)  in 0.355 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 5.9455939e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -89.26164, took 407 iterations and 0 nodes (0.80 seconds)
Cbc0035I Maximum depth 0, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 6.49261e-07 - average 4.88166e-09, 31 fixed columns
Coin0506I Presolve 70 (-63) rows, 43 (-31) columns and 219 (-187) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.9415929 - largest nonzero change 0 ( 0%) - largest zero change 1.8986656e-05
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Coin0511I After Postsolve, objective 64.579065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22127761 - largest nonzero change 0 ( 0%) - largest zero change 2.893666e-05
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Clp0000I Optimal - objective value 64.579065
Coin0511I After Postsolve, objective 64.579065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.57906482 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.569%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.28941
Cbc0038I Solution found of -21.3406
Cbc0038I Relaxing continuous gives -23.3041
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -23.3041 to -40.5019 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.8829
Cbc0038I Pass   1: suminf.    1.18002 (9) obj. -42.8829 iterations 44
Cbc0038I Pass   2: suminf.    2.03188 (6) obj. -42.8829 iterations 15
Cbc0038I Pass   3: suminf.    1.22024 (3) obj. -42.8829 iterations 2
Cbc0038I Pass   4: suminf.    0.72905 (3) obj. -42.8829 iterations 2
Cbc0038I Pass   5: suminf.    1.52237 (4) obj. -42.8829 iterations 3
Cbc0038I Pass   6: suminf.    0.68348 (3) obj. -42.8829 iterations 5
Cbc0038I Pass   7: suminf.    0.94280 (3) obj. -42.8829 iterations 4
Cbc0038I Pass   8: suminf.    0.94280 (3) obj. -42.8829 iterations 0
Cbc0038I Pass   9: suminf.    0.80166 (3) obj. -42.8829 iterations 2
Cbc0038I Pass  10: suminf.    2.92249 (10) obj. -42.8829 iterations 21
Cbc0038I Pass  11: suminf.    0.53010 (4) obj. -42.8829 iterations 23
Cbc0038I Pass  12: suminf.    0.53010 (4) obj. -42.8829 iterations 0
Cbc0038I Pass  13: suminf.    1.23172 (4) obj. -42.8829 iterations 6
Cbc0038I Pass  14: suminf.    1.45209 (6) obj. -42.8829 iterations 14
Cbc0038I Pass  15: suminf.    0.60421 (3) obj. -42.8829 iterations 14
Cbc0038I Pass  16: suminf.    0.80178 (3) obj. -42.8829 iterations 4
Cbc0038I Pass  17: suminf.    2.67959 (10) obj. -42.8829 iterations 23
Cbc0038I Pass  18: suminf.    0.26370 (2) obj. -42.8829 iterations 18
Cbc0038I Pass  19: suminf.    0.26370 (2) obj. -42.8829 iterations 0
Cbc0038I Pass  20: suminf.    0.44042 (2) obj. -42.8829 iterations 2
Cbc0038I Pass  21: suminf.    1.33186 (5) obj. -42.8829 iterations 11
Cbc0038I Pass  22: suminf.    0.68348 (3) obj. -42.8829 iterations 14
Cbc0038I Pass  23: suminf.    0.94280 (3) obj. -42.8829 iterations 4
Cbc0038I Pass  24: suminf.    0.94280 (3) obj. -42.8829 iterations 0
Cbc0038I Pass  25: suminf.    0.80166 (3) obj. -42.8829 iterations 2
Cbc0038I Pass  26: suminf.    3.29527 (14) obj. -42.8829 iterations 16
Cbc0038I Pass  27: suminf.    0.47627 (4) obj. -42.8829 iterations 15
Cbc0038I Pass  28: suminf.    0.47627 (4) obj. -42.8829 iterations 0
Cbc0038I Pass  29: suminf.    1.20748 (4) obj. -42.8829 iterations 3
Cbc0038I Pass  30: suminf.    0.94648 (3) obj. -42.8829 iterations 3
Cbc0038I Rounding solution of -40.5139 is better than previous of -40.5019

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -40.5139 to -40.5151 (0.06 seconds)
Cbc0038I Round again with cutoff of -47.1685
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.47434 (13) obj. -47.1685 iterations 2
Cbc0038I Pass  31: suminf.    2.08879 (8) obj. -47.1685 iterations 15
Cbc0038I Pass  32: suminf.    1.31286 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  33: suminf.    1.60795 (5) obj. -47.1685 iterations 7
Cbc0038I Pass  34: suminf.    1.52758 (6) obj. -47.1685 iterations 2
Cbc0038I Pass  35: suminf.    0.77313 (4) obj. -47.1685 iterations 10
Cbc0038I Pass  36: suminf.    0.76328 (5) obj. -47.1685 iterations 1
Cbc0038I Pass  37: suminf.    1.79196 (5) obj. -47.1685 iterations 3
Cbc0038I Pass  38: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  39: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  40: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  41: suminf.    1.76199 (7) obj. -47.1685 iterations 12
Cbc0038I Pass  42: suminf.    1.14561 (6) obj. -47.1685 iterations 6
Cbc0038I Pass  43: suminf.    0.95174 (5) obj. -47.1685 iterations 2
Cbc0038I Pass  44: suminf.    1.72011 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  45: suminf.    1.60682 (6) obj. -47.1685 iterations 3
Cbc0038I Pass  46: suminf.    1.06605 (6) obj. -47.1685 iterations 5
Cbc0038I Pass  47: suminf.    1.96174 (6) obj. -47.1685 iterations 6
Cbc0038I Pass  48: suminf.    2.20757 (6) obj. -47.1685 iterations 10
Cbc0038I Pass  49: suminf.    1.98178 (7) obj. -47.1685 iterations 7
Cbc0038I Pass  50: suminf.    1.79196 (5) obj. -47.1685 iterations 6
Cbc0038I Pass  51: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  52: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  53: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  54: suminf.    2.19719 (10) obj. -47.1685 iterations 8
Cbc0038I Pass  55: suminf.    1.07218 (6) obj. -47.1685 iterations 11
Cbc0038I Pass  56: suminf.    1.79196 (5) obj. -47.1685 iterations 5
Cbc0038I Pass  57: suminf.    1.02620 (4) obj. -47.1685 iterations 3
Cbc0038I Pass  58: suminf.    0.92705 (4) obj. -47.1685 iterations 2
Cbc0038I Pass  59: suminf.    1.16938 (4) obj. -47.1685 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -40.5151 - took 0.07 seconds
Cbc0012I Integer solution of -40.51512 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 54 rows 32 columns
Cbc0031I 16 added rows had average density of 44.4375
Cbc0013I At root node, 16 cuts changed objective from -64.311039 to -55.079188 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4195 row cuts average 3.4 elements, 4 column cuts (4 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 992 row cuts average 58.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -40.51512, took 5191 iterations and 32 nodes (0.60 seconds)
Cbc0032I Strong branching done 444 times (7038 iterations), fathomed 2 nodes and fixed 23 variables
Cbc0035I Maximum depth 14, 79 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 120 (-33) columns and 2093 (-1211) elements
Clp1000I sum of infeasibilities 6.14295e-07 - average 5.74107e-09, 68 fixed columns
Coin0506I Presolve 41 (-66) rows, 52 (-68) columns and 180 (-1913) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 1.050859 - largest nonzero change 0 ( 0%) - largest zero change 2.6914189e-05
Clp0000I Optimal - objective value 15.152964
Clp0000I Optimal - objective value 15.152964
Coin0511I After Postsolve, objective 15.152964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5674976 - largest nonzero change 1.0750271e-05 ( 0.0010750271%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 78.328871
Clp0000I Optimal - objective value 78.328871
Clp0000I Optimal - objective value 78.328871
Coin0511I After Postsolve, objective 78.328871, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.32887098 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 120 columns (120 integer (120 of which binary)) and 2107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 4.56636
Cbc0038I Pass   1: suminf.    0.75709 (32) obj. -42.1184 iterations 19
Cbc0038I Pass   2: suminf.    0.75709 (32) obj. -42.1184 iterations 1
Cbc0038I Pass   3: suminf.    0.10577 (7) obj. -11.8958 iterations 35
Cbc0038I Solution found of -1.06115
Cbc0038I Rounding solution of -12.815 is better than previous of -1.06115

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 120 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -12.815 to -16.5073 (0.04 seconds)
Cbc0038I Round again with cutoff of -22.2296
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.75709 (32) obj. -42.1184 iterations 0
Cbc0038I Pass   5: suminf.    0.75709 (32) obj. -42.1184 iterations 1
Cbc0038I Pass   6: suminf.    0.25097 (15) obj. -23.6801 iterations 24
Cbc0038I Pass   7: suminf.    0.58105 (6) obj. -22.2296 iterations 32
Cbc0038I Pass   8: suminf.    0.37588 (6) obj. -24.3493 iterations 5
Cbc0038I Pass   9: suminf.    0.44053 (9) obj. -22.2296 iterations 18
Cbc0038I Pass  10: suminf.    0.44053 (9) obj. -22.2296 iterations 4
Cbc0038I Pass  11: suminf.    0.55801 (4) obj. -22.2296 iterations 18
Cbc0038I Pass  12: suminf.    0.59078 (3) obj. -22.2296 iterations 7
Cbc0038I Pass  13: suminf.    0.28762 (2) obj. -22.2296 iterations 4
Cbc0038I Pass  14: suminf.    0.69646 (2) obj. -22.2296 iterations 5
Cbc0038I Pass  15: suminf.    1.17070 (11) obj. -22.2296 iterations 17
Cbc0038I Pass  16: suminf.    0.81869 (9) obj. -22.2296 iterations 6
Cbc0038I Pass  17: suminf.    0.69646 (2) obj. -22.2296 iterations 18
Cbc0038I Pass  18: suminf.    1.05614 (13) obj. -22.2296 iterations 22
Cbc0038I Pass  19: suminf.    0.89889 (11) obj. -22.2296 iterations 4
Cbc0038I Pass  20: suminf.    1.22830 (5) obj. -22.2296 iterations 19
Cbc0038I Pass  21: suminf.    1.02980 (5) obj. -22.2296 iterations 4
Cbc0038I Pass  22: suminf.    0.47693 (5) obj. -22.2296 iterations 11
Cbc0038I Pass  23: suminf.    0.47591 (5) obj. -22.2296 iterations 2
Cbc0038I Pass  24: suminf.    1.04862 (4) obj. -22.2296 iterations 10
Cbc0038I Pass  25: suminf.    1.04862 (4) obj. -22.2296 iterations 0
Cbc0038I Pass  26: suminf.    1.26304 (4) obj. -22.2296 iterations 7
Cbc0038I Pass  27: suminf.    1.26304 (4) obj. -22.2296 iterations 2
Cbc0038I Pass  28: suminf.    1.04862 (4) obj. -22.2296 iterations 3
Cbc0038I Pass  29: suminf.    1.70253 (11) obj. -22.9491 iterations 19
Cbc0038I Pass  30: suminf.    1.70253 (11) obj. -22.9491 iterations 3
Cbc0038I Pass  31: suminf.    0.49884 (5) obj. -22.2296 iterations 15
Cbc0038I Pass  32: suminf.    0.49884 (5) obj. -22.2296 iterations 0
Cbc0038I Pass  33: suminf.    0.37703 (4) obj. -22.2296 iterations 15
Cbc0038I Rounding solution of -30.7306 is better than previous of -16.5073

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 120 columns, reduced to 62 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -30.7306 to -37.7894 (0.15 seconds)
Cbc0038I Round again with cutoff of -44.9776
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.35761 (37) obj. -44.9776 iterations 1
Cbc0038I Pass  34: suminf.    0.94671 (33) obj. -44.9776 iterations 4
Cbc0038I Pass  35: suminf.    2.23965 (22) obj. -44.9776 iterations 39
Cbc0038I Pass  36: suminf.    2.18639 (21) obj. -44.9776 iterations 3
Cbc0038I Pass  37: suminf.    1.80741 (16) obj. -44.9776 iterations 25
Cbc0038I Pass  38: suminf.    1.77205 (16) obj. -44.9776 iterations 1
Cbc0038I Pass  39: suminf.    1.87607 (15) obj. -44.9776 iterations 6
Cbc0038I Pass  40: suminf.    1.87607 (15) obj. -44.9776 iterations 2
Cbc0038I Pass  41: suminf.    1.93123 (15) obj. -44.9776 iterations 4
Cbc0038I Pass  42: suminf.    1.48273 (15) obj. -44.9776 iterations 6
Cbc0038I Pass  43: suminf.    2.20215 (17) obj. -44.9776 iterations 5
Cbc0038I Pass  44: suminf.    2.04164 (18) obj. -44.9776 iterations 19
Cbc0038I Pass  45: suminf.    1.98435 (18) obj. -44.9776 iterations 4
Cbc0038I Pass  46: suminf.    1.77415 (16) obj. -44.9776 iterations 8
Cbc0038I Pass  47: suminf.    1.75917 (16) obj. -44.9776 iterations 2
Cbc0038I Pass  48: suminf.    1.87607 (15) obj. -44.9776 iterations 7
Cbc0038I Pass  49: suminf.    1.87607 (15) obj. -44.9776 iterations 3
Cbc0038I Pass  50: suminf.    1.93123 (15) obj. -44.9776 iterations 4
Cbc0038I Pass  51: suminf.    1.48273 (15) obj. -44.9776 iterations 7
Cbc0038I Pass  52: suminf.    2.20215 (17) obj. -44.9776 iterations 7
Cbc0038I Pass  53: suminf.    3.41888 (20) obj. -44.9776 iterations 10
Cbc0038I Pass  54: suminf.    1.88113 (18) obj. -44.9776 iterations 6
Cbc0038I Pass  55: suminf.    1.88113 (18) obj. -44.9776 iterations 0
Cbc0038I Pass  56: suminf.    4.23009 (18) obj. -44.9776 iterations 14
Cbc0038I Pass  57: suminf.    1.60482 (16) obj. -44.9776 iterations 11
Cbc0038I Pass  58: suminf.    1.48273 (15) obj. -44.9776 iterations 7
Cbc0038I Pass  59: suminf.    2.20215 (17) obj. -44.9776 iterations 7
Cbc0038I Pass  60: suminf.    1.97998 (18) obj. -44.9776 iterations 25
Cbc0038I Pass  61: suminf.    1.83697 (18) obj. -44.9776 iterations 9
Cbc0038I Pass  62: suminf.    1.99949 (17) obj. -44.9776 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 120 columns, reduced to 55 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -37.7894 to -38.4695 (0.18 seconds)
Cbc0038I Round again with cutoff of -53.6034
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.15355 (44) obj. -53.6034 iterations 6
Cbc0038I Pass  63: suminf.    1.87355 (37) obj. -53.6034 iterations 4
Cbc0038I Pass  64: suminf.    1.68549 (36) obj. -53.6034 iterations 11
Cbc0038I Pass  65: suminf.    2.42385 (27) obj. -53.6034 iterations 21
Cbc0038I Pass  66: suminf.    2.49063 (24) obj. -53.6034 iterations 29
Cbc0038I Pass  67: suminf.    2.25649 (25) obj. -53.6034 iterations 2
Cbc0038I Pass  68: suminf.    2.57639 (26) obj. -53.6034 iterations 9
Cbc0038I Pass  69: suminf.    4.98537 (30) obj. -53.6034 iterations 14
Cbc0038I Pass  70: suminf.    3.06080 (26) obj. -53.6034 iterations 2
Cbc0038I Pass  71: suminf.    2.28106 (25) obj. -53.6034 iterations 1
Cbc0038I Pass  72: suminf.    2.49063 (24) obj. -53.6034 iterations 26
Cbc0038I Pass  73: suminf.    2.27693 (25) obj. -53.6034 iterations 5
Cbc0038I Pass  74: suminf.    2.49063 (24) obj. -53.6034 iterations 10
Cbc0038I Pass  75: suminf.    2.27054 (25) obj. -53.6034 iterations 3
Cbc0038I Pass  76: suminf.    2.57639 (26) obj. -53.6034 iterations 9
Cbc0038I Pass  77: suminf.    2.75536 (27) obj. -53.6034 iterations 14
Cbc0038I Pass  78: suminf.    2.36475 (26) obj. -53.6034 iterations 7
Cbc0038I Pass  79: suminf.    2.57639 (26) obj. -53.6034 iterations 16
Cbc0038I Pass  80: suminf.    2.24586 (25) obj. -53.6034 iterations 4
Cbc0038I Pass  81: suminf.    2.57639 (26) obj. -53.6034 iterations 14
Cbc0038I Pass  82: suminf.    2.27054 (25) obj. -53.6034 iterations 4
Cbc0038I Pass  83: suminf.    2.57639 (26) obj. -53.6034 iterations 11
Cbc0038I Pass  84: suminf.    3.57243 (30) obj. -53.6034 iterations 24
Cbc0038I Pass  85: suminf.    2.77604 (28) obj. -53.6034 iterations 9
Cbc0038I Pass  86: suminf.    2.29801 (25) obj. -53.6034 iterations 32
Cbc0038I Pass  87: suminf.    2.78108 (25) obj. -53.6034 iterations 13
Cbc0038I Pass  88: suminf.    2.22439 (25) obj. -53.6034 iterations 3
Cbc0038I Pass  89: suminf.    2.57639 (26) obj. -53.6034 iterations 14
Cbc0038I Pass  90: suminf.    2.27054 (25) obj. -53.6034 iterations 4
Cbc0038I Pass  91: suminf.    2.57639 (26) obj. -53.6034 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 120 columns, reduced to 57 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -38.4695 - took 0.16 seconds
Cbc0012I Integer solution of -38.46955 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 105 rows 120 columns, reduced to 47 rows 51 columns
Cbc0031I 63 added rows had average density of 26.333333
Cbc0013I At root node, 63 cuts changed objective from -73.73016 to -48.632791 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18804 row cuts average 11.7 elements, 5 column cuts (5 active)  in 0.243 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2031 row cuts average 101.5 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 93 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1057 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 142 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1066 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 451 row cuts average 56.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 424 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.651 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.46955 best solution, best possible -48.632791 (3.00 seconds)
Cbc0012I Integer solution of -40.15009 found by rounding after 5412 iterations and 2 nodes (3.30 seconds)
Cbc0012I Integer solution of -40.50191 found by rounding after 5456 iterations and 6 nodes (3.42 seconds)
Cbc0016I Integer solution of -40.51512 found by strong branching after 5521 iterations and 9 nodes (3.60 seconds)
Cbc0010I After 11 nodes, 2 on tree, -40.51512 best solution, best possible -48.632791 (3.83 seconds)
Cbc0010I After 28 nodes, 7 on tree, -40.51512 best solution, best possible -48.632791 (4.55 seconds)
Cbc0038I Full problem 105 rows 120 columns, reduced to 51 rows 57 columns
Cbc0010I After 46 nodes, 5 on tree, -40.51512 best solution, best possible -48.632791 (5.27 seconds)
Cbc0010I After 60 nodes, 1 on tree, -40.51512 best solution, best possible -46.949147 (6.38 seconds)
Cbc0010I After 66 nodes, 7 on tree, -40.51512 best solution, best possible -46.949147 (7.09 seconds)
Cbc0010I After 86 nodes, 7 on tree, -40.51512 best solution, best possible -46.949147 (7.81 seconds)
Cbc0038I Full problem 105 rows 120 columns, reduced to 57 rows 67 columns
Cbc0010I After 96 nodes, 1 on tree, -40.51512 best solution, best possible -41.735352 (8.62 seconds)
Cbc0001I Search completed - best objective -40.51512, took 11897 iterations and 100 nodes (8.77 seconds)
Cbc0032I Strong branching done 1418 times (32240 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 18, 225 variables fixed on reduced cost
Total time (CPU seconds):       6.47   (Wallclock seconds):       8.80

