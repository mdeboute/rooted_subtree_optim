Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 73 (-5) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 2.77814e-05 - average 2.20488e-07, 14 fixed columns
Coin0506I Presolve 92 (-34) rows, 55 (-18) columns and 287 (-103) elements
Clp0014I Perturbing problem by 0.001% of 2.0914198 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 54.602319
Clp0000I Optimal - objective value 54.602319
Coin0511I After Postsolve, objective 54.602319, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.602319
Clp0000I Optimal - objective value 54.602319
Clp0000I Optimal - objective value 54.602319
Coin0511I After Postsolve, objective 54.602319, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.6023191 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 73 columns (72 integer (72 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.500%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.88024
Cbc0038I Solution found of -2.31244
Cbc0038I Relaxing continuous gives -11.2331
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -11.2331 to -24.0923 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.0875
Cbc0038I Pass   1: suminf.    1.41010 (13) obj. -27.0875 iterations 52
Cbc0038I Pass   2: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass   3: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass   4: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass   5: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass   6: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass   7: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass   8: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass   9: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass  10: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass  11: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass  12: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass  13: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass  14: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass  15: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass  16: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass  17: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass  18: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass  19: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass  20: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass  21: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass  22: suminf.    0.76190 (4) obj. -27.0875 iterations 16
Cbc0038I Pass  23: suminf.    0.76190 (4) obj. -27.0875 iterations 1
Cbc0038I Pass  24: suminf.    1.33815 (4) obj. -27.0875 iterations 9
Cbc0038I Pass  25: suminf.    0.52971 (5) obj. -27.0875 iterations 4
Cbc0038I Pass  26: suminf.    0.81358 (4) obj. -27.0875 iterations 12
Cbc0038I Pass  27: suminf.    0.51983 (3) obj. -27.0875 iterations 4
Cbc0038I Pass  28: suminf.    1.45597 (3) obj. -27.0875 iterations 5
Cbc0038I Pass  29: suminf.    2.68745 (6) obj. -27.0875 iterations 14
Cbc0038I Pass  30: suminf.    1.17002 (4) obj. -27.0875 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.0923 - took 0.04 seconds
Cbc0012I Integer solution of -24.09235 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 123 rows 73 columns, reduced to 48 rows 28 columns
Cbc0031I 11 added rows had average density of 35.545455
Cbc0013I At root node, 11 cuts changed objective from -54.043262 to -45.368011 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6690 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1398 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 101 row cuts average 72.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0004I Integer solution of -24.9186 found after 6558 iterations and 36 nodes (0.60 seconds)
Cbc0038I Full problem 123 rows 73 columns, reduced to 12 rows 12 columns
Cbc0001I Search completed - best objective -24.9186, took 6908 iterations and 46 nodes (0.62 seconds)
Cbc0032I Strong branching done 456 times (6284 iterations), fathomed 2 nodes and fixed 45 variables
Cbc0035I Maximum depth 10, 148 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 119 (-33) columns and 2109 (-1194) elements
Clp1000I sum of infeasibilities 1.99958e-07 - average 1.97978e-09, 90 fixed columns
Coin0506I Presolve 22 (-79) rows, 29 (-90) columns and 97 (-2012) elements
Clp0006I 0  Obj 25.359914 Dual inf 3.749697 (28)
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 1.7271777 - largest nonzero change 1.563533e-05 ( 0.00078710852%) - largest zero change 2.9483045e-05
Clp0000I Optimal - objective value 25.360693
Clp0000I Optimal - objective value 25.360693
Coin0511I After Postsolve, objective 25.360693, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 25.360693 Dual inf 57.170151 (46)
Clp0014I Perturbing problem by 0.001% of 1.811014 - largest nonzero change 1.8714252e-05 ( 0.0012867962%) - largest zero change 2.9491245e-05
Clp0000I Optimal - objective value 102.19835
Clp0000I Optimal - objective value 102.19835
Clp0000I Optimal - objective value 102.19835
Coin0511I After Postsolve, objective 102.19835, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.1983513 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 119 columns (119 integer (119 of which binary)) and 2132 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 11.3278
Cbc0038I Solution found of -27.7195
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 119 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -30.4878
Cbc0038I Pass   1: suminf.    0.15296 (2) obj. -30.4878 iterations 52
Cbc0038I Pass   2: suminf.    0.73253 (2) obj. -40.9662 iterations 3
Cbc0038I Pass   3: suminf.    4.11746 (11) obj. -30.4878 iterations 24
Cbc0038I Pass   4: suminf.    1.10538 (4) obj. -30.4878 iterations 12
Cbc0038I Pass   5: suminf.    0.62906 (3) obj. -30.4878 iterations 1
Cbc0038I Pass   6: suminf.    0.11680 (2) obj. -30.4878 iterations 2
Cbc0038I Solution found of -34.6433
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 119 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -34.6433 to -37.6433 (0.06 seconds)
Cbc0038I Round again with cutoff of -41.195
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.76097 (4) obj. -41.195 iterations 4
Cbc0038I Pass   8: suminf.    1.25122 (5) obj. -41.195 iterations 7
Cbc0038I Pass   9: suminf.    0.90711 (3) obj. -41.195 iterations 2
Cbc0038I Pass  10: suminf.    0.75956 (3) obj. -41.195 iterations 6
Cbc0038I Pass  11: suminf.    2.60770 (12) obj. -41.195 iterations 22
Cbc0038I Pass  12: suminf.    1.12258 (9) obj. -41.195 iterations 16
Cbc0038I Pass  13: suminf.    2.25076 (9) obj. -41.195 iterations 13
Cbc0038I Pass  14: suminf.    2.25016 (12) obj. -41.195 iterations 7
Cbc0038I Pass  15: suminf.    2.26529 (11) obj. -41.195 iterations 8
Cbc0038I Pass  16: suminf.    1.84275 (11) obj. -41.195 iterations 10
Cbc0038I Pass  17: suminf.    2.26529 (11) obj. -41.195 iterations 7
Cbc0038I Pass  18: suminf.    3.19486 (14) obj. -41.195 iterations 14
Cbc0038I Pass  19: suminf.    2.38247 (12) obj. -41.195 iterations 11
Cbc0038I Pass  20: suminf.    3.13838 (11) obj. -41.195 iterations 16
Cbc0038I Pass  21: suminf.    2.38247 (12) obj. -41.195 iterations 15
Cbc0038I Pass  22: suminf.    2.26529 (11) obj. -41.195 iterations 12
Cbc0038I Pass  23: suminf.    1.84275 (11) obj. -41.195 iterations 10
Cbc0038I Pass  24: suminf.    2.26529 (11) obj. -41.195 iterations 7
Cbc0038I Pass  25: suminf.    4.08210 (15) obj. -41.195 iterations 23
Cbc0038I Pass  26: suminf.    4.07209 (13) obj. -41.195 iterations 23
Cbc0038I Pass  27: suminf.    1.34639 (7) obj. -41.195 iterations 14
Cbc0038I Pass  28: suminf.    1.34403 (9) obj. -41.195 iterations 3
Cbc0038I Pass  29: suminf.    2.25339 (11) obj. -41.195 iterations 8
Cbc0038I Pass  30: suminf.    2.25016 (12) obj. -41.195 iterations 5
Cbc0038I Pass  31: suminf.    2.26529 (11) obj. -41.195 iterations 8
Cbc0038I Pass  32: suminf.    1.84275 (11) obj. -41.195 iterations 10
Cbc0038I Pass  33: suminf.    2.26529 (11) obj. -41.195 iterations 7
Cbc0038I Pass  34: suminf.    3.27446 (16) obj. -41.195 iterations 14
Cbc0038I Pass  35: suminf.    1.67001 (11) obj. -41.195 iterations 14
Cbc0038I Pass  36: suminf.    2.10628 (10) obj. -41.195 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 119 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -37.6433 - took 0.05 seconds
Cbc0012I Integer solution of -37.64327 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 39 added rows had average density of 7.8461538
Cbc0013I At root node, 72 cuts changed objective from -55.401285 to -37.64327 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 409 row cuts average 5.1 elements, 29 column cuts (29 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 58 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 60 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 208 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 46.8 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0001I Search completed - best objective -37.64327, took 361 iterations and 0 nodes (0.33 seconds)
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.33

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 73 (-5) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 2.77814e-05 - average 2.20488e-07, 14 fixed columns
Coin0506I Presolve 92 (-34) rows, 55 (-18) columns and 287 (-103) elements
Clp0014I Perturbing problem by 0.001% of 2.0914198 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 54.602319
Clp0000I Optimal - objective value 54.602319
Coin0511I After Postsolve, objective 54.602319, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.602319
Clp0000I Optimal - objective value 54.602319
Clp0000I Optimal - objective value 54.602319
Coin0511I After Postsolve, objective 54.602319, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.6023191 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 73 columns (72 integer (72 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.500%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 4.88024
Cbc0038I Solution found of -2.31244
Cbc0038I Relaxing continuous gives -11.2331
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -11.2331 to -24.0923 (0.02 seconds)
Cbc0038I Round again with cutoff of -27.0875
Cbc0038I Pass   1: suminf.    1.41010 (13) obj. -27.0875 iterations 52
Cbc0038I Pass   2: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass   3: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass   4: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass   5: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass   6: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass   7: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass   8: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass   9: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass  10: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass  11: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass  12: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass  13: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass  14: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass  15: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass  16: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass  17: suminf.    1.41413 (6) obj. -27.0875 iterations 17
Cbc0038I Pass  18: suminf.    1.24311 (4) obj. -27.0875 iterations 6
Cbc0038I Pass  19: suminf.    1.52336 (5) obj. -27.0875 iterations 5
Cbc0038I Pass  20: suminf.    1.33778 (5) obj. -27.0875 iterations 2
Cbc0038I Pass  21: suminf.    1.41010 (13) obj. -27.0875 iterations 14
Cbc0038I Pass  22: suminf.    0.76190 (4) obj. -27.0875 iterations 16
Cbc0038I Pass  23: suminf.    0.76190 (4) obj. -27.0875 iterations 1
Cbc0038I Pass  24: suminf.    1.33815 (4) obj. -27.0875 iterations 9
Cbc0038I Pass  25: suminf.    0.52971 (5) obj. -27.0875 iterations 4
Cbc0038I Pass  26: suminf.    0.81358 (4) obj. -27.0875 iterations 12
Cbc0038I Pass  27: suminf.    0.51983 (3) obj. -27.0875 iterations 4
Cbc0038I Pass  28: suminf.    1.45597 (3) obj. -27.0875 iterations 5
Cbc0038I Pass  29: suminf.    2.68745 (6) obj. -27.0875 iterations 14
Cbc0038I Pass  30: suminf.    1.17002 (4) obj. -27.0875 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 57 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.0923 - took 0.05 seconds
Cbc0012I Integer solution of -24.09235 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 123 rows 73 columns, reduced to 48 rows 28 columns
Cbc0031I 11 added rows had average density of 35.545455
Cbc0013I At root node, 11 cuts changed objective from -54.043262 to -45.368011 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6690 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1398 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 101 row cuts average 72.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -24.09235 best solution, best possible -45.367873 (0.67 seconds)
Cbc0004I Integer solution of -24.9186 found after 6558 iterations and 36 nodes (0.72 seconds)
Cbc0038I Full problem 123 rows 73 columns, reduced to 12 rows 12 columns
Cbc0001I Search completed - best objective -24.9186, took 6908 iterations and 46 nodes (0.74 seconds)
Cbc0032I Strong branching done 456 times (6284 iterations), fathomed 2 nodes and fixed 45 variables
Cbc0035I Maximum depth 10, 148 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 118 (-35) columns and 2069 (-1235) elements
Clp1000I sum of infeasibilities 1.43968e-07 - average 1.43968e-09, 35 fixed columns
Coin0506I Presolve 73 (-27) rows, 83 (-35) columns and 1032 (-1037) elements
Clp0006I 0  Obj 62.876379 Dual inf 6.6067997 (81)
Clp0014I Perturbing problem by 0.001% of 2.3029568 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 70.120529
Clp0000I Optimal - objective value 70.120529
Coin0511I After Postsolve, objective 70.120529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.120529
Clp0000I Optimal - objective value 70.120529
Clp0000I Optimal - objective value 70.120529
Clp0000I Optimal - objective value 70.120529
Coin0511I After Postsolve, objective 70.120529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.12052901 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 118 columns (118 integer (118 of which binary)) and 2091 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.069%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.24899
Cbc0038I Pass   1: suminf.    1.02032 (29) obj. -21.4667 iterations 17
Cbc0038I Pass   2: suminf.    1.02032 (29) obj. -21.4667 iterations 1
Cbc0038I Pass   3: suminf.    0.54104 (19) obj. -10.9944 iterations 10
Cbc0038I Solution found of 11.3417
Cbc0038I Rounding solution of 2.31283 is better than previous of 11.3417

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2.23691
Cbc0038I Pass   4: suminf.    1.02032 (29) obj. -21.4667 iterations 0
Cbc0038I Pass   5: suminf.    1.02032 (29) obj. -21.4667 iterations 1
Cbc0038I Pass   6: suminf.    0.75028 (2) obj. -2.23691 iterations 42
Cbc0038I Pass   7: suminf.    0.92308 (2) obj. -8.1484 iterations 1
Cbc0038I Pass   8: suminf.    0.99472 (8) obj. -2.23691 iterations 32
Cbc0038I Pass   9: suminf.    0.22139 (7) obj. -2.23691 iterations 6
Cbc0038I Pass  10: suminf.    1.21092 (10) obj. -2.23691 iterations 24
Cbc0038I Pass  11: suminf.    1.21092 (10) obj. -2.23691 iterations 0
Cbc0038I Pass  12: suminf.    1.56843 (6) obj. -2.23691 iterations 15
Cbc0038I Pass  13: suminf.    1.56843 (6) obj. -2.23691 iterations 0
Cbc0038I Pass  14: suminf.    1.28614 (5) obj. -2.23691 iterations 8
Cbc0038I Pass  15: suminf.    1.05960 (5) obj. -2.23691 iterations 2
Cbc0038I Pass  16: suminf.    1.16949 (5) obj. -2.23691 iterations 5
Cbc0038I Pass  17: suminf.    1.14811 (4) obj. -2.23691 iterations 4
Cbc0038I Pass  18: suminf.    1.56637 (12) obj. -2.23691 iterations 20
Cbc0038I Pass  19: suminf.    1.17184 (11) obj. -2.23691 iterations 9
Cbc0038I Pass  20: suminf.    1.62169 (4) obj. -2.23691 iterations 14
Cbc0038I Pass  21: suminf.    1.08432 (5) obj. -2.23691 iterations 4
Cbc0038I Pass  22: suminf.    1.08432 (5) obj. -2.23691 iterations 0
Cbc0038I Pass  23: suminf.    1.16949 (5) obj. -2.23691 iterations 3
Cbc0038I Pass  24: suminf.    1.14811 (4) obj. -2.23691 iterations 3
Cbc0038I Pass  25: suminf.    1.16949 (5) obj. -2.23691 iterations 3
Cbc0038I Pass  26: suminf.    1.79815 (15) obj. -2.23691 iterations 15
Cbc0038I Pass  27: suminf.    0.87284 (12) obj. -2.23691 iterations 3
Cbc0038I Pass  28: suminf.    1.61102 (5) obj. -2.23691 iterations 18
Cbc0038I Pass  29: suminf.    1.09180 (4) obj. -3.10299 iterations 5
Cbc0038I Pass  30: suminf.    0.54656 (5) obj. -2.23691 iterations 9
Cbc0038I Pass  31: suminf.    0.88085 (5) obj. -2.23691 iterations 2
Cbc0038I Pass  32: suminf.    1.94770 (10) obj. -2.23691 iterations 15
Cbc0038I Pass  33: suminf.    1.19195 (8) obj. -2.23691 iterations 5
Cbc0038I Rounding solution of -18.6259 is better than previous of 2.31283

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 118 columns, reduced to 45 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -18.6259 to -21.7857 (0.07 seconds)
Cbc0038I Round again with cutoff of -26.0653
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.95099 (39) obj. -26.0653 iterations 8
Cbc0038I Pass  34: suminf.    1.27794 (30) obj. -26.0653 iterations 2
Cbc0038I Pass  35: suminf.    2.15359 (20) obj. -26.0653 iterations 34
Cbc0038I Pass  36: suminf.    1.88484 (20) obj. -26.0653 iterations 4
Cbc0038I Pass  37: suminf.    7.05112 (23) obj. -26.0653 iterations 16
Cbc0038I Pass  38: suminf.    6.12106 (25) obj. -26.0653 iterations 6
Cbc0038I Pass  39: suminf.    6.12106 (25) obj. -26.0653 iterations 0
Cbc0038I Pass  40: suminf.    3.50287 (23) obj. -26.0653 iterations 6
Cbc0038I Pass  41: suminf.    1.99759 (22) obj. -26.0653 iterations 4
Cbc0038I Pass  42: suminf.    6.25442 (23) obj. -26.0653 iterations 11
Cbc0038I Pass  43: suminf.    2.10350 (24) obj. -26.0653 iterations 12
Cbc0038I Pass  44: suminf.    1.85962 (20) obj. -26.0653 iterations 3
Cbc0038I Pass  45: suminf.    6.40630 (21) obj. -26.0653 iterations 13
Cbc0038I Pass  46: suminf.    1.22209 (19) obj. -26.0653 iterations 6
Cbc0038I Pass  47: suminf.    1.22209 (19) obj. -26.0653 iterations 2
Cbc0038I Pass  48: suminf.    1.77496 (17) obj. -26.0653 iterations 15
Cbc0038I Pass  49: suminf.    1.62043 (17) obj. -26.0653 iterations 1
Cbc0038I Pass  50: suminf.    6.07692 (20) obj. -26.0653 iterations 10
Cbc0038I Pass  51: suminf.    1.41546 (18) obj. -26.0653 iterations 5
Cbc0038I Pass  52: suminf.    1.41546 (18) obj. -26.0653 iterations 2
Cbc0038I Pass  53: suminf.    1.77496 (17) obj. -26.0653 iterations 11
Cbc0038I Pass  54: suminf.    1.62043 (17) obj. -26.0653 iterations 1
Cbc0038I Pass  55: suminf.    6.07692 (20) obj. -26.0653 iterations 11
Cbc0038I Pass  56: suminf.    1.41546 (18) obj. -26.0653 iterations 5
Cbc0038I Pass  57: suminf.    1.41546 (18) obj. -26.0653 iterations 2
Cbc0038I Pass  58: suminf.    6.07692 (20) obj. -26.0653 iterations 10
Cbc0038I Pass  59: suminf.    1.50043 (20) obj. -26.0653 iterations 18
Cbc0038I Pass  60: suminf.    1.50043 (20) obj. -26.0653 iterations 0
Cbc0038I Pass  61: suminf.    1.77496 (18) obj. -26.0653 iterations 10
Cbc0038I Pass  62: suminf.    1.62792 (18) obj. -26.0653 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 118 columns, reduced to 40 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -21.7857 - took 0.05 seconds
Cbc0012I Integer solution of -21.78566 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 97 rows 118 columns, reduced to 22 rows 24 columns
Cbc0031I 52 added rows had average density of 23.057692
Cbc0013I At root node, 52 cuts changed objective from -43.183632 to -28.56311 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 1775 row cuts average 8.1 elements, 7 column cuts (10 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 223 row cuts average 81.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 84 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 9 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 173 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 274 row cuts average 67.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 84 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.78566 best solution, best possible -28.56311 (0.52 seconds)
Cbc0012I Integer solution of -23.7253 found by rounding after 639 iterations and 1 nodes (0.69 seconds)
Cbc0012I Integer solution of -24.9186 found by rounding after 640 iterations and 2 nodes (0.70 seconds)
Cbc0001I Search completed - best objective -24.9186, took 1228 iterations and 12 nodes (1.23 seconds)
Cbc0032I Strong branching done 218 times (4044 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       1.24

