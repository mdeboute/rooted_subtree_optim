Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 74 (-4) columns and 397 (-56) elements
Clp1000I sum of infeasibilities 5.06527e-06 - average 3.95724e-08, 12 fixed columns
Coin0506I Presolve 106 (-22) rows, 62 (-12) columns and 329 (-68) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 6.3377367 - largest nonzero change 0 ( 0%) - largest zero change 2.8691903e-05
Clp0000I Optimal - objective value 34.625749
Clp0000I Optimal - objective value 34.625749
Coin0511I After Postsolve, objective 34.625749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.625749
Clp0000I Optimal - objective value 34.625749
Clp0000I Optimal - objective value 34.625749
Coin0511I After Postsolve, objective 34.625749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.62574923 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 74 columns (73 integer (73 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.06518
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.30056 iterations 51
Cbc0038I Solution found of 5.30056
Cbc0038I Relaxing continuous gives 5.30056
Cbc0038I Rounding solution of 1.9585 is better than previous of 5.30056

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 1.9585 to -8.2129 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.8543
Cbc0038I Pass   2: suminf.    2.52762 (13) obj. -10.8543 iterations 17
Cbc0038I Pass   3: suminf.    1.96446 (9) obj. -10.8543 iterations 11
Cbc0038I Pass   4: suminf.    1.90929 (7) obj. -10.8543 iterations 2
Cbc0038I Pass   5: suminf.    1.88999 (5) obj. -10.8543 iterations 9
Cbc0038I Pass   6: suminf.    1.87300 (5) obj. -10.8543 iterations 3
Cbc0038I Pass   7: suminf.    2.36218 (6) obj. -10.8543 iterations 4
Cbc0038I Pass   8: suminf.    2.15621 (6) obj. -10.8543 iterations 3
Cbc0038I Pass   9: suminf.    2.00949 (7) obj. -10.8543 iterations 6
Cbc0038I Pass  10: suminf.    1.71595 (6) obj. -10.8543 iterations 7
Cbc0038I Pass  11: suminf.    2.12766 (7) obj. -10.8543 iterations 7
Cbc0038I Pass  12: suminf.    2.12766 (7) obj. -10.8543 iterations 0
Cbc0038I Pass  13: suminf.    2.00949 (7) obj. -10.8543 iterations 6
Cbc0038I Pass  14: suminf.    3.00542 (12) obj. -10.8543 iterations 25
Cbc0038I Pass  15: suminf.    1.92503 (5) obj. -10.8543 iterations 17
Cbc0038I Pass  16: suminf.    1.92503 (5) obj. -10.8543 iterations 0
Cbc0038I Pass  17: suminf.    1.46461 (4) obj. -10.8543 iterations 11
Cbc0038I Pass  18: suminf.    1.11038 (3) obj. -10.8543 iterations 5
Cbc0038I Pass  19: suminf.    1.54627 (5) obj. -10.8543 iterations 6
Cbc0038I Pass  20: suminf.    2.39551 (6) obj. -10.8543 iterations 5
Cbc0038I Pass  21: suminf.    1.73352 (7) obj. -10.8543 iterations 3
Cbc0038I Pass  22: suminf.    1.63561 (6) obj. -10.8543 iterations 1
Cbc0038I Pass  23: suminf.    1.63561 (6) obj. -10.8543 iterations 0
Cbc0038I Pass  24: suminf.    1.91469 (5) obj. -10.8543 iterations 7
Cbc0038I Pass  25: suminf.    1.91469 (5) obj. -10.8543 iterations 0
Cbc0038I Pass  26: suminf.    2.39551 (6) obj. -10.8543 iterations 4
Cbc0038I Pass  27: suminf.    1.73352 (7) obj. -10.8543 iterations 3
Cbc0038I Pass  28: suminf.    1.63561 (6) obj. -10.8543 iterations 1
Cbc0038I Pass  29: suminf.    1.63561 (6) obj. -10.8543 iterations 0
Cbc0038I Pass  30: suminf.    1.91469 (5) obj. -10.8543 iterations 7
Cbc0038I Pass  31: suminf.    1.91469 (5) obj. -10.8543 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -8.2129 - took 0.08 seconds
Cbc0012I Integer solution of -8.2129 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 82 rows 48 columns
Cbc0031I 30 added rows had average density of 41.566667
Cbc0013I At root node, 30 cuts changed objective from -34.625749 to -27.492267 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14182 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2535 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.2129 best solution, best possible -27.492267 (0.92 seconds)
Cbc0016I Integer solution of -8.47355 found by strong branching after 8234 iterations and 19 nodes (0.97 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 62 rows 39 columns
Cbc0012I Integer solution of -8.79389 found by rounding after 10199 iterations and 91 nodes (1.25 seconds)
Cbc0001I Search completed - best objective -8.793889999999998, took 10624 iterations and 100 nodes (1.26 seconds)
Cbc0032I Strong branching done 1124 times (17881 iterations), fathomed 12 nodes and fixed 50 variables
Cbc0035I Maximum depth 31, 215 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-61) rows, 111 (-41) columns and 1689 (-1614) elements
Clp1000I sum of infeasibilities 1.33925e-07 - average 1.44006e-09, 67 fixed columns
Coin0506I Presolve 31 (-62) rows, 44 (-67) columns and 146 (-1543) elements
Clp0006I 0  Obj -15.702244 Dual inf 0.65134751 (44)
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 3.5101067 - largest nonzero change 1.6460554e-05 ( 0.00051403249%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value -15.69471
Clp0000I Optimal - objective value -15.69471
Coin0511I After Postsolve, objective -15.69471, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -15.69471 Dual inf 56.021837 (38)
Clp0014I Perturbing problem by 0.001% of 1.9394436 - largest nonzero change 1.379343e-05 ( 0.00095415479%) - largest zero change 2.9864017e-05
Clp0000I Optimal - objective value 46.898147
Clp0000I Optimal - objective value 46.898147
Clp0000I Optimal - objective value 46.898147
Coin0511I After Postsolve, objective 46.898147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.89814732 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 113 columns (113 integer (113 of which binary)) and 1706 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.132%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.57377
Cbc0038I Pass   1: suminf.    1.73770 (24) obj. -21.6534 iterations 23
Cbc0038I Pass   2: suminf.    1.73770 (24) obj. -21.6534 iterations 1
Cbc0038I Pass   3: suminf.    0.52539 (11) obj. -6.23337 iterations 13
Cbc0038I Solution found of 8.05594
Cbc0038I Rounding solution of 4.99791 is better than previous of 8.05594

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 4.99791 to 3.51963 (0.04 seconds)
Cbc0038I Round again with cutoff of 0.0815523
Cbc0038I Pass   4: suminf.    1.73770 (24) obj. -21.6534 iterations 0
Cbc0038I Pass   5: suminf.    1.73770 (24) obj. -21.6534 iterations 1
Cbc0038I Pass   6: suminf.    0.52539 (11) obj. -6.23337 iterations 13
Cbc0038I Pass   7: suminf.    0.87635 (5) obj. 0.0815523 iterations 28
Cbc0038I Pass   8: suminf.    0.87635 (5) obj. 0.0815523 iterations 1
Cbc0038I Pass   9: suminf.    0.41903 (3) obj. 0.0815523 iterations 6
Cbc0038I Pass  10: suminf.    0.41903 (3) obj. 0.0815523 iterations 0
Cbc0038I Pass  11: suminf.    0.52193 (3) obj. 0.0815523 iterations 1
Cbc0038I Pass  12: suminf.    0.52193 (3) obj. 0.0815523 iterations 0
Cbc0038I Pass  13: suminf.    0.41903 (3) obj. 0.0815523 iterations 1
Cbc0038I Pass  14: suminf.    2.55349 (19) obj. 0.0815523 iterations 21
Cbc0038I Pass  15: suminf.    1.21007 (16) obj. 0.0815523 iterations 6
Cbc0038I Pass  16: suminf.    1.04478 (8) obj. 0.0815523 iterations 23
Cbc0038I Pass  17: suminf.    0.96805 (7) obj. 0.0815523 iterations 5
Cbc0038I Pass  18: suminf.    1.26249 (6) obj. 0.0815523 iterations 5
Cbc0038I Pass  19: suminf.    1.26249 (6) obj. 0.0815523 iterations 0
Cbc0038I Pass  20: suminf.    1.40857 (9) obj. 0.0815523 iterations 9
Cbc0038I Pass  21: suminf.    1.36014 (11) obj. 0.0815523 iterations 2
Cbc0038I Pass  22: suminf.    0.93526 (5) obj. 0.0815523 iterations 7
Cbc0038I Pass  23: suminf.    0.83429 (8) obj. 0.0815523 iterations 6
Cbc0038I Pass  24: suminf.    1.57406 (9) obj. 0.0815523 iterations 8
Cbc0038I Pass  25: suminf.    1.35321 (11) obj. 0.0815523 iterations 1
Cbc0038I Pass  26: suminf.    1.04222 (8) obj. 0.0815523 iterations 14
Cbc0038I Pass  27: suminf.    0.90835 (6) obj. 0.0815523 iterations 4
Cbc0038I Pass  28: suminf.    1.41407 (6) obj. 0.0815523 iterations 8
Cbc0038I Pass  29: suminf.    0.83429 (8) obj. 0.0815523 iterations 3
Cbc0038I Pass  30: suminf.    1.57406 (9) obj. 0.0815523 iterations 6
Cbc0038I Pass  31: suminf.    1.35321 (11) obj. 0.0815523 iterations 1
Cbc0038I Pass  32: suminf.    1.04222 (8) obj. 0.0815523 iterations 14
Cbc0038I Pass  33: suminf.    0.90835 (6) obj. 0.0815523 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 3.51963 to -6.87894 (0.08 seconds)
Cbc0038I Round again with cutoff of -11.6753
Cbc0038I Pass  33: suminf.    1.73770 (24) obj. -21.6534 iterations 0
Cbc0038I Pass  34: suminf.    1.73770 (24) obj. -21.6534 iterations 1
Cbc0038I Pass  35: suminf.    2.58649 (19) obj. -11.6753 iterations 44
Cbc0038I Pass  36: suminf.    2.47770 (17) obj. -11.6753 iterations 2
Cbc0038I Pass  37: suminf.    1.83570 (18) obj. -11.6753 iterations 4
Cbc0038I Pass  38: suminf.    2.62306 (16) obj. -11.6753 iterations 22
Cbc0038I Pass  39: suminf.    2.62306 (16) obj. -11.6753 iterations 2
Cbc0038I Pass  40: suminf.    2.54508 (16) obj. -11.6753 iterations 7
Cbc0038I Pass  41: suminf.    2.54508 (16) obj. -11.6753 iterations 3
Cbc0038I Pass  42: suminf.    2.17000 (16) obj. -11.6753 iterations 4
Cbc0038I Pass  43: suminf.    1.89658 (19) obj. -11.6753 iterations 6
Cbc0038I Pass  44: suminf.    1.83209 (15) obj. -11.6753 iterations 8
Cbc0038I Pass  45: suminf.    2.72074 (17) obj. -11.6753 iterations 12
Cbc0038I Pass  46: suminf.    2.08901 (19) obj. -11.6753 iterations 4
Cbc0038I Pass  47: suminf.    2.74305 (17) obj. -11.6753 iterations 8
Cbc0038I Pass  48: suminf.    2.62306 (16) obj. -11.6753 iterations 4
Cbc0038I Pass  49: suminf.    2.54508 (16) obj. -11.6753 iterations 7
Cbc0038I Pass  50: suminf.    2.54508 (16) obj. -11.6753 iterations 2
Cbc0038I Pass  51: suminf.    2.62306 (16) obj. -11.6753 iterations 3
Cbc0038I Pass  52: suminf.    2.55850 (19) obj. -11.6753 iterations 17
Cbc0038I Pass  53: suminf.    2.55850 (19) obj. -11.6753 iterations 4
Cbc0038I Pass  54: suminf.    2.25390 (16) obj. -11.6753 iterations 10
Cbc0038I Pass  55: suminf.    1.52444 (15) obj. -11.7441 iterations 2
Cbc0038I Pass  56: suminf.    3.05325 (23) obj. -11.6753 iterations 21
Cbc0038I Pass  57: suminf.    1.73452 (20) obj. -14.337 iterations 6
Cbc0038I Pass  58: suminf.    1.92330 (17) obj. -11.6753 iterations 13
Cbc0038I Pass  59: suminf.    1.70100 (17) obj. -11.6753 iterations 5
Cbc0038I Pass  60: suminf.    2.19986 (16) obj. -11.6753 iterations 12
Cbc0038I Pass  61: suminf.    2.08465 (17) obj. -11.6753 iterations 5
Cbc0038I Pass  62: suminf.    2.19623 (15) obj. -11.6753 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 23 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -6.87894 - took 0.05 seconds
Cbc0012I Integer solution of -6.87894 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 6 rows 10 columns
Cbc0031I 56 added rows had average density of 20.767857
Cbc0013I At root node, 56 cuts changed objective from -30.860247 to -11.204585 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13078 row cuts average 8.9 elements, 1 column cuts (1 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1104 row cuts average 101.6 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 447 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1069 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 312 row cuts average 57.9 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 167 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.694 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.87894 best solution, best possible -11.204585 (2.47 seconds)
Cbc0010I After 8 nodes, 8 on tree, -6.87894 best solution, best possible -11.204585 (3.21 seconds)
Cbc0016I Integer solution of -8.2129 found by strong branching after 5241 iterations and 21 nodes (3.69 seconds)
Cbc0012I Integer solution of -8.32875 found by DiveCoefficient after 5622 iterations and 31 nodes (3.90 seconds)
Cbc0012I Integer solution of -8.47355 found by DiveCoefficient after 5641 iterations and 32 nodes (3.96 seconds)
Cbc0010I After 32 nodes, 5 on tree, -8.47355 best solution, best possible -11.204585 (3.96 seconds)
Cbc0012I Integer solution of -8.79389 found by rounding after 5717 iterations and 40 nodes (4.10 seconds)
Cbc0001I Search completed - best objective -8.793889999999998, took 5995 iterations and 42 nodes (4.21 seconds)
Cbc0032I Strong branching done 574 times (10925 iterations), fathomed 5 nodes and fixed 4 variables
Cbc0035I Maximum depth 13, 68 variables fixed on reduced cost
Total time (CPU seconds):       2.94   (Wallclock seconds):       4.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 74 (-4) columns and 397 (-56) elements
Clp1000I sum of infeasibilities 5.06527e-06 - average 3.95724e-08, 12 fixed columns
Coin0506I Presolve 106 (-22) rows, 62 (-12) columns and 329 (-68) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 6.3377367 - largest nonzero change 0 ( 0%) - largest zero change 2.8691903e-05
Clp0000I Optimal - objective value 34.625749
Clp0000I Optimal - objective value 34.625749
Coin0511I After Postsolve, objective 34.625749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.625749
Clp0000I Optimal - objective value 34.625749
Clp0000I Optimal - objective value 34.625749
Coin0511I After Postsolve, objective 34.625749, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.62574923 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 74 columns (73 integer (73 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 9.06518
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.30056 iterations 51
Cbc0038I Solution found of 5.30056
Cbc0038I Relaxing continuous gives 5.30056
Cbc0038I Rounding solution of 1.9585 is better than previous of 5.30056

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 1.9585 to -8.2129 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.8543
Cbc0038I Pass   2: suminf.    2.52762 (13) obj. -10.8543 iterations 17
Cbc0038I Pass   3: suminf.    1.96446 (9) obj. -10.8543 iterations 11
Cbc0038I Pass   4: suminf.    1.90929 (7) obj. -10.8543 iterations 2
Cbc0038I Pass   5: suminf.    1.88999 (5) obj. -10.8543 iterations 9
Cbc0038I Pass   6: suminf.    1.87300 (5) obj. -10.8543 iterations 3
Cbc0038I Pass   7: suminf.    2.36218 (6) obj. -10.8543 iterations 4
Cbc0038I Pass   8: suminf.    2.15621 (6) obj. -10.8543 iterations 3
Cbc0038I Pass   9: suminf.    2.00949 (7) obj. -10.8543 iterations 6
Cbc0038I Pass  10: suminf.    1.71595 (6) obj. -10.8543 iterations 7
Cbc0038I Pass  11: suminf.    2.12766 (7) obj. -10.8543 iterations 7
Cbc0038I Pass  12: suminf.    2.12766 (7) obj. -10.8543 iterations 0
Cbc0038I Pass  13: suminf.    2.00949 (7) obj. -10.8543 iterations 6
Cbc0038I Pass  14: suminf.    3.00542 (12) obj. -10.8543 iterations 25
Cbc0038I Pass  15: suminf.    1.92503 (5) obj. -10.8543 iterations 17
Cbc0038I Pass  16: suminf.    1.92503 (5) obj. -10.8543 iterations 0
Cbc0038I Pass  17: suminf.    1.46461 (4) obj. -10.8543 iterations 11
Cbc0038I Pass  18: suminf.    1.11038 (3) obj. -10.8543 iterations 5
Cbc0038I Pass  19: suminf.    1.54627 (5) obj. -10.8543 iterations 6
Cbc0038I Pass  20: suminf.    2.39551 (6) obj. -10.8543 iterations 5
Cbc0038I Pass  21: suminf.    1.73352 (7) obj. -10.8543 iterations 3
Cbc0038I Pass  22: suminf.    1.63561 (6) obj. -10.8543 iterations 1
Cbc0038I Pass  23: suminf.    1.63561 (6) obj. -10.8543 iterations 0
Cbc0038I Pass  24: suminf.    1.91469 (5) obj. -10.8543 iterations 7
Cbc0038I Pass  25: suminf.    1.91469 (5) obj. -10.8543 iterations 0
Cbc0038I Pass  26: suminf.    2.39551 (6) obj. -10.8543 iterations 4
Cbc0038I Pass  27: suminf.    1.73352 (7) obj. -10.8543 iterations 3
Cbc0038I Pass  28: suminf.    1.63561 (6) obj. -10.8543 iterations 1
Cbc0038I Pass  29: suminf.    1.63561 (6) obj. -10.8543 iterations 0
Cbc0038I Pass  30: suminf.    1.91469 (5) obj. -10.8543 iterations 7
Cbc0038I Pass  31: suminf.    1.91469 (5) obj. -10.8543 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -8.2129 - took 0.09 seconds
Cbc0012I Integer solution of -8.2129 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 82 rows 48 columns
Cbc0031I 30 added rows had average density of 41.566667
Cbc0013I At root node, 30 cuts changed objective from -34.625749 to -27.492267 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14182 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2535 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.2129 best solution, best possible -27.492267 (1.03 seconds)
Cbc0016I Integer solution of -8.47355 found by strong branching after 8234 iterations and 19 nodes (1.08 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 62 rows 39 columns
Cbc0012I Integer solution of -8.79389 found by rounding after 10199 iterations and 91 nodes (1.40 seconds)
Cbc0001I Search completed - best objective -8.793889999999998, took 10624 iterations and 100 nodes (1.41 seconds)
Cbc0032I Strong branching done 1124 times (17881 iterations), fathomed 12 nodes and fixed 50 variables
Cbc0035I Maximum depth 31, 215 variables fixed on reduced cost
Total time (CPU seconds):       1.37   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 111 (-42) columns and 1689 (-1615) elements
Clp1000I sum of infeasibilities 1.33925e-07 - average 1.44006e-09, 67 fixed columns
Coin0506I Presolve 31 (-62) rows, 44 (-67) columns and 146 (-1543) elements
Clp0006I 0  Obj -15.702244 Dual inf 0.65134751 (44)
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 3.5101067 - largest nonzero change 1.6460554e-05 ( 0.00051403249%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value -15.69471
Clp0000I Optimal - objective value -15.69471
Coin0511I After Postsolve, objective -15.69471, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -15.69471 Dual inf 56.021837 (38)
Clp0014I Perturbing problem by 0.001% of 1.9394436 - largest nonzero change 1.379343e-05 ( 0.00095415479%) - largest zero change 2.9864017e-05
Clp0000I Optimal - objective value 46.898147
Clp0000I Optimal - objective value 46.898147
Clp0000I Optimal - objective value 46.898147
Coin0511I After Postsolve, objective 46.898147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.89814732 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 113 columns (113 integer (113 of which binary)) and 1706 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.132%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.57377
Cbc0038I Pass   1: suminf.    1.73770 (24) obj. -21.6534 iterations 23
Cbc0038I Pass   2: suminf.    1.73770 (24) obj. -21.6534 iterations 1
Cbc0038I Pass   3: suminf.    0.52539 (11) obj. -6.23337 iterations 13
Cbc0038I Solution found of 8.05594
Cbc0038I Rounding solution of 4.99791 is better than previous of 8.05594

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 4.99791 to 3.51963 (0.04 seconds)
Cbc0038I Round again with cutoff of 0.0815523
Cbc0038I Pass   4: suminf.    1.73770 (24) obj. -21.6534 iterations 0
Cbc0038I Pass   5: suminf.    1.73770 (24) obj. -21.6534 iterations 1
Cbc0038I Pass   6: suminf.    0.52539 (11) obj. -6.23337 iterations 13
Cbc0038I Pass   7: suminf.    0.87635 (5) obj. 0.0815523 iterations 28
Cbc0038I Pass   8: suminf.    0.87635 (5) obj. 0.0815523 iterations 1
Cbc0038I Pass   9: suminf.    0.41903 (3) obj. 0.0815523 iterations 6
Cbc0038I Pass  10: suminf.    0.41903 (3) obj. 0.0815523 iterations 0
Cbc0038I Pass  11: suminf.    0.52193 (3) obj. 0.0815523 iterations 1
Cbc0038I Pass  12: suminf.    0.52193 (3) obj. 0.0815523 iterations 0
Cbc0038I Pass  13: suminf.    0.41903 (3) obj. 0.0815523 iterations 1
Cbc0038I Pass  14: suminf.    2.55349 (19) obj. 0.0815523 iterations 21
Cbc0038I Pass  15: suminf.    1.21007 (16) obj. 0.0815523 iterations 6
Cbc0038I Pass  16: suminf.    1.04478 (8) obj. 0.0815523 iterations 23
Cbc0038I Pass  17: suminf.    0.96805 (7) obj. 0.0815523 iterations 5
Cbc0038I Pass  18: suminf.    1.26249 (6) obj. 0.0815523 iterations 5
Cbc0038I Pass  19: suminf.    1.26249 (6) obj. 0.0815523 iterations 0
Cbc0038I Pass  20: suminf.    1.40857 (9) obj. 0.0815523 iterations 9
Cbc0038I Pass  21: suminf.    1.36014 (11) obj. 0.0815523 iterations 2
Cbc0038I Pass  22: suminf.    0.93526 (5) obj. 0.0815523 iterations 7
Cbc0038I Pass  23: suminf.    0.83429 (8) obj. 0.0815523 iterations 6
Cbc0038I Pass  24: suminf.    1.57406 (9) obj. 0.0815523 iterations 8
Cbc0038I Pass  25: suminf.    1.35321 (11) obj. 0.0815523 iterations 1
Cbc0038I Pass  26: suminf.    1.04222 (8) obj. 0.0815523 iterations 14
Cbc0038I Pass  27: suminf.    0.90835 (6) obj. 0.0815523 iterations 4
Cbc0038I Pass  28: suminf.    1.41407 (6) obj. 0.0815523 iterations 8
Cbc0038I Pass  29: suminf.    0.83429 (8) obj. 0.0815523 iterations 3
Cbc0038I Pass  30: suminf.    1.57406 (9) obj. 0.0815523 iterations 6
Cbc0038I Pass  31: suminf.    1.35321 (11) obj. 0.0815523 iterations 1
Cbc0038I Pass  32: suminf.    1.04222 (8) obj. 0.0815523 iterations 14
Cbc0038I Pass  33: suminf.    0.90835 (6) obj. 0.0815523 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 3.51963 to -6.87894 (0.08 seconds)
Cbc0038I Round again with cutoff of -11.6753
Cbc0038I Pass  33: suminf.    1.73770 (24) obj. -21.6534 iterations 0
Cbc0038I Pass  34: suminf.    1.73770 (24) obj. -21.6534 iterations 1
Cbc0038I Pass  35: suminf.    2.58649 (19) obj. -11.6753 iterations 44
Cbc0038I Pass  36: suminf.    2.47770 (17) obj. -11.6753 iterations 2
Cbc0038I Pass  37: suminf.    1.83570 (18) obj. -11.6753 iterations 4
Cbc0038I Pass  38: suminf.    2.62306 (16) obj. -11.6753 iterations 22
Cbc0038I Pass  39: suminf.    2.62306 (16) obj. -11.6753 iterations 2
Cbc0038I Pass  40: suminf.    2.54508 (16) obj. -11.6753 iterations 7
Cbc0038I Pass  41: suminf.    2.54508 (16) obj. -11.6753 iterations 3
Cbc0038I Pass  42: suminf.    2.17000 (16) obj. -11.6753 iterations 4
Cbc0038I Pass  43: suminf.    1.89658 (19) obj. -11.6753 iterations 6
Cbc0038I Pass  44: suminf.    1.83209 (15) obj. -11.6753 iterations 8
Cbc0038I Pass  45: suminf.    2.72074 (17) obj. -11.6753 iterations 12
Cbc0038I Pass  46: suminf.    2.08901 (19) obj. -11.6753 iterations 4
Cbc0038I Pass  47: suminf.    2.74305 (17) obj. -11.6753 iterations 8
Cbc0038I Pass  48: suminf.    2.62306 (16) obj. -11.6753 iterations 4
Cbc0038I Pass  49: suminf.    2.54508 (16) obj. -11.6753 iterations 7
Cbc0038I Pass  50: suminf.    2.54508 (16) obj. -11.6753 iterations 2
Cbc0038I Pass  51: suminf.    2.62306 (16) obj. -11.6753 iterations 3
Cbc0038I Pass  52: suminf.    2.55850 (19) obj. -11.6753 iterations 17
Cbc0038I Pass  53: suminf.    2.55850 (19) obj. -11.6753 iterations 4
Cbc0038I Pass  54: suminf.    2.25390 (16) obj. -11.6753 iterations 10
Cbc0038I Pass  55: suminf.    1.52444 (15) obj. -11.7441 iterations 2
Cbc0038I Pass  56: suminf.    3.05325 (23) obj. -11.6753 iterations 21
Cbc0038I Pass  57: suminf.    1.73452 (20) obj. -14.337 iterations 6
Cbc0038I Pass  58: suminf.    1.92330 (17) obj. -11.6753 iterations 13
Cbc0038I Pass  59: suminf.    1.70100 (17) obj. -11.6753 iterations 5
Cbc0038I Pass  60: suminf.    2.19986 (16) obj. -11.6753 iterations 12
Cbc0038I Pass  61: suminf.    2.08465 (17) obj. -11.6753 iterations 5
Cbc0038I Pass  62: suminf.    2.19623 (15) obj. -11.6753 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 23 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -6.87894 - took 0.05 seconds
Cbc0012I Integer solution of -6.87894 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 6 rows 10 columns
Cbc0031I 56 added rows had average density of 20.767857
Cbc0013I At root node, 56 cuts changed objective from -30.860247 to -11.204585 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13078 row cuts average 8.9 elements, 1 column cuts (1 active)  in 0.195 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1104 row cuts average 101.6 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 447 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1069 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 312 row cuts average 57.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 167 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.917 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.87894 best solution, best possible -11.204585 (3.29 seconds)
Cbc0010I After 4 nodes, 5 on tree, -6.87894 best solution, best possible -11.204585 (4.06 seconds)
Cbc0010I After 13 nodes, 8 on tree, -6.87894 best solution, best possible -11.204585 (4.85 seconds)
Cbc0016I Integer solution of -8.2129 found by strong branching after 5241 iterations and 21 nodes (5.31 seconds)
Cbc0012I Integer solution of -8.32875 found by DiveCoefficient after 5622 iterations and 31 nodes (5.65 seconds)
Cbc0010I After 31 nodes, 4 on tree, -8.32875 best solution, best possible -11.204585 (5.65 seconds)
Cbc0012I Integer solution of -8.47355 found by DiveCoefficient after 5641 iterations and 32 nodes (5.76 seconds)
Cbc0012I Integer solution of -8.79389 found by rounding after 5717 iterations and 40 nodes (6.02 seconds)
Cbc0001I Search completed - best objective -8.793889999999998, took 5995 iterations and 42 nodes (6.18 seconds)
Cbc0032I Strong branching done 574 times (10925 iterations), fathomed 5 nodes and fixed 4 variables
Cbc0035I Maximum depth 13, 68 variables fixed on reduced cost
Total time (CPU seconds):       4.05   (Wallclock seconds):       6.20

