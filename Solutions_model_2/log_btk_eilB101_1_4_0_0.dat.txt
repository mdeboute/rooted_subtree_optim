Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 176 (-29) rows, 98 (-5) columns and 541 (-62) elements
Clp1000I sum of infeasibilities 4.12091e-05 - average 2.34143e-07, 20 fixed columns
Coin0506I Presolve 137 (-39) rows, 77 (-21) columns and 421 (-120) elements
Clp0029I End of values pass after 77 iterations
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Coin0511I After Postsolve, objective 42.057596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Coin0511I After Postsolve, objective 42.057596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.0575964 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 176 rows, 98 columns (97 integer (97 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.989%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 7.34824
Cbc0038I Solution found of 3.09106
Cbc0038I Relaxing continuous gives -3.40254
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 92 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -3.40254 to -14.6389 (0.07 seconds)
Cbc0038I Round again with cutoff of -17.3809
Cbc0038I Pass   1: suminf.    2.17069 (38) obj. -17.3809 iterations 63
Cbc0038I Pass   2: suminf.    1.53534 (4) obj. -17.3809 iterations 39
Cbc0038I Pass   3: suminf.    1.53534 (4) obj. -17.3809 iterations 0
Cbc0038I Pass   4: suminf.    0.88026 (3) obj. -17.3809 iterations 13
Cbc0038I Pass   5: suminf.    0.51454 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   6: suminf.    1.30838 (3) obj. -17.3809 iterations 5
Cbc0038I Pass   7: suminf.    0.87472 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   8: suminf.    0.59809 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   9: suminf.    1.12870 (6) obj. -17.3809 iterations 12
Cbc0038I Pass  10: suminf.    1.12870 (6) obj. -17.3809 iterations 8
Cbc0038I Pass  11: suminf.    1.37948 (5) obj. -17.3809 iterations 21
Cbc0038I Pass  12: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Pass  13: suminf.    0.76711 (3) obj. -17.3809 iterations 2
Cbc0038I Pass  14: suminf.    1.00441 (3) obj. -17.3809 iterations 6
Cbc0038I Pass  15: suminf.    0.96500 (4) obj. -17.3809 iterations 1
Cbc0038I Pass  16: suminf.    2.24782 (6) obj. -17.3809 iterations 11
Cbc0038I Pass  17: suminf.    2.40861 (6) obj. -17.3809 iterations 9
Cbc0038I Pass  18: suminf.    2.03210 (6) obj. -17.3809 iterations 5
Cbc0038I Pass  19: suminf.    1.38882 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  20: suminf.    1.37948 (5) obj. -17.3809 iterations 4
Cbc0038I Pass  21: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Pass  22: suminf.    0.76711 (3) obj. -17.3809 iterations 2
Cbc0038I Pass  23: suminf.    1.00441 (3) obj. -17.3809 iterations 7
Cbc0038I Pass  24: suminf.    0.96500 (4) obj. -17.3809 iterations 1
Cbc0038I Pass  25: suminf.    2.24782 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  26: suminf.    2.40861 (6) obj. -17.3809 iterations 6
Cbc0038I Pass  27: suminf.    2.03210 (6) obj. -17.3809 iterations 6
Cbc0038I Pass  28: suminf.    1.38882 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  29: suminf.    1.37948 (5) obj. -17.3809 iterations 4
Cbc0038I Pass  30: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Rounding solution of -15.0469 is better than previous of -14.6389

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -15.0469 to -15.1317 (0.13 seconds)
Cbc0038I Round again with cutoff of -22.3162
Cbc0038I Pass  30: suminf.    2.93710 (38) obj. -22.3162 iterations 0
Cbc0038I Pass  31: suminf.    1.63761 (7) obj. -22.3162 iterations 38
Cbc0038I Pass  32: suminf.    1.61518 (7) obj. -22.3162 iterations 7
Cbc0038I Pass  33: suminf.    1.66357 (6) obj. -22.3162 iterations 18
Cbc0038I Pass  34: suminf.    1.32145 (5) obj. -22.3162 iterations 3
Cbc0038I Pass  35: suminf.    1.90711 (5) obj. -22.3162 iterations 6
Cbc0038I Pass  36: suminf.    1.36670 (4) obj. -22.3162 iterations 6
Cbc0038I Pass  37: suminf.    4.67512 (21) obj. -22.3162 iterations 41
Cbc0038I Pass  38: suminf.    2.03569 (8) obj. -22.3162 iterations 38
Cbc0038I Pass  39: suminf.    1.89875 (7) obj. -22.3162 iterations 1
Cbc0038I Pass  40: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  41: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  42: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  43: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  44: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I Pass  45: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  46: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  47: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  48: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  49: suminf.    1.89875 (7) obj. -22.3162 iterations 10
Cbc0038I Pass  50: suminf.    2.24492 (9) obj. -22.3162 iterations 13
Cbc0038I Pass  51: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  52: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  53: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  54: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I Pass  55: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  56: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  57: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  58: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  59: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 123 rows 69 columns - 4 fixed gives 105, 65 - ok now
Cbc0038I Full problem 176 rows 98 columns, reduced to 105 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -15.1317 - took 0.13 seconds
Cbc0012I Integer solution of -15.13175 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 93 rows 53 columns
Cbc0031I 29 added rows had average density of 65.689655
Cbc0013I At root node, 29 cuts changed objective from -42.057596 to -36.646849 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18634 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2772 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.13175 best solution, best possible -36.646849 (1.54 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 39 rows 27 columns
Cbc0004I Integer solution of -15.17182 found after 12329 iterations and 69 nodes (1.90 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 9 rows 9 columns
Cbc0001I Search completed - best objective -15.17182, took 14019 iterations and 114 nodes (2.00 seconds)
Cbc0032I Strong branching done 1134 times (22458 iterations), fathomed 7 nodes and fixed 75 variables
Cbc0035I Maximum depth 32, 229 variables fixed on reduced cost
Total time (CPU seconds):       1.94   (Wallclock seconds):       2.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-81) rows, 141 (-61) columns and 2515 (-3138) elements
Clp1000I sum of infeasibilities 6.64746e-08 - average 5.40444e-10, 22 fixed columns
Coin0506I Presolve 105 (-18) rows, 119 (-22) columns and 1961 (-554) elements
Clp0006I 0  Obj 43.251534 Dual inf 10.404447 (118)
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 1.4578241 - largest nonzero change 1.5006412e-05 ( 0.0012557832%) - largest zero change 2.9090321e-05
Clp0000I Optimal - objective value 54.852617
Clp0000I Optimal - objective value 54.852617
Coin0511I After Postsolve, objective 54.852617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.852617
Clp0000I Optimal - objective value 54.852617
Clp0000I Optimal - objective value 54.852617
Clp0000I Optimal - objective value 54.852617
Coin0511I After Postsolve, objective 54.852617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.85261737 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 141 columns (141 integer (141 of which binary)) and 2528 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.912%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.22189
Cbc0038I Pass   1: suminf.    1.56292 (34) obj. -28.357 iterations 25
Cbc0038I Pass   2: suminf.    1.56292 (34) obj. -28.357 iterations 2
Cbc0038I Pass   3: suminf.    0.23421 (7) obj. 10.6342 iterations 27
Cbc0038I Solution found of 17.4
Cbc0038I Rounding solution of 4.63936 is better than previous of 17.4

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 4.63936 to 2.80386 (0.04 seconds)
Cbc0038I Round again with cutoff of -1.98139
Cbc0038I Pass   4: suminf.    1.56292 (34) obj. -28.357 iterations 0
Cbc0038I Pass   5: suminf.    1.56292 (34) obj. -28.357 iterations 2
Cbc0038I Pass   6: suminf.    0.54358 (10) obj. -1.98139 iterations 28
Cbc0038I Pass   7: suminf.    0.54358 (10) obj. -1.98139 iterations 0
Cbc0038I Pass   8: suminf.    0.61521 (7) obj. -1.98139 iterations 27
Cbc0038I Pass   9: suminf.    0.59522 (5) obj. -1.98139 iterations 33
Cbc0038I Pass  10: suminf.    0.40302 (6) obj. -1.98139 iterations 5
Cbc0038I Pass  11: suminf.    1.55497 (11) obj. -1.98139 iterations 19
Cbc0038I Pass  12: suminf.    1.12924 (8) obj. -1.98139 iterations 9
Cbc0038I Pass  13: suminf.    1.07823 (7) obj. -1.98139 iterations 16
Cbc0038I Pass  14: suminf.    0.84930 (7) obj. -1.98139 iterations 5
Cbc0038I Pass  15: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  16: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  17: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  18: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I Pass  19: suminf.    0.84930 (7) obj. -1.98139 iterations 8
Cbc0038I Pass  20: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  21: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  22: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  23: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I Pass  24: suminf.    0.84930 (7) obj. -1.98139 iterations 8
Cbc0038I Pass  25: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  26: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  27: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  28: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I Pass  29: suminf.    0.84930 (7) obj. -1.98139 iterations 8
Cbc0038I Pass  30: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  31: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  32: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  33: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 2.80386 to 1.9446 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.5947
Cbc0038I Pass  33: suminf.    1.56292 (34) obj. -28.357 iterations 0
Cbc0038I Pass  34: suminf.    1.56292 (34) obj. -28.357 iterations 2
Cbc0038I Pass  35: suminf.    1.08260 (22) obj. -10.5947 iterations 14
Cbc0038I Pass  36: suminf.    2.01819 (12) obj. -10.5947 iterations 41
Cbc0038I Pass  37: suminf.    1.34296 (10) obj. -10.5947 iterations 10
Cbc0038I Pass  38: suminf.    1.34296 (10) obj. -10.5947 iterations 1
Cbc0038I Pass  39: suminf.    1.57825 (7) obj. -10.5947 iterations 12
Cbc0038I Pass  40: suminf.    1.09209 (6) obj. -10.9841 iterations 2
Cbc0038I Pass  41: suminf.    0.99767 (7) obj. -10.5947 iterations 8
Cbc0038I Pass  42: suminf.    1.69148 (8) obj. -10.5947 iterations 8
Cbc0038I Pass  43: suminf.    1.10553 (6) obj. -10.5947 iterations 6
Cbc0038I Pass  44: suminf.    1.30377 (9) obj. -10.5947 iterations 7
Cbc0038I Pass  45: suminf.    1.16429 (9) obj. -11.0131 iterations 2
Cbc0038I Pass  46: suminf.    2.14654 (11) obj. -10.5947 iterations 18
Cbc0038I Pass  47: suminf.    1.32508 (11) obj. -10.5947 iterations 4
Cbc0038I Pass  48: suminf.    1.80544 (11) obj. -10.5947 iterations 14
Cbc0038I Pass  49: suminf.    1.72892 (9) obj. -10.5947 iterations 3
Cbc0038I Pass  50: suminf.    1.57555 (10) obj. -10.5947 iterations 12
Cbc0038I Pass  51: suminf.    1.44772 (12) obj. -10.5947 iterations 9
Cbc0038I Pass  52: suminf.    1.63361 (8) obj. -10.5947 iterations 11
Cbc0038I Pass  53: suminf.    1.37791 (10) obj. -10.5947 iterations 10
Cbc0038I Pass  54: suminf.    1.66953 (9) obj. -10.5947 iterations 11
Cbc0038I Pass  55: suminf.    2.42222 (19) obj. -10.5947 iterations 33
Cbc0038I Pass  56: suminf.    1.87174 (19) obj. -13.6639 iterations 11
Cbc0038I Pass  57: suminf.    1.24438 (18) obj. -10.5947 iterations 6
Cbc0038I Pass  58: suminf.    1.63361 (8) obj. -10.5947 iterations 26
Cbc0038I Pass  59: suminf.    1.37791 (10) obj. -10.5947 iterations 10
Cbc0038I Pass  60: suminf.    1.66953 (9) obj. -10.5947 iterations 12
Cbc0038I Pass  61: suminf.    1.44772 (12) obj. -10.5947 iterations 11
Cbc0038I Pass  62: suminf.    1.63361 (8) obj. -10.5947 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 1.9446 - took 0.05 seconds
Cbc0012I Integer solution of 1.9446 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 20 rows 25 columns
Cbc0031I 70 added rows had average density of 31.1
Cbc0013I At root node, 70 cuts changed objective from -45.047732 to -24.99383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26956 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1717 row cuts average 134.7 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 89 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1619 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 310 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 768 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 303 row cuts average 88.4 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.400 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.9446 best solution, best possible -24.99383 (2.64 seconds)
Cbc0012I Integer solution of -5.5857449 found by rounding after 9114 iterations and 1 nodes (2.77 seconds)
Cbc0012I Integer solution of -10.3737 found by rounding after 9707 iterations and 2 nodes (3.04 seconds)
Cbc0012I Integer solution of -12.23088 found by rounding after 9849 iterations and 3 nodes (3.07 seconds)
Cbc0012I Integer solution of -14.63892 found by rounding after 9926 iterations and 5 nodes (3.09 seconds)
Cbc0016I Integer solution of -15.17182 found by strong branching after 9991 iterations and 10 nodes (3.12 seconds)
Cbc0010I After 19 nodes, 2 on tree, -15.17182 best solution, best possible -24.99383 (3.44 seconds)
Cbc0010I After 29 nodes, 5 on tree, -15.17182 best solution, best possible -24.99383 (4.17 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 66 rows 80 columns
Cbc0010I After 52 nodes, 3 on tree, -15.17182 best solution, best possible -24.539501 (4.91 seconds)
Cbc0010I After 58 nodes, 7 on tree, -15.17182 best solution, best possible -24.539501 (5.62 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 72 rows 84 columns
Cbc0010I After 92 nodes, 1 on tree, -15.17182 best solution, best possible -21.031615 (6.99 seconds)
Cbc0010I After 100 nodes, 5 on tree, -15.17182 best solution, best possible -21.031615 (7.70 seconds)
Cbc0010I After 116 nodes, 5 on tree, -15.17182 best solution, best possible -20.796424 (8.41 seconds)
Cbc0010I After 124 nodes, 3 on tree, -15.17182 best solution, best possible -20.796424 (9.11 seconds)
Cbc0001I Search completed - best objective -15.17182, took 20230 iterations and 158 nodes (9.66 seconds)
Cbc0032I Strong branching done 2114 times (53678 iterations), fathomed 14 nodes and fixed 5 variables
Cbc0035I Maximum depth 18, 369 variables fixed on reduced cost
Total time (CPU seconds):       9.24   (Wallclock seconds):       9.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 176 (-29) rows, 98 (-5) columns and 541 (-62) elements
Clp1000I sum of infeasibilities 4.12091e-05 - average 2.34143e-07, 20 fixed columns
Coin0506I Presolve 137 (-39) rows, 77 (-21) columns and 421 (-120) elements
Clp0029I End of values pass after 77 iterations
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Coin0511I After Postsolve, objective 42.057596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Clp0000I Optimal - objective value 42.057596
Coin0511I After Postsolve, objective 42.057596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.0575964 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 176 rows, 98 columns (97 integer (97 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.989%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 7.34824
Cbc0038I Solution found of 3.09106
Cbc0038I Relaxing continuous gives -3.40254
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 92 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -3.40254 to -14.6389 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.3809
Cbc0038I Pass   1: suminf.    2.17069 (38) obj. -17.3809 iterations 63
Cbc0038I Pass   2: suminf.    1.53534 (4) obj. -17.3809 iterations 39
Cbc0038I Pass   3: suminf.    1.53534 (4) obj. -17.3809 iterations 0
Cbc0038I Pass   4: suminf.    0.88026 (3) obj. -17.3809 iterations 13
Cbc0038I Pass   5: suminf.    0.51454 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   6: suminf.    1.30838 (3) obj. -17.3809 iterations 5
Cbc0038I Pass   7: suminf.    0.87472 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   8: suminf.    0.59809 (3) obj. -17.3809 iterations 2
Cbc0038I Pass   9: suminf.    1.12870 (6) obj. -17.3809 iterations 12
Cbc0038I Pass  10: suminf.    1.12870 (6) obj. -17.3809 iterations 8
Cbc0038I Pass  11: suminf.    1.37948 (5) obj. -17.3809 iterations 21
Cbc0038I Pass  12: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Pass  13: suminf.    0.76711 (3) obj. -17.3809 iterations 2
Cbc0038I Pass  14: suminf.    1.00441 (3) obj. -17.3809 iterations 6
Cbc0038I Pass  15: suminf.    0.96500 (4) obj. -17.3809 iterations 1
Cbc0038I Pass  16: suminf.    2.24782 (6) obj. -17.3809 iterations 11
Cbc0038I Pass  17: suminf.    2.40861 (6) obj. -17.3809 iterations 9
Cbc0038I Pass  18: suminf.    2.03210 (6) obj. -17.3809 iterations 5
Cbc0038I Pass  19: suminf.    1.38882 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  20: suminf.    1.37948 (5) obj. -17.3809 iterations 4
Cbc0038I Pass  21: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Pass  22: suminf.    0.76711 (3) obj. -17.3809 iterations 2
Cbc0038I Pass  23: suminf.    1.00441 (3) obj. -17.3809 iterations 7
Cbc0038I Pass  24: suminf.    0.96500 (4) obj. -17.3809 iterations 1
Cbc0038I Pass  25: suminf.    2.24782 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  26: suminf.    2.40861 (6) obj. -17.3809 iterations 6
Cbc0038I Pass  27: suminf.    2.03210 (6) obj. -17.3809 iterations 6
Cbc0038I Pass  28: suminf.    1.38882 (6) obj. -17.3809 iterations 10
Cbc0038I Pass  29: suminf.    1.37948 (5) obj. -17.3809 iterations 4
Cbc0038I Pass  30: suminf.    1.16452 (3) obj. -17.3809 iterations 11
Cbc0038I Rounding solution of -15.0469 is better than previous of -14.6389

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -15.0469 to -15.1317 (0.12 seconds)
Cbc0038I Round again with cutoff of -22.3162
Cbc0038I Pass  30: suminf.    2.93710 (38) obj. -22.3162 iterations 0
Cbc0038I Pass  31: suminf.    1.63761 (7) obj. -22.3162 iterations 38
Cbc0038I Pass  32: suminf.    1.61518 (7) obj. -22.3162 iterations 7
Cbc0038I Pass  33: suminf.    1.66357 (6) obj. -22.3162 iterations 18
Cbc0038I Pass  34: suminf.    1.32145 (5) obj. -22.3162 iterations 3
Cbc0038I Pass  35: suminf.    1.90711 (5) obj. -22.3162 iterations 6
Cbc0038I Pass  36: suminf.    1.36670 (4) obj. -22.3162 iterations 6
Cbc0038I Pass  37: suminf.    4.67512 (21) obj. -22.3162 iterations 41
Cbc0038I Pass  38: suminf.    2.03569 (8) obj. -22.3162 iterations 38
Cbc0038I Pass  39: suminf.    1.89875 (7) obj. -22.3162 iterations 1
Cbc0038I Pass  40: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  41: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  42: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  43: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  44: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I Pass  45: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  46: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  47: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  48: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  49: suminf.    1.89875 (7) obj. -22.3162 iterations 10
Cbc0038I Pass  50: suminf.    2.24492 (9) obj. -22.3162 iterations 13
Cbc0038I Pass  51: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  52: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  53: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  54: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I Pass  55: suminf.    2.24492 (9) obj. -22.3162 iterations 14
Cbc0038I Pass  56: suminf.    1.82368 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  57: suminf.    1.81361 (6) obj. -22.3162 iterations 8
Cbc0038I Pass  58: suminf.    2.22990 (7) obj. -22.3162 iterations 11
Cbc0038I Pass  59: suminf.    1.89875 (7) obj. -22.3162 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 176 rows 98 columns, reduced to 123 rows 69 columns - 4 fixed gives 105, 65 - ok now
Cbc0038I Full problem 176 rows 98 columns, reduced to 105 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -15.1317 - took 0.12 seconds
Cbc0012I Integer solution of -15.13175 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 93 rows 53 columns
Cbc0031I 29 added rows had average density of 65.689655
Cbc0013I At root node, 29 cuts changed objective from -42.057596 to -36.646849 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18634 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2772 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.13175 best solution, best possible -36.646849 (1.41 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 39 rows 27 columns
Cbc0004I Integer solution of -15.17182 found after 12329 iterations and 69 nodes (1.75 seconds)
Cbc0038I Full problem 176 rows 98 columns, reduced to 9 rows 9 columns
Cbc0001I Search completed - best objective -15.17182, took 14019 iterations and 114 nodes (1.86 seconds)
Cbc0032I Strong branching done 1134 times (22458 iterations), fathomed 7 nodes and fixed 75 variables
Cbc0035I Maximum depth 32, 229 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       1.87

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-82) rows, 141 (-62) columns and 2515 (-3139) elements
Clp1000I sum of infeasibilities 6.64746e-08 - average 5.40444e-10, 22 fixed columns
Coin0506I Presolve 105 (-18) rows, 119 (-22) columns and 1961 (-554) elements
Clp0006I 0  Obj 43.251534 Dual inf 10.404447 (118)
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 1.4578241 - largest nonzero change 1.5006412e-05 ( 0.0012557832%) - largest zero change 2.9090321e-05
Clp0000I Optimal - objective value 54.852617
Clp0000I Optimal - objective value 54.852617
Coin0511I After Postsolve, objective 54.852617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.852617
Clp0000I Optimal - objective value 54.852617
Clp0000I Optimal - objective value 54.852617
Clp0000I Optimal - objective value 54.852617
Coin0511I After Postsolve, objective 54.852617, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.85261737 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 141 columns (141 integer (141 of which binary)) and 2528 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.912%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.22189
Cbc0038I Pass   1: suminf.    1.56292 (34) obj. -28.357 iterations 25
Cbc0038I Pass   2: suminf.    1.56292 (34) obj. -28.357 iterations 2
Cbc0038I Pass   3: suminf.    0.23421 (7) obj. 10.6342 iterations 27
Cbc0038I Solution found of 17.4
Cbc0038I Rounding solution of 4.63936 is better than previous of 17.4

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 4.63936 to 2.80386 (0.04 seconds)
Cbc0038I Round again with cutoff of -1.98139
Cbc0038I Pass   4: suminf.    1.56292 (34) obj. -28.357 iterations 0
Cbc0038I Pass   5: suminf.    1.56292 (34) obj. -28.357 iterations 2
Cbc0038I Pass   6: suminf.    0.54358 (10) obj. -1.98139 iterations 28
Cbc0038I Pass   7: suminf.    0.54358 (10) obj. -1.98139 iterations 0
Cbc0038I Pass   8: suminf.    0.61521 (7) obj. -1.98139 iterations 27
Cbc0038I Pass   9: suminf.    0.59522 (5) obj. -1.98139 iterations 33
Cbc0038I Pass  10: suminf.    0.40302 (6) obj. -1.98139 iterations 5
Cbc0038I Pass  11: suminf.    1.55497 (11) obj. -1.98139 iterations 19
Cbc0038I Pass  12: suminf.    1.12924 (8) obj. -1.98139 iterations 9
Cbc0038I Pass  13: suminf.    1.07823 (7) obj. -1.98139 iterations 16
Cbc0038I Pass  14: suminf.    0.84930 (7) obj. -1.98139 iterations 5
Cbc0038I Pass  15: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  16: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  17: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  18: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I Pass  19: suminf.    0.84930 (7) obj. -1.98139 iterations 8
Cbc0038I Pass  20: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  21: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  22: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  23: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I Pass  24: suminf.    0.84930 (7) obj. -1.98139 iterations 8
Cbc0038I Pass  25: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  26: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  27: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  28: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I Pass  29: suminf.    0.84930 (7) obj. -1.98139 iterations 8
Cbc0038I Pass  30: suminf.    1.36036 (6) obj. -1.98139 iterations 13
Cbc0038I Pass  31: suminf.    1.28743 (6) obj. -1.98139 iterations 1
Cbc0038I Pass  32: suminf.    1.23386 (6) obj. -1.98139 iterations 7
Cbc0038I Pass  33: suminf.    1.24458 (5) obj. -1.98139 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 2.80386 to 1.9446 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.5947
Cbc0038I Pass  33: suminf.    1.56292 (34) obj. -28.357 iterations 0
Cbc0038I Pass  34: suminf.    1.56292 (34) obj. -28.357 iterations 2
Cbc0038I Pass  35: suminf.    1.08260 (22) obj. -10.5947 iterations 14
Cbc0038I Pass  36: suminf.    2.01819 (12) obj. -10.5947 iterations 41
Cbc0038I Pass  37: suminf.    1.34296 (10) obj. -10.5947 iterations 10
Cbc0038I Pass  38: suminf.    1.34296 (10) obj. -10.5947 iterations 1
Cbc0038I Pass  39: suminf.    1.57825 (7) obj. -10.5947 iterations 12
Cbc0038I Pass  40: suminf.    1.09209 (6) obj. -10.9841 iterations 2
Cbc0038I Pass  41: suminf.    0.99767 (7) obj. -10.5947 iterations 8
Cbc0038I Pass  42: suminf.    1.69148 (8) obj. -10.5947 iterations 8
Cbc0038I Pass  43: suminf.    1.10553 (6) obj. -10.5947 iterations 6
Cbc0038I Pass  44: suminf.    1.30377 (9) obj. -10.5947 iterations 7
Cbc0038I Pass  45: suminf.    1.16429 (9) obj. -11.0131 iterations 2
Cbc0038I Pass  46: suminf.    2.14654 (11) obj. -10.5947 iterations 18
Cbc0038I Pass  47: suminf.    1.32508 (11) obj. -10.5947 iterations 4
Cbc0038I Pass  48: suminf.    1.80544 (11) obj. -10.5947 iterations 14
Cbc0038I Pass  49: suminf.    1.72892 (9) obj. -10.5947 iterations 3
Cbc0038I Pass  50: suminf.    1.57555 (10) obj. -10.5947 iterations 12
Cbc0038I Pass  51: suminf.    1.44772 (12) obj. -10.5947 iterations 9
Cbc0038I Pass  52: suminf.    1.63361 (8) obj. -10.5947 iterations 11
Cbc0038I Pass  53: suminf.    1.37791 (10) obj. -10.5947 iterations 10
Cbc0038I Pass  54: suminf.    1.66953 (9) obj. -10.5947 iterations 11
Cbc0038I Pass  55: suminf.    2.42222 (19) obj. -10.5947 iterations 33
Cbc0038I Pass  56: suminf.    1.87174 (19) obj. -13.6639 iterations 11
Cbc0038I Pass  57: suminf.    1.24438 (18) obj. -10.5947 iterations 6
Cbc0038I Pass  58: suminf.    1.63361 (8) obj. -10.5947 iterations 26
Cbc0038I Pass  59: suminf.    1.37791 (10) obj. -10.5947 iterations 10
Cbc0038I Pass  60: suminf.    1.66953 (9) obj. -10.5947 iterations 12
Cbc0038I Pass  61: suminf.    1.44772 (12) obj. -10.5947 iterations 11
Cbc0038I Pass  62: suminf.    1.63361 (8) obj. -10.5947 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 141 columns, reduced to 28 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 1.9446 - took 0.06 seconds
Cbc0012I Integer solution of 1.9446 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 20 rows 25 columns
Cbc0031I 70 added rows had average density of 31.1
Cbc0013I At root node, 70 cuts changed objective from -45.047732 to -24.99383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26956 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1717 row cuts average 134.7 elements, 0 column cuts (0 active)  in 0.207 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 89 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1619 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 310 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 768 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 303 row cuts average 88.4 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.401 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.9446 best solution, best possible -24.99383 (2.59 seconds)
Cbc0012I Integer solution of -5.5857449 found by rounding after 9114 iterations and 1 nodes (2.73 seconds)
Cbc0012I Integer solution of -10.3737 found by rounding after 9707 iterations and 2 nodes (2.98 seconds)
Cbc0012I Integer solution of -12.23088 found by rounding after 9849 iterations and 3 nodes (3.01 seconds)
Cbc0012I Integer solution of -14.63892 found by rounding after 9926 iterations and 5 nodes (3.03 seconds)
Cbc0016I Integer solution of -15.17182 found by strong branching after 9991 iterations and 10 nodes (3.06 seconds)
Cbc0010I After 19 nodes, 2 on tree, -15.17182 best solution, best possible -24.99383 (3.37 seconds)
Cbc0010I After 29 nodes, 5 on tree, -15.17182 best solution, best possible -24.99383 (4.07 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 66 rows 80 columns
Cbc0010I After 51 nodes, 2 on tree, -15.17182 best solution, best possible -24.539501 (4.81 seconds)
Cbc0010I After 57 nodes, 6 on tree, -15.17182 best solution, best possible -24.539501 (5.58 seconds)
Cbc0010I After 91 nodes, 1 on tree, -15.17182 best solution, best possible -24.539501 (6.31 seconds)
Cbc0038I Full problem 123 rows 141 columns, reduced to 72 rows 84 columns
Cbc0010I After 92 nodes, 1 on tree, -15.17182 best solution, best possible -21.031615 (7.04 seconds)
Cbc0010I After 102 nodes, 4 on tree, -15.17182 best solution, best possible -21.031615 (7.77 seconds)
Cbc0010I After 123 nodes, 2 on tree, -15.17182 best solution, best possible -20.796424 (8.79 seconds)
Cbc0010I After 144 nodes, 8 on tree, -15.17182 best solution, best possible -20.796424 (9.49 seconds)
Cbc0001I Search completed - best objective -15.17182, took 20230 iterations and 158 nodes (9.60 seconds)
Cbc0032I Strong branching done 2114 times (53678 iterations), fathomed 14 nodes and fixed 5 variables
Cbc0035I Maximum depth 18, 369 variables fixed on reduced cost
Total time (CPU seconds):       9.24   (Wallclock seconds):       9.62

