Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-64) rows, 78 (-25) columns and 431 (-172) elements
Clp1000I sum of infeasibilities 2.38256e-06 - average 1.68976e-08, 71 fixed columns
Coin0506I Presolve 8 (-133) rows, 7 (-71) columns and 24 (-407) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Coin0511I After Postsolve, objective 30392.71, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.27262879 - largest nonzero change 0 ( 0%) - largest zero change 2.4498128e-05
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Coin0511I After Postsolve, objective 30392.71, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30392.71013 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 141 rows, 78 columns (77 integer (77 of which binary)) and 431 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.50118
Cbc0038I Solution found of -26033.2
Cbc0038I Relaxing continuous gives -26033.2
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -26033.2 to -28894 (0.01 seconds)
Cbc0038I Round again with cutoff of -29043.8
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.59542 (2) obj. -29043.8 iterations 17
Cbc0038I Pass   2: suminf.    0.33333 (1) obj. -29361.9 iterations 11
Cbc0038I Pass   3: suminf.    0.44375 (1) obj. -29043.8 iterations 2
Cbc0038I Pass   4: suminf.    0.60890 (3) obj. -29043.8 iterations 16
Cbc0038I Pass   5: suminf.    0.60890 (3) obj. -29043.8 iterations 8
Cbc0038I Pass   6: suminf.    0.73315 (2) obj. -29688.3 iterations 12
Cbc0038I Pass   7: suminf.    0.75006 (3) obj. -29043.8 iterations 17
Cbc0038I Pass   8: suminf.    0.75006 (3) obj. -29043.8 iterations 5
Cbc0038I Pass   9: suminf.    0.81262 (3) obj. -29043.8 iterations 13
Cbc0038I Pass  10: suminf.    0.67893 (7) obj. -29043.8 iterations 10
Cbc0038I Pass  11: suminf.    0.69736 (3) obj. -29043.8 iterations 14
Cbc0038I Pass  12: suminf.    0.69736 (3) obj. -29043.8 iterations 3
Cbc0038I Pass  13: suminf.    0.68461 (3) obj. -29043.8 iterations 6
Cbc0038I Pass  14: suminf.    0.68461 (3) obj. -29043.8 iterations 6
Cbc0038I Pass  15: suminf.    0.77794 (4) obj. -29043.8 iterations 13
Cbc0038I Pass  16: suminf.    0.60890 (3) obj. -29043.8 iterations 7
Cbc0038I Pass  17: suminf.    0.73315 (2) obj. -29688.3 iterations 12
Cbc0038I Pass  18: suminf.    0.33333 (1) obj. -29361.9 iterations 3
Cbc0038I Pass  19: suminf.    0.44375 (1) obj. -29043.8 iterations 1
Cbc0038I Pass  20: suminf.    1.29123 (5) obj. -29043.8 iterations 28
Cbc0038I Pass  21: suminf.    1.12161 (5) obj. -29043.8 iterations 20
Cbc0038I Pass  22: suminf.    1.12161 (5) obj. -29043.8 iterations 5
Cbc0038I Pass  23: suminf.    0.45393 (4) obj. -29043.8 iterations 12
Cbc0038I Pass  24: suminf.    0.45393 (4) obj. -29043.8 iterations 2
Cbc0038I Pass  25: suminf.    0.11538 (1) obj. -29681.2 iterations 12
Cbc0038I Pass  26: suminf.    0.46959 (2) obj. -29043.8 iterations 8
Cbc0038I Pass  27: suminf.    0.45422 (4) obj. -29043.8 iterations 13
Cbc0038I Pass  28: suminf.    0.86697 (5) obj. -29043.8 iterations 18
Cbc0038I Pass  29: suminf.    0.83181 (3) obj. -29043.8 iterations 15
Cbc0038I Pass  30: suminf.    0.84887 (3) obj. -29043.8 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 27 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -28894 to -29184.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -29426.4
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.46880 (3) obj. -29426.4 iterations 1
Cbc0038I Pass  31: suminf.    0.37314 (2) obj. -29426.4 iterations 13
Cbc0038I Pass  32: suminf.    0.65490 (2) obj. -29426.4 iterations 5
Cbc0038I Pass  33: suminf.    1.31485 (8) obj. -29426.4 iterations 16
Cbc0038I Pass  34: suminf.    0.26667 (1) obj. -29897.3 iterations 14
Cbc0038I Pass  35: suminf.    0.48145 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  36: suminf.    0.75236 (3) obj. -29426.4 iterations 11
Cbc0038I Pass  37: suminf.    0.75336 (4) obj. -29426.4 iterations 11
Cbc0038I Pass  38: suminf.    0.62980 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  39: suminf.    0.73068 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  40: suminf.    0.73068 (2) obj. -29426.4 iterations 5
Cbc0038I Pass  41: suminf.    0.73800 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  42: suminf.    0.66817 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  43: suminf.    0.38871 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  44: suminf.    0.11538 (1) obj. -29681.2 iterations 9
Cbc0038I Pass  45: suminf.    0.11538 (1) obj. -29681.2 iterations 0
Cbc0038I Pass  46: suminf.    0.66558 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  47: suminf.    0.90169 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  48: suminf.    0.87454 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  49: suminf.    0.23333 (1) obj. -29534.5 iterations 6
Cbc0038I Pass  50: suminf.    0.23333 (1) obj. -29534.5 iterations 3
Cbc0038I Pass  51: suminf.    0.23333 (1) obj. -29534.5 iterations 3
Cbc0038I Pass  52: suminf.    0.66558 (3) obj. -29426.4 iterations 8
Cbc0038I Pass  53: suminf.    0.90169 (3) obj. -29426.4 iterations 9
Cbc0038I Pass  54: suminf.    0.87454 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  55: suminf.    0.71924 (3) obj. -29426.4 iterations 9
Cbc0038I Pass  56: suminf.    0.71924 (3) obj. -29426.4 iterations 5
Cbc0038I Pass  57: suminf.    0.47037 (3) obj. -29426.4 iterations 5
Cbc0038I Pass  58: suminf.    0.40435 (2) obj. -29426.4 iterations 7
Cbc0038I Pass  59: suminf.    0.64907 (2) obj. -29426.4 iterations 10
Cbc0038I Rounding solution of -29232 is better than previous of -29184.8

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -29716.3
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.65127 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  60: suminf.    0.65127 (3) obj. -29716.3 iterations 11
Cbc0038I Pass  61: suminf.    1.23154 (3) obj. -29716.3 iterations 12
Cbc0038I Pass  62: suminf.    0.74278 (3) obj. -29716.3 iterations 7
Cbc0038I Pass  63: suminf.    1.15012 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  64: suminf.    1.12480 (3) obj. -29716.3 iterations 6
Cbc0038I Pass  65: suminf.    1.23270 (3) obj. -29716.3 iterations 5
Cbc0038I Pass  66: suminf.    1.23270 (3) obj. -29716.3 iterations 5
Cbc0038I Pass  67: suminf.    1.19425 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  68: suminf.    0.52028 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  69: suminf.    0.03846 (1) obj. -29799.6 iterations 4
Cbc0038I Pass  70: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  71: suminf.    0.28661 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  72: suminf.    1.19425 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  73: suminf.    1.19425 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  74: suminf.    1.23270 (3) obj. -29716.3 iterations 13
Cbc0038I Pass  75: suminf.    0.97047 (6) obj. -29716.3 iterations 3
Cbc0038I Pass  76: suminf.    0.12506 (2) obj. -29716.3 iterations 4
Cbc0038I Pass  77: suminf.    0.03846 (1) obj. -29799.6 iterations 10
Cbc0038I Pass  78: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  79: suminf.    0.28661 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  80: suminf.    1.19425 (3) obj. -29716.3 iterations 10
Cbc0038I Pass  81: suminf.    1.19425 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  82: suminf.    1.23270 (3) obj. -29716.3 iterations 12
Cbc0038I Pass  83: suminf.    1.05683 (4) obj. -29716.3 iterations 5
Cbc0038I Pass  84: suminf.    0.29560 (2) obj. -29716.3 iterations 12
Cbc0038I Pass  85: suminf.    0.03846 (1) obj. -29799.6 iterations 14
Cbc0038I Pass  86: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  87: suminf.    0.28661 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  88: suminf.    1.19425 (3) obj. -29716.3 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -29232 - took 0.03 seconds
Cbc0012I Integer solution of -29232.01 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -29361.218 found by DiveCoefficient after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 141 rows 78 columns, reduced to 8 rows 8 columns
Cbc0031I 7 added rows had average density of 21.285714
Cbc0013I At root node, 7 cuts changed objective from -30392.71 to -29903.457 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 76.2 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0010I After 9 nodes, 1 on tree, -29361.218 best solution, best possible -29903.457 (0.72 seconds)
Cbc0001I Search completed - best objective -29361.218, took 292 iterations and 10 nodes (0.74 seconds)
Cbc0032I Strong branching done 110 times (568 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 64 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-101) rows, 116 (-86) columns and 1798 (-3855) elements
Clp1000I sum of infeasibilities 1.95303e-06 - average 1.89614e-08, 73 fixed columns
Coin0506I Presolve 41 (-62) rows, 43 (-73) columns and 222 (-1576) elements
Clp0006I 0  Obj 30408.74 Dual inf 157.23461 (42)
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 30436.342
Clp0000I Optimal - objective value 30436.342
Coin0511I After Postsolve, objective 30436.342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30436.342 Dual inf 22800.256 (8)
Clp0014I Perturbing problem by 0.001% of 1.8077531 - largest nonzero change 2.1287554e-05 ( 0.0021287554%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 30436.342
Clp0000I Optimal - objective value 30436.342
Clp0000I Optimal - objective value 30436.342
Coin0511I After Postsolve, objective 30436.342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30436.3424 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 1806 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.045%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.87439
Cbc0038I Pass   1: suminf.    3.14053 (26) obj. -26064 iterations 15
Cbc0038I Solution found of -26033.2
Cbc0038I Rounding solution of -28157.3 is better than previous of -26033.2

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -28157.3 to -28894 (0.05 seconds)
Cbc0038I Round again with cutoff of -29046.8
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.86360 (28) obj. -29046.8 iterations 2
Cbc0038I Pass   3: suminf.    3.38995 (27) obj. -29390.9 iterations 7
Cbc0038I Pass   4: suminf.    0.44205 (1) obj. -29046.8 iterations 28
Cbc0038I Pass   5: suminf.    0.33333 (1) obj. -29359.9 iterations 3
Cbc0038I Pass   6: suminf.    1.89280 (10) obj. -29046.8 iterations 19
Cbc0038I Pass   7: suminf.    1.33224 (7) obj. -29046.8 iterations 8
Cbc0038I Pass   8: suminf.    1.08357 (3) obj. -29046.8 iterations 13
Cbc0038I Pass   9: suminf.    0.71030 (2) obj. -29046.8 iterations 9
Cbc0038I Pass  10: suminf.    0.71030 (2) obj. -29046.8 iterations 0
Cbc0038I Pass  11: suminf.    3.64331 (16) obj. -29046.8 iterations 29
Cbc0038I Pass  12: suminf.    2.43204 (12) obj. -29046.8 iterations 9
Cbc0038I Pass  13: suminf.    1.05104 (7) obj. -29046.8 iterations 13
Cbc0038I Pass  14: suminf.    0.00212 (1) obj. -29046.8 iterations 9
Cbc0038I Pass  15: suminf.    0.05556 (1) obj. -29216.7 iterations 2
Cbc0038I Pass  16: suminf.    1.36839 (9) obj. -29046.8 iterations 18
Cbc0038I Pass  17: suminf.    1.31032 (8) obj. -29046.8 iterations 6
Cbc0038I Pass  18: suminf.    0.72658 (2) obj. -29046.8 iterations 16
Cbc0038I Pass  19: suminf.    0.71609 (3) obj. -29046.8 iterations 3
Cbc0038I Pass  20: suminf.    0.70341 (3) obj. -29046.8 iterations 12
Cbc0038I Pass  21: suminf.    0.81705 (4) obj. -29046.8 iterations 12
Cbc0038I Pass  22: suminf.    0.63586 (3) obj. -29046.8 iterations 9
Cbc0038I Pass  23: suminf.    0.73315 (2) obj. -29679.3 iterations 14
Cbc0038I Pass  24: suminf.    0.33333 (1) obj. -29350.9 iterations 4
Cbc0038I Pass  25: suminf.    0.43892 (1) obj. -29046.8 iterations 1
Cbc0038I Pass  26: suminf.    1.29926 (7) obj. -29046.8 iterations 20
Cbc0038I Pass  27: suminf.    0.72905 (5) obj. -29358.4 iterations 14
Cbc0038I Pass  28: suminf.    0.43996 (1) obj. -29046.8 iterations 5
Cbc0038I Pass  29: suminf.    0.33333 (1) obj. -29353.9 iterations 2
Cbc0038I Pass  30: suminf.    1.68051 (7) obj. -29046.8 iterations 20
Cbc0038I Pass  31: suminf.    1.68051 (7) obj. -29046.8 iterations 3
Cbc0038I Rounding solution of -29047 is better than previous of -28894

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -29047 to -29232 (0.07 seconds)
Cbc0038I Round again with cutoff of -29470
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.76238 (29) obj. -29470 iterations 2
Cbc0038I Pass  32: suminf.    3.45592 (28) obj. -29470 iterations 6
Cbc0038I Pass  33: suminf.    0.66907 (6) obj. -29470 iterations 25
Cbc0038I Pass  34: suminf.    0.66907 (6) obj. -29470 iterations 5
Cbc0038I Pass  35: suminf.    0.68302 (2) obj. -29470 iterations 9
Cbc0038I Pass  36: suminf.    0.41285 (2) obj. -29470 iterations 3
Cbc0038I Pass  37: suminf.    1.99994 (12) obj. -29470 iterations 16
Cbc0038I Pass  38: suminf.    1.76963 (9) obj. -29470 iterations 8
Cbc0038I Pass  39: suminf.    0.16482 (2) obj. -29470 iterations 23
Cbc0038I Pass  40: suminf.    0.79977 (3) obj. -29470 iterations 7
Cbc0038I Pass  41: suminf.    0.79977 (3) obj. -29470 iterations 2
Cbc0038I Pass  42: suminf.    0.17143 (2) obj. -29484.2 iterations 6
Cbc0038I Pass  43: suminf.    1.09984 (14) obj. -29470 iterations 18
Cbc0038I Pass  44: suminf.    1.01064 (8) obj. -29470 iterations 11
Cbc0038I Pass  45: suminf.    0.80340 (3) obj. -29470 iterations 12
Cbc0038I Pass  46: suminf.    0.80340 (3) obj. -29470 iterations 2
Cbc0038I Pass  47: suminf.    0.17143 (2) obj. -29481.2 iterations 6
Cbc0038I Pass  48: suminf.    0.16622 (2) obj. -29470 iterations 6
Cbc0038I Pass  49: suminf.    0.84242 (7) obj. -29470 iterations 17
Cbc0038I Pass  50: suminf.    0.77723 (7) obj. -29470 iterations 13
Cbc0038I Pass  51: suminf.    0.45007 (3) obj. -29470 iterations 11
Cbc0038I Pass  52: suminf.    0.11383 (2) obj. -29470 iterations 8
Cbc0038I Pass  53: suminf.    0.52327 (5) obj. -29470 iterations 16
Cbc0038I Pass  54: suminf.    0.42685 (4) obj. -29470 iterations 11
Cbc0038I Pass  55: suminf.    0.45007 (3) obj. -29470 iterations 9
Cbc0038I Pass  56: suminf.    0.11383 (2) obj. -29470 iterations 8
Cbc0038I Pass  57: suminf.    5.29591 (18) obj. -29470 iterations 25
Cbc0038I Pass  58: suminf.    1.68464 (11) obj. -29470 iterations 5
Cbc0038I Pass  59: suminf.    1.58621 (9) obj. -29470 iterations 9
Cbc0038I Pass  60: suminf.    0.16669 (2) obj. -29470 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -29232 to -29361.2 (0.10 seconds)
Cbc0038I Round again with cutoff of -29755.6
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 4
Cbc0038I Pass  60: suminf.    4.01922 (29) obj. -29755.6 iterations 0
Cbc0038I Pass  61: suminf.    3.72870 (30) obj. -29755.6 iterations 7
Cbc0038I Pass  62: suminf.    1.39680 (14) obj. -29755.6 iterations 17
Cbc0038I Pass  63: suminf.    1.39680 (14) obj. -29755.6 iterations 1
Cbc0038I Pass  64: suminf.    0.76009 (6) obj. -29755.6 iterations 9
Cbc0038I Pass  65: suminf.    0.76009 (6) obj. -29755.6 iterations 4
Cbc0038I Pass  66: suminf.    0.37552 (3) obj. -29755.6 iterations 14
Cbc0038I Pass  67: suminf.    0.37552 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  68: suminf.    0.63785 (4) obj. -29755.6 iterations 10
Cbc0038I Pass  69: suminf.    0.63785 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  70: suminf.    1.18580 (8) obj. -29755.6 iterations 10
Cbc0038I Pass  71: suminf.    1.18580 (8) obj. -29755.6 iterations 3
Cbc0038I Pass  72: suminf.    0.38114 (3) obj. -29755.6 iterations 17
Cbc0038I Pass  73: suminf.    0.38114 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  74: suminf.    0.64082 (4) obj. -29755.6 iterations 11
Cbc0038I Pass  75: suminf.    0.64082 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  76: suminf.    1.22633 (9) obj. -29755.6 iterations 9
Cbc0038I Pass  77: suminf.    1.22633 (9) obj. -29755.6 iterations 2
Cbc0038I Pass  78: suminf.    0.38864 (3) obj. -29755.6 iterations 18
Cbc0038I Pass  79: suminf.    0.38864 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  80: suminf.    0.64477 (4) obj. -29755.6 iterations 11
Cbc0038I Pass  81: suminf.    0.64477 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  82: suminf.    1.47061 (5) obj. -29755.6 iterations 11
Cbc0038I Pass  83: suminf.    1.47061 (5) obj. -29755.6 iterations 0
Cbc0038I Pass  84: suminf.    0.38864 (3) obj. -29755.6 iterations 16
Cbc0038I Pass  85: suminf.    0.38864 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  86: suminf.    0.64477 (4) obj. -29755.6 iterations 12
Cbc0038I Pass  87: suminf.    0.64477 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  88: suminf.    0.38864 (3) obj. -29755.6 iterations 14
Cbc0038I Pass  89: suminf.    1.19817 (9) obj. -29755.6 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -29361.2 - took 0.07 seconds
Cbc0012I Integer solution of -29361.218 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 12 rows 13 columns
Cbc0031I 17 added rows had average density of 11.235294
Cbc0013I At root node, 17 cuts changed objective from -30409.666 to -29937.372 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 245 row cuts average 5.0 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 44.8 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29361.218 best solution, best possible -29937.372 (0.27 seconds)
Cbc0010I After 8 nodes, 2 on tree, -29361.218 best solution, best possible -29937.372 (0.99 seconds)
Cbc0001I Search completed - best objective -29361.218, took 469 iterations and 10 nodes (1.03 seconds)
Cbc0032I Strong branching done 128 times (632 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       1.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 141 (-64) rows, 78 (-25) columns and 431 (-172) elements
Clp1000I sum of infeasibilities 2.38256e-06 - average 1.68976e-08, 71 fixed columns
Coin0506I Presolve 8 (-133) rows, 7 (-71) columns and 24 (-407) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Coin0511I After Postsolve, objective 30392.71, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.27262879 - largest nonzero change 0 ( 0%) - largest zero change 2.4498128e-05
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Clp0000I Optimal - objective value 30392.71
Coin0511I After Postsolve, objective 30392.71, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30392.71013 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 141 rows, 78 columns (77 integer (77 of which binary)) and 431 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.50118
Cbc0038I Solution found of -26033.2
Cbc0038I Relaxing continuous gives -26033.2
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -26033.2 to -28894 (0.01 seconds)
Cbc0038I Round again with cutoff of -29043.8
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.59542 (2) obj. -29043.8 iterations 17
Cbc0038I Pass   2: suminf.    0.33333 (1) obj. -29361.9 iterations 11
Cbc0038I Pass   3: suminf.    0.44375 (1) obj. -29043.8 iterations 2
Cbc0038I Pass   4: suminf.    0.60890 (3) obj. -29043.8 iterations 16
Cbc0038I Pass   5: suminf.    0.60890 (3) obj. -29043.8 iterations 8
Cbc0038I Pass   6: suminf.    0.73315 (2) obj. -29688.3 iterations 12
Cbc0038I Pass   7: suminf.    0.75006 (3) obj. -29043.8 iterations 17
Cbc0038I Pass   8: suminf.    0.75006 (3) obj. -29043.8 iterations 5
Cbc0038I Pass   9: suminf.    0.81262 (3) obj. -29043.8 iterations 13
Cbc0038I Pass  10: suminf.    0.67893 (7) obj. -29043.8 iterations 10
Cbc0038I Pass  11: suminf.    0.69736 (3) obj. -29043.8 iterations 14
Cbc0038I Pass  12: suminf.    0.69736 (3) obj. -29043.8 iterations 3
Cbc0038I Pass  13: suminf.    0.68461 (3) obj. -29043.8 iterations 6
Cbc0038I Pass  14: suminf.    0.68461 (3) obj. -29043.8 iterations 6
Cbc0038I Pass  15: suminf.    0.77794 (4) obj. -29043.8 iterations 13
Cbc0038I Pass  16: suminf.    0.60890 (3) obj. -29043.8 iterations 7
Cbc0038I Pass  17: suminf.    0.73315 (2) obj. -29688.3 iterations 12
Cbc0038I Pass  18: suminf.    0.33333 (1) obj. -29361.9 iterations 3
Cbc0038I Pass  19: suminf.    0.44375 (1) obj. -29043.8 iterations 1
Cbc0038I Pass  20: suminf.    1.29123 (5) obj. -29043.8 iterations 28
Cbc0038I Pass  21: suminf.    1.12161 (5) obj. -29043.8 iterations 20
Cbc0038I Pass  22: suminf.    1.12161 (5) obj. -29043.8 iterations 5
Cbc0038I Pass  23: suminf.    0.45393 (4) obj. -29043.8 iterations 12
Cbc0038I Pass  24: suminf.    0.45393 (4) obj. -29043.8 iterations 2
Cbc0038I Pass  25: suminf.    0.11538 (1) obj. -29681.2 iterations 12
Cbc0038I Pass  26: suminf.    0.46959 (2) obj. -29043.8 iterations 8
Cbc0038I Pass  27: suminf.    0.45422 (4) obj. -29043.8 iterations 13
Cbc0038I Pass  28: suminf.    0.86697 (5) obj. -29043.8 iterations 18
Cbc0038I Pass  29: suminf.    0.83181 (3) obj. -29043.8 iterations 15
Cbc0038I Pass  30: suminf.    0.84887 (3) obj. -29043.8 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 27 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -28894 to -29184.8 (0.03 seconds)
Cbc0038I Round again with cutoff of -29426.4
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.46880 (3) obj. -29426.4 iterations 1
Cbc0038I Pass  31: suminf.    0.37314 (2) obj. -29426.4 iterations 13
Cbc0038I Pass  32: suminf.    0.65490 (2) obj. -29426.4 iterations 5
Cbc0038I Pass  33: suminf.    1.31485 (8) obj. -29426.4 iterations 16
Cbc0038I Pass  34: suminf.    0.26667 (1) obj. -29897.3 iterations 14
Cbc0038I Pass  35: suminf.    0.48145 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  36: suminf.    0.75236 (3) obj. -29426.4 iterations 11
Cbc0038I Pass  37: suminf.    0.75336 (4) obj. -29426.4 iterations 11
Cbc0038I Pass  38: suminf.    0.62980 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  39: suminf.    0.73068 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  40: suminf.    0.73068 (2) obj. -29426.4 iterations 5
Cbc0038I Pass  41: suminf.    0.73800 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  42: suminf.    0.66817 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  43: suminf.    0.38871 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  44: suminf.    0.11538 (1) obj. -29681.2 iterations 9
Cbc0038I Pass  45: suminf.    0.11538 (1) obj. -29681.2 iterations 0
Cbc0038I Pass  46: suminf.    0.66558 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  47: suminf.    0.90169 (3) obj. -29426.4 iterations 10
Cbc0038I Pass  48: suminf.    0.87454 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  49: suminf.    0.23333 (1) obj. -29534.5 iterations 6
Cbc0038I Pass  50: suminf.    0.23333 (1) obj. -29534.5 iterations 3
Cbc0038I Pass  51: suminf.    0.23333 (1) obj. -29534.5 iterations 3
Cbc0038I Pass  52: suminf.    0.66558 (3) obj. -29426.4 iterations 8
Cbc0038I Pass  53: suminf.    0.90169 (3) obj. -29426.4 iterations 9
Cbc0038I Pass  54: suminf.    0.87454 (2) obj. -29426.4 iterations 4
Cbc0038I Pass  55: suminf.    0.71924 (3) obj. -29426.4 iterations 9
Cbc0038I Pass  56: suminf.    0.71924 (3) obj. -29426.4 iterations 5
Cbc0038I Pass  57: suminf.    0.47037 (3) obj. -29426.4 iterations 5
Cbc0038I Pass  58: suminf.    0.40435 (2) obj. -29426.4 iterations 7
Cbc0038I Pass  59: suminf.    0.64907 (2) obj. -29426.4 iterations 10
Cbc0038I Rounding solution of -29232 is better than previous of -29184.8

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -29716.3
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  59: suminf.    0.65127 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  60: suminf.    0.65127 (3) obj. -29716.3 iterations 11
Cbc0038I Pass  61: suminf.    1.23154 (3) obj. -29716.3 iterations 12
Cbc0038I Pass  62: suminf.    0.74278 (3) obj. -29716.3 iterations 7
Cbc0038I Pass  63: suminf.    1.15012 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  64: suminf.    1.12480 (3) obj. -29716.3 iterations 6
Cbc0038I Pass  65: suminf.    1.23270 (3) obj. -29716.3 iterations 5
Cbc0038I Pass  66: suminf.    1.23270 (3) obj. -29716.3 iterations 5
Cbc0038I Pass  67: suminf.    1.19425 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  68: suminf.    0.52028 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  69: suminf.    0.03846 (1) obj. -29799.6 iterations 4
Cbc0038I Pass  70: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  71: suminf.    0.28661 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  72: suminf.    1.19425 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  73: suminf.    1.19425 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  74: suminf.    1.23270 (3) obj. -29716.3 iterations 13
Cbc0038I Pass  75: suminf.    0.97047 (6) obj. -29716.3 iterations 3
Cbc0038I Pass  76: suminf.    0.12506 (2) obj. -29716.3 iterations 4
Cbc0038I Pass  77: suminf.    0.03846 (1) obj. -29799.6 iterations 10
Cbc0038I Pass  78: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  79: suminf.    0.28661 (3) obj. -29716.3 iterations 9
Cbc0038I Pass  80: suminf.    1.19425 (3) obj. -29716.3 iterations 10
Cbc0038I Pass  81: suminf.    1.19425 (3) obj. -29716.3 iterations 0
Cbc0038I Pass  82: suminf.    1.23270 (3) obj. -29716.3 iterations 12
Cbc0038I Pass  83: suminf.    1.05683 (4) obj. -29716.3 iterations 5
Cbc0038I Pass  84: suminf.    0.29560 (2) obj. -29716.3 iterations 12
Cbc0038I Pass  85: suminf.    0.03846 (1) obj. -29799.6 iterations 14
Cbc0038I Pass  86: suminf.    0.72994 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  87: suminf.    0.28661 (3) obj. -29716.3 iterations 8
Cbc0038I Pass  88: suminf.    1.19425 (3) obj. -29716.3 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 141 rows 78 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -29232 - took 0.04 seconds
Cbc0012I Integer solution of -29232.01 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -29361.218 found by DiveCoefficient after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 141 rows 78 columns, reduced to 8 rows 8 columns
Cbc0031I 7 added rows had average density of 21.285714
Cbc0013I At root node, 7 cuts changed objective from -30392.71 to -29903.457 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 47 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 76.2 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29361.218, took 292 iterations and 10 nodes (0.67 seconds)
Cbc0032I Strong branching done 110 times (568 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 64 variables fixed on reduced cost
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-102) rows, 116 (-87) columns and 1798 (-3856) elements
Clp1000I sum of infeasibilities 1.95303e-06 - average 1.89614e-08, 73 fixed columns
Coin0506I Presolve 41 (-62) rows, 43 (-73) columns and 222 (-1576) elements
Clp0006I 0  Obj 30408.74 Dual inf 157.23461 (42)
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 30436.342
Clp0000I Optimal - objective value 30436.342
Coin0511I After Postsolve, objective 30436.342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30436.342 Dual inf 22800.256 (8)
Clp0014I Perturbing problem by 0.001% of 1.8077531 - largest nonzero change 2.1287554e-05 ( 0.0021287554%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 30436.342
Clp0000I Optimal - objective value 30436.342
Clp0000I Optimal - objective value 30436.342
Coin0511I After Postsolve, objective 30436.342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30436.3424 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 1806 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.045%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.87439
Cbc0038I Pass   1: suminf.    3.14053 (26) obj. -26064 iterations 15
Cbc0038I Solution found of -26033.2
Cbc0038I Rounding solution of -28157.3 is better than previous of -26033.2

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -28157.3 to -28894 (0.05 seconds)
Cbc0038I Round again with cutoff of -29046.8
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.86360 (28) obj. -29046.8 iterations 2
Cbc0038I Pass   3: suminf.    3.38995 (27) obj. -29390.9 iterations 7
Cbc0038I Pass   4: suminf.    0.44205 (1) obj. -29046.8 iterations 28
Cbc0038I Pass   5: suminf.    0.33333 (1) obj. -29359.9 iterations 3
Cbc0038I Pass   6: suminf.    1.89280 (10) obj. -29046.8 iterations 19
Cbc0038I Pass   7: suminf.    1.33224 (7) obj. -29046.8 iterations 8
Cbc0038I Pass   8: suminf.    1.08357 (3) obj. -29046.8 iterations 13
Cbc0038I Pass   9: suminf.    0.71030 (2) obj. -29046.8 iterations 9
Cbc0038I Pass  10: suminf.    0.71030 (2) obj. -29046.8 iterations 0
Cbc0038I Pass  11: suminf.    3.64331 (16) obj. -29046.8 iterations 29
Cbc0038I Pass  12: suminf.    2.43204 (12) obj. -29046.8 iterations 9
Cbc0038I Pass  13: suminf.    1.05104 (7) obj. -29046.8 iterations 13
Cbc0038I Pass  14: suminf.    0.00212 (1) obj. -29046.8 iterations 9
Cbc0038I Pass  15: suminf.    0.05556 (1) obj. -29216.7 iterations 2
Cbc0038I Pass  16: suminf.    1.36839 (9) obj. -29046.8 iterations 18
Cbc0038I Pass  17: suminf.    1.31032 (8) obj. -29046.8 iterations 6
Cbc0038I Pass  18: suminf.    0.72658 (2) obj. -29046.8 iterations 16
Cbc0038I Pass  19: suminf.    0.71609 (3) obj. -29046.8 iterations 3
Cbc0038I Pass  20: suminf.    0.70341 (3) obj. -29046.8 iterations 12
Cbc0038I Pass  21: suminf.    0.81705 (4) obj. -29046.8 iterations 12
Cbc0038I Pass  22: suminf.    0.63586 (3) obj. -29046.8 iterations 9
Cbc0038I Pass  23: suminf.    0.73315 (2) obj. -29679.3 iterations 14
Cbc0038I Pass  24: suminf.    0.33333 (1) obj. -29350.9 iterations 4
Cbc0038I Pass  25: suminf.    0.43892 (1) obj. -29046.8 iterations 1
Cbc0038I Pass  26: suminf.    1.29926 (7) obj. -29046.8 iterations 20
Cbc0038I Pass  27: suminf.    0.72905 (5) obj. -29358.4 iterations 14
Cbc0038I Pass  28: suminf.    0.43996 (1) obj. -29046.8 iterations 5
Cbc0038I Pass  29: suminf.    0.33333 (1) obj. -29353.9 iterations 2
Cbc0038I Pass  30: suminf.    1.68051 (7) obj. -29046.8 iterations 20
Cbc0038I Pass  31: suminf.    1.68051 (7) obj. -29046.8 iterations 3
Cbc0038I Rounding solution of -29047 is better than previous of -28894

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 30 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -29047 to -29232 (0.07 seconds)
Cbc0038I Round again with cutoff of -29470
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.76238 (29) obj. -29470 iterations 2
Cbc0038I Pass  32: suminf.    3.45592 (28) obj. -29470 iterations 6
Cbc0038I Pass  33: suminf.    0.66907 (6) obj. -29470 iterations 25
Cbc0038I Pass  34: suminf.    0.66907 (6) obj. -29470 iterations 5
Cbc0038I Pass  35: suminf.    0.68302 (2) obj. -29470 iterations 9
Cbc0038I Pass  36: suminf.    0.41285 (2) obj. -29470 iterations 3
Cbc0038I Pass  37: suminf.    1.99994 (12) obj. -29470 iterations 16
Cbc0038I Pass  38: suminf.    1.76963 (9) obj. -29470 iterations 8
Cbc0038I Pass  39: suminf.    0.16482 (2) obj. -29470 iterations 23
Cbc0038I Pass  40: suminf.    0.79977 (3) obj. -29470 iterations 7
Cbc0038I Pass  41: suminf.    0.79977 (3) obj. -29470 iterations 2
Cbc0038I Pass  42: suminf.    0.17143 (2) obj. -29484.2 iterations 6
Cbc0038I Pass  43: suminf.    1.09984 (14) obj. -29470 iterations 18
Cbc0038I Pass  44: suminf.    1.01064 (8) obj. -29470 iterations 11
Cbc0038I Pass  45: suminf.    0.80340 (3) obj. -29470 iterations 12
Cbc0038I Pass  46: suminf.    0.80340 (3) obj. -29470 iterations 2
Cbc0038I Pass  47: suminf.    0.17143 (2) obj. -29481.2 iterations 6
Cbc0038I Pass  48: suminf.    0.16622 (2) obj. -29470 iterations 6
Cbc0038I Pass  49: suminf.    0.84242 (7) obj. -29470 iterations 17
Cbc0038I Pass  50: suminf.    0.77723 (7) obj. -29470 iterations 13
Cbc0038I Pass  51: suminf.    0.45007 (3) obj. -29470 iterations 11
Cbc0038I Pass  52: suminf.    0.11383 (2) obj. -29470 iterations 8
Cbc0038I Pass  53: suminf.    0.52327 (5) obj. -29470 iterations 16
Cbc0038I Pass  54: suminf.    0.42685 (4) obj. -29470 iterations 11
Cbc0038I Pass  55: suminf.    0.45007 (3) obj. -29470 iterations 9
Cbc0038I Pass  56: suminf.    0.11383 (2) obj. -29470 iterations 8
Cbc0038I Pass  57: suminf.    5.29591 (18) obj. -29470 iterations 25
Cbc0038I Pass  58: suminf.    1.68464 (11) obj. -29470 iterations 5
Cbc0038I Pass  59: suminf.    1.58621 (9) obj. -29470 iterations 9
Cbc0038I Pass  60: suminf.    0.16669 (2) obj. -29470 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -29232 to -29361.2 (0.10 seconds)
Cbc0038I Round again with cutoff of -29755.6
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 4
Cbc0038I Pass  60: suminf.    4.01922 (29) obj. -29755.6 iterations 0
Cbc0038I Pass  61: suminf.    3.72870 (30) obj. -29755.6 iterations 7
Cbc0038I Pass  62: suminf.    1.39680 (14) obj. -29755.6 iterations 17
Cbc0038I Pass  63: suminf.    1.39680 (14) obj. -29755.6 iterations 1
Cbc0038I Pass  64: suminf.    0.76009 (6) obj. -29755.6 iterations 9
Cbc0038I Pass  65: suminf.    0.76009 (6) obj. -29755.6 iterations 4
Cbc0038I Pass  66: suminf.    0.37552 (3) obj. -29755.6 iterations 14
Cbc0038I Pass  67: suminf.    0.37552 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  68: suminf.    0.63785 (4) obj. -29755.6 iterations 10
Cbc0038I Pass  69: suminf.    0.63785 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  70: suminf.    1.18580 (8) obj. -29755.6 iterations 10
Cbc0038I Pass  71: suminf.    1.18580 (8) obj. -29755.6 iterations 3
Cbc0038I Pass  72: suminf.    0.38114 (3) obj. -29755.6 iterations 17
Cbc0038I Pass  73: suminf.    0.38114 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  74: suminf.    0.64082 (4) obj. -29755.6 iterations 11
Cbc0038I Pass  75: suminf.    0.64082 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  76: suminf.    1.22633 (9) obj. -29755.6 iterations 9
Cbc0038I Pass  77: suminf.    1.22633 (9) obj. -29755.6 iterations 2
Cbc0038I Pass  78: suminf.    0.38864 (3) obj. -29755.6 iterations 18
Cbc0038I Pass  79: suminf.    0.38864 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  80: suminf.    0.64477 (4) obj. -29755.6 iterations 11
Cbc0038I Pass  81: suminf.    0.64477 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  82: suminf.    1.47061 (5) obj. -29755.6 iterations 11
Cbc0038I Pass  83: suminf.    1.47061 (5) obj. -29755.6 iterations 0
Cbc0038I Pass  84: suminf.    0.38864 (3) obj. -29755.6 iterations 16
Cbc0038I Pass  85: suminf.    0.38864 (3) obj. -29755.6 iterations 0
Cbc0038I Pass  86: suminf.    0.64477 (4) obj. -29755.6 iterations 12
Cbc0038I Pass  87: suminf.    0.64477 (4) obj. -29755.6 iterations 0
Cbc0038I Pass  88: suminf.    0.38864 (3) obj. -29755.6 iterations 14
Cbc0038I Pass  89: suminf.    1.19817 (9) obj. -29755.6 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -29361.2 - took 0.08 seconds
Cbc0012I Integer solution of -29361.218 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 12 rows 13 columns
Cbc0031I 17 added rows had average density of 11.235294
Cbc0013I At root node, 17 cuts changed objective from -30409.666 to -29937.372 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 245 row cuts average 5.0 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 44.8 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29361.218 best solution, best possible -29937.372 (0.28 seconds)
Cbc0001I Search completed - best objective -29361.218, took 469 iterations and 10 nodes (0.93 seconds)
Cbc0032I Strong branching done 128 times (632 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.94

