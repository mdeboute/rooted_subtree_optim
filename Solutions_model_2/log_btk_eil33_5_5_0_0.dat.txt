Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 64 (-5) rows, 33 (-2) columns and 187 (-8) elements
Clp1000I sum of infeasibilities 1.47506e-05 - average 2.30478e-07, 1 fixed columns
Coin0506I Presolve 62 (-2) rows, 32 (-1) columns and 181 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Coin0511I After Postsolve, objective 168.45576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Coin0511I After Postsolve, objective 168.45576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.4557615 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 64 rows, 33 columns (32 integer (32 of which binary)) and 190 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.076%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.86124
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -66.372 iterations 13
Cbc0038I Solution found of -66.372
Cbc0038I Relaxing continuous gives -66.372
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 33 columns, reduced to 23 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -66.372 to -70.2284 (0.01 seconds)
Cbc0038I Round again with cutoff of -78.3716
Cbc0038I Pass   2: suminf.    0.36122 (3) obj. -78.3716 iterations 3
Cbc0038I Pass   3: suminf.    0.38566 (3) obj. -78.3716 iterations 5
Cbc0038I Pass   4: suminf.    0.34340 (2) obj. -78.3716 iterations 1
Cbc0038I Pass   5: suminf.    2.42218 (9) obj. -78.3716 iterations 10
Cbc0038I Pass   6: suminf.    1.44009 (7) obj. -78.3716 iterations 5
Cbc0038I Pass   7: suminf.    0.40341 (4) obj. -78.3716 iterations 11
Cbc0038I Pass   8: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass   9: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  10: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  11: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  12: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  13: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  14: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  15: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I Pass  16: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass  17: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  18: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  19: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  20: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  21: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  22: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  23: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I Pass  24: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass  25: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  26: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  27: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  28: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  29: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  30: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  31: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 33 columns, reduced to 29 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -70.2284 - took 0.01 seconds
Cbc0012I Integer solution of -70.2284 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 64 rows 33 columns, reduced to 23 rows 12 columns
Cbc0031I 13 added rows had average density of 29.076923
Cbc0013I At root node, 13 cuts changed objective from -151.65922 to -103.11939 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1743 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 831 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -70.2284 best solution, best possible -103.11939 (1.52 seconds)
Cbc0001I Search completed - best objective -70.22839999999999, took 3145 iterations and 12 nodes (1.91 seconds)
Cbc0032I Strong branching done 202 times (2996 iterations), fathomed 0 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       1.21   (Wallclock seconds):       1.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-11) rows, 57 (-9) columns and 578 (-145) elements
Clp1000I sum of infeasibilities 5.64708e-06 - average 9.90715e-08, 19 fixed columns
Coin0506I Presolve 38 (-19) rows, 38 (-19) columns and 241 (-337) elements
Clp0006I 0  Obj 192.94572 Dual inf 2.6122051 (38)
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 207.14157
Clp0000I Optimal - objective value 207.14157
Coin0511I After Postsolve, objective 207.14157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 207.14157
Clp0000I Optimal - objective value 207.14157
Clp0000I Optimal - objective value 207.14157
Clp0000I Optimal - objective value 207.14157
Coin0511I After Postsolve, objective 207.14157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 207.1415698 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 57 columns (57 integer (57 of which binary)) and 584 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.979%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.05358
Cbc0038I Pass   1: suminf.    0.26070 (7) obj. -82.4931 iterations 21
Cbc0038I Pass   2: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Solution found of -47.7602
Cbc0038I Rounding solution of -59.0062 is better than previous of -47.7602

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -65.4584
Cbc0038I Pass   3: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass   4: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass   5: suminf.    0.37488 (2) obj. -65.4584 iterations 11
Cbc0038I Pass   6: suminf.    0.21905 (2) obj. -77.8983 iterations 3
Cbc0038I Pass   7: suminf.    0.06158 (2) obj. -65.4584 iterations 1
Cbc0038I Pass   8: suminf.    0.37488 (2) obj. -65.4584 iterations 2
Cbc0038I Pass   9: suminf.    0.88435 (7) obj. -65.4584 iterations 14
Cbc0038I Pass  10: suminf.    0.88435 (7) obj. -65.4584 iterations 0
Cbc0038I Pass  11: suminf.    0.44641 (3) obj. -65.4584 iterations 9
Cbc0038I Pass  12: suminf.    0.44641 (3) obj. -65.4584 iterations 1
Cbc0038I Pass  13: suminf.    0.45847 (2) obj. -65.4584 iterations 2
Cbc0038I Pass  14: suminf.    0.45847 (2) obj. -65.4584 iterations 0
Cbc0038I Pass  15: suminf.    0.59260 (3) obj. -65.4584 iterations 1
Cbc0038I Pass  16: suminf.    0.12500 (2) obj. -72.9229 iterations 1
Cbc0038I Pass  17: suminf.    0.91529 (12) obj. -65.4584 iterations 13
Cbc0038I Pass  18: suminf.    0.63592 (4) obj. -65.4584 iterations 3
Cbc0038I Pass  19: suminf.    0.43191 (10) obj. -65.4584 iterations 2
Cbc0038I Pass  20: suminf.    0.42989 (4) obj. -65.4584 iterations 1
Cbc0038I Pass  21: suminf.    0.49456 (9) obj. -65.4584 iterations 6
Cbc0038I Pass  22: suminf.    0.49456 (9) obj. -65.4584 iterations 0
Cbc0038I Pass  23: suminf.    1.63420 (4) obj. -65.4584 iterations 10
Cbc0038I Pass  24: suminf.    1.33403 (4) obj. -65.4584 iterations 1
Cbc0038I Pass  25: suminf.    1.63420 (4) obj. -65.4584 iterations 3
Cbc0038I Pass  26: suminf.    2.51223 (9) obj. -65.4584 iterations 7
Cbc0038I Pass  27: suminf.    2.51223 (9) obj. -65.4584 iterations 1
Cbc0038I Pass  28: suminf.    1.34069 (4) obj. -65.4584 iterations 8
Cbc0038I Pass  29: suminf.    1.34069 (4) obj. -65.4584 iterations 0
Cbc0038I Pass  30: suminf.    1.79085 (4) obj. -65.4584 iterations 2
Cbc0038I Pass  31: suminf.    1.79085 (4) obj. -65.4584 iterations 0
Cbc0038I Pass  32: suminf.    1.34069 (4) obj. -65.4584 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -47.7602 to -59.4636 (0.03 seconds)
Cbc0038I Round again with cutoff of -77.0721
Cbc0038I Pass  32: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass  33: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass  34: suminf.    0.27069 (2) obj. -77.0721 iterations 11
Cbc0038I Pass  35: suminf.    0.20859 (2) obj. -77.0721 iterations 3
Cbc0038I Pass  36: suminf.    0.27069 (2) obj. -77.0721 iterations 2
Cbc0038I Pass  37: suminf.    1.98261 (15) obj. -77.0721 iterations 27
Cbc0038I Pass  38: suminf.    1.49535 (9) obj. -77.0721 iterations 10
Cbc0038I Pass  39: suminf.    1.01683 (8) obj. -82.3358 iterations 1
Cbc0038I Pass  40: suminf.    1.51256 (9) obj. -77.0721 iterations 14
Cbc0038I Pass  41: suminf.    1.51256 (9) obj. -77.0721 iterations 0
Cbc0038I Pass  42: suminf.    1.33585 (5) obj. -77.0721 iterations 10
Cbc0038I Pass  43: suminf.    1.00266 (4) obj. -77.0721 iterations 3
Cbc0038I Pass  44: suminf.    1.13360 (4) obj. -77.0721 iterations 3
Cbc0038I Pass  45: suminf.    1.85834 (7) obj. -77.0721 iterations 8
Cbc0038I Pass  46: suminf.    1.86010 (7) obj. -77.0721 iterations 4
Cbc0038I Pass  47: suminf.    3.31713 (11) obj. -77.0721 iterations 7
Cbc0038I Pass  48: suminf.    2.80388 (10) obj. -77.0721 iterations 2
Cbc0038I Pass  49: suminf.    2.07531 (6) obj. -77.0721 iterations 12
Cbc0038I Pass  50: suminf.    1.81511 (6) obj. -77.0721 iterations 3
Cbc0038I Pass  51: suminf.    1.48994 (8) obj. -77.0721 iterations 8
Cbc0038I Pass  52: suminf.    1.23777 (9) obj. -77.0721 iterations 7
Cbc0038I Pass  53: suminf.    0.91868 (5) obj. -78.2917 iterations 4
Cbc0038I Pass  54: suminf.    1.23777 (9) obj. -77.0721 iterations 4
Cbc0038I Pass  55: suminf.    2.13174 (9) obj. -77.0721 iterations 12
Cbc0038I Pass  56: suminf.    1.85680 (9) obj. -78.9966 iterations 2
Cbc0038I Pass  57: suminf.    2.02536 (7) obj. -77.0721 iterations 8
Cbc0038I Pass  58: suminf.    2.02536 (7) obj. -77.0721 iterations 0
Cbc0038I Pass  59: suminf.    1.84163 (6) obj. -77.0721 iterations 3
Cbc0038I Pass  60: suminf.    1.84163 (6) obj. -77.0721 iterations 0
Cbc0038I Pass  61: suminf.    1.67946 (5) obj. -77.0721 iterations 5
Cbc0038I Rounding solution of -61.218 is better than previous of -59.4636

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -61.218 to -64.1361 (0.04 seconds)
Cbc0038I Round again with cutoff of -91.0085
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.94347 (9) obj. -91.0085 iterations 10
Cbc0038I Pass  62: suminf.    0.94347 (9) obj. -91.0085 iterations 1
Cbc0038I Pass  63: suminf.    1.43029 (13) obj. -91.0085 iterations 11
Cbc0038I Pass  64: suminf.    0.54195 (14) obj. -91.0085 iterations 1
Cbc0038I Pass  65: suminf.    0.54195 (14) obj. -91.0085 iterations 0
Cbc0038I Pass  66: suminf.    1.22434 (5) obj. -91.0085 iterations 16
Cbc0038I Pass  67: suminf.    1.03808 (5) obj. -91.0085 iterations 2
Cbc0038I Pass  68: suminf.    1.22434 (5) obj. -91.0085 iterations 3
Cbc0038I Pass  69: suminf.    2.06756 (9) obj. -91.0085 iterations 8
Cbc0038I Pass  70: suminf.    1.69755 (7) obj. -91.0085 iterations 4
Cbc0038I Pass  71: suminf.    1.45358 (7) obj. -91.0085 iterations 6
Cbc0038I Pass  72: suminf.    1.45296 (7) obj. -91.0085 iterations 1
Cbc0038I Pass  73: suminf.    1.72527 (7) obj. -91.0085 iterations 4
Cbc0038I Pass  74: suminf.    2.02450 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  75: suminf.    1.95660 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  76: suminf.    1.45358 (7) obj. -91.0085 iterations 8
Cbc0038I Pass  77: suminf.    1.99585 (7) obj. -91.0085 iterations 9
Cbc0038I Pass  78: suminf.    1.99585 (7) obj. -91.0085 iterations 0
Cbc0038I Pass  79: suminf.    1.64466 (6) obj. -91.0085 iterations 8
Cbc0038I Pass  80: suminf.    1.39956 (6) obj. -91.0085 iterations 2
Cbc0038I Pass  81: suminf.    1.64466 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  82: suminf.    2.41948 (10) obj. -91.0085 iterations 11
Cbc0038I Pass  83: suminf.    2.37472 (10) obj. -91.0085 iterations 1
Cbc0038I Pass  84: suminf.    1.60961 (5) obj. -91.0085 iterations 9
Cbc0038I Pass  85: suminf.    1.46762 (5) obj. -91.0085 iterations 2
Cbc0038I Pass  86: suminf.    1.48187 (6) obj. -91.0085 iterations 6
Cbc0038I Pass  87: suminf.    1.23623 (6) obj. -91.0085 iterations 2
Cbc0038I Pass  88: suminf.    1.48187 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  89: suminf.    1.84948 (8) obj. -91.0085 iterations 10
Cbc0038I Pass  90: suminf.    1.84948 (8) obj. -91.0085 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -64.1361 - took 0.04 seconds
Cbc0012I Integer solution of -64.13607 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 57 rows 57 columns, reduced to 19 rows 21 columns
Cbc0031I 34 added rows had average density of 22.382353
Cbc0013I At root node, 34 cuts changed objective from -123.52684 to -80.661256 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5332 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 944 row cuts average 53.3 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 73 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 330 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 506 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -64.13607 best solution, best possible -80.661256 (1.86 seconds)
Cbc0012I Integer solution of -64.81112 found by rounding after 3229 iterations and 8 nodes (2.01 seconds)
Cbc0004I Integer solution of -70.2284 found after 3387 iterations and 12 nodes (2.01 seconds)
Cbc0001I Search completed - best objective -70.22839999999999, took 3387 iterations and 12 nodes (2.01 seconds)
Cbc0032I Strong branching done 244 times (4290 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       2.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 64 (-5) rows, 33 (-2) columns and 187 (-8) elements
Clp1000I sum of infeasibilities 1.47506e-05 - average 2.30478e-07, 1 fixed columns
Coin0506I Presolve 62 (-2) rows, 32 (-1) columns and 181 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Coin0511I After Postsolve, objective 168.45576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Clp0000I Optimal - objective value 168.45576
Coin0511I After Postsolve, objective 168.45576, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.4557615 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 64 rows, 33 columns (32 integer (32 of which binary)) and 190 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.076%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.86124
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -66.372 iterations 13
Cbc0038I Solution found of -66.372
Cbc0038I Relaxing continuous gives -66.372
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 33 columns, reduced to 23 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -66.372 to -70.2284 (0.01 seconds)
Cbc0038I Round again with cutoff of -78.3716
Cbc0038I Pass   2: suminf.    0.36122 (3) obj. -78.3716 iterations 3
Cbc0038I Pass   3: suminf.    0.38566 (3) obj. -78.3716 iterations 5
Cbc0038I Pass   4: suminf.    0.34340 (2) obj. -78.3716 iterations 1
Cbc0038I Pass   5: suminf.    2.42218 (9) obj. -78.3716 iterations 10
Cbc0038I Pass   6: suminf.    1.44009 (7) obj. -78.3716 iterations 5
Cbc0038I Pass   7: suminf.    0.40341 (4) obj. -78.3716 iterations 11
Cbc0038I Pass   8: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass   9: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  10: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  11: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  12: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  13: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  14: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  15: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I Pass  16: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass  17: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  18: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  19: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  20: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  21: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  22: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  23: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I Pass  24: suminf.    0.78342 (4) obj. -78.3716 iterations 2
Cbc0038I Pass  25: suminf.    0.70679 (6) obj. -78.3716 iterations 2
Cbc0038I Pass  26: suminf.    0.77583 (3) obj. -78.3716 iterations 7
Cbc0038I Pass  27: suminf.    0.52165 (2) obj. -78.3716 iterations 1
Cbc0038I Pass  28: suminf.    0.24882 (3) obj. -78.3716 iterations 4
Cbc0038I Pass  29: suminf.    0.21564 (3) obj. -78.3716 iterations 1
Cbc0038I Pass  30: suminf.    0.40341 (4) obj. -78.3716 iterations 7
Cbc0038I Pass  31: suminf.    0.40341 (4) obj. -78.3716 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 33 columns, reduced to 29 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -70.2284 - took 0.02 seconds
Cbc0012I Integer solution of -70.2284 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 64 rows 33 columns, reduced to 23 rows 12 columns
Cbc0031I 13 added rows had average density of 29.076923
Cbc0013I At root node, 13 cuts changed objective from -151.65922 to -103.11939 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1743 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 831 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.694 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -70.2284 best solution, best possible -103.11939 (1.41 seconds)
Cbc0001I Search completed - best objective -70.22839999999999, took 3145 iterations and 12 nodes (1.74 seconds)
Cbc0032I Strong branching done 202 times (2996 iterations), fathomed 0 nodes and fixed 15 variables
Cbc0035I Maximum depth 5, 21 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 57 (-10) columns and 578 (-146) elements
Clp1000I sum of infeasibilities 5.64708e-06 - average 9.90715e-08, 19 fixed columns
Coin0506I Presolve 38 (-19) rows, 38 (-19) columns and 241 (-337) elements
Clp0006I 0  Obj 192.94572 Dual inf 2.6122051 (38)
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 207.14157
Clp0000I Optimal - objective value 207.14157
Coin0511I After Postsolve, objective 207.14157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 207.14157
Clp0000I Optimal - objective value 207.14157
Clp0000I Optimal - objective value 207.14157
Clp0000I Optimal - objective value 207.14157
Coin0511I After Postsolve, objective 207.14157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 207.1415698 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 57 columns (57 integer (57 of which binary)) and 584 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.979%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.05358
Cbc0038I Pass   1: suminf.    0.26070 (7) obj. -82.4931 iterations 21
Cbc0038I Pass   2: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Solution found of -47.7602
Cbc0038I Rounding solution of -59.0062 is better than previous of -47.7602

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -65.4584
Cbc0038I Pass   3: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass   4: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass   5: suminf.    0.37488 (2) obj. -65.4584 iterations 11
Cbc0038I Pass   6: suminf.    0.21905 (2) obj. -77.8983 iterations 3
Cbc0038I Pass   7: suminf.    0.06158 (2) obj. -65.4584 iterations 1
Cbc0038I Pass   8: suminf.    0.37488 (2) obj. -65.4584 iterations 2
Cbc0038I Pass   9: suminf.    0.88435 (7) obj. -65.4584 iterations 14
Cbc0038I Pass  10: suminf.    0.88435 (7) obj. -65.4584 iterations 0
Cbc0038I Pass  11: suminf.    0.44641 (3) obj. -65.4584 iterations 9
Cbc0038I Pass  12: suminf.    0.44641 (3) obj. -65.4584 iterations 1
Cbc0038I Pass  13: suminf.    0.45847 (2) obj. -65.4584 iterations 2
Cbc0038I Pass  14: suminf.    0.45847 (2) obj. -65.4584 iterations 0
Cbc0038I Pass  15: suminf.    0.59260 (3) obj. -65.4584 iterations 1
Cbc0038I Pass  16: suminf.    0.12500 (2) obj. -72.9229 iterations 1
Cbc0038I Pass  17: suminf.    0.91529 (12) obj. -65.4584 iterations 13
Cbc0038I Pass  18: suminf.    0.63592 (4) obj. -65.4584 iterations 3
Cbc0038I Pass  19: suminf.    0.43191 (10) obj. -65.4584 iterations 2
Cbc0038I Pass  20: suminf.    0.42989 (4) obj. -65.4584 iterations 1
Cbc0038I Pass  21: suminf.    0.49456 (9) obj. -65.4584 iterations 6
Cbc0038I Pass  22: suminf.    0.49456 (9) obj. -65.4584 iterations 0
Cbc0038I Pass  23: suminf.    1.63420 (4) obj. -65.4584 iterations 10
Cbc0038I Pass  24: suminf.    1.33403 (4) obj. -65.4584 iterations 1
Cbc0038I Pass  25: suminf.    1.63420 (4) obj. -65.4584 iterations 3
Cbc0038I Pass  26: suminf.    2.51223 (9) obj. -65.4584 iterations 7
Cbc0038I Pass  27: suminf.    2.51223 (9) obj. -65.4584 iterations 1
Cbc0038I Pass  28: suminf.    1.34069 (4) obj. -65.4584 iterations 8
Cbc0038I Pass  29: suminf.    1.34069 (4) obj. -65.4584 iterations 0
Cbc0038I Pass  30: suminf.    1.79085 (4) obj. -65.4584 iterations 2
Cbc0038I Pass  31: suminf.    1.79085 (4) obj. -65.4584 iterations 0
Cbc0038I Pass  32: suminf.    1.34069 (4) obj. -65.4584 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -47.7602 to -59.4636 (0.02 seconds)
Cbc0038I Round again with cutoff of -77.0721
Cbc0038I Pass  32: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass  33: suminf.    0.26070 (7) obj. -82.4931 iterations 0
Cbc0038I Pass  34: suminf.    0.27069 (2) obj. -77.0721 iterations 11
Cbc0038I Pass  35: suminf.    0.20859 (2) obj. -77.0721 iterations 3
Cbc0038I Pass  36: suminf.    0.27069 (2) obj. -77.0721 iterations 2
Cbc0038I Pass  37: suminf.    1.98261 (15) obj. -77.0721 iterations 27
Cbc0038I Pass  38: suminf.    1.49535 (9) obj. -77.0721 iterations 10
Cbc0038I Pass  39: suminf.    1.01683 (8) obj. -82.3358 iterations 1
Cbc0038I Pass  40: suminf.    1.51256 (9) obj. -77.0721 iterations 14
Cbc0038I Pass  41: suminf.    1.51256 (9) obj. -77.0721 iterations 0
Cbc0038I Pass  42: suminf.    1.33585 (5) obj. -77.0721 iterations 10
Cbc0038I Pass  43: suminf.    1.00266 (4) obj. -77.0721 iterations 3
Cbc0038I Pass  44: suminf.    1.13360 (4) obj. -77.0721 iterations 3
Cbc0038I Pass  45: suminf.    1.85834 (7) obj. -77.0721 iterations 8
Cbc0038I Pass  46: suminf.    1.86010 (7) obj. -77.0721 iterations 4
Cbc0038I Pass  47: suminf.    3.31713 (11) obj. -77.0721 iterations 7
Cbc0038I Pass  48: suminf.    2.80388 (10) obj. -77.0721 iterations 2
Cbc0038I Pass  49: suminf.    2.07531 (6) obj. -77.0721 iterations 12
Cbc0038I Pass  50: suminf.    1.81511 (6) obj. -77.0721 iterations 3
Cbc0038I Pass  51: suminf.    1.48994 (8) obj. -77.0721 iterations 8
Cbc0038I Pass  52: suminf.    1.23777 (9) obj. -77.0721 iterations 7
Cbc0038I Pass  53: suminf.    0.91868 (5) obj. -78.2917 iterations 4
Cbc0038I Pass  54: suminf.    1.23777 (9) obj. -77.0721 iterations 4
Cbc0038I Pass  55: suminf.    2.13174 (9) obj. -77.0721 iterations 12
Cbc0038I Pass  56: suminf.    1.85680 (9) obj. -78.9966 iterations 2
Cbc0038I Pass  57: suminf.    2.02536 (7) obj. -77.0721 iterations 8
Cbc0038I Pass  58: suminf.    2.02536 (7) obj. -77.0721 iterations 0
Cbc0038I Pass  59: suminf.    1.84163 (6) obj. -77.0721 iterations 3
Cbc0038I Pass  60: suminf.    1.84163 (6) obj. -77.0721 iterations 0
Cbc0038I Pass  61: suminf.    1.67946 (5) obj. -77.0721 iterations 5
Cbc0038I Rounding solution of -61.218 is better than previous of -59.4636

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -61.218 to -64.1361 (0.03 seconds)
Cbc0038I Round again with cutoff of -91.0085
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.94347 (9) obj. -91.0085 iterations 10
Cbc0038I Pass  62: suminf.    0.94347 (9) obj. -91.0085 iterations 1
Cbc0038I Pass  63: suminf.    1.43029 (13) obj. -91.0085 iterations 11
Cbc0038I Pass  64: suminf.    0.54195 (14) obj. -91.0085 iterations 1
Cbc0038I Pass  65: suminf.    0.54195 (14) obj. -91.0085 iterations 0
Cbc0038I Pass  66: suminf.    1.22434 (5) obj. -91.0085 iterations 16
Cbc0038I Pass  67: suminf.    1.03808 (5) obj. -91.0085 iterations 2
Cbc0038I Pass  68: suminf.    1.22434 (5) obj. -91.0085 iterations 3
Cbc0038I Pass  69: suminf.    2.06756 (9) obj. -91.0085 iterations 8
Cbc0038I Pass  70: suminf.    1.69755 (7) obj. -91.0085 iterations 4
Cbc0038I Pass  71: suminf.    1.45358 (7) obj. -91.0085 iterations 6
Cbc0038I Pass  72: suminf.    1.45296 (7) obj. -91.0085 iterations 1
Cbc0038I Pass  73: suminf.    1.72527 (7) obj. -91.0085 iterations 4
Cbc0038I Pass  74: suminf.    2.02450 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  75: suminf.    1.95660 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  76: suminf.    1.45358 (7) obj. -91.0085 iterations 8
Cbc0038I Pass  77: suminf.    1.99585 (7) obj. -91.0085 iterations 9
Cbc0038I Pass  78: suminf.    1.99585 (7) obj. -91.0085 iterations 0
Cbc0038I Pass  79: suminf.    1.64466 (6) obj. -91.0085 iterations 8
Cbc0038I Pass  80: suminf.    1.39956 (6) obj. -91.0085 iterations 2
Cbc0038I Pass  81: suminf.    1.64466 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  82: suminf.    2.41948 (10) obj. -91.0085 iterations 11
Cbc0038I Pass  83: suminf.    2.37472 (10) obj. -91.0085 iterations 1
Cbc0038I Pass  84: suminf.    1.60961 (5) obj. -91.0085 iterations 9
Cbc0038I Pass  85: suminf.    1.46762 (5) obj. -91.0085 iterations 2
Cbc0038I Pass  86: suminf.    1.48187 (6) obj. -91.0085 iterations 6
Cbc0038I Pass  87: suminf.    1.23623 (6) obj. -91.0085 iterations 2
Cbc0038I Pass  88: suminf.    1.48187 (6) obj. -91.0085 iterations 3
Cbc0038I Pass  89: suminf.    1.84948 (8) obj. -91.0085 iterations 10
Cbc0038I Pass  90: suminf.    1.84948 (8) obj. -91.0085 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 57 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -64.1361 - took 0.03 seconds
Cbc0012I Integer solution of -64.13607 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 57 rows 57 columns, reduced to 19 rows 21 columns
Cbc0031I 34 added rows had average density of 22.382353
Cbc0013I At root node, 34 cuts changed objective from -123.52684 to -80.661256 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5332 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 944 row cuts average 53.3 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 73 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 330 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 506 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.633 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -64.13607 best solution, best possible -80.661256 (1.49 seconds)
Cbc0012I Integer solution of -64.81112 found by rounding after 3229 iterations and 8 nodes (1.63 seconds)
Cbc0004I Integer solution of -70.2284 found after 3387 iterations and 12 nodes (1.63 seconds)
Cbc0001I Search completed - best objective -70.22839999999999, took 3387 iterations and 12 nodes (1.63 seconds)
Cbc0032I Strong branching done 244 times (4290 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.64

